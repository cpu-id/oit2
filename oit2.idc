#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
        // set 'loading idc file' mode
        set_inf_attr(INF_GENFLAGS, INFFL_LOADIDC|get_inf_attr(INF_GENFLAGS));
        GenInfo();            // various settings
        Segments();           // segmentation
        Enums();              // enumerations
        Structures();         // structure types
        ApplyStrucTInfos();   // structure type infos
        Patches();            // manual patches
        SegRegs();            // segment register values
        Bytes();              // individual bytes (code,data)
        Functions();          // function definitions
        // clear 'loading idc file' mode
        set_inf_attr(INF_GENFLAGS, ~INFFL_LOADIDC&get_inf_attr(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        delete_all_segments();    // purge database
	set_processor_type("metapc", SETPROC_USER);
	set_inf_attr(INF_COMPILER, 1);
	set_inf_attr(INF_STRLIT_BREAK, 0xA);
	set_flag(INF_CMTFLAG, SW_ALLCMT, 0);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_VOID, 0);
	set_inf_attr(INF_XREFNUM, 2);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_AUTO, 1);
	set_inf_attr(INF_INDENT, 16);
	set_inf_attr(INF_COMMENT, 40);
	set_inf_attr(INF_MAXREF, 0x10);
	add_default_til("vc6win");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	set_selector(0X1,0);
	;
	add_segm_ex(0X43DD0000,0X4474D000,0X1,1,1,2,ADDSEG_NOSREG);
	SegRename(0X43DD0000,"oit2");
	SegClass (0X43DD0000,"DATA");
	SegDefReg(0x43DD0000,"es",0x0);
	SegDefReg(0x43DD0000,"ss",0x0);
	SegDefReg(0x43DD0000,"ds",0x0);
	SegDefReg(0x43DD0000,"fs",0x0);
	SegDefReg(0x43DD0000,"gs",0x0);
	set_segm_type(0X43DD0000,3);
	set_inf_attr(INF_LOW_OFF, 0x43DD0000);
	set_inf_attr(INF_HIGH_OFF, 0x4474D000);
}

static Enums_0(id) {

	id = add_enum(-1,"__TI_flags",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"TI_IsConst",	0X1,	0x1);
	add_enum_member(id,"TI_IsVolatile",	0X2,	0x2);
	add_enum_member(id,"TI_IsUnaligned",	0X4,	0x4);
	add_enum_member(id,"TI_IsPure",	0X8,	0x8);
	add_enum_member(id,"TI_IsWinRT",	0X10,	0x10);
	id = add_enum(-1,"C_SDK::Classes::CSGameRulesProxy::GamePhase",0x1100000);
	add_enum_member(id,"C_SDK::Classes::CSGameRulesProxy::GamePhase::FIRST_HALF",	0X2,	-1);
	add_enum_member(id,"C_SDK::Classes::CSGameRulesProxy::GamePhase::SECOND_HALF",	0X3,	-1);
	add_enum_member(id,"C_SDK::Classes::CSGameRulesProxy::GamePhase::HALF_TIME",	0X4,	-1);
	add_enum_member(id,"C_SDK::Classes::CSGameRulesProxy::GamePhase::POST_GAME",	0X5,	-1);
	id = add_enum(-1,"C_SDK::Server::AnimstateMode",0x1100000);
	add_enum_member(id,"C_SDK::Server::AnimstateMode::DEFAULT",	0,	-1);
	add_enum_member(id,"C_SDK::Server::AnimstateMode::FAKE_ANGLES",	0X1,	-1);
	add_enum_member(id,"C_SDK::Server::AnimstateMode::NO_FAKE_ANGLES",	0X2,	-1);
	id = add_enum(-1,"__CT_flags",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"CT_IsSimpleType",	0X1,	0x1);
	add_enum_member(id,"CT_ByReferenceOnly",	0X2,	0x2);
	add_enum_member(id,"CT_HasVirtualBase",	0X4,	0x4);
	add_enum_member(id,"CT_IsWinRTHandle",	0X8,	0x8);
	add_enum_member(id,"CT_IsStdBadAlloc",	0X10,	0x10);
	id = add_enum(-1,"C_SDK::Security::FNV1A::Modules",0x1100000);
	add_enum_member(id,"C_SDK::Security::FNV1A::Modules::ClientPanorama",	0X63DC72EC,	-1);
	add_enum_member(id,"C_SDK::Security::FNV1A::Modules::NtDLL",	0X6FDE2541,	-1);
	add_enum_member(id,"C_SDK::Security::FNV1A::Modules::Tier0",	0X8DA048BB,	-1);
	add_enum_member(id,"C_SDK::Security::FNV1A::Modules::Client",	0X8F929C1E,	-1);
	add_enum_member(id,"C_SDK::Security::FNV1A::Modules::Engine",	0XEE05D83B,	-1);
	id = add_enum(-1,"C_SDK::Engine::IClientMode::FSN",0x1100000);
	add_enum_member(id,"C_SDK::Engine::IClientMode::FSN::FRAME_START",	0,	-1);
	add_enum_member(id,"C_SDK::Engine::IClientMode::FSN::FRAME_NET_UPDATE_START",	0X1,	-1);
	add_enum_member(id,"C_SDK::Engine::IClientMode::FSN::FRAME_NET_UPDATE_POSTDATAUPDATE_START",	0X2,	-1);
	add_enum_member(id,"C_SDK::Engine::IClientMode::FSN::FRAME_NET_UPDATE_POSTDATAUPDATE_END",	0X3,	-1);
	add_enum_member(id,"C_SDK::Engine::IClientMode::FSN::FRAME_NET_UPDATE_END",	0X4,	-1);
	add_enum_member(id,"C_SDK::Engine::IClientMode::FSN::FRAME_RENDER_START",	0X5,	-1);
	add_enum_member(id,"C_SDK::Engine::IClientMode::FSN::FRAME_RENDER_END",	0X6,	-1);
	add_enum_member(id,"C_SDK::Engine::IClientMode::FSN::FRAME_UNDEFINED",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"C_SDK::Classes::Player::HitGroup",0x1100000);
	add_enum_member(id,"C_SDK::Classes::Player::HitGroup::HEAD",	0,	-1);
	add_enum_member(id,"C_SDK::Classes::Player::HitGroup::CHEST",	0X1,	-1);
	add_enum_member(id,"C_SDK::Classes::Player::HitGroup::LEFT_ARM",	0X2,	-1);
	add_enum_member(id,"C_SDK::Classes::Player::HitGroup::RIGHT_ARM",	0X3,	-1);
	add_enum_member(id,"C_SDK::Classes::Player::HitGroup::STOMACH",	0X4,	-1);
	add_enum_member(id,"C_SDK::Classes::Player::HitGroup::LEFT_LEG",	0X5,	-1);
	add_enum_member(id,"C_SDK::Classes::Player::HitGroup::RIGHT_LEG",	0X6,	-1);
	id = add_enum(-1,"C_SDK::Classes::CBaseAnimation::Layers",0x1100000);
	add_enum_member(id,"C_SDK::Classes::CBaseAnimation::Layers::AIMMATRIX",	0,	-1);
	add_enum_member(id,"C_SDK::Classes::CBaseAnimation::Layers::WEAPON_ACTION",	0X1,	-1);
	add_enum_member(id,"C_SDK::Classes::CBaseAnimation::Layers::WEAPON_ACTION_RECROUCH",	0X2,	-1);
	add_enum_member(id,"C_SDK::Classes::CBaseAnimation::Layers::ADJUST",	0X3,	-1);
	add_enum_member(id,"C_SDK::Classes::CBaseAnimation::Layers::MOVEMENT_JUMP_OR_FALL",	0X4,	-1);
	add_enum_member(id,"C_SDK::Classes::CBaseAnimation::Layers::MOVEMENT_LAND_OR_CLIMB",	0X5,	-1);
	add_enum_member(id,"C_SDK::Classes::CBaseAnimation::Layers::MOVEMENT_MOVE",	0X6,	-1);
	add_enum_member(id,"C_SDK::Classes::CBaseAnimation::Layers::MOVEMENT_STRAFECHANGE",	0X7,	-1);
	add_enum_member(id,"C_SDK::Classes::CBaseAnimation::Layers::WHOLE_BODY",	0X8,	-1);
	add_enum_member(id,"C_SDK::Classes::CBaseAnimation::Layers::FLASHED",	0X9,	-1);
	add_enum_member(id,"C_SDK::Classes::CBaseAnimation::Layers::FLINCH",	0XA,	-1);
	add_enum_member(id,"C_SDK::Classes::CBaseAnimation::Layers::ALIVELOOP",	0XB,	-1);
	add_enum_member(id,"C_SDK::Classes::CBaseAnimation::Layers::LEAN",	0XC,	-1);
	add_enum_member(id,"C_SDK::Classes::CBaseAnimation::Layers::COUNT",	0XD,	-1);
	id = add_enum(-1,"C_SDK::Classes::Animation::Activity",0x1100000);
	add_enum_member(id,"ACT_RESET",	0,	-1);
	add_enum_member(id,"ACT_IDLE",	0X1,	-1);
	add_enum_member(id,"ACT_TRANSITION",	0X2,	-1);
	add_enum_member(id,"ACT_COVER",	0X3,	-1);
	add_enum_member(id,"ACT_COVER_MED",	0X4,	-1);
	add_enum_member(id,"ACT_COVER_LOW",	0X5,	-1);
	add_enum_member(id,"ACT_WALK",	0X6,	-1);
	add_enum_member(id,"ACT_WALK_AIM",	0X7,	-1);
	add_enum_member(id,"ACT_WALK_CROUCH",	0X8,	-1);
	add_enum_member(id,"ACT_WALK_CROUCH_AIM",	0X9,	-1);
	add_enum_member(id,"ACT_RUN",	0XA,	-1);
	add_enum_member(id,"ACT_RUN_AIM",	0XB,	-1);
	add_enum_member(id,"ACT_RUN_CROUCH",	0XC,	-1);
	add_enum_member(id,"ACT_RUN_CROUCH_AIM",	0XD,	-1);
	add_enum_member(id,"ACT_RUN_PROTECTED",	0XE,	-1);
	add_enum_member(id,"ACT_SCRIPT_CUSTOM_MOVE",	0XF,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK1",	0X10,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK2",	0X11,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK1_LOW",	0X12,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK2_LOW",	0X13,	-1);
	add_enum_member(id,"ACT_DIESIMPLE",	0X14,	-1);
	add_enum_member(id,"ACT_DIEBACKWARD",	0X15,	-1);
	add_enum_member(id,"ACT_DIEFORWARD",	0X16,	-1);
	add_enum_member(id,"ACT_DIEVIOLENT",	0X17,	-1);
	add_enum_member(id,"ACT_DIERAGDOLL",	0X18,	-1);
	add_enum_member(id,"ACT_FLY",	0X19,	-1);
	add_enum_member(id,"ACT_HOVER",	0X1A,	-1);
	add_enum_member(id,"ACT_GLIDE",	0X1B,	-1);
	add_enum_member(id,"ACT_SWIM",	0X1C,	-1);
	add_enum_member(id,"ACT_JUMP",	0X1D,	-1);
	add_enum_member(id,"ACT_HOP",	0X1E,	-1);
	add_enum_member(id,"ACT_LEAP",	0X1F,	-1);
	add_enum_member(id,"ACT_LAND",	0X20,	-1);
	add_enum_member(id,"ACT_CLIMB_UP",	0X21,	-1);
	add_enum_member(id,"ACT_CLIMB_DOWN",	0X22,	-1);
	add_enum_member(id,"ACT_CLIMB_DISMOUNT",	0X23,	-1);
	add_enum_member(id,"ACT_SHIPLADDER_UP",	0X24,	-1);
	add_enum_member(id,"ACT_SHIPLADDER_DOWN",	0X25,	-1);
	add_enum_member(id,"ACT_STRAFE_LEFT",	0X26,	-1);
	add_enum_member(id,"ACT_STRAFE_RIGHT",	0X27,	-1);
	add_enum_member(id,"ACT_ROLL_LEFT",	0X28,	-1);
	add_enum_member(id,"ACT_ROLL_RIGHT",	0X29,	-1);
	add_enum_member(id,"ACT_TURN_LEFT",	0X2A,	-1);
	add_enum_member(id,"ACT_TURN_RIGHT",	0X2B,	-1);
	add_enum_member(id,"ACT_CROUCH",	0X2C,	-1);
	add_enum_member(id,"ACT_CROUCHIDLE",	0X2D,	-1);
	add_enum_member(id,"ACT_STAND",	0X2E,	-1);
	add_enum_member(id,"ACT_USE",	0X2F,	-1);
	add_enum_member(id,"ACT_ALIEN_BURROW_IDLE",	0X30,	-1);
	add_enum_member(id,"ACT_ALIEN_BURROW_OUT",	0X31,	-1);
	add_enum_member(id,"ACT_SIGNAL1",	0X32,	-1);
	add_enum_member(id,"ACT_SIGNAL2",	0X33,	-1);
	add_enum_member(id,"ACT_SIGNAL3",	0X34,	-1);
	add_enum_member(id,"ACT_SIGNAL_ADVANCE",	0X35,	-1);
	add_enum_member(id,"ACT_SIGNAL_FORWARD",	0X36,	-1);
	add_enum_member(id,"ACT_SIGNAL_GROUP",	0X37,	-1);
	add_enum_member(id,"ACT_SIGNAL_HALT",	0X38,	-1);
	add_enum_member(id,"ACT_SIGNAL_LEFT",	0X39,	-1);
	add_enum_member(id,"ACT_SIGNAL_RIGHT",	0X3A,	-1);
	add_enum_member(id,"ACT_SIGNAL_TAKECOVER",	0X3B,	-1);
	add_enum_member(id,"ACT_LOOKBACK_RIGHT",	0X3C,	-1);
	add_enum_member(id,"ACT_LOOKBACK_LEFT",	0X3D,	-1);
	add_enum_member(id,"ACT_COWER",	0X3E,	-1);
	add_enum_member(id,"ACT_SMALL_FLINCH",	0X3F,	-1);
	add_enum_member(id,"ACT_BIG_FLINCH",	0X40,	-1);
	add_enum_member(id,"ACT_MELEE_ATTACK1",	0X41,	-1);
	add_enum_member(id,"ACT_MELEE_ATTACK2",	0X42,	-1);
	add_enum_member(id,"ACT_RELOAD",	0X43,	-1);
	add_enum_member(id,"ACT_RELOAD_START",	0X44,	-1);
	add_enum_member(id,"ACT_RELOAD_FINISH",	0X45,	-1);
	add_enum_member(id,"ACT_RELOAD_LOW",	0X46,	-1);
	add_enum_member(id,"ACT_ARM",	0X47,	-1);
	add_enum_member(id,"ACT_DISARM",	0X48,	-1);
	add_enum_member(id,"ACT_DROP_WEAPON",	0X49,	-1);
	add_enum_member(id,"ACT_DROP_WEAPON_SHOTGUN",	0X4A,	-1);
	add_enum_member(id,"ACT_PICKUP_GROUND",	0X4B,	-1);
	add_enum_member(id,"ACT_PICKUP_RACK",	0X4C,	-1);
	add_enum_member(id,"ACT_IDLE_ANGRY",	0X4D,	-1);
	add_enum_member(id,"ACT_IDLE_RELAXED",	0X4E,	-1);
	add_enum_member(id,"ACT_IDLE_STIMULATED",	0X4F,	-1);
	add_enum_member(id,"ACT_IDLE_AGITATED",	0X50,	-1);
	add_enum_member(id,"ACT_IDLE_STEALTH",	0X51,	-1);
	add_enum_member(id,"ACT_IDLE_HURT",	0X52,	-1);
	add_enum_member(id,"ACT_WALK_RELAXED",	0X53,	-1);
	add_enum_member(id,"ACT_WALK_STIMULATED",	0X54,	-1);
	add_enum_member(id,"ACT_WALK_AGITATED",	0X55,	-1);
	add_enum_member(id,"ACT_WALK_STEALTH",	0X56,	-1);
	add_enum_member(id,"ACT_RUN_RELAXED",	0X57,	-1);
	add_enum_member(id,"ACT_RUN_STIMULATED",	0X58,	-1);
	add_enum_member(id,"ACT_RUN_AGITATED",	0X59,	-1);
	add_enum_member(id,"ACT_RUN_STEALTH",	0X5A,	-1);
	add_enum_member(id,"ACT_IDLE_AIM_RELAXED",	0X5B,	-1);
	add_enum_member(id,"ACT_IDLE_AIM_STIMULATED",	0X5C,	-1);
	add_enum_member(id,"ACT_IDLE_AIM_AGITATED",	0X5D,	-1);
	add_enum_member(id,"ACT_IDLE_AIM_STEALTH",	0X5E,	-1);
	add_enum_member(id,"ACT_WALK_AIM_RELAXED",	0X5F,	-1);
	add_enum_member(id,"ACT_WALK_AIM_STIMULATED",	0X60,	-1);
	add_enum_member(id,"ACT_WALK_AIM_AGITATED",	0X61,	-1);
	add_enum_member(id,"ACT_WALK_AIM_STEALTH",	0X62,	-1);
	add_enum_member(id,"ACT_RUN_AIM_RELAXED",	0X63,	-1);
	add_enum_member(id,"ACT_RUN_AIM_STIMULATED",	0X64,	-1);
	add_enum_member(id,"ACT_RUN_AIM_AGITATED",	0X65,	-1);
	add_enum_member(id,"ACT_RUN_AIM_STEALTH",	0X66,	-1);
	add_enum_member(id,"ACT_CROUCHIDLE_STIMULATED",	0X67,	-1);
	add_enum_member(id,"ACT_CROUCHIDLE_AIM_STIMULATED",	0X68,	-1);
	add_enum_member(id,"ACT_CROUCHIDLE_AGITATED",	0X69,	-1);
	add_enum_member(id,"ACT_WALK_HURT",	0X6A,	-1);
	add_enum_member(id,"ACT_RUN_HURT",	0X6B,	-1);
	add_enum_member(id,"ACT_SPECIAL_ATTACK1",	0X6C,	-1);
	add_enum_member(id,"ACT_SPECIAL_ATTACK2",	0X6D,	-1);
	add_enum_member(id,"ACT_COMBAT_IDLE",	0X6E,	-1);
	add_enum_member(id,"ACT_WALK_SCARED",	0X6F,	-1);
	add_enum_member(id,"ACT_RUN_SCARED",	0X70,	-1);
	add_enum_member(id,"ACT_VICTORY_DANCE",	0X71,	-1);
	add_enum_member(id,"ACT_DIE_HEADSHOT",	0X72,	-1);
	add_enum_member(id,"ACT_DIE_CHESTSHOT",	0X73,	-1);
	add_enum_member(id,"ACT_DIE_GUTSHOT",	0X74,	-1);
	add_enum_member(id,"ACT_DIE_BACKSHOT",	0X75,	-1);
	add_enum_member(id,"ACT_FLINCH_HEAD",	0X76,	-1);
	add_enum_member(id,"ACT_FLINCH_CHEST",	0X77,	-1);
	add_enum_member(id,"ACT_FLINCH_STOMACH",	0X78,	-1);
	add_enum_member(id,"ACT_FLINCH_LEFTARM",	0X79,	-1);
	add_enum_member(id,"ACT_FLINCH_RIGHTARM",	0X7A,	-1);
	add_enum_member(id,"ACT_FLINCH_LEFTLEG",	0X7B,	-1);
	add_enum_member(id,"ACT_FLINCH_RIGHTLEG",	0X7C,	-1);
	add_enum_member(id,"ACT_FLINCH_PHYSICS",	0X7D,	-1);
	add_enum_member(id,"ACT_FLINCH_HEAD_BACK",	0X7E,	-1);
	add_enum_member(id,"ACT_FLINCH_HEAD_LEFT",	0X7F,	-1);
	add_enum_member(id,"ACT_FLINCH_HEAD_RIGHT",	0X80,	-1);
	add_enum_member(id,"ACT_FLINCH_CHEST_BACK",	0X81,	-1);
	add_enum_member(id,"ACT_FLINCH_STOMACH_BACK",	0X82,	-1);
	add_enum_member(id,"ACT_FLINCH_CROUCH_FRONT",	0X83,	-1);
	add_enum_member(id,"ACT_FLINCH_CROUCH_BACK",	0X84,	-1);
	add_enum_member(id,"ACT_FLINCH_CROUCH_LEFT",	0X85,	-1);
	add_enum_member(id,"ACT_FLINCH_CROUCH_RIGHT",	0X86,	-1);
	add_enum_member(id,"ACT_IDLE_ON_FIRE",	0X87,	-1);
	add_enum_member(id,"ACT_WALK_ON_FIRE",	0X88,	-1);
	add_enum_member(id,"ACT_RUN_ON_FIRE",	0X89,	-1);
	add_enum_member(id,"ACT_RAPPEL_LOOP",	0X8A,	-1);
	add_enum_member(id,"ACT_180_LEFT",	0X8B,	-1);
	add_enum_member(id,"ACT_180_RIGHT",	0X8C,	-1);
	add_enum_member(id,"ACT_90_LEFT",	0X8D,	-1);
	add_enum_member(id,"ACT_90_RIGHT",	0X8E,	-1);
	add_enum_member(id,"ACT_STEP_LEFT",	0X8F,	-1);
	add_enum_member(id,"ACT_STEP_RIGHT",	0X90,	-1);
	add_enum_member(id,"ACT_STEP_BACK",	0X91,	-1);
	add_enum_member(id,"ACT_STEP_FORE",	0X92,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK1",	0X93,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK2",	0X94,	-1);
	add_enum_member(id,"ACT_GESTURE_MELEE_ATTACK1",	0X95,	-1);
	add_enum_member(id,"ACT_GESTURE_MELEE_ATTACK2",	0X96,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK1_LOW",	0X97,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK2_LOW",	0X98,	-1);
	add_enum_member(id,"ACT_MELEE_ATTACK_SWING_GESTURE",	0X99,	-1);
	add_enum_member(id,"ACT_GESTURE_SMALL_FLINCH",	0X9A,	-1);
	add_enum_member(id,"ACT_GESTURE_BIG_FLINCH",	0X9B,	-1);
	add_enum_member(id,"ACT_GESTURE_FLINCH_BLAST",	0X9C,	-1);
	add_enum_member(id,"ACT_GESTURE_FLINCH_BLAST_SHOTGUN",	0X9D,	-1);
	add_enum_member(id,"ACT_GESTURE_FLINCH_BLAST_DAMAGED",	0X9E,	-1);
	add_enum_member(id,"ACT_GESTURE_FLINCH_BLAST_DAMAGED_SHOTGUN",	0X9F,	-1);
	add_enum_member(id,"ACT_GESTURE_FLINCH_HEAD",	0XA0,	-1);
	add_enum_member(id,"ACT_GESTURE_FLINCH_CHEST",	0XA1,	-1);
	add_enum_member(id,"ACT_GESTURE_FLINCH_STOMACH",	0XA2,	-1);
	add_enum_member(id,"ACT_GESTURE_FLINCH_LEFTARM",	0XA3,	-1);
	add_enum_member(id,"ACT_GESTURE_FLINCH_RIGHTARM",	0XA4,	-1);
	add_enum_member(id,"ACT_GESTURE_FLINCH_LEFTLEG",	0XA5,	-1);
	add_enum_member(id,"ACT_GESTURE_FLINCH_RIGHTLEG",	0XA6,	-1);
	add_enum_member(id,"ACT_GESTURE_TURN_LEFT",	0XA7,	-1);
	add_enum_member(id,"ACT_GESTURE_TURN_RIGHT",	0XA8,	-1);
	add_enum_member(id,"ACT_GESTURE_TURN_LEFT45",	0XA9,	-1);
	add_enum_member(id,"ACT_GESTURE_TURN_RIGHT45",	0XAA,	-1);
	add_enum_member(id,"ACT_GESTURE_TURN_LEFT90",	0XAB,	-1);
	add_enum_member(id,"ACT_GESTURE_TURN_RIGHT90",	0XAC,	-1);
	add_enum_member(id,"ACT_GESTURE_TURN_LEFT45_FLAT",	0XAD,	-1);
	add_enum_member(id,"ACT_GESTURE_TURN_RIGHT45_FLAT",	0XAE,	-1);
	add_enum_member(id,"ACT_GESTURE_TURN_LEFT90_FLAT",	0XAF,	-1);
	add_enum_member(id,"ACT_GESTURE_TURN_RIGHT90_FLAT",	0XB0,	-1);
	add_enum_member(id,"ACT_BARNACLE_HIT",	0XB1,	-1);
	add_enum_member(id,"ACT_BARNACLE_PULL",	0XB2,	-1);
	add_enum_member(id,"ACT_BARNACLE_CHOMP",	0XB3,	-1);
	add_enum_member(id,"ACT_BARNACLE_CHEW",	0XB4,	-1);
	add_enum_member(id,"ACT_DO_NOT_DISTURB",	0XB5,	-1);
	add_enum_member(id,"ACT_SPECIFIC_SEQUENCE",	0XB6,	-1);
	add_enum_member(id,"ACT_VM_DRAW",	0XB7,	-1);
	add_enum_member(id,"ACT_VM_HOLSTER",	0XB8,	-1);
	add_enum_member(id,"ACT_VM_IDLE",	0XB9,	-1);
	add_enum_member(id,"ACT_VM_FIDGET",	0XBA,	-1);
	add_enum_member(id,"ACT_VM_PULLBACK",	0XBB,	-1);
	add_enum_member(id,"ACT_VM_PULLBACK_HIGH",	0XBC,	-1);
	add_enum_member(id,"ACT_VM_PULLBACK_LOW",	0XBD,	-1);
	add_enum_member(id,"ACT_VM_THROW",	0XBE,	-1);
	add_enum_member(id,"ACT_VM_PULLPIN",	0XBF,	-1);
	add_enum_member(id,"ACT_VM_PRIMARYATTACK",	0XC0,	-1);
	add_enum_member(id,"ACT_VM_SECONDARYATTACK",	0XC1,	-1);
	add_enum_member(id,"ACT_VM_RELOAD",	0XC2,	-1);
	add_enum_member(id,"ACT_VM_DRYFIRE",	0XC3,	-1);
	add_enum_member(id,"ACT_VM_HITLEFT",	0XC4,	-1);
	add_enum_member(id,"ACT_VM_HITLEFT2",	0XC5,	-1);
	add_enum_member(id,"ACT_VM_HITRIGHT",	0XC6,	-1);
	add_enum_member(id,"ACT_VM_HITRIGHT2",	0XC7,	-1);
	add_enum_member(id,"ACT_VM_HITCENTER",	0XC8,	-1);
	add_enum_member(id,"ACT_VM_HITCENTER2",	0XC9,	-1);
	add_enum_member(id,"ACT_VM_MISSLEFT",	0XCA,	-1);
	add_enum_member(id,"ACT_VM_MISSLEFT2",	0XCB,	-1);
	add_enum_member(id,"ACT_VM_MISSRIGHT",	0XCC,	-1);
	add_enum_member(id,"ACT_VM_MISSRIGHT2",	0XCD,	-1);
	add_enum_member(id,"ACT_VM_MISSCENTER",	0XCE,	-1);
	add_enum_member(id,"ACT_VM_MISSCENTER2",	0XCF,	-1);
	add_enum_member(id,"ACT_VM_HAULBACK",	0XD0,	-1);
	add_enum_member(id,"ACT_VM_SWINGHARD",	0XD1,	-1);
	add_enum_member(id,"ACT_VM_SWINGMISS",	0XD2,	-1);
	add_enum_member(id,"ACT_VM_SWINGHIT",	0XD3,	-1);
	add_enum_member(id,"ACT_VM_IDLE_TO_LOWERED",	0XD4,	-1);
	add_enum_member(id,"ACT_VM_IDLE_LOWERED",	0XD5,	-1);
	add_enum_member(id,"ACT_VM_LOWERED_TO_IDLE",	0XD6,	-1);
	add_enum_member(id,"ACT_VM_RECOIL1",	0XD7,	-1);
	add_enum_member(id,"ACT_VM_RECOIL2",	0XD8,	-1);
	add_enum_member(id,"ACT_VM_RECOIL3",	0XD9,	-1);
	add_enum_member(id,"ACT_VM_PICKUP",	0XDA,	-1);
	add_enum_member(id,"ACT_VM_RELEASE",	0XDB,	-1);
	add_enum_member(id,"ACT_VM_ATTACH_SILENCER",	0XDC,	-1);
	add_enum_member(id,"ACT_VM_DETACH_SILENCER",	0XDD,	-1);
	add_enum_member(id,"ACT_VM_EMPTY_FIRE",	0XDE,	-1);
	add_enum_member(id,"ACT_VM_EMPTY_RELOAD",	0XDF,	-1);
	add_enum_member(id,"ACT_VM_EMPTY_DRAW",	0XE0,	-1);
	add_enum_member(id,"ACT_VM_EMPTY_IDLE",	0XE1,	-1);
	add_enum_member(id,"ACT_SLAM_STICKWALL_IDLE",	0XE2,	-1);
	add_enum_member(id,"ACT_SLAM_STICKWALL_ND_IDLE",	0XE3,	-1);
	add_enum_member(id,"ACT_SLAM_STICKWALL_ATTACH",	0XE4,	-1);
	add_enum_member(id,"ACT_SLAM_STICKWALL_ATTACH2",	0XE5,	-1);
	add_enum_member(id,"ACT_SLAM_STICKWALL_ND_ATTACH",	0XE6,	-1);
	add_enum_member(id,"ACT_SLAM_STICKWALL_ND_ATTACH2",	0XE7,	-1);
	add_enum_member(id,"ACT_SLAM_STICKWALL_DETONATE",	0XE8,	-1);
	add_enum_member(id,"ACT_SLAM_STICKWALL_DETONATOR_HOLSTER",	0XE9,	-1);
	add_enum_member(id,"ACT_SLAM_STICKWALL_DRAW",	0XEA,	-1);
	add_enum_member(id,"ACT_SLAM_STICKWALL_ND_DRAW",	0XEB,	-1);
	add_enum_member(id,"ACT_SLAM_STICKWALL_TO_THROW",	0XEC,	-1);
	add_enum_member(id,"ACT_SLAM_STICKWALL_TO_THROW_ND",	0XED,	-1);
	add_enum_member(id,"ACT_SLAM_STICKWALL_TO_TRIPMINE_ND",	0XEE,	-1);
	add_enum_member(id,"ACT_SLAM_THROW_IDLE",	0XEF,	-1);
	add_enum_member(id,"ACT_SLAM_THROW_ND_IDLE",	0XF0,	-1);
	add_enum_member(id,"ACT_SLAM_THROW_THROW",	0XF1,	-1);
	add_enum_member(id,"ACT_SLAM_THROW_THROW2",	0XF2,	-1);
	add_enum_member(id,"ACT_SLAM_THROW_THROW_ND",	0XF3,	-1);
	add_enum_member(id,"ACT_SLAM_THROW_THROW_ND2",	0XF4,	-1);
	add_enum_member(id,"ACT_SLAM_THROW_DRAW",	0XF5,	-1);
	add_enum_member(id,"ACT_SLAM_THROW_ND_DRAW",	0XF6,	-1);
	add_enum_member(id,"ACT_SLAM_THROW_TO_STICKWALL",	0XF7,	-1);
	add_enum_member(id,"ACT_SLAM_THROW_TO_STICKWALL_ND",	0XF8,	-1);
	add_enum_member(id,"ACT_SLAM_THROW_DETONATE",	0XF9,	-1);
	add_enum_member(id,"ACT_SLAM_THROW_DETONATOR_HOLSTER",	0XFA,	-1);
	add_enum_member(id,"ACT_SLAM_THROW_TO_TRIPMINE_ND",	0XFB,	-1);
	add_enum_member(id,"ACT_SLAM_TRIPMINE_IDLE",	0XFC,	-1);
	add_enum_member(id,"ACT_SLAM_TRIPMINE_DRAW",	0XFD,	-1);
	add_enum_member(id,"ACT_SLAM_TRIPMINE_ATTACH",	0XFE,	-1);
	add_enum_member(id,"ACT_SLAM_TRIPMINE_ATTACH2",	0XFF,	-1);
	add_enum_member(id,"ACT_SLAM_TRIPMINE_TO_STICKWALL_ND",	0X100,	-1);
	add_enum_member(id,"ACT_SLAM_TRIPMINE_TO_THROW_ND",	0X101,	-1);
	add_enum_member(id,"ACT_SLAM_DETONATOR_IDLE",	0X102,	-1);
	add_enum_member(id,"ACT_SLAM_DETONATOR_DRAW",	0X103,	-1);
	add_enum_member(id,"ACT_SLAM_DETONATOR_DETONATE",	0X104,	-1);
	add_enum_member(id,"ACT_SLAM_DETONATOR_HOLSTER",	0X105,	-1);
	add_enum_member(id,"ACT_SLAM_DETONATOR_STICKWALL_DRAW",	0X106,	-1);
	add_enum_member(id,"ACT_SLAM_DETONATOR_THROW_DRAW",	0X107,	-1);
	add_enum_member(id,"ACT_SHOTGUN_RELOAD_START",	0X108,	-1);
	add_enum_member(id,"ACT_SHOTGUN_RELOAD_FINISH",	0X109,	-1);
	add_enum_member(id,"ACT_SHOTGUN_PUMP",	0X10A,	-1);
	add_enum_member(id,"ACT_SMG2_IDLE2",	0X10B,	-1);
	add_enum_member(id,"ACT_SMG2_FIRE2",	0X10C,	-1);
	add_enum_member(id,"ACT_SMG2_DRAW2",	0X10D,	-1);
	add_enum_member(id,"ACT_SMG2_RELOAD2",	0X10E,	-1);
	add_enum_member(id,"ACT_SMG2_DRYFIRE2",	0X10F,	-1);
	add_enum_member(id,"ACT_SMG2_TOAUTO",	0X110,	-1);
	add_enum_member(id,"ACT_SMG2_TOBURST",	0X111,	-1);
	add_enum_member(id,"ACT_PHYSCANNON_UPGRADE",	0X112,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_AR1",	0X113,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_AR2",	0X114,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_AR2_LOW",	0X115,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_AR2_GRENADE",	0X116,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_HMG1",	0X117,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_ML",	0X118,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_SMG1",	0X119,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_SMG1_LOW",	0X11A,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_SMG2",	0X11B,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_SHOTGUN",	0X11C,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_SHOTGUN_LOW",	0X11D,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_PISTOL",	0X11E,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_PISTOL_LOW",	0X11F,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_SLAM",	0X120,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_TRIPWIRE",	0X121,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_THROW",	0X122,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_SNIPER_RIFLE",	0X123,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_RPG",	0X124,	-1);
	add_enum_member(id,"ACT_MELEE_ATTACK_SWING",	0X125,	-1);
	add_enum_member(id,"ACT_RANGE_AIM_LOW",	0X126,	-1);
	add_enum_member(id,"ACT_RANGE_AIM_SMG1_LOW",	0X127,	-1);
	add_enum_member(id,"ACT_RANGE_AIM_PISTOL_LOW",	0X128,	-1);
	add_enum_member(id,"ACT_RANGE_AIM_AR2_LOW",	0X129,	-1);
	add_enum_member(id,"ACT_COVER_PISTOL_LOW",	0X12A,	-1);
	add_enum_member(id,"ACT_COVER_SMG1_LOW",	0X12B,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK_AR1",	0X12C,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK_AR2",	0X12D,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK_AR2_GRENADE",	0X12E,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK_HMG1",	0X12F,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK_ML",	0X130,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK_SMG1",	0X131,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK_SMG1_LOW",	0X132,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK_SMG2",	0X133,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK_SHOTGUN",	0X134,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK_PISTOL",	0X135,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK_PISTOL_LOW",	0X136,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK_SLAM",	0X137,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK_TRIPWIRE",	0X138,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK_THROW",	0X139,	-1);
	add_enum_member(id,"ACT_GESTURE_RANGE_ATTACK_SNIPER_RIFLE",	0X13A,	-1);
	add_enum_member(id,"ACT_GESTURE_MELEE_ATTACK_SWING",	0X13B,	-1);
	add_enum_member(id,"ACT_IDLE_RIFLE",	0X13C,	-1);
	add_enum_member(id,"ACT_IDLE_SMG1",	0X13D,	-1);
	add_enum_member(id,"ACT_IDLE_ANGRY_SMG1",	0X13E,	-1);
	add_enum_member(id,"ACT_IDLE_PISTOL",	0X13F,	-1);
	add_enum_member(id,"ACT_IDLE_ANGRY_PISTOL",	0X140,	-1);
	add_enum_member(id,"ACT_IDLE_ANGRY_SHOTGUN",	0X141,	-1);
	add_enum_member(id,"ACT_IDLE_STEALTH_PISTOL",	0X142,	-1);
	add_enum_member(id,"ACT_IDLE_PACKAGE",	0X143,	-1);
	add_enum_member(id,"ACT_WALK_PACKAGE",	0X144,	-1);
	add_enum_member(id,"ACT_IDLE_SUITCASE",	0X145,	-1);
	add_enum_member(id,"ACT_WALK_SUITCASE",	0X146,	-1);
	add_enum_member(id,"ACT_IDLE_SMG1_RELAXED",	0X147,	-1);
	add_enum_member(id,"ACT_IDLE_SMG1_STIMULATED",	0X148,	-1);
	add_enum_member(id,"ACT_WALK_RIFLE_RELAXED",	0X149,	-1);
	add_enum_member(id,"ACT_RUN_RIFLE_RELAXED",	0X14A,	-1);
	add_enum_member(id,"ACT_WALK_RIFLE_STIMULATED",	0X14B,	-1);
	add_enum_member(id,"ACT_RUN_RIFLE_STIMULATED",	0X14C,	-1);
	add_enum_member(id,"ACT_IDLE_AIM_RIFLE_STIMULATED",	0X14D,	-1);
	add_enum_member(id,"ACT_WALK_AIM_RIFLE_STIMULATED",	0X14E,	-1);
	add_enum_member(id,"ACT_RUN_AIM_RIFLE_STIMULATED",	0X14F,	-1);
	add_enum_member(id,"ACT_IDLE_SHOTGUN_RELAXED",	0X150,	-1);
	add_enum_member(id,"ACT_IDLE_SHOTGUN_STIMULATED",	0X151,	-1);
	add_enum_member(id,"ACT_IDLE_SHOTGUN_AGITATED",	0X152,	-1);
	add_enum_member(id,"ACT_WALK_ANGRY",	0X153,	-1);
	add_enum_member(id,"ACT_POLICE_HARASS1",	0X154,	-1);
	add_enum_member(id,"ACT_POLICE_HARASS2",	0X155,	-1);
	add_enum_member(id,"ACT_IDLE_MANNEDGUN",	0X156,	-1);
	add_enum_member(id,"ACT_IDLE_MELEE",	0X157,	-1);
	add_enum_member(id,"ACT_IDLE_ANGRY_MELEE",	0X158,	-1);
	add_enum_member(id,"ACT_IDLE_RPG_RELAXED",	0X159,	-1);
	add_enum_member(id,"ACT_IDLE_RPG",	0X15A,	-1);
	add_enum_member(id,"ACT_IDLE_ANGRY_RPG",	0X15B,	-1);
	add_enum_member(id,"ACT_COVER_LOW_RPG",	0X15C,	-1);
	add_enum_member(id,"ACT_WALK_RPG",	0X15D,	-1);
	add_enum_member(id,"ACT_RUN_RPG",	0X15E,	-1);
	add_enum_member(id,"ACT_WALK_CROUCH_RPG",	0X15F,	-1);
	add_enum_member(id,"ACT_RUN_CROUCH_RPG",	0X160,	-1);
	add_enum_member(id,"ACT_WALK_RPG_RELAXED",	0X161,	-1);
	add_enum_member(id,"ACT_RUN_RPG_RELAXED",	0X162,	-1);
	add_enum_member(id,"ACT_WALK_RIFLE",	0X163,	-1);
	add_enum_member(id,"ACT_WALK_AIM_RIFLE",	0X164,	-1);
	add_enum_member(id,"ACT_WALK_CROUCH_RIFLE",	0X165,	-1);
	add_enum_member(id,"ACT_WALK_CROUCH_AIM_RIFLE",	0X166,	-1);
	add_enum_member(id,"ACT_RUN_RIFLE",	0X167,	-1);
	add_enum_member(id,"ACT_RUN_AIM_RIFLE",	0X168,	-1);
	add_enum_member(id,"ACT_RUN_CROUCH_RIFLE",	0X169,	-1);
	add_enum_member(id,"ACT_RUN_CROUCH_AIM_RIFLE",	0X16A,	-1);
	add_enum_member(id,"ACT_RUN_STEALTH_PISTOL",	0X16B,	-1);
	add_enum_member(id,"ACT_WALK_AIM_SHOTGUN",	0X16C,	-1);
	add_enum_member(id,"ACT_RUN_AIM_SHOTGUN",	0X16D,	-1);
	add_enum_member(id,"ACT_WALK_PISTOL",	0X16E,	-1);
	add_enum_member(id,"ACT_RUN_PISTOL",	0X16F,	-1);
	add_enum_member(id,"ACT_WALK_AIM_PISTOL",	0X170,	-1);
	add_enum_member(id,"ACT_RUN_AIM_PISTOL",	0X171,	-1);
	add_enum_member(id,"ACT_WALK_STEALTH_PISTOL",	0X172,	-1);
	add_enum_member(id,"ACT_WALK_AIM_STEALTH_PISTOL",	0X173,	-1);
	add_enum_member(id,"ACT_RUN_AIM_STEALTH_PISTOL",	0X174,	-1);
	add_enum_member(id,"ACT_RELOAD_PISTOL",	0X175,	-1);
	add_enum_member(id,"ACT_RELOAD_PISTOL_LOW",	0X176,	-1);
	add_enum_member(id,"ACT_RELOAD_SMG1",	0X177,	-1);
	add_enum_member(id,"ACT_RELOAD_SMG1_LOW",	0X178,	-1);
	add_enum_member(id,"ACT_RELOAD_SHOTGUN",	0X179,	-1);
	add_enum_member(id,"ACT_RELOAD_SHOTGUN_LOW",	0X17A,	-1);
	add_enum_member(id,"ACT_GESTURE_RELOAD",	0X17B,	-1);
	add_enum_member(id,"ACT_GESTURE_RELOAD_PISTOL",	0X17C,	-1);
	add_enum_member(id,"ACT_GESTURE_RELOAD_SMG1",	0X17D,	-1);
	add_enum_member(id,"ACT_GESTURE_RELOAD_SHOTGUN",	0X17E,	-1);
	add_enum_member(id,"ACT_BUSY_LEAN_LEFT",	0X17F,	-1);
	add_enum_member(id,"ACT_BUSY_LEAN_LEFT_ENTRY",	0X180,	-1);
	add_enum_member(id,"ACT_BUSY_LEAN_LEFT_EXIT",	0X181,	-1);
	add_enum_member(id,"ACT_BUSY_LEAN_BACK",	0X182,	-1);
	add_enum_member(id,"ACT_BUSY_LEAN_BACK_ENTRY",	0X183,	-1);
	add_enum_member(id,"ACT_BUSY_LEAN_BACK_EXIT",	0X184,	-1);
	add_enum_member(id,"ACT_BUSY_SIT_GROUND",	0X185,	-1);
	add_enum_member(id,"ACT_BUSY_SIT_GROUND_ENTRY",	0X186,	-1);
	add_enum_member(id,"ACT_BUSY_SIT_GROUND_EXIT",	0X187,	-1);
	add_enum_member(id,"ACT_BUSY_SIT_CHAIR",	0X188,	-1);
	add_enum_member(id,"ACT_BUSY_SIT_CHAIR_ENTRY",	0X189,	-1);
	add_enum_member(id,"ACT_BUSY_SIT_CHAIR_EXIT",	0X18A,	-1);
	add_enum_member(id,"ACT_BUSY_STAND",	0X18B,	-1);
	add_enum_member(id,"ACT_BUSY_QUEUE",	0X18C,	-1);
	add_enum_member(id,"ACT_DUCK_DODGE",	0X18D,	-1);
	add_enum_member(id,"ACT_DIE_BARNACLE_SWALLOW",	0X18E,	-1);
	add_enum_member(id,"ACT_GESTURE_BARNACLE_STRANGLE",	0X18F,	-1);
	add_enum_member(id,"ACT_PHYSCANNON_DETACH",	0X190,	-1);
	add_enum_member(id,"ACT_PHYSCANNON_ANIMATE",	0X191,	-1);
	add_enum_member(id,"ACT_PHYSCANNON_ANIMATE_PRE",	0X192,	-1);
	add_enum_member(id,"ACT_PHYSCANNON_ANIMATE_POST",	0X193,	-1);
	add_enum_member(id,"ACT_DIE_FRONTSIDE",	0X194,	-1);
	add_enum_member(id,"ACT_DIE_RIGHTSIDE",	0X195,	-1);
	add_enum_member(id,"ACT_DIE_BACKSIDE",	0X196,	-1);
	add_enum_member(id,"ACT_DIE_LEFTSIDE",	0X197,	-1);
	add_enum_member(id,"ACT_DIE_CROUCH_FRONTSIDE",	0X198,	-1);
	add_enum_member(id,"ACT_DIE_CROUCH_RIGHTSIDE",	0X199,	-1);
	add_enum_member(id,"ACT_DIE_CROUCH_BACKSIDE",	0X19A,	-1);
	add_enum_member(id,"ACT_DIE_CROUCH_LEFTSIDE",	0X19B,	-1);
	add_enum_member(id,"ACT_OPEN_DOOR",	0X19C,	-1);
	add_enum_member(id,"ACT_DI_ALYX_ZOMBIE_MELEE",	0X19D,	-1);
	add_enum_member(id,"ACT_DI_ALYX_ZOMBIE_TORSO_MELEE",	0X19E,	-1);
	add_enum_member(id,"ACT_DI_ALYX_HEADCRAB_MELEE",	0X19F,	-1);
	add_enum_member(id,"ACT_DI_ALYX_ANTLION",	0X1A0,	-1);
	add_enum_member(id,"ACT_DI_ALYX_ZOMBIE_SHOTGUN64",	0X1A1,	-1);
	add_enum_member(id,"ACT_DI_ALYX_ZOMBIE_SHOTGUN26",	0X1A2,	-1);
	add_enum_member(id,"ACT_READINESS_RELAXED_TO_STIMULATED",	0X1A3,	-1);
	add_enum_member(id,"ACT_READINESS_RELAXED_TO_STIMULATED_WALK",	0X1A4,	-1);
	add_enum_member(id,"ACT_READINESS_AGITATED_TO_STIMULATED",	0X1A5,	-1);
	add_enum_member(id,"ACT_READINESS_STIMULATED_TO_RELAXED",	0X1A6,	-1);
	add_enum_member(id,"ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED",	0X1A7,	-1);
	add_enum_member(id,"ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED_WALK",	0X1A8,	-1);
	add_enum_member(id,"ACT_READINESS_PISTOL_AGITATED_TO_STIMULATED",	0X1A9,	-1);
	add_enum_member(id,"ACT_READINESS_PISTOL_STIMULATED_TO_RELAXED",	0X1AA,	-1);
	add_enum_member(id,"ACT_IDLE_CARRY",	0X1AB,	-1);
	add_enum_member(id,"ACT_WALK_CARRY",	0X1AC,	-1);
	add_enum_member(id,"ACT_STARTDYING",	0X1AD,	-1);
	add_enum_member(id,"ACT_DYINGLOOP",	0X1AE,	-1);
	add_enum_member(id,"ACT_DYINGTODEAD",	0X1AF,	-1);
	add_enum_member(id,"ACT_RIDE_MANNED_GUN",	0X1B0,	-1);
	add_enum_member(id,"ACT_VM_SPRINT_ENTER",	0X1B1,	-1);
	add_enum_member(id,"ACT_VM_SPRINT_IDLE",	0X1B2,	-1);
	add_enum_member(id,"ACT_VM_SPRINT_LEAVE",	0X1B3,	-1);
	add_enum_member(id,"ACT_FIRE_START",	0X1B4,	-1);
	add_enum_member(id,"ACT_FIRE_LOOP",	0X1B5,	-1);
	add_enum_member(id,"ACT_FIRE_END",	0X1B6,	-1);
	add_enum_member(id,"ACT_CROUCHING_GRENADEIDLE",	0X1B7,	-1);
	add_enum_member(id,"ACT_CROUCHING_GRENADEREADY",	0X1B8,	-1);
	add_enum_member(id,"ACT_CROUCHING_PRIMARYATTACK",	0X1B9,	-1);
	add_enum_member(id,"ACT_OVERLAY_GRENADEIDLE",	0X1BA,	-1);
	add_enum_member(id,"ACT_OVERLAY_GRENADEREADY",	0X1BB,	-1);
	add_enum_member(id,"ACT_OVERLAY_PRIMARYATTACK",	0X1BC,	-1);
	add_enum_member(id,"ACT_OVERLAY_SHIELD_UP",	0X1BD,	-1);
	add_enum_member(id,"ACT_OVERLAY_SHIELD_DOWN",	0X1BE,	-1);
	add_enum_member(id,"ACT_OVERLAY_SHIELD_UP_IDLE",	0X1BF,	-1);
	add_enum_member(id,"ACT_OVERLAY_SHIELD_ATTACK",	0X1C0,	-1);
	add_enum_member(id,"ACT_OVERLAY_SHIELD_KNOCKBACK",	0X1C1,	-1);
	add_enum_member(id,"ACT_SHIELD_UP",	0X1C2,	-1);
	add_enum_member(id,"ACT_SHIELD_DOWN",	0X1C3,	-1);
	add_enum_member(id,"ACT_SHIELD_UP_IDLE",	0X1C4,	-1);
	add_enum_member(id,"ACT_SHIELD_ATTACK",	0X1C5,	-1);
	add_enum_member(id,"ACT_SHIELD_KNOCKBACK",	0X1C6,	-1);
	add_enum_member(id,"ACT_CROUCHING_SHIELD_UP",	0X1C7,	-1);
	add_enum_member(id,"ACT_CROUCHING_SHIELD_DOWN",	0X1C8,	-1);
	add_enum_member(id,"ACT_CROUCHING_SHIELD_UP_IDLE",	0X1C9,	-1);
	add_enum_member(id,"ACT_CROUCHING_SHIELD_ATTACK",	0X1CA,	-1);
	add_enum_member(id,"ACT_CROUCHING_SHIELD_KNOCKBACK",	0X1CB,	-1);
	add_enum_member(id,"ACT_TURNRIGHT45",	0X1CC,	-1);
	add_enum_member(id,"ACT_TURNLEFT45",	0X1CD,	-1);
	add_enum_member(id,"ACT_TURN",	0X1CE,	-1);
	add_enum_member(id,"ACT_OBJ_ASSEMBLING",	0X1CF,	-1);
	add_enum_member(id,"ACT_OBJ_DISMANTLING",	0X1D0,	-1);
	add_enum_member(id,"ACT_OBJ_STARTUP",	0X1D1,	-1);
	add_enum_member(id,"ACT_OBJ_RUNNING",	0X1D2,	-1);
	add_enum_member(id,"ACT_OBJ_IDLE",	0X1D3,	-1);
	add_enum_member(id,"ACT_OBJ_PLACING",	0X1D4,	-1);
	add_enum_member(id,"ACT_OBJ_DETERIORATING",	0X1D5,	-1);
	add_enum_member(id,"ACT_OBJ_UPGRADING",	0X1D6,	-1);
	add_enum_member(id,"ACT_DEPLOY",	0X1D7,	-1);
	add_enum_member(id,"ACT_DEPLOY_IDLE",	0X1D8,	-1);
	add_enum_member(id,"ACT_UNDEPLOY",	0X1D9,	-1);
	add_enum_member(id,"ACT_CROSSBOW_DRAW_UNLOADED",	0X1DA,	-1);
	add_enum_member(id,"ACT_GAUSS_SPINUP",	0X1DB,	-1);
	add_enum_member(id,"ACT_GAUSS_SPINCYCLE",	0X1DC,	-1);
	add_enum_member(id,"ACT_VM_PRIMARYATTACK_SILENCED",	0X1DD,	-1);
	add_enum_member(id,"ACT_VM_RELOAD_SILENCED",	0X1DE,	-1);
	add_enum_member(id,"ACT_VM_DRYFIRE_SILENCED",	0X1DF,	-1);
	add_enum_member(id,"ACT_VM_IDLE_SILENCED",	0X1E0,	-1);
	add_enum_member(id,"ACT_VM_DRAW_SILENCED",	0X1E1,	-1);
	add_enum_member(id,"ACT_VM_IDLE_EMPTY_LEFT",	0X1E2,	-1);
	add_enum_member(id,"ACT_VM_DRYFIRE_LEFT",	0X1E3,	-1);
	add_enum_member(id,"ACT_VM_IS_DRAW",	0X1E4,	-1);
	add_enum_member(id,"ACT_VM_IS_HOLSTER",	0X1E5,	-1);
	add_enum_member(id,"ACT_VM_IS_IDLE",	0X1E6,	-1);
	add_enum_member(id,"ACT_VM_IS_PRIMARYATTACK",	0X1E7,	-1);
	add_enum_member(id,"ACT_PLAYER_IDLE_FIRE",	0X1E8,	-1);
	add_enum_member(id,"ACT_PLAYER_CROUCH_FIRE",	0X1E9,	-1);
	add_enum_member(id,"ACT_PLAYER_CROUCH_WALK_FIRE",	0X1EA,	-1);
	add_enum_member(id,"ACT_PLAYER_WALK_FIRE",	0X1EB,	-1);
	add_enum_member(id,"ACT_PLAYER_RUN_FIRE",	0X1EC,	-1);
	add_enum_member(id,"ACT_IDLETORUN",	0X1ED,	-1);
	add_enum_member(id,"ACT_RUNTOIDLE",	0X1EE,	-1);
	add_enum_member(id,"ACT_VM_DRAW_DEPLOYED",	0X1EF,	-1);
	add_enum_member(id,"ACT_HL2MP_IDLE_MELEE",	0X1F0,	-1);
	add_enum_member(id,"ACT_HL2MP_RUN_MELEE",	0X1F1,	-1);
	add_enum_member(id,"ACT_HL2MP_IDLE_CROUCH_MELEE",	0X1F2,	-1);
	add_enum_member(id,"ACT_HL2MP_WALK_CROUCH_MELEE",	0X1F3,	-1);
	add_enum_member(id,"ACT_HL2MP_GESTURE_RANGE_ATTACK_MELEE",	0X1F4,	-1);
	add_enum_member(id,"ACT_HL2MP_GESTURE_RELOAD_MELEE",	0X1F5,	-1);
	add_enum_member(id,"ACT_HL2MP_JUMP_MELEE",	0X1F6,	-1);
	add_enum_member(id,"ACT_VM_FIZZLE",	0X1F7,	-1);
	add_enum_member(id,"ACT_MP_STAND_IDLE",	0X1F8,	-1);
	add_enum_member(id,"ACT_MP_CROUCH_IDLE",	0X1F9,	-1);
	add_enum_member(id,"ACT_MP_CROUCH_DEPLOYED_IDLE",	0X1FA,	-1);
	add_enum_member(id,"ACT_MP_CROUCH_DEPLOYED",	0X1FB,	-1);
	add_enum_member(id,"ACT_MP_DEPLOYED_IDLE",	0X1FC,	-1);
	add_enum_member(id,"ACT_MP_RUN",	0X1FD,	-1);
	add_enum_member(id,"ACT_MP_WALK",	0X1FE,	-1);
	add_enum_member(id,"ACT_MP_AIRWALK",	0X1FF,	-1);
	add_enum_member(id,"ACT_MP_CROUCHWALK",	0X200,	-1);
	add_enum_member(id,"ACT_MP_SPRINT",	0X201,	-1);
	add_enum_member(id,"ACT_MP_JUMP",	0X202,	-1);
	add_enum_member(id,"ACT_MP_JUMP_START",	0X203,	-1);
	add_enum_member(id,"ACT_MP_JUMP_FLOAT",	0X204,	-1);
	add_enum_member(id,"ACT_MP_JUMP_LAND",	0X205,	-1);
	add_enum_member(id,"ACT_MP_JUMP_IMPACT_N",	0X206,	-1);
	add_enum_member(id,"ACT_MP_JUMP_IMPACT_E",	0X207,	-1);
	add_enum_member(id,"ACT_MP_JUMP_IMPACT_W",	0X208,	-1);
	add_enum_member(id,"ACT_MP_JUMP_IMPACT_S",	0X209,	-1);
	add_enum_member(id,"ACT_MP_JUMP_IMPACT_TOP",	0X20A,	-1);
	add_enum_member(id,"ACT_MP_DOUBLEJUMP",	0X20B,	-1);
	add_enum_member(id,"ACT_MP_SWIM",	0X20C,	-1);
	add_enum_member(id,"ACT_MP_DEPLOYED",	0X20D,	-1);
	add_enum_member(id,"ACT_MP_SWIM_DEPLOYED",	0X20E,	-1);
	add_enum_member(id,"ACT_MP_VCD",	0X20F,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_PRIMARYFIRE",	0X210,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_PRIMARYFIRE_DEPLOYED",	0X211,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_SECONDARYFIRE",	0X212,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_GRENADE",	0X213,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_PRIMARYFIRE",	0X214,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_PRIMARYFIRE_DEPLOYED",	0X215,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_SECONDARYFIRE",	0X216,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_GRENADE",	0X217,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_PRIMARYFIRE",	0X218,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_SECONDARYFIRE",	0X219,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_GRENADE",	0X21A,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_AIRWALK_PRIMARYFIRE",	0X21B,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_AIRWALK_SECONDARYFIRE",	0X21C,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_AIRWALK_GRENADE",	0X21D,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_STAND",	0X21E,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_STAND_LOOP",	0X21F,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_STAND_END",	0X220,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_CROUCH",	0X221,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_CROUCH_LOOP",	0X222,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_CROUCH_END",	0X223,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_SWIM",	0X224,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_SWIM_LOOP",	0X225,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_SWIM_END",	0X226,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_AIRWALK",	0X227,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_AIRWALK_LOOP",	0X228,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_AIRWALK_END",	0X229,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_PREFIRE",	0X22A,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_POSTFIRE",	0X22B,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_STARTFIRE",	0X22C,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_PREFIRE",	0X22D,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_POSTFIRE",	0X22E,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_PREFIRE",	0X22F,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_POSTFIRE",	0X230,	-1);
	add_enum_member(id,"ACT_MP_STAND_PRIMARY",	0X231,	-1);
	add_enum_member(id,"ACT_MP_CROUCH_PRIMARY",	0X232,	-1);
	add_enum_member(id,"ACT_MP_RUN_PRIMARY",	0X233,	-1);
	add_enum_member(id,"ACT_MP_WALK_PRIMARY",	0X234,	-1);
	add_enum_member(id,"ACT_MP_AIRWALK_PRIMARY",	0X235,	-1);
	add_enum_member(id,"ACT_MP_CROUCHWALK_PRIMARY",	0X236,	-1);
	add_enum_member(id,"ACT_MP_JUMP_PRIMARY",	0X237,	-1);
	add_enum_member(id,"ACT_MP_JUMP_START_PRIMARY",	0X238,	-1);
	add_enum_member(id,"ACT_MP_JUMP_FLOAT_PRIMARY",	0X239,	-1);
	add_enum_member(id,"ACT_MP_JUMP_LAND_PRIMARY",	0X23A,	-1);
	add_enum_member(id,"ACT_MP_SWIM_PRIMARY",	0X23B,	-1);
	add_enum_member(id,"ACT_MP_DEPLOYED_PRIMARY",	0X23C,	-1);
	add_enum_member(id,"ACT_MP_SWIM_DEPLOYED_PRIMARY",	0X23D,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_PRIMARY",	0X23E,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_PRIMARY_DEPLOYED",	0X23F,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_PRIMARY",	0X240,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_PRIMARY_DEPLOYED",	0X241,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_PRIMARY",	0X242,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_AIRWALK_PRIMARY",	0X243,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_STAND_PRIMARY",	0X244,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_STAND_PRIMARY_LOOP",	0X245,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_STAND_PRIMARY_END",	0X246,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_CROUCH_PRIMARY",	0X247,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_CROUCH_PRIMARY_LOOP",	0X248,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_CROUCH_PRIMARY_END",	0X249,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_SWIM_PRIMARY",	0X24A,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_SWIM_PRIMARY_LOOP",	0X24B,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_SWIM_PRIMARY_END",	0X24C,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_AIRWALK_PRIMARY",	0X24D,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_AIRWALK_PRIMARY_LOOP",	0X24E,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_AIRWALK_PRIMARY_END",	0X24F,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_GRENADE_PRIMARY",	0X250,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_GRENADE_PRIMARY",	0X251,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_GRENADE_PRIMARY",	0X252,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_AIRWALK_GRENADE_PRIMARY",	0X253,	-1);
	add_enum_member(id,"ACT_MP_STAND_SECONDARY",	0X254,	-1);
	add_enum_member(id,"ACT_MP_CROUCH_SECONDARY",	0X255,	-1);
	add_enum_member(id,"ACT_MP_RUN_SECONDARY",	0X256,	-1);
	add_enum_member(id,"ACT_MP_WALK_SECONDARY",	0X257,	-1);
	add_enum_member(id,"ACT_MP_AIRWALK_SECONDARY",	0X258,	-1);
	add_enum_member(id,"ACT_MP_CROUCHWALK_SECONDARY",	0X259,	-1);
	add_enum_member(id,"ACT_MP_JUMP_SECONDARY",	0X25A,	-1);
	add_enum_member(id,"ACT_MP_JUMP_START_SECONDARY",	0X25B,	-1);
	add_enum_member(id,"ACT_MP_JUMP_FLOAT_SECONDARY",	0X25C,	-1);
	add_enum_member(id,"ACT_MP_JUMP_LAND_SECONDARY",	0X25D,	-1);
	add_enum_member(id,"ACT_MP_SWIM_SECONDARY",	0X25E,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_SECONDARY",	0X25F,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_SECONDARY",	0X260,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_SECONDARY",	0X261,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_AIRWALK_SECONDARY",	0X262,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_STAND_SECONDARY",	0X263,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_STAND_SECONDARY_LOOP",	0X264,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_STAND_SECONDARY_END",	0X265,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_CROUCH_SECONDARY",	0X266,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_CROUCH_SECONDARY_LOOP",	0X267,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_CROUCH_SECONDARY_END",	0X268,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_SWIM_SECONDARY",	0X269,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_SWIM_SECONDARY_LOOP",	0X26A,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_SWIM_SECONDARY_END",	0X26B,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_AIRWALK_SECONDARY",	0X26C,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_AIRWALK_SECONDARY_LOOP",	0X26D,	-1);
	add_enum_member(id,"ACT_MP_RELOAD_AIRWALK_SECONDARY_END",	0X26E,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_GRENADE_SECONDARY",	0X26F,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_GRENADE_SECONDARY",	0X270,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_GRENADE_SECONDARY",	0X271,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_AIRWALK_GRENADE_SECONDARY",	0X272,	-1);
	add_enum_member(id,"ACT_MP_STAND_MELEE",	0X273,	-1);
	add_enum_member(id,"ACT_MP_CROUCH_MELEE",	0X274,	-1);
	add_enum_member(id,"ACT_MP_RUN_MELEE",	0X275,	-1);
	add_enum_member(id,"ACT_MP_WALK_MELEE",	0X276,	-1);
	add_enum_member(id,"ACT_MP_AIRWALK_MELEE",	0X277,	-1);
	add_enum_member(id,"ACT_MP_CROUCHWALK_MELEE",	0X278,	-1);
	add_enum_member(id,"ACT_MP_JUMP_MELEE",	0X279,	-1);
	add_enum_member(id,"ACT_MP_JUMP_START_MELEE",	0X27A,	-1);
	add_enum_member(id,"ACT_MP_JUMP_FLOAT_MELEE",	0X27B,	-1);
	add_enum_member(id,"ACT_MP_JUMP_LAND_MELEE",	0X27C,	-1);
	add_enum_member(id,"ACT_MP_SWIM_MELEE",	0X27D,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_MELEE",	0X27E,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_MELEE_SECONDARY",	0X27F,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_MELEE",	0X280,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_MELEE_SECONDARY",	0X281,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_MELEE",	0X282,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_AIRWALK_MELEE",	0X283,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_GRENADE_MELEE",	0X284,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_GRENADE_MELEE",	0X285,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_GRENADE_MELEE",	0X286,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_AIRWALK_GRENADE_MELEE",	0X287,	-1);
	add_enum_member(id,"ACT_MP_STAND_ITEM1",	0X288,	-1);
	add_enum_member(id,"ACT_MP_CROUCH_ITEM1",	0X289,	-1);
	add_enum_member(id,"ACT_MP_RUN_ITEM1",	0X28A,	-1);
	add_enum_member(id,"ACT_MP_WALK_ITEM1",	0X28B,	-1);
	add_enum_member(id,"ACT_MP_AIRWALK_ITEM1",	0X28C,	-1);
	add_enum_member(id,"ACT_MP_CROUCHWALK_ITEM1",	0X28D,	-1);
	add_enum_member(id,"ACT_MP_JUMP_ITEM1",	0X28E,	-1);
	add_enum_member(id,"ACT_MP_JUMP_START_ITEM1",	0X28F,	-1);
	add_enum_member(id,"ACT_MP_JUMP_FLOAT_ITEM1",	0X290,	-1);
	add_enum_member(id,"ACT_MP_JUMP_LAND_ITEM1",	0X291,	-1);
	add_enum_member(id,"ACT_MP_SWIM_ITEM1",	0X292,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_ITEM1",	0X293,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_ITEM1_SECONDARY",	0X294,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_ITEM1",	0X295,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_ITEM1_SECONDARY",	0X296,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_ITEM1",	0X297,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_AIRWALK_ITEM1",	0X298,	-1);
	add_enum_member(id,"ACT_MP_STAND_ITEM2",	0X299,	-1);
	add_enum_member(id,"ACT_MP_CROUCH_ITEM2",	0X29A,	-1);
	add_enum_member(id,"ACT_MP_RUN_ITEM2",	0X29B,	-1);
	add_enum_member(id,"ACT_MP_WALK_ITEM2",	0X29C,	-1);
	add_enum_member(id,"ACT_MP_AIRWALK_ITEM2",	0X29D,	-1);
	add_enum_member(id,"ACT_MP_CROUCHWALK_ITEM2",	0X29E,	-1);
	add_enum_member(id,"ACT_MP_JUMP_ITEM2",	0X29F,	-1);
	add_enum_member(id,"ACT_MP_JUMP_START_ITEM2",	0X2A0,	-1);
	add_enum_member(id,"ACT_MP_JUMP_FLOAT_ITEM2",	0X2A1,	-1);
	add_enum_member(id,"ACT_MP_JUMP_LAND_ITEM2",	0X2A2,	-1);
	add_enum_member(id,"ACT_MP_SWIM_ITEM2",	0X2A3,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_ITEM2",	0X2A4,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_ITEM2_SECONDARY",	0X2A5,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_ITEM2",	0X2A6,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_ITEM2_SECONDARY",	0X2A7,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_ITEM2",	0X2A8,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_AIRWALK_ITEM2",	0X2A9,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_FLINCH",	0X2AA,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_FLINCH_PRIMARY",	0X2AB,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_FLINCH_SECONDARY",	0X2AC,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_FLINCH_MELEE",	0X2AD,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_FLINCH_ITEM1",	0X2AE,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_FLINCH_ITEM2",	0X2AF,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_FLINCH_HEAD",	0X2B0,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_FLINCH_CHEST",	0X2B1,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_FLINCH_STOMACH",	0X2B2,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_FLINCH_LEFTARM",	0X2B3,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_FLINCH_RIGHTARM",	0X2B4,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_FLINCH_LEFTLEG",	0X2B5,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_FLINCH_RIGHTLEG",	0X2B6,	-1);
	add_enum_member(id,"ACT_MP_GRENADE1_DRAW",	0X2B7,	-1);
	add_enum_member(id,"ACT_MP_GRENADE1_IDLE",	0X2B8,	-1);
	add_enum_member(id,"ACT_MP_GRENADE1_ATTACK",	0X2B9,	-1);
	add_enum_member(id,"ACT_MP_GRENADE2_DRAW",	0X2BA,	-1);
	add_enum_member(id,"ACT_MP_GRENADE2_IDLE",	0X2BB,	-1);
	add_enum_member(id,"ACT_MP_GRENADE2_ATTACK",	0X2BC,	-1);
	add_enum_member(id,"ACT_MP_PRIMARY_GRENADE1_DRAW",	0X2BD,	-1);
	add_enum_member(id,"ACT_MP_PRIMARY_GRENADE1_IDLE",	0X2BE,	-1);
	add_enum_member(id,"ACT_MP_PRIMARY_GRENADE1_ATTACK",	0X2BF,	-1);
	add_enum_member(id,"ACT_MP_PRIMARY_GRENADE2_DRAW",	0X2C0,	-1);
	add_enum_member(id,"ACT_MP_PRIMARY_GRENADE2_IDLE",	0X2C1,	-1);
	add_enum_member(id,"ACT_MP_PRIMARY_GRENADE2_ATTACK",	0X2C2,	-1);
	add_enum_member(id,"ACT_MP_SECONDARY_GRENADE1_DRAW",	0X2C3,	-1);
	add_enum_member(id,"ACT_MP_SECONDARY_GRENADE1_IDLE",	0X2C4,	-1);
	add_enum_member(id,"ACT_MP_SECONDARY_GRENADE1_ATTACK",	0X2C5,	-1);
	add_enum_member(id,"ACT_MP_SECONDARY_GRENADE2_DRAW",	0X2C6,	-1);
	add_enum_member(id,"ACT_MP_SECONDARY_GRENADE2_IDLE",	0X2C7,	-1);
	add_enum_member(id,"ACT_MP_SECONDARY_GRENADE2_ATTACK",	0X2C8,	-1);
	add_enum_member(id,"ACT_MP_MELEE_GRENADE1_DRAW",	0X2C9,	-1);
	add_enum_member(id,"ACT_MP_MELEE_GRENADE1_IDLE",	0X2CA,	-1);
	add_enum_member(id,"ACT_MP_MELEE_GRENADE1_ATTACK",	0X2CB,	-1);
	add_enum_member(id,"ACT_MP_MELEE_GRENADE2_DRAW",	0X2CC,	-1);
	add_enum_member(id,"ACT_MP_MELEE_GRENADE2_IDLE",	0X2CD,	-1);
	add_enum_member(id,"ACT_MP_MELEE_GRENADE2_ATTACK",	0X2CE,	-1);
	add_enum_member(id,"ACT_MP_ITEM1_GRENADE1_DRAW",	0X2CF,	-1);
	add_enum_member(id,"ACT_MP_ITEM1_GRENADE1_IDLE",	0X2D0,	-1);
	add_enum_member(id,"ACT_MP_ITEM1_GRENADE1_ATTACK",	0X2D1,	-1);
	add_enum_member(id,"ACT_MP_ITEM1_GRENADE2_DRAW",	0X2D2,	-1);
	add_enum_member(id,"ACT_MP_ITEM1_GRENADE2_IDLE",	0X2D3,	-1);
	add_enum_member(id,"ACT_MP_ITEM1_GRENADE2_ATTACK",	0X2D4,	-1);
	add_enum_member(id,"ACT_MP_ITEM2_GRENADE1_DRAW",	0X2D5,	-1);
	add_enum_member(id,"ACT_MP_ITEM2_GRENADE1_IDLE",	0X2D6,	-1);
	add_enum_member(id,"ACT_MP_ITEM2_GRENADE1_ATTACK",	0X2D7,	-1);
	add_enum_member(id,"ACT_MP_ITEM2_GRENADE2_DRAW",	0X2D8,	-1);
	add_enum_member(id,"ACT_MP_ITEM2_GRENADE2_IDLE",	0X2D9,	-1);
	add_enum_member(id,"ACT_MP_ITEM2_GRENADE2_ATTACK",	0X2DA,	-1);
	add_enum_member(id,"ACT_MP_STAND_BUILDING",	0X2DB,	-1);
	add_enum_member(id,"ACT_MP_CROUCH_BUILDING",	0X2DC,	-1);
	add_enum_member(id,"ACT_MP_RUN_BUILDING",	0X2DD,	-1);
	add_enum_member(id,"ACT_MP_WALK_BUILDING",	0X2DE,	-1);
	add_enum_member(id,"ACT_MP_AIRWALK_BUILDING",	0X2DF,	-1);
	add_enum_member(id,"ACT_MP_CROUCHWALK_BUILDING",	0X2E0,	-1);
	add_enum_member(id,"ACT_MP_JUMP_BUILDING",	0X2E1,	-1);
	add_enum_member(id,"ACT_MP_JUMP_START_BUILDING",	0X2E2,	-1);
	add_enum_member(id,"ACT_MP_JUMP_FLOAT_BUILDING",	0X2E3,	-1);
	add_enum_member(id,"ACT_MP_JUMP_LAND_BUILDING",	0X2E4,	-1);
	add_enum_member(id,"ACT_MP_SWIM_BUILDING",	0X2E5,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_BUILDING",	0X2E6,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_BUILDING",	0X2E7,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_BUILDING",	0X2E8,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_AIRWALK_BUILDING",	0X2E9,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_GRENADE_BUILDING",	0X2EA,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_CROUCH_GRENADE_BUILDING",	0X2EB,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_GRENADE_BUILDING",	0X2EC,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_AIRWALK_GRENADE_BUILDING",	0X2ED,	-1);
	add_enum_member(id,"ACT_MP_STAND_PDA",	0X2EE,	-1);
	add_enum_member(id,"ACT_MP_CROUCH_PDA",	0X2EF,	-1);
	add_enum_member(id,"ACT_MP_RUN_PDA",	0X2F0,	-1);
	add_enum_member(id,"ACT_MP_WALK_PDA",	0X2F1,	-1);
	add_enum_member(id,"ACT_MP_AIRWALK_PDA",	0X2F2,	-1);
	add_enum_member(id,"ACT_MP_CROUCHWALK_PDA",	0X2F3,	-1);
	add_enum_member(id,"ACT_MP_JUMP_PDA",	0X2F4,	-1);
	add_enum_member(id,"ACT_MP_JUMP_START_PDA",	0X2F5,	-1);
	add_enum_member(id,"ACT_MP_JUMP_FLOAT_PDA",	0X2F6,	-1);
	add_enum_member(id,"ACT_MP_JUMP_LAND_PDA",	0X2F7,	-1);
	add_enum_member(id,"ACT_MP_SWIM_PDA",	0X2F8,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_STAND_PDA",	0X2F9,	-1);
	add_enum_member(id,"ACT_MP_ATTACK_SWIM_PDA",	0X2FA,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_HANDMOUTH",	0X2FB,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FINGERPOINT",	0X2FC,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FISTPUMP",	0X2FD,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_THUMBSUP",	0X2FE,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODYES",	0X2FF,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODNO",	0X300,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_HANDMOUTH_PRIMARY",	0X301,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FINGERPOINT_PRIMARY",	0X302,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FISTPUMP_PRIMARY",	0X303,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_THUMBSUP_PRIMARY",	0X304,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODYES_PRIMARY",	0X305,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODNO_PRIMARY",	0X306,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_HANDMOUTH_SECONDARY",	0X307,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FINGERPOINT_SECONDARY",	0X308,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FISTPUMP_SECONDARY",	0X309,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_THUMBSUP_SECONDARY",	0X30A,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODYES_SECONDARY",	0X30B,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODNO_SECONDARY",	0X30C,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_HANDMOUTH_MELEE",	0X30D,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FINGERPOINT_MELEE",	0X30E,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FISTPUMP_MELEE",	0X30F,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_THUMBSUP_MELEE",	0X310,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODYES_MELEE",	0X311,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODNO_MELEE",	0X312,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_HANDMOUTH_ITEM1",	0X313,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FINGERPOINT_ITEM1",	0X314,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FISTPUMP_ITEM1",	0X315,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_THUMBSUP_ITEM1",	0X316,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODYES_ITEM1",	0X317,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODNO_ITEM1",	0X318,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_HANDMOUTH_ITEM2",	0X319,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FINGERPOINT_ITEM2",	0X31A,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FISTPUMP_ITEM2",	0X31B,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_THUMBSUP_ITEM2",	0X31C,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODYES_ITEM2",	0X31D,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODNO_ITEM2",	0X31E,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_HANDMOUTH_BUILDING",	0X31F,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FINGERPOINT_BUILDING",	0X320,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FISTPUMP_BUILDING",	0X321,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_THUMBSUP_BUILDING",	0X322,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODYES_BUILDING",	0X323,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODNO_BUILDING",	0X324,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_HANDMOUTH_PDA",	0X325,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FINGERPOINT_PDA",	0X326,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_FISTPUMP_PDA",	0X327,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_THUMBSUP_PDA",	0X328,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODYES_PDA",	0X329,	-1);
	add_enum_member(id,"ACT_MP_GESTURE_VC_NODNO_PDA",	0X32A,	-1);
	add_enum_member(id,"ACT_VM_UNUSABLE",	0X32B,	-1);
	add_enum_member(id,"ACT_VM_UNUSABLE_TO_USABLE",	0X32C,	-1);
	add_enum_member(id,"ACT_VM_USABLE_TO_UNUSABLE",	0X32D,	-1);
	add_enum_member(id,"ACT_PRIMARY_VM_DRAW",	0X32E,	-1);
	add_enum_member(id,"ACT_PRIMARY_VM_HOLSTER",	0X32F,	-1);
	add_enum_member(id,"ACT_PRIMARY_VM_IDLE",	0X330,	-1);
	add_enum_member(id,"ACT_PRIMARY_VM_PULLBACK",	0X331,	-1);
	add_enum_member(id,"ACT_PRIMARY_VM_PRIMARYATTACK",	0X332,	-1);
	add_enum_member(id,"ACT_PRIMARY_VM_SECONDARYATTACK",	0X333,	-1);
	add_enum_member(id,"ACT_PRIMARY_VM_RELOAD",	0X334,	-1);
	add_enum_member(id,"ACT_PRIMARY_VM_DRYFIRE",	0X335,	-1);
	add_enum_member(id,"ACT_PRIMARY_VM_IDLE_TO_LOWERED",	0X336,	-1);
	add_enum_member(id,"ACT_PRIMARY_VM_IDLE_LOWERED",	0X337,	-1);
	add_enum_member(id,"ACT_PRIMARY_VM_LOWERED_TO_IDLE",	0X338,	-1);
	add_enum_member(id,"ACT_SECONDARY_VM_DRAW",	0X339,	-1);
	add_enum_member(id,"ACT_SECONDARY_VM_HOLSTER",	0X33A,	-1);
	add_enum_member(id,"ACT_SECONDARY_VM_IDLE",	0X33B,	-1);
	add_enum_member(id,"ACT_SECONDARY_VM_PULLBACK",	0X33C,	-1);
	add_enum_member(id,"ACT_SECONDARY_VM_PRIMARYATTACK",	0X33D,	-1);
	add_enum_member(id,"ACT_SECONDARY_VM_SECONDARYATTACK",	0X33E,	-1);
	add_enum_member(id,"ACT_SECONDARY_VM_RELOAD",	0X33F,	-1);
	add_enum_member(id,"ACT_SECONDARY_VM_DRYFIRE",	0X340,	-1);
	add_enum_member(id,"ACT_SECONDARY_VM_IDLE_TO_LOWERED",	0X341,	-1);
	add_enum_member(id,"ACT_SECONDARY_VM_IDLE_LOWERED",	0X342,	-1);
	add_enum_member(id,"ACT_SECONDARY_VM_LOWERED_TO_IDLE",	0X343,	-1);
	add_enum_member(id,"ACT_MELEE_VM_DRAW",	0X344,	-1);
	add_enum_member(id,"ACT_MELEE_VM_HOLSTER",	0X345,	-1);
	add_enum_member(id,"ACT_MELEE_VM_IDLE",	0X346,	-1);
	add_enum_member(id,"ACT_MELEE_VM_PULLBACK",	0X347,	-1);
	add_enum_member(id,"ACT_MELEE_VM_PRIMARYATTACK",	0X348,	-1);
	add_enum_member(id,"ACT_MELEE_VM_SECONDARYATTACK",	0X349,	-1);
	add_enum_member(id,"ACT_MELEE_VM_RELOAD",	0X34A,	-1);
	add_enum_member(id,"ACT_MELEE_VM_DRYFIRE",	0X34B,	-1);
	add_enum_member(id,"ACT_MELEE_VM_IDLE_TO_LOWERED",	0X34C,	-1);
	add_enum_member(id,"ACT_MELEE_VM_IDLE_LOWERED",	0X34D,	-1);
	add_enum_member(id,"ACT_MELEE_VM_LOWERED_TO_IDLE",	0X34E,	-1);
	add_enum_member(id,"ACT_PDA_VM_DRAW",	0X34F,	-1);
	add_enum_member(id,"ACT_PDA_VM_HOLSTER",	0X350,	-1);
	add_enum_member(id,"ACT_PDA_VM_IDLE",	0X351,	-1);
	add_enum_member(id,"ACT_PDA_VM_PULLBACK",	0X352,	-1);
	add_enum_member(id,"ACT_PDA_VM_PRIMARYATTACK",	0X353,	-1);
	add_enum_member(id,"ACT_PDA_VM_SECONDARYATTACK",	0X354,	-1);
	add_enum_member(id,"ACT_PDA_VM_RELOAD",	0X355,	-1);
	add_enum_member(id,"ACT_PDA_VM_DRYFIRE",	0X356,	-1);
	add_enum_member(id,"ACT_PDA_VM_IDLE_TO_LOWERED",	0X357,	-1);
	add_enum_member(id,"ACT_PDA_VM_IDLE_LOWERED",	0X358,	-1);
	add_enum_member(id,"ACT_PDA_VM_LOWERED_TO_IDLE",	0X359,	-1);
	add_enum_member(id,"ACT_ITEM1_VM_DRAW",	0X35A,	-1);
	add_enum_member(id,"ACT_ITEM1_VM_HOLSTER",	0X35B,	-1);
	add_enum_member(id,"ACT_ITEM1_VM_IDLE",	0X35C,	-1);
	add_enum_member(id,"ACT_ITEM1_VM_PULLBACK",	0X35D,	-1);
	add_enum_member(id,"ACT_ITEM1_VM_PRIMARYATTACK",	0X35E,	-1);
	add_enum_member(id,"ACT_ITEM1_VM_SECONDARYATTACK",	0X35F,	-1);
	add_enum_member(id,"ACT_ITEM1_VM_RELOAD",	0X360,	-1);
	add_enum_member(id,"ACT_ITEM1_VM_DRYFIRE",	0X361,	-1);
	add_enum_member(id,"ACT_ITEM1_VM_IDLE_TO_LOWERED",	0X362,	-1);
	add_enum_member(id,"ACT_ITEM1_VM_IDLE_LOWERED",	0X363,	-1);
	add_enum_member(id,"ACT_ITEM1_VM_LOWERED_TO_IDLE",	0X364,	-1);
	add_enum_member(id,"ACT_ITEM2_VM_DRAW",	0X365,	-1);
	add_enum_member(id,"ACT_ITEM2_VM_HOLSTER",	0X366,	-1);
	add_enum_member(id,"ACT_ITEM2_VM_IDLE",	0X367,	-1);
	add_enum_member(id,"ACT_ITEM2_VM_PULLBACK",	0X368,	-1);
	add_enum_member(id,"ACT_ITEM2_VM_PRIMARYATTACK",	0X369,	-1);
	add_enum_member(id,"ACT_ITEM2_VM_SECONDARYATTACK",	0X36A,	-1);
	add_enum_member(id,"ACT_ITEM2_VM_RELOAD",	0X36B,	-1);
	add_enum_member(id,"ACT_ITEM2_VM_DRYFIRE",	0X36C,	-1);
	add_enum_member(id,"ACT_ITEM2_VM_IDLE_TO_LOWERED",	0X36D,	-1);
	add_enum_member(id,"ACT_ITEM2_VM_IDLE_LOWERED",	0X36E,	-1);
	add_enum_member(id,"ACT_ITEM2_VM_LOWERED_TO_IDLE",	0X36F,	-1);
	add_enum_member(id,"ACT_RELOAD_SUCCEED",	0X370,	-1);
	add_enum_member(id,"ACT_RELOAD_FAIL",	0X371,	-1);
	add_enum_member(id,"ACT_WALK_AIM_AUTOGUN",	0X372,	-1);
	add_enum_member(id,"ACT_RUN_AIM_AUTOGUN",	0X373,	-1);
	add_enum_member(id,"ACT_IDLE_AUTOGUN",	0X374,	-1);
	add_enum_member(id,"ACT_IDLE_AIM_AUTOGUN",	0X375,	-1);
	add_enum_member(id,"ACT_RELOAD_AUTOGUN",	0X376,	-1);
	add_enum_member(id,"ACT_CROUCH_IDLE_AUTOGUN",	0X377,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_AUTOGUN",	0X378,	-1);
	add_enum_member(id,"ACT_JUMP_AUTOGUN",	0X379,	-1);
	add_enum_member(id,"ACT_IDLE_AIM_PISTOL",	0X37A,	-1);
	add_enum_member(id,"ACT_WALK_AIM_DUAL",	0X37B,	-1);
	add_enum_member(id,"ACT_RUN_AIM_DUAL",	0X37C,	-1);
	add_enum_member(id,"ACT_IDLE_DUAL",	0X37D,	-1);
	add_enum_member(id,"ACT_IDLE_AIM_DUAL",	0X37E,	-1);
	add_enum_member(id,"ACT_RELOAD_DUAL",	0X37F,	-1);
	add_enum_member(id,"ACT_CROUCH_IDLE_DUAL",	0X380,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_DUAL",	0X381,	-1);
	add_enum_member(id,"ACT_JUMP_DUAL",	0X382,	-1);
	add_enum_member(id,"ACT_IDLE_SHOTGUN",	0X383,	-1);
	add_enum_member(id,"ACT_IDLE_AIM_SHOTGUN",	0X384,	-1);
	add_enum_member(id,"ACT_CROUCH_IDLE_SHOTGUN",	0X385,	-1);
	add_enum_member(id,"ACT_JUMP_SHOTGUN",	0X386,	-1);
	add_enum_member(id,"ACT_IDLE_AIM_RIFLE",	0X387,	-1);
	add_enum_member(id,"ACT_RELOAD_RIFLE",	0X388,	-1);
	add_enum_member(id,"ACT_CROUCH_IDLE_RIFLE",	0X389,	-1);
	add_enum_member(id,"ACT_RANGE_ATTACK_RIFLE",	0X38A,	-1);
	add_enum_member(id,"ACT_JUMP_RIFLE",	0X38B,	-1);
	add_enum_member(id,"ACT_SLEEP",	0X38C,	-1);
	add_enum_member(id,"ACT_WAKE",	0X38D,	-1);
	add_enum_member(id,"ACT_FLICK_LEFT",	0X38E,	-1);
	add_enum_member(id,"ACT_FLICK_LEFT_MIDDLE",	0X38F,	-1);
	add_enum_member(id,"ACT_FLICK_RIGHT_MIDDLE",	0X390,	-1);
	add_enum_member(id,"ACT_FLICK_RIGHT",	0X391,	-1);
	add_enum_member(id,"ACT_SPINAROUND",	0X392,	-1);
	add_enum_member(id,"ACT_PREP_TO_FIRE",	0X393,	-1);
	add_enum_member(id,"ACT_FIRE",	0X394,	-1);
	add_enum_member(id,"ACT_FIRE_RECOVER",	0X395,	-1);
	add_enum_member(id,"ACT_SPRAY",	0X396,	-1);
	add_enum_member(id,"ACT_PREP_EXPLODE",	0X397,	-1);
	add_enum_member(id,"ACT_EXPLODE",	0X398,	-1);
	add_enum_member(id,"ACT_DOTA_IDLE",	0X399,	-1);
	add_enum_member(id,"ACT_DOTA_RUN",	0X39A,	-1);
	add_enum_member(id,"ACT_DOTA_ATTACK",	0X39B,	-1);
	add_enum_member(id,"ACT_DOTA_ATTACK_EVENT",	0X39C,	-1);
	add_enum_member(id,"ACT_DOTA_DIE",	0X39D,	-1);
	add_enum_member(id,"ACT_DOTA_FLINCH",	0X39E,	-1);
	add_enum_member(id,"ACT_DOTA_DISABLED",	0X39F,	-1);
	add_enum_member(id,"ACT_DOTA_CAST_ABILITY_1",	0X3A0,	-1);
	add_enum_member(id,"ACT_DOTA_CAST_ABILITY_2",	0X3A1,	-1);
	add_enum_member(id,"ACT_DOTA_CAST_ABILITY_3",	0X3A2,	-1);
	add_enum_member(id,"ACT_DOTA_CAST_ABILITY_4",	0X3A3,	-1);
	add_enum_member(id,"ACT_DOTA_OVERRIDE_ABILITY_1",	0X3A4,	-1);
	add_enum_member(id,"ACT_DOTA_OVERRIDE_ABILITY_2",	0X3A5,	-1);
	add_enum_member(id,"ACT_DOTA_OVERRIDE_ABILITY_3",	0X3A6,	-1);
	add_enum_member(id,"ACT_DOTA_OVERRIDE_ABILITY_4",	0X3A7,	-1);
	add_enum_member(id,"ACT_DOTA_CHANNEL_ABILITY_1",	0X3A8,	-1);
	add_enum_member(id,"ACT_DOTA_CHANNEL_ABILITY_2",	0X3A9,	-1);
	add_enum_member(id,"ACT_DOTA_CHANNEL_ABILITY_3",	0X3AA,	-1);
	add_enum_member(id,"ACT_DOTA_CHANNEL_ABILITY_4",	0X3AB,	-1);
	add_enum_member(id,"ACT_DOTA_CHANNEL_END_ABILITY_1",	0X3AC,	-1);
	add_enum_member(id,"ACT_DOTA_CHANNEL_END_ABILITY_2",	0X3AD,	-1);
	add_enum_member(id,"ACT_DOTA_CHANNEL_END_ABILITY_3",	0X3AE,	-1);
	add_enum_member(id,"ACT_DOTA_CHANNEL_END_ABILITY_4",	0X3AF,	-1);
	add_enum_member(id,"ACT_MP_RUN_SPEEDPAINT",	0X3B0,	-1);
	add_enum_member(id,"ACT_MP_LONG_FALL",	0X3B1,	-1);
	add_enum_member(id,"ACT_MP_TRACTORBEAM_FLOAT",	0X3B2,	-1);
	add_enum_member(id,"ACT_MP_DEATH_CRUSH",	0X3B3,	-1);
	add_enum_member(id,"ACT_MP_RUN_SPEEDPAINT_PRIMARY",	0X3B4,	-1);
	add_enum_member(id,"ACT_MP_DROWNING_PRIMARY",	0X3B5,	-1);
	add_enum_member(id,"ACT_MP_LONG_FALL_PRIMARY",	0X3B6,	-1);
	add_enum_member(id,"ACT_MP_TRACTORBEAM_FLOAT_PRIMARY",	0X3B7,	-1);
	add_enum_member(id,"ACT_MP_DEATH_CRUSH_PRIMARY",	0X3B8,	-1);
	add_enum_member(id,"ACT_DIE_STAND",	0X3B9,	-1);
	add_enum_member(id,"ACT_DIE_STAND_HEADSHOT",	0X3BA,	-1);
	add_enum_member(id,"ACT_DIE_CROUCH",	0X3BB,	-1);
	add_enum_member(id,"ACT_DIE_CROUCH_HEADSHOT",	0X3BC,	-1);
	add_enum_member(id,"ACT_CSGO_NULL",	0X3BD,	-1);
	add_enum_member(id,"ACT_CSGO_DEFUSE",	0X3BE,	-1);
	add_enum_member(id,"ACT_CSGO_DEFUSE_WITH_KIT",	0X3BF,	-1);
	add_enum_member(id,"ACT_CSGO_FLASHBANG_REACTION",	0X3C0,	-1);
	add_enum_member(id,"ACT_CSGO_FIRE_PRIMARY",	0X3C1,	-1);
	add_enum_member(id,"ACT_CSGO_FIRE_PRIMARY_OPT_1",	0X3C2,	-1);
	add_enum_member(id,"ACT_CSGO_FIRE_PRIMARY_OPT_2",	0X3C3,	-1);
	add_enum_member(id,"ACT_CSGO_FIRE_SECONDARY",	0X3C4,	-1);
	add_enum_member(id,"ACT_CSGO_FIRE_SECONDARY_OPT_1",	0X3C5,	-1);
	add_enum_member(id,"ACT_CSGO_FIRE_SECONDARY_OPT_2",	0X3C6,	-1);
	add_enum_member(id,"ACT_CSGO_RELOAD",	0X3C7,	-1);
	add_enum_member(id,"ACT_CSGO_RELOAD_START",	0X3C8,	-1);
	add_enum_member(id,"ACT_CSGO_RELOAD_LOOP",	0X3C9,	-1);
	add_enum_member(id,"ACT_CSGO_RELOAD_END",	0X3CA,	-1);
	add_enum_member(id,"ACT_CSGO_OPERATE",	0X3CB,	-1);
	add_enum_member(id,"ACT_CSGO_DEPLOY",	0X3CC,	-1);
	add_enum_member(id,"ACT_CSGO_CATCH",	0X3CD,	-1);
	add_enum_member(id,"ACT_CSGO_SILENCER_DETACH",	0X3CE,	-1);
	add_enum_member(id,"ACT_CSGO_SILENCER_ATTACH",	0X3CF,	-1);
	add_enum_member(id,"ACT_CSGO_TWITCH",	0X3D0,	-1);
	add_enum_member(id,"ACT_CSGO_TWITCH_BUYZONE",	0X3D1,	-1);
	add_enum_member(id,"ACT_CSGO_PLANT_BOMB",	0X3D2,	-1);
	add_enum_member(id,"ACT_CSGO_IDLE_TURN_BALANCEADJUST",	0X3D3,	-1);
	add_enum_member(id,"ACT_CSGO_IDLE_ADJUST_STOPPEDMOVING",	0X3D4,	-1);
	add_enum_member(id,"ACT_CSGO_ALIVE_LOOP",	0X3D5,	-1);
	add_enum_member(id,"ACT_CSGO_FLINCH",	0X3D6,	-1);
	add_enum_member(id,"ACT_CSGO_FLINCH_HEAD",	0X3D7,	-1);
	add_enum_member(id,"ACT_CSGO_FLINCH_MOLOTOV",	0X3D8,	-1);
	add_enum_member(id,"ACT_CSGO_JUMP",	0X3D9,	-1);
	add_enum_member(id,"ACT_CSGO_FALL",	0X3DA,	-1);
	add_enum_member(id,"ACT_CSGO_CLIMB_LADDER",	0X3DB,	-1);
	add_enum_member(id,"ACT_CSGO_LAND_LIGHT",	0X3DC,	-1);
	add_enum_member(id,"ACT_CSGO_LAND_HEAVY",	0X3DD,	-1);
	add_enum_member(id,"ACT_CSGO_EXIT_LADDER_TOP",	0X3DE,	-1);
	add_enum_member(id,"ACT_CSGO_EXIT_LADDER_BOTTOM",	0X3DF,	-1);
	add_enum_member(id,"LAST_SHARED_ACTIVITY",	0X3E0,	-1);
	add_enum_member(id,"ACT_INVALID",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"MACRO_DLL",0x2220000);
	add_enum_member(id,"DLL_PROCESS_DETACH",	0,	-1);
	add_enum_member(id,"DLL_PROCESS_ATTACH",	0X1,	-1);
	add_enum_member(id,"DLL_THREAD_ATTACH",	0X2,	-1);
	add_enum_member(id,"DLL_THREAD_DETACH",	0X3,	-1);
	id = add_enum(-1,"C_SDK::Server::Types",0x1100000);
	add_enum_member(id,"C_SDK::Server::Types::UNDEFINED",	0,	-1);
	add_enum_member(id,"C_SDK::Server::Types::LOCAL_SERVER",	0X1,	-1);
	add_enum_member(id,"C_SDK::Server::Types::COMMUNITY",	0X2,	-1);
	add_enum_member(id,"C_SDK::Server::Types::VALVE",	0X3,	-1);
	add_enum_member(id,"C_SDK::Server::Types::VALVE_AIMSTEP",	0X4,	-1);
	id = add_enum(-1,"C_SDK::Classes::Id",0x1100000);
	add_enum_member(id,"CAI_BaseNPC",	0,	-1);
	add_enum_member(id,"CAK47",	0X1,	-1);
	add_enum_member(id,"CBaseAnimating",	0X2,	-1);
	add_enum_member(id,"CBaseAnimatingOverlay",	0X3,	-1);
	add_enum_member(id,"CBaseAttributableItem",	0X4,	-1);
	add_enum_member(id,"CBaseButton",	0X5,	-1);
	add_enum_member(id,"CBaseCombatCharacter",	0X6,	-1);
	add_enum_member(id,"CBaseCombatWeapon",	0X7,	-1);
	add_enum_member(id,"CBaseCSGrenade",	0X8,	-1);
	add_enum_member(id,"CBaseCSGrenadeProjectile",	0X9,	-1);
	add_enum_member(id,"CBaseDoor",	0XA,	-1);
	add_enum_member(id,"CBaseEntity",	0XB,	-1);
	add_enum_member(id,"CBaseFlex",	0XC,	-1);
	add_enum_member(id,"CBaseGrenade",	0XD,	-1);
	add_enum_member(id,"CBaseParticleEntity",	0XE,	-1);
	add_enum_member(id,"CBasePlayer",	0XF,	-1);
	add_enum_member(id,"CBasePropDoor",	0X10,	-1);
	add_enum_member(id,"CBaseTeamObjectiveResource",	0X11,	-1);
	add_enum_member(id,"CBaseTempEntity",	0X12,	-1);
	add_enum_member(id,"CBaseToggle",	0X13,	-1);
	add_enum_member(id,"CBaseTrigger",	0X14,	-1);
	add_enum_member(id,"CBaseViewModel",	0X15,	-1);
	add_enum_member(id,"CBaseVPhysicsTrigger",	0X16,	-1);
	add_enum_member(id,"CBaseWeaponWorldModel",	0X17,	-1);
	add_enum_member(id,"CBeam",	0X18,	-1);
	add_enum_member(id,"CBeamSpotlight",	0X19,	-1);
	add_enum_member(id,"CBoneFollower",	0X1A,	-1);
	add_enum_member(id,"CBRC4Target",	0X1B,	-1);
	add_enum_member(id,"CBreachCharge",	0X1C,	-1);
	add_enum_member(id,"CBreachChargeProjectile",	0X1D,	-1);
	add_enum_member(id,"CBreakableProp",	0X1E,	-1);
	add_enum_member(id,"CBreakableSurface",	0X1F,	-1);
	add_enum_member(id,"CBumpMine",	0X20,	-1);
	add_enum_member(id,"CBumpMineProjectile",	0X21,	-1);
	add_enum_member(id,"CC4",	0X22,	-1);
	add_enum_member(id,"CCascadeLight",	0X23,	-1);
	add_enum_member(id,"CChicken",	0X24,	-1);
	add_enum_member(id,"CColorCorrection",	0X25,	-1);
	add_enum_member(id,"CColorCorrectionVolume",	0X26,	-1);
	add_enum_member(id,"CCSGameRulesProxy",	0X27,	-1);
	add_enum_member(id,"CCSPlayer",	0X28,	-1);
	add_enum_member(id,"CCSPlayerResource",	0X29,	-1);
	add_enum_member(id,"CCSRagdoll",	0X2A,	-1);
	add_enum_member(id,"CCSTeam",	0X2B,	-1);
	add_enum_member(id,"CDangerZone",	0X2C,	-1);
	add_enum_member(id,"CDangerZoneController",	0X2D,	-1);
	add_enum_member(id,"CDEagle",	0X2E,	-1);
	add_enum_member(id,"CDecoyGrenade",	0X2F,	-1);
	add_enum_member(id,"CDecoyProjectile",	0X30,	-1);
	add_enum_member(id,"CDrone",	0X31,	-1);
	add_enum_member(id,"CDronegun",	0X32,	-1);
	add_enum_member(id,"CDynamicLight",	0X33,	-1);
	add_enum_member(id,"CDynamicProp",	0X34,	-1);
	add_enum_member(id,"CEconEntity",	0X35,	-1);
	add_enum_member(id,"CEconWearable",	0X36,	-1);
	add_enum_member(id,"CEmbers",	0X37,	-1);
	add_enum_member(id,"CEntityDissolve",	0X38,	-1);
	add_enum_member(id,"CEntityFlame",	0X39,	-1);
	add_enum_member(id,"CEntityFreezing",	0X3A,	-1);
	add_enum_member(id,"CEntityParticleTrail",	0X3B,	-1);
	add_enum_member(id,"CEnvAmbientLight",	0X3C,	-1);
	add_enum_member(id,"CEnvDetailController",	0X3D,	-1);
	add_enum_member(id,"CEnvDOFController",	0X3E,	-1);
	add_enum_member(id,"CEnvGasCanister",	0X3F,	-1);
	add_enum_member(id,"CEnvParticleScript",	0X40,	-1);
	add_enum_member(id,"CEnvProjectedTexture",	0X41,	-1);
	add_enum_member(id,"CEnvQuadraticBeam",	0X42,	-1);
	add_enum_member(id,"CEnvScreenEffect",	0X43,	-1);
	add_enum_member(id,"CEnvScreenOverlay",	0X44,	-1);
	add_enum_member(id,"CEnvTonemapController",	0X45,	-1);
	add_enum_member(id,"CEnvWind",	0X46,	-1);
	add_enum_member(id,"CFEPlayerDecal",	0X47,	-1);
	add_enum_member(id,"CFireCrackerBlast",	0X48,	-1);
	add_enum_member(id,"CFireSmoke",	0X49,	-1);
	add_enum_member(id,"CFireTrail",	0X4A,	-1);
	add_enum_member(id,"CFish",	0X4B,	-1);
	add_enum_member(id,"CFists",	0X4C,	-1);
	add_enum_member(id,"CFlashbang",	0X4D,	-1);
	add_enum_member(id,"CFogController",	0X4E,	-1);
	add_enum_member(id,"CFootstepControl",	0X4F,	-1);
	add_enum_member(id,"CFunc_Dust",	0X50,	-1);
	add_enum_member(id,"CFunc_LOD",	0X51,	-1);
	add_enum_member(id,"CFuncAreaPortalWindow",	0X52,	-1);
	add_enum_member(id,"CFuncBrush",	0X53,	-1);
	add_enum_member(id,"CFuncConveyor",	0X54,	-1);
	add_enum_member(id,"CFuncLadder",	0X55,	-1);
	add_enum_member(id,"CFuncMonitor",	0X56,	-1);
	add_enum_member(id,"CFuncMoveLinear",	0X57,	-1);
	add_enum_member(id,"CFuncOccluder",	0X58,	-1);
	add_enum_member(id,"CFuncReflectiveGlass",	0X59,	-1);
	add_enum_member(id,"CFuncRotating",	0X5A,	-1);
	add_enum_member(id,"CFuncSmokeVolume",	0X5B,	-1);
	add_enum_member(id,"CFuncTrackTrain",	0X5C,	-1);
	add_enum_member(id,"CGameRulesProxy",	0X5D,	-1);
	add_enum_member(id,"CGrassBurn",	0X5E,	-1);
	add_enum_member(id,"CHandleTest",	0X5F,	-1);
	add_enum_member(id,"CHEGrenade",	0X60,	-1);
	add_enum_member(id,"CHostage",	0X61,	-1);
	add_enum_member(id,"CHostageCarriableProp",	0X62,	-1);
	add_enum_member(id,"CIncendiaryGrenade",	0X63,	-1);
	add_enum_member(id,"CInferno",	0X64,	-1);
	add_enum_member(id,"CInfoLadderDismount",	0X65,	-1);
	add_enum_member(id,"CInfoMapRegion",	0X66,	-1);
	add_enum_member(id,"CInfoOverlayAccessor",	0X67,	-1);
	add_enum_member(id,"CItem_Healthshot",	0X68,	-1);
	add_enum_member(id,"CItemCash",	0X69,	-1);
	add_enum_member(id,"CItemDogtags",	0X6A,	-1);
	add_enum_member(id,"CKnife",	0X6B,	-1);
	add_enum_member(id,"CKnifeGG",	0X6C,	-1);
	add_enum_member(id,"CLightGlow",	0X6D,	-1);
	add_enum_member(id,"CMaterialModifyControl",	0X6E,	-1);
	add_enum_member(id,"CMelee",	0X6F,	-1);
	add_enum_member(id,"CMolotovGrenade",	0X70,	-1);
	add_enum_member(id,"CMolotovProjectile",	0X71,	-1);
	add_enum_member(id,"CMovieDisplay",	0X72,	-1);
	add_enum_member(id,"CParadropChopper",	0X73,	-1);
	add_enum_member(id,"CParticleFire",	0X74,	-1);
	add_enum_member(id,"CParticlePerformanceMonitor",	0X75,	-1);
	add_enum_member(id,"CParticleSystem",	0X76,	-1);
	add_enum_member(id,"CPhysBox",	0X77,	-1);
	add_enum_member(id,"CPhysBoxMultiplayer",	0X78,	-1);
	add_enum_member(id,"CPhysicsProp",	0X79,	-1);
	add_enum_member(id,"CPhysicsPropMultiplayer",	0X7A,	-1);
	add_enum_member(id,"CPhysMagnet",	0X7B,	-1);
	add_enum_member(id,"CPhysPropAmmoBox",	0X7C,	-1);
	add_enum_member(id,"CPhysPropLootCrate",	0X7D,	-1);
	add_enum_member(id,"CPhysPropRadarJammer",	0X7E,	-1);
	add_enum_member(id,"CPhysPropWeaponUpgrade",	0X7F,	-1);
	add_enum_member(id,"CPlantedC4",	0X80,	-1);
	add_enum_member(id,"CPlasma",	0X81,	-1);
	add_enum_member(id,"CPlayerPing",	0X82,	-1);
	add_enum_member(id,"CPlayerResource",	0X83,	-1);
	add_enum_member(id,"CPointCamera",	0X84,	-1);
	add_enum_member(id,"CPointCommentaryNode",	0X85,	-1);
	add_enum_member(id,"CPointWorldText",	0X86,	-1);
	add_enum_member(id,"CPoseController",	0X87,	-1);
	add_enum_member(id,"CPostProcessController",	0X88,	-1);
	add_enum_member(id,"CPrecipitation",	0X89,	-1);
	add_enum_member(id,"CPrecipitationBlocker",	0X8A,	-1);
	add_enum_member(id,"CPredictedViewModel",	0X8B,	-1);
	add_enum_member(id,"CProp_Hallucination",	0X8C,	-1);
	add_enum_member(id,"CPropCounter",	0X8D,	-1);
	add_enum_member(id,"CPropDoorRotating",	0X8E,	-1);
	add_enum_member(id,"CPropJeep",	0X8F,	-1);
	add_enum_member(id,"CPropVehicleDriveable",	0X90,	-1);
	add_enum_member(id,"CRagdollManager",	0X91,	-1);
	add_enum_member(id,"CRagdollProp",	0X92,	-1);
	add_enum_member(id,"CRagdollPropAttached",	0X93,	-1);
	add_enum_member(id,"CRopeKeyframe",	0X94,	-1);
	add_enum_member(id,"CSCAR17",	0X95,	-1);
	add_enum_member(id,"CSceneEntity",	0X96,	-1);
	add_enum_member(id,"CSensorGrenade",	0X97,	-1);
	add_enum_member(id,"CSensorGrenadeProjectile",	0X98,	-1);
	add_enum_member(id,"CShadowControl",	0X99,	-1);
	add_enum_member(id,"CSlideshowDisplay",	0X9A,	-1);
	add_enum_member(id,"CSmokeGrenade",	0X9B,	-1);
	add_enum_member(id,"CSmokeGrenadeProjectile",	0X9C,	-1);
	add_enum_member(id,"CSmokeStack",	0X9D,	-1);
	add_enum_member(id,"CSnowball",	0X9E,	-1);
	add_enum_member(id,"CSnowballPile",	0X9F,	-1);
	add_enum_member(id,"CSnowballProjectile",	0XA0,	-1);
	add_enum_member(id,"CSpatialEntity",	0XA1,	-1);
	add_enum_member(id,"CSpotlightEnd",	0XA2,	-1);
	add_enum_member(id,"CSprite",	0XA3,	-1);
	add_enum_member(id,"CSpriteOriented",	0XA4,	-1);
	add_enum_member(id,"CSpriteTrail",	0XA5,	-1);
	add_enum_member(id,"CStatueProp",	0XA6,	-1);
	add_enum_member(id,"CSteamJet",	0XA7,	-1);
	add_enum_member(id,"CSun",	0XA8,	-1);
	add_enum_member(id,"CSunlightShadowControl",	0XA9,	-1);
	add_enum_member(id,"CSurvivalSpawnChopper",	0XAA,	-1);
	add_enum_member(id,"CTablet",	0XAB,	-1);
	add_enum_member(id,"CTeam",	0XAC,	-1);
	add_enum_member(id,"CTeamplayRoundBasedRulesProxy",	0XAD,	-1);
	add_enum_member(id,"CTEArmorRicochet",	0XAE,	-1);
	add_enum_member(id,"CTEBaseBeam",	0XAF,	-1);
	add_enum_member(id,"CTEBeamEntPoint",	0XB0,	-1);
	add_enum_member(id,"CTEBeamEnts",	0XB1,	-1);
	add_enum_member(id,"CTEBeamFollow",	0XB2,	-1);
	add_enum_member(id,"CTEBeamLaser",	0XB3,	-1);
	add_enum_member(id,"CTEBeamPoints",	0XB4,	-1);
	add_enum_member(id,"CTEBeamRing",	0XB5,	-1);
	add_enum_member(id,"CTEBeamRingPoint",	0XB6,	-1);
	add_enum_member(id,"CTEBeamSpline",	0XB7,	-1);
	add_enum_member(id,"CTEBloodSprite",	0XB8,	-1);
	add_enum_member(id,"CTEBloodStream",	0XB9,	-1);
	add_enum_member(id,"CTEBreakModel",	0XBA,	-1);
	add_enum_member(id,"CTEBSPDecal",	0XBB,	-1);
	add_enum_member(id,"CTEBubbles",	0XBC,	-1);
	add_enum_member(id,"CTEBubbleTrail",	0XBD,	-1);
	add_enum_member(id,"CTEClientProjectile",	0XBE,	-1);
	add_enum_member(id,"CTEDecal",	0XBF,	-1);
	add_enum_member(id,"CTEDust",	0XC0,	-1);
	add_enum_member(id,"CTEDynamicLight",	0XC1,	-1);
	add_enum_member(id,"CTEEffectDispatch",	0XC2,	-1);
	add_enum_member(id,"CTEEnergySplash",	0XC3,	-1);
	add_enum_member(id,"CTEExplosion",	0XC4,	-1);
	add_enum_member(id,"CTEFireBullets",	0XC5,	-1);
	add_enum_member(id,"CTEFizz",	0XC6,	-1);
	add_enum_member(id,"CTEFootprintDecal",	0XC7,	-1);
	add_enum_member(id,"CTEFoundryHelpers",	0XC8,	-1);
	add_enum_member(id,"CTEGaussExplosion",	0XC9,	-1);
	add_enum_member(id,"CTEGlowSprite",	0XCA,	-1);
	add_enum_member(id,"CTEImpact",	0XCB,	-1);
	add_enum_member(id,"CTEKillPlayerAttachments",	0XCC,	-1);
	add_enum_member(id,"CTELargeFunnel",	0XCD,	-1);
	add_enum_member(id,"CTEMetalSparks",	0XCE,	-1);
	add_enum_member(id,"CTEMuzzleFlash",	0XCF,	-1);
	add_enum_member(id,"CTEParticleSystem",	0XD0,	-1);
	add_enum_member(id,"CTEPhysicsProp",	0XD1,	-1);
	add_enum_member(id,"CTEPlantBomb",	0XD2,	-1);
	add_enum_member(id,"CTEPlayerAnimEvent",	0XD3,	-1);
	add_enum_member(id,"CTEPlayerDecal",	0XD4,	-1);
	add_enum_member(id,"CTEProjectedDecal",	0XD5,	-1);
	add_enum_member(id,"CTERadioIcon",	0XD6,	-1);
	add_enum_member(id,"CTEShatterSurface",	0XD7,	-1);
	add_enum_member(id,"CTEShowLine",	0XD8,	-1);
	add_enum_member(id,"CTesla",	0XD9,	-1);
	add_enum_member(id,"CTESmoke",	0XDA,	-1);
	add_enum_member(id,"CTESparks",	0XDB,	-1);
	add_enum_member(id,"CTESprite",	0XDC,	-1);
	add_enum_member(id,"CTESpriteSpray",	0XDD,	-1);
	add_enum_member(id,"CTest_ProxyToggle_Networkable",	0XDE,	-1);
	add_enum_member(id,"CTestTraceline",	0XDF,	-1);
	add_enum_member(id,"CTEWorldDecal",	0XE0,	-1);
	add_enum_member(id,"CTriggerPlayerMovement",	0XE1,	-1);
	add_enum_member(id,"CTriggerSoundOperator",	0XE2,	-1);
	add_enum_member(id,"CVGuiScreen",	0XE3,	-1);
	add_enum_member(id,"CVoteController",	0XE4,	-1);
	add_enum_member(id,"CWaterBullet",	0XE5,	-1);
	add_enum_member(id,"CWaterLODControl",	0XE6,	-1);
	add_enum_member(id,"CWeaponAug",	0XE7,	-1);
	add_enum_member(id,"CWeaponAWP",	0XE8,	-1);
	add_enum_member(id,"CWeaponBaseItem",	0XE9,	-1);
	add_enum_member(id,"CWeaponBizon",	0XEA,	-1);
	add_enum_member(id,"CWeaponCSBase",	0XEB,	-1);
	add_enum_member(id,"CWeaponCSBaseGun",	0XEC,	-1);
	add_enum_member(id,"CWeaponCycler",	0XED,	-1);
	add_enum_member(id,"CWeaponElite",	0XEE,	-1);
	add_enum_member(id,"CWeaponFamas",	0XEF,	-1);
	add_enum_member(id,"CWeaponFiveSeven",	0XF0,	-1);
	add_enum_member(id,"CWeaponG3SG1",	0XF1,	-1);
	add_enum_member(id,"CWeaponGalil",	0XF2,	-1);
	add_enum_member(id,"CWeaponGalilAR",	0XF3,	-1);
	add_enum_member(id,"CWeaponGlock",	0XF4,	-1);
	add_enum_member(id,"CWeaponHKP2000",	0XF5,	-1);
	add_enum_member(id,"CWeaponM249",	0XF6,	-1);
	add_enum_member(id,"CWeaponM3",	0XF7,	-1);
	add_enum_member(id,"CWeaponM4A1",	0XF8,	-1);
	add_enum_member(id,"CWeaponMAC10",	0XF9,	-1);
	add_enum_member(id,"CWeaponMag7",	0XFA,	-1);
	add_enum_member(id,"CWeaponMP5Navy",	0XFB,	-1);
	add_enum_member(id,"CWeaponMP7",	0XFC,	-1);
	add_enum_member(id,"CWeaponMP9",	0XFD,	-1);
	add_enum_member(id,"CWeaponNegev",	0XFE,	-1);
	add_enum_member(id,"CWeaponNOVA",	0XFF,	-1);
	add_enum_member(id,"CWeaponP228",	0X100,	-1);
	return id;
}

static Enums_1(id) {

	add_enum_member(id,"CWeaponP250",	0X101,	-1);
	add_enum_member(id,"CWeaponP90",	0X102,	-1);
	add_enum_member(id,"CWeaponSawedoff",	0X103,	-1);
	add_enum_member(id,"CWeaponSCAR20",	0X104,	-1);
	add_enum_member(id,"CWeaponScout",	0X105,	-1);
	add_enum_member(id,"CWeaponSG550",	0X106,	-1);
	add_enum_member(id,"CWeaponSG552",	0X107,	-1);
	add_enum_member(id,"CWeaponSG556",	0X108,	-1);
	add_enum_member(id,"CWeaponShield",	0X109,	-1);
	add_enum_member(id,"CWeaponSSG08",	0X10A,	-1);
	add_enum_member(id,"CWeaponTaser",	0X10B,	-1);
	add_enum_member(id,"CWeaponTec9",	0X10C,	-1);
	add_enum_member(id,"CWeaponTMP",	0X10D,	-1);
	add_enum_member(id,"CWeaponUMP45",	0X10E,	-1);
	add_enum_member(id,"CWeaponUSP",	0X10F,	-1);
	add_enum_member(id,"CWeaponXM1014",	0X110,	-1);
	add_enum_member(id,"CWeaponZoneRepulsor",	0X111,	-1);
	add_enum_member(id,"CWorld",	0X112,	-1);
	add_enum_member(id,"CWorldVguiText",	0X113,	-1);
	add_enum_member(id,"DustTrail",	0X114,	-1);
	add_enum_member(id,"MovieExplosion",	0X115,	-1);
	add_enum_member(id,"ParticleSmokeGrenade",	0X116,	-1);
	add_enum_member(id,"RocketTrail",	0X117,	-1);
	add_enum_member(id,"SmokeTrail",	0X118,	-1);
	add_enum_member(id,"SporeExplosion",	0X119,	-1);
	add_enum_member(id,"SporeTrail",	0X11A,	-1);
	id = add_enum(-1,"C_SDK::Weapon::Id",0x1100000);
	add_enum_member(id,"WEAPON_NONE",	0,	-1);
	add_enum_member(id,"WEAPON_DEAGLE",	0X1,	-1);
	add_enum_member(id,"WEAPON_ELITE",	0X2,	-1);
	add_enum_member(id,"WEAPON_FIVESEVEN",	0X3,	-1);
	add_enum_member(id,"WEAPON_GLOCK",	0X4,	-1);
	add_enum_member(id,"WEAPON_AK47",	0X7,	-1);
	add_enum_member(id,"WEAPON_AUG",	0X8,	-1);
	add_enum_member(id,"WEAPON_AWP",	0X9,	-1);
	add_enum_member(id,"WEAPON_FAMAS",	0XA,	-1);
	add_enum_member(id,"WEAPON_G3SG1",	0XB,	-1);
	add_enum_member(id,"WEAPON_GALILAR",	0XD,	-1);
	add_enum_member(id,"WEAPON_M249",	0XE,	-1);
	add_enum_member(id,"WEAPON_M4A1",	0X10,	-1);
	add_enum_member(id,"WEAPON_MAC10",	0X11,	-1);
	add_enum_member(id,"WEAPON_P90",	0X13,	-1);
	add_enum_member(id,"WEAPON_MP5SD",	0X17,	-1);
	add_enum_member(id,"WEAPON_UMP45",	0X18,	-1);
	add_enum_member(id,"WEAPON_XM1014",	0X19,	-1);
	add_enum_member(id,"WEAPON_BIZON",	0X1A,	-1);
	add_enum_member(id,"WEAPON_MAG7",	0X1B,	-1);
	add_enum_member(id,"WEAPON_NEGEV",	0X1C,	-1);
	add_enum_member(id,"WEAPON_SAWEDOFF",	0X1D,	-1);
	add_enum_member(id,"WEAPON_TEC9",	0X1E,	-1);
	add_enum_member(id,"WEAPON_TASER",	0X1F,	-1);
	add_enum_member(id,"WEAPON_HKP2000",	0X20,	-1);
	add_enum_member(id,"WEAPON_MP7",	0X21,	-1);
	add_enum_member(id,"WEAPON_MP9",	0X22,	-1);
	add_enum_member(id,"WEAPON_NOVA",	0X23,	-1);
	add_enum_member(id,"WEAPON_P250",	0X24,	-1);
	add_enum_member(id,"WEAPON_SHIELD",	0X25,	-1);
	add_enum_member(id,"WEAPON_SCAR20",	0X26,	-1);
	add_enum_member(id,"WEAPON_SG556",	0X27,	-1);
	add_enum_member(id,"WEAPON_SSG08",	0X28,	-1);
	add_enum_member(id,"WEAPON_KNIFEGG",	0X29,	-1);
	add_enum_member(id,"WEAPON_KNIFE",	0X2A,	-1);
	add_enum_member(id,"WEAPON_FLASHBANG",	0X2B,	-1);
	add_enum_member(id,"WEAPON_HEGRENADE",	0X2C,	-1);
	add_enum_member(id,"WEAPON_SMOKEGRENADE",	0X2D,	-1);
	add_enum_member(id,"WEAPON_MOLOTOV",	0X2E,	-1);
	add_enum_member(id,"WEAPON_DECOY",	0X2F,	-1);
	add_enum_member(id,"WEAPON_INCGRENADE",	0X30,	-1);
	add_enum_member(id,"WEAPON_C4",	0X31,	-1);
	add_enum_member(id,"WEAPON_HEALTHSHOT",	0X39,	-1);
	add_enum_member(id,"WEAPON_KNIFE_T",	0X3B,	-1);
	add_enum_member(id,"WEAPON_M4A1_SILENCER",	0X3C,	-1);
	add_enum_member(id,"WEAPON_USP_SILENCER",	0X3D,	-1);
	add_enum_member(id,"WEAPON_CZ75A",	0X3F,	-1);
	add_enum_member(id,"WEAPON_REVOLVER",	0X40,	-1);
	add_enum_member(id,"WEAPON_TAGRENADE",	0X44,	-1);
	add_enum_member(id,"WEAPON_FISTS",	0X45,	-1);
	add_enum_member(id,"WEAPON_BREACHCHARGE",	0X46,	-1);
	add_enum_member(id,"WEAPON_TABLET",	0X48,	-1);
	add_enum_member(id,"WEAPON_MELEE",	0X4A,	-1);
	add_enum_member(id,"WEAPON_AXE",	0X4B,	-1);
	add_enum_member(id,"WEAPON_HAMMER",	0X4C,	-1);
	add_enum_member(id,"WEAPON_SPANNER",	0X4E,	-1);
	add_enum_member(id,"WEAPON_KNIFE_GHOST",	0X50,	-1);
	add_enum_member(id,"WEAPON_FIREBOMB",	0X51,	-1);
	add_enum_member(id,"WEAPON_DIVERSION",	0X52,	-1);
	add_enum_member(id,"WEAPON_FRAG_GRENADE",	0X53,	-1);
	add_enum_member(id,"WEAPON_SNOWBALL",	0X54,	-1);
	add_enum_member(id,"WEAPON_BUMPMINE",	0X55,	-1);
	add_enum_member(id,"WEAPON_KNIFE_BAYONET",	0X1F4,	-1);
	add_enum_member(id,"WEAPON_KNIFE_CSS",	0X1F7,	-1);
	add_enum_member(id,"WEAPON_KNIFE_FLIP",	0X1F9,	-1);
	add_enum_member(id,"WEAPON_KNIFE_GUT",	0X1FA,	-1);
	add_enum_member(id,"WEAPON_KNIFE_KARAMBIT",	0X1FB,	-1);
	add_enum_member(id,"WEAPON_KNIFE_M9_BAYONET",	0X1FC,	-1);
	add_enum_member(id,"WEAPON_KNIFE_TACTICAL",	0X1FD,	-1);
	add_enum_member(id,"WEAPON_KNIFE_FALCHION",	0X200,	-1);
	add_enum_member(id,"WEAPON_KNIFE_SURVIVAL_BOWIE",	0X202,	-1);
	add_enum_member(id,"WEAPON_KNIFE_BUTTERFLY",	0X203,	-1);
	add_enum_member(id,"WEAPON_KNIFE_PUSH",	0X204,	-1);
	add_enum_member(id,"WEAPON_KNIFE_URSUS",	0X207,	-1);
	add_enum_member(id,"WEAPON_KNIFE_GYPSY_JACKKNIFE",	0X208,	-1);
	add_enum_member(id,"WEAPON_KNIFE_STILETTO",	0X20A,	-1);
	add_enum_member(id,"WEAPON_KNIFE_WIDOWMAKER",	0X20B,	-1);
	add_enum_member(id,"WEAPON_UNKNOWN",	0X20C,	-1);
	id = add_enum(-1,"C_SDK::Classes::CUserCmd::Buttons",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_ATTACK",	0X1,	0x1);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_JUMP",	0X2,	0x2);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_DUCK",	0X4,	0x4);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_FORWARD",	0X8,	0x8);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_BACK",	0X10,	0x10);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_USE",	0X20,	0x20);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_CANCEL",	0X40,	0x40);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_LEFT",	0X80,	0x80);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_RIGHT",	0X100,	0x100);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_MOVE_LEFT",	0X200,	0x200);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_MOVE_RIGHT",	0X400,	0x400);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_ATTACK_2",	0X800,	0x800);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_RUN",	0X1000,	0x1000);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_RELOAD",	0X2000,	0x2000);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_ALT_1",	0X4000,	0x4000);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_ALT_2",	0X8000,	0x8000);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_SCORE",	0X10000,	0x10000);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_SPEED",	0X20000,	0x20000);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_WALK",	0X40000,	0x40000);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_ZOOM",	0X80000,	0x80000);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_WEAPON_1",	0X100000,	0x100000);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_WEAPON_2",	0X200000,	0x200000);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_BULLRUSH",	0X400000,	0x400000);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_GRENADE_1",	0X800000,	0x800000);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_GRENADE_2",	0X1000000,	0x1000000);
	add_enum_member(id,"C_SDK::Classes::CUserCmd::Buttons::IN_LOOKSPIN",	0X2000000,	0x2000000);
	id = add_enum(-1,"C_SDK::Classes::EngineTrace::Contents",0x1100000);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::SOLID",	0X1,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::WINDOW",	0X2,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::AUX",	0X4,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::GRATE",	0X8,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::SLIME",	0X10,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::WATER",	0X20,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::BLOCK_LOS",	0X40,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::OPAQUE",	0X80,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::ALL_VISIABLE_CONTENTS",	0XFF,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::TEST_FOG_VOLUME",	0X100,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::UNUSED",	0X200,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::BLOCK_LIGHT",	0X400,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::TEAM_1",	0X800,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::TEAM_2",	0X1000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::IGNORE_NODRAW_OPAQUE",	0X2000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::MOVEABLE",	0X4000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::AREA_PORTAL",	0X8000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::PLAYER_CLIP",	0X10000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::MONSTER_CLIP",	0X20000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::CURRENT_0",	0X40000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::CURRENT_90",	0X80000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::CURRENT_180",	0X100000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::CURRENT_270",	0X200000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::CURRENT_UP",	0X400000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::CURRENT_DOWN",	0X800000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::ORIGIN",	0X1000000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::MONSTER",	0X2000000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::DERBIS",	0X4000000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::DETAIL",	0X8000000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::TRANSLUCENT",	0X10000000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::LADDER",	0X20000000,	-1);
	add_enum_member(id,"C_SDK::Classes::EngineTrace::Contents::HITBOX",	0X40000000,	-1);
	id = add_enum(-1,"C_SDK::VirtualFunction::Absolutes",0x1100000);
	add_enum_member(id,"C_SDK::VirtualFunction::Absolutes::INPUT_SYSTEM",	0X20,	-1);
	add_enum_member(id,"C_SDK::VirtualFunction::Absolutes::UPDATE_COLLISION_BOUNDS",	0X150,	-1);
	add_enum_member(id,"C_SDK::VirtualFunction::Absolutes::IS_PLAYER",	0X274,	-1);
	add_enum_member(id,"C_SDK::VirtualFunction::Absolutes::IS_WEAPON",	0X28C,	-1);
	add_enum_member(id,"C_SDK::VirtualFunction::Absolutes::UPDATE_ACCURACY_PENALTY",	0X774,	-1);
	id = add_enum(-1,"C_SDK::Security::FNV1A::Events",0x1100000);
	add_enum_member(id,"C_SDK::Security::FNV1A::Events::PLAYER_HURT",	0X1B30DDF0,	-1);
	add_enum_member(id,"C_SDK::Security::FNV1A::Events::ITEM_EQUIP",	0X3D5F333D,	-1);
	add_enum_member(id,"C_SDK::Security::FNV1A::Events::BOMB_PLANTED",	0X4E704C3E,	-1);
	add_enum_member(id,"C_SDK::Security::FNV1A::Events::WEAPON_FIRE",	0X78A2D0FE,	-1);
	add_enum_member(id,"C_SDK::Security::FNV1A::Events::BULLET_IMPACT",	0X8B8FCCE8,	-1);
	add_enum_member(id,"C_SDK::Security::FNV1A::Events::PLAYER_DEATH",	0XA6ABE875,	-1);
	add_enum_member(id,"C_SDK::Security::FNV1A::Events::SMOKE_GRENADE_DETONATE",	0XA786E81D,	-1);
	add_enum_member(id,"C_SDK::Security::FNV1A::Events::ROUND_MVP",	0XC80E399D,	-1);
	add_enum_member(id,"C_SDK::Security::FNV1A::Events::ROUND_FREEZE_END",	0XD704819D,	-1);
	add_enum_member(id,"C_SDK::Security::FNV1A::Events::ROUND_PRE_START",	0XE6A3E50F,	-1);
	add_enum_member(id,"C_SDK::Security::FNV1A::Events::CS_WIN_PANEL_ROUND",	0XFF5D5EC0,	-1);
	id = add_enum(-1,"MACRO_USN",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"USN_REASON_DATA_OVERWRITE",	0X1,	0x1);
	add_enum_member(id,"USN_REASON_DATA_EXTEND",	0X2,	0x2);
	add_enum_member(id,"USN_REASON_DATA_TRUNCATION",	0X4,	0x4);
	add_enum_member(id,"USN_REASON_NAMED_DATA_OVERWRITE",	0X10,	0x10);
	add_enum_member(id,"USN_REASON_NAMED_DATA_EXTEND",	0X20,	0x20);
	add_enum_member(id,"USN_REASON_NAMED_DATA_TRUNCATION",	0X40,	0x40);
	add_enum_member(id,"USN_REASON_FILE_CREATE",	0X100,	0x100);
	add_enum_member(id,"USN_REASON_FILE_DELETE",	0X200,	0x200);
	add_enum_member(id,"USN_REASON_PROPERTY_CHANGE",	0X400,	0x400);
	add_enum_member(id,"USN_REASON_SECURITY_CHANGE",	0X800,	0x800);
	add_enum_member(id,"USN_PAGE_SIZE",	0X1000,	0x1000);
	add_enum_member(id,"USN_REASON_RENAME_OLD_NAME",	0X1000,	0x1000);
	add_enum_member(id,"USN_REASON_RENAME_NEW_NAME",	0X2000,	0x2000);
	add_enum_member(id,"USN_REASON_INDEXABLE_CHANGE",	0X4000,	0x4000);
	add_enum_member(id,"USN_REASON_BASIC_INFO_CHANGE",	0X8000,	0x8000);
	add_enum_member(id,"USN_REASON_HARD_LINK_CHANGE",	0X10000,	0x10000);
	add_enum_member(id,"USN_REASON_COMPRESSION_CHANGE",	0X20000,	0x20000);
	add_enum_member(id,"USN_REASON_ENCRYPTION_CHANGE",	0X40000,	0x40000);
	add_enum_member(id,"USN_REASON_OBJECT_ID_CHANGE",	0X80000,	0x80000);
	add_enum_member(id,"USN_REASON_REPARSE_POINT_CHANGE",	0X100000,	0x100000);
	add_enum_member(id,"USN_REASON_MOUNT_TABLE_CHANGE",	0X200000,	0x200000);
	add_enum_member(id,"USN_REASON_CLOSE",	0X80000000,	0x80000000);
	id = add_enum(-1,"C_SDK::Types::WeaponType",0x1100000);
	add_enum_member(id,"C_SDK::Types::WeaponType::RIFLE",	0,	-1);
	add_enum_member(id,"C_SDK::Types::WeaponType::PISTOL",	0X1,	-1);
	add_enum_member(id,"C_SDK::Types::WeaponType::AUTO",	0X2,	-1);
	add_enum_member(id,"C_SDK::Types::WeaponType::ADDITIONAL",	0X3,	-1);
	add_enum_member(id,"C_SDK::Types::WeaponType::SHOTGUN",	0X4,	-1);
	add_enum_member(id,"C_SDK::Types::WeaponType::KNIFE",	0X5,	-1);
	add_enum_member(id,"C_SDK::Types::WeaponType::GRENADE",	0X6,	-1);
	add_enum_member(id,"C_SDK::Types::WeaponType::DEFAULT",	0X7,	-1);
	add_enum_member(id,"C_SDK::Types::WeaponType::TASER",	0X9,	-1);
	id = add_enum(-1,"MACRO_IMAGE",0x1120000);
	add_enum_member(id,"IMAGE_FILE_MACHINE_UNKNOWN",	0,	-1);
	add_enum_member(id,"IMAGE_SUBSYSTEM_UNKNOWN",	0,	-1);
	add_enum_member(id,"IMAGE_DIRECTORY_ENTRY_EXPORT",	0,	-1);
	add_enum_member(id,"IMAGE_SYM_UNDEFINED",	0,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_NULL",	0,	-1);
	add_enum_member(id,"IMAGE_SYM_DTYPE_NULL",	0,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_NULL",	0,	-1);
	add_enum_member(id,"IMAGE_FILE_RELOCS_STRIPPED",	0X1,	-1);
	add_enum_member(id,"IMAGE_SUBSYSTEM_NATIVE",	0X1,	-1);
	add_enum_member(id,"IMAGE_DIRECTORY_ENTRY_IMPORT",	0X1,	-1);
	add_enum_member(id,"IMAGE_SCN_SCALE_INDEX",	0X1,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_VOID",	0X1,	-1);
	add_enum_member(id,"IMAGE_SYM_DTYPE_POINTER",	0X1,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_AUTOMATIC",	0X1,	-1);
	add_enum_member(id,"IMAGE_FILE_EXECUTABLE_IMAGE",	0X2,	-1);
	add_enum_member(id,"IMAGE_SUBSYSTEM_WINDOWS_GUI",	0X2,	-1);
	add_enum_member(id,"IMAGE_DIRECTORY_ENTRY_RESOURCE",	0X2,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_CHAR",	0X2,	-1);
	add_enum_member(id,"IMAGE_SYM_DTYPE_FUNCTION",	0X2,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_EXTERNAL",	0X2,	-1);
	add_enum_member(id,"IMAGE_SUBSYSTEM_WINDOWS_CUI",	0X3,	-1);
	add_enum_member(id,"IMAGE_DIRECTORY_ENTRY_EXCEPTION",	0X3,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_SHORT",	0X3,	-1);
	add_enum_member(id,"IMAGE_SYM_DTYPE_ARRAY",	0X3,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_STATIC",	0X3,	-1);
	add_enum_member(id,"IMAGE_FILE_LINE_NUMS_STRIPPED",	0X4,	-1);
	add_enum_member(id,"IMAGE_DIRECTORY_ENTRY_SECURITY",	0X4,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_INT",	0X4,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_REGISTER",	0X4,	-1);
	add_enum_member(id,"IMAGE_SUBSYSTEM_OS2_CUI",	0X5,	-1);
	add_enum_member(id,"IMAGE_DIRECTORY_ENTRY_BASERELOC",	0X5,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_LONG",	0X5,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_EXTERNAL_DEF",	0X5,	-1);
	add_enum_member(id,"IMAGE_DIRECTORY_ENTRY_DEBUG",	0X6,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_FLOAT",	0X6,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_LABEL",	0X6,	-1);
	add_enum_member(id,"IMAGE_SUBSYSTEM_POSIX_CUI",	0X7,	-1);
	add_enum_member(id,"IMAGE_DIRECTORY_ENTRY_ARCHITECTURE",	0X7,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_DOUBLE",	0X7,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_UNDEFINED_LABEL",	0X7,	-1);
	add_enum_member(id,"IMAGE_FILE_LOCAL_SYMS_STRIPPED",	0X8,	-1);
	add_enum_member(id,"IMAGE_SUBSYSTEM_NATIVE_WINDOWS",	0X8,	-1);
	add_enum_member(id,"IMAGE_DIRECTORY_ENTRY_GLOBALPTR",	0X8,	-1);
	add_enum_member(id,"IMAGE_SIZEOF_SHORT_NAME",	0X8,	-1);
	add_enum_member(id,"IMAGE_SCN_TYPE_NO_PAD",	0X8,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_STRUCT",	0X8,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_MEMBER_OF_STRUCT",	0X8,	-1);
	add_enum_member(id,"IMAGE_SUBSYSTEM_WINDOWS_CE_GUI",	0X9,	-1);
	add_enum_member(id,"IMAGE_DIRECTORY_ENTRY_TLS",	0X9,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_UNION",	0X9,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_ARGUMENT",	0X9,	-1);
	add_enum_member(id,"IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG",	0XA,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_ENUM",	0XA,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_STRUCT_TAG",	0XA,	-1);
	add_enum_member(id,"IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT",	0XB,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_MOE",	0XB,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_MEMBER_OF_UNION",	0XB,	-1);
	add_enum_member(id,"IMAGE_DIRECTORY_ENTRY_IAT",	0XC,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_BYTE",	0XC,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_UNION_TAG",	0XC,	-1);
	add_enum_member(id,"IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT",	0XD,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_WORD",	0XD,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_TYPE_DEFINITION",	0XD,	-1);
	add_enum_member(id,"IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR",	0XE,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_UINT",	0XE,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_UNDEFINED_STATIC",	0XE,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_DWORD",	0XF,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_ENUM_TAG",	0XF,	-1);
	add_enum_member(id,"IMAGE_FILE_AGGRESIVE_WS_TRIM",	0X10,	-1);
	add_enum_member(id,"IMAGE_NUMBEROF_DIRECTORY_ENTRIES",	0X10,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_MEMBER_OF_ENUM",	0X10,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_REGISTER_PARAM",	0X11,	-1);
	add_enum_member(id,"IMAGE_SIZEOF_SYMBOL",	0X12,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_BIT_FIELD",	0X12,	-1);
	add_enum_member(id,"IMAGE_SIZEOF_FILE_HEADER",	0X14,	-1);
	add_enum_member(id,"IMAGE_SIZEOF_STD_OPTIONAL_HEADER",	0X1C,	-1);
	add_enum_member(id,"IMAGE_FILE_LARGE_ADDRESS_AWARE",	0X20,	-1);
	add_enum_member(id,"IMAGE_SCN_CNT_CODE",	0X20,	-1);
	add_enum_member(id,"IMAGE_SIZEOF_SECTION_HEADER",	0X28,	-1);
	add_enum_member(id,"IMAGE_SIZEOF_ROM_OPTIONAL_HEADER",	0X38,	-1);
	add_enum_member(id,"IMAGE_SCN_CNT_INITIALIZED_DATA",	0X40,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_FAR_EXTERNAL",	0X44,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_BLOCK",	0X64,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_FUNCTION",	0X65,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_END_OF_STRUCT",	0X66,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_FILE",	0X67,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_SECTION",	0X68,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_WEAK_EXTERNAL",	0X69,	-1);
	add_enum_member(id,"IMAGE_FILE_BYTES_REVERSED_LO",	0X80,	-1);
	add_enum_member(id,"IMAGE_SCN_CNT_UNINITIALIZED_DATA",	0X80,	-1);
	add_enum_member(id,"IMAGE_SIZEOF_NT_OPTIONAL32_HEADER",	0XE0,	-1);
	add_enum_member(id,"IMAGE_SIZEOF_NT_OPTIONAL_HEADER",	0XE0,	-1);
	add_enum_member(id,"IMAGE_SIZEOF_NT_OPTIONAL64_HEADER",	0XF0,	-1);
	add_enum_member(id,"IMAGE_SYM_CLASS_END_OF_FUNCTION",	0XFF,	-1);
	add_enum_member(id,"IMAGE_FILE_32BIT_MACHINE",	0X100,	-1);
	add_enum_member(id,"IMAGE_SCN_LNK_OTHER",	0X100,	-1);
	add_enum_member(id,"IMAGE_ROM_OPTIONAL_HDR_MAGIC",	0X107,	-1);
	add_enum_member(id,"IMAGE_NT_OPTIONAL_HDR32_MAGIC",	0X10B,	-1);
	add_enum_member(id,"IMAGE_NT_OPTIONAL_HDR_MAGIC",	0X10B,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_I386",	0X14C,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_R3000",	0X162,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_R4000",	0X166,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_R10000",	0X168,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_WCEMIPSV2",	0X169,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_ALPHA",	0X184,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_SH3",	0X1A2,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_SH3E",	0X1A4,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_SH4",	0X1A6,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_ARM",	0X1C0,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_THUMB",	0X1C2,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_POWERPC",	0X1F0,	-1);
	add_enum_member(id,"IMAGE_FILE_DEBUG_STRIPPED",	0X200,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_IA64",	0X200,	-1);
	add_enum_member(id,"IMAGE_SCN_LNK_INFO",	0X200,	-1);
	add_enum_member(id,"IMAGE_NT_OPTIONAL_HDR64_MAGIC",	0X20B,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_MIPS16",	0X266,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_ALPHA64",	0X284,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_AXP64",	0X284,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_MIPSFPU",	0X366,	-1);
	add_enum_member(id,"IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP",	0X400,	-1);
	add_enum_member(id,"IMAGE_FILE_MACHINE_MIPSFPU16",	0X466,	-1);
	add_enum_member(id,"IMAGE_FILE_NET_RUN_FROM_SWAP",	0X800,	-1);
	add_enum_member(id,"IMAGE_SCN_LNK_REMOVE",	0X800,	-1);
	add_enum_member(id,"IMAGE_FILE_SYSTEM",	0X1000,	-1);
	add_enum_member(id,"IMAGE_SCN_LNK_COMDAT",	0X1000,	-1);
	add_enum_member(id,"IMAGE_FILE_DLL",	0X2000,	-1);
	add_enum_member(id,"IMAGE_DLLCHARACTERISTICS_WDM_DRIVER",	0X2000,	-1);
	add_enum_member(id,"IMAGE_FILE_UP_SYSTEM_ONLY",	0X4000,	-1);
	add_enum_member(id,"IMAGE_SCN_NO_DEFER_SPEC_EXC",	0X4000,	-1);
	add_enum_member(id,"IMAGE_OS2_SIGNATURE_LE",	0X454C,	-1);
	add_enum_member(id,"IMAGE_VXD_SIGNATURE",	0X454C,	-1);
	add_enum_member(id,"IMAGE_OS2_SIGNATURE",	0X454E,	-1);
	add_enum_member(id,"IMAGE_NT_SIGNATURE",	0X4550,	-1);
	add_enum_member(id,"IMAGE_DOS_SIGNATURE",	0X5A4D,	-1);
	add_enum_member(id,"IMAGE_FILE_BYTES_REVERSED_HI",	0X8000,	-1);
	add_enum_member(id,"IMAGE_SCN_GPREL",	0X8000,	-1);
	add_enum_member(id,"IMAGE_SCN_MEM_FARDATA",	0X8000,	-1);
	add_enum_member(id,"IMAGE_SYM_TYPE_PCODE",	0X8000,	-1);
	add_enum_member(id,"IMAGE_SCN_MEM_PURGEABLE",	0X20000,	-1);
	add_enum_member(id,"IMAGE_SCN_MEM_16BIT",	0X20000,	-1);
	add_enum_member(id,"IMAGE_SCN_MEM_LOCKED",	0X40000,	-1);
	add_enum_member(id,"IMAGE_SCN_MEM_PRELOAD",	0X80000,	-1);
	add_enum_member(id,"IMAGE_SCN_ALIGN_1BYTES",	0X100000,	-1);
	add_enum_member(id,"IMAGE_SCN_ALIGN_2BYTES",	0X200000,	-1);
	add_enum_member(id,"IMAGE_SCN_ALIGN_4BYTES",	0X300000,	-1);
	add_enum_member(id,"IMAGE_SCN_ALIGN_8BYTES",	0X400000,	-1);
	add_enum_member(id,"IMAGE_SCN_ALIGN_16BYTES",	0X500000,	-1);
	add_enum_member(id,"IMAGE_SCN_ALIGN_32BYTES",	0X600000,	-1);
	add_enum_member(id,"IMAGE_SCN_ALIGN_64BYTES",	0X700000,	-1);
	add_enum_member(id,"IMAGE_SCN_ALIGN_128BYTES",	0X800000,	-1);
	add_enum_member(id,"IMAGE_SCN_ALIGN_256BYTES",	0X900000,	-1);
	add_enum_member(id,"IMAGE_SCN_ALIGN_512BYTES",	0XA00000,	-1);
	add_enum_member(id,"IMAGE_SCN_ALIGN_1024BYTES",	0XB00000,	-1);
	add_enum_member(id,"IMAGE_SCN_ALIGN_2048BYTES",	0XC00000,	-1);
	add_enum_member(id,"IMAGE_SCN_ALIGN_4096BYTES",	0XD00000,	-1);
	add_enum_member(id,"IMAGE_SCN_ALIGN_8192BYTES",	0XE00000,	-1);
	add_enum_member(id,"IMAGE_SCN_LNK_NRELOC_OVFL",	0X1000000,	-1);
	add_enum_member(id,"IMAGE_SCN_MEM_DISCARDABLE",	0X2000000,	-1);
	add_enum_member(id,"IMAGE_SCN_MEM_NOT_CACHED",	0X4000000,	-1);
	add_enum_member(id,"IMAGE_SCN_MEM_NOT_PAGED",	0X8000000,	-1);
	add_enum_member(id,"IMAGE_SCN_MEM_SHARED",	0X10000000,	-1);
	add_enum_member(id,"IMAGE_SCN_MEM_EXECUTE",	0X20000000,	-1);
	add_enum_member(id,"IMAGE_SCN_MEM_READ",	0X40000000,	-1);
	add_enum_member(id,"IMAGE_SCN_MEM_WRITE",	0X80000000,	-1);
	add_enum_member(id,"IMAGE_SYM_DEBUG",	0XFFFFFFFE,	-1);
	add_enum_member(id,"IMAGE_SYM_ABSOLUTE",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"MACRO_WM",0x1100000);
	add_enum_member(id,"WM_NULL",	0,	-1);
	add_enum_member(id,"WM_CREATE",	0X1,	-1);
	add_enum_member(id,"WM_DESTROY",	0X2,	-1);
	add_enum_member(id,"WM_MOVE",	0X3,	-1);
	add_enum_member(id,"WM_SIZEWAIT",	0X4,	-1);
	add_enum_member(id,"WM_SIZE",	0X5,	-1);
	add_enum_member(id,"WM_ACTIVATE",	0X6,	-1);
	add_enum_member(id,"WM_SETFOCUS",	0X7,	-1);
	add_enum_member(id,"WM_KILLFOCUS",	0X8,	-1);
	add_enum_member(id,"WM_SETVISIBLE",	0X9,	-1);
	add_enum_member(id,"WM_ENABLE",	0XA,	-1);
	add_enum_member(id,"WM_SETREDRAW",	0XB,	-1);
	add_enum_member(id,"WM_SETTEXT",	0XC,	-1);
	add_enum_member(id,"WM_GETTEXT",	0XD,	-1);
	add_enum_member(id,"WM_GETTEXTLENGTH",	0XE,	-1);
	add_enum_member(id,"WM_PAINT",	0XF,	-1);
	add_enum_member(id,"WM_CLOSE",	0X10,	-1);
	add_enum_member(id,"WM_QUERYENDSESSION",	0X11,	-1);
	add_enum_member(id,"WM_QUIT",	0X12,	-1);
	add_enum_member(id,"WM_QUERYOPEN",	0X13,	-1);
	add_enum_member(id,"WM_ERASEBKGND",	0X14,	-1);
	add_enum_member(id,"WM_SYSCOLORCHANGE",	0X15,	-1);
	add_enum_member(id,"WM_ENDSESSION",	0X16,	-1);
	add_enum_member(id,"WM_SYSTEMERROR",	0X17,	-1);
	add_enum_member(id,"WM_SHOWWINDOW",	0X18,	-1);
	add_enum_member(id,"WM_CTLCOLOR",	0X19,	-1);
	add_enum_member(id,"WM_SETTINGCHANGE",	0X1A,	-1);
	add_enum_member(id,"WM_WININICHANGE",	0X1A,	-1);
	add_enum_member(id,"WM_DEVMODECHANGE",	0X1B,	-1);
	add_enum_member(id,"WM_ACTIVATEAPP",	0X1C,	-1);
	add_enum_member(id,"WM_FONTCHANGE",	0X1D,	-1);
	add_enum_member(id,"WM_TIMECHANGE",	0X1E,	-1);
	add_enum_member(id,"WM_CANCELMODE",	0X1F,	-1);
	add_enum_member(id,"WM_SETCURSOR",	0X20,	-1);
	add_enum_member(id,"WM_MOUSEACTIVATE",	0X21,	-1);
	add_enum_member(id,"WM_CHILDACTIVATE",	0X22,	-1);
	add_enum_member(id,"WM_QUEUESYNC",	0X23,	-1);
	add_enum_member(id,"WM_GETMINMAXINFO",	0X24,	-1);
	add_enum_member(id,"WM_LOGOFF",	0X25,	-1);
	add_enum_member(id,"WM_PAINTICON",	0X26,	-1);
	add_enum_member(id,"WM_ICONERASEBKGND",	0X27,	-1);
	add_enum_member(id,"WM_NEXTDLGCTL",	0X28,	-1);
	add_enum_member(id,"WM_ALTTABACTIVE",	0X29,	-1);
	add_enum_member(id,"WM_SPOOLERSTATUS",	0X2A,	-1);
	add_enum_member(id,"WM_DRAWITEM",	0X2B,	-1);
	add_enum_member(id,"WM_MEASUREITEM",	0X2C,	-1);
	add_enum_member(id,"WM_DELETEITEM",	0X2D,	-1);
	add_enum_member(id,"WM_VKEYTOITEM",	0X2E,	-1);
	add_enum_member(id,"WM_CHARTOITEM",	0X2F,	-1);
	add_enum_member(id,"WM_SETFONT",	0X30,	-1);
	add_enum_member(id,"WM_GETFONT",	0X31,	-1);
	add_enum_member(id,"WM_SETHOTKEY",	0X32,	-1);
	add_enum_member(id,"WM_GETHOTKEY",	0X33,	-1);
	add_enum_member(id,"WM_FILESYSCHANGE",	0X34,	-1);
	add_enum_member(id,"WM_ISACTIVEICON",	0X35,	-1);
	add_enum_member(id,"WM_QUERYPARKICON",	0X36,	-1);
	add_enum_member(id,"WM_QUERYDRAGICON",	0X37,	-1);
	add_enum_member(id,"WM_WINHELP",	0X38,	-1);
	add_enum_member(id,"WM_COMPAREITEM",	0X39,	-1);
	add_enum_member(id,"WM_FULLSCREEN",	0X3A,	-1);
	add_enum_member(id,"WM_CLIENTSHUTDOWN",	0X3B,	-1);
	add_enum_member(id,"WM_DDEMLEVENT",	0X3C,	-1);
	add_enum_member(id,"WM_GETOBJECT",	0X3D,	-1);
	add_enum_member(id,"MM_CALCSCROLL",	0X3F,	-1);
	add_enum_member(id,"WM_TESTING",	0X40,	-1);
	add_enum_member(id,"WM_COMPACTING",	0X41,	-1);
	add_enum_member(id,"WM_OTHERWINDOWCREATED",	0X42,	-1);
	add_enum_member(id,"WM_OTHERWINDOWDESTROYED",	0X43,	-1);
	add_enum_member(id,"WM_COMMNOTIFY",	0X44,	-1);
	add_enum_member(id,"WM_MEDIASTATUSCHANGE",	0X45,	-1);
	add_enum_member(id,"WM_WINDOWPOSCHANGING",	0X46,	-1);
	add_enum_member(id,"WM_WINDOWPOSCHANGED",	0X47,	-1);
	add_enum_member(id,"WM_POWER",	0X48,	-1);
	add_enum_member(id,"WM_COPYGLOBALDATA",	0X49,	-1);
	add_enum_member(id,"WM_COPYDATA",	0X4A,	-1);
	add_enum_member(id,"WM_CANCELJOURNAL",	0X4B,	-1);
	add_enum_member(id,"WM_LOGONNOTIFY",	0X4C,	-1);
	add_enum_member(id,"WM_KEYF1",	0X4D,	-1);
	add_enum_member(id,"WM_NOTIFY",	0X4E,	-1);
	add_enum_member(id,"WM_ACCESS_WINDOW",	0X4F,	-1);
	add_enum_member(id,"WM_INPUTLANGCHANGEREQUEST",	0X50,	-1);
	add_enum_member(id,"WM_INPUTLANGCHANGE",	0X51,	-1);
	add_enum_member(id,"WM_TCARD",	0X52,	-1);
	add_enum_member(id,"WM_HELP",	0X53,	-1);
	add_enum_member(id,"WM_USERCHANGED",	0X54,	-1);
	add_enum_member(id,"WM_NOTIFYFORMAT",	0X55,	-1);
	add_enum_member(id,"WM_QM_ACTIVATE",	0X60,	-1);
	add_enum_member(id,"WM_HOOK_DO_CALLBACK",	0X61,	-1);
	add_enum_member(id,"WM_SYSCOPYDATA",	0X62,	-1);
	add_enum_member(id,"WM_FINALDESTROY",	0X70,	-1);
	add_enum_member(id,"WM_MEASUREITEM_CLIENTDATA",	0X71,	-1);
	add_enum_member(id,"WM_CONTEXTMENU",	0X7B,	-1);
	add_enum_member(id,"WM_STYLECHANGING",	0X7C,	-1);
	add_enum_member(id,"WM_STYLECHANGED",	0X7D,	-1);
	add_enum_member(id,"WM_DISPLAYCHANGE",	0X7E,	-1);
	add_enum_member(id,"WM_GETICON",	0X7F,	-1);
	add_enum_member(id,"WM_SETICON",	0X80,	-1);
	add_enum_member(id,"WM_NCCREATE",	0X81,	-1);
	add_enum_member(id,"WM_NCDESTROY",	0X82,	-1);
	add_enum_member(id,"WM_NCCALCSIZE",	0X83,	-1);
	add_enum_member(id,"WM_NCHITTEST",	0X84,	-1);
	add_enum_member(id,"WM_NCPAINT",	0X85,	-1);
	add_enum_member(id,"WM_NCACTIVATE",	0X86,	-1);
	add_enum_member(id,"WM_GETDLGCODE",	0X87,	-1);
	add_enum_member(id,"WM_SYNCPAINT",	0X88,	-1);
	add_enum_member(id,"WM_SYNCTASK",	0X89,	-1);
	add_enum_member(id,"WM_NCMOUSEMOVE",	0XA0,	-1);
	add_enum_member(id,"WM_NCLBUTTONDOWN",	0XA1,	-1);
	add_enum_member(id,"WM_NCLBUTTONUP",	0XA2,	-1);
	add_enum_member(id,"WM_NCLBUTTONDBLCLK",	0XA3,	-1);
	add_enum_member(id,"WM_NCRBUTTONDOWN",	0XA4,	-1);
	add_enum_member(id,"WM_NCRBUTTONUP",	0XA5,	-1);
	add_enum_member(id,"WM_NCRBUTTONDBLCLK",	0XA6,	-1);
	add_enum_member(id,"WM_NCMBUTTONDOWN",	0XA7,	-1);
	add_enum_member(id,"WM_NCMBUTTONUP",	0XA8,	-1);
	add_enum_member(id,"WM_NCMBUTTONDBLCLK",	0XA9,	-1);
	add_enum_member(id,"WM_NCXBUTTONDOWN",	0XAB,	-1);
	add_enum_member(id,"WM_NCXBUTTONUP",	0XAC,	-1);
	add_enum_member(id,"WM_NCXBUTTONDBLCLK",	0XAD,	-1);
	add_enum_member(id,"EM_GETSEL",	0XB0,	-1);
	add_enum_member(id,"EM_SETSEL",	0XB1,	-1);
	add_enum_member(id,"EM_GETRECT",	0XB2,	-1);
	add_enum_member(id,"EM_SETRECT",	0XB3,	-1);
	add_enum_member(id,"EM_SETRECTNP",	0XB4,	-1);
	add_enum_member(id,"EM_SCROLL",	0XB5,	-1);
	add_enum_member(id,"EM_LINESCROLL",	0XB6,	-1);
	add_enum_member(id,"EM_SCROLLCARET",	0XB7,	-1);
	add_enum_member(id,"EM_GETMODIFY",	0XB8,	-1);
	add_enum_member(id,"IE_GETMODIFY",	0XB8,	-1);
	add_enum_member(id,"EM_SETMODIFY",	0XB9,	-1);
	add_enum_member(id,"IE_SETMODIFY",	0XB9,	-1);
	add_enum_member(id,"EM_GETLINECOUNT",	0XBA,	-1);
	add_enum_member(id,"EM_LINEINDEX",	0XBB,	-1);
	add_enum_member(id,"EM_SETHANDLE",	0XBC,	-1);
	add_enum_member(id,"EM_GETHANDLE",	0XBD,	-1);
	add_enum_member(id,"EM_GETTHUMB",	0XBE,	-1);
	add_enum_member(id,"EM_LINELENGTH",	0XC1,	-1);
	add_enum_member(id,"EM_REPLACESEL",	0XC2,	-1);
	add_enum_member(id,"EM_SETFONT",	0XC3,	-1);
	add_enum_member(id,"EM_GETLINE",	0XC4,	-1);
	add_enum_member(id,"EM_LIMITTEXT",	0XC5,	-1);
	add_enum_member(id,"EM_SETLIMITTEXT",	0XC5,	-1);
	add_enum_member(id,"EM_CANUNDO",	0XC6,	-1);
	add_enum_member(id,"IE_CANUNDO",	0XC6,	-1);
	add_enum_member(id,"EM_UNDO",	0XC7,	-1);
	add_enum_member(id,"IE_UNDO",	0XC7,	-1);
	add_enum_member(id,"EM_FMTLINES",	0XC8,	-1);
	add_enum_member(id,"EM_LINEFROMCHAR",	0XC9,	-1);
	add_enum_member(id,"EM_SETWORDBREAK",	0XCA,	-1);
	add_enum_member(id,"EM_SETTABSTOPS",	0XCB,	-1);
	add_enum_member(id,"EM_SETPASSWORDCHAR",	0XCC,	-1);
	add_enum_member(id,"EM_EMPTYUNDOBUFFER",	0XCD,	-1);
	add_enum_member(id,"IE_EMPTYUNDOBUFFER",	0XCD,	-1);
	add_enum_member(id,"EM_GETFIRSTVISIBLELINE",	0XCE,	-1);
	add_enum_member(id,"EM_SETREADONLY",	0XCF,	-1);
	add_enum_member(id,"EM_SETWORDBREAKPROC",	0XD0,	-1);
	add_enum_member(id,"EM_GETWORDBREAKPROC",	0XD1,	-1);
	add_enum_member(id,"EM_GETPASSWORDCHAR",	0XD2,	-1);
	add_enum_member(id,"EM_SETMARGINS",	0XD3,	-1);
	add_enum_member(id,"EM_GETMARGINS",	0XD4,	-1);
	add_enum_member(id,"EM_GETLIMITTEXT",	0XD5,	-1);
	add_enum_member(id,"EM_POSFROMCHAR",	0XD6,	-1);
	add_enum_member(id,"EM_CHARFROMPOS",	0XD7,	-1);
	add_enum_member(id,"EM_SETIMESTATUS",	0XD8,	-1);
	add_enum_member(id,"EM_GETIMESTATUS",	0XD9,	-1);
	add_enum_member(id,"SBM_SETPOS",	0XE0,	-1);
	add_enum_member(id,"SBM_GETPOS",	0XE1,	-1);
	add_enum_member(id,"SBM_SETRANGE",	0XE2,	-1);
	add_enum_member(id,"SBM_GETRANGE",	0XE3,	-1);
	add_enum_member(id,"SBM_ENABLE_ARROWS",	0XE4,	-1);
	add_enum_member(id,"SBM_SETRANGEREDRAW",	0XE6,	-1);
	add_enum_member(id,"SBM_SETSCROLLINFO",	0XE9,	-1);
	add_enum_member(id,"SBM_GETSCROLLINFO",	0XEA,	-1);
	add_enum_member(id,"SBM_GETSCROLLBARINFO",	0XEB,	-1);
	add_enum_member(id,"BM_GETCHECK",	0XF0,	-1);
	add_enum_member(id,"BM_SETCHECK",	0XF1,	-1);
	add_enum_member(id,"BM_GETSTATE",	0XF2,	-1);
	add_enum_member(id,"BM_SETSTATE",	0XF3,	-1);
	add_enum_member(id,"BM_SETSTYLE",	0XF4,	-1);
	add_enum_member(id,"BM_CLICK",	0XF5,	-1);
	add_enum_member(id,"BM_GETIMAGE",	0XF6,	-1);
	add_enum_member(id,"BM_SETIMAGE",	0XF7,	-1);
	add_enum_member(id,"BM_SETDONTCLICK",	0XF8,	-1);
	add_enum_member(id,"WM_INPUT_DEVICE_CHANGE",	0XFE,	-1);
	add_enum_member(id,"WM_INPUT",	0XFF,	-1);
	add_enum_member(id,"WM_KEYDOWN",	0X100,	-1);
	add_enum_member(id,"WM_KEYFIRST",	0X100,	-1);
	add_enum_member(id,"WM_KEYUP",	0X101,	-1);
	add_enum_member(id,"WM_CHAR",	0X102,	-1);
	add_enum_member(id,"WM_DEADCHAR",	0X103,	-1);
	add_enum_member(id,"WM_SYSKEYDOWN",	0X104,	-1);
	add_enum_member(id,"WM_SYSKEYUP",	0X105,	-1);
	add_enum_member(id,"WM_SYSCHAR",	0X106,	-1);
	add_enum_member(id,"WM_SYSDEADCHAR",	0X107,	-1);
	add_enum_member(id,"WM_KEYLAST",	0X108,	-1);
	add_enum_member(id,"WM_YOMICHAR",	0X108,	-1);
	add_enum_member(id,"WM_UNICHAR",	0X109,	-1);
	add_enum_member(id,"WM_WNT_CONVERTREQUESTEX",	0X109,	-1);
	add_enum_member(id,"WM_CONVERTREQUEST",	0X10A,	-1);
	add_enum_member(id,"WM_CONVERTRESULT",	0X10B,	-1);
	add_enum_member(id,"WM_INTERIM",	0X10C,	-1);
	add_enum_member(id,"WM_IM_INFO",	0X10C,	-1);
	add_enum_member(id,"WM_IME_STARTCOMPOSITION",	0X10D,	-1);
	add_enum_member(id,"WM_IME_ENDCOMPOSITION",	0X10E,	-1);
	add_enum_member(id,"WM_IME_COMPOSITION",	0X10F,	-1);
	add_enum_member(id,"WM_IME_KEYLAST",	0X10F,	-1);
	add_enum_member(id,"WM_INITDIALOG",	0X110,	-1);
	add_enum_member(id,"WM_COMMAND",	0X111,	-1);
	add_enum_member(id,"WM_SYSCOMMAND",	0X112,	-1);
	add_enum_member(id,"WM_TIMER",	0X113,	-1);
	add_enum_member(id,"WM_HSCROLL",	0X114,	-1);
	add_enum_member(id,"WM_VSCROLL",	0X115,	-1);
	add_enum_member(id,"WM_INITMENU",	0X116,	-1);
	add_enum_member(id,"WM_INITMENUPOPUP",	0X117,	-1);
	add_enum_member(id,"WM_SYSTIMER",	0X118,	-1);
	add_enum_member(id,"WM_GESTURE",	0X119,	-1);
	add_enum_member(id,"WM_GESTURENOTIFY",	0X11A,	-1);
	add_enum_member(id,"WM_MENUSELECT",	0X11F,	-1);
	add_enum_member(id,"WM_MENUCHAR",	0X120,	-1);
	add_enum_member(id,"WM_ENTERIDLE",	0X121,	-1);
	add_enum_member(id,"WM_MENURBUTTONUP",	0X122,	-1);
	add_enum_member(id,"WM_MENUDRAG",	0X123,	-1);
	add_enum_member(id,"WM_MENUGETOBJECT",	0X124,	-1);
	add_enum_member(id,"WM_UNINITMENUPOPUP",	0X125,	-1);
	add_enum_member(id,"WM_MENUCOMMAND",	0X126,	-1);
	add_enum_member(id,"WM_CHANGEUISTATE",	0X127,	-1);
	add_enum_member(id,"WM_UPDATEUISTATE",	0X128,	-1);
	add_enum_member(id,"WM_QUERYUISTATE",	0X129,	-1);
	add_enum_member(id,"WM_LBTRACKPOINT",	0X131,	-1);
	add_enum_member(id,"WM_CTLCOLORMSGBOX",	0X132,	-1);
	add_enum_member(id,"WM_CTLCOLOREDIT",	0X133,	-1);
	add_enum_member(id,"WM_CTLCOLORLISTBOX",	0X134,	-1);
	add_enum_member(id,"WM_CTLCOLORBTN",	0X135,	-1);
	add_enum_member(id,"WM_CTLCOLORDLG",	0X136,	-1);
	add_enum_member(id,"WM_CTLCOLORSCROLLBAR",	0X137,	-1);
	add_enum_member(id,"WM_CTLCOLORSTATIC",	0X138,	-1);
	add_enum_member(id,"CB_GETEDITSEL",	0X140,	-1);
	add_enum_member(id,"CB_LIMITTEXT",	0X141,	-1);
	add_enum_member(id,"CB_SETEDITSEL",	0X142,	-1);
	add_enum_member(id,"CB_ADDSTRING",	0X143,	-1);
	add_enum_member(id,"CB_DELETESTRING",	0X144,	-1);
	add_enum_member(id,"CBEM_DELETEITEM",	0X144,	-1);
	add_enum_member(id,"CB_DIR",	0X145,	-1);
	add_enum_member(id,"CB_GETCOUNT",	0X146,	-1);
	add_enum_member(id,"CB_GETCURSEL",	0X147,	-1);
	add_enum_member(id,"CB_GETLBTEXT",	0X148,	-1);
	add_enum_member(id,"CB_GETLBTEXTLEN",	0X149,	-1);
	add_enum_member(id,"CB_INSERTSTRING",	0X14A,	-1);
	add_enum_member(id,"CB_RESETCONTENT",	0X14B,	-1);
	add_enum_member(id,"CB_FINDSTRING",	0X14C,	-1);
	add_enum_member(id,"CB_SELECTSTRING",	0X14D,	-1);
	add_enum_member(id,"CB_SETCURSEL",	0X14E,	-1);
	add_enum_member(id,"CB_SHOWDROPDOWN",	0X14F,	-1);
	add_enum_member(id,"CB_GETITEMDATA",	0X150,	-1);
	add_enum_member(id,"CB_SETITEMDATA",	0X151,	-1);
	add_enum_member(id,"CB_GETDROPPEDCONTROLRECT",	0X152,	-1);
	add_enum_member(id,"CB_SETITEMHEIGHT",	0X153,	-1);
	add_enum_member(id,"CB_GETITEMHEIGHT",	0X154,	-1);
	add_enum_member(id,"CB_SETEXTENDEDUI",	0X155,	-1);
	add_enum_member(id,"CB_GETEXTENDEDUI",	0X156,	-1);
	add_enum_member(id,"CB_GETDROPPEDSTATE",	0X157,	-1);
	add_enum_member(id,"CB_FINDSTRINGEXACT",	0X158,	-1);
	add_enum_member(id,"CB_SETLOCALE",	0X159,	-1);
	add_enum_member(id,"CB_GETLOCALE",	0X15A,	-1);
	add_enum_member(id,"CB_GETTOPINDEX",	0X15B,	-1);
	add_enum_member(id,"CB_SETTOPINDEX",	0X15C,	-1);
	add_enum_member(id,"CB_GETHORIZONTALEXTENT",	0X15D,	-1);
	add_enum_member(id,"CB_SETHORIZONTALEXTENT",	0X15E,	-1);
	add_enum_member(id,"CB_GETDROPPEDWIDTH",	0X15F,	-1);
	add_enum_member(id,"CB_SETDROPPEDWIDTH",	0X160,	-1);
	add_enum_member(id,"CB_INITSTORAGE",	0X161,	-1);
	add_enum_member(id,"CB_MULTIPLEADDSTRING",	0X163,	-1);
	add_enum_member(id,"CB_GETCOMBOBOXINFO",	0X164,	-1);
	add_enum_member(id,"STM_SETICON",	0X170,	-1);
	add_enum_member(id,"STM_GETICON",	0X171,	-1);
	add_enum_member(id,"STM_SETIMAGE",	0X172,	-1);
	add_enum_member(id,"STM_GETIMAGE",	0X173,	-1);
	add_enum_member(id,"STM_MSGMAX",	0X174,	-1);
	add_enum_member(id,"LB_ADDSTRING",	0X180,	-1);
	add_enum_member(id,"LB_INSERTSTRING",	0X181,	-1);
	add_enum_member(id,"LB_DELETESTRING",	0X182,	-1);
	add_enum_member(id,"LB_SELITEMRANGEEX",	0X183,	-1);
	add_enum_member(id,"LB_RESETCONTENT",	0X184,	-1);
	add_enum_member(id,"LB_SETSEL",	0X185,	-1);
	add_enum_member(id,"LB_SETCURSEL",	0X186,	-1);
	add_enum_member(id,"LB_GETSEL",	0X187,	-1);
	add_enum_member(id,"LB_GETCURSEL",	0X188,	-1);
	add_enum_member(id,"LB_GETTEXT",	0X189,	-1);
	add_enum_member(id,"LB_GETTEXTLEN",	0X18A,	-1);
	add_enum_member(id,"LB_GETCOUNT",	0X18B,	-1);
	add_enum_member(id,"LB_SELECTSTRING",	0X18C,	-1);
	add_enum_member(id,"LB_DIR",	0X18D,	-1);
	add_enum_member(id,"LB_GETTOPINDEX",	0X18E,	-1);
	add_enum_member(id,"LB_FINDSTRING",	0X18F,	-1);
	add_enum_member(id,"LB_GETSELCOUNT",	0X190,	-1);
	add_enum_member(id,"LB_GETSELITEMS",	0X191,	-1);
	add_enum_member(id,"LB_SETTABSTOPS",	0X192,	-1);
	add_enum_member(id,"LB_GETHORIZONTALEXTENT",	0X193,	-1);
	add_enum_member(id,"LB_SETHORIZONTALEXTENT",	0X194,	-1);
	add_enum_member(id,"LB_SETCOLUMNWIDTH",	0X195,	-1);
	add_enum_member(id,"LB_ADDFILE",	0X196,	-1);
	add_enum_member(id,"LB_SETTOPINDEX",	0X197,	-1);
	add_enum_member(id,"LB_GETITEMRECT",	0X198,	-1);
	add_enum_member(id,"LB_GETITEMDATA",	0X199,	-1);
	add_enum_member(id,"LB_SETITEMDATA",	0X19A,	-1);
	add_enum_member(id,"LB_SELITEMRANGE",	0X19B,	-1);
	add_enum_member(id,"LB_SETANCHORINDEX",	0X19C,	-1);
	add_enum_member(id,"LB_GETANCHORINDEX",	0X19D,	-1);
	add_enum_member(id,"LB_SETCARETINDEX",	0X19E,	-1);
	add_enum_member(id,"LB_GETCARETINDEX",	0X19F,	-1);
	add_enum_member(id,"LB_SETITEMHEIGHT",	0X1A0,	-1);
	add_enum_member(id,"LB_GETITEMHEIGHT",	0X1A1,	-1);
	add_enum_member(id,"LB_FINDSTRINGEXACT",	0X1A2,	-1);
	add_enum_member(id,"LBCB_CARETON",	0X1A3,	-1);
	add_enum_member(id,"LBCB_CARETOFF",	0X1A4,	-1);
	add_enum_member(id,"LB_SETLOCALE",	0X1A5,	-1);
	add_enum_member(id,"LB_GETLOCALE",	0X1A6,	-1);
	add_enum_member(id,"LB_SETCOUNT",	0X1A7,	-1);
	add_enum_member(id,"LB_INITSTORAGE",	0X1A8,	-1);
	add_enum_member(id,"LB_ITEMFROMPOINT",	0X1A9,	-1);
	add_enum_member(id,"LB_INSERTSTRINGUPPER",	0X1AA,	-1);
	add_enum_member(id,"LB_INSERTSTRINGLOWER",	0X1AB,	-1);
	add_enum_member(id,"LB_ADDSTRINGUPPER",	0X1AC,	-1);
	add_enum_member(id,"LB_ADDSTRINGLOWER",	0X1AD,	-1);
	add_enum_member(id,"LB_MULTIPLEADDSTRING",	0X1B1,	-1);
	add_enum_member(id,"LB_GETLISTBOXINFO",	0X1B2,	-1);
	add_enum_member(id,"MN_SETHMENU",	0X1E0,	-1);
	add_enum_member(id,"MN_GETHMENU",	0X1E1,	-1);
	add_enum_member(id,"MN_SIZEWINDOW",	0X1E2,	-1);
	add_enum_member(id,"MN_OPENHIERARCHY",	0X1E3,	-1);
	add_enum_member(id,"MN_CLOSEHIERARCHY",	0X1E4,	-1);
	add_enum_member(id,"MN_SELECTITEM",	0X1E5,	-1);
	add_enum_member(id,"MN_CANCELMENUS",	0X1E6,	-1);
	add_enum_member(id,"MN_SELECTFIRSTVALIDITEM",	0X1E7,	-1);
	add_enum_member(id,"MN_GETPPOPUPMENU",	0X1EA,	-1);
	add_enum_member(id,"MN_FINDMENUWINDOWFROMPOINT",	0X1EB,	-1);
	add_enum_member(id,"MN_SHOWPOPUPWINDOW",	0X1EC,	-1);
	add_enum_member(id,"MN_BUTTONDOWN",	0X1ED,	-1);
	add_enum_member(id,"MN_MOUSEMOVE",	0X1EE,	-1);
	add_enum_member(id,"MN_BUTTONUP",	0X1EF,	-1);
	add_enum_member(id,"MN_SETTIMERTOOPENHIERARCHY",	0X1F0,	-1);
	add_enum_member(id,"MN_DBLCLK",	0X1F1,	-1);
	add_enum_member(id,"WM_MOUSEFIRST",	0X200,	-1);
	add_enum_member(id,"WM_MOUSEMOVE",	0X200,	-1);
	add_enum_member(id,"WM_LBUTTONDOWN",	0X201,	-1);
	add_enum_member(id,"WM_LBUTTONUP",	0X202,	-1);
	add_enum_member(id,"WM_LBUTTONDBLCLK",	0X203,	-1);
	add_enum_member(id,"WM_RBUTTONDOWN",	0X204,	-1);
	add_enum_member(id,"WM_RBUTTONUP",	0X205,	-1);
	add_enum_member(id,"WM_RBUTTONDBLCLK",	0X206,	-1);
	add_enum_member(id,"WM_MBUTTONDOWN",	0X207,	-1);
	add_enum_member(id,"WM_MBUTTONUP",	0X208,	-1);
	add_enum_member(id,"WM_MBUTTONDBLCLK",	0X209,	-1);
	add_enum_member(id,"WM_MOUSELAST",	0X20A,	-1);
	add_enum_member(id,"WM_MOUSEWHEEL",	0X20A,	-1);
	add_enum_member(id,"WM_XBUTTONDOWN",	0X20B,	-1);
	add_enum_member(id,"WM_XBUTTONUP",	0X20C,	-1);
	add_enum_member(id,"WM_XBUTTONDBLCLK",	0X20D,	-1);
	add_enum_member(id,"WM_MOUSEHWHEEL",	0X20E,	-1);
	add_enum_member(id,"WM_PARENTNOTIFY",	0X210,	-1);
	add_enum_member(id,"WM_ENTERMENULOOP",	0X211,	-1);
	add_enum_member(id,"WM_EXITMENULOOP",	0X212,	-1);
	add_enum_member(id,"WM_NEXTMENU",	0X213,	-1);
	add_enum_member(id,"WM_SIZING",	0X214,	-1);
	add_enum_member(id,"WM_CAPTURECHANGED",	0X215,	-1);
	add_enum_member(id,"WM_MOVING",	0X216,	-1);
	add_enum_member(id,"WM_POWERBROADCAST",	0X218,	-1);
	add_enum_member(id,"WM_DEVICECHANGE",	0X219,	-1);
	add_enum_member(id,"WM_MDICREATE",	0X220,	-1);
	add_enum_member(id,"WM_MDIDESTROY",	0X221,	-1);
	add_enum_member(id,"WM_MDIACTIVATE",	0X222,	-1);
	add_enum_member(id,"WM_MDIRESTORE",	0X223,	-1);
	add_enum_member(id,"WM_MDINEXT",	0X224,	-1);
	add_enum_member(id,"WM_MDIMAXIMIZE",	0X225,	-1);
	add_enum_member(id,"WM_MDITILE",	0X226,	-1);
	add_enum_member(id,"WM_MDICASCADE",	0X227,	-1);
	add_enum_member(id,"WM_MDIICONARRANGE",	0X228,	-1);
	add_enum_member(id,"WM_MDIGETACTIVE",	0X229,	-1);
	add_enum_member(id,"WM_DROPOBJECT",	0X22A,	-1);
	add_enum_member(id,"WM_QUERYDROPOBJECT",	0X22B,	-1);
	add_enum_member(id,"WM_BEGINDRAG",	0X22C,	-1);
	add_enum_member(id,"WM_DRAGLOOP",	0X22D,	-1);
	add_enum_member(id,"WM_DRAGSELECT",	0X22E,	-1);
	add_enum_member(id,"WM_DRAGMOVE",	0X22F,	-1);
	add_enum_member(id,"WM_MDISETMENU",	0X230,	-1);
	add_enum_member(id,"WM_ENTERSIZEMOVE",	0X231,	-1);
	add_enum_member(id,"WM_EXITSIZEMOVE",	0X232,	-1);
	add_enum_member(id,"WM_DROPFILES",	0X233,	-1);
	add_enum_member(id,"WM_MDIREFRESHMENU",	0X234,	-1);
	add_enum_member(id,"WM_POINTERDEVICECHANGE",	0X238,	-1);
	add_enum_member(id,"WM_POINTERDEVICEINRANGE",	0X239,	-1);
	add_enum_member(id,"WM_POINTERDEVICEOUTOFRANGE",	0X23A,	-1);
	add_enum_member(id,"WM_TOUCH",	0X240,	-1);
	add_enum_member(id,"WM_NCPOINTERUPDATE",	0X241,	-1);
	add_enum_member(id,"WM_NCPOINTERDOWN",	0X242,	-1);
	add_enum_member(id,"WM_NCPOINTERUP",	0X243,	-1);
	add_enum_member(id,"WM_POINTERUPDATE",	0X245,	-1);
	add_enum_member(id,"WM_POINTERDOWN",	0X246,	-1);
	add_enum_member(id,"WM_POINTERUP",	0X247,	-1);
	add_enum_member(id,"WM_POINTERENTER",	0X249,	-1);
	add_enum_member(id,"WM_POINTERLEAVE",	0X24A,	-1);
	add_enum_member(id,"WM_POINTERACTIVATE",	0X24B,	-1);
	add_enum_member(id,"WM_POINTERCAPTURECHANGED",	0X24C,	-1);
	add_enum_member(id,"WM_TOUCHHITTESTING",	0X24D,	-1);
	add_enum_member(id,"WM_POINTERWHEEL",	0X24E,	-1);
	add_enum_member(id,"WM_POINTERHWHEEL",	0X24F,	-1);
	add_enum_member(id,"WM_POINTERROUTEDTO",	0X251,	-1);
	add_enum_member(id,"WM_POINTERROUTEDAWAY",	0X252,	-1);
	add_enum_member(id,"WM_POINTERROUTEDRELEASED",	0X253,	-1);
	add_enum_member(id,"WM_IME_REPORT",	0X280,	-1);
	add_enum_member(id,"WM_HANGEULFIRST",	0X280,	-1);
	add_enum_member(id,"WM_KANJIFIRST",	0X280,	-1);
	add_enum_member(id,"WM_IME_SETCONTEXT",	0X281,	-1);
	add_enum_member(id,"WM_IME_NOTIFY",	0X282,	-1);
	add_enum_member(id,"WM_IME_CONTROL",	0X283,	-1);
	add_enum_member(id,"WM_IME_COMPOSITIONFULL",	0X284,	-1);
	add_enum_member(id,"WM_IME_SELECT",	0X285,	-1);
	add_enum_member(id,"WM_IME_CHAR",	0X286,	-1);
	add_enum_member(id,"WM_IME_SYSTEM",	0X287,	-1);
	add_enum_member(id,"WM_IME_REQUEST",	0X288,	-1);
	add_enum_member(id,"WM_IMEKEYDOWN",	0X290,	-1);
	add_enum_member(id,"WM_IME_KEYDOWN",	0X290,	-1);
	add_enum_member(id,"WM_IMEKEYUP",	0X291,	-1);
	add_enum_member(id,"WM_IME_KEYUP",	0X291,	-1);
	add_enum_member(id,"WM_HANGEULLAST",	0X29F,	-1);
	add_enum_member(id,"WM_KANJILAST",	0X29F,	-1);
	add_enum_member(id,"WM_NCMOUSEHOVER",	0X2A0,	-1);
	add_enum_member(id,"WM_MOUSEHOVER",	0X2A1,	-1);
	add_enum_member(id,"WM_NCMOUSELEAVE",	0X2A2,	-1);
	add_enum_member(id,"WM_MOUSELEAVE",	0X2A3,	-1);
	add_enum_member(id,"WM_TRACKMOUSEEVENT_LAST",	0X2AF,	-1);
	add_enum_member(id,"WM_WTSSESSION_CHANGE",	0X2B1,	-1);
	add_enum_member(id,"WM_TABLET_FIRST",	0X2C0,	-1);
	add_enum_member(id,"WM_TABLET_ADDED",	0X2C8,	-1);
	add_enum_member(id,"WM_TABLET_DELETED",	0X2C9,	-1);
	add_enum_member(id,"WM_TABLET_FLICK",	0X2CB,	-1);
	add_enum_member(id,"WM_TABLET_QUERYSYSTEMGESTURESTATUS",	0X2CC,	-1);
	add_enum_member(id,"WM_TABLET_LAST",	0X2DF,	-1);
	add_enum_member(id,"WM_DPICHANGED",	0X2E0,	-1);
	add_enum_member(id,"WM_DPICHANGED_BEFOREPARENT",	0X2E2,	-1);
	add_enum_member(id,"WM_DPICHANGED_AFTERPARENT",	0X2E3,	-1);
	add_enum_member(id,"WM_GETDPISCALEDSIZE",	0X2E4,	-1);
	add_enum_member(id,"WM_CUT",	0X300,	-1);
	add_enum_member(id,"WM_COPY",	0X301,	-1);
	add_enum_member(id,"WM_PASTE",	0X302,	-1);
	add_enum_member(id,"WM_CLEAR",	0X303,	-1);
	add_enum_member(id,"WM_UNDO",	0X304,	-1);
	add_enum_member(id,"WM_RENDERFORMAT",	0X305,	-1);
	add_enum_member(id,"WM_RENDERALLFORMATS",	0X306,	-1);
	add_enum_member(id,"WM_DESTROYCLIPBOARD",	0X307,	-1);
	add_enum_member(id,"WM_DRAWCLIPBOARD",	0X308,	-1);
	add_enum_member(id,"WM_PAINTCLIPBOARD",	0X309,	-1);
	add_enum_member(id,"WM_VSCROLLCLIPBOARD",	0X30A,	-1);
	add_enum_member(id,"WM_SIZECLIPBOARD",	0X30B,	-1);
	add_enum_member(id,"WM_ASKCBFORMATNAME",	0X30C,	-1);
	add_enum_member(id,"WM_CHANGECBCHAIN",	0X30D,	-1);
	add_enum_member(id,"WM_HSCROLLCLIPBOARD",	0X30E,	-1);
	add_enum_member(id,"WM_QUERYNEWPALETTE",	0X30F,	-1);
	add_enum_member(id,"WM_PALETTEISCHANGING",	0X310,	-1);
	add_enum_member(id,"WM_PALETTECHANGED",	0X311,	-1);
	add_enum_member(id,"WM_HOTKEY",	0X312,	-1);
	add_enum_member(id,"WM_SYSMENU",	0X313,	-1);
	add_enum_member(id,"WM_HOOKMSG",	0X314,	-1);
	add_enum_member(id,"WM_EXITPROCESS",	0X315,	-1);
	add_enum_member(id,"WM_WAKETHREAD",	0X316,	-1);
	add_enum_member(id,"WM_PRINT",	0X317,	-1);
	add_enum_member(id,"WM_PRINTCLIENT",	0X318,	-1);
	add_enum_member(id,"WM_APPCOMMAND",	0X319,	-1);
	add_enum_member(id,"WM_THEMECHANGED",	0X31A,	-1);
	add_enum_member(id,"WM_CLIPBOARDUPDATE",	0X31D,	-1);
	add_enum_member(id,"WM_DWMCOMPOSITIONCHANGED",	0X31E,	-1);
	add_enum_member(id,"WM_DWMNCRENDERINGCHANGED",	0X31F,	-1);
	add_enum_member(id,"WM_DWMCOLORIZATIONCOLORCHANGED",	0X320,	-1);
	add_enum_member(id,"WM_DWMWINDOWMAXIMIZEDCHANGE",	0X321,	-1);
	add_enum_member(id,"WM_DWMSENDICONICTHUMBNAIL",	0X323,	-1);
	add_enum_member(id,"WM_DWMSENDICONICLIVEPREVIEWBITMAP",	0X326,	-1);
	add_enum_member(id,"WM_GETTITLEBARINFOEX",	0X33F,	-1);
	add_enum_member(id,"WM_HANDHELDFIRST",	0X358,	-1);
	add_enum_member(id,"WM_HANDHELDLAST",	0X35F,	-1);
	add_enum_member(id,"WM_AFXFIRST",	0X360,	-1);
	add_enum_member(id,"WM_AFXLAST",	0X37F,	-1);
	add_enum_member(id,"WM_PENWINFIRST",	0X380,	-1);
	add_enum_member(id,"WM_RCRESULT",	0X381,	-1);
	add_enum_member(id,"WM_HOOKRCRESULT",	0X382,	-1);
	add_enum_member(id,"WM_GLOBALRCCHANGE",	0X383,	-1);
	add_enum_member(id,"WM_PENMISCINFO",	0X383,	-1);
	add_enum_member(id,"WM_SKB",	0X384,	-1);
	add_enum_member(id,"WM_HEDITCTL",	0X385,	-1);
	add_enum_member(id,"WM_PENCTL",	0X385,	-1);
	add_enum_member(id,"WM_PENMISC",	0X386,	-1);
	add_enum_member(id,"WM_CTLINIT",	0X387,	-1);
	add_enum_member(id,"WM_PENEVENT",	0X388,	-1);
	add_enum_member(id,"WM_PENWINLAST",	0X38F,	-1);
	add_enum_member(id,"WM_INTERNAL_COALESCE_FIRST",	0X390,	-1);
	add_enum_member(id,"WM_COALESCE_FIRST",	0X390,	-1);
	add_enum_member(id,"WM_COALESCE_LAST",	0X39F,	-1);
	add_enum_member(id,"WM_MM_RESERVED_FIRST",	0X3A0,	-1);
	add_enum_member(id,"WM_INTERNAL_COALESCE_LAST",	0X3B0,	-1);
	add_enum_member(id,"WM_MM_RESERVED_LAST",	0X3DF,	-1);
	add_enum_member(id,"WM_DDE_INITIATE",	0X3E0,	-1);
	add_enum_member(id,"WM_DDE_FIRST",	0X3E0,	-1);
	add_enum_member(id,"WM_DDE_TERMINATE",	0X3E1,	-1);
	add_enum_member(id,"WM_DDE_ADVISE",	0X3E2,	-1);
	add_enum_member(id,"WM_DDE_UNADVISE",	0X3E3,	-1);
	add_enum_member(id,"WM_DDE_ACK",	0X3E4,	-1);
	add_enum_member(id,"WM_DDE_DATA",	0X3E5,	-1);
	add_enum_member(id,"WM_DDE_REQUEST",	0X3E6,	-1);
	add_enum_member(id,"WM_DDE_POKE",	0X3E7,	-1);
	add_enum_member(id,"WM_DDE_EXECUTE",	0X3E8,	-1);
	add_enum_member(id,"WM_DDE_LAST",	0X3E8,	-1);
	add_enum_member(id,"WM_DBNOTIFICATION",	0X3FD,	-1);
	add_enum_member(id,"WM_NETCONNECT",	0X3FE,	-1);
	add_enum_member(id,"WM_HIBERNATE",	0X3FF,	-1);
	add_enum_member(id,"WM_USER",	0X400,	-1);
	add_enum_member(id,"DDM_SETFMT",	0X400,	-1);
	add_enum_member(id,"DM_GETDEFID",	0X400,	-1);
	add_enum_member(id,"NIN_SELECT",	0X400,	-1);
	add_enum_member(id,"TBM_GETPOS",	0X400,	-1);
	add_enum_member(id,"WM_PSD_PAGESETUPDLG",	0X400,	-1);
	add_enum_member(id,"WM_CAP_START",	0X400,	-1);
	add_enum_member(id,"DDM_DRAW",	0X401,	-1);
	add_enum_member(id,"DM_SETDEFID",	0X401,	-1);
	add_enum_member(id,"NIN_KEYSELECT",	0X401,	-1);
	add_enum_member(id,"TBM_GETRANGEMIN",	0X401,	-1);
	add_enum_member(id,"WM_PSD_FULLPAGERECT",	0X401,	-1);
	add_enum_member(id,"WM_CHOOSEFONT_GETLOGFONT",	0X401,	-1);
	add_enum_member(id,"HKM_SETHOTKEY",	0X401,	-1);
	add_enum_member(id,"PBM_SETRANGE",	0X401,	-1);
	add_enum_member(id,"RB_INSERTBANDA",	0X401,	-1);
	add_enum_member(id,"CBEM_INSERTITEMA",	0X401,	-1);
	add_enum_member(id,"SB_SETTEXTA",	0X401,	-1);
	add_enum_member(id,"TTM_ACTIVATE",	0X401,	-1);
	add_enum_member(id,"TB_ENABLEBUTTON",	0X401,	-1);
	add_enum_member(id,"WM_CAP_GET_CAPSTREAMPTR",	0X401,	-1);
	add_enum_member(id,"DDM_CLOSE",	0X402,	-1);
	add_enum_member(id,"DM_REPOSITION",	0X402,	-1);
	add_enum_member(id,"NIN_BALLOONSHOW",	0X402,	-1);
	add_enum_member(id,"TBM_GETRANGEMAX",	0X402,	-1);
	add_enum_member(id,"WM_PSD_MINMARGINRECT",	0X402,	-1);
	add_enum_member(id,"HKM_GETHOTKEY",	0X402,	-1);
	add_enum_member(id,"PBM_SETPOS",	0X402,	-1);
	add_enum_member(id,"RB_DELETEBAND",	0X402,	-1);
	add_enum_member(id,"CBEM_SETIMAGELIST",	0X402,	-1);
	add_enum_member(id,"SB_GETTEXTA",	0X402,	-1);
	add_enum_member(id,"TB_CHECKBUTTON",	0X402,	-1);
	add_enum_member(id,"WM_CAP_SET_CALLBACK_ERRORA",	0X402,	-1);
	add_enum_member(id,"DDM_BEGIN",	0X403,	-1);
	add_enum_member(id,"NIN_BALLOONHIDE",	0X403,	-1);
	add_enum_member(id,"TBM_GETTIC",	0X403,	-1);
	add_enum_member(id,"WM_PSD_MARGINRECT",	0X403,	-1);
	add_enum_member(id,"HKM_SETRULES",	0X403,	-1);
	add_enum_member(id,"PBM_DELTAPOS",	0X403,	-1);
	add_enum_member(id,"RB_GETBARINFO",	0X403,	-1);
	add_enum_member(id,"CBEM_GETIMAGELIST",	0X403,	-1);
	add_enum_member(id,"SB_GETTEXTLENGTHA",	0X403,	-1);
	add_enum_member(id,"TTM_SETDELAYTIME",	0X403,	-1);
	add_enum_member(id,"TB_PRESSBUTTON",	0X403,	-1);
	add_enum_member(id,"WM_CAP_SET_CALLBACK_STATUSA",	0X403,	-1);
	add_enum_member(id,"DDM_END",	0X404,	-1);
	add_enum_member(id,"NIN_BALLOONTIMEOUT",	0X404,	-1);
	add_enum_member(id,"TBM_SETTIC",	0X404,	-1);
	add_enum_member(id,"WM_PSD_GREEKTEXTRECT",	0X404,	-1);
	add_enum_member(id,"PBM_SETSTEP",	0X404,	-1);
	add_enum_member(id,"RB_SETBARINFO",	0X404,	-1);
	add_enum_member(id,"CBEM_GETITEMA",	0X404,	-1);
	add_enum_member(id,"SB_SETPARTS",	0X404,	-1);
	add_enum_member(id,"TTM_ADDTOOLA",	0X404,	-1);
	add_enum_member(id,"TB_HIDEBUTTON",	0X404,	-1);
	add_enum_member(id,"WM_CAP_SET_CALLBACK_YIELD",	0X404,	-1);
	add_enum_member(id,"NIN_BALLOONUSERCLICK",	0X405,	-1);
	add_enum_member(id,"TBM_SETPOS",	0X405,	-1);
	add_enum_member(id,"WM_PSD_ENVSTAMPRECT",	0X405,	-1);
	add_enum_member(id,"PBM_STEPIT",	0X405,	-1);
	add_enum_member(id,"CBEM_SETITEMA",	0X405,	-1);
	add_enum_member(id,"TTM_DELTOOLA",	0X405,	-1);
	add_enum_member(id,"TB_INDETERMINATE",	0X405,	-1);
	add_enum_member(id,"WM_CAP_SET_CALLBACK_FRAME",	0X405,	-1);
	add_enum_member(id,"NIN_POPUPOPEN",	0X406,	-1);
	add_enum_member(id,"TBM_SETRANGE",	0X406,	-1);
	add_enum_member(id,"WM_PSD_YAFULLPAGERECT",	0X406,	-1);
	add_enum_member(id,"PBM_SETRANGE32",	0X406,	-1);
	add_enum_member(id,"RB_SETBANDINFOA",	0X406,	-1);
	add_enum_member(id,"CBEM_GETCOMBOCONTROL",	0X406,	-1);
	add_enum_member(id,"SB_GETPARTS",	0X406,	-1);
	add_enum_member(id,"TTM_NEWTOOLRECTA",	0X406,	-1);
	add_enum_member(id,"TB_MARKBUTTON",	0X406,	-1);
	add_enum_member(id,"WM_CAP_SET_CALLBACK_VIDEOSTREAM",	0X406,	-1);
	add_enum_member(id,"NIN_POPUPCLOSE",	0X407,	-1);
	add_enum_member(id,"TBM_SETRANGEMIN",	0X407,	-1);
	add_enum_member(id,"PBM_GETRANGE",	0X407,	-1);
	add_enum_member(id,"RB_SETPARENT",	0X407,	-1);
	add_enum_member(id,"CBEM_GETEDITCONTROL",	0X407,	-1);
	add_enum_member(id,"SB_GETBORDERS",	0X407,	-1);
	add_enum_member(id,"TTM_RELAYEVENT",	0X407,	-1);
	add_enum_member(id,"WM_CAP_SET_CALLBACK_WAVESTREAM",	0X407,	-1);
	add_enum_member(id,"TBM_SETRANGEMAX",	0X408,	-1);
	add_enum_member(id,"PBM_GETPOS",	0X408,	-1);
	add_enum_member(id,"RB_HITTEST",	0X408,	-1);
	add_enum_member(id,"CBEM_SETEXSTYLE",	0X408,	-1);
	add_enum_member(id,"SB_SETMINHEIGHT",	0X408,	-1);
	add_enum_member(id,"TTM_GETTOOLINFOA",	0X408,	-1);
	add_enum_member(id,"WM_CAP_GET_USER_DATA",	0X408,	-1);
	add_enum_member(id,"TBM_CLEARTICS",	0X409,	-1);
	add_enum_member(id,"PBM_SETBARCOLOR",	0X409,	-1);
	add_enum_member(id,"RB_GETRECT",	0X409,	-1);
	add_enum_member(id,"CBEM_GETEXSTYLE",	0X409,	-1);
	add_enum_member(id,"CBEM_GETEXTENDEDSTYLE",	0X409,	-1);
	add_enum_member(id,"SB_SIMPLE",	0X409,	-1);
	add_enum_member(id,"TTM_SETTOOLINFOA",	0X409,	-1);
	add_enum_member(id,"TB_ISBUTTONENABLED",	0X409,	-1);
	add_enum_member(id,"WM_CAP_SET_USER_DATA",	0X409,	-1);
	add_enum_member(id,"TBM_SETSEL",	0X40A,	-1);
	add_enum_member(id,"PBM_SETMARQUEE",	0X40A,	-1);
	add_enum_member(id,"RB_INSERTBANDW",	0X40A,	-1);
	add_enum_member(id,"CBEM_HASEDITCHANGED",	0X40A,	-1);
	add_enum_member(id,"SB_GETRECT",	0X40A,	-1);
	add_enum_member(id,"TTM_HITTESTA",	0X40A,	-1);
	add_enum_member(id,"WIZ_QUERYNUMPAGES",	0X40A,	-1);
	add_enum_member(id,"TB_ISBUTTONCHECKED",	0X40A,	-1);
	add_enum_member(id,"WM_CAP_DRIVER_CONNECT",	0X40A,	-1);
	add_enum_member(id,"TBM_SETSELSTART",	0X40B,	-1);
	add_enum_member(id,"RB_SETBANDINFOW",	0X40B,	-1);
	add_enum_member(id,"CBEM_INSERTITEMW",	0X40B,	-1);
	add_enum_member(id,"SB_SETTEXTW",	0X40B,	-1);
	add_enum_member(id,"TTM_GETTEXTA",	0X40B,	-1);
	add_enum_member(id,"WIZ_NEXT",	0X40B,	-1);
	add_enum_member(id,"TB_ISBUTTONPRESSED",	0X40B,	-1);
	add_enum_member(id,"WM_CAP_DRIVER_DISCONNECT",	0X40B,	-1);
	add_enum_member(id,"TBM_SETSELEND",	0X40C,	-1);
	add_enum_member(id,"RB_GETBANDCOUNT",	0X40C,	-1);
	add_enum_member(id,"CBEM_SETITEMW",	0X40C,	-1);
	add_enum_member(id,"SB_GETTEXTLENGTHW",	0X40C,	-1);
	add_enum_member(id,"TTM_UPDATETIPTEXTA",	0X40C,	-1);
	add_enum_member(id,"WIZ_PREV",	0X40C,	-1);
	add_enum_member(id,"TB_ISBUTTONHIDDEN",	0X40C,	-1);
	add_enum_member(id,"WM_CAP_DRIVER_GET_NAMEA",	0X40C,	-1);
	add_enum_member(id,"PBM_GETSTEP",	0X40D,	-1);
	add_enum_member(id,"RB_GETROWCOUNT",	0X40D,	-1);
	add_enum_member(id,"CBEM_GETITEMW",	0X40D,	-1);
	add_enum_member(id,"SB_GETTEXTW",	0X40D,	-1);
	add_enum_member(id,"TTM_GETTOOLCOUNT",	0X40D,	-1);
	add_enum_member(id,"TB_ISBUTTONINDETERMINATE",	0X40D,	-1);
	add_enum_member(id,"WM_CAP_DRIVER_GET_VERSIONA",	0X40D,	-1);
	add_enum_member(id,"TBM_GETPTICS",	0X40E,	-1);
	add_enum_member(id,"PBM_GETBKCOLOR",	0X40E,	-1);
	add_enum_member(id,"RB_GETROWHEIGHT",	0X40E,	-1);
	add_enum_member(id,"CBEM_SETEXTENDEDSTYLE",	0X40E,	-1);
	add_enum_member(id,"SB_ISSIMPLE",	0X40E,	-1);
	add_enum_member(id,"TTM_ENUMTOOLSA",	0X40E,	-1);
	add_enum_member(id,"TB_ISBUTTONHIGHLIGHTED",	0X40E,	-1);
	add_enum_member(id,"WM_CAP_DRIVER_GET_CAPS",	0X40E,	-1);
	add_enum_member(id,"TBM_GETTICPOS",	0X40F,	-1);
	add_enum_member(id,"PBM_GETBARCOLOR",	0X40F,	-1);
	add_enum_member(id,"SB_SETICON",	0X40F,	-1);
	add_enum_member(id,"TTM_GETCURRENTTOOLA",	0X40F,	-1);
	add_enum_member(id,"TBM_GETNUMTICS",	0X410,	-1);
	add_enum_member(id,"PBM_SETSTATE",	0X410,	-1);
	add_enum_member(id,"RB_IDTOINDEX",	0X410,	-1);
	add_enum_member(id,"SB_SETTIPTEXTA",	0X410,	-1);
	add_enum_member(id,"TTM_WINDOWFROMPOINT",	0X410,	-1);
	add_enum_member(id,"TBM_GETSELSTART",	0X411,	-1);
	add_enum_member(id,"PBM_GETSTATE",	0X411,	-1);
	add_enum_member(id,"RB_GETTOOLTIPS",	0X411,	-1);
	add_enum_member(id,"SB_SETTIPTEXTW",	0X411,	-1);
	add_enum_member(id,"TTM_TRACKACTIVATE",	0X411,	-1);
	add_enum_member(id,"TB_SETSTATE",	0X411,	-1);
	add_enum_member(id,"TBM_GETSELEND",	0X412,	-1);
	add_enum_member(id,"RB_SETTOOLTIPS",	0X412,	-1);
	add_enum_member(id,"SB_GETTIPTEXTA",	0X412,	-1);
	add_enum_member(id,"TTM_TRACKPOSITION",	0X412,	-1);
	add_enum_member(id,"TB_GETSTATE",	0X412,	-1);
	add_enum_member(id,"TBM_CLEARSEL",	0X413,	-1);
	add_enum_member(id,"RB_SETBKCOLOR",	0X413,	-1);
	add_enum_member(id,"SB_GETTIPTEXTW",	0X413,	-1);
	add_enum_member(id,"TTM_SETTIPBKCOLOR",	0X413,	-1);
	add_enum_member(id,"TB_ADDBITMAP",	0X413,	-1);
	add_enum_member(id,"TBM_SETTICFREQ",	0X414,	-1);
	add_enum_member(id,"RB_GETBKCOLOR",	0X414,	-1);
	add_enum_member(id,"SB_GETICON",	0X414,	-1);
	add_enum_member(id,"TTM_SETTIPTEXTCOLOR",	0X414,	-1);
	add_enum_member(id,"TB_ADDBUTTONSA",	0X414,	-1);
	add_enum_member(id,"WM_CAP_FILE_SET_CAPTURE_FILEA",	0X414,	-1);
	add_enum_member(id,"TBM_SETPAGESIZE",	0X415,	-1);
	add_enum_member(id,"RB_SETTEXTCOLOR",	0X415,	-1);
	add_enum_member(id,"TTM_GETDELAYTIME",	0X415,	-1);
	add_enum_member(id,"TB_INSERTBUTTONA",	0X415,	-1);
	add_enum_member(id,"WM_CAP_FILE_GET_CAPTURE_FILEA",	0X415,	-1);
	add_enum_member(id,"TBM_GETPAGESIZE",	0X416,	-1);
	add_enum_member(id,"RB_GETTEXTCOLOR",	0X416,	-1);
	add_enum_member(id,"TTM_GETTIPBKCOLOR",	0X416,	-1);
	add_enum_member(id,"TB_DELETEBUTTON",	0X416,	-1);
	add_enum_member(id,"WM_CAP_FILE_ALLOCATE",	0X416,	-1);
	add_enum_member(id,"TBM_SETLINESIZE",	0X417,	-1);
	add_enum_member(id,"RB_SIZETORECT",	0X417,	-1);
	add_enum_member(id,"TTM_GETTIPTEXTCOLOR",	0X417,	-1);
	add_enum_member(id,"TB_GETBUTTON",	0X417,	-1);
	add_enum_member(id,"WM_CAP_FILE_SAVEASA",	0X417,	-1);
	add_enum_member(id,"TBM_GETLINESIZE",	0X418,	-1);
	add_enum_member(id,"RB_BEGINDRAG",	0X418,	-1);
	add_enum_member(id,"TTM_SETMAXTIPWIDTH",	0X418,	-1);
	add_enum_member(id,"TB_BUTTONCOUNT",	0X418,	-1);
	add_enum_member(id,"WM_CAP_FILE_SET_INFOCHUNK",	0X418,	-1);
	add_enum_member(id,"TBM_GETTHUMBRECT",	0X419,	-1);
	add_enum_member(id,"RB_ENDDRAG",	0X419,	-1);
	add_enum_member(id,"TTM_GETMAXTIPWIDTH",	0X419,	-1);
	add_enum_member(id,"TB_COMMANDTOINDEX",	0X419,	-1);
	add_enum_member(id,"WM_CAP_FILE_SAVEDIBA",	0X419,	-1);
	add_enum_member(id,"TBM_GETCHANNELRECT",	0X41A,	-1);
	add_enum_member(id,"RB_DRAGMOVE",	0X41A,	-1);
	add_enum_member(id,"TTM_SETMARGIN",	0X41A,	-1);
	add_enum_member(id,"TB_SAVERESTOREA",	0X41A,	-1);
	add_enum_member(id,"TBM_SETTHUMBLENGTH",	0X41B,	-1);
	add_enum_member(id,"RB_GETBARHEIGHT",	0X41B,	-1);
	add_enum_member(id,"TTM_GETMARGIN",	0X41B,	-1);
	add_enum_member(id,"TB_CUSTOMIZE",	0X41B,	-1);
	add_enum_member(id,"TBM_GETTHUMBLENGTH",	0X41C,	-1);
	add_enum_member(id,"RB_GETBANDINFOW",	0X41C,	-1);
	add_enum_member(id,"TTM_POP",	0X41C,	-1);
	add_enum_member(id,"TB_ADDSTRINGA",	0X41C,	-1);
	add_enum_member(id,"TBM_SETTOOLTIPS",	0X41D,	-1);
	add_enum_member(id,"RB_GETBANDINFOA",	0X41D,	-1);
	add_enum_member(id,"TTM_UPDATE",	0X41D,	-1);
	add_enum_member(id,"TB_GETITEMRECT",	0X41D,	-1);
	add_enum_member(id,"TBM_GETTOOLTIPS",	0X41E,	-1);
	add_enum_member(id,"RB_MINIMIZEBAND",	0X41E,	-1);
	add_enum_member(id,"TTM_GETBUBBLESIZE",	0X41E,	-1);
	add_enum_member(id,"TB_BUTTONSTRUCTSIZE",	0X41E,	-1);
	add_enum_member(id,"WM_CAP_EDIT_COPY",	0X41E,	-1);
	add_enum_member(id,"TBM_SETTIPSIDE",	0X41F,	-1);
	add_enum_member(id,"RB_MAXIMIZEBAND",	0X41F,	-1);
	add_enum_member(id,"TTM_ADJUSTRECT",	0X41F,	-1);
	add_enum_member(id,"TB_SETBUTTONSIZE",	0X41F,	-1);
	add_enum_member(id,"TBM_SETBUDDY",	0X420,	-1);
	add_enum_member(id,"TTM_SETTITLEA",	0X420,	-1);
	add_enum_member(id,"TB_SETBITMAPSIZE",	0X420,	-1);
	add_enum_member(id,"MSG_FTS_JUMP_HASH",	0X420,	-1);
	add_enum_member(id,"TBM_GETBUDDY",	0X421,	-1);
	add_enum_member(id,"TTM_SETTITLEW",	0X421,	-1);
	add_enum_member(id,"MSG_FTS_JUMP_VA",	0X421,	-1);
	add_enum_member(id,"TB_AUTOSIZE",	0X421,	-1);
	add_enum_member(id,"TBM_SETPOSNOTIFY",	0X422,	-1);
	add_enum_member(id,"RB_GETBANDBORDERS",	0X422,	-1);
	add_enum_member(id,"MSG_FTS_GET_TITLE",	0X422,	-1);
	add_enum_member(id,"RB_SHOWBAND",	0X423,	-1);
	add_enum_member(id,"MSG_FTS_JUMP_QWORD",	0X423,	-1);
	add_enum_member(id,"TB_GETTOOLTIPS",	0X423,	-1);
	add_enum_member(id,"WM_CAP_SET_AUDIOFORMAT",	0X423,	-1);
	add_enum_member(id,"MSG_REINDEX_REQUEST",	0X424,	-1);
	add_enum_member(id,"TB_SETTOOLTIPS",	0X424,	-1);
	add_enum_member(id,"WM_CAP_GET_AUDIOFORMAT",	0X424,	-1);
	add_enum_member(id,"RB_SETPALETTE",	0X425,	-1);
	add_enum_member(id,"MSG_FTS_WHERE_IS_IT",	0X425,	-1);
	add_enum_member(id,"TB_SETPARENT",	0X425,	-1);
	add_enum_member(id,"RB_GETPALETTE",	0X426,	-1);
	add_enum_member(id,"RB_MOVEBAND",	0X427,	-1);
	add_enum_member(id,"TB_SETROWS",	0X427,	-1);
	add_enum_member(id,"RB_GETBANDMARGINS",	0X428,	-1);
	add_enum_member(id,"TB_GETROWS",	0X428,	-1);
	add_enum_member(id,"RB_SETEXTENDEDSTYLE",	0X429,	-1);
	add_enum_member(id,"TB_GETBITMAPFLAGS",	0X429,	-1);
	add_enum_member(id,"WM_CAP_DLG_VIDEOFORMAT",	0X429,	-1);
	add_enum_member(id,"RB_GETEXTENDEDSTYLE",	0X42A,	-1);
	add_enum_member(id,"TB_SETCMDID",	0X42A,	-1);
	add_enum_member(id,"WM_CAP_DLG_VIDEOSOURCE",	0X42A,	-1);
	add_enum_member(id,"RB_PUSHCHEVRON",	0X42B,	-1);
	add_enum_member(id,"TB_CHANGEBITMAP",	0X42B,	-1);
	add_enum_member(id,"WM_CAP_DLG_VIDEODISPLAY",	0X42B,	-1);
	add_enum_member(id,"RB_SETBANDWIDTH",	0X42C,	-1);
	add_enum_member(id,"TB_GETBITMAP",	0X42C,	-1);
	add_enum_member(id,"WM_CAP_GET_VIDEOFORMAT",	0X42C,	-1);
	add_enum_member(id,"MSG_GET_DEFFONT",	0X42D,	-1);
	add_enum_member(id,"TB_GETBUTTONTEXTA",	0X42D,	-1);
	add_enum_member(id,"WM_CAP_SET_VIDEOFORMAT",	0X42D,	-1);
	add_enum_member(id,"TB_REPLACEBITMAP",	0X42E,	-1);
	add_enum_member(id,"WM_CAP_DLG_VIDEOCOMPRESSION",	0X42E,	-1);
	add_enum_member(id,"TB_SETINDENT",	0X42F,	-1);
	add_enum_member(id,"TB_SETIMAGELIST",	0X430,	-1);
	add_enum_member(id,"TB_GETIMAGELIST",	0X431,	-1);
	add_enum_member(id,"TTM_ADDTOOLW",	0X432,	-1);
	add_enum_member(id,"TB_LOADIMAGES",	0X432,	-1);
	add_enum_member(id,"EM_CANPASTE",	0X432,	-1);
	add_enum_member(id,"WM_CAP_SET_PREVIEW",	0X432,	-1);
	add_enum_member(id,"TTM_DELTOOLW",	0X433,	-1);
	add_enum_member(id,"TB_GETRECT",	0X433,	-1);
	add_enum_member(id,"EM_DISPLAYBAND",	0X433,	-1);
	add_enum_member(id,"WM_CAP_SET_OVERLAY",	0X433,	-1);
	add_enum_member(id,"TTM_NEWTOOLRECTW",	0X434,	-1);
	add_enum_member(id,"TB_SETHOTIMAGELIST",	0X434,	-1);
	add_enum_member(id,"EM_EXGETSEL",	0X434,	-1);
	add_enum_member(id,"WM_CAP_SET_PREVIEWRATE",	0X434,	-1);
	add_enum_member(id,"TTM_GETTOOLINFOW",	0X435,	-1);
	add_enum_member(id,"TB_GETHOTIMAGELIST",	0X435,	-1);
	add_enum_member(id,"EM_EXLIMITTEXT",	0X435,	-1);
	add_enum_member(id,"WM_CAP_SET_SCALE",	0X435,	-1);
	add_enum_member(id,"TTM_SETTOOLINFOW",	0X436,	-1);
	add_enum_member(id,"TB_SETDISABLEDIMAGELIST",	0X436,	-1);
	add_enum_member(id,"EM_EXLINEFROMCHAR",	0X436,	-1);
	add_enum_member(id,"WM_CAP_GET_STATUS",	0X436,	-1);
	add_enum_member(id,"TTM_HITTESTW",	0X437,	-1);
	add_enum_member(id,"TB_GETDISABLEDIMAGELIST",	0X437,	-1);
	add_enum_member(id,"EM_EXSETSEL",	0X437,	-1);
	add_enum_member(id,"WM_CAP_SET_SCROLL",	0X437,	-1);
	add_enum_member(id,"TTM_GETTEXTW",	0X438,	-1);
	add_enum_member(id,"TB_SETSTYLE",	0X438,	-1);
	add_enum_member(id,"EM_FINDTEXT",	0X438,	-1);
	add_enum_member(id,"TTM_UPDATETIPTEXTW",	0X439,	-1);
	add_enum_member(id,"TB_GETSTYLE",	0X439,	-1);
	add_enum_member(id,"EM_FORMATRANGE",	0X439,	-1);
	add_enum_member(id,"TTM_ENUMTOOLSW",	0X43A,	-1);
	add_enum_member(id,"TB_GETBUTTONSIZE",	0X43A,	-1);
	add_enum_member(id,"EM_GETCHARFORMAT",	0X43A,	-1);
	add_enum_member(id,"TTM_GETCURRENTTOOLW",	0X43B,	-1);
	add_enum_member(id,"TB_SETBUTTONWIDTH",	0X43B,	-1);
	add_enum_member(id,"EM_GETEVENTMASK",	0X43B,	-1);
	add_enum_member(id,"TB_SETMAXTEXTROWS",	0X43C,	-1);
	add_enum_member(id,"EM_GETOLEINTERFACE",	0X43C,	-1);
	add_enum_member(id,"WM_CAP_GRAB_FRAME",	0X43C,	-1);
	add_enum_member(id,"TB_GETTEXTROWS",	0X43D,	-1);
	add_enum_member(id,"EM_GETPARAFORMAT",	0X43D,	-1);
	add_enum_member(id,"WM_CAP_GRAB_FRAME_NOSTOP",	0X43D,	-1);
	add_enum_member(id,"TB_GETOBJECT",	0X43E,	-1);
	add_enum_member(id,"EM_GETSELTEXT",	0X43E,	-1);
	add_enum_member(id,"WM_CAP_SEQUENCE",	0X43E,	-1);
	add_enum_member(id,"TB_GETBUTTONINFOW",	0X43F,	-1);
	add_enum_member(id,"EM_HIDESELECTION",	0X43F,	-1);
	add_enum_member(id,"WM_CAP_SEQUENCE_NOFILE",	0X43F,	-1);
	add_enum_member(id,"TB_SETBUTTONINFOW",	0X440,	-1);
	add_enum_member(id,"EM_PASTESPECIAL",	0X440,	-1);
	add_enum_member(id,"WM_CAP_SET_SEQUENCE_SETUP",	0X440,	-1);
	add_enum_member(id,"TB_GETBUTTONINFOA",	0X441,	-1);
	add_enum_member(id,"EM_REQUESTRESIZE",	0X441,	-1);
	add_enum_member(id,"WM_CAP_GET_SEQUENCE_SETUP",	0X441,	-1);
	add_enum_member(id,"TB_SETBUTTONINFOA",	0X442,	-1);
	add_enum_member(id,"EM_SELECTIONTYPE",	0X442,	-1);
	add_enum_member(id,"WM_CAP_SET_MCI_DEVICEA",	0X442,	-1);
	add_enum_member(id,"TB_INSERTBUTTONW",	0X443,	-1);
	add_enum_member(id,"EM_SETBKGNDCOLOR",	0X443,	-1);
	add_enum_member(id,"WM_CAP_GET_MCI_DEVICEA",	0X443,	-1);
	add_enum_member(id,"TB_ADDBUTTONSW",	0X444,	-1);
	add_enum_member(id,"EM_SETCHARFORMAT",	0X444,	-1);
	add_enum_member(id,"WM_CAP_STOP",	0X444,	-1);
	add_enum_member(id,"TB_HITTEST",	0X445,	-1);
	add_enum_member(id,"EM_SETEVENTMASK",	0X445,	-1);
	add_enum_member(id,"WM_CAP_ABORT",	0X445,	-1);
	add_enum_member(id,"TB_SETDRAWTEXTFLAGS",	0X446,	-1);
	add_enum_member(id,"EM_SETOLECALLBACK",	0X446,	-1);
	add_enum_member(id,"WM_CAP_SINGLE_FRAME_OPEN",	0X446,	-1);
	add_enum_member(id,"TB_GETHOTITEM",	0X447,	-1);
	add_enum_member(id,"EM_SETPARAFORMAT",	0X447,	-1);
	add_enum_member(id,"WM_CAP_SINGLE_FRAME_CLOSE",	0X447,	-1);
	add_enum_member(id,"TB_SETHOTITEM",	0X448,	-1);
	add_enum_member(id,"EM_SETTARGETDEVICE",	0X448,	-1);
	add_enum_member(id,"WM_CAP_SINGLE_FRAME",	0X448,	-1);
	add_enum_member(id,"TB_SETANCHORHIGHLIGHT",	0X449,	-1);
	add_enum_member(id,"EM_STREAMIN",	0X449,	-1);
	add_enum_member(id,"TB_GETANCHORHIGHLIGHT",	0X44A,	-1);
	add_enum_member(id,"EM_STREAMOUT",	0X44A,	-1);
	add_enum_member(id,"TB_GETBUTTONTEXTW",	0X44B,	-1);
	add_enum_member(id,"EM_GETTEXTRANGE",	0X44B,	-1);
	add_enum_member(id,"TB_SAVERESTOREW",	0X44C,	-1);
	add_enum_member(id,"EM_FINDWORDBREAK",	0X44C,	-1);
	add_enum_member(id,"TB_ADDSTRINGW",	0X44D,	-1);
	add_enum_member(id,"EM_SETOPTIONS",	0X44D,	-1);
	add_enum_member(id,"TB_MAPACCELERATORA",	0X44E,	-1);
	add_enum_member(id,"EM_GETOPTIONS",	0X44E,	-1);
	add_enum_member(id,"TB_GETINSERTMARK",	0X44F,	-1);
	add_enum_member(id,"EM_FINDTEXTEX",	0X44F,	-1);
	add_enum_member(id,"TB_SETINSERTMARK",	0X450,	-1);
	add_enum_member(id,"EM_GETWORDBREAKPROCEX",	0X450,	-1);
	add_enum_member(id,"WM_CAP_PAL_OPENA",	0X450,	-1);
	add_enum_member(id,"TB_INSERTMARKHITTEST",	0X451,	-1);
	add_enum_member(id,"EM_SETWORDBREAKPROCEX",	0X451,	-1);
	add_enum_member(id,"WM_CAP_PAL_SAVEA",	0X451,	-1);
	add_enum_member(id,"TB_MOVEBUTTON",	0X452,	-1);
	add_enum_member(id,"EM_SETUNDOLIMIT",	0X452,	-1);
	add_enum_member(id,"WM_CAP_PAL_PASTE",	0X452,	-1);
	add_enum_member(id,"TB_GETMAXSIZE",	0X453,	-1);
	add_enum_member(id,"WM_CAP_PAL_AUTOCREATE",	0X453,	-1);
	add_enum_member(id,"TB_SETEXTENDEDSTYLE",	0X454,	-1);
	add_enum_member(id,"EM_REDO",	0X454,	-1);
	add_enum_member(id,"WM_CAP_PAL_MANUALCREATE",	0X454,	-1);
	add_enum_member(id,"TB_GETEXTENDEDSTYLE",	0X455,	-1);
	add_enum_member(id,"EM_CANREDO",	0X455,	-1);
	add_enum_member(id,"WM_CAP_SET_CALLBACK_CAPCONTROL",	0X455,	-1);
	add_enum_member(id,"TB_GETPADDING",	0X456,	-1);
	add_enum_member(id,"EM_GETUNDONAME",	0X456,	-1);
	add_enum_member(id,"TB_SETPADDING",	0X457,	-1);
	add_enum_member(id,"EM_GETREDONAME",	0X457,	-1);
	add_enum_member(id,"TB_SETINSERTMARKCOLOR",	0X458,	-1);
	add_enum_member(id,"EM_STOPGROUPTYPING",	0X458,	-1);
	add_enum_member(id,"TB_GETINSERTMARKCOLOR",	0X459,	-1);
	add_enum_member(id,"EM_SETTEXTMODE",	0X459,	-1);
	add_enum_member(id,"TB_MAPACCELERATORW",	0X45A,	-1);
	add_enum_member(id,"EM_GETTEXTMODE",	0X45A,	-1);
	add_enum_member(id,"TB_GETSTRINGW",	0X45B,	-1);
	add_enum_member(id,"EM_AUTOURLDETECT",	0X45B,	-1);
	add_enum_member(id,"TB_GETSTRINGA",	0X45C,	-1);
	add_enum_member(id,"EM_GETAUTOURLDETECT",	0X45C,	-1);
	add_enum_member(id,"TB_SETBOUNDINGSIZE",	0X45D,	-1);
	add_enum_member(id,"EM_SETPALETTE",	0X45D,	-1);
	add_enum_member(id,"TB_SETHOTITEM2",	0X45E,	-1);
	add_enum_member(id,"EM_GETTEXTEX",	0X45E,	-1);
	add_enum_member(id,"TB_HASACCELERATOR",	0X45F,	-1);
	add_enum_member(id,"EM_GETTEXTLENGTHEX",	0X45F,	-1);
	add_enum_member(id,"TB_SETLISTGAP",	0X460,	-1);
	add_enum_member(id,"EM_SHOWSCROLLBAR",	0X460,	-1);
	add_enum_member(id,"EM_SETTEXTEX",	0X461,	-1);
	add_enum_member(id,"TB_GETIMAGELISTCOUNT",	0X462,	-1);
	add_enum_member(id,"TB_GETIDEALSIZE",	0X463,	-1);
	add_enum_member(id,"TAPI_REPLY",	0X463,	-1);
	add_enum_member(id,"EM_SETPUNCTUATION",	0X464,	-1);
	add_enum_member(id,"IPM_CLEARADDRESS",	0X464,	-1);
	add_enum_member(id,"CDM_FIRST",	0X464,	-1);
	add_enum_member(id,"CDM_GETSPEC",	0X464,	-1);
	add_enum_member(id,"BFFM_SETSTATUSTEXTA",	0X464,	-1);
	add_enum_member(id,"ACM_OPENA",	0X464,	-1);
	add_enum_member(id,"WM_CAP_UNICODE_START",	0X464,	-1);
	add_enum_member(id,"MCIWNDM_GETDEVICEID",	0X464,	-1);
	add_enum_member(id,"WM_CHOOSEFONT_SETLOGFONT",	0X465,	-1);
	add_enum_member(id,"TB_GETMETRICS",	0X465,	-1);
	add_enum_member(id,"EM_GETPUNCTUATION",	0X465,	-1);
	add_enum_member(id,"IPM_SETADDRESS",	0X465,	-1);
	add_enum_member(id,"CDM_GETFILEPATH",	0X465,	-1);
	add_enum_member(id,"BFFM_ENABLEOK",	0X465,	-1);
	add_enum_member(id,"ACM_PLAY",	0X465,	-1);
	add_enum_member(id,"PSM_SETCURSEL",	0X465,	-1);
	add_enum_member(id,"UDM_SETRANGE",	0X465,	-1);
	add_enum_member(id,"MCIWNDM_SENDSTRINGA",	0X465,	-1);
	add_enum_member(id,"WM_CHOOSEFONT_SETFLAGS",	0X466,	-1);
	add_enum_member(id,"TB_SETMETRICS",	0X466,	-1);
	add_enum_member(id,"EM_SETWORDWRAPMODE",	0X466,	-1);
	add_enum_member(id,"IPM_GETADDRESS",	0X466,	-1);
	add_enum_member(id,"CDM_GETFOLDERPATH",	0X466,	-1);
	add_enum_member(id,"BFFM_SETSELECTIONA",	0X466,	-1);
	add_enum_member(id,"ACM_STOP",	0X466,	-1);
	add_enum_member(id,"WM_CAP_SET_CALLBACK_ERRORW",	0X466,	-1);
	add_enum_member(id,"PSM_REMOVEPAGE",	0X466,	-1);
	add_enum_member(id,"UDM_GETRANGE",	0X466,	-1);
	add_enum_member(id,"MCIWNDM_GETPOSITIONA",	0X466,	-1);
	add_enum_member(id,"TB_GETITEMDROPDOWNRECT",	0X467,	-1);
	add_enum_member(id,"EM_GETWORDWRAPMODE",	0X467,	-1);
	add_enum_member(id,"IPM_SETRANGE",	0X467,	-1);
	add_enum_member(id,"CDM_GETFOLDERIDLIST",	0X467,	-1);
	add_enum_member(id,"BFFM_SETSELECTIONW",	0X467,	-1);
	add_enum_member(id,"ACM_OPENW",	0X467,	-1);
	add_enum_member(id,"WM_CAP_SET_CALLBACK_STATUSW",	0X467,	-1);
	add_enum_member(id,"PSM_ADDPAGE",	0X467,	-1);
	add_enum_member(id,"UDM_SETPOS",	0X467,	-1);
	add_enum_member(id,"MCIWNDM_GETSTART",	0X467,	-1);
	add_enum_member(id,"TB_SETPRESSEDIMAGELIST",	0X468,	-1);
	add_enum_member(id,"EM_SETIMECOLOR",	0X468,	-1);
	add_enum_member(id,"IPM_SETFOCUS",	0X468,	-1);
	add_enum_member(id,"CDM_SETCONTROLTEXT",	0X468,	-1);
	add_enum_member(id,"BFFM_SETSTATUSTEXTW",	0X468,	-1);
	add_enum_member(id,"ACM_ISPLAYING",	0X468,	-1);
	add_enum_member(id,"PSM_CHANGED",	0X468,	-1);
	add_enum_member(id,"UDM_GETPOS",	0X468,	-1);
	add_enum_member(id,"MCIWNDM_GETLENGTH",	0X468,	-1);
	add_enum_member(id,"TB_GETPRESSEDIMAGELIST",	0X469,	-1);
	add_enum_member(id,"EM_GETIMECOLOR",	0X469,	-1);
	add_enum_member(id,"IPM_ISBLANK",	0X469,	-1);
	add_enum_member(id,"CDM_HIDECONTROL",	0X469,	-1);
	add_enum_member(id,"BFFM_SETOKTEXT",	0X469,	-1);
	add_enum_member(id,"PSM_RESTARTWINDOWS",	0X469,	-1);
	add_enum_member(id,"UDM_SETBUDDY",	0X469,	-1);
	add_enum_member(id,"MCIWNDM_GETEND",	0X469,	-1);
	add_enum_member(id,"EM_SETIMEOPTIONS",	0X46A,	-1);
	add_enum_member(id,"CDM_SETDEFEXT",	0X46A,	-1);
	add_enum_member(id,"BFFM_SETEXPANDED",	0X46A,	-1);
	add_enum_member(id,"PSM_REBOOTSYSTEM",	0X46A,	-1);
	add_enum_member(id,"UDM_GETBUDDY",	0X46A,	-1);
	add_enum_member(id,"MCIWNDM_GETMODEA",	0X46A,	-1);
	add_enum_member(id,"EM_GETIMEOPTIONS",	0X46B,	-1);
	add_enum_member(id,"PSM_CANCELTOCLOSE",	0X46B,	-1);
	add_enum_member(id,"UDM_SETACCEL",	0X46B,	-1);
	add_enum_member(id,"MCIWNDM_EJECT",	0X46B,	-1);
	add_enum_member(id,"EM_CONVPOSITION",	0X46C,	-1);
	add_enum_member(id,"PSM_QUERYSIBLINGS",	0X46C,	-1);
	add_enum_member(id,"UDM_GETACCEL",	0X46C,	-1);
	add_enum_member(id,"MCIWNDM_SETZOOM",	0X46C,	-1);
	add_enum_member(id,"PSM_UNCHANGED",	0X46D,	-1);
	add_enum_member(id,"UDM_SETBASE",	0X46D,	-1);
	add_enum_member(id,"MCIWNDM_GETZOOM",	0X46D,	-1);
	add_enum_member(id,"PSM_APPLY",	0X46E,	-1);
	add_enum_member(id,"UDM_GETBASE",	0X46E,	-1);
	add_enum_member(id,"MCIWNDM_SETVOLUME",	0X46E,	-1);
	add_enum_member(id,"PSM_SETTITLEA",	0X46F,	-1);
	add_enum_member(id,"UDM_SETRANGE32",	0X46F,	-1);
	add_enum_member(id,"MCIWNDM_GETVOLUME",	0X46F,	-1);
	add_enum_member(id,"WM_CAP_DRIVER_GET_NAMEW",	0X470,	-1);
	add_enum_member(id,"PSM_SETWIZBUTTONS",	0X470,	-1);
	add_enum_member(id,"UDM_GETRANGE32",	0X470,	-1);
	add_enum_member(id,"MCIWNDM_SETSPEED",	0X470,	-1);
	add_enum_member(id,"WM_CAP_DRIVER_GET_VERSIONW",	0X471,	-1);
	add_enum_member(id,"PSM_PRESSBUTTON",	0X471,	-1);
	add_enum_member(id,"UDM_SETPOS32",	0X471,	-1);
	add_enum_member(id,"MCIWNDM_GETSPEED",	0X471,	-1);
	add_enum_member(id,"PSM_SETCURSELID",	0X472,	-1);
	add_enum_member(id,"UDM_GETPOS32",	0X472,	-1);
	add_enum_member(id,"MCIWNDM_SETREPEAT",	0X472,	-1);
	add_enum_member(id,"PSM_SETFINISHTEXTA",	0X473,	-1);
	add_enum_member(id,"MCIWNDM_GETREPEAT",	0X473,	-1);
	add_enum_member(id,"PSM_GETTABCONTROL",	0X474,	-1);
	add_enum_member(id,"PSM_ISDIALOGMESSAGE",	0X475,	-1);
	add_enum_member(id,"PSM_GETCURRENTPAGEHWND",	0X476,	-1);
	add_enum_member(id,"MCIWNDM_REALIZE",	0X476,	-1);
	add_enum_member(id,"PSM_INSERTPAGE",	0X477,	-1);
	add_enum_member(id,"MCIWNDM_SETTIMEFORMATA",	0X477,	-1);
	add_enum_member(id,"EM_SETLANGOPTIONS",	0X478,	-1);
	add_enum_member(id,"WM_CAP_FILE_SET_CAPTURE_FILEW",	0X478,	-1);
	add_enum_member(id,"PSM_SETTITLEW",	0X478,	-1);
	add_enum_member(id,"MCIWNDM_GETTIMEFORMATA",	0X478,	-1);
	add_enum_member(id,"EM_GETLANGOPTIONS",	0X479,	-1);
	add_enum_member(id,"WM_CAP_FILE_GET_CAPTURE_FILEW",	0X479,	-1);
	add_enum_member(id,"PSM_SETFINISHTEXTW",	0X479,	-1);
	add_enum_member(id,"MCIWNDM_VALIDATEMEDIA",	0X479,	-1);
	add_enum_member(id,"EM_GETIMECOMPMODE",	0X47A,	-1);
	add_enum_member(id,"MCIWNDM_PLAYFROM",	0X47A,	-1);
	add_enum_member(id,"EM_FINDTEXTW",	0X47B,	-1);
	add_enum_member(id,"WM_CAP_FILE_SAVEASW",	0X47B,	-1);
	add_enum_member(id,"MCIWNDM_PLAYTO",	0X47B,	-1);
	add_enum_member(id,"EM_FINDTEXTEXW",	0X47C,	-1);
	add_enum_member(id,"MCIWNDM_GETFILENAMEA",	0X47C,	-1);
	add_enum_member(id,"EM_RECONVERSION",	0X47D,	-1);
	add_enum_member(id,"WM_CAP_FILE_SAVEDIBW",	0X47D,	-1);
	add_enum_member(id,"PSM_SETHEADERTITLEA",	0X47D,	-1);
	add_enum_member(id,"MCIWNDM_GETDEVICEA",	0X47D,	-1);
	add_enum_member(id,"EM_SETIMEMODEBIAS",	0X47E,	-1);
	add_enum_member(id,"PSM_SETHEADERTITLEW",	0X47E,	-1);
	add_enum_member(id,"MCIWNDM_GETPALETTE",	0X47E,	-1);
	add_enum_member(id,"EM_GETIMEMODEBIAS",	0X47F,	-1);
	add_enum_member(id,"PSM_SETHEADERSUBTITLEA",	0X47F,	-1);
	add_enum_member(id,"MCIWNDM_SETPALETTE",	0X47F,	-1);
	add_enum_member(id,"PSM_SETHEADERSUBTITLEW",	0X480,	-1);
	add_enum_member(id,"MCIWNDM_GETERRORA",	0X480,	-1);
	add_enum_member(id,"PSM_HWNDTOINDEX",	0X481,	-1);
	add_enum_member(id,"MCIWNDM_SETTIMERS",	0X481,	-1);
	add_enum_member(id,"PSM_INDEXTOHWND",	0X482,	-1);
	add_enum_member(id,"MCIWNDM_SETACTIVETIMER",	0X482,	-1);
	add_enum_member(id,"PSM_PAGETOINDEX",	0X483,	-1);
	add_enum_member(id,"MCIWNDM_SETINACTIVETIMER",	0X483,	-1);
	add_enum_member(id,"PSM_INDEXTOPAGE",	0X484,	-1);
	add_enum_member(id,"MCIWNDM_GETACTIVETIMER",	0X484,	-1);
	return id;
}

static Enums_2(id) {

	add_enum_member(id,"PSM_IDTOINDEX",	0X485,	-1);
	add_enum_member(id,"MCIWNDM_GETINACTIVETIMER",	0X485,	-1);
	add_enum_member(id,"DL_BEGINDRAG",	0X485,	-1);
	add_enum_member(id,"PSM_INDEXTOID",	0X486,	-1);
	add_enum_member(id,"DL_DRAGGING",	0X486,	-1);
	add_enum_member(id,"MCIWNDM_NEWA",	0X486,	-1);
	add_enum_member(id,"PSM_GETRESULT",	0X487,	-1);
	add_enum_member(id,"DL_DROPPED",	0X487,	-1);
	add_enum_member(id,"MCIWNDM_CHANGESTYLES",	0X487,	-1);
	add_enum_member(id,"PSM_RECALCPAGESIZES",	0X488,	-1);
	add_enum_member(id,"DL_CANCELDRAG",	0X488,	-1);
	add_enum_member(id,"MCIWNDM_GETSTYLES",	0X488,	-1);
	add_enum_member(id,"PSM_SETNEXTTEXTW",	0X489,	-1);
	add_enum_member(id,"MCIWNDM_GETALIAS",	0X489,	-1);
	add_enum_member(id,"PSM_SHOWWIZBUTTONS",	0X48A,	-1);
	add_enum_member(id,"MCIWNDM_RETURNSTRINGA",	0X48A,	-1);
	add_enum_member(id,"PSM_ENABLEWIZBUTTONS",	0X48B,	-1);
	add_enum_member(id,"MCIWNDM_PLAYREVERSE",	0X48B,	-1);
	add_enum_member(id,"PSM_SETBUTTONTEXTW",	0X48C,	-1);
	add_enum_member(id,"MCIWNDM_GET_SOURCE",	0X48C,	-1);
	add_enum_member(id,"MCIWNDM_PUT_SOURCE",	0X48D,	-1);
	add_enum_member(id,"MCIWNDM_GET_DEST",	0X48E,	-1);
	add_enum_member(id,"MCIWNDM_PUT_DEST",	0X48F,	-1);
	add_enum_member(id,"MCIWNDM_CAN_PLAY",	0X490,	-1);
	add_enum_member(id,"MCIWNDM_CAN_WINDOW",	0X491,	-1);
	add_enum_member(id,"MCIWNDM_CAN_RECORD",	0X492,	-1);
	add_enum_member(id,"MCIWNDM_CAN_SAVE",	0X493,	-1);
	add_enum_member(id,"MCIWNDM_CAN_EJECT",	0X494,	-1);
	add_enum_member(id,"MCIWNDM_CAN_CONFIG",	0X495,	-1);
	add_enum_member(id,"MCIWNDM_PALETTEKICK",	0X496,	-1);
	add_enum_member(id,"IE_GETINK",	0X496,	-1);
	add_enum_member(id,"IE_MSGFIRST",	0X496,	-1);
	add_enum_member(id,"IE_SETINK",	0X497,	-1);
	add_enum_member(id,"MCIWNDM_OPENINTERFACE",	0X497,	-1);
	add_enum_member(id,"IE_GETPENTIP",	0X498,	-1);
	add_enum_member(id,"MCIWNDM_SETOWNER",	0X498,	-1);
	add_enum_member(id,"IE_SETPENTIP",	0X499,	-1);
	add_enum_member(id,"MCIWNDM_OPENA",	0X499,	-1);
	add_enum_member(id,"IE_GETERASERTIP",	0X49A,	-1);
	add_enum_member(id,"IE_SETERASERTIP",	0X49B,	-1);
	add_enum_member(id,"IE_GETBKGND",	0X49C,	-1);
	add_enum_member(id,"IE_SETBKGND",	0X49D,	-1);
	add_enum_member(id,"IE_GETGRIDORIGIN",	0X49E,	-1);
	add_enum_member(id,"IE_SETGRIDORIGIN",	0X49F,	-1);
	add_enum_member(id,"IE_GETGRIDPEN",	0X4A0,	-1);
	add_enum_member(id,"IE_SETGRIDPEN",	0X4A1,	-1);
	add_enum_member(id,"IE_GETGRIDSIZE",	0X4A2,	-1);
	add_enum_member(id,"IE_SETGRIDSIZE",	0X4A3,	-1);
	add_enum_member(id,"IE_GETMODE",	0X4A4,	-1);
	add_enum_member(id,"IE_SETMODE",	0X4A5,	-1);
	add_enum_member(id,"WM_CAP_SET_MCI_DEVICEW",	0X4A6,	-1);
	add_enum_member(id,"IE_GETINKRECT",	0X4A6,	-1);
	add_enum_member(id,"WM_CAP_GET_MCI_DEVICEW",	0X4A7,	-1);
	add_enum_member(id,"WM_CAP_PAL_OPENW",	0X4B4,	-1);
	add_enum_member(id,"WM_CAP_PAL_SAVEW",	0X4B5,	-1);
	add_enum_member(id,"WM_CAP_UNICODE_END",	0X4B5,	-1);
	add_enum_member(id,"WM_CAP_END",	0X4B5,	-1);
	add_enum_member(id,"IE_GETAPPDATA",	0X4B8,	-1);
	add_enum_member(id,"IE_SETAPPDATA",	0X4B9,	-1);
	add_enum_member(id,"IE_GETDRAWOPTS",	0X4BA,	-1);
	add_enum_member(id,"IE_SETDRAWOPTS",	0X4BB,	-1);
	add_enum_member(id,"IE_GETFORMAT",	0X4BC,	-1);
	add_enum_member(id,"IE_SETFORMAT",	0X4BD,	-1);
	add_enum_member(id,"IE_GETINKINPUT",	0X4BE,	-1);
	add_enum_member(id,"IE_SETINKINPUT",	0X4BF,	-1);
	add_enum_member(id,"IE_GETNOTIFY",	0X4C0,	-1);
	add_enum_member(id,"IE_SETNOTIFY",	0X4C1,	-1);
	add_enum_member(id,"IE_GETRECOG",	0X4C2,	-1);
	add_enum_member(id,"IE_SETRECOG",	0X4C3,	-1);
	add_enum_member(id,"IE_GETSECURITY",	0X4C4,	-1);
	add_enum_member(id,"IE_SETSECURITY",	0X4C5,	-1);
	add_enum_member(id,"IE_GETSEL",	0X4C6,	-1);
	add_enum_member(id,"IE_SETSEL",	0X4C7,	-1);
	add_enum_member(id,"EM_SETBIDIOPTIONS",	0X4C8,	-1);
	add_enum_member(id,"CDM_LAST",	0X4C8,	-1);
	add_enum_member(id,"MCIWNDM_NOTIFYMODE",	0X4C8,	-1);
	add_enum_member(id,"IE_DOCOMMAND",	0X4C8,	-1);
	add_enum_member(id,"EM_GETBIDIOPTIONS",	0X4C9,	-1);
	add_enum_member(id,"IE_GETCOMMAND",	0X4C9,	-1);
	add_enum_member(id,"MCIWNDM_SENDSTRINGW",	0X4C9,	-1);
	add_enum_member(id,"MCIWNDM_NOTIFYPOS",	0X4C9,	-1);
	add_enum_member(id,"EM_SETTYPOGRAPHYOPTIONS",	0X4CA,	-1);
	add_enum_member(id,"IE_GETCOUNT",	0X4CA,	-1);
	add_enum_member(id,"MCIWNDM_GETPOSITIONW",	0X4CA,	-1);
	add_enum_member(id,"MCIWNDM_NOTIFYSIZE",	0X4CA,	-1);
	add_enum_member(id,"EM_GETTYPOGRAPHYOPTIONS",	0X4CB,	-1);
	add_enum_member(id,"MCIWNDM_NOTIFYMEDIA",	0X4CB,	-1);
	add_enum_member(id,"IE_GETGESTURE",	0X4CB,	-1);
	add_enum_member(id,"EM_SETEDITSTYLE",	0X4CC,	-1);
	add_enum_member(id,"IE_GETMENU",	0X4CC,	-1);
	add_enum_member(id,"EM_GETEDITSTYLE",	0X4CD,	-1);
	add_enum_member(id,"MCIWNDM_NOTIFYERROR",	0X4CD,	-1);
	add_enum_member(id,"IE_GETPAINTDC",	0X4CD,	-1);
	add_enum_member(id,"IE_GETPDEVENT",	0X4CE,	-1);
	add_enum_member(id,"MCIWNDM_GETMODEW",	0X4CE,	-1);
	add_enum_member(id,"IE_GETSELCOUNT",	0X4CF,	-1);
	add_enum_member(id,"IE_GETSELITEMS",	0X4D0,	-1);
	add_enum_member(id,"IE_GETSTYLE",	0X4D1,	-1);
	add_enum_member(id,"MCIWNDM_SETTIMEFORMATW",	0X4DB,	-1);
	add_enum_member(id,"EM_OUTLINE",	0X4DC,	-1);
	add_enum_member(id,"MCIWNDM_GETTIMEFORMATW",	0X4DC,	-1);
	add_enum_member(id,"EM_GETSCROLLPOS",	0X4DD,	-1);
	add_enum_member(id,"EM_SETSCROLLPOS",	0X4DE,	-1);
	add_enum_member(id,"EM_SETFONTSIZE",	0X4DF,	-1);
	add_enum_member(id,"EM_GETZOOM",	0X4E0,	-1);
	add_enum_member(id,"MCIWNDM_GETFILENAMEW",	0X4E0,	-1);
	add_enum_member(id,"EM_SETZOOM",	0X4E1,	-1);
	add_enum_member(id,"MCIWNDM_GETDEVICEW",	0X4E1,	-1);
	add_enum_member(id,"EM_GETVIEWKIND",	0X4E2,	-1);
	add_enum_member(id,"EM_SETVIEWKIND",	0X4E3,	-1);
	add_enum_member(id,"EM_GETPAGE",	0X4E4,	-1);
	add_enum_member(id,"MCIWNDM_GETERRORW",	0X4E4,	-1);
	add_enum_member(id,"EM_SETPAGE",	0X4E5,	-1);
	add_enum_member(id,"EM_GETHYPHENATEINFO",	0X4E6,	-1);
	add_enum_member(id,"EM_SETHYPHENATEINFO",	0X4E7,	-1);
	add_enum_member(id,"EM_INSERTTABLE",	0X4E8,	-1);
	add_enum_member(id,"EM_GETAUTOCORRECTPROC",	0X4E9,	-1);
	add_enum_member(id,"EM_SETAUTOCORRECTPROC",	0X4EA,	-1);
	add_enum_member(id,"MCIWNDM_NEWW",	0X4EA,	-1);
	add_enum_member(id,"EM_GETPAGEROTATE",	0X4EB,	-1);
	add_enum_member(id,"EM_SETPAGEROTATE",	0X4EC,	-1);
	add_enum_member(id,"EM_GETCTFMODEBIAS",	0X4ED,	-1);
	add_enum_member(id,"EM_SETCTFMODEBIAS",	0X4EE,	-1);
	add_enum_member(id,"MCIWNDM_RETURNSTRINGW",	0X4EE,	-1);
	add_enum_member(id,"EM_GETCTFOPENSTATUS",	0X4F0,	-1);
	add_enum_member(id,"EM_SETCTFOPENSTATUS",	0X4F1,	-1);
	add_enum_member(id,"EM_GETIMECOMPTEXT",	0X4F2,	-1);
	add_enum_member(id,"EM_ISIME",	0X4F3,	-1);
	add_enum_member(id,"EM_GETIMEPROPERTY",	0X4F4,	-1);
	add_enum_member(id,"MCIWNDM_OPENW",	0X4FC,	-1);
	add_enum_member(id,"EM_CALLAUTOCORRECTPROC",	0X4FF,	-1);
	add_enum_member(id,"EM_GETTABLEPARMS",	0X509,	-1);
	add_enum_member(id,"EM_GETQUERYRTFOBJ",	0X50D,	-1);
	add_enum_member(id,"EM_SETQUERYRTFOBJ",	0X50E,	-1);
	add_enum_member(id,"EM_SETEDITSTYLEEX",	0X513,	-1);
	add_enum_member(id,"EM_GETEDITSTYLEEX",	0X514,	-1);
	add_enum_member(id,"EM_GETSTORYTYPE",	0X522,	-1);
	add_enum_member(id,"EM_SETSTORYTYPE",	0X523,	-1);
	add_enum_member(id,"EM_GETELLIPSISMODE",	0X531,	-1);
	add_enum_member(id,"EM_SETELLIPSISMODE",	0X532,	-1);
	add_enum_member(id,"EM_SETTABLEPARMS",	0X533,	-1);
	add_enum_member(id,"EM_GETTOUCHOPTIONS",	0X536,	-1);
	add_enum_member(id,"EM_SETTOUCHOPTIONS",	0X537,	-1);
	add_enum_member(id,"EM_INSERTIMAGE",	0X53A,	-1);
	add_enum_member(id,"EM_SETUIANAME",	0X540,	-1);
	add_enum_member(id,"EM_GETELLIPSISSTATE",	0X542,	-1);
	add_enum_member(id,"FM_GETFOCUS",	0X600,	-1);
	add_enum_member(id,"FM_GETDRIVEINFOA",	0X601,	-1);
	add_enum_member(id,"FM_GETSELCOUNT",	0X602,	-1);
	add_enum_member(id,"FM_GETSELCOUNTLFN",	0X603,	-1);
	add_enum_member(id,"FM_GETFILESELA",	0X604,	-1);
	add_enum_member(id,"FM_GETFILESELLFNA",	0X605,	-1);
	add_enum_member(id,"FM_REFRESH_WINDOWS",	0X606,	-1);
	add_enum_member(id,"FM_RELOAD_EXTENSIONS",	0X607,	-1);
	add_enum_member(id,"FM_GETDRIVEINFOW",	0X611,	-1);
	add_enum_member(id,"FM_GETFILESELW",	0X614,	-1);
	add_enum_member(id,"FM_GETFILESELLFNW",	0X615,	-1);
	add_enum_member(id,"WLX_WM_SAS",	0X659,	-1);
	add_enum_member(id,"SM_GETSELCOUNT",	0X7E8,	-1);
	add_enum_member(id,"WM_CPL_LAUNCH",	0X7E8,	-1);
	add_enum_member(id,"UM_GETSELCOUNT",	0X7E8,	-1);
	add_enum_member(id,"SM_GETSERVERSELA",	0X7E9,	-1);
	add_enum_member(id,"WM_CPL_LAUNCHED",	0X7E9,	-1);
	add_enum_member(id,"UM_GETUSERSELA",	0X7E9,	-1);
	add_enum_member(id,"SM_GETSERVERSELW",	0X7EA,	-1);
	add_enum_member(id,"UM_GETUSERSELW",	0X7EA,	-1);
	add_enum_member(id,"SM_GETCURFOCUSA",	0X7EB,	-1);
	add_enum_member(id,"UM_GETGROUPSELA",	0X7EB,	-1);
	add_enum_member(id,"SM_GETCURFOCUSW",	0X7EC,	-1);
	add_enum_member(id,"UM_GETGROUPSELW",	0X7EC,	-1);
	add_enum_member(id,"SM_GETOPTIONS",	0X7ED,	-1);
	add_enum_member(id,"UM_GETCURFOCUSA",	0X7ED,	-1);
	add_enum_member(id,"UM_GETCURFOCUSW",	0X7EE,	-1);
	add_enum_member(id,"UM_GETOPTIONS",	0X7EF,	-1);
	add_enum_member(id,"UM_GETOPTIONS2",	0X7F0,	-1);
	add_enum_member(id,"WM_ADSPROP_NOTIFY_PAGEINIT",	0X84D,	-1);
	add_enum_member(id,"WM_ADSPROP_NOTIFY_PAGEHWND",	0X84E,	-1);
	add_enum_member(id,"WM_ADSPROP_NOTIFY_CHANGE",	0X84F,	-1);
	add_enum_member(id,"WM_ADSPROP_NOTIFY_APPLY",	0X850,	-1);
	add_enum_member(id,"WM_ADSPROP_NOTIFY_SETFOCUS",	0X851,	-1);
	add_enum_member(id,"WM_ADSPROP_NOTIFY_FOREGROUND",	0X852,	-1);
	add_enum_member(id,"WM_ADSPROP_NOTIFY_EXIT",	0X853,	-1);
	add_enum_member(id,"WM_ADSPROP_NOTIFY_ERROR",	0X856,	-1);
	add_enum_member(id,"LVM_FIRST",	0X1000,	-1);
	add_enum_member(id,"LVM_GETBKCOLOR",	0X1000,	-1);
	add_enum_member(id,"LVM_SETBKCOLOR",	0X1001,	-1);
	add_enum_member(id,"LVM_GETIMAGELIST",	0X1002,	-1);
	add_enum_member(id,"LVM_SETIMAGELIST",	0X1003,	-1);
	add_enum_member(id,"LVM_GETITEMCOUNT",	0X1004,	-1);
	add_enum_member(id,"LVM_GETITEMA",	0X1005,	-1);
	add_enum_member(id,"LVM_SETITEMA",	0X1006,	-1);
	add_enum_member(id,"LVM_INSERTITEMA",	0X1007,	-1);
	add_enum_member(id,"LVM_DELETEITEM",	0X1008,	-1);
	add_enum_member(id,"LVM_DELETEALLITEMS",	0X1009,	-1);
	add_enum_member(id,"LVM_GETCALLBACKMASK",	0X100A,	-1);
	add_enum_member(id,"LVM_SETCALLBACKMASK",	0X100B,	-1);
	add_enum_member(id,"LVM_GETNEXTITEM",	0X100C,	-1);
	add_enum_member(id,"LVM_FINDITEMA",	0X100D,	-1);
	add_enum_member(id,"LVM_GETITEMRECT",	0X100E,	-1);
	add_enum_member(id,"LVM_SETITEMPOSITION",	0X100F,	-1);
	add_enum_member(id,"LVM_GETITEMPOSITION",	0X1010,	-1);
	add_enum_member(id,"LVM_GETSTRINGWIDTHA",	0X1011,	-1);
	add_enum_member(id,"LVM_HITTEST",	0X1012,	-1);
	add_enum_member(id,"LVM_ENSUREVISIBLE",	0X1013,	-1);
	add_enum_member(id,"LVM_SCROLL",	0X1014,	-1);
	add_enum_member(id,"LVM_REDRAWITEMS",	0X1015,	-1);
	add_enum_member(id,"LVM_ARRANGE",	0X1016,	-1);
	add_enum_member(id,"LVM_EDITLABELA",	0X1017,	-1);
	add_enum_member(id,"LVM_GETEDITCONTROL",	0X1018,	-1);
	add_enum_member(id,"LVM_GETCOLUMNA",	0X1019,	-1);
	add_enum_member(id,"LVM_SETCOLUMNA",	0X101A,	-1);
	add_enum_member(id,"LVM_INSERTCOLUMNA",	0X101B,	-1);
	add_enum_member(id,"LVM_DELETECOLUMN",	0X101C,	-1);
	add_enum_member(id,"LVM_GETCOLUMNWIDTH",	0X101D,	-1);
	add_enum_member(id,"LVM_SETCOLUMNWIDTH",	0X101E,	-1);
	add_enum_member(id,"LVM_GETHEADER",	0X101F,	-1);
	add_enum_member(id,"LVM_CREATEDRAGIMAGE",	0X1021,	-1);
	add_enum_member(id,"LVM_GETVIEWRECT",	0X1022,	-1);
	add_enum_member(id,"LVM_GETTEXTCOLOR",	0X1023,	-1);
	add_enum_member(id,"LVM_SETTEXTCOLOR",	0X1024,	-1);
	add_enum_member(id,"LVM_GETTEXTBKCOLOR",	0X1025,	-1);
	add_enum_member(id,"LVM_SETTEXTBKCOLOR",	0X1026,	-1);
	add_enum_member(id,"LVM_GETTOPINDEX",	0X1027,	-1);
	add_enum_member(id,"LVM_GETCOUNTPERPAGE",	0X1028,	-1);
	add_enum_member(id,"LVM_GETORIGIN",	0X1029,	-1);
	add_enum_member(id,"LVM_UPDATE",	0X102A,	-1);
	add_enum_member(id,"LVM_SETITEMSTATE",	0X102B,	-1);
	add_enum_member(id,"LVM_GETITEMSTATE",	0X102C,	-1);
	add_enum_member(id,"LVM_GETITEMTEXTA",	0X102D,	-1);
	add_enum_member(id,"LVM_SETITEMTEXTA",	0X102E,	-1);
	add_enum_member(id,"LVM_SETITEMCOUNT",	0X102F,	-1);
	add_enum_member(id,"LVM_SORTITEMS",	0X1030,	-1);
	add_enum_member(id,"LVM_SETITEMPOSITION32",	0X1031,	-1);
	add_enum_member(id,"LVM_GETSELECTEDCOUNT",	0X1032,	-1);
	add_enum_member(id,"LVM_GETITEMSPACING",	0X1033,	-1);
	add_enum_member(id,"LVM_GETISEARCHSTRINGA",	0X1034,	-1);
	add_enum_member(id,"LVM_SETICONSPACING",	0X1035,	-1);
	add_enum_member(id,"LVM_SETEXTENDEDLISTVIEWSTYLE",	0X1036,	-1);
	add_enum_member(id,"LVM_GETEXTENDEDLISTVIEWSTYLE",	0X1037,	-1);
	add_enum_member(id,"LVM_GETSUBITEMRECT",	0X1038,	-1);
	add_enum_member(id,"LVM_SUBITEMHITTEST",	0X1039,	-1);
	add_enum_member(id,"LVM_SETCOLUMNORDERARRAY",	0X103A,	-1);
	add_enum_member(id,"LVM_GETCOLUMNORDERARRAY",	0X103B,	-1);
	add_enum_member(id,"LVM_SETHOTITEM",	0X103C,	-1);
	add_enum_member(id,"LVM_GETHOTITEM",	0X103D,	-1);
	add_enum_member(id,"LVM_SETHOTCURSOR",	0X103E,	-1);
	add_enum_member(id,"LVM_GETHOTCURSOR",	0X103F,	-1);
	add_enum_member(id,"LVM_APPROXIMATEVIEWRECT",	0X1040,	-1);
	add_enum_member(id,"LVM_SETWORKAREAS",	0X1041,	-1);
	add_enum_member(id,"LVM_GETSELECTIONMARK",	0X1042,	-1);
	add_enum_member(id,"LVM_SETSELECTIONMARK",	0X1043,	-1);
	add_enum_member(id,"LVM_SETBKIMAGEA",	0X1044,	-1);
	add_enum_member(id,"LVM_GETBKIMAGEA",	0X1045,	-1);
	add_enum_member(id,"LVM_GETWORKAREAS",	0X1046,	-1);
	add_enum_member(id,"LVM_SETHOVERTIME",	0X1047,	-1);
	add_enum_member(id,"LVM_GETHOVERTIME",	0X1048,	-1);
	add_enum_member(id,"LVM_GETNUMBEROFWORKAREAS",	0X1049,	-1);
	add_enum_member(id,"LVM_SETTOOLTIPS",	0X104A,	-1);
	add_enum_member(id,"LVM_GETITEMW",	0X104B,	-1);
	add_enum_member(id,"LVM_SETITEMW",	0X104C,	-1);
	add_enum_member(id,"LVM_INSERTITEMW",	0X104D,	-1);
	add_enum_member(id,"LVM_GETTOOLTIPS",	0X104E,	-1);
	add_enum_member(id,"LVM_SORTITEMSEX",	0X1051,	-1);
	add_enum_member(id,"LVM_FINDITEMW",	0X1053,	-1);
	add_enum_member(id,"LVM_GETSTRINGWIDTHW",	0X1057,	-1);
	add_enum_member(id,"LVM_GETGROUPSTATE",	0X105C,	-1);
	add_enum_member(id,"LVM_GETFOCUSEDGROUP",	0X105D,	-1);
	add_enum_member(id,"LVM_GETCOLUMNW",	0X105F,	-1);
	add_enum_member(id,"LVM_SETCOLUMNW",	0X1060,	-1);
	add_enum_member(id,"LVM_INSERTCOLUMNW",	0X1061,	-1);
	add_enum_member(id,"LVM_GETGROUPRECT",	0X1062,	-1);
	add_enum_member(id,"LVM_GETITEMTEXTW",	0X1073,	-1);
	add_enum_member(id,"LVM_SETITEMTEXTW",	0X1074,	-1);
	add_enum_member(id,"LVM_GETISEARCHSTRINGW",	0X1075,	-1);
	add_enum_member(id,"LVM_EDITLABELW",	0X1076,	-1);
	add_enum_member(id,"LVM_SETBKIMAGEW",	0X108A,	-1);
	add_enum_member(id,"LVM_GETBKIMAGEW",	0X108B,	-1);
	add_enum_member(id,"LVM_SETSELECTEDCOLUMN",	0X108C,	-1);
	add_enum_member(id,"LVM_SETTILEWIDTH",	0X108D,	-1);
	add_enum_member(id,"LVM_SETVIEW",	0X108E,	-1);
	add_enum_member(id,"LVM_GETVIEW",	0X108F,	-1);
	add_enum_member(id,"LVM_INSERTGROUP",	0X1091,	-1);
	add_enum_member(id,"LVM_SETGROUPINFO",	0X1093,	-1);
	add_enum_member(id,"LVM_GETGROUPINFO",	0X1095,	-1);
	add_enum_member(id,"LVM_REMOVEGROUP",	0X1096,	-1);
	add_enum_member(id,"LVM_MOVEGROUP",	0X1097,	-1);
	add_enum_member(id,"LVM_GETGROUPCOUNT",	0X1098,	-1);
	add_enum_member(id,"LVM_GETGROUPINFOBYINDEX",	0X1099,	-1);
	add_enum_member(id,"LVM_MOVEITEMTOGROUP",	0X109A,	-1);
	add_enum_member(id,"LVM_SETGROUPMETRICS",	0X109B,	-1);
	add_enum_member(id,"LVM_GETGROUPMETRICS",	0X109C,	-1);
	add_enum_member(id,"LVM_ENABLEGROUPVIEW",	0X109D,	-1);
	add_enum_member(id,"LVM_SORTGROUPS",	0X109E,	-1);
	add_enum_member(id,"LVM_INSERTGROUPSORTED",	0X109F,	-1);
	add_enum_member(id,"LVM_REMOVEALLGROUPS",	0X10A0,	-1);
	add_enum_member(id,"LVM_HASGROUP",	0X10A1,	-1);
	add_enum_member(id,"LVM_SETTILEVIEWINFO",	0X10A2,	-1);
	add_enum_member(id,"LVM_GETTILEVIEWINFO",	0X10A3,	-1);
	add_enum_member(id,"LVM_SETTILEINFO",	0X10A4,	-1);
	add_enum_member(id,"LVM_GETTILEINFO",	0X10A5,	-1);
	add_enum_member(id,"LVM_SETINSERTMARK",	0X10A6,	-1);
	add_enum_member(id,"LVM_GETINSERTMARK",	0X10A7,	-1);
	add_enum_member(id,"LVM_INSERTMARKHITTEST",	0X10A8,	-1);
	add_enum_member(id,"LVM_GETINSERTMARKRECT",	0X10A9,	-1);
	add_enum_member(id,"LVM_SETINSERTMARKCOLOR",	0X10AA,	-1);
	add_enum_member(id,"LVM_GETINSERTMARKCOLOR",	0X10AB,	-1);
	add_enum_member(id,"LVM_SETINFOTIP",	0X10AD,	-1);
	add_enum_member(id,"LVM_GETSELECTEDCOLUMN",	0X10AE,	-1);
	add_enum_member(id,"LVM_ISGROUPVIEWENABLED",	0X10AF,	-1);
	add_enum_member(id,"LVM_GETOUTLINECOLOR",	0X10B0,	-1);
	add_enum_member(id,"LVM_SETOUTLINECOLOR",	0X10B1,	-1);
	add_enum_member(id,"LVM_CANCELEDITLABEL",	0X10B3,	-1);
	add_enum_member(id,"LVM_MAPINDEXTOID",	0X10B4,	-1);
	add_enum_member(id,"LVM_MAPIDTOINDEX",	0X10B5,	-1);
	add_enum_member(id,"LVM_ISITEMVISIBLE",	0X10B6,	-1);
	add_enum_member(id,"LVM_GETEMPTYTEXT",	0X10CC,	-1);
	add_enum_member(id,"LVM_GETFOOTERRECT",	0X10CD,	-1);
	add_enum_member(id,"LVM_GETFOOTERINFO",	0X10CE,	-1);
	add_enum_member(id,"LVM_GETFOOTERITEMRECT",	0X10CF,	-1);
	add_enum_member(id,"LVM_GETFOOTERITEM",	0X10D0,	-1);
	add_enum_member(id,"LVM_GETITEMINDEXRECT",	0X10D1,	-1);
	add_enum_member(id,"LVM_SETITEMINDEXSTATE",	0X10D2,	-1);
	add_enum_member(id,"LVM_GETNEXTITEMINDEX",	0X10D3,	-1);
	add_enum_member(id,"WM_DLGBORDER",	0X11EF,	-1);
	add_enum_member(id,"WM_DLGSUBCLASS",	0X11F0,	-1);
	add_enum_member(id,"CB_SETMINVISIBLE",	0X1701,	-1);
	add_enum_member(id,"CB_GETMINVISIBLE",	0X1702,	-1);
	add_enum_member(id,"CB_SETCUEBANNER",	0X1703,	-1);
	add_enum_member(id,"CB_GETCUEBANNER",	0X1704,	-1);
	add_enum_member(id,"OCM__BASE",	0X2000,	-1);
	add_enum_member(id,"PBM_SETBKCOLOR",	0X2001,	-1);
	add_enum_member(id,"SB_SETBKCOLOR",	0X2001,	-1);
	add_enum_member(id,"RB_SETCOLORSCHEME",	0X2002,	-1);
	add_enum_member(id,"TB_SETCOLORSCHEME",	0X2002,	-1);
	add_enum_member(id,"RB_GETCOLORSCHEME",	0X2003,	-1);
	add_enum_member(id,"TB_GETCOLORSCHEME",	0X2003,	-1);
	add_enum_member(id,"RB_GETDROPTARGET",	0X2004,	-1);
	add_enum_member(id,"LVM_SETUNICODEFORMAT",	0X2005,	-1);
	add_enum_member(id,"CBEM_SETUNICODEFORMAT",	0X2005,	-1);
	add_enum_member(id,"RB_SETUNICODEFORMAT",	0X2005,	-1);
	add_enum_member(id,"SB_SETUNICODEFORMAT",	0X2005,	-1);
	add_enum_member(id,"TBM_SETUNICODEFORMAT",	0X2005,	-1);
	add_enum_member(id,"TB_SETUNICODEFORMAT",	0X2005,	-1);
	add_enum_member(id,"UDM_SETUNICODEFORMAT",	0X2005,	-1);
	add_enum_member(id,"LVM_GETUNICODEFORMAT",	0X2006,	-1);
	add_enum_member(id,"CBEM_GETUNICODEFORMAT",	0X2006,	-1);
	add_enum_member(id,"RB_GETUNICODEFORMAT",	0X2006,	-1);
	add_enum_member(id,"SB_GETUNICODEFORMAT",	0X2006,	-1);
	add_enum_member(id,"TBM_GETUNICODEFORMAT",	0X2006,	-1);
	add_enum_member(id,"TB_GETUNICODEFORMAT",	0X2006,	-1);
	add_enum_member(id,"UDM_GETUNICODEFORMAT",	0X2006,	-1);
	add_enum_member(id,"RB_SETWINDOWTHEME",	0X200B,	-1);
	add_enum_member(id,"TB_SETWINDOWTHEME",	0X200B,	-1);
	add_enum_member(id,"OCM_CTLCOLOR",	0X2019,	-1);
	add_enum_member(id,"OCM_DRAWITEM",	0X202B,	-1);
	add_enum_member(id,"OCM_MEASUREITEM",	0X202C,	-1);
	add_enum_member(id,"OCM_DELETEITEM",	0X202D,	-1);
	add_enum_member(id,"OCM_VKEYTOITEM",	0X202E,	-1);
	add_enum_member(id,"OCM_CHARTOITEM",	0X202F,	-1);
	add_enum_member(id,"OCM_COMPAREITEM",	0X2039,	-1);
	add_enum_member(id,"OCM_NOTIFY",	0X204E,	-1);
	add_enum_member(id,"OCM_COMMAND",	0X2111,	-1);
	add_enum_member(id,"OCM_HSCROLL",	0X2114,	-1);
	add_enum_member(id,"OCM_VSCROLL",	0X2115,	-1);
	add_enum_member(id,"OCM_CTLCOLORMSGBOX",	0X2132,	-1);
	add_enum_member(id,"OCM_CTLCOLOREDIT",	0X2133,	-1);
	add_enum_member(id,"OCM_CTLCOLORLISTBOX",	0X2134,	-1);
	add_enum_member(id,"OCM_CTLCOLORBTN",	0X2135,	-1);
	add_enum_member(id,"OCM_CTLCOLORDLG",	0X2136,	-1);
	add_enum_member(id,"OCM_CTLCOLORSCROLLBAR",	0X2137,	-1);
	add_enum_member(id,"OCM_CTLCOLORSTATIC",	0X2138,	-1);
	add_enum_member(id,"OCM_PARENTNOTIFY",	0X2210,	-1);
	add_enum_member(id,"WM_APP",	0X8000,	-1);
	add_enum_member(id,"WM_RASDIALEVENT",	0XCCCD,	-1);
	id = add_enum(-1,"MACRO_VK",0x1100000);
	add_enum_member(id,"VK_LBUTTON",	0X1,	-1);
	add_enum_member(id,"VK_RBUTTON",	0X2,	-1);
	add_enum_member(id,"VK_CANCEL",	0X3,	-1);
	add_enum_member(id,"VK_MBUTTON",	0X4,	-1);
	add_enum_member(id,"VK_BACK",	0X8,	-1);
	add_enum_member(id,"VK_TAB",	0X9,	-1);
	add_enum_member(id,"VK_CLEAR",	0XC,	-1);
	add_enum_member(id,"VK_RETURN",	0XD,	-1);
	add_enum_member(id,"VK_SHIFT",	0X10,	-1);
	add_enum_member(id,"VK_CONTROL",	0X11,	-1);
	add_enum_member(id,"VK_MENU",	0X12,	-1);
	add_enum_member(id,"VK_PAUSE",	0X13,	-1);
	add_enum_member(id,"VK_CAPITAL",	0X14,	-1);
	add_enum_member(id,"VK_KANA",	0X15,	-1);
	add_enum_member(id,"VK_HANGEUL",	0X15,	-1);
	add_enum_member(id,"VK_HANGUL",	0X15,	-1);
	add_enum_member(id,"VK_JUNJA",	0X17,	-1);
	add_enum_member(id,"VK_FINAL",	0X18,	-1);
	add_enum_member(id,"VK_HANJA",	0X19,	-1);
	add_enum_member(id,"VK_KANJI",	0X19,	-1);
	add_enum_member(id,"VK_ESCAPE",	0X1B,	-1);
	add_enum_member(id,"VK_CONVERT",	0X1C,	-1);
	add_enum_member(id,"VK_NONCONVERT",	0X1D,	-1);
	add_enum_member(id,"VK_ACCEPT",	0X1E,	-1);
	add_enum_member(id,"VK_MODECHANGE",	0X1F,	-1);
	add_enum_member(id,"VK_SPACE",	0X20,	-1);
	add_enum_member(id,"VK_PRIOR",	0X21,	-1);
	add_enum_member(id,"VK_NEXT",	0X22,	-1);
	add_enum_member(id,"VK_END",	0X23,	-1);
	add_enum_member(id,"VK_HOME",	0X24,	-1);
	add_enum_member(id,"VK_LEFT",	0X25,	-1);
	add_enum_member(id,"VK_UP",	0X26,	-1);
	add_enum_member(id,"VK_RIGHT",	0X27,	-1);
	add_enum_member(id,"VK_DOWN",	0X28,	-1);
	add_enum_member(id,"VK_SELECT",	0X29,	-1);
	add_enum_member(id,"VK_PRINT",	0X2A,	-1);
	add_enum_member(id,"VK_EXECUTE",	0X2B,	-1);
	add_enum_member(id,"VK_SNAPSHOT",	0X2C,	-1);
	add_enum_member(id,"VK_INSERT",	0X2D,	-1);
	add_enum_member(id,"VK_DELETE",	0X2E,	-1);
	add_enum_member(id,"VK_HELP",	0X2F,	-1);
	add_enum_member(id,"VK_LWIN",	0X5B,	-1);
	add_enum_member(id,"VK_RWIN",	0X5C,	-1);
	add_enum_member(id,"VK_APPS",	0X5D,	-1);
	add_enum_member(id,"VK_NUMPAD0",	0X60,	-1);
	add_enum_member(id,"VK_NUMPAD1",	0X61,	-1);
	add_enum_member(id,"VK_NUMPAD2",	0X62,	-1);
	add_enum_member(id,"VK_NUMPAD3",	0X63,	-1);
	add_enum_member(id,"VK_NUMPAD4",	0X64,	-1);
	add_enum_member(id,"VK_NUMPAD5",	0X65,	-1);
	add_enum_member(id,"VK_NUMPAD6",	0X66,	-1);
	add_enum_member(id,"VK_NUMPAD7",	0X67,	-1);
	add_enum_member(id,"VK_NUMPAD8",	0X68,	-1);
	add_enum_member(id,"VK_NUMPAD9",	0X69,	-1);
	add_enum_member(id,"VK_MULTIPLY",	0X6A,	-1);
	add_enum_member(id,"VK_ADD",	0X6B,	-1);
	add_enum_member(id,"VK_SEPARATOR",	0X6C,	-1);
	add_enum_member(id,"VK_SUBTRACT",	0X6D,	-1);
	add_enum_member(id,"VK_DECIMAL",	0X6E,	-1);
	add_enum_member(id,"VK_DIVIDE",	0X6F,	-1);
	add_enum_member(id,"VK_F1",	0X70,	-1);
	add_enum_member(id,"VK_F2",	0X71,	-1);
	add_enum_member(id,"VK_F3",	0X72,	-1);
	add_enum_member(id,"VK_F4",	0X73,	-1);
	add_enum_member(id,"VK_F5",	0X74,	-1);
	add_enum_member(id,"VK_F6",	0X75,	-1);
	add_enum_member(id,"VK_F7",	0X76,	-1);
	add_enum_member(id,"VK_F8",	0X77,	-1);
	add_enum_member(id,"VK_F9",	0X78,	-1);
	add_enum_member(id,"VK_F10",	0X79,	-1);
	add_enum_member(id,"VK_F11",	0X7A,	-1);
	add_enum_member(id,"VK_F12",	0X7B,	-1);
	add_enum_member(id,"VK_F13",	0X7C,	-1);
	add_enum_member(id,"VK_F14",	0X7D,	-1);
	add_enum_member(id,"VK_F15",	0X7E,	-1);
	add_enum_member(id,"VK_F16",	0X7F,	-1);
	add_enum_member(id,"VK_F17",	0X80,	-1);
	add_enum_member(id,"VK_F18",	0X81,	-1);
	add_enum_member(id,"VK_F19",	0X82,	-1);
	add_enum_member(id,"VK_F20",	0X83,	-1);
	add_enum_member(id,"VK_F21",	0X84,	-1);
	add_enum_member(id,"VK_F22",	0X85,	-1);
	add_enum_member(id,"VK_F23",	0X86,	-1);
	add_enum_member(id,"VK_F24",	0X87,	-1);
	add_enum_member(id,"VK_NUMLOCK",	0X90,	-1);
	add_enum_member(id,"VK_SCROLL",	0X91,	-1);
	add_enum_member(id,"VK_LSHIFT",	0XA0,	-1);
	add_enum_member(id,"VK_RSHIFT",	0XA1,	-1);
	add_enum_member(id,"VK_LCONTROL",	0XA2,	-1);
	add_enum_member(id,"VK_RCONTROL",	0XA3,	-1);
	add_enum_member(id,"VK_LMENU",	0XA4,	-1);
	add_enum_member(id,"VK_RMENU",	0XA5,	-1);
	add_enum_member(id,"VK_PROCESSKEY",	0XE5,	-1);
	add_enum_member(id,"VK_ATTN",	0XF6,	-1);
	add_enum_member(id,"VK_CRSEL",	0XF7,	-1);
	add_enum_member(id,"VK_EXSEL",	0XF8,	-1);
	add_enum_member(id,"VK_EREOF",	0XF9,	-1);
	add_enum_member(id,"VK_PLAY",	0XFA,	-1);
	add_enum_member(id,"VK_ZOOM",	0XFB,	-1);
	add_enum_member(id,"VK_NONAME",	0XFC,	-1);
	add_enum_member(id,"VK_PA1",	0XFD,	-1);
	add_enum_member(id,"VK_OEM_CLEAR",	0XFE,	-1);
	id = add_enum(-1,"C_SDK::Types::TraceType",0x1100000);
	add_enum_member(id,"C_SDK::Types::TraceType::EVERYTHING",	0,	-1);
	add_enum_member(id,"C_SDK::Types::TraceType::WORLD_ONLY",	0X1,	-1);
	add_enum_member(id,"C_SDK::Types::TraceType::ENTITIES_ONLY",	0X2,	-1);
	add_enum_member(id,"C_SDK::Types::TraceType::EVERYTHING_FILTER_PROPS",	0X3,	-1);
	id = add_enum(-1,"OneTap::Types::ClanTag",0x1100000);
	add_enum_member(id,"OneTap::Types::ClanTag::ONETAP",	0,	-1);
	add_enum_member(id,"OneTap::Types::ClanTag::CUSTOM",	0X1,	-1);
	add_enum_member(id,"OneTap::Types::ClanTag::BACKWARDS",	0X2,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
	id = Enums_1(id);
	id = Enums_2(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("FuncInfo");
	id = get_struc_id("C_SDK::Classes::GuiManager::DrawColor");
	id = get_struc_id("UnwindMapEntry");
	id = get_struc_id("TryBlockMapEntry");
	id = get_struc_id("HandlerType");
	id = get_struc_id("__m128");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x1), "unsigned __int64[2]");
	SetType(get_member_id(id, 0x2), "__int8[16]");
	SetType(get_member_id(id, 0x3), "__int16[8]");
	SetType(get_member_id(id, 0x4), "__int32[4]");
	SetType(get_member_id(id, 0x5), "__int64[2]");
	SetType(get_member_id(id, 0x6), "unsigned __int8[16]");
	SetType(get_member_id(id, 0x7), "unsigned __int16[8]");
	SetType(get_member_id(id, 0x8), "unsigned __int32[4]");
	id = get_struc_id("__m128i");
	SetType(get_member_id(id, 0x0), "__int8[16]");
	SetType(get_member_id(id, 0x1), "__int16[8]");
	SetType(get_member_id(id, 0x2), "float");
	SetType(get_member_id(id, 0x3), "__int64[2]");
	SetType(get_member_id(id, 0x4), "unsigned __int8[16]");
	SetType(get_member_id(id, 0x5), "unsigned __int16[8]");
	SetType(get_member_id(id, 0x6), "float");
	SetType(get_member_id(id, 0x7), "unsigned __int64[2]");
	id = get_struc_id("__m128d");
	SetType(get_member_id(id, 0x0), "double[2]");
	id = get_struc_id("C_SDK::Classes::CGlobalVarsBase");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "float");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x14), "float");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "int");
	SetType(get_member_id(id, 0x20), "float");
	SetType(get_member_id(id, 0x24), "float");
	SetType(get_member_id(id, 0x28), "int");
	SetType(get_member_id(id, 0x2C), "int");
	SetType(get_member_id(id, 0x30), "void *");
	SetType(get_member_id(id, 0x34), "bool");
	SetType(get_member_id(id, 0x35), "bool");
	SetType(get_member_id(id, 0x38), "int");
	SetType(get_member_id(id, 0x3C), "int");
	SetType(get_member_id(id, 0x40), "const char *");
	SetType(get_member_id(id, 0x44), "const char *");
	SetType(get_member_id(id, 0x48), "int");
	SetType(get_member_id(id, 0x4C), "const char *");
	SetType(get_member_id(id, 0x50), "int");
	SetType(get_member_id(id, 0x54), "bool");
	SetType(get_member_id(id, 0x55), "bool");
	SetType(get_member_id(id, 0x56), "bool");
	SetType(get_member_id(id, 0x57), "bool");
	SetType(get_member_id(id, 0x58), "int");
	SetType(get_member_id(id, 0x5C), "int");
	SetType(get_member_id(id, 0x60), "void *");
	id = get_struc_id("C_SDK::Classes::CAnimState");
	SetType(get_member_id(id, 0x0), "char[24]");
	SetType(get_member_id(id, 0x18), "float");
	SetType(get_member_id(id, 0x1C), "char[12]");
	SetType(get_member_id(id, 0x28), "float");
	SetType(get_member_id(id, 0x2C), "float");
	SetType(get_member_id(id, 0x30), "char[16]");
	SetType(get_member_id(id, 0x40), "float");
	SetType(get_member_id(id, 0x44), "char[8]");
	SetType(get_member_id(id, 0x4C), "float");
	SetType(get_member_id(id, 0x50), "char[16]");
	SetType(get_member_id(id, 0x60), "void *");
	SetType(get_member_id(id, 0x64), "__int32");
	SetType(get_member_id(id, 0x68), "__int32");
	SetType(get_member_id(id, 0x6C), "float");
	SetType(get_member_id(id, 0x70), "__int32");
	SetType(get_member_id(id, 0x74), "float");
	SetType(get_member_id(id, 0x78), "float");
	SetType(get_member_id(id, 0x7C), "float");
	SetType(get_member_id(id, 0x80), "float");
	SetType(get_member_id(id, 0x84), "float");
	SetType(get_member_id(id, 0x88), "float");
	SetType(get_member_id(id, 0x8C), "float");
	SetType(get_member_id(id, 0x90), "float");
	SetType(get_member_id(id, 0x94), "char[4]");
	SetType(get_member_id(id, 0x98), "float");
	SetType(get_member_id(id, 0x9C), "float");
	SetType(get_member_id(id, 0xA0), "char[4]");
	SetType(get_member_id(id, 0xA4), "float");
	SetType(get_member_id(id, 0xA8), "float");
	SetType(get_member_id(id, 0xAC), "char[4]");
	SetType(get_member_id(id, 0xB0), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0xBC), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0xC8), "float");
	SetType(get_member_id(id, 0xCC), "float");
	SetType(get_member_id(id, 0xD0), "char[16]");
	SetType(get_member_id(id, 0xE0), "float");
	SetType(get_member_id(id, 0xE4), "float");
	SetType(get_member_id(id, 0xE8), "char[4]");
	SetType(get_member_id(id, 0xEC), "float");
	SetType(get_member_id(id, 0xF0), "float");
	SetType(get_member_id(id, 0xF4), "float");
	SetType(get_member_id(id, 0xF8), "float");
	SetType(get_member_id(id, 0xFC), "float");
	SetType(get_member_id(id, 0x100), "float");
	SetType(get_member_id(id, 0x104), "float");
	SetType(get_member_id(id, 0x108), "bool");
	SetType(get_member_id(id, 0x109), "bool");
	SetType(get_member_id(id, 0x10A), "char[4]");
	SetType(get_member_id(id, 0x110), "float");
	SetType(get_member_id(id, 0x114), "float");
	SetType(get_member_id(id, 0x118), "float");
	SetType(get_member_id(id, 0x11C), "char[20]");
	SetType(get_member_id(id, 0x130), "__int32");
	SetType(get_member_id(id, 0x134), "char[32]");
	SetType(get_member_id(id, 0x154), "float");
	SetType(get_member_id(id, 0x158), "float");
	SetType(get_member_id(id, 0x15C), "float");
	SetType(get_member_id(id, 0x160), "float");
	SetType(get_member_id(id, 0x164), "char[68]");
	SetType(get_member_id(id, 0x1A8), "__int32");
	SetType(get_member_id(id, 0x1AC), "char[8]");
	SetType(get_member_id(id, 0x1B4), "float");
	SetType(get_member_id(id, 0x1B8), "char[8]");
	SetType(get_member_id(id, 0x1C0), "float");
	SetType(get_member_id(id, 0x1C4), "char[8]");
	SetType(get_member_id(id, 0x1CC), "float");
	SetType(get_member_id(id, 0x1D0), "char[8]");
	SetType(get_member_id(id, 0x1D8), "float");
	SetType(get_member_id(id, 0x1DC), "char[8]");
	SetType(get_member_id(id, 0x1E4), "float");
	SetType(get_member_id(id, 0x1E8), "char[20]");
	SetType(get_member_id(id, 0x1FC), "float");
	SetType(get_member_id(id, 0x200), "char[8]");
	SetType(get_member_id(id, 0x208), "float");
	SetType(get_member_id(id, 0x20C), "char[8]");
	SetType(get_member_id(id, 0x214), "float");
	SetType(get_member_id(id, 0x218), "char[8]");
	SetType(get_member_id(id, 0x220), "float");
	SetType(get_member_id(id, 0x224), "char[8]");
	SetType(get_member_id(id, 0x22C), "float");
	SetType(get_member_id(id, 0x230), "char[8]");
	SetType(get_member_id(id, 0x238), "float");
	SetType(get_member_id(id, 0x23C), "char[8]");
	SetType(get_member_id(id, 0x244), "float");
	SetType(get_member_id(id, 0x248), "char[8]");
	SetType(get_member_id(id, 0x250), "float");
	SetType(get_member_id(id, 0x254), "char[8]");
	SetType(get_member_id(id, 0x25C), "float");
	SetType(get_member_id(id, 0x260), "char[8]");
	SetType(get_member_id(id, 0x268), "float");
	SetType(get_member_id(id, 0x26C), "char[8]");
	SetType(get_member_id(id, 0x274), "float");
	SetType(get_member_id(id, 0x278), "char[8]");
	SetType(get_member_id(id, 0x280), "float");
	SetType(get_member_id(id, 0x284), "char[8]");
	SetType(get_member_id(id, 0x28C), "float");
	SetType(get_member_id(id, 0x290), "char[8]");
	SetType(get_member_id(id, 0x298), "float");
	SetType(get_member_id(id, 0x29C), "char[4]");
	SetType(get_member_id(id, 0x2A0), "float");
	SetType(get_member_id(id, 0x2A4), "__int32");
	SetType(get_member_id(id, 0x2A8), "float");
	SetType(get_member_id(id, 0x2AC), "char[116]");
	SetType(get_member_id(id, 0x320), "float");
	SetType(get_member_id(id, 0x324), "__int32");
	SetType(get_member_id(id, 0x328), "char[4]");
	SetType(get_member_id(id, 0x32C), "float");
	SetType(get_member_id(id, 0x330), "float");
	SetType(get_member_id(id, 0x334), "float");
	SetType(get_member_id(id, 0x338), "float");
	SetType(get_member_id(id, 0x33C), "char[4]");
	id = get_struc_id("C_SDK::Structs::GlowObjectDefinition");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x4), "char[12]");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x14), "unsigned __int8[4]");
	SetType(get_member_id(id, 0x18), "float");
	SetType(get_member_id(id, 0x1C), "char[4]");
	SetType(get_member_id(id, 0x20), "float");
	SetType(get_member_id(id, 0x24), "bool");
	SetType(get_member_id(id, 0x25), "bool");
	SetType(get_member_id(id, 0x26), "bool");
	SetType(get_member_id(id, 0x27), "char[5]");
	SetType(get_member_id(id, 0x2C), "int");
	SetType(get_member_id(id, 0x30), "int");
	SetType(get_member_id(id, 0x34), "int");
	id = get_struc_id("C_SDK::Classes::CPrediction");
	SetType(get_member_id(id, 0x0), "char[8]");
	SetType(get_member_id(id, 0x8), "bool");
	SetType(get_member_id(id, 0x9), "char[1]");
	SetType(get_member_id(id, 0xA), "bool");
	SetType(get_member_id(id, 0xB), "char[][12]");
	SetType(get_member_id(id, 0x17), "bool");
	id = get_struc_id("C_SDK::Classes::CUserCmd");
	SetType(get_member_id(id, 0x0), "char[4]");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x18), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x24), "float");
	SetType(get_member_id(id, 0x28), "float");
	SetType(get_member_id(id, 0x2C), "float");
	SetType(get_member_id(id, 0x30), "C_SDK::Classes::CUserCmd::Buttons");
	SetType(get_member_id(id, 0x34), "int");
	SetType(get_member_id(id, 0x38), "int");
	SetType(get_member_id(id, 0x3C), "int");
	SetType(get_member_id(id, 0x40), "int");
	SetType(get_member_id(id, 0x44), "__int16");
	SetType(get_member_id(id, 0x46), "__int16");
	SetType(get_member_id(id, 0x48), "bool");
	SetType(get_member_id(id, 0x4C), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x58), "C_SDK::Classes::Math::Vector::Rectangular");
	id = get_struc_id("C_SDK::Classes::CAnimationLayer::Server");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "bool");
	SetType(get_member_id(id, 0x5), "bool");
	SetType(get_member_id(id, 0x6), "int");
	SetType(get_member_id(id, 0xA), "float");
	SetType(get_member_id(id, 0xE), "float");
	SetType(get_member_id(id, 0x12), "float");
	SetType(get_member_id(id, 0x16), "float");
	SetType(get_member_id(id, 0x1A), "float");
	SetType(get_member_id(id, 0x1E), "float");
	SetType(get_member_id(id, 0x22), "float");
	SetType(get_member_id(id, 0x26), "float");
	SetType(get_member_id(id, 0x2A), "float");
	SetType(get_member_id(id, 0x2E), "float");
	SetType(get_member_id(id, 0x32), "float");
	SetType(get_member_id(id, 0x36), "void *");
	SetType(get_member_id(id, 0x3A), "int");
	SetType(get_member_id(id, 0x3E), "int");
	SetType(get_member_id(id, 0x42), "void *");
	SetType(get_member_id(id, 0x46), "C_SDK::Classes::Animation::Activity");
	SetType(get_member_id(id, 0x4A), "int");
	SetType(get_member_id(id, 0x4E), "float");
	SetType(get_member_id(id, 0x52), "float");
	SetType(get_member_id(id, 0x56), "void *");
	id = get_struc_id("C_SDK::Classes::CVerifiedUserCmd");
	SetType(get_member_id(id, 0x4C), "unsigned int");
	id = get_struc_id("C_SDK::Classes::CInput");
	SetType(get_member_id(id, 0x0), "char[4]");
	SetType(get_member_id(id, 0x4), "bool");
	SetType(get_member_id(id, 0x5), "bool");
	SetType(get_member_id(id, 0x6), "bool");
	SetType(get_member_id(id, 0x7), "char[45]");
	SetType(get_member_id(id, 0x34), "void *");
	SetType(get_member_id(id, 0x38), "char[][92]");
	SetType(get_member_id(id, 0x94), "int");
	SetType(get_member_id(id, 0x98), "int");
	SetType(get_member_id(id, 0x9C), "bool");
	SetType(get_member_id(id, 0x9D), "bool");
	SetType(get_member_id(id, 0x9E), "bool");
	SetType(get_member_id(id, 0xA0), "char[12]");
	SetType(get_member_id(id, 0xAC), "bool");
	SetType(get_member_id(id, 0xAD), "char[3]");
	SetType(get_member_id(id, 0xB0), "int");
	SetType(get_member_id(id, 0xB4), "int");
	SetType(get_member_id(id, 0xB8), "int");
	SetType(get_member_id(id, 0xBC), "int");
	SetType(get_member_id(id, 0xC0), "bool");
	SetType(get_member_id(id, 0xC1), "char[3]");
	SetType(get_member_id(id, 0xC4), "char[12]");
	SetType(get_member_id(id, 0xD0), "char[12]");
	SetType(get_member_id(id, 0xDC), "float");
	SetType(get_member_id(id, 0xE0), "int");
	SetType(get_member_id(id, 0xE4), "char[8]");
	SetType(get_member_id(id, 0xEC), "void *");
	SetType(get_member_id(id, 0xF0), "void *");
	id = get_struc_id("CPPEH_RECORD");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "EXCEPTION_POINTERS *");
	SetType(get_member_id(id, 0x8), "struct _EH3_EXCEPTION_REGISTRATION");
	id = get_struc_id("_EH3_EXCEPTION_REGISTRATION");
	SetType(get_member_id(id, 0x0), "struct _EH3_EXCEPTION_REGISTRATION *");
	SetType(get_member_id(id, 0x4), "PVOID");
	SetType(get_member_id(id, 0x8), "PSCOPETABLE_ENTRY");
	SetType(get_member_id(id, 0xC), "DWORD");
	id = get_struc_id("C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	id = get_struc_id("C_SDK::Classes::CBasePlayerAnimState");
	SetType(get_member_id(id, 0x0), "char[24]");
	SetType(get_member_id(id, 0x18), "float");
	SetType(get_member_id(id, 0x1C), "char[12]");
	SetType(get_member_id(id, 0x28), "float");
	SetType(get_member_id(id, 0x2C), "float");
	SetType(get_member_id(id, 0x30), "char[16]");
	SetType(get_member_id(id, 0x40), "float");
	SetType(get_member_id(id, 0x44), "char[8]");
	SetType(get_member_id(id, 0x4C), "float");
	SetType(get_member_id(id, 0x50), "char[16]");
	SetType(get_member_id(id, 0x60), "int *");
	SetType(get_member_id(id, 0x64), "int");
	SetType(get_member_id(id, 0x68), "int");
	SetType(get_member_id(id, 0x6C), "float");
	SetType(get_member_id(id, 0x70), "int");
	SetType(get_member_id(id, 0x74), "float");
	SetType(get_member_id(id, 0x78), "float");
	SetType(get_member_id(id, 0x7C), "float");
	SetType(get_member_id(id, 0x80), "float");
	SetType(get_member_id(id, 0x84), "float");
	SetType(get_member_id(id, 0x88), "float");
	SetType(get_member_id(id, 0x8C), "float");
	SetType(get_member_id(id, 0x90), "float");
	SetType(get_member_id(id, 0x94), "char[4]");
	SetType(get_member_id(id, 0x98), "float");
	SetType(get_member_id(id, 0x9C), "float");
	SetType(get_member_id(id, 0xA0), "char[4]");
	SetType(get_member_id(id, 0xA4), "float");
	SetType(get_member_id(id, 0xA8), "float");
	SetType(get_member_id(id, 0xAC), "char[4]");
	SetType(get_member_id(id, 0xB0), "C_SDK::Classes::Math::Vector::Flat");
	SetType(get_member_id(id, 0xB8), "C_SDK::Classes::Math::Vector::Flat");
	SetType(get_member_id(id, 0xC0), "float");
	SetType(get_member_id(id, 0xC4), "float");
	SetType(get_member_id(id, 0xC8), "char[16]");
	SetType(get_member_id(id, 0xD8), "float");
	SetType(get_member_id(id, 0xDC), "float");
	SetType(get_member_id(id, 0xE0), "char[4]");
	SetType(get_member_id(id, 0xE4), "float");
	SetType(get_member_id(id, 0xE8), "float");
	SetType(get_member_id(id, 0xEC), "float");
	SetType(get_member_id(id, 0xF0), "float");
	SetType(get_member_id(id, 0xF4), "float");
	SetType(get_member_id(id, 0xF8), "float");
	SetType(get_member_id(id, 0xFC), "float");
	SetType(get_member_id(id, 0x100), "bool");
	SetType(get_member_id(id, 0x101), "bool");
	SetType(get_member_id(id, 0x102), "char[4]");
	SetType(get_member_id(id, 0x108), "float");
	SetType(get_member_id(id, 0x10C), "float");
	SetType(get_member_id(id, 0x110), "float");
	SetType(get_member_id(id, 0x114), "char[20]");
	SetType(get_member_id(id, 0x128), "int");
	SetType(get_member_id(id, 0x12C), "char[32]");
	SetType(get_member_id(id, 0x14C), "float");
	SetType(get_member_id(id, 0x150), "float");
	SetType(get_member_id(id, 0x154), "float");
	SetType(get_member_id(id, 0x158), "float");
	SetType(get_member_id(id, 0x15C), "char[68]");
	SetType(get_member_id(id, 0x1A0), "int");
	SetType(get_member_id(id, 0x1A4), "char[8]");
	SetType(get_member_id(id, 0x1AC), "float");
	SetType(get_member_id(id, 0x1B0), "char[8]");
	SetType(get_member_id(id, 0x1B8), "float");
	SetType(get_member_id(id, 0x1BC), "char[8]");
	SetType(get_member_id(id, 0x1C4), "float");
	SetType(get_member_id(id, 0x1C8), "char[8]");
	SetType(get_member_id(id, 0x1D0), "float");
	SetType(get_member_id(id, 0x1D4), "char[8]");
	SetType(get_member_id(id, 0x1DC), "float");
	SetType(get_member_id(id, 0x1E0), "char[20]");
	SetType(get_member_id(id, 0x1F4), "float");
	SetType(get_member_id(id, 0x1F8), "char[8]");
	SetType(get_member_id(id, 0x200), "float");
	SetType(get_member_id(id, 0x204), "char[8]");
	SetType(get_member_id(id, 0x20C), "float");
	SetType(get_member_id(id, 0x210), "char[8]");
	SetType(get_member_id(id, 0x218), "float");
	SetType(get_member_id(id, 0x21C), "char[8]");
	SetType(get_member_id(id, 0x224), "float");
	SetType(get_member_id(id, 0x228), "char[8]");
	SetType(get_member_id(id, 0x230), "float");
	SetType(get_member_id(id, 0x234), "char[8]");
	SetType(get_member_id(id, 0x23C), "float");
	SetType(get_member_id(id, 0x240), "char[8]");
	SetType(get_member_id(id, 0x248), "float");
	SetType(get_member_id(id, 0x24C), "char[8]");
	SetType(get_member_id(id, 0x254), "float");
	SetType(get_member_id(id, 0x258), "char[8]");
	SetType(get_member_id(id, 0x260), "float");
	SetType(get_member_id(id, 0x264), "char[8]");
	SetType(get_member_id(id, 0x26C), "float");
	SetType(get_member_id(id, 0x270), "char[8]");
	SetType(get_member_id(id, 0x278), "float");
	SetType(get_member_id(id, 0x27C), "char[8]");
	SetType(get_member_id(id, 0x284), "float");
	SetType(get_member_id(id, 0x288), "char[8]");
	SetType(get_member_id(id, 0x290), "float");
	SetType(get_member_id(id, 0x294), "char[4]");
	SetType(get_member_id(id, 0x298), "float");
	SetType(get_member_id(id, 0x29C), "int");
	SetType(get_member_id(id, 0x2A0), "float");
	SetType(get_member_id(id, 0x2A4), "char[116]");
	SetType(get_member_id(id, 0x318), "float");
	SetType(get_member_id(id, 0x31C), "int");
	SetType(get_member_id(id, 0x320), "char[4]");
	SetType(get_member_id(id, 0x324), "float");
	SetType(get_member_id(id, 0x328), "float");
	SetType(get_member_id(id, 0x32C), "float");
	SetType(get_member_id(id, 0x330), "float");
	id = get_struc_id("C_SDK::Structs::EventInfo");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "char");
	SetType(get_member_id(id, 0x9), "char");
	SetType(get_member_id(id, 0xA), "const char *");
	SetType(get_member_id(id, 0xE), "int");
	SetType(get_member_id(id, 0x12), "char");
	SetType(get_member_id(id, 0x13), "char");
	id = get_struc_id("_IMAGE_SECTION_HEADER");
	SetType(get_member_id(id, 0x0), "BYTE[8]");
	SetType(get_member_id(id, 0x8), "_IMAGE_SECTION_HEADER::$39DFBA39B6D121CDFC1ACE66C995549C");
	SetType(get_member_id(id, 0xC), "DWORD");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "DWORD");
	SetType(get_member_id(id, 0x18), "DWORD");
	SetType(get_member_id(id, 0x1C), "DWORD");
	SetType(get_member_id(id, 0x20), "WORD");
	SetType(get_member_id(id, 0x22), "WORD");
	SetType(get_member_id(id, 0x24), "DWORD");
	id = get_struc_id("_IMAGE_SECTION_HEADER::$39DFBA39B6D121CDFC1ACE66C995549C");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x1), "DWORD");
	id = get_struc_id("OneTap::Classes::CommandManager");
	SetType(get_member_id(id, 0x0), "__declspec(align(4)) int");
	SetType(get_member_id(id, 0x4), "__declspec(align(4)) int");
	SetType(get_member_id(id, 0x8), "__declspec(align(4)) int");
	SetType(get_member_id(id, 0xC), "__declspec(align(4)) OneTap::Classes::CBufferedCommand[150]");
	SetType(get_member_id(id, 0x12CC), "__declspec(align(4)) bool");
	SetType(get_member_id(id, 0x12CD), "char[1][15]");
	id = get_struc_id("OneTap::Classes::CBufferedCommand");
	SetType(get_member_id(id, 0x0), "__declspec(align(4)) C_SDK::Classes::CUserCmd *");
	SetType(get_member_id(id, 0x4), "__declspec(align(4)) C_SDK::Classes::CVerifiedUserCmd *");
	SetType(get_member_id(id, 0x8), "__declspec(align(4)) C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x14), "__declspec(align(4)) C_SDK::Classes::Math::Vector::Rectangular");
	id = get_struc_id("OneTap::Classes::Player::LagData");
	SetType(get_member_id(id, 0x0), "_BYTE[36]");
	SetType(get_member_id(id, 0x24), "_BYTE");
	SetType(get_member_id(id, 0x25), "_BYTE[19]");
	SetType(get_member_id(id, 0x38), "float");
	SetType(get_member_id(id, 0x3C), "_BYTE[12]");
	SetType(get_member_id(id, 0x48), "float");
	SetType(get_member_id(id, 0x4C), "float");
	SetType(get_member_id(id, 0x50), "_BYTE[216]");
	SetType(get_member_id(id, 0x128), "float");
	SetType(get_member_id(id, 0x12C), "_BYTE[8]");
	SetType(get_member_id(id, 0x134), "float");
	SetType(get_member_id(id, 0x138), "_BYTE[152]");
	SetType(get_member_id(id, 0x1D0), "float");
	SetType(get_member_id(id, 0x1D4), "_BYTE[4]");
	SetType(get_member_id(id, 0x1D8), "float");
	SetType(get_member_id(id, 0x1DC), "_BYTE[324]");
	SetType(get_member_id(id, 0x320), "float");
	SetType(get_member_id(id, 0x324), "_BYTE[29]");
	SetType(get_member_id(id, 0x341), "_BYTE");
	SetType(get_member_id(id, 0x344), "_DWORD");
	SetType(get_member_id(id, 0x348), "_BYTE[376]");
	SetType(get_member_id(id, 0x4C0), "float");
	SetType(get_member_id(id, 0x4C4), "_BYTE[724]");
	SetType(get_member_id(id, 0x798), "float");
	SetType(get_member_id(id, 0x79C), "_BYTE[724]");
	SetType(get_member_id(id, 0xA70), "float");
	id = get_struc_id("OneTap::Classes::Player::AnimLagData");
	SetType(get_member_id(id, 0x0), "_BYTE");
	SetType(get_member_id(id, 0x8), "_DWORD");
	SetType(get_member_id(id, 0xC), "_BYTE[4]");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x14), "_BYTE");
	SetType(get_member_id(id, 0x15), "_BYTE[3]");
	SetType(get_member_id(id, 0x18), "float");
	SetType(get_member_id(id, 0x1C), "_BYTE[4]");
	SetType(get_member_id(id, 0x20), "_DWORD");
	SetType(get_member_id(id, 0x24), "_BYTE");
	SetType(get_member_id(id, 0x25), "_BYTE[15]");
	SetType(get_member_id(id, 0x34), "_DWORD");
	SetType(get_member_id(id, 0x38), "float");
	SetType(get_member_id(id, 0x3C), "_BYTE[12]");
	SetType(get_member_id(id, 0x48), "_DWORD");
	SetType(get_member_id(id, 0x4C), "_DWORD");
	SetType(get_member_id(id, 0x50), "_DWORD");
	SetType(get_member_id(id, 0x54), "_BYTE[12]");
	SetType(get_member_id(id, 0x60), "char");
	id = get_struc_id("C_SDK::Classes::ClockDriftMgr");
	SetType(get_member_id(id, 0x0), "float[16]");
	SetType(get_member_id(id, 0x40), "int");
	SetType(get_member_id(id, 0x44), "int");
	SetType(get_member_id(id, 0x48), "int");
	id = get_struc_id("C_SDK::Classes::ClientState");
	SetType(get_member_id(id, 0x0), "char[156]");
	SetType(get_member_id(id, 0x9C), "unsigned int");
	SetType(get_member_id(id, 0xA0), "unsigned int");
	SetType(get_member_id(id, 0xA4), "char[100]");
	SetType(get_member_id(id, 0x108), "unsigned int");
	SetType(get_member_id(id, 0x10C), "char[8]");
	SetType(get_member_id(id, 0x114), "float");
	SetType(get_member_id(id, 0x118), "unsigned int");
	SetType(get_member_id(id, 0x11C), "unsigned int");
	SetType(get_member_id(id, 0x120), "char[8]");
	SetType(get_member_id(id, 0x128), "C_SDK::Classes::ClockDriftMgr");
	SetType(get_member_id(id, 0x174), "unsigned int");
	SetType(get_member_id(id, 0x178), "bool");
	SetType(get_member_id(id, 0x179), "char[3]");
	SetType(get_member_id(id, 0x17C), "unsigned int");
	SetType(get_member_id(id, 0x180), "unsigned int");
	SetType(get_member_id(id, 0x184), "char[260]");
	SetType(get_member_id(id, 0x288), "char[40]");
	SetType(get_member_id(id, 0x2B0), "char[40]");
	SetType(get_member_id(id, 0x2D8), "char[56]");
	SetType(get_member_id(id, 0x310), "unsigned int");
	SetType(get_member_id(id, 0x314), "char[18940]");
	SetType(get_member_id(id, 0x4D10), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x4D1C), "int");
	SetType(get_member_id(id, 0x4D20), "int");
	SetType(get_member_id(id, 0x4D24), "unsigned int");
	SetType(get_member_id(id, 0x4D28), "unsigned int");
	id = get_struc_id("OneTap::SharedData::ClientSnapshot");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "char[12]");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "char[12]");
	SetType(get_member_id(id, 0x20), "int *");
	SetType(get_member_id(id, 0x24), "char[12]");
	SetType(get_member_id(id, 0x30), "C_SDK::Classes::ICVar *");
	SetType(get_member_id(id, 0x34), "char[12]");
	SetType(get_member_id(id, 0x40), "C_SDK::Classes::EngineClient *");
	SetType(get_member_id(id, 0x44), "char[12]");
	SetType(get_member_id(id, 0x50), "C_SDK::Classes::EngineTrace *");
	SetType(get_member_id(id, 0x54), "char[12]");
	SetType(get_member_id(id, 0x60), "C_SDK::Classes::CGlobalVarsBase *");
	SetType(get_member_id(id, 0x64), "char[12]");
	SetType(get_member_id(id, 0x70), "int");
	SetType(get_member_id(id, 0x74), "char[12]");
	SetType(get_member_id(id, 0x80), "int");
	SetType(get_member_id(id, 0x84), "char[12]");
	SetType(get_member_id(id, 0x90), "int");
	SetType(get_member_id(id, 0x94), "char[12]");
	SetType(get_member_id(id, 0xA0), "int");
	SetType(get_member_id(id, 0xA4), "char[12]");
	SetType(get_member_id(id, 0xB0), "int");
	SetType(get_member_id(id, 0xB4), "char[12]");
	SetType(get_member_id(id, 0xC0), "C_SDK::Classes::CPrediction *");
	SetType(get_member_id(id, 0xC4), "char[12]");
	SetType(get_member_id(id, 0xD0), "int");
	SetType(get_member_id(id, 0xD4), "char[12]");
	SetType(get_member_id(id, 0xE0), "int");
	SetType(get_member_id(id, 0xE4), "char[12]");
	SetType(get_member_id(id, 0xF0), "int");
	SetType(get_member_id(id, 0xF4), "char[12]");
	SetType(get_member_id(id, 0x100), "int");
	SetType(get_member_id(id, 0x104), "char[12]");
	SetType(get_member_id(id, 0x110), "C_SDK::Classes::ClientState *");
	SetType(get_member_id(id, 0x114), "char[12]");
	id = get_struc_id("C_SDK::Classes::EngineTrace::Ray");
	SetType(get_member_id(id, 0x0), "C_SDK::Classes::Math::Vector::Aligned");
	SetType(get_member_id(id, 0x10), "C_SDK::Classes::Math::Vector::Aligned");
	SetType(get_member_id(id, 0x20), "C_SDK::Classes::Math::Vector::Aligned");
	SetType(get_member_id(id, 0x30), "C_SDK::Classes::Math::Vector::Aligned");
	SetType(get_member_id(id, 0x40), "const C_SDK::Classes::Math::Matrix3x4 *");
	SetType(get_member_id(id, 0x44), "bool");
	SetType(get_member_id(id, 0x45), "bool");
	id = get_struc_id("C_SDK::Classes::Math::Vector::Aligned");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "float");
	id = get_struc_id("C_SDK::Classes::EngineClient");
	SetType(get_member_id(id, 0x0), "C_SDK::Classes::EngineClient::VirtTable *");
	id = get_struc_id("C_SDK::Classes::EngineTrace");
	SetType(get_member_id(id, 0x0), "C_SDK::Classes::EngineTrace::VirtTable *");
	id = get_struc_id("C_SDK::Classes::EngineTrace::Trace");
	SetType(get_member_id(id, 0x0), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0xC), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x18), "C_SDK::Classes::Engine::CPlane");
	SetType(get_member_id(id, 0x2C), "float");
	SetType(get_member_id(id, 0x30), "int");
	SetType(get_member_id(id, 0x34), "_BYTE[2]");
	SetType(get_member_id(id, 0x36), "_BYTE");
	SetType(get_member_id(id, 0x37), "_BYTE");
	SetType(get_member_id(id, 0x38), "float");
	SetType(get_member_id(id, 0x3C), "C_SDK::Classes::Engine::CSurface");
	SetType(get_member_id(id, 0x44), "int");
	SetType(get_member_id(id, 0x48), "__int16");
	SetType(get_member_id(id, 0x4A), "_BYTE[2]");
	SetType(get_member_id(id, 0x4C), "void *");
	SetType(get_member_id(id, 0x50), "int");
	id = get_struc_id("C_SDK::Classes::Engine::CPlane");
	SetType(get_member_id(id, 0x0), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0xC), "float");
	SetType(get_member_id(id, 0x10), "unsigned __int8");
	SetType(get_member_id(id, 0x11), "unsigned __int8");
	SetType(get_member_id(id, 0x12), "unsigned __int8[2]");
	id = get_struc_id("C_SDK::Classes::Engine::CSurface");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "__int16");
	SetType(get_member_id(id, 0x6), "unsigned __int16");
	id = get_struc_id("C_SDK::Classes::EngineTrace::VirtTable");
	SetType(get_member_id(id, 0x0), "int (__stdcall *)(C_SDK::Classes::Math::Vector::Rectangular *absPosition, int contentsMask, void ***entity)");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "void (__stdcall *)(C_SDK::Classes::EngineTrace::Ray *, unsigned int, void *, C_SDK::Classes::EngineTrace::Trace *)");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "void (__stdcall *)(C_SDK::Classes::EngineTrace::Ray *ray, unsigned int mask, void *traceFilter, C_SDK::Classes::EngineTrace::Trace *trace)");
	id = get_struc_id("C_SDK::Classes::Engine::Surface::Data");
	SetType(get_member_id(id, 0x0), "C_SDK::Classes::Engine::Surface::PhysicsParams");
	SetType(get_member_id(id, 0x18), "C_SDK::Classes::Engine::Surface::AudioParams");
	SetType(get_member_id(id, 0x34), "C_SDK::Classes::Engine::Surface::SoundNames");
	SetType(get_member_id(id, 0x48), "C_SDK::Classes::Engine::Surface::GameProps");
	SetType(get_member_id(id, 0x68), "char[4]");
	id = get_struc_id("C_SDK::Classes::Engine::Surface::PhysicsParams");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "float");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x14), "char[4]");
	id = get_struc_id("C_SDK::Classes::Engine::Surface::AudioParams");
	SetType(get_member_id(id, 0x0), "char[4]");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "float");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x14), "float");
	SetType(get_member_id(id, 0x18), "float");
	id = get_struc_id("C_SDK::Classes::Engine::Surface::SoundNames");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x2), "unsigned __int16");
	SetType(get_member_id(id, 0x4), "unsigned __int16");
	SetType(get_member_id(id, 0x6), "unsigned __int16");
	SetType(get_member_id(id, 0x8), "unsigned __int16");
	SetType(get_member_id(id, 0xA), "unsigned __int16");
	SetType(get_member_id(id, 0xC), "unsigned __int16");
	SetType(get_member_id(id, 0xE), "unsigned __int16");
	SetType(get_member_id(id, 0x10), "unsigned __int16");
	SetType(get_member_id(id, 0x12), "unsigned __int16");
	id = get_struc_id("C_SDK::Classes::Engine::Surface::GameProps");
	SetType(get_member_id(id, 0x0), "char[4]");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "char[4]");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x14), "float");
	SetType(get_member_id(id, 0x18), "unsigned __int16");
	SetType(get_member_id(id, 0x1A), "char[3]");
	id = get_struc_id("C_SDK::Classes::EngineClient::VirtTable");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "void (__stdcall *)(int *, int *)");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "void (__stdcall *)(const char *)");
	SetType(get_member_id(id, 0x20), "bool (__stdcall *)(int, C_SDK::Classes::Player::Info *)");
	SetType(get_member_id(id, 0x24), "int (__stdcall *)(int)");
	SetType(get_member_id(id, 0x28), "int");
	SetType(get_member_id(id, 0x2C), "int");
	SetType(get_member_id(id, 0x30), "int (__stdcall *)()");
	SetType(get_member_id(id, 0x34), "int");
	SetType(get_member_id(id, 0x38), "int");
	SetType(get_member_id(id, 0x3C), "int");
	SetType(get_member_id(id, 0x40), "int");
	SetType(get_member_id(id, 0x44), "int");
	SetType(get_member_id(id, 0x48), "void (__stdcall *)(C_SDK::Classes::Math::Vector::Rectangular *)");
	SetType(get_member_id(id, 0x4C), "void (__stdcall *)(C_SDK::Classes::Math::Vector::Rectangular *)");
	SetType(get_member_id(id, 0x50), "int (__stdcall *)()");
	SetType(get_member_id(id, 0x54), "int");
	SetType(get_member_id(id, 0x58), "int");
	SetType(get_member_id(id, 0x5C), "int");
	SetType(get_member_id(id, 0x60), "int");
	SetType(get_member_id(id, 0x64), "int");
	SetType(get_member_id(id, 0x68), "bool (__stdcall *)()");
	SetType(get_member_id(id, 0x6C), "int");
	SetType(get_member_id(id, 0x70), "int");
	SetType(get_member_id(id, 0x74), "int");
	SetType(get_member_id(id, 0x78), "int");
	SetType(get_member_id(id, 0x7C), "int");
	SetType(get_member_id(id, 0x80), "int");
	SetType(get_member_id(id, 0x84), "int");
	SetType(get_member_id(id, 0x88), "int");
	SetType(get_member_id(id, 0x8C), "int");
	SetType(get_member_id(id, 0x90), "int");
	SetType(get_member_id(id, 0x94), "C_SDK::Classes::Math::VirtualMatrix *(__stdcall *)()");
	SetType(get_member_id(id, 0x98), "int");
	SetType(get_member_id(id, 0x9C), "int");
	SetType(get_member_id(id, 0xA0), "int");
	SetType(get_member_id(id, 0xA4), "int");
	SetType(get_member_id(id, 0xA8), "int");
	SetType(get_member_id(id, 0xAC), "int");
	SetType(get_member_id(id, 0xB0), "int");
	SetType(get_member_id(id, 0xB4), "int");
	SetType(get_member_id(id, 0xB8), "int");
	SetType(get_member_id(id, 0xBC), "int");
	SetType(get_member_id(id, 0xC0), "int");
	SetType(get_member_id(id, 0xC4), "int");
	SetType(get_member_id(id, 0xC8), "int");
	SetType(get_member_id(id, 0xCC), "int");
	SetType(get_member_id(id, 0xD0), "int");
	SetType(get_member_id(id, 0xD4), "int");
	SetType(get_member_id(id, 0xD8), "int");
	SetType(get_member_id(id, 0xDC), "int");
	SetType(get_member_id(id, 0xE0), "int");
	SetType(get_member_id(id, 0xE4), "int");
	SetType(get_member_id(id, 0xE8), "int");
	SetType(get_member_id(id, 0xEC), "int");
	SetType(get_member_id(id, 0xF0), "int");
	SetType(get_member_id(id, 0xF4), "int");
	SetType(get_member_id(id, 0xF8), "int");
	SetType(get_member_id(id, 0xFC), "int");
	SetType(get_member_id(id, 0x100), "int");
	SetType(get_member_id(id, 0x104), "int");
	SetType(get_member_id(id, 0x108), "int");
	SetType(get_member_id(id, 0x10C), "int");
	SetType(get_member_id(id, 0x110), "int");
	SetType(get_member_id(id, 0x114), "int");
	SetType(get_member_id(id, 0x118), "int");
	SetType(get_member_id(id, 0x11C), "int");
	SetType(get_member_id(id, 0x120), "int");
	SetType(get_member_id(id, 0x124), "int");
	SetType(get_member_id(id, 0x128), "int");
	SetType(get_member_id(id, 0x12C), "int");
	SetType(get_member_id(id, 0x130), "int");
	SetType(get_member_id(id, 0x134), "int");
	SetType(get_member_id(id, 0x138), "C_SDK::Classes::INetChannelInfo *(__stdcall *)()");
	SetType(get_member_id(id, 0x13C), "int");
	SetType(get_member_id(id, 0x140), "int");
	id = get_struc_id("OneTap::Classes::HookManager::Data");
	SetType(get_member_id(id, 0x0), "__int16");
	SetType(get_member_id(id, 0x2), "__int16");
	SetType(get_member_id(id, 0x4), "void *");
	SetType(get_member_id(id, 0x8), "void *");
	SetType(get_member_id(id, 0xC), "void *");
	id = get_struc_id("C_SDK::Engine::Surface::PanRenderableInfo");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x4), "void *");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "unsigned __int16");
	SetType(get_member_id(id, 0x12), "unsigned __int16");
	SetType(get_member_id(id, 0x14), "__int16");
	SetType(get_member_id(id, 0x16), "__int16");
	SetType(get_member_id(id, 0x18), "__int16");
	SetType(get_member_id(id, 0x1C), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x28), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x34), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x40), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x4C), "int");
	id = get_struc_id("C_SDK::Classes::DataMap::DataMapT");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "const char *");
	SetType(get_member_id(id, 0xC), "C_SDK::Classes::DataMap::DataMapT *");
	SetType(get_member_id(id, 0x10), "bool");
	SetType(get_member_id(id, 0x11), "bool");
	SetType(get_member_id(id, 0x14), "int");
	id = get_struc_id("C_SDK::Classes::CAnimationLayer::Client");
	SetType(get_member_id(id, 0x0), "char[20]");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "float");
	SetType(get_member_id(id, 0x20), "float");
	SetType(get_member_id(id, 0x24), "float");
	SetType(get_member_id(id, 0x28), "float");
	SetType(get_member_id(id, 0x2C), "float");
	SetType(get_member_id(id, 0x30), "void *");
	SetType(get_member_id(id, 0x34), "char[4]");
	id = get_struc_id("OneTap::SharedData::ClientHooks");
	SetType(get_member_id(id, 0x0), "int (__stdcall *)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0x4), "int (__thiscall *)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int (__fastcall *)(_DWORD, _DWORD)");
	SetType(get_member_id(id, 0x10), "int (__fastcall *)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0x14), "int (__stdcall *)(_DWORD)");
	SetType(get_member_id(id, 0x18), "int (__stdcall *)(_DWORD)");
	SetType(get_member_id(id, 0x1C), "int (__stdcall *)(_DWORD)");
	SetType(get_member_id(id, 0x20), "int (__fastcall *)(_DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0x24), "int (__thiscall *)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0x28), "int (__fastcall *)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0x2C), "int");
	SetType(get_member_id(id, 0x30), "int (*)(void)");
	SetType(get_member_id(id, 0x34), "int (__fastcall *)(_DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0x38), "int (*)(void)");
	SetType(get_member_id(id, 0x3C), "int (*)(void)");
	SetType(get_member_id(id, 0x40), "int (__fastcall *)(_DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0x44), "int (__cdecl *)(_DWORD)");
	SetType(get_member_id(id, 0x48), "int");
	SetType(get_member_id(id, 0x4C), "int (__fastcall *)(_DWORD, _DWORD)");
	SetType(get_member_id(id, 0x50), "int (__stdcall *)(_DWORD, _DWORD)");
	SetType(get_member_id(id, 0x54), "int (*)(void)");
	SetType(get_member_id(id, 0x58), "int (*)(void)");
	SetType(get_member_id(id, 0x5C), "int (__fastcall *)(_DWORD, _DWORD)");
	SetType(get_member_id(id, 0x60), "int (*)(void)");
	SetType(get_member_id(id, 0x64), "int (__fastcall *)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0x68), "int (__stdcall *)(_DWORD)");
	SetType(get_member_id(id, 0x6C), "int (__fastcall *)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0x70), "int (__fastcall *)(_DWORD, _DWORD)");
	SetType(get_member_id(id, 0x74), "int (*)(void)");
	SetType(get_member_id(id, 0x78), "int (__stdcall *)(_DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0x7C), "int (__fastcall *)(_DWORD, _DWORD)");
	SetType(get_member_id(id, 0x80), "int (__stdcall *)(_DWORD)");
	SetType(get_member_id(id, 0x84), "int (__fastcall *)(_DWORD, _DWORD)");
	SetType(get_member_id(id, 0x88), "int (__stdcall *)()");
	SetType(get_member_id(id, 0x8C), "int (__fastcall *)(DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0x90), "int (__stdcall *)(_DWORD, _DWORD)");
	SetType(get_member_id(id, 0x94), "int (*)(void)");
	SetType(get_member_id(id, 0x98), "int (__stdcall *)(_DWORD, _DWORD)");
	SetType(get_member_id(id, 0x9C), "int (__fastcall *)(_DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0xA0), "int (__fastcall *)(_DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0xA4), "int (__fastcall *)(_DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0xA8), "int (__fastcall *)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0xAC), "int (__fastcall *)(_DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0xB0), "int (__stdcall *)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0xB4), "int");
	SetType(get_member_id(id, 0xB8), "int (__stdcall *)(_DWORD, _DWORD)");
	SetType(get_member_id(id, 0xBC), "int (__fastcall *)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0xC0), "int (__cdecl *)()");
	SetType(get_member_id(id, 0xC4), "int (__fastcall *)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0xC8), "int (__fastcall *)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0xCC), "int (*)(void)");
	SetType(get_member_id(id, 0xD0), "int (__stdcall *)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0xD4), "int (__fastcall *)(_DWORD, _DWORD)");
	SetType(get_member_id(id, 0xD8), "int (__cdecl *)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0xDC), "int (__cdecl *)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0xE0), "int (__stdcall *)(_DWORD, _DWORD, _DWORD, _DWORD)");
	SetType(get_member_id(id, 0xE4), "int (__fastcall *)(C_SDK::Classes::IBaseClientDll *ecx, int edx, int slot, int bufferWrite, int from, int to, bool isNewCmd)");
	id = get_struc_id("C_SDK::Classes::ICVar");
	SetType(get_member_id(id, 0x0), "C_SDK::Classes::ICVar *");
	SetType(get_member_id(id, 0x4), "void (__stdcall *)()");
	SetType(get_member_id(id, 0x8), "void *(__stdcall *)(const char *interface)");
	SetType(get_member_id(id, 0xC), "int (__stdcall *)()");
	SetType(get_member_id(id, 0x10), "void (__stdcall *)()");
	SetType(get_member_id(id, 0x14), "void *(__stdcall *)()");
	SetType(get_member_id(id, 0x18), "int (__stdcall *)()");
	SetType(get_member_id(id, 0x1C), "void (__stdcall *)(void *factory, const char *interface)");
	SetType(get_member_id(id, 0x20), "void (__stdcall *)()");
	SetType(get_member_id(id, 0x24), "int (__stdcall *)()");
	SetType(get_member_id(id, 0x28), "void (__stdcall *)(void *base)");
	SetType(get_member_id(id, 0x2C), "void (__stdcall *)(void *base)");
	SetType(get_member_id(id, 0x30), "void (__stdcall *)(int id)");
	SetType(get_member_id(id, 0x34), "char *(__stdcall *)(const char *variable)");
	SetType(get_member_id(id, 0x38), "void *(__stdcall *)(const char *name)");
	SetType(get_member_id(id, 0x3C), "void *(__stdcall *)(const char *name)");
	SetType(get_member_id(id, 0x40), "C_SDK::Classes::Engine::ConVar *(__stdcall *)(const char *var)");
	SetType(get_member_id(id, 0x44), "C_SDK::Classes::Engine::ConVar *(__stdcall *)(const char *var)");
	SetType(get_member_id(id, 0x48), "void *(__stdcall *)(const char *name)");
	SetType(get_member_id(id, 0x4C), "void *(__stdcall *)(const char *name)");
	SetType(get_member_id(id, 0x50), "void (__stdcall *)(void *callback)");
	SetType(get_member_id(id, 0x54), "void (__stdcall *)(void *callback)");
	SetType(get_member_id(id, 0x58), "void (__stdcall *)(C_SDK::Classes::Engine::ConVar *var, const char *name, float id)");
	SetType(get_member_id(id, 0x5C), "void (__stdcall *)(void *display)");
	SetType(get_member_id(id, 0x60), "void (__stdcall *)(void *display)");
	SetType(get_member_id(id, 0x64), "void (*)(void *color, const char *format, ...)");
	SetType(get_member_id(id, 0x68), "void (*)(const char *format, ...)");
	SetType(get_member_id(id, 0x6C), "void (*)(const char *format, ...)");
	SetType(get_member_id(id, 0x70), "void (__stdcall *)(int flag)");
	id = get_struc_id("C_SDK::Classes::CWeapon::CCSWeaponInfo");
	SetType(get_member_id(id, 0x0), "_BYTE[1984]");
	SetType(get_member_id(id, 0x7C0), "void *");
	SetType(get_member_id(id, 0x7C4), "_BYTE[60]");
	SetType(get_member_id(id, 0x800), "float");
	SetType(get_member_id(id, 0x804), "_BYTE[16]");
	SetType(get_member_id(id, 0x814), "float");
	SetType(get_member_id(id, 0x818), "int");
	SetType(get_member_id(id, 0x81C), "float");
	SetType(get_member_id(id, 0x820), "float");
	SetType(get_member_id(id, 0x824), "int");
	id = get_struc_id("OneTap::Classes::Animation::Record");
	SetType(get_member_id(id, 0x0), "_BYTE");
	SetType(get_member_id(id, 0x1), "_BYTE[71]");
	SetType(get_member_id(id, 0x48), "float");
	SetType(get_member_id(id, 0x4C), "_BYTE[16]");
	SetType(get_member_id(id, 0x5C), "OneTap::Classes::Animation::LagData *");
	SetType(get_member_id(id, 0x60), "_BYTE[12]");
	SetType(get_member_id(id, 0x6C), "_DWORD");
	SetType(get_member_id(id, 0x70), "bool");
	SetType(get_member_id(id, 0x71), "bool");
	SetType(get_member_id(id, 0x72), "bool");
	SetType(get_member_id(id, 0x73), "bool");
	SetType(get_member_id(id, 0x74), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x80), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x8C), "_DWORD");
	SetType(get_member_id(id, 0x90), "_DWORD");
	SetType(get_member_id(id, 0x94), "_BYTE[732]");
	SetType(get_member_id(id, 0x370), "_BYTE");
	SetType(get_member_id(id, 0x371), "char");
	SetType(get_member_id(id, 0x372), "char");
	SetType(get_member_id(id, 0x373), "char");
	SetType(get_member_id(id, 0x374), "int[2]");
	SetType(get_member_id(id, 0x37C), "_BYTE[20]");
	SetType(get_member_id(id, 0x390), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x39C), "_BYTE[12296]");
	SetType(get_member_id(id, 0x33A4), "_BYTE");
	SetType(get_member_id(id, 0x33A5), "_BYTE[6147]");
	SetType(get_member_id(id, 0x4BA8), "_BYTE");
	SetType(get_member_id(id, 0x4BA9), "_BYTE[6147]");
	SetType(get_member_id(id, 0x63AC), "_BYTE");
	SetType(get_member_id(id, 0x63AD), "_BYTE[6147]");
	SetType(get_member_id(id, 0x7BB0), "_BYTE");
	SetType(get_member_id(id, 0x7BB1), "_BYTE[6147]");
	SetType(get_member_id(id, 0x93B4), "_BYTE");
	SetType(get_member_id(id, 0x93B5), "_BYTE[6147]");
	SetType(get_member_id(id, 0xABB8), "_BYTE");
	SetType(get_member_id(id, 0xABB9), "_BYTE[6175]");
	SetType(get_member_id(id, 0xC3D8), "float");
	SetType(get_member_id(id, 0xC3DC), "float");
	SetType(get_member_id(id, 0xC3E0), "float");
	SetType(get_member_id(id, 0xC3E4), "float");
	SetType(get_member_id(id, 0xC3E8), "float");
	SetType(get_member_id(id, 0xC3EC), "_DWORD");
	id = get_struc_id("OneTap::Classes::Animation::LagData");
	SetType(get_member_id(id, 0x0), "bool");
	SetType(get_member_id(id, 0x1), "_BYTE[3]");
	SetType(get_member_id(id, 0x4), "_DWORD");
	SetType(get_member_id(id, 0x8), "_DWORD");
	SetType(get_member_id(id, 0xC), "char");
	SetType(get_member_id(id, 0xD), "char");
	SetType(get_member_id(id, 0xE), "char");
	SetType(get_member_id(id, 0xF), "char");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x14), "_BYTE");
	SetType(get_member_id(id, 0x18), "float");
	SetType(get_member_id(id, 0x1C), "_BYTE[4]");
	SetType(get_member_id(id, 0x20), "_DWORD");
	SetType(get_member_id(id, 0x24), "_BYTE");
	SetType(get_member_id(id, 0x25), "_BYTE[15]");
	SetType(get_member_id(id, 0x34), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x40), "_BYTE[8]");
	SetType(get_member_id(id, 0x48), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x54), "_BYTE[12]");
	SetType(get_member_id(id, 0x60), "C_SDK::Classes::CAnimationLayer::Client[13]");
	SetType(get_member_id(id, 0x338), "float");
	SetType(get_member_id(id, 0x33C), "float");
	SetType(get_member_id(id, 0x340), "int");
	SetType(get_member_id(id, 0x344), "int");
	SetType(get_member_id(id, 0x348), "C_SDK::Classes::CAnimationLayer::Client[3][13]");
	SetType(get_member_id(id, 0xBD0), "_BYTE[144]");
	SetType(get_member_id(id, 0xC60), "char[100]");
	SetType(get_member_id(id, 0xCC4), "char");
	id = get_struc_id("OneTap::Classes::Animation::LegacyLagData");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "C_SDK::Classes::Math::Vector::Rectangular");
	SetType(get_member_id(id, 0x14), "char[12]");
	SetType(get_member_id(id, 0x20), "bool");
	id = get_struc_id("_EXCEPTION_POINTERS");
	SetType(get_member_id(id, 0x0), "PEXCEPTION_RECORD");
	SetType(get_member_id(id, 0x4), "PCONTEXT");
	id = get_struc_id("type_info");
	id = get_struc_id("_PMD");
	id = get_struc_id("_RTTIClassHierarchyDescriptor");
	id = get_struc_id("_RTTIBaseClassDescriptor");
	id = get_struc_id("_RTTICompleteObjectLocator");
	id = get_struc_id("OneTap::Classes::AnimationSystem::Data");
	SetType(get_member_id(id, 0x0), "_DWORD");
	SetType(get_member_id(id, 0x4), "_BYTE[4]");
	SetType(get_member_id(id, 0x8), "_DWORD");
	SetType(get_member_id(id, 0xC), "C_SDK::Classes::Math::Vector::Aligned");
	SetType(get_member_id(id, 0x1C), "_BYTE[18]");
	SetType(get_member_id(id, 0x30), "int");
	SetType(get_member_id(id, 0x34), "int");
	SetType(get_member_id(id, 0x38), "int");
	SetType(get_member_id(id, 0x3C), "_BYTE[18]");
	SetType(get_member_id(id, 0x50), "_DWORD");
	SetType(get_member_id(id, 0x54), "_DWORD");
	SetType(get_member_id(id, 0x58), "_DWORD");
	id = get_struc_id("C_SDK::Classes::Math::Vector::Flat");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	id = get_struc_id("C_SDK::Classes::CGlobalVarsBase::MiniState");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "float");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x14), "float");
	SetType(get_member_id(id, 0x18), "_DWORD");
	id = get_struc_id("IMAGE_DOS_HEADER");
	SetType(get_member_id(id, 0x0), "WORD");
	SetType(get_member_id(id, 0x2), "WORD");
	SetType(get_member_id(id, 0x4), "WORD");
	SetType(get_member_id(id, 0x6), "WORD");
	SetType(get_member_id(id, 0x8), "WORD");
	SetType(get_member_id(id, 0xA), "WORD");
	SetType(get_member_id(id, 0xC), "WORD");
	SetType(get_member_id(id, 0xE), "WORD");
	SetType(get_member_id(id, 0x10), "WORD");
	SetType(get_member_id(id, 0x12), "WORD");
	SetType(get_member_id(id, 0x14), "WORD");
	SetType(get_member_id(id, 0x16), "WORD");
	SetType(get_member_id(id, 0x18), "WORD");
	SetType(get_member_id(id, 0x1A), "WORD");
	SetType(get_member_id(id, 0x1C), "WORD[4]");
	SetType(get_member_id(id, 0x24), "WORD");
	SetType(get_member_id(id, 0x26), "WORD");
	SetType(get_member_id(id, 0x28), "WORD[10]");
	SetType(get_member_id(id, 0x3C), "LONG");
	id = get_struc_id("_IMAGE_DOS_HEADER");
	SetType(get_member_id(id, 0x0), "WORD");
	SetType(get_member_id(id, 0x2), "WORD");
	SetType(get_member_id(id, 0x4), "WORD");
	SetType(get_member_id(id, 0x6), "WORD");
	SetType(get_member_id(id, 0x8), "WORD");
	SetType(get_member_id(id, 0xA), "WORD");
	SetType(get_member_id(id, 0xC), "WORD");
	SetType(get_member_id(id, 0xE), "WORD");
	SetType(get_member_id(id, 0x10), "WORD");
	SetType(get_member_id(id, 0x12), "WORD");
	SetType(get_member_id(id, 0x14), "WORD");
	SetType(get_member_id(id, 0x16), "WORD");
	SetType(get_member_id(id, 0x18), "WORD");
	SetType(get_member_id(id, 0x1A), "WORD");
	SetType(get_member_id(id, 0x1C), "WORD[4]");
	SetType(get_member_id(id, 0x24), "WORD");
	SetType(get_member_id(id, 0x26), "WORD");
	SetType(get_member_id(id, 0x28), "WORD[10]");
	SetType(get_member_id(id, 0x3C), "LONG");
	id = get_struc_id("C_SDK::Classes::CSGameRulesProxy");
	SetType(get_member_id(id, 0x0), "char[32]");
	SetType(get_member_id(id, 0x20), "bool");
	SetType(get_member_id(id, 0x21), "bool");
	SetType(get_member_id(id, 0x24), "float");
	SetType(get_member_id(id, 0x28), "float");
	SetType(get_member_id(id, 0x2C), "bool");
	SetType(get_member_id(id, 0x2D), "bool");
	SetType(get_member_id(id, 0x30), "float");
	SetType(get_member_id(id, 0x34), "float");
	SetType(get_member_id(id, 0x38), "int");
	SetType(get_member_id(id, 0x3C), "int");
	SetType(get_member_id(id, 0x40), "bool");
	SetType(get_member_id(id, 0x44), "int");
	SetType(get_member_id(id, 0x48), "float");
	SetType(get_member_id(id, 0x4C), "float");
	SetType(get_member_id(id, 0x50), "float");
	SetType(get_member_id(id, 0x54), "bool");
	SetType(get_member_id(id, 0x58), "float");
	SetType(get_member_id(id, 0x5C), "float");
	SetType(get_member_id(id, 0x60), "C_SDK::Classes::CSGameRulesProxy::GamePhase");
	SetType(get_member_id(id, 0x64), "int");
	SetType(get_member_id(id, 0x68), "int");
	SetType(get_member_id(id, 0x6C), "int");
	SetType(get_member_id(id, 0x70), "bool");
	SetType(get_member_id(id, 0x71), "bool");
	SetType(get_member_id(id, 0x72), "bool");
	SetType(get_member_id(id, 0x73), "bool");
	SetType(get_member_id(id, 0x74), "bool");
	SetType(get_member_id(id, 0x75), "bool");
	SetType(get_member_id(id, 0x76), "bool");
	SetType(get_member_id(id, 0x77), "bool");
	SetType(get_member_id(id, 0x78), "int");
	SetType(get_member_id(id, 0x7C), "int");
	SetType(get_member_id(id, 0x80), "int");
	SetType(get_member_id(id, 0x84), "int");
	id = get_struc_id("OneTap::Classes::Server");
	SetType(get_member_id(id, 0x0), "C_SDK::Server::Types");
	SetType(get_member_id(id, 0x4), "char[16]");
	SetType(get_member_id(id, 0x14), "char[8]");
	SetType(get_member_id(id, 0x1C), "bool");
	SetType(get_member_id(id, 0x1D), "bool");
	SetType(get_member_id(id, 0x1E), "bool");
	SetType(get_member_id(id, 0x20), "C_SDK::Server::AnimstateMode");
	id = get_struc_id("C_SDK::Classes::EngineTrace::FireBulletData");
	SetType(get_member_id(id, 0x0), "C_SDK::Classes::Math::Vector::Aligned");
	SetType(get_member_id(id, 0x10), "C_SDK::Classes::EngineTrace::Trace");
	SetType(get_member_id(id, 0x64), "C_SDK::Classes::Math::Vector::Aligned");
	SetType(get_member_id(id, 0x74), "C_SDK::Classes::EngineTrace::CTraceFilter *");
	SetType(get_member_id(id, 0x78), "float");
	SetType(get_member_id(id, 0x7C), "float");
	SetType(get_member_id(id, 0x80), "float");
	SetType(get_member_id(id, 0x84), "int");
	id = get_struc_id("C_SDK::Classes::EngineTrace::CTraceFilter");
	SetType(get_member_id(id, 0x0), "C_SDK::Types::TraceType (__stdcall *)()");
	SetType(get_member_id(id, 0x4), "void *");
	SetType(get_member_id(id, 0x8), "char *");
	id = get_struc_id("OneTap::Classes::ClanTag");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int (__fastcall *)(const char *tag)");
	SetType(get_member_id(id, 0x8), "bool");
	SetType(get_member_id(id, 0x9), "char[16]");
	SetType(get_member_id(id, 0x19), "char[16]");
	SetType(get_member_id(id, 0x2C), "int");
	SetType(get_member_id(id, 0x30), "char[12]");
	SetType(get_member_id(id, 0x3C), "char[16]");
	SetType(get_member_id(id, 0x4C), "char[40]");
	SetType(get_member_id(id, 0x74), "bool");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"FuncInfo",0);
	id = add_struc(-1,"C_SDK::Classes::GuiManager::DrawColor",0);
	id = add_struc(-1,"UnwindMapEntry",0);
	id = add_struc(-1,"TryBlockMapEntry",0);
	id = add_struc(-1,"HandlerType",0);
	id = add_struc(-1,"__m128",1);
	id = add_struc(-1,"__m128i",1);
	id = add_struc(-1,"__m128d",0);
	id = add_struc(-1,"C_SDK::Classes::CGlobalVarsBase",0);
	id = add_struc(-1,"C_SDK::Classes::CAnimState",0);
	id = add_struc(-1,"C_SDK::Structs::GlowObjectDefinition",0);
	id = add_struc(-1,"C_SDK::Classes::CPrediction",0);
	id = add_struc(-1,"C_SDK::Classes::CUserCmd",0);
	id = add_struc(-1,"C_SDK::Classes::CAnimationLayer::Server",0);
	id = add_struc(-1,"C_SDK::Classes::CVerifiedUserCmd",0);
	id = add_struc(-1,"C_SDK::Classes::CInput",0);
	id = add_struc(-1,"CPPEH_RECORD",0);
	id = add_struc(-1,"_EH3_EXCEPTION_REGISTRATION",0);
	id = add_struc(-1,"C_SDK::Classes::Math::Vector::Rectangular",0);
	id = add_struc(-1,"C_SDK::Classes::CBasePlayerAnimState",0);
	id = add_struc(-1,"C_SDK::Structs::EventInfo",0);
	id = add_struc(-1,"_IMAGE_SECTION_HEADER",0);
	id = add_struc(-1,"_IMAGE_SECTION_HEADER::$39DFBA39B6D121CDFC1ACE66C995549C",1);
	id = add_struc(-1,"OneTap::Classes::CommandManager",0);
	id = add_struc(-1,"OneTap::Classes::CBufferedCommand",0);
	id = add_struc(-1,"OneTap::Classes::Player::LagData",0);
	id = add_struc(-1,"OneTap::Classes::Player::AnimLagData",0);
	id = add_struc(-1,"C_SDK::Classes::ClockDriftMgr",0);
	id = add_struc(-1,"C_SDK::Classes::ClientState",0);
	id = add_struc(-1,"OneTap::SharedData::ClientSnapshot",0);
	id = add_struc(-1,"C_SDK::Classes::EngineTrace::Ray",0);
	id = add_struc(-1,"C_SDK::Classes::Math::Vector::Aligned",0);
	id = add_struc(-1,"C_SDK::Classes::EngineClient",0);
	id = add_struc(-1,"C_SDK::Classes::EngineTrace",0);
	id = add_struc(-1,"C_SDK::Classes::EngineTrace::Trace",0);
	id = add_struc(-1,"C_SDK::Classes::Engine::CPlane",0);
	id = add_struc(-1,"C_SDK::Classes::Engine::CSurface",0);
	id = add_struc(-1,"C_SDK::Classes::EngineTrace::VirtTable",0);
	id = add_struc(-1,"C_SDK::Classes::Engine::Surface::Data",0);
	id = add_struc(-1,"C_SDK::Classes::Engine::Surface::PhysicsParams",0);
	id = add_struc(-1,"C_SDK::Classes::Engine::Surface::AudioParams",0);
	id = add_struc(-1,"C_SDK::Classes::Engine::Surface::SoundNames",0);
	id = add_struc(-1,"C_SDK::Classes::Engine::Surface::GameProps",0);
	id = add_struc(-1,"C_SDK::Classes::EngineClient::VirtTable",0);
	id = add_struc(-1,"OneTap::Classes::HookManager::Data",0);
	id = add_struc(-1,"C_SDK::Engine::Surface::PanRenderableInfo",0);
	id = add_struc(-1,"C_SDK::Classes::DataMap::DataMapT",0);
	id = add_struc(-1,"C_SDK::Classes::CAnimationLayer::Client",0);
	id = add_struc(-1,"OneTap::SharedData::ClientHooks",0);
	id = add_struc(-1,"C_SDK::Classes::ICVar",0);
	id = add_struc(-1,"C_SDK::Classes::CWeapon::CCSWeaponInfo",0);
	id = add_struc(-1,"OneTap::Classes::Animation::Record",0);
	id = add_struc(-1,"OneTap::Classes::Animation::LagData",0);
	id = add_struc(-1,"OneTap::Classes::Animation::LegacyLagData",0);
	id = add_struc(-1,"_EXCEPTION_POINTERS",0);
	id = add_struc(-1,"type_info",0);
	set_struc_cmt(id,"RTTI std::type_info class (#classinformer)",1);
	id = add_struc(-1,"_PMD",0);
	set_struc_cmt(id,"RTTI Base class descriptor displacement container (#classinformer)",1);
	id = add_struc(-1,"_RTTIClassHierarchyDescriptor",0);
	set_struc_cmt(id,"RTTI Class Hierarchy Descriptor (#classinformer)",1);
	id = add_struc(-1,"_RTTIBaseClassDescriptor",0);
	set_struc_cmt(id,"RTTI Base Class Descriptor (#classinformer)",1);
	id = add_struc(-1,"_RTTICompleteObjectLocator",0);
	set_struc_cmt(id,"RTTI Complete Object Locator (#classinformer)",1);
	id = add_struc(-1,"OneTap::Classes::AnimationSystem::Data",0);
	id = add_struc(-1,"C_SDK::Classes::Math::Vector::Flat",0);
	id = add_struc(-1,"C_SDK::Classes::CGlobalVarsBase::MiniState",0);
	id = add_struc(-1,"IMAGE_DOS_HEADER",0);
	id = add_struc(-1,"_IMAGE_DOS_HEADER",0);
	id = add_struc(-1,"C_SDK::Classes::CSGameRulesProxy",0);
	id = add_struc(-1,"OneTap::Classes::Server",0);
	id = add_struc(-1,"C_SDK::Classes::EngineTrace::FireBulletData",0);
	id = add_struc(-1,"C_SDK::Classes::EngineTrace::CTraceFilter",0);
	id = add_struc(-1,"OneTap::Classes::ClanTag",0);
	
	id = get_struc_id("FuncInfo");
	mid = add_struc_member(id,"magicNumber",	0,	0x21100400,	-1,	4);
	mid = add_struc_member(id,"maxState",	0X4,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"pUnwindMap",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"nTryBlocks",	0XC,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"pTryBlockMap",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"nIPMapEntries",	0X14,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"pIPtoStateMap",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pESTypeList",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EHFlags",	0X20,	0x21100400,	-1,	4);
	
	id = get_struc_id("C_SDK::Classes::GuiManager::DrawColor");
	mid = add_struc_member(id,"red",	0,	0x300400,	-1,	1);
	mid = add_struc_member(id,"green",	0X1,	0x300400,	-1,	1);
	mid = add_struc_member(id,"blue",	0X2,	0x300400,	-1,	1);
	mid = add_struc_member(id,"alpha",	0X3,	0x20300400,	-1,	4);
	
	id = get_struc_id("UnwindMapEntry");
	mid = add_struc_member(id,"toState",	0,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"action",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("TryBlockMapEntry");
	mid = add_struc_member(id,"tryLow",	0,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"tryHigh",	0X4,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"catchHigh",	0X8,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"nCatches",	0XC,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"pHandlerArray",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("HandlerType");
	mid = add_struc_member(id,"adjectives",	0,	0x21100400,	-1,	4);
	mid = add_struc_member(id,"pType",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dispCatchObj",	0X8,	0x22200400,	-1,	4);
	mid = add_struc_member(id,"addressOfHandler",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("__m128");
	mid = add_struc_member(id,"clamp",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m128_u64",	0,	0x30000400,	-1,	16);
	mid = add_struc_member(id,"m128_i8",	0,	0x000400,	-1,	16);
	mid = add_struc_member(id,"m128_i16",	0,	0x10000400,	-1,	16);
	mid = add_struc_member(id,"m128_i32",	0,	0x20000400,	-1,	16);
	mid = add_struc_member(id,"m128_i64",	0,	0x30000400,	-1,	16);
	mid = add_struc_member(id,"m128_u8",	0,	0x000400,	-1,	16);
	mid = add_struc_member(id,"m128_u16",	0,	0x10000400,	-1,	16);
	mid = add_struc_member(id,"m128_u32",	0,	0x20000400,	-1,	16);
	set_struc_align(id,4);
	
	id = get_struc_id("__m128i");
	mid = add_struc_member(id,"m128i_i8",	0,	0x000400,	-1,	16);
	mid = add_struc_member(id,"m128i_i16",	0,	0x10000400,	-1,	16);
	mid = add_struc_member(id,"float",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m128i_i64",	0,	0x30000400,	-1,	16);
	mid = add_struc_member(id,"m128i_u8",	0,	0x000400,	-1,	16);
	mid = add_struc_member(id,"m128i_u16",	0,	0x10000400,	-1,	16);
	mid = add_struc_member(id,"m128i_u32",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m128i_u64",	0,	0x30000400,	-1,	16);
	set_struc_align(id,4);
	
	id = get_struc_id("__m128d");
	mid = add_struc_member(id,"m128d_f64",	0,	0x90000400,	-1,	16);
	set_struc_align(id,4);
	
	id = get_struc_id("C_SDK::Classes::CGlobalVarsBase");
	mid = add_struc_member(id,"m_realTime",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_frameCount",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_absoluteFrameTime",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_absoluteFrameStartTimeSTDdev",	0XC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_currentTime",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_frameTime",	0X14,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_maxClients",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_tickCount",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_intervalPerTick",	0X20,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_interpolationAmount",	0X24,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_simTicksThisFrame",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_networkProtocol",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_saveData",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_isClient",	0X34,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_isRemoteClient",	0X35,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_timestampNetworkingBase",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_timestampRandomizeWindow",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_mapName",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_mapGroupName",	0X44,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_mapVersion",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_startSpot",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_loadType",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_isMapLoadFailed",	0X54,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_isDeathmatch",	0X55,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_isCoop",	0X56,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_isTeamPlay",	0X57,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_maxEntities",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_serverCount",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_edicts",	0X60,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::Math::Vector::Rectangular");
	mid = add_struc_member(id,"m_x",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_y",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_z",	0X8,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::CAnimState");
	mid = add_struc_member(id,"pad_0x0000",	0,	0x000400,	-1,	24);
	mid = add_struc_member(id,"anim_update_timer",	0X18,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x001C",	0X1C,	0x000400,	-1,	12);
	mid = add_struc_member(id,"started_moving_time",	0X28,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"last_move_time",	0X2C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0030",	0X30,	0x000400,	-1,	16);
	mid = add_struc_member(id,"last_lby_time",	0X40,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0044",	0X44,	0x000400,	-1,	8);
	mid = add_struc_member(id,"run_amount",	0X4C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0050",	0X50,	0x000400,	-1,	16);
	mid = add_struc_member(id,"entity",	0X60,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"active_weapon",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"last_active_weapon",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"last_client_side_animation_update_time",	0X6C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"last_client_side_animation_update_framecount",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_eyeTimer",	0X74,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"eye_angles_y",	0X78,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"eye_angles_x",	0X7C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_goalFeetYaw",	0X80,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_currentFeetYaw",	0X84,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"torso_yaw",	0X88,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"last_move_yaw",	0X8C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"lean_amount",	0X90,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0094",	0X94,	0x000400,	-1,	4);
	mid = add_struc_member(id,"feet_cycle",	0X98,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"feet_yaw_rate",	0X9C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x00A0",	0XA0,	0x000400,	-1,	4);
	mid = add_struc_member(id,"duck_amount",	0XA4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"landing_duck_amount",	0XA8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x00AC",	0XAC,	0x000400,	-1,	4);
	mid = add_struc_member(id,"current_origin",	0XB0,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"last_origin",	0XBC,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"velocity_x",	0XC8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"velocity_y",	0XCC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x00D0",	0XD0,	0x000400,	-1,	16);
	mid = add_struc_member(id,"move_direction_1",	0XE0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"move_direction_2",	0XE4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x00E8",	0XE8,	0x000400,	-1,	4);
	mid = add_struc_member(id,"m_velocity",	0XEC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"jump_fall_velocity",	0XF0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"clamped_velocity",	0XF4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"feet_speed_forwards_or_sideways",	0XF8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"feet_speed_unknown_forwards_or_sideways",	0XFC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"last_time_started_moving",	0X100,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"last_time_stopped_moving",	0X104,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_onGround",	0X108,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_hitInGroundAnimation",	0X109,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pad_0x0110",	0X10A,	0x000400,	-1,	4);
	mid = add_struc_member(id,"last_origin_z",	0X110,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"head_from_ground_distance_standing",	0X114,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"stop_to_full_running_fraction",	0X118,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0120",	0X11C,	0x000400,	-1,	20);
	mid = add_struc_member(id,"is_not_moving",	0X130,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0138",	0X134,	0x000400,	-1,	32);
	mid = add_struc_member(id,"last_anim_update_time",	0X154,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"moving_direction_x",	0X158,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"moving_direction_y",	0X15C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"moving_direction_z",	0X160,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0168",	0X164,	0x000400,	-1,	68);
	mid = add_struc_member(id,"started_moving",	0X1A8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x01B0",	0X1AC,	0x000400,	-1,	8);
	mid = add_struc_member(id,"lean_yaw",	0X1B4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x01BC",	0X1B8,	0x000400,	-1,	8);
	mid = add_struc_member(id,"poses_speed",	0X1C0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x01C8",	0X1C4,	0x000400,	-1,	8);
	mid = add_struc_member(id,"ladder_speed",	0X1CC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x01D4",	0X1D0,	0x000400,	-1,	8);
	mid = add_struc_member(id,"ladder_yaw",	0X1D8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x01E0",	0X1DC,	0x000400,	-1,	8);
	mid = add_struc_member(id,"some_pose",	0X1E4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x01EC",	0X1E8,	0x000400,	-1,	20);
	mid = add_struc_member(id,"body_yaw",	0X1FC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0204",	0X200,	0x000400,	-1,	8);
	mid = add_struc_member(id,"body_pitch",	0X208,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0210",	0X20C,	0x000400,	-1,	8);
	mid = add_struc_member(id,"death_yaw",	0X214,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x021C",	0X218,	0x000400,	-1,	8);
	mid = add_struc_member(id,"stand",	0X220,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0228",	0X224,	0x000400,	-1,	8);
	mid = add_struc_member(id,"jump_fall",	0X22C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0234",	0X230,	0x000400,	-1,	8);
	mid = add_struc_member(id,"aim_blend_stand_idle",	0X238,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0240",	0X23C,	0x000400,	-1,	8);
	mid = add_struc_member(id,"aim_blend_crouch_idle",	0X244,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x024C",	0X248,	0x000400,	-1,	8);
	mid = add_struc_member(id,"strafe_yaw",	0X250,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0258",	0X254,	0x000400,	-1,	8);
	mid = add_struc_member(id,"aim_blend_stand_walk",	0X25C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0264",	0X260,	0x000400,	-1,	8);
	mid = add_struc_member(id,"aim_blend_stand_run",	0X268,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0270",	0X26C,	0x000400,	-1,	8);
	mid = add_struc_member(id,"aim_blend_crouch_walk",	0X274,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x027C",	0X278,	0x000400,	-1,	8);
	mid = add_struc_member(id,"move_blend_walk",	0X280,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0288",	0X284,	0x000400,	-1,	8);
	mid = add_struc_member(id,"move_blend_run",	0X28C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0294",	0X290,	0x000400,	-1,	8);
	mid = add_struc_member(id,"move_blend_crouch",	0X298,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x02A0",	0X29C,	0x000400,	-1,	4);
	mid = add_struc_member(id,"speed",	0X2A0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"moving_in_any_direction",	0X2A4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"acceleration",	0X2A8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x02B0",	0X2AC,	0x000400,	-1,	116);
	mid = add_struc_member(id,"crouch_height",	0X320,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"is_full_crouched",	0X324,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x032C",	0X328,	0x000400,	-1,	4);
	mid = add_struc_member(id,"velocity_subtract_x",	0X32C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"velocity_subtract_y",	0X330,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"velocity_subtract_z",	0X334,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"standing_head_height",	0X338,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x0340",	0X33C,	0x000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Structs::GlowObjectDefinition");
	mid = add_struc_member(id,"m_entity",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_glowVector",	0X4,	0x000400,	-1,	12);
	mid = add_struc_member(id,"m_alpha",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_0014",	0X14,	0x000400,	-1,	4);
	mid = add_struc_member(id,"m_unk",	0X18,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad_001C",	0X1C,	0x000400,	-1,	4);
	mid = add_struc_member(id,"m_unk2",	0X20,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_renderWhenOccluded",	0X24,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_renderWhenUnoccluded",	0X25,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_fullBloomRender",	0X26,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pad_0027",	0X27,	0x000400,	-1,	5);
	mid = add_struc_member(id,"m_glowStyle",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_splitScreenSlot",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_nextFreeSlot",	0X34,	0x20000400,	-1,	4);
	
	id = get_struc_id("C_SDK::Classes::CPrediction");
	mid = add_struc_member(id,"pad_0x0000",	0,	0x000400,	-1,	8);
	mid = add_struc_member(id,"m_inPrediction",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pad_0x0009",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_enginePaused",	0XA,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pad_0x000B",	0XB,	0x000400,	-1,	12);
	mid = add_struc_member(id,"m_firstTime",	0X17,	0x000400,	-1,	1);
	
	id = get_struc_id("C_SDK::Classes::CUserCmd");
	mid = add_struc_member(id,"m_vTable",	0,	0x000400,	-1,	4);
	mid = add_struc_member(id,"m_commandNumber",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_tickCount",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_viewAngles",	0XC,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"m_aimDirection",	0X18,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"m_forwardMove",	0X24,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_sideMove",	0X28,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_upMove",	0X2C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_buttons",	0X30,	0x28800400,	get_enum("C_SDK::Classes::CUserCmd::Buttons"),	4);
	mid = add_struc_member(id,"m_impulse",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_weaponSelect",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_weaponSubType",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_randomSeed",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_mouseX",	0X44,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_mouseY",	0X46,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_hasBeenPredicted",	0X48,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_headAngles",	0X4C,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"m_headOffset",	0X58,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::CAnimationLayer::Server");
	mid = add_struc_member(id,"m_flags",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_sequenceFinished",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_looping",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_sequence",	0X6,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_cycle",	0XA,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_playbackRate",	0XE,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_prevCycle",	0X12,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_weight",	0X16,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_weightDeltaRate",	0X1A,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_blendIn",	0X1E,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_blendOut",	0X22,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_killRate",	0X26,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_killDelay",	0X2A,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_layerAnimTime",	0X2E,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_layerFadeOutTime",	0X32,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_dispatchedStudioHdr",	0X36,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_dispatchedSrc",	0X3A,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_dispatchedDst",	0X3E,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_activity",	0X42,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"activity",	0X46,	0x28800400,	get_enum("C_SDK::Classes::Animation::Activity"),	4);
	mid = add_struc_member(id,"m_order",	0X4A,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_lastEventCheck",	0X4E,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_lastAccess",	0X52,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_ownerEntity",	0X56,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::CVerifiedUserCmd");
	mid = add_struc_member(id,"m_crc32",	0X4C,	0x20000400,	-1,	4);
	
	id = get_struc_id("C_SDK::Classes::CInput");
	mid = add_struc_member(id,"m_chillOut",	0,	0x000400,	-1,	4);
	mid = add_struc_member(id,"m_trackIRAvailable",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_mouseInitialized",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_joystickAdvancedInit",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pad_0x08",	0X7,	0x000400,	-1,	45);
	mid = add_struc_member(id,"m_keys",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad_0x38",	0X38,	0x000400,	-1,	92);
	mid = add_struc_member(id,"pad_0x41",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0x42",	0X98,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_cameraInterceptingMouse",	0X9C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_cameraInThirdPerson",	0X9D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_cameraMovingWithMouse",	0X9E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_unk",	0X9F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_cameraOffset",	0XA0,	0x000400,	-1,	12);
	mid = add_struc_member(id,"m_cameraDistanceMove",	0XAC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_unk2",	0XAD,	0x000400,	-1,	3);
	mid = add_struc_member(id,"m_cameraOldX",	0XB0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_cameraOldY",	0XB4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_cameraX",	0XB8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_cameraY",	0XBC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_cameraIsOrthographic",	0XC0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_unk3",	0XC1,	0x000400,	-1,	3);
	mid = add_struc_member(id,"m_angPreviousViewAngles",	0XC4,	0x000400,	-1,	12);
	mid = add_struc_member(id,"m_angPreviousViewAnglesTilt",	0XD0,	0x000400,	-1,	12);
	mid = add_struc_member(id,"m_lastForwardMove",	0XDC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_clearInputState",	0XE0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0xE4",	0XE4,	0x000400,	-1,	8);
	mid = add_struc_member(id,"m_commands",	0XEC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_verifiedCommands",	0XF0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("_EH3_EXCEPTION_REGISTRATION");
	mid = add_struc_member(id,"Next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ExceptionHandler",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ScopeTable",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TryLevel",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("CPPEH_RECORD");
	mid = add_struc_member(id,"old_esp",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"exc_ptr",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"registration",	0X8,	0x60000400,	get_struc_id("_EH3_EXCEPTION_REGISTRATION"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::Math::Vector::Flat");
	mid = add_struc_member(id,"m_x",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_y",	0X4,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::CBasePlayerAnimState");
	mid = add_struc_member(id,"u0",	0,	0x000400,	-1,	24);
	mid = add_struc_member(id,"anim_update_timer",	0X18,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u1",	0X1C,	0x000400,	-1,	12);
	mid = add_struc_member(id,"started_moving_time",	0X28,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"last_move_time",	0X2C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u2",	0X30,	0x000400,	-1,	16);
	mid = add_struc_member(id,"last_lby_time",	0X40,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u3",	0X44,	0x000400,	-1,	8);
	mid = add_struc_member(id,"run_amount",	0X4C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u4",	0X50,	0x000400,	-1,	16);
	mid = add_struc_member(id,"entity",	0X60,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"active_weapon",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"last_active_weapon",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"last_clientside_anim_update_time",	0X6C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"last_clientside_anim_update_framecount",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_eyeTimer",	0X74,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"eye_angles_y",	0X78,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"eye_angles_x",	0X7C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_goalFeetYaw",	0X80,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_currentFeetYaw",	0X84,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"torso_yaw",	0X88,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"last_move_yaw",	0X8C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"lean_amount",	0X90,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u5",	0X94,	0x000400,	-1,	4);
	mid = add_struc_member(id,"feet_cycle",	0X98,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"feet_yaw_rate",	0X9C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u6",	0XA0,	0x000400,	-1,	4);
	mid = add_struc_member(id,"duck_amount",	0XA4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"landing_duck_amount",	0XA8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u7",	0XAC,	0x000400,	-1,	4);
	mid = add_struc_member(id,"current_origin",	0XB0,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Flat"),	8);
	mid = add_struc_member(id,"last_origin",	0XB8,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Flat"),	8);
	mid = add_struc_member(id,"velocity_x",	0XC0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"velocity_y",	0XC4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u8",	0XC8,	0x000400,	-1,	16);
	mid = add_struc_member(id,"move_direction_1",	0XD8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"move_direction_2",	0XDC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u9",	0XE0,	0x000400,	-1,	4);
	mid = add_struc_member(id,"velocity",	0XE4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"jump_fall_velocity",	0XE8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_velocity",	0XEC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"feet_speed_forwards_or_sideways",	0XF0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"feet_speed_unknown_forwards_or_sideways",	0XF4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"last_time_started_moving",	0XF8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"last_time_stopped_moving",	0XFC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"on_ground",	0X100,	0x000400,	-1,	1);
	mid = add_struc_member(id,"hit_in_ground_anim",	0X101,	0x000400,	-1,	1);
	mid = add_struc_member(id,"u10",	0X102,	0x000400,	-1,	4);
	mid = add_struc_member(id,"m_lastOriginZ",	0X108,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"head_from_ground_distance_standing",	0X10C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"stop_to_full_running_fraction",	0X110,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u11",	0X114,	0x000400,	-1,	20);
	mid = add_struc_member(id,"m_isNotMoving",	0X128,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"u12",	0X12C,	0x000400,	-1,	32);
	mid = add_struc_member(id,"last_anim_update_time",	0X14C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"moving_direction_x",	0X150,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"moving_direction_y",	0X154,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"moving_direction_z",	0X158,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u13",	0X15C,	0x000400,	-1,	68);
	mid = add_struc_member(id,"started_moving",	0X1A0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"u14",	0X1A4,	0x000400,	-1,	8);
	mid = add_struc_member(id,"lean_yaw",	0X1AC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u15",	0X1B0,	0x000400,	-1,	8);
	mid = add_struc_member(id,"poses_speed",	0X1B8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u16",	0X1BC,	0x000400,	-1,	8);
	mid = add_struc_member(id,"ladder_speed",	0X1C4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u17",	0X1C8,	0x000400,	-1,	8);
	mid = add_struc_member(id,"ladder_yaw",	0X1D0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u18",	0X1D4,	0x000400,	-1,	8);
	mid = add_struc_member(id,"some_pose",	0X1DC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u19",	0X1E0,	0x000400,	-1,	20);
	mid = add_struc_member(id,"body_yaw",	0X1F4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u20",	0X1F8,	0x000400,	-1,	8);
	mid = add_struc_member(id,"body_pitch",	0X200,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u21",	0X204,	0x000400,	-1,	8);
	mid = add_struc_member(id,"death_yaw",	0X20C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u22",	0X210,	0x000400,	-1,	8);
	mid = add_struc_member(id,"stand",	0X218,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u23",	0X21C,	0x000400,	-1,	8);
	mid = add_struc_member(id,"jump_fall",	0X224,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u24",	0X228,	0x000400,	-1,	8);
	mid = add_struc_member(id,"aim_blend_stand_idle",	0X230,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u25",	0X234,	0x000400,	-1,	8);
	mid = add_struc_member(id,"aim_blend_crouch_idle",	0X23C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u26",	0X240,	0x000400,	-1,	8);
	mid = add_struc_member(id,"strafe_yaw",	0X248,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u27",	0X24C,	0x000400,	-1,	8);
	mid = add_struc_member(id,"aim_blend_stand_walk",	0X254,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u28",	0X258,	0x000400,	-1,	8);
	mid = add_struc_member(id,"aim_blend_stand_run",	0X260,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u29",	0X264,	0x000400,	-1,	8);
	mid = add_struc_member(id,"aim_blend_crouch_walk",	0X26C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u30",	0X270,	0x000400,	-1,	8);
	mid = add_struc_member(id,"move_blend_walk",	0X278,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u31",	0X27C,	0x000400,	-1,	8);
	mid = add_struc_member(id,"move_blend_run",	0X284,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u32",	0X288,	0x000400,	-1,	8);
	mid = add_struc_member(id,"move_blend_crouch",	0X290,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u33",	0X294,	0x000400,	-1,	4);
	mid = add_struc_member(id,"speed",	0X298,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"moving_in_any_direction",	0X29C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"acceleration",	0X2A0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u34",	0X2A4,	0x000400,	-1,	116);
	mid = add_struc_member(id,"crouch_height",	0X318,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"is_full_crouched",	0X31C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"u35",	0X320,	0x000400,	-1,	4);
	mid = add_struc_member(id,"velocity_subtract_x",	0X324,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"velocity_subtract_y",	0X328,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"velocity_subtract_z",	0X32C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"standing_head_height",	0X330,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Structs::EventInfo");
	mid = add_struc_member(id,"m_userId",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_attackerId",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_health",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_armor",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_weapon",	0XA,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_damageHealth",	0XE,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_damageArmor",	0X12,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_hitGroup",	0X13,	0x000400,	-1,	1);
	
	id = get_struc_id("_IMAGE_SECTION_HEADER::$39DFBA39B6D121CDFC1ACE66C995549C");
	mid = add_struc_member(id,"PhysicalAddress",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"VirtualSize",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_IMAGE_SECTION_HEADER");
	mid = add_struc_member(id,"Name",	0,	0x000400,	-1,	8);
	mid = add_struc_member(id,"Misc",	0X8,	0x60000400,	get_struc_id("_IMAGE_SECTION_HEADER::$39DFBA39B6D121CDFC1ACE66C995549C"),	4);
	mid = add_struc_member(id,"VirtualAddress",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SizeOfRawData",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PointerToRawData",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PointerToRelocations",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PointerToLinenumbers",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NumberOfRelocations",	0X20,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"NumberOfLinenumbers",	0X22,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Characteristics",	0X24,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("OneTap::Classes::CBufferedCommand");
	mid = add_struc_member(id,"m_userCmd",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_verifiedCommand",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_wishMove",	0X8,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"m_viewAngles",	0X14,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	
	id = get_struc_id("OneTap::Classes::CommandManager");
	mid = add_struc_member(id,"m_sequence",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_prevSequence",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_unknown",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_commands",	0XC,	0x60000400,	get_struc_id("OneTap::Classes::CBufferedCommand"),	4800);
	mid = add_struc_member(id,"m_init",	0X12CC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_choked",	0X12CD,	0x000400,	-1,	15);
	
	id = get_struc_id("OneTap::Classes::Player::LagData");
	mid = add_struc_member(id,"gap0",	0,	0x000400,	-1,	36);
	mid = add_struc_member(id,"m_flags",	0X24,	0x000400,	-1,	1);
	mid = add_struc_member(id,"gap25",	0X25,	0x000400,	-1,	19);
	mid = add_struc_member(id,"m_resolve.m_eyeAngles.y",	0X38,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"gap3C",	0X3C,	0x000400,	-1,	12);
	mid = add_struc_member(id,"m_vecVelocity.y",	0X48,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_vecVelocity.z",	0X4C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"gap50",	0X50,	0x000400,	-1,	216);
	mid = add_struc_member(id,"m_serverLayers_adjust_weight",	0X128,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"gap12C",	0X12C,	0x000400,	-1,	8);
	mid = add_struc_member(id,"m_serverLayers_adjust_cycle",	0X134,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"gap138",	0X138,	0x000400,	-1,	152);
	mid = add_struc_member(id,"m_serverLayers_movement",	0X1D0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"gap1D4",	0X1D4,	0x000400,	-1,	4);
	mid = add_struc_member(id,"m_serverLayers_movement.playRate",	0X1D8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"gap1DC",	0X1DC,	0x000400,	-1,	324);
	mid = add_struc_member(id,"m_serverLayers_lean",	0X320,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"gap324",	0X324,	0x000400,	-1,	29);
	mid = add_struc_member(id,"m_way",	0X341,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_side",	0X344,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"gap348",	0X348,	0x000400,	-1,	376);
	mid = add_struc_member(id,"m_resolverLayers_none_movement.playRate",	0X4C0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"gap4C4",	0X4C4,	0x000400,	-1,	724);
	mid = add_struc_member(id,"m_resolverLayers_right_movement.playRate",	0X798,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"gap79C",	0X79C,	0x000400,	-1,	724);
	mid = add_struc_member(id,"m_resolverLayers_left_movement.playRate",	0XA70,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("OneTap::Classes::Player::AnimLagData");
	mid = add_struc_member(id,"m_leftDormancy",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"lag",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"gapC",	0XC,	0x000400,	-1,	4);
	mid = add_struc_member(id,"yaw",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"byte14",	0X14,	0x000400,	-1,	1);
	mid = add_struc_member(id,"gap15",	0X15,	0x000400,	-1,	3);
	mid = add_struc_member(id,"float18",	0X18,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"gap1C",	0X1C,	0x000400,	-1,	4);
	mid = add_struc_member(id,"m_duckAmount",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_flags",	0X24,	0x000400,	-1,	1);
	mid = add_struc_member(id,"gap25",	0X25,	0x000400,	-1,	15);
	mid = add_struc_member(id,"m_eyeAngles.x",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_eyeAngles.y",	0X38,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"gap3C",	0X3C,	0x000400,	-1,	12);
	mid = add_struc_member(id,"dword48",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dword4C",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dword50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"gap54",	0X54,	0x000400,	-1,	12);
	mid = add_struc_member(id,"m_data",	0X60,	0x000400,	-1,	1);
	
	id = get_struc_id("C_SDK::Classes::ClockDriftMgr");
	mid = add_struc_member(id,"m_clockOffsets",	0,	0x80000400,	-1,	64);
	mid = add_struc_member(id,"m_curClockOffset",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_serverTick",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_clientTick",	0X48,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::ClientState");
	mid = add_struc_member(id,"pad_0000",	0,	0x000400,	-1,	156);
	mid = add_struc_member(id,"m_netChannel",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_challengeNr",	0XA0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_00A4",	0XA4,	0x000400,	-1,	100);
	mid = add_struc_member(id,"m_signonState",	0X108,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_010C",	0X10C,	0x000400,	-1,	8);
	mid = add_struc_member(id,"m_nextCmdTime",	0X114,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_serverCount",	0X118,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_currentSequence",	0X11C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0120",	0X120,	0x000400,	-1,	8);
	mid = add_struc_member(id,"m_clockDriftMgr",	0X128,	0x60000400,	get_struc_id("C_SDK::Classes::ClockDriftMgr"),	76);
	mid = add_struc_member(id,"m_deltaTick",	0X174,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_isPaused",	0X178,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pad_017D",	0X179,	0x000400,	-1,	3);
	mid = add_struc_member(id,"m_viewEntity",	0X17C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_playerSlot",	0X180,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_levelName",	0X184,	0x000400,	-1,	260);
	mid = add_struc_member(id,"m_levelNameShort",	0X288,	0x000400,	-1,	40);
	mid = add_struc_member(id,"m_groupName",	0X2B0,	0x000400,	-1,	40);
	mid = add_struc_member(id,"pad_02DC",	0X2D8,	0x000400,	-1,	56);
	mid = add_struc_member(id,"m_maxClients",	0X310,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0314",	0X314,	0x000400,	-1,	18940);
	mid = add_struc_member(id,"m_viewAngles",	0X4D10,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"m_unk",	0X4D1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_unk2",	0X4D20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_lastOutGoingCommand",	0X4D24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_chokedCommands",	0X4D28,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("OneTap::SharedData::ClientSnapshot");
	mid = add_struc_member(id,"HlClient",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0001",	0X4,	0x000400,	-1,	12);
	mid = add_struc_member(id,"UnkData2",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0002",	0X14,	0x000400,	-1,	12);
	mid = add_struc_member(id,"LocalPlayer",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad_0003",	0X24,	0x000400,	-1,	12);
	mid = add_struc_member(id,"ICVar",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad_0004",	0X34,	0x000400,	-1,	12);
	mid = add_struc_member(id,"EngineClient",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad0012",	0X44,	0x000400,	-1,	12);
	mid = add_struc_member(id,"EngineTrace",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad_0006",	0X54,	0x000400,	-1,	12);
	mid = add_struc_member(id,"GlobalVars",	0X60,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad_0007",	0X64,	0x000400,	-1,	12);
	mid = add_struc_member(id,"UnkData5",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0008",	0X74,	0x000400,	-1,	12);
	mid = add_struc_member(id,"ISurface",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0009",	0X84,	0x000400,	-1,	12);
	mid = add_struc_member(id,"UnkData6",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0010",	0X94,	0x000400,	-1,	12);
	mid = add_struc_member(id,"UnkData7",	0XA0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0011",	0XA4,	0x000400,	-1,	12);
	mid = add_struc_member(id,"UnkData8",	0XB0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0012",	0XB4,	0x000400,	-1,	12);
	mid = add_struc_member(id,"Prediction",	0XC0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad_0013",	0XC4,	0x000400,	-1,	12);
	mid = add_struc_member(id,"UnkData9",	0XD0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0014",	0XD4,	0x000400,	-1,	12);
	mid = add_struc_member(id,"IDirect3DDevice9",	0XE0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0015",	0XE4,	0x000400,	-1,	12);
	mid = add_struc_member(id,"UnkData11",	0XF0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_00016",	0XF4,	0x000400,	-1,	12);
	mid = add_struc_member(id,"PhysicsSurfaceProps",	0X100,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad_0017",	0X104,	0x000400,	-1,	12);
	mid = add_struc_member(id,"ClientState",	0X110,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad_0018",	0X114,	0x000400,	-1,	12);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::Math::Vector::Aligned");
	mid = add_struc_member(id,"m_x",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_y",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_z",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_w",	0XC,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::EngineTrace::Ray");
	mid = add_struc_member(id,"m_start",	0,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Aligned"),	16);
	mid = add_struc_member(id,"m_delta",	0X10,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Aligned"),	16);
	mid = add_struc_member(id,"m_startOffset",	0X20,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Aligned"),	16);
	mid = add_struc_member(id,"m_extents",	0X30,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Aligned"),	16);
	mid = add_struc_member(id,"m_worldAxisTransform",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_isRay",	0X44,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_isSwept",	0X45,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::EngineClient");
	mid = add_struc_member(id,"m_vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::EngineTrace");
	mid = add_struc_member(id,"m_vtable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::EngineTrace::VirtTable");
	mid = add_struc_member(id,"GetPointContents",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad01",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad02",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ClipRayToEntity",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad04",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TraceRay",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::Engine::Surface::PhysicsParams");
	mid = add_struc_member(id,"m_friction",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_elasticity",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_density",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_thickness",	0XC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_dampening",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad00",	0X14,	0x000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::Engine::Surface::AudioParams");
	mid = add_struc_member(id,"pad00",	0,	0x000400,	-1,	4);
	mid = add_struc_member(id,"m_reflectivity",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_hardnessFactor",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_roughnessFactor",	0XC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_roughThreshold",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_hardThreshold",	0X14,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_hardVelocityThreshold",	0X18,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::Engine::Surface::SoundNames");
	mid = add_struc_member(id,"m_stepLeft",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_stepRight",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_impactSoft",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_impactHard",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_scrapeSmooth",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_scrapeRough",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_bulletImpact",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_rolling",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_breakSound",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_strainSound",	0X12,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("C_SDK::Classes::Engine::Surface::GameProps");
	mid = add_struc_member(id,"pad00",	0,	0x000400,	-1,	4);
	mid = add_struc_member(id,"m_maxSpeedFactor",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_jumpFactor",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad01",	0XC,	0x000400,	-1,	4);
	mid = add_struc_member(id,"m_penetrationModifier",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_damageModifier",	0X14,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_material",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"pad02",	0X1A,	0x000400,	-1,	3);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::Engine::Surface::Data");
	mid = add_struc_member(id,"m_physics",	0,	0x60000400,	get_struc_id("C_SDK::Classes::Engine::Surface::PhysicsParams"),	24);
	mid = add_struc_member(id,"m_audio",	0X18,	0x60000400,	get_struc_id("C_SDK::Classes::Engine::Surface::AudioParams"),	28);
	mid = add_struc_member(id,"m_sound",	0X34,	0x60000400,	get_struc_id("C_SDK::Classes::Engine::Surface::SoundNames"),	20);
	mid = add_struc_member(id,"m_game",	0X48,	0x60000400,	get_struc_id("C_SDK::Classes::Engine::Surface::GameProps"),	32);
	mid = add_struc_member(id,"pad00",	0X68,	0x000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::EngineClient::VirtTable");
	mid = add_struc_member(id,"pad00",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad01",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad02",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad03",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad04",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GetScreenSize",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad06",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GetClientCmd",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetPlayerInfo",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetPlayerForUserID",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad10",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad11",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GetLocalPlayer",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad13",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad14",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad15",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad16",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad17",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GetViewAngles",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetViewAngles",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetMaxClients",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad21",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad22",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad23",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad24",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad25",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"IsInGame",	0X68,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad27",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad28",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad29",	0X74,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad30",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad31",	0X7C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad32",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad33",	0X84,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad34",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad35",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad36",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"WorldToScreenMatrix",	0X94,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad38",	0X98,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad39",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad40",	0XA0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad41",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad42",	0XA8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad43",	0XAC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad44",	0XB0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad45",	0XB4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad46",	0XB8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad47",	0XBC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad48",	0XC0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad49",	0XC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad50",	0XC8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad51",	0XCC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad52",	0XD0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad53",	0XD4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad54",	0XD8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad55",	0XDC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad56",	0XE0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad57",	0XE4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad58",	0XE8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad59",	0XEC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad60",	0XF0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad61",	0XF4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad62",	0XF8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad63",	0XFC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad64",	0X100,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad65",	0X104,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad66",	0X108,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad67",	0X10C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad68",	0X110,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad69",	0X114,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad70",	0X118,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad71",	0X11C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad72",	0X120,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad73",	0X124,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad74",	0X128,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad75",	0X12C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad76",	0X130,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad77",	0X134,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GetNetChannelInfo",	0X138,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad79",	0X13C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad80",	0X140,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("OneTap::Classes::HookManager::Data");
	mid = add_struc_member(id,"m_isHooked",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_unkData",	0X2,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X2,	" Pretty sure it's just garbage by decompiler.",	0);
	mid = add_struc_member(id,"m_functionToHook",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_hookProxy",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_newFunctionAddress",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Engine::Surface::PanRenderableInfo");
	mid = add_struc_member(id,"m_renderable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_alphaProperty",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_enumCount",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_renderFrame",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_firstShadow",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_leafList",	0X12,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_area",	0X14,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_flags",	0X16,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_flags2",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_bloatedAbsMins",	0X1C,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"m_bloatedAbsMaxs",	0X28,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"m_absMins",	0X34,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"m_absMaxs",	0X40,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"pad",	0X4C,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::DataMap::DataMapT");
	mid = add_struc_member(id,"m_dataDescriptor",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_dataFiels",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_dataClassName",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_baseMap",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_chainsValidated",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_packedOffsetsComputed",	0X11,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_packetSize",	0X14,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("OneTap::SharedData::ClientHooks");
	mid = add_struc_member(id,"Undefined_43F46A20",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A24",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Undefined_43F46A2C",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A30",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A34",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A38",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A3C",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A40",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"DrawModelExecute",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A48",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad1",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Undefined_43F46A50",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FrameStageNotify",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A58",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A5C",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetLocalViewAngles",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetViewmodelFov",	0X44,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad2",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RunCommandPredict",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A70",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A74",	0X54,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A78",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A7C",	0X5C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A80",	0X60,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ListLeavesInBox",	0X64,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A88",	0X68,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A8C",	0X6C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A90",	0X70,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A94",	0X74,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A98",	0X78,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46A9C",	0X7C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46AA0",	0X80,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"LockCursor",	0X84,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46AA8",	0X88,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46AAC",	0X8C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_4F46AB0",	0X90,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"OnScreenSizeChanged",	0X94,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46AB8",	0X98,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46ABC",	0X9C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"OverrideView",	0XA0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46AC4",	0XA4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46AC8",	0XA8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46ACC",	0XAC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"BeginScene",	0XB0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad3",	0XB4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Undefined_43F46AD8",	0XB8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"RunCommand",	0XBC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EndScene",	0XC0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46AE4",	0XC4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"BoneSetup",	0XC8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46AEC",	0XCC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46AF0",	0XD0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46AF4",	0XD4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46AF8",	0XD8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Undefined_43F46AFC",	0XDC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"WndProc",	0XE0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"WriteUserCmdDeltaToBuffer",	0XE4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::ICVar");
	mid = add_struc_member(id,"Interfaces",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Disconnect",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"QueryInterface",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Init",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Shutdown",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetDependencies",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetTier",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Reconnect",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"UnkFunc",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"AllocateDLLIdentifier",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"RegisterConCommand",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"UnregisterConCommand",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"UnregisterConCommands",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetCommandLineValue",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FindCommandBase",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FindCommandBase2",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FindVar",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FindVar2",	0X44,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FindCommand",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FindCommand2",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"InstallGlobalChangeCallback",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"RemoveGlobalChangeCallback",	0X54,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CallGlobalChangeCallbacks",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"InstallConsoleDisplayFunc",	0X5C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"RemoveConsoleDisplayFunc",	0X60,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ConsoleColorPrintf",	0X64,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ConsolePrintf",	0X68,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ConsoleDPrintf",	0X6C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"RevertFlaggedConVars",	0X70,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::CWeapon::CCSWeaponInfo");
	mid = add_struc_member(id,"pad00",	0,	0x000400,	-1,	1984);
	mid = add_struc_member(id,"m_iconActive",	0X7C0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad774",	0X7C4,	0x000400,	-1,	60);
	mid = add_struc_member(id,"m_armorRatio",	0X800,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"pad02",	0X804,	0x000400,	-1,	16);
	mid = add_struc_member(id,"m_penetration",	0X814,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_Damage",	0X818,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_range",	0X81C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_rangeModifier",	0X820,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_bulletsPerShot",	0X824,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("OneTap::Classes::Animation::Record");
	mid = add_struc_member(id,"byte0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"gap1",	0X1,	0x000400,	-1,	71);
	mid = add_struc_member(id,"m_additionalBits",	0X48,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"gap4C",	0X4C,	0x000400,	-1,	16);
	mid = add_struc_member(id,"rotationData",	0X5C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"gap60",	0X60,	0x000400,	-1,	12);
	mid = add_struc_member(id,"dword6C",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_isUpdatingAnimations",	0X70,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_isChangedEyePos",	0X71,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_72",	0X72,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_73",	0X73,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_eyePos",	0X74,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"m_backupEyePos",	0X80,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"m_legacyData",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_oldPoseParameters",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"gap94",	0X94,	0x000400,	-1,	732);
	mid = add_struc_member(id,"isEnemy",	0X370,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_371",	0X371,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_372",	0X372,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_373",	0X373,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_absYaw",	0X374,	0x20000400,	-1,	8);
	mid = add_struc_member(id,"gap37C",	0X37C,	0x000400,	-1,	20);
	mid = add_struc_member(id,"m_origin",	0X390,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"gap39C",	0X39C,	0x000400,	-1,	12296);
	mid = add_struc_member(id,"byte33A4",	0X33A4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"gap33A5",	0X33A5,	0x000400,	-1,	6147);
	mid = add_struc_member(id,"byte4BA8",	0X4BA8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"gap4BA9",	0X4BA9,	0x000400,	-1,	6147);
	mid = add_struc_member(id,"byte63AC",	0X63AC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"gap63AD",	0X63AD,	0x000400,	-1,	6147);
	mid = add_struc_member(id,"byte7BB0",	0X7BB0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"gap7BB1",	0X7BB1,	0x000400,	-1,	6147);
	mid = add_struc_member(id,"byteAD10",	0X93B4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"gap93B5",	0X93B5,	0x000400,	-1,	6147);
	mid = add_struc_member(id,"m_isScoped",	0XABB8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"gapABB9",	0XABB9,	0x000400,	-1,	6175);
	mid = add_struc_member(id,"floatC3D8",	0XC3D8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"dwordC3DC",	0XC3DC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"floatC3E0",	0XC3E0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_C3E4",	0XC3E4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"field_C3E8",	0XC3E8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwordC3EC",	0XC3EC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::CAnimationLayer::Client");
	mid = add_struc_member(id,"pad_0000",	0,	0x000400,	-1,	20);
	mid = add_struc_member(id,"m_order",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_sequence",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_prevCycle",	0X1C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_weight",	0X20,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_weightDeltaRate",	0X24,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_playbackRate",	0X28,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_cycle",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_owner",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pad_0038",	0X34,	0x000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("OneTap::Classes::Animation::LagData");
	mid = add_struc_member(id,"m_dormant",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	3);
	mid = add_struc_member(id,"dword1",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_lag",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_D",	0XD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_E",	0XE,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_F",	0XF,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_simulationTime",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"byte14",	0X14,	0x000400,	-1,	1);
	mid = add_struc_member(id,"float18",	0X18,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"gap1C",	0X1C,	0x000400,	-1,	4);
	mid = add_struc_member(id,"m_duckAmount",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_flags",	0X24,	0x000400,	-1,	1);
	mid = add_struc_member(id,"gap25",	0X25,	0x000400,	-1,	15);
	mid = add_struc_member(id,"m_eyeAngles",	0X34,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"gap40",	0X40,	0x000400,	-1,	8);
	mid = add_struc_member(id,"m_velocity",	0X48,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"gap54",	0X54,	0x000400,	-1,	12);
	mid = add_struc_member(id,"m_serverAnimationLayers",	0X60,	0x60000400,	get_struc_id("C_SDK::Classes::CAnimationLayer::Client"),	728);
	mid = add_struc_member(id,"m_feetYawRate",	0X338,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_feetCycle",	0X33C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_way",	0X340,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_side",	0X344,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_resolveAnimationLayers",	0X348,	0x60000400,	get_struc_id("C_SDK::Classes::CAnimationLayer::Client"),	2184);
	mid = add_struc_member(id,"gapBD0",	0XBD0,	0x000400,	-1,	144);
	mid = add_struc_member(id,"field_60",	0XC60,	0x000400,	-1,	100);
	mid = add_struc_member(id,"char60",	0XCC4,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("OneTap::Classes::Animation::LegacyLagData");
	mid = add_struc_member(id,"m_speed",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_duckAmount",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_desiredEyePos",	0X8,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"pad10",	0X14,	0x000400,	-1,	12);
	mid = add_struc_member(id,"unk2",	0X20,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("_EXCEPTION_POINTERS");
	mid = add_struc_member(id,"ExceptionRecord",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ContextRecord",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("type_info");
	mid = add_struc_member(id,"vfptr",	0,	0x25500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_M_data",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_M_d_name",	0X8,	0x50000400,	0,	0);
	
	id = get_struc_id("_RTTIClassHierarchyDescriptor");
	mid = add_struc_member(id,"signature",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"attributes",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"numBaseClasses",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"baseClassArray",	0XC,	0x25500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("_PMD");
	mid = add_struc_member(id,"mdisp",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pdisp",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"vdisp",	0X8,	0x20000400,	-1,	4);
	
	id = get_struc_id("_RTTIBaseClassDescriptor");
	mid = add_struc_member(id,"typeDescriptor",	0,	0x25500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"numContainedBases",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pmd",	0X8,	0x60000400,	get_struc_id("_PMD"),	12);
	mid = add_struc_member(id,"attributes",	0X14,	0x20000400,	-1,	4);
	
	id = get_struc_id("_RTTICompleteObjectLocator");
	mid = add_struc_member(id,"signature",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"offset",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cdOffset",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"typeDescriptor",	0XC,	0x25500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"classDescriptor",	0X10,	0x25500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("OneTap::Classes::AnimationSystem::Data");
	mid = add_struc_member(id,"m_flags",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"gap4",	0X4,	0x000400,	-1,	4);
	mid = add_struc_member(id,"m_lowerBodyYaw",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_eyeAngles",	0XC,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Aligned"),	16);
	mid = add_struc_member(id,"gap1C",	0X1C,	0x000400,	-1,	18);
	mid = add_struc_member(id,"m_duckAmount",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_pitch::max",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_pitch::min",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"gap20",	0X3C,	0x000400,	-1,	18);
	mid = add_struc_member(id,"dword30",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dword34",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dword38",	0X58,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::CGlobalVarsBase::MiniState");
	mid = add_struc_member(id,"m_realTime",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_currentTime",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_frameTime",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_absoluteFrameTime",	0XC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_interpolationAmount",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_frameCount",	0X14,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_tickCount",	0X18,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("IMAGE_DOS_HEADER");
	mid = add_struc_member(id,"e_magic",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_cblp",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_cp",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_crlc",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_cparhdr",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_minalloc",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_maxalloc",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_ss",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_sp",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_csum",	0X12,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_ip",	0X14,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_cs",	0X16,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_lfarlc",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_ovno",	0X1A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_res",	0X1C,	0x10000400,	-1,	8);
	mid = add_struc_member(id,"e_oemid",	0X24,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_oeminfo",	0X26,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_res2",	0X28,	0x10000400,	-1,	20);
	mid = add_struc_member(id,"e_lfanew",	0X3C,	0x20000400,	-1,	4);
	set_struc_align(id,1);
	
	id = get_struc_id("_IMAGE_DOS_HEADER");
	mid = add_struc_member(id,"e_magic",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_cblp",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_cp",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_crlc",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_cparhdr",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_minalloc",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_maxalloc",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_ss",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_sp",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_csum",	0X12,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_ip",	0X14,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_cs",	0X16,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_lfarlc",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_ovno",	0X1A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_res",	0X1C,	0x10000400,	-1,	8);
	mid = add_struc_member(id,"e_oemid",	0X24,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_oeminfo",	0X26,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"e_res2",	0X28,	0x10000400,	-1,	20);
	mid = add_struc_member(id,"e_lfanew",	0X3C,	0x20000400,	-1,	4);
	set_struc_align(id,1);
	
	id = get_struc_id("C_SDK::Classes::CSGameRulesProxy");
	mid = add_struc_member(id,"pad00",	0,	0x000400,	-1,	32);
	mid = add_struc_member(id,"m_isFreezePeriod",	0X20,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_isWarmupPeriod",	0X21,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_warmUpPeriodEnd",	0X24,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_warmUpPeriodStart",	0X28,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_terroristTimeOutActive",	0X2C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_ctTimeOutActive",	0X2D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_terroristTimeOutRemaining",	0X30,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_ctTimeOutRemaining",	0X34,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_terroristTimeOuts",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_ctTimeOuts",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_matchWaitingForResume",	0X40,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_roundTime",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_matchStartTime",	0X48,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_roundStartTime",	0X4C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_restartRoundTime",	0X50,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_gameRestart",	0X54,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_gameStartTime",	0X58,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_timeUntilNextPhaseStarts",	0X5C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_gamePhase",	0X60,	0x28800400,	get_enum("C_SDK::Classes::CSGameRulesProxy::GamePhase"),	4);
	mid = add_struc_member(id,"m_totalRoundPlayed",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_overTimePlaying",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_hostagesRemaining",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_anyHostageReached",	0X70,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_mapHashBombTarget",	0X71,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_mapHashRescueZone",	0X72,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_mapHashBuyZone",	0X73,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_isQueuedMatchmaking",	0X74,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_isValveDS",	0X75,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_logoMap",	0X76,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_playAllStepSoundsOnServer",	0X77,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_numGunGameProgressiveWeaponsCT",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_numGunGameProgressiveWeaponsT",	0X7C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_spectatorSloutCount",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_ggProgressiveWeaponOrderCT",	0X84,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("OneTap::Classes::Server");
	mid = add_struc_member(id,"Type",	0,	0x28800400,	get_enum("C_SDK::Server::Types"),	4);
	mid = add_struc_member(id,"TypeName",	0X4,	0x000400,	-1,	16);
	mid = add_struc_member(id,"pad",	0X14,	0x000400,	-1,	8);
	mid = add_struc_member(id,"IsServerChanged",	0X1C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"IsTickbaseNotShifted",	0X1D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"IsValveServer",	0X1E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"AnimStateMode",	0X20,	0x28800400,	get_enum("C_SDK::Server::AnimstateMode"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::Engine::CPlane");
	mid = add_struc_member(id,"m_normal",	0,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"m_distance",	0XC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_type",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_signBits",	0X11,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pad",	0X12,	0x000400,	-1,	2);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::Engine::CSurface");
	mid = add_struc_member(id,"m_name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_surfaceProps",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_flags",	0X6,	0x10000400,	-1,	2);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::EngineTrace::Trace");
	mid = add_struc_member(id,"m_start",	0,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"m_endPos",	0XC,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Rectangular"),	12);
	mid = add_struc_member(id,"m_plane",	0X18,	0x60000400,	get_struc_id("C_SDK::Classes::Engine::CPlane"),	20);
	mid = add_struc_member(id,"m_fraction",	0X2C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_contents",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_dispFlags",	0X34,	0x000400,	-1,	2);
	mid = add_struc_member(id,"m_allSolid",	0X36,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_startSolid",	0X37,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_fractionLeftSolid",	0X38,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_surface",	0X3C,	0x60000400,	get_struc_id("C_SDK::Classes::Engine::CSurface"),	8);
	mid = add_struc_member(id,"m_hitGroup",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_physicsBone",	0X48,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_worldSurfaceIndex",	0X4A,	0x000400,	-1,	2);
	mid = add_struc_member(id,"m_entity",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_hitBox",	0X50,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::EngineTrace::FireBulletData");
	mid = add_struc_member(id,"m_src",	0,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Aligned"),	16);
	mid = add_struc_member(id,"m_enterTrace",	0X10,	0x60000400,	get_struc_id("C_SDK::Classes::EngineTrace::Trace"),	84);
	mid = add_struc_member(id,"m_direction",	0X64,	0x60000400,	get_struc_id("C_SDK::Classes::Math::Vector::Aligned"),	16);
	return id;
}

static Structures_1(id) {
        auto mid;

	mid = add_struc_member(id,"m_filter",	0X74,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_traceLength",	0X78,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_traceLengthRemaining",	0X7C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_currentDamage",	0X80,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"penetrateCount",	0X84,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SDK::Classes::EngineTrace::CTraceFilter");
	mid = add_struc_member(id,"GetTraceType",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_skip",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_ignore",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("OneTap::Classes::ClanTag");
	mid = add_struc_member(id,"pad",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SetClanTag",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_isNonDefault",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pad0",	0X9,	0x000400,	-1,	16);
	mid = add_struc_member(id,"m_customTag",	0X19,	0x000400,	-1,	16);
	mid = add_struc_member(id,"m_dynamicSymbolsShiftedCount",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pad1",	0X30,	0x000400,	-1,	12);
	mid = add_struc_member(id,"m_defaultTag",	0X3C,	0x000400,	-1,	16);
	mid = add_struc_member(id,"pad2",	0X4C,	0x000400,	-1,	40);
	mid = add_struc_member(id,"m_isEnabled",	0X74,	0x000400,	-1,	1);
	set_struc_align(id,2);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
	id = Structures_1(id);
	patch_byte	(0X43DD6250,	0X90);
	patch_byte	(0X43DD6251,	0X90);
	patch_byte	(0X43DD6252,	0X90);
	patch_byte	(0X43DD6253,	0X90);
	patch_byte	(0X43DD6254,	0X90);
	patch_byte	(0X43DD6255,	0X90);
	patch_byte	(0X43DDEE04,	0X74);
	patch_byte	(0X43DF300D,	0X90);
	patch_byte	(0X43DF300E,	0X90);
	patch_byte	(0X43DF300F,	0X90);
	patch_byte	(0X43DF3010,	0X90);
	patch_byte	(0X43DF3011,	0XCC);
	patch_byte	(0X43E1B334,	0);
	patch_byte	(0X43E1B335,	0);
	patch_byte	(0X43E1B340,	0);
	patch_byte	(0X43E1B341,	0);
	patch_byte	(0X43E279EC,	0X90);
	patch_byte	(0X43E279ED,	0X90);
	patch_byte	(0X43E279EE,	0X90);
	patch_byte	(0X43E279EF,	0X90);
	patch_byte	(0X43E279F0,	0X90);
	patch_byte	(0X43E279F1,	0X90);
	patch_byte	(0X43E2858E,	0X90);
	patch_byte	(0X43E2858F,	0X90);
	patch_byte	(0X43E28590,	0X90);
	patch_byte	(0X43E28591,	0X90);
	patch_byte	(0X43E28592,	0X90);
	patch_byte	(0X43E28593,	0X90);
	patch_byte	(0X43E28A03,	0X90);
	patch_byte	(0X43E28A04,	0X90);
	patch_byte	(0X43E28A05,	0X90);
	patch_byte	(0X43E28A06,	0X90);
	patch_byte	(0X43E28A07,	0X90);
	patch_byte	(0X43E28A08,	0X90);
	patch_byte	(0X43E28AEA,	0X90);
	patch_byte	(0X43E28AEB,	0X90);
	patch_byte	(0X43E28AEC,	0X90);
	patch_byte	(0X43E28AED,	0X90);
	patch_byte	(0X43E28AEE,	0X90);
	patch_byte	(0X43E28AEF,	0X90);
	patch_byte	(0X43E28AF0,	0X90);
	patch_byte	(0X43ECF1D8,	0X90);
	patch_byte	(0X43ECF1D9,	0X90);
	patch_byte	(0X43ECF1E4,	0X90);
	patch_byte	(0X43ECF1E5,	0X90);
	patch_byte	(0X43ECF1E8,	0X90);
	patch_byte	(0X43ECF1E9,	0X90);
	patch_byte	(0X43ECF1EA,	0X90);
	patch_byte	(0X43ECF1EB,	0X90);
	patch_byte	(0X43ECF1EC,	0X90);
	patch_byte	(0X43ECF1ED,	0X90);
	patch_byte	(0X43ECF204,	0X90);
	patch_byte	(0X43ECF205,	0X90);
	patch_byte	(0X43ECF6F8,	0X90);
	patch_byte	(0X43ECF6F9,	0X90);
	patch_byte	(0X43ECF6FA,	0X90);
	patch_byte	(0X43ECF6FB,	0X90);
	patch_byte	(0X43ECF6FC,	0X90);
	patch_byte	(0X43ECF6FD,	0X90);
	patch_byte	(0X43F09187,	0X90);
	patch_byte	(0X43F09188,	0X90);
	patch_byte	(0X43F09189,	0X90);
	patch_byte	(0X43F0918A,	0X90);
	patch_byte	(0X43F0918B,	0XCC);
	patch_byte	(0X43F0939E,	0X90);
	patch_byte	(0X43F0939F,	0X90);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	update_extra_cmt		(0X43DD0000,	E_PREV + 0,	";");
	update_extra_cmt		(0X43DD0000,	E_PREV + 1,	";");
	update_extra_cmt		(0X43DD0000,	E_PREV + 2,	";");
	update_extra_cmt		(0X43DD0000,	E_PREV + 3,	";");
	update_extra_cmt		(0X43DD0000,	E_PREV + 4,	";");
	update_extra_cmt		(0X43DD0000,	E_PREV + 5,	";");
	update_extra_cmt		(0X43DD0000,	E_PREV + 6,	";                            .          .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 7,	";               .      .          .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 8,	";                      .   _______________    .    .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 9,	";                 .    .  .     .    .    .         .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 10,	";                     .      .  CPUID    .   .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 11,	";                .     .  .     .     .  .     .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 12,	";                 .    .    .  .    .   .   .     .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 13,	";                         .         .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 14,	";                .          PRIOR: PUBLIC   .   .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 15,	";                      .    PROJECT: OIT2  .   .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 16,	";                        .     .       . ");
	update_extra_cmt		(0X43DD0000,	E_PREV + 17,	";                              .    .    .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 18,	";                              .   .    ");
	update_extra_cmt		(0X43DD0000,	E_PREV + 19,	";                         . _____________ .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 20,	";                                   ");
	update_extra_cmt		(0X43DD0000,	E_PREV + 21,	";                                 _");
	update_extra_cmt		(0X43DD0000,	E_PREV + 22,	";  ");
	update_extra_cmt		(0X43DD0000,	E_PREV + 23,	";                                 ^  ");
	update_extra_cmt		(0X43DD0000,	E_PREV + 24,	";                                 ^");
	update_extra_cmt		(0X43DD0000,	E_PREV + 25,	";                                 ^");
	update_extra_cmt		(0X43DD0000,	E_PREV + 26,	";  ");
	update_extra_cmt		(0X43DD0000,	E_PREV + 27,	";        ______________________________________________________");
	update_extra_cmt		(0X43DD0000,	E_PREV + 28,	";  .     |  |             [ C R E D I T S ]                |  |  .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 29,	";   . .  |  |                                              |  | .  .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 30,	";  .  .  +  |        - 0x000cb    / Lead reverse.          |  +   .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 31,	";        O <+        - sneakyevil / Helper.                +> O  .  . ");
	update_extra_cmt		(0X43DD0000,	E_PREV + 32,	";  . .   +           - wzn        / Helper.                   +  .  .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 33,	"; . .    |                                                    | .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 34,	";     .  |____________________________________________________|   .  .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 35,	";       [|] _______________________________________________ [|] .");
	update_extra_cmt		(0X43DD0000,	E_PREV + 36,	";       [x] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ [x]");
	update_extra_cmt		(0X43DD0000,	E_PREV + 37,	";");
	update_extra_cmt		(0X43DD0000,	E_PREV + 38,	";");
	update_extra_cmt		(0X43DD0000,	E_PREV + 39,	";");
	update_extra_cmt		(0X43DD0000,	E_PREV + 40,	";");
	update_extra_cmt		(0X43DD0000,	E_PREV + 41,	";");
	update_extra_cmt		(0X43DD0000,	E_PREV + 42,	";");
	create_byte	(x=0X43DD0000);
	toggle_sign		(x,	0);
	toggle_bnot		(x,	0);
	toggle_sign		(x,	1);
	toggle_bnot		(x,	1);
	set_name	(0X43DD0000,	"Segment::Header");
	create_byte	(0X43DD0004);
	create_word	(0X43DD0018);
	create_dword	(0X43DD003C);
	set_name	(0X43DD003C,	"SegmentGlobal::PE::OffsetToSection");
	set_cmt	(0X43DD1000,	"Size",	0);
	create_insn	(0X43DD1000);
	create_insn	(x=0X43DD1007);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1024);
	op_hex		(x,	1);
	create_insn	(0X43DD1030);
	create_insn	(x=0X43DD1033);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1036);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1052);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD105C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1066);
	op_hex		(x,	1);
	make_array	(0X43DD106D,	0X3);
	create_insn	(0X43DD1070);
	create_insn	(x=0X43DD1073);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1076);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1092);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD10A9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD10B3);
	op_hex		(x,	1);
	make_array	(0X43DD10BA,	0X6);
	create_insn	(0X43DD10C0);
	create_insn	(x=0X43DD10C3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD10C6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD10F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1101);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD110B);
	op_hex		(x,	1);
	make_array	(0X43DD1112,	0XE);
	create_insn	(0X43DD1120);
	create_insn	(x=0X43DD1123);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1126);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1142);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD114C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1156);
	op_hex		(x,	1);
	make_array	(0X43DD115D,	0X3);
	create_insn	(0X43DD1160);
	create_insn	(x=0X43DD1163);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1166);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1182);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1199);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD11A3);
	op_hex		(x,	1);
	make_array	(0X43DD11AA,	0X6);
	create_insn	(0X43DD11B0);
	create_insn	(x=0X43DD11B3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD11B6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD11E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD11F1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD11FB);
	op_hex		(x,	1);
	make_array	(0X43DD1202,	0XE);
	set_cmt	(0X43DD1210,	"Size",	0);
	create_insn	(0X43DD1210);
	create_insn	(x=0X43DD1217);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1234);
	op_hex		(x,	1);
	make_array	(0X43DD1238,	0X8);
	set_cmt	(0X43DD1240,	"a3",	0);
	create_insn	(0X43DD1240);
	set_name	(0X43DD1240,	"C_SDK::Security::Base64::Buffer::Malloc");
	set_cmt	(0X43DD1242,	"a2",	0);
	create_insn	(x=0X43DD1242);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DD1247,	"this",	0);
	create_insn	(x=0X43DD1247);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1251);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD125D,	0X3);
	set_cmt	(0X43DD1260,	"Size",	0);
	create_insn	(0X43DD1260);
	set_cmt	(0X43DD1267,	"Size",	0);
	create_insn	(x=0X43DD1275);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD12B2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD12C3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD12CE);
	op_hex		(x,	1);
	make_array	(0X43DD12D2,	0XE);
	create_insn	(x=0X43DD12E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD12EC,	0X4);
	create_insn	(0X43DD12F0);
	create_insn	(x=0X43DD12F3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD12F6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1312);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD131C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1326);
	op_hex		(x,	1);
	make_array	(0X43DD132D,	0X3);
	create_insn	(0X43DD1330);
	create_insn	(x=0X43DD1333);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1336);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1352);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1369);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1373);
	op_hex		(x,	1);
	make_array	(0X43DD137A,	0X6);
	create_insn	(0X43DD1380);
	create_insn	(x=0X43DD1383);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1386);
	op_hex		(x,	1);
	create_insn	(x=0X43DD13B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD13C1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD13CB);
	op_hex		(x,	1);
	make_array	(0X43DD13D2,	0XE);
	create_insn	(x=0X43DD13E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD13EC,	0X4);
	create_insn	(0X43DD13F0);
	create_insn	(x=0X43DD13F3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD13F6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1412);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD141C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1426);
	op_hex		(x,	1);
	make_array	(0X43DD142D,	0X3);
	create_insn	(0X43DD1430);
	create_insn	(x=0X43DD1433);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1436);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1452);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1469);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1473);
	op_hex		(x,	1);
	make_array	(0X43DD147A,	0X6);
	create_insn	(0X43DD1480);
	create_insn	(x=0X43DD1483);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1486);
	op_hex		(x,	1);
	create_insn	(x=0X43DD14B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD14C1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD14CB);
	op_hex		(x,	1);
	make_array	(0X43DD14D2,	0XE);
	create_insn	(0X43DD14E0);
	create_insn	(x=0X43DD14E3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD14E6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1502);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD150C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1516);
	op_hex		(x,	1);
	make_array	(0X43DD151D,	0X3);
	create_insn	(0X43DD1520);
	create_insn	(x=0X43DD1523);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1526);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1542);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1559);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1563);
	op_hex		(x,	1);
	make_array	(0X43DD156A,	0X6);
	create_insn	(0X43DD1570);
	create_insn	(x=0X43DD1573);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1576);
	op_hex		(x,	1);
	create_insn	(x=0X43DD15A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD15B1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD15BB);
	op_hex		(x,	1);
	make_array	(0X43DD15C2,	0XE);
	create_insn	(0X43DD15D0);
	create_insn	(x=0X43DD15D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD15FB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1626);
	op_hex		(x,	1);
	make_array	(0X43DD162C,	0X4);
	create_insn	(0X43DD1630);
	create_insn	(x=0X43DD1633);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1636);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1652);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD165C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1666);
	op_hex		(x,	1);
	make_array	(0X43DD166D,	0X3);
	create_insn	(0X43DD1670);
	create_insn	(x=0X43DD1673);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1676);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1692);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD16A9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD16B3);
	op_hex		(x,	1);
	make_array	(0X43DD16BA,	0X6);
	create_insn	(0X43DD16C0);
	create_insn	(x=0X43DD16C3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD16C6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD16F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1701);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD170B);
	op_hex		(x,	1);
	make_array	(0X43DD1712,	0XE);
	set_cmt	(0X43DD1720,	"Size",	0);
	create_insn	(0X43DD1720);
	create_insn	(x=0X43DD1722);
	op_dec		(x,	0);
	create_insn	(x=0X43DD172E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD173F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1773);
	op_hex		(x,	1);
	make_array	(0X43DD1777,	0X9);
	create_insn	(x=0X43DD1780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD178C,	0X4);
	create_insn	(0X43DD1790);
	create_insn	(x=0X43DD1793);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1796);
	op_hex		(x,	1);
	create_insn	(x=0X43DD17B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD17BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD17C6);
	op_hex		(x,	1);
	make_array	(0X43DD17CD,	0X3);
	create_insn	(0X43DD17D0);
	create_insn	(x=0X43DD17D3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD17D6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD17F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1809);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1813);
	op_hex		(x,	1);
	make_array	(0X43DD181A,	0X6);
	create_insn	(0X43DD1820);
	create_insn	(x=0X43DD1823);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1826);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1852);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1861);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD186B);
	op_hex		(x,	1);
	make_array	(0X43DD1872,	0XE);
	create_insn	(x=0X43DD1880);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD188C,	0X4);
	create_insn	(x=0X43DD1890);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD189C,	0X4);
	create_insn	(0X43DD18A0);
	make_array	(0X43DD18B9,	0X7);
	create_insn	(0X43DD18C0);
	create_insn	(x=0X43DD18C5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD18CF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD18DA);
	op_hex		(x,	1);
	create_insn	(0X43DD18E0);
	create_insn	(x=0X43DD18E5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD18EF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD18FA);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1900);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43DD1910);
	create_insn	(0X43DD1920);
	create_insn	(x=0X43DD1925);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43DD1940);
	create_insn	(x=0X43DD1943);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1946);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1962);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD196C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1976);
	op_hex		(x,	1);
	make_array	(0X43DD197D,	0X3);
	create_insn	(0X43DD1980);
	create_insn	(x=0X43DD1983);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1986);
	op_hex		(x,	1);
	create_insn	(x=0X43DD19A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD19B9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD19C3);
	op_hex		(x,	1);
	make_array	(0X43DD19CA,	0X6);
	create_insn	(0X43DD19D0);
	create_insn	(x=0X43DD19D3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD19D6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1A02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1A11);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1A1B);
	op_hex		(x,	1);
	make_array	(0X43DD1A22,	0XE);
	create_insn	(0X43DD1A30);
	create_insn	(x=0X43DD1A32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1A4F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1A6B);
	op_hex		(x,	1);
	make_array	(0X43DD1A71,	0XF);
	create_insn	(0X43DD1A80);
	create_insn	(x=0X43DD1A85);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD1A91,	0XF);
	create_insn	(x=0X43DD1AA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD1AAC,	0X4);
	create_insn	(x=0X43DD1AB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD1ABC,	0X4);
	create_insn	(0X43DD1AC0);
	create_insn	(x=0X43DD1AC3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1AC6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1AE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1AEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1AF6);
	op_hex		(x,	1);
	make_array	(0X43DD1AFD,	0X3);
	create_insn	(0X43DD1B00);
	create_insn	(x=0X43DD1B03);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1B06);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1B22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1B39);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1B43);
	op_hex		(x,	1);
	make_array	(0X43DD1B4A,	0X6);
	create_insn	(0X43DD1B50);
	create_insn	(x=0X43DD1B53);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1B56);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1B82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1B91);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1B9B);
	op_hex		(x,	1);
	make_array	(0X43DD1BA2,	0XE);
	create_insn	(0X43DD1BB0);
	create_insn	(x=0X43DD1BB3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1BB6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1BD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1BDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1BE6);
	op_hex		(x,	1);
	make_array	(0X43DD1BED,	0X3);
	create_insn	(0X43DD1BF0);
	create_insn	(x=0X43DD1BF3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1BF6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1C12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1C29);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1C33);
	op_hex		(x,	1);
	make_array	(0X43DD1C3A,	0X6);
	create_insn	(0X43DD1C40);
	create_insn	(x=0X43DD1C43);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1C46);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1C72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1C81);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1C8B);
	op_hex		(x,	1);
	make_array	(0X43DD1C92,	0XE);
	create_insn	(0X43DD1CA0);
	create_insn	(x=0X43DD1CA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1CBF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1CC9);
	op_hex		(x,	1);
	create_insn	(0X43DD1CD0);
	create_insn	(x=0X43DD1CD3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1CD6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1CF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1CFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1D06);
	op_hex		(x,	1);
	make_array	(0X43DD1D0D,	0X3);
	create_insn	(0X43DD1D10);
	create_insn	(x=0X43DD1D13);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1D16);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1D32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1D49);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1D53);
	op_hex		(x,	1);
	make_array	(0X43DD1D5A,	0X6);
	create_insn	(0X43DD1D60);
	create_insn	(x=0X43DD1D63);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1D66);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1D92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1DA1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1DAB);
	op_hex		(x,	1);
	make_array	(0X43DD1DB2,	0XE);
	create_insn	(x=0X43DD1DC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD1DCC,	0X4);
	create_insn	(0X43DD1DD0);
	create_insn	(x=0X43DD1DD3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1DD6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1DF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1DFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1E06);
	op_hex		(x,	1);
	make_array	(0X43DD1E0D,	0X3);
	create_insn	(0X43DD1E10);
	create_insn	(x=0X43DD1E13);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1E16);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1E32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1E49);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1E53);
	op_hex		(x,	1);
	make_array	(0X43DD1E5A,	0X6);
	create_insn	(0X43DD1E60);
	create_insn	(x=0X43DD1E63);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1E66);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1E92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1EA1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1EAB);
	op_hex		(x,	1);
	make_array	(0X43DD1EB2,	0XE);
	create_insn	(0X43DD1EC0);
	create_insn	(x=0X43DD1EC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DD1EE2,	0XE);
	create_insn	(0X43DD1EF0);
	create_insn	(x=0X43DD1EF5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD1F01,	0XF);
	create_insn	(0X43DD1F10);
	create_insn	(x=0X43DD1F12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1F36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DD1F4F,	"num",	0);
	set_cmt	(0X43DD1F54,	"value",	0);
	set_cmt	(0X43DD1F55,	"pointer",	0);
	create_insn	(x=0X43DD1F55);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1F5F);
	op_hex		(x,	1);
	make_array	(0X43DD1F78,	0X8);
	create_insn	(0X43DD1F80);
	create_insn	(x=0X43DD1F83);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1F86);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1FA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1FAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD1FB6);
	op_hex		(x,	1);
	make_array	(0X43DD1FBD,	0X3);
	create_insn	(0X43DD1FC0);
	create_insn	(x=0X43DD1FC3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1FC6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD1FE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD1FF9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2003);
	op_hex		(x,	1);
	make_array	(0X43DD200A,	0X6);
	create_insn	(0X43DD2010);
	create_insn	(x=0X43DD2013);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2016);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2042);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2051);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD205B);
	op_hex		(x,	1);
	make_array	(0X43DD2062,	0XE);
	create_insn	(0X43DD2070);
	create_insn	(x=0X43DD2072);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD208F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2099);
	op_hex		(x,	1);
	set_cmt	(0X43DD20A0,	"Size",	0);
	create_insn	(0X43DD20A0);
	create_insn	(x=0X43DD20AA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD20BB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD20EA);
	op_hex		(x,	1);
	make_array	(0X43DD20EE,	0X2);
	set_cmt	(0X43DD20F0,	"Size",	0);
	create_insn	(0X43DD20F0);
	set_cmt	(0X43DD20F7,	"Size",	0);
	create_insn	(x=0X43DD2105);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2142);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2153);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD215E);
	op_hex		(x,	1);
	make_array	(0X43DD2162,	0XE);
	create_insn	(0X43DD2170);
	create_insn	(x=0X43DD2173);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2176);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2192);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD219C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD21A6);
	op_hex		(x,	1);
	make_array	(0X43DD21AD,	0X3);
	create_insn	(0X43DD21B0);
	create_insn	(x=0X43DD21B3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD21B6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD21D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD21E9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD21F3);
	op_hex		(x,	1);
	make_array	(0X43DD21FA,	0X6);
	create_insn	(0X43DD2200);
	create_insn	(x=0X43DD2203);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2206);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2232);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2241);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD224B);
	op_hex		(x,	1);
	make_array	(0X43DD2252,	0XE);
	create_insn	(0X43DD2260);
	create_insn	(x=0X43DD2263);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2266);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2282);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD228C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2296);
	op_hex		(x,	1);
	make_array	(0X43DD229D,	0X3);
	create_insn	(0X43DD22A0);
	create_insn	(x=0X43DD22A3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD22A6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD22C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD22D9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD22E3);
	op_hex		(x,	1);
	make_array	(0X43DD22EA,	0X6);
	create_insn	(0X43DD22F0);
	create_insn	(x=0X43DD22F3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD22F6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2322);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2331);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD233B);
	op_hex		(x,	1);
	make_array	(0X43DD2342,	0XE);
	create_insn	(0X43DD2350);
	create_insn	(x=0X43DD2353);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2356);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2382);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2391);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD239B);
	op_hex		(x,	1);
	make_array	(0X43DD23A2,	0XE);
	create_insn	(0X43DD23B0);
	create_insn	(x=0X43DD23B3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD23B6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD23D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD23E5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD23EF);
	op_hex		(x,	1);
	make_array	(0X43DD23F6,	0XA);
	create_insn	(0X43DD2400);
	create_insn	(x=0X43DD2403);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2406);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2422);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD242C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2436);
	op_hex		(x,	1);
	make_array	(0X43DD243D,	0X3);
	create_insn	(0X43DD2440);
	create_insn	(x=0X43DD2442);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD245F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DD2482,	0XE);
	create_insn	(x=0X43DD2490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD249C,	0X4);
	create_insn	(0X43DD24A0);
	create_insn	(x=0X43DD24A3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD24A6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD24C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD24CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD24D6);
	op_hex		(x,	1);
	make_array	(0X43DD24DD,	0X3);
	create_insn	(0X43DD24E0);
	create_insn	(x=0X43DD24E3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD24E6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2502);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2519);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2523);
	op_hex		(x,	1);
	make_array	(0X43DD252A,	0X6);
	create_insn	(0X43DD2530);
	create_insn	(x=0X43DD2533);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2536);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2562);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2571);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD257B);
	op_hex		(x,	1);
	make_array	(0X43DD2582,	0XE);
	create_insn	(0X43DD2590);
	make_array	(0X43DD2595,	0XB);
	create_insn	(0X43DD25A0);
	create_insn	(x=0X43DD25A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD25C2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD25CC);
	op_hex		(x,	1);
	make_array	(0X43DD25D2,	0XE);
	set_cmt	(0X43DD25E0,	"Size",	0);
	create_insn	(0X43DD25E0);
	create_insn	(x=0X43DD25E7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD25F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2603);
	op_hex		(x,	1);
	make_array	(0X43DD2607,	0X9);
	create_insn	(x=0X43DD2610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD261C,	0X4);
	set_cmt	(0X43DD2620,	"Size",	0);
	create_insn	(0X43DD2620);
	create_insn	(x=0X43DD262A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD264F);
	op_hex		(x,	1);
	make_array	(0X43DD2653,	0XD);
	create_insn	(x=0X43DD2660);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD266C,	0X4);
	create_insn	(x=0X43DD2670);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD267C,	0X4);
	create_insn	(x=0X43DD2680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD268C,	0X4);
	create_insn	(x=0X43DD2690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD269C,	0X4);
	create_insn	(0X43DD26A0);
	create_insn	(x=0X43DD26A3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD26A6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD26C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD26CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD26D6);
	op_hex		(x,	1);
	make_array	(0X43DD26DD,	0X3);
	create_insn	(0X43DD26E0);
	create_insn	(x=0X43DD26E3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD26E6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2702);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2719);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2723);
	op_hex		(x,	1);
	make_array	(0X43DD272A,	0X6);
	create_insn	(0X43DD2730);
	create_insn	(x=0X43DD2733);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2736);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2762);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2771);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD277B);
	op_hex		(x,	1);
	make_array	(0X43DD2782,	0XE);
	create_insn	(0X43DD2790);
	create_insn	(x=0X43DD2793);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2796);
	op_hex		(x,	1);
	create_insn	(x=0X43DD27B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD27BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD27C6);
	op_hex		(x,	1);
	make_array	(0X43DD27CD,	0X3);
	create_insn	(0X43DD27D0);
	create_insn	(x=0X43DD27D3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD27D6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD27F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2809);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2813);
	op_hex		(x,	1);
	make_array	(0X43DD281A,	0X6);
	create_insn	(0X43DD2820);
	create_insn	(x=0X43DD2823);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2826);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2852);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2861);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD286B);
	op_hex		(x,	1);
	make_array	(0X43DD2872,	0XE);
	create_insn	(0X43DD2880);
	create_insn	(x=0X43DD2882);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD289F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD28A9);
	op_hex		(x,	1);
	create_insn	(0X43DD28B0);
	create_insn	(x=0X43DD28B3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD28B6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD28D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD28DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD28E6);
	op_hex		(x,	1);
	make_array	(0X43DD28ED,	0X3);
	create_insn	(0X43DD28F0);
	create_insn	(x=0X43DD28F3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD28F6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2912);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2929);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2933);
	op_hex		(x,	1);
	make_array	(0X43DD293A,	0X6);
	create_insn	(0X43DD2940);
	create_insn	(x=0X43DD2943);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2946);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2972);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2981);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD298B);
	op_hex		(x,	1);
	make_array	(0X43DD2992,	0XE);
	create_insn	(0X43DD29A0);
	create_insn	(x=0X43DD29A3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD29A6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD29D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD29E1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD29EB);
	op_hex		(x,	1);
	make_array	(0X43DD29F2,	0XE);
	create_insn	(0X43DD2A00);
	create_insn	(x=0X43DD2A03);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2A06);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2A26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2A35);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2A3F);
	op_hex		(x,	1);
	make_array	(0X43DD2A46,	0XA);
	create_insn	(0X43DD2A50);
	create_insn	(x=0X43DD2A53);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2A56);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2A72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2A7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2A86);
	op_hex		(x,	1);
	make_array	(0X43DD2A8D,	0X3);
	create_insn	(0X43DD2A90);
	create_insn	(x=0X43DD2A95);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD2AA1,	0XF);
	create_insn	(x=0X43DD2AB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD2ABC,	0X4);
	create_insn	(0X43DD2AC0);
	create_insn	(x=0X43DD2AC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DD2AE2,	0XE);
	create_insn	(0X43DD2AF0);
	create_insn	(x=0X43DD2AF3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2AF6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2B12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2B1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2B26);
	op_hex		(x,	1);
	make_array	(0X43DD2B2D,	0X3);
	create_insn	(0X43DD2B30);
	create_insn	(x=0X43DD2B33);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2B36);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2B52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2B69);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2B73);
	op_hex		(x,	1);
	make_array	(0X43DD2B7A,	0X6);
	create_insn	(0X43DD2B80);
	create_insn	(x=0X43DD2B83);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2B86);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2BB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD2BC1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2BCB);
	op_hex		(x,	1);
	make_array	(0X43DD2BD2,	0XE);
	create_insn	(0X43DD2BE0);
	create_insn	(x=0X43DD2BE2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2BED);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2BF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2C02);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2C10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD2C1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43DD2C30);
	create_insn	(x=0X43DD2C3E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2C76);
	op_hex		(x,	1);
	create_insn	(0X43DD2C89);
	set_cmt	(0X43DD2C8F,	"Trap to Debugger",	0);
	create_insn	(x=0X43DD2C8F);
	op_hex		(x,	0);
	create_insn	(0X43DD2C90);
	create_insn	(x=0X43DD2CBE);
	op_hex		(x,	1);
	create_insn	(0X43DD2CC5);
	make_array	(0X43DD2CCB,	0X5);
	create_insn	(0X43DD2CD0);
	create_insn	(x=0X43DD2D0A);
	op_hex		(x,	1);
	make_array	(0X43DD2D1C,	0X4);
	create_insn	(0X43DD2D20);
	create_insn	(x=0X43DD2D47);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2D60);
	op_hex		(x,	1);
	make_array	(0X43DD2D69,	0X7);
	create_insn	(0X43DD2D70);
	set_name	(0X43DD2D70,	"C_SDK::CommonUtil::GetVirtualTablePointer");
	make_array	(0X43DD2D74,	0XC);
	create_insn	(0X43DD2D80);
	create_insn	(x=0X43DD2DBF);
	op_hex		(x,	1);
	make_array	(0X43DD2DD1,	0XF);
	create_insn	(0X43DD2DE0);
	set_name	(0X43DD2DE0,	"C_SDK::Math::AngleDifference");
	make_array	(0X43DD2E5D,	0X3);
	create_insn	(0X43DD2E60);
	set_name	(0X43DD2E60,	"OneTap::Features::AnimationSystem::UpdateNetworkLayers");
	create_insn	(x=0X43DD2E6B);
	op_hex		(x,	1);
	set_cmt	(0X43DD2E6F,	"propHash",	0);
	create_insn	(x=0X43DD2E74);
	op_hex		(x,	1);
	set_cmt	(0X43DD2E77,	"classHash",	0);
	create_insn	(0X43DD2E8D);
	create_insn	(x=0X43DD2E92);
	op_stkvar	(x,	1);
	set_cmt	(0X43DD2EC2,	"propHash",	0);
	set_cmt	(0X43DD2EC7,	"classHash",	0);
	create_insn	(x=0X43DD2ED1);
	op_stkvar	(x,	1);
	create_insn	(0X43DD2F10);
	make_array	(0X43DD2F16,	0XA);
	create_insn	(0X43DD2F20);
	make_array	(0X43DD2FB9,	0X7);
	create_insn	(0X43DD2FC0);
	create_insn	(x=0X43DD2FE8);
	op_hex		(x,	1);
	create_insn	(x=0X43DD2FF5);
	op_hex		(x,	1);
	create_insn	(x=0X43DD301E);
	op_hex		(x,	1);
	create_insn	(0X43DD3032);
	make_array	(0X43DD3038,	0X8);
	create_insn	(0X43DD3040);
	set_name	(0X43DD3040,	"OneTap::Features::AnimationSystem::Storage::GetRotationData");
	create_insn	(x=0X43DD3043);
	op_stkvar	(x,	1);
	create_insn	(0X43DD3086);
	create_insn	(0X43DD3098);
	make_array	(0X43DD309D,	0X3);
	create_insn	(0X43DD30A0);
	create_insn	(x=0X43DD30A3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD30BC);
	op_hex		(x,	1);
	create_insn	(x=0X43DD30E0);
	op_hex		(x,	1);
	create_insn	(x=0X43DD30EE);
	op_hex		(x,	1);
	set_cmt	(0X43DD30F6,	"Size",	0);
	create_insn	(x=0X43DD30FE);
	op_hex		(x,	1);
	create_insn	(x=0X43DD310B);
	op_hex		(x,	1);
	create_insn	(0X43DD3116);
	set_cmt	(0X43DD3120,	"Size",	0);
	create_insn	(x=0X43DD3129);
	op_hex		(x,	1);
	create_insn	(0X43DD3131);
	create_insn	(x=0X43DD314A);
	op_hex		(x,	1);
	create_insn	(0X43DD315E);
	make_array	(0X43DD3163,	0XD);
	create_insn	(0X43DD3170);
	create_insn	(x=0X43DD317E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD31B3);
	op_hex		(x,	1);
	create_insn	(0X43DD31C6);
	make_array	(0X43DD31CC,	0X4);
	create_insn	(0X43DD31D0);
	set_name	(0X43DD31D0,	"C_SDK::CommonUtil::GetPointerToObject");
	make_array	(0X43DD31D3,	0XD);
	create_insn	(x=0X43DD31E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD31EB,	0X5);
	create_insn	(0X43DD31F0);
	create_insn	(x=0X43DD31FE);
	op_hex		(x,	1);
	create_insn	(x=0X43DD3228);
	op_hex		(x,	1);
	create_insn	(0X43DD323B);
	create_insn	(0X43DD3250);
	make_array	(0X43DD3275,	0XB);
	create_insn	(0X43DD3280);
	create_insn	(x=0X43DD3283);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD3289);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD328C);
	op_hex		(x,	1);
	create_insn	(x=0X43DD32B0);
	op_hex		(x,	1);
	create_insn	(0X43DD32B7);
	make_array	(0X43DD32BD,	0X3);
	create_insn	(0X43DD32C0);
	create_insn	(x=0X43DD32EB);
	op_hex		(x,	1);
	create_insn	(0X43DD32F2);
	make_array	(0X43DD32F8,	0X8);
	create_insn	(0X43DD3300);
	make_array	(0X43DD3366,	0XA);
	create_insn	(0X43DD3370);
	create_insn	(x=0X43DD3375);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD3388);
	op_hex		(x,	1);
	create_insn	(x=0X43DD33A4);
	op_hex		(x,	1);
	create_insn	(x=0X43DD33A9);
	op_hex		(x,	1);
	create_insn	(x=0X43DD33B6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD33D5);
	op_hex		(x,	1);
	create_insn	(x=0X43DD33E0);
	op_hex		(x,	1);
	create_insn	(x=0X43DD3405);
	op_hex		(x,	1);
	create_insn	(0X43DD340A);
	create_insn	(x=0X43DD3415);
	op_hex		(x,	1);
	set_cmt	(0X43DD341D,	"Size",	0);
	create_insn	(x=0X43DD3423);
	op_hex		(x,	1);
	create_insn	(x=0X43DD3431);
	op_hex		(x,	1);
	create_insn	(0X43DD3439);
	set_cmt	(0X43DD343D,	"Size",	0);
	create_insn	(x=0X43DD3443);
	op_hex		(x,	1);
	create_insn	(0X43DD344A);
	create_insn	(x=0X43DD3478);
	op_hex		(x,	1);
	create_insn	(0X43DD34AD);
	create_insn	(0X43DD34C7);
	create_insn	(0X43DD34ED);
	create_insn	(x=0X43DD3502);
	op_hex		(x,	1);
	create_insn	(x=0X43DD352F);
	op_hex		(x,	1);
	create_insn	(0X43DD355F);
	make_array	(0X43DD357E,	0X2);
	create_insn	(0X43DD3580);
	set_name	(0X43DD3580,	"C_SDK::Engine::GetInputSystem");
	make_array	(0X43DD3594,	0XC);
	create_insn	(0X43DD35A0);
	set_name	(0X43DD35A0,	"C_SDK::Player::Wrapper::GetInstance");
	make_array	(0X43DD35AB,	0X5);
	create_insn	(0X43DD35B0);
	create_insn	(x=0X43DD35B5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD35C8);
	op_hex		(x,	1);
	create_insn	(x=0X43DD35E1);
	op_hex		(x,	1);
	create_insn	(x=0X43DD35E6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD35F3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD3612);
	op_hex		(x,	1);
	create_insn	(x=0X43DD361D);
	op_hex		(x,	1);
	create_insn	(0X43DD3631);
	create_insn	(x=0X43DD363F);
	op_hex		(x,	1);
	create_insn	(x=0X43DD364C);
	op_hex		(x,	1);
	create_insn	(0X43DD3651);
	create_insn	(x=0X43DD365C);
	op_hex		(x,	1);
	set_cmt	(0X43DD3664,	"Size",	0);
	create_insn	(x=0X43DD366A);
	op_hex		(x,	1);
	create_insn	(x=0X43DD3678);
	op_hex		(x,	1);
	create_insn	(0X43DD3680);
	set_cmt	(0X43DD3684,	"Size",	0);
	create_insn	(x=0X43DD368A);
	op_hex		(x,	1);
	create_insn	(0X43DD3694);
	create_insn	(x=0X43DD36EC);
	op_hex		(x,	1);
	create_insn	(x=0X43DD36FB);
	op_hex		(x,	1);
	create_insn	(x=0X43DD372C);
	op_hex		(x,	1);
	create_insn	(x=0X43DD3738);
	op_hex		(x,	1);
	create_insn	(x=0X43DD375C);
	op_hex		(x,	1);
	create_insn	(0X43DD378C);
	make_array	(0X43DD37B6,	0XA);
	create_insn	(x=0X43DD37C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD37CB,	0X5);
	create_insn	(0X43DD37D0);
	set_name	(0X43DD37D0,	"C_SDK::Player::Wrapper::GetClientByHandle");
	make_array	(0X43DD37E4,	0XC);
	create_insn	(0X43DD37F0);
	make_array	(0X43DD3879,	0X7);
	create_insn	(0X43DD3880);
	create_insn	(x=0X43DD3891);
	op_hex		(x,	1);
	make_array	(0X43DD3898,	0X8);
	create_insn	(x=0X43DD38A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DD38A6,	0XA);
	create_insn	(0X43DD38B0);
	create_insn	(x=0X43DD38B3);
	op_hex		(x,	1);
	set_cmt	(0X43DD3904,	"propHash",	0);
	set_cmt	(0X43DD3909,	"classHash",	0);
	set_cmt	(0X43DD3950,	"player",	0);
	set_cmt	(0X43DD3956,	"a2",	0);
	set_cmt	(0X43DD395B,	"a5",	0);
	set_cmt	(0X43DD395D,	"modelBoneCounter",	0);
	set_cmt	(0X43DD3960,	"a3",	0);
	create_insn	(0X43DD396C);
	make_array	(0X43DD398B,	0X5);
	create_insn	(0X43DD3990);
	create_insn	(x=0X43DD3996);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DD39A6,	0XA);
	create_insn	(x=0X43DD39B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DD39B6,	0XA);
	create_insn	(0X43DD39C0);
	create_insn	(x=0X43DD39C3);
	op_hex		(x,	1);
	set_cmt	(0X43DD39D9,	"propHash",	0);
	set_cmt	(0X43DD39DE,	"classHash",	0);
	set_cmt	(0X43DD3A70,	"propHash",	0);
	set_cmt	(0X43DD3A75,	"classHash",	0);
	set_cmt	(0X43DD3ABC,	"player",	0);
	set_cmt	(0X43DD3AC2,	"a2",	0);
	set_cmt	(0X43DD3AC7,	"a5",	0);
	set_cmt	(0X43DD3AC9,	"modelBoneCounter",	0);
	set_cmt	(0X43DD3ACC,	"a3",	0);
	create_insn	(0X43DD3AD8);
	make_array	(0X43DD3AF7,	0X9);
	create_insn	(0X43DD3B00);
	create_insn	(x=0X43DD3B06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DD3B16,	0XA);
	create_insn	(x=0X43DD3B20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DD3B26,	0XA);
	create_insn	(0X43DD3B30);
	create_insn	(x=0X43DD3B36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DD3B46,	0XA);
	create_insn	(x=0X43DD3B50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DD3B56,	0XA);
	create_insn	(0X43DD3B60);
	create_insn	(x=0X43DD3B66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DD3B76,	0XA);
	create_insn	(0X43DD3B80);
	create_insn	(0X43DD3B90);
	set_name	(0X43DD3B90,	"C_SDK::VirtualReflectionHandler::CallVirtualFunction");
	make_array	(0X43DD3BA4,	0XC);
	set_cmt	(0X43DD3BB0,	"index",	0);
	create_insn	(0X43DD3BB0);
	set_name	(0X43DD3BB0,	"C_SDK::Player::Wrapper::Get");
	make_array	(0X43DD3BBC,	0X4);
	create_insn	(0X43DD3BC0);
	make_array	(0X43DD3BDD,	0X3);
	create_insn	(0X43DD3BE0);
	make_array	(0X43DD3BF7,	0X9);
	create_insn	(0X43DD3C00);
	set_name	(0X43DD3C00,	"C_SDK::Player::Weapon::UpdateAccuracyPenalty");
	make_array	(0X43DD3C17,	0X9);
	create_insn	(0X43DD3C20);
	make_array	(0X43DD3C3C,	0X4);
	create_insn	(0X43DD3C40);
	create_insn	(x=0X43DD3C43);
	op_hex		(x,	1);
	make_array	(0X43DD3C57,	0X9);
	create_insn	(0X43DD3C60);
	make_array	(0X43DD3C77,	0X9);
	create_insn	(0X43DD3C80);
	set_name	(0X43DD3C80,	"C_SDK::CUserCmd::GetLastFromBuffer");
	create_insn	(x=0X43DD3C8E);
	op_hex		(x,	1);
	make_array	(0X43DD3CA2,	0XE);
	create_insn	(0X43DD3CB0);
	set_cmt	(0X43DD3CC1,	"propHash",	0);
	set_cmt	(0X43DD3CC6,	"classHash",	0);
	set_cmt	(0X43DD3CE2,	"propHash",	0);
	set_cmt	(0X43DD3CE7,	"classHash",	0);
	make_array	(0X43DD3D32,	0XE);
	create_insn	(0X43DD3D40);
	set_name	(0X43DD3D40,	"C_SDK::Player::Controller::IsAlive");
	set_cmt	(0X43DD3D4C,	"propHash",	0);
	set_cmt	(0X43DD3D51,	"classHash",	0);
	set_cmt	(0X43DD3D6F,	"propHash",	0);
	set_cmt	(0X43DD3D74,	"classHash",	0);
	create_insn	(0X43DD3D8D);
	make_array	(0X43DD3D91,	0XF);
	create_insn	(0X43DD3DA0);
	make_array	(0X43DD3DA7,	0X9);
	create_insn	(0X43DD3DB0);
	create_insn	(x=0X43DD3DB3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD3DB6);
	op_hex		(x,	1);
	set_cmt	(0X43DD3DBC,	"arg",	0);
	make_array	(0X43DD3E83,	0XD);
	create_insn	(0X43DD3E90);
	create_insn	(x=0X43DD3E93);
	op_hex		(x,	1);
	create_insn	(x=0X43DD3E96);
	op_hex		(x,	1);
	create_insn	(x=0X43DD3E99);
	op_hex		(x,	1);
	create_insn	(x=0X43DD3EA6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD3EB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DD3EBD,	"this",	0);
	create_insn	(x=0X43DD3F9D);
	op_hex		(x,	1);
	set_cmt	(0X43DD402E,	"end",	0);
	create_insn	(0X43DD402E);
	set_cmt	(0X43DD402F,	"start",	0);
	set_cmt	(0X43DD4030,	"instance",	0);
	make_array	(0X43DD40BC,	0X4);
	create_insn	(0X43DD40C0);
	create_insn	(x=0X43DD40C3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD40C6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4145);
	op_hex		(x,	1);
	create_insn	(0X43DD4150);
	set_name	(0X43DD4150,	"C_SDK::Classes::Get::CSGameRulesProxy");
	create_insn	(x=0X43DD4155);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4159);
	op_hex		(x,	1);
	create_insn	(0X43DD416D);
	create_insn	(0X43DD4180);
	create_insn	(x=0X43DD418A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DD41B8,	0X8);
	create_insn	(0X43DD41C0);
	create_insn	(x=0X43DD41D7);
	op_hex		(x,	1);
	make_array	(0X43DD41DC,	0X4);
	create_insn	(x=0X43DD41E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DD41E6,	0XA);
	set_cmt	(0X43DD41F0,	"interface",	0);
	create_insn	(0X43DD41F0);
	set_cmt	(0X43DD41F6,	"index",	0);
	set_cmt	(0X43DD4209,	"this",	0);
	set_cmt	(0X43DD4223,	"index",	0);
	set_cmt	(0X43DD4228,	"interface",	0);
	set_cmt	(0X43DD4235,	"this",	0);
	set_cmt	(0X43DD4241,	"m_pPlayer",	0);
	set_cmt	(0X43DD4252,	"index",	0);
	set_cmt	(0X43DD4257,	"interface",	0);
	set_cmt	(0X43DD4264,	"this",	0);
	set_cmt	(0X43DD427B,	"propHash",	0);
	set_cmt	(0X43DD4280,	"classHash",	0);
	create_insn	(0X43DD42B7);
	make_array	(0X43DD42BB,	0X5);
	set_cmt	(0X43DD42C0,	"interface",	0);
	create_insn	(0X43DD42C0);
	set_cmt	(0X43DD42C6,	"index",	0);
	set_cmt	(0X43DD42DA,	"this",	0);
	set_cmt	(0X43DD42F0,	"index",	0);
	set_cmt	(0X43DD42F5,	"interface",	0);
	set_cmt	(0X43DD4302,	"this",	0);
	set_cmt	(0X43DD430E,	"m_pPlayer",	0);
	create_insn	(0X43DD4345);
	make_array	(0X43DD434A,	0X6);
	create_insn	(0X43DD4350);
	create_insn	(x=0X43DD4353);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4359);
	op_hex		(x,	1);
	set_cmt	(0X43DD4360,	"player",	0);
	set_cmt	(0X43DD4376,	"player",	0);
	set_cmt	(0X43DD439E,	"propHash",	0);
	set_cmt	(0X43DD43A3,	"classHash",	0);
	create_insn	(x=0X43DD43C3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DD4400,	"index",	0);
	set_cmt	(0X43DD4405,	"interface",	0);
	set_cmt	(0X43DD4412,	"this",	0);
	create_insn	(x=0X43DD44B0);
	op_hex		(x,	1);
	set_cmt	(0X43DD44B9,	"index",	0);
	set_cmt	(0X43DD44BE,	"interface",	0);
	set_cmt	(0X43DD44CB,	"this",	0);
	create_insn	(x=0X43DD4569);
	op_hex		(x,	1);
	set_cmt	(0X43DD4572,	"index",	0);
	set_cmt	(0X43DD4577,	"interface",	0);
	set_cmt	(0X43DD4584,	"this",	0);
	set_cmt	(0X43DD45AC,	"index",	0);
	set_cmt	(0X43DD45B1,	"interface",	0);
	set_cmt	(0X43DD45C8,	"this",	0);
	make_array	(0X43DD4616,	0XA);
	create_insn	(0X43DD4620);
	create_insn	(x=0X43DD4623);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4626);
	op_hex		(x,	1);
	set_cmt	(0X43DD4632,	"arg",	0);
	create_insn	(x=0X43DD4646);
	op_hex		(x,	1);
	create_insn	(x=0X43DD464B);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4658);
	op_hex		(x,	1);
	create_insn	(x=0X43DD465B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DD46C0);
	set_cmt	(0X43DD46D1,	"this",	0);
	set_cmt	(0X43DD46EF,	"index",	0);
	set_cmt	(0X43DD46F4,	"interface",	0);
	set_cmt	(0X43DD4701,	"this",	0);
	set_cmt	(0X43DD471F,	"propHash",	0);
	set_cmt	(0X43DD4724,	"classHash",	0);
	set_cmt	(0X43DD473C,	"index",	0);
	set_cmt	(0X43DD4741,	"interface",	0);
	set_cmt	(0X43DD474E,	"this",	0);
	set_cmt	(0X43DD4765,	"propHash",	0);
	set_cmt	(0X43DD476A,	"classHash",	0);
	create_insn	(0X43DD4810);
	create_insn	(x=0X43DD481D);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4822);
	op_hex		(x,	1);
	create_insn	(x=0X43DD482F);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4832);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DD4890);
	create_insn	(x=0X43DD4893);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4896);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4A7D);
	op_hex		(x,	1);
	make_array	(0X43DD4AC3,	0XD);
	create_insn	(0X43DD4AD0);
	create_insn	(0X43DD4AE8);
	create_insn	(0X43DD4B54);
	create_insn	(0X43DD4B82);
	create_insn	(0X43DD4BC1);
	create_insn	(0X43DD4BF2);
	create_insn	(0X43DD4C2B);
	make_array	(0X43DD4C54,	0XC);
	create_insn	(0X43DD4C60);
	create_insn	(x=0X43DD4C63);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4C66);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4CB4);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4CB9);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4CC6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4CC9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD4CF0);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4CF5);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4D02);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4D05);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DD4D27,	"interface",	0);
	create_insn	(0X43DD4D27);
	set_cmt	(0X43DD4D2D,	"index",	0);
	set_cmt	(0X43DD4D47,	"index",	0);
	set_cmt	(0X43DD4D52,	"interface",	0);
	set_cmt	(0X43DD4D69,	"this",	0);
	set_cmt	(0X43DD4D75,	"player",	0);
	set_cmt	(0X43DD4D8A,	"index",	0);
	set_cmt	(0X43DD4D8F,	"interface",	0);
	set_cmt	(0X43DD4D9C,	"this",	0);
	set_cmt	(0X43DD4DA8,	"player",	0);
	set_cmt	(0X43DD4DD0,	"propHash",	0);
	set_cmt	(0X43DD4DD5,	"classHash",	0);
	set_cmt	(0X43DD4DFD,	"index",	0);
	set_cmt	(0X43DD4E02,	"interface",	0);
	set_cmt	(0X43DD4E0F,	"this",	0);
	set_cmt	(0X43DD4E26,	"propHash",	0);
	set_cmt	(0X43DD4E2B,	"classHash",	0);
	set_cmt	(0X43DD4E3E,	"index",	0);
	set_cmt	(0X43DD4E43,	"interface",	0);
	set_cmt	(0X43DD4E58,	"this",	0);
	set_cmt	(0X43DD4E64,	"player",	0);
	set_cmt	(0X43DD4E8C,	"propHash",	0);
	set_cmt	(0X43DD4E91,	"classHash",	0);
	create_insn	(0X43DD4EB5);
	set_cmt	(0X43DD4EBC,	"this",	0);
	set_cmt	(0X43DD4EC8,	"player",	0);
	set_cmt	(0X43DD4EF0,	"propHash",	0);
	set_cmt	(0X43DD4EF5,	"classHash",	0);
	set_cmt	(0X43DD4F23,	"index",	0);
	set_cmt	(0X43DD4F28,	"interface",	0);
	set_cmt	(0X43DD4F35,	"this",	0);
	set_cmt	(0X43DD4F4C,	"propHash",	0);
	set_cmt	(0X43DD4F51,	"classHash",	0);
	create_insn	(x=0X43DD4F60);
	op_hex		(x,	1);
	create_insn	(0X43DD4F90);
	set_cmt	(0X43DD4FA2,	"index",	0);
	set_cmt	(0X43DD4FAD,	"interface",	0);
	set_cmt	(0X43DD4FBA,	"this",	0);
	create_insn	(x=0X43DD4FCE);
	op_hex		(x,	1);
	create_insn	(x=0X43DD4FD3);
	op_hex		(x,	1);
	create_insn	(0X43DD4FF7);
	create_insn	(x=0X43DD510F);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5114);
	op_hex		(x,	1);
	create_insn	(x=0X43DD512F);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5132);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD5139);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DD514B);
	create_insn	(x=0X43DD5208);
	op_hex		(x,	1);
	create_insn	(x=0X43DD520D);
	op_hex		(x,	1);
	create_insn	(x=0X43DD521E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5221);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DD5241,	0XF);
	create_insn	(0X43DD5250);
	set_cmt	(0X43DD5253,	"Size",	0);
	create_insn	(x=0X43DD5267);
	op_hex		(x,	1);
	make_array	(0X43DD527E,	0X2);
	create_insn	(0X43DD5280);
	create_insn	(x=0X43DD5283);
	op_stkvar	(x,	1);
	make_array	(0X43DD528C,	0X4);
	create_insn	(0X43DD5290);
	make_array	(0X43DD52A4,	0XC);
	create_insn	(0X43DD52B0);
	create_insn	(x=0X43DD52DB);
	op_hex		(x,	1);
	make_array	(0X43DD52EB,	0X5);
	create_insn	(0X43DD52F0);
	create_insn	(0X43DD5309);
	make_array	(0X43DD5311,	0XF);
	create_insn	(0X43DD5320);
	create_insn	(x=0X43DD5323);
	op_hex		(x,	1);
	set_cmt	(0X43DD5351,	"num",	0);
	set_cmt	(0X43DD5354,	"value",	0);
	set_cmt	(0X43DD5356,	"pointer",	0);
	create_insn	(x=0X43DD535C);
	op_hex		(x,	1);
	create_insn	(0X43DD536E);
	create_insn	(x=0X43DD5380);
	op_hex		(x,	1);
	create_insn	(0X43DD5392);
	create_insn	(x=0X43DD5394);
	op_hex		(x,	1);
	create_insn	(0X43DD53AC);
	set_cmt	(0X43DD53EE,	"num",	0);
	set_cmt	(0X43DD53EF,	"value",	0);
	set_cmt	(0X43DD53F1,	"pointer",	0);
	create_insn	(x=0X43DD53FC);
	op_hex		(x,	1);
	create_insn	(x=0X43DD542A);
	op_hex		(x,	1);
	create_insn	(0X43DD543A);
	set_cmt	(0X43DD5448,	"num",	0);
	set_cmt	(0X43DD5449,	"value",	0);
	set_cmt	(0X43DD544B,	"pointer",	0);
	create_insn	(x=0X43DD5456);
	op_hex		(x,	1);
	create_insn	(0X43DD546C);
	make_array	(0X43DD5471,	0XF);
	create_insn	(0X43DD5480);
	create_insn	(x=0X43DD5483);
	op_hex		(x,	1);
	create_insn	(x=0X43DD548D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5490);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD5499);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD549C);
	op_stkvar	(x,	0);
	create_insn	(0X43DD54B8);
	create_insn	(x=0X43DD54C5);
	op_stkvar	(x,	1);
	set_cmt	(0X43DD54D1,	"num",	0);
	set_cmt	(0X43DD54D4,	"value",	0);
	set_cmt	(0X43DD54D6,	"pointer",	0);
	create_insn	(x=0X43DD54DC);
	op_hex		(x,	1);
	create_insn	(0X43DD54EC);
	create_insn	(x=0X43DD54FD);
	op_hex		(x,	1);
	create_insn	(0X43DD550F);
	create_insn	(x=0X43DD5511);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5513);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD551B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5529);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5536);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD553F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD5543);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5546);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD554B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5551);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD555B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD555E);
	op_stkvar	(x,	0);
	set_cmt	(0X43DD556C,	"num",	0);
	set_cmt	(0X43DD556D,	"value",	0);
	set_cmt	(0X43DD556F,	"pointer",	0);
	create_insn	(x=0X43DD556F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD5577);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD557A);
	op_hex		(x,	1);
	create_insn	(x=0X43DD557D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD55A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD55A8);
	op_hex		(x,	1);
	create_insn	(0X43DD55B6);
	set_cmt	(0X43DD55C3,	"num",	0);
	set_cmt	(0X43DD55C4,	"value",	0);
	set_cmt	(0X43DD55C6,	"pointer",	0);
	create_insn	(x=0X43DD55CC);
	op_hex		(x,	1);
	create_insn	(x=0X43DD55D6);
	op_stkvar	(x,	1);
	create_insn	(0X43DD55E4);
	make_array	(0X43DD55E9,	0X7);
	create_insn	(0X43DD55F0);
	set_name	(0X43DD55F0,	"C_SDK::Math::ClampAngles");
	create_insn	(x=0X43DD55F3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD55FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD5604);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5607);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD560F);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5617);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD561A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD561D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD563A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD563F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5643);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD564B);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5653);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5656);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5659);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5684);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD568B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD569F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD56C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD56CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD56D7);
	op_stkvar	(x,	1);
	make_array	(0X43DD56F2,	0XE);
	create_insn	(0X43DD5700);
	make_array	(0X43DD5714,	0XC);
	create_insn	(0X43DD5720);
	set_name	(0X43DD5720,	"C_SDK::Player::GetViewAngles");
	make_array	(0X43DD574A,	0X6);
	create_insn	(0X43DD5750);
	make_array	(0X43DD5764,	0XC);
	create_insn	(0X43DD5770);
	set_name	(0X43DD5770,	"C_SDK::EngineTrace::Ray::Operator::New::DeltaBased");
	create_insn	(x=0X43DD5773);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5776);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5779);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5780);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD5786);
	op_hex		(x,	1);
	create_insn	(x=0X43DD57DF);
	op_hex		(x,	1);
	create_insn	(0X43DD57E8);
	make_array	(0X43DD5865,	0XB);
	create_insn	(0X43DD5870);
	set_name	(0X43DD5870,	"C_SDK::EngineTrace::Ray::Operator::New");
	make_array	(0X43DD58D3,	0XD);
	create_insn	(0X43DD58E0);
	make_array	(0X43DD5921,	0XF);
	create_insn	(0X43DD5930);
	create_insn	(0X43DD5940);
	make_array	(0X43DD5944,	0XC);
	create_insn	(0X43DD5950);
	make_array	(0X43DD598B,	0X5);
	create_insn	(0X43DD5990);
	create_insn	(x=0X43DD5997);
	op_stkvar	(x,	1);
	make_array	(0X43DD59A4,	0XC);
	create_insn	(0X43DD59B0);
	make_array	(0X43DD59E7,	0X9);
	create_insn	(0X43DD59F0);
	create_insn	(x=0X43DD5A39);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD5A46);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5A49);
	op_stkvar	(x,	1);
	create_insn	(0X43DD5A5D);
	create_insn	(x=0X43DD5A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5A6B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5A84);
	op_hex		(x,	1);
	make_array	(0X43DD5AA4,	0XC);
	create_insn	(0X43DD5AB0);
	set_cmt	(0X43DD5AB4,	"index",	0);
	create_insn	(0X43DD5AD0);
	set_name	(0X43DD5AD0,	"C_SDK::CommonUtil::GetArrayPtr");
	create_insn	(0X43DD5AD9);
	make_array	(0X43DD5ADC,	0X4);
	create_insn	(0X43DD5AE0);
	make_array	(0X43DD5AF2,	0XE);
	create_insn	(x=0X43DD5B00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD5B0B,	0X5);
	create_insn	(0X43DD5B10);
	create_insn	(x=0X43DD5B3F);
	op_hex		(x,	1);
	create_insn	(0X43DD5B55);
	make_array	(0X43DD5B5B,	0X5);
	create_insn	(0X43DD5B60);
	make_array	(0X43DD5B71,	0XF);
	create_insn	(0X43DD5B80);
	set_name	(0X43DD5B80,	"nullsub_1");
	make_array	(0X43DD5B81,	0XF);
	create_insn	(0X43DD5B90);
	create_insn	(x=0X43DD5B93);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5BA1);
	op_hex		(x,	1);
	set_cmt	(0X43DD5BA9,	"Size",	0);
	create_insn	(x=0X43DD5BB1);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5BBB);
	op_hex		(x,	1);
	create_insn	(0X43DD5BC5);
	set_cmt	(0X43DD5BCF,	"Size",	0);
	create_insn	(x=0X43DD5BD5);
	op_hex		(x,	1);
	create_insn	(0X43DD5BDC);
	make_array	(0X43DD5BE2,	0XE);
	create_insn	(0X43DD5BF0);
	create_insn	(x=0X43DD5BF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5BF6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5C0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD5C12);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD5C15);
	op_stkvar	(x,	0);
	create_insn	(0X43DD5C38);
	create_insn	(x=0X43DD5C4B);
	op_hex		(x,	1);
	create_insn	(0X43DD5C5D);
	create_insn	(x=0X43DD5C64);
	op_hex		(x,	1);
	create_insn	(0X43DD5C73);
	set_cmt	(0X43DD5C93,	"Size",	0);
	create_insn	(x=0X43DD5C99);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5CAA);
	op_hex		(x,	1);
	create_insn	(0X43DD5CB2);
	set_cmt	(0X43DD5CB6,	"Size",	0);
	create_insn	(x=0X43DD5CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5CBF);
	op_hex		(x,	1);
	create_insn	(0X43DD5CC6);
	create_insn	(x=0X43DD5CC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD5CD8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD5CE7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5CEA);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5CED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5CF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5D1B);
	op_hex		(x,	1);
	create_insn	(0X43DD5D20);
	create_insn	(x=0X43DD5D27);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5D2A);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5D35);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5D3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD5D3E);
	op_stkvar	(x,	1);
	create_insn	(0X43DD5D50);
	make_array	(0X43DD5D5B,	0X5);
	create_insn	(0X43DD5D60);
	create_insn	(x=0X43DD5D63);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5D6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5D70);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD5DA2);
	op_hex		(x,	1);
	create_insn	(0X43DD5DB4);
	create_insn	(x=0X43DD5DBB);
	op_hex		(x,	1);
	create_insn	(0X43DD5DCA);
	create_insn	(x=0X43DD5DD5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD5DDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5DE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD5DFE);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5E26);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5E29);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5E2E);
	op_stkvar	(x,	1);
	create_insn	(0X43DD5E3D);
	create_insn	(x=0X43DD5E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5E47);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5E4C);
	op_stkvar	(x,	1);
	create_insn	(0X43DD5E5B);
	create_insn	(x=0X43DD5E75);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5E9A);
	op_hex		(x,	1);
	create_insn	(0X43DD5EAD);
	make_array	(0X43DD5EB8,	0X8);
	create_insn	(0X43DD5EC0);
	set_cmt	(0X43DD5ED9,	"this",	0);
	set_cmt	(0X43DD5EDB,	"a3",	0);
	set_cmt	(0X43DD5EDC,	"a2",	0);
	make_array	(0X43DD5EE8,	0X8);
	create_insn	(0X43DD5EF0);
	create_insn	(x=0X43DD5F2A);
	op_hex		(x,	1);
	create_insn	(0X43DD5F67);
	make_array	(0X43DD5F6D,	0X3);
	create_insn	(0X43DD5F70);
	make_array	(0X43DD5F8B,	0X5);
	create_insn	(0X43DD5F90);
	make_array	(0X43DD5FA4,	0XC);
	create_insn	(0X43DD5FB0);
	create_insn	(x=0X43DD5FB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD5FC0);
	op_hex		(x,	1);
	create_insn	(0X43DD5FC5);
	create_insn	(x=0X43DD5FD0);
	op_hex		(x,	1);
	set_cmt	(0X43DD5FD8,	"Size",	0);
	create_insn	(x=0X43DD5FE0);
	op_hex		(x,	1);
	create_insn	(x=0X43DD5FEA);
	op_hex		(x,	1);
	create_insn	(0X43DD5FF4);
	set_cmt	(0X43DD5FFE,	"Size",	0);
	create_insn	(x=0X43DD6004);
	op_hex		(x,	1);
	create_insn	(0X43DD600B);
	make_array	(0X43DD6011,	0XF);
	create_insn	(0X43DD6020);
	create_insn	(x=0X43DD6053);
	op_hex		(x,	1);
	create_insn	(0X43DD6067);
	create_insn	(x=0X43DD6074);
	op_hex		(x,	1);
	create_insn	(0X43DD6086);
	create_insn	(x=0X43DD608D);
	op_hex		(x,	1);
	create_insn	(0X43DD609C);
	create_insn	(x=0X43DD60CB);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6104);
	op_hex		(x,	1);
	create_insn	(0X43DD6114);
	create_insn	(0X43DD6120);
	create_insn	(x=0X43DD6151);
	op_hex		(x,	1);
	make_array	(0X43DD6162,	0XE);
	create_insn	(0X43DD6170);
	set_name	(0X43DD6170,	"C_SDK::Util::String::Append");
	create_insn	(x=0X43DD6173);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6180);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD6194);
	op_stkvar	(x,	1);
	create_insn	(0X43DD61A7);
	create_insn	(x=0X43DD61BD);
	op_hex		(x,	1);
	create_insn	(0X43DD61C8);
	create_insn	(x=0X43DD61CA);
	op_hex		(x,	1);
	create_insn	(0X43DD61D9);
	create_insn	(x=0X43DD61E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD61F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD61FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD620B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD620E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6211);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD621A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD623F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD6242);
	op_hex		(x,	1);
	create_insn	(0X43DD6250);
	create_insn	(x=0X43DD625D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD6260);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6265);
	op_stkvar	(x,	1);
	create_insn	(0X43DD6277);
	make_array	(0X43DD627C,	0X4);
	create_insn	(x=0X43DD6280);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD628B,	0X5);
	create_insn	(0X43DD6290);
	make_array	(0X43DD62AC,	0X4);
	create_insn	(0X43DD62B0);
	create_insn	(x=0X43DD62DD);
	op_hex		(x,	1);
	create_insn	(0X43DD62E4);
	make_array	(0X43DD62EA,	0X6);
	create_insn	(0X43DD62F0);
	create_insn	(x=0X43DD6325);
	op_hex		(x,	1);
	create_insn	(0X43DD633D);
	make_array	(0X43DD6343,	0XD);
	create_insn	(0X43DD6350);
	set_name	(0X43DD6350,	"?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z");
	create_insn	(x=0X43DD6359);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD635F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD6370);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD637C);
	op_hex		(x,	1);
	create_insn	(0X43DD638E);
	create_insn	(x=0X43DD639C);
	op_hex		(x,	1);
	create_insn	(0X43DD63AE);
	create_insn	(x=0X43DD63B5);
	op_hex		(x,	1);
	create_insn	(0X43DD63C4);
	create_insn	(x=0X43DD63D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD63D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD63E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD63EB);
	op_hex		(x,	1);
	create_insn	(x=0X43DD63EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD6420);
	op_hex		(x,	1);
	create_insn	(0X43DD6430);
	make_array	(0X43DD643B,	0X5);
	create_insn	(0X43DD6440);
	create_insn	(x=0X43DD6443);
	op_stkvar	(x,	1);
	set_cmt	(0X43DD6469,	"this",	0);
	set_cmt	(0X43DD646B,	"a3",	0);
	set_cmt	(0X43DD646C,	"a2",	0);
	make_array	(0X43DD647A,	0X6);
	create_insn	(0X43DD6480);
	set_name	(0X43DD6480,	"OneTap::Features::AutoWall::ScaleDamage");
	set_cmt	(0X43DD648C,	"propHash",	0);
	set_cmt	(0X43DD6491,	"classHash",	0);
	create_insn	(x=0X43DD64A3);
	op_stkvar	(x,	1);
	set_cmt	(0X43DD64B2,	"propHash",	0);
	set_cmt	(0X43DD64B7,	"classHash",	0);
	create_insn	(x=0X43DD64C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD64CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD64CF);
	op_stkvar	(x,	0);
	set_cmt	(0X43DD64D2,	"switch 7 cases ",	0);
	set_cmt	(0X43DD64DA,	"switch jump",	0);
	create_insn	(x=0X43DD64DA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DD64E1,	"jumptable 43DD64DA case 1",	1);
	create_insn	(0X43DD64E1);
	create_insn	(0X43DD64F7);
	set_cmt	(0X43DD6509,	"jumptable 43DD64DA case 3",	1);
	create_insn	(0X43DD6509);
	set_cmt	(0X43DD6517,	"jumptable 43DD64DA cases 6,7",	1);
	create_insn	(0X43DD6517);
	set_cmt	(0X43DD6527,	"jumptable 43DD64DA default case, cases 2,4,5",	1);
	set_name	(0X43DD6527,	"def_43DD64DA");
	set_cmt	(0X43DD652F,	"switch 6 cases ",	0);
	set_cmt	(0X43DD6538,	"switch jump",	0);
	create_insn	(x=0X43DD6538);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DD653F,	"jumptable 43DD6538 case 1",	1);
	create_insn	(0X43DD653F);
	set_cmt	(0X43DD6548,	"propHash",	0);
	set_cmt	(0X43DD654D,	"classHash",	0);
	create_insn	(x=0X43DD6557);
	op_stkvar	(x,	1);
	set_cmt	(0X43DD6566,	"jumptable 43DD6538 cases 0,2-5",	1);
	set_cmt	(0X43DD65D7,	"jumptable 43DD6538 default case",	1);
	set_name	(0X43DD65D7,	"def_43DD6538");
	make_array	(0X43DD65DE,	0X2);
	set_cmt	(0X43DD65E0,	"jump table for switch statement",	0);
	create_dword	(x=0X43DD65E0);
	make_array	(x,	0X7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DD65E0,	"jpt_43DD64DA");
	set_cmt	(0X43DD65FC,	"jump table for switch statement",	0);
	create_dword	(x=0X43DD65FC);
	make_array	(x,	0X6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DD65FC,	"jpt_43DD6538");
	make_array	(0X43DD6614,	0XC);
	create_insn	(0X43DD6620);
	make_array	(0X43DD66E8,	0X8);
	create_insn	(0X43DD66F0);
	set_name	(0X43DD66F0,	"C_SDK::EngineTrace::Trace::Copy");
	create_insn	(x=0X43DD66F3);
	op_stkvar	(x,	1);
	make_array	(0X43DD67A8,	0X8);
	create_insn	(0X43DD67B0);
	create_insn	(x=0X43DD67BE);
	op_hex		(x,	1);
	create_insn	(x=0X43DD67CA);
	op_hex		(x,	1);
	create_insn	(x=0X43DD67F6);
	op_hex		(x,	1);
	create_insn	(0X43DD6809);
	set_cmt	(0X43DD680F,	"Trap to Debugger",	0);
	create_insn	(x=0X43DD680F);
	op_hex		(x,	0);
	create_insn	(0X43DD6810);
	make_array	(0X43DD683A,	0X6);
	create_insn	(0X43DD6840);
	create_insn	(x=0X43DD6845);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD6858);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6871);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6876);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6883);
	op_hex		(x,	1);
	create_insn	(x=0X43DD689E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD68A9);
	op_hex		(x,	1);
	create_insn	(0X43DD68BD);
	create_insn	(x=0X43DD68CB);
	op_hex		(x,	1);
	create_insn	(x=0X43DD68D8);
	op_hex		(x,	1);
	create_insn	(0X43DD68DD);
	create_insn	(x=0X43DD68E8);
	op_hex		(x,	1);
	set_cmt	(0X43DD68F0,	"Size",	0);
	create_insn	(x=0X43DD68F6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6904);
	op_hex		(x,	1);
	create_insn	(0X43DD690C);
	set_cmt	(0X43DD6910,	"Size",	0);
	create_insn	(x=0X43DD6916);
	op_hex		(x,	1);
	create_insn	(0X43DD6920);
	create_insn	(x=0X43DD6942);
	op_hex		(x,	1);
	create_insn	(0X43DD695B);
	create_insn	(x=0X43DD6986);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6992);
	op_hex		(x,	1);
	create_insn	(x=0X43DD69BA);
	op_hex		(x,	1);
	create_insn	(0X43DD69E6);
	make_array	(0X43DD6A05,	0XB);
	create_insn	(0X43DD6A10);
	make_array	(0X43DD6A68,	0X8);
	create_insn	(0X43DD6A70);
	make_array	(0X43DD6ACA,	0X6);
	create_insn	(0X43DD6AD0);
	set_name	(0X43DD6AD0,	"C_SDK::EngineTrace::DidHit");
	create_insn	(0X43DD6AED);
	create_insn	(0X43DD6AF0);
	create_insn	(0X43DD6B12);
	make_array	(0X43DD6B18,	0X8);
	create_insn	(0X43DD6B20);
	make_array	(0X43DD6B25,	0XB);
	create_insn	(0X43DD6B30);
	set_name	(0X43DD6B30,	"C_SDK::CommonUtil::GetSecondParamFromArray");
	make_array	(0X43DD6B35,	0XB);
	create_insn	(0X43DD6B40);
	set_name	(0X43DD6B40,	"C_SDK::CommonUtil::GetFirstParamFromArray");
	make_array	(0X43DD6B45,	0XB);
	create_insn	(0X43DD6B50);
	set_name	(0X43DD6B50,	"C_SDK::CommonUtil::GetValueAtPointer");
	make_array	(0X43DD6B54,	0XC);
	create_insn	(0X43DD6B60);
	make_array	(0X43DD6B65,	0XB);
	create_insn	(x=0X43DD6B70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DD6B76,	0XA);
	create_insn	(0X43DD6B80);
	create_insn	(x=0X43DD6B83);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6B86);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD6B8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD6B8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD6B92);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD6BA5);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6BA8);
	op_hex		(x,	1);
	make_array	(0X43DD6BB4,	0XC);
	create_insn	(0X43DD6BC0);
	create_insn	(x=0X43DD6C03);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6C15);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6C39);
	op_hex		(x,	1);
	create_insn	(0X43DD6C4C);
	make_array	(0X43DD6C52,	0XE);
	create_insn	(0X43DD6C60);
	create_insn	(x=0X43DD6CAA);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6CC0);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6CE4);
	op_hex		(x,	1);
	create_insn	(0X43DD6CFD);
	make_array	(0X43DD6D03,	0XD);
	create_insn	(0X43DD6D10);
	create_insn	(x=0X43DD6D13);
	op_hex		(x,	1);
	create_insn	(0X43DD6D51);
	create_insn	(x=0X43DD6D65);
	op_hex		(x,	1);
	create_insn	(0X43DD6D6A);
	create_insn	(x=0X43DD6D75);
	op_hex		(x,	1);
	set_cmt	(0X43DD6D7D,	"Size",	0);
	create_insn	(x=0X43DD6D85);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6D93);
	op_hex		(x,	1);
	create_insn	(0X43DD6D9B);
	set_cmt	(0X43DD6D9F,	"Size",	0);
	create_insn	(x=0X43DD6DA5);
	op_hex		(x,	1);
	create_insn	(0X43DD6DAA);
	create_insn	(x=0X43DD6DD1);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6DD4);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6DFB);
	op_hex		(x,	1);
	set_cmt	(0X43DD6DFE,	"num",	0);
	set_cmt	(0X43DD6E04,	"value",	0);
	set_cmt	(0X43DD6E06,	"pointer",	0);
	set_cmt	(0X43DD6E0C,	"num",	0);
	set_cmt	(0X43DD6E10,	"value",	0);
	set_cmt	(0X43DD6E12,	"pointer",	0);
	create_insn	(0X43DD6E1A);
	create_insn	(x=0X43DD6E4D);
	op_hex		(x,	1);
	set_cmt	(0X43DD6E50,	"num",	0);
	set_cmt	(0X43DD6E51,	"value",	0);
	set_cmt	(0X43DD6E56,	"pointer",	0);
	create_insn	(x=0X43DD6E65);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6E6F);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6E93);
	op_hex		(x,	1);
	create_insn	(0X43DD6EA5);
	make_array	(0X43DD6EB0,	0X10);
	create_insn	(0X43DD6EC0);
	create_insn	(x=0X43DD6EC9);
	op_hex		(x,	1);
	create_insn	(0X43DD6EF7);
	create_insn	(x=0X43DD6F17);
	op_hex		(x,	1);
	create_insn	(0X43DD6F1C);
	create_insn	(x=0X43DD6F27);
	op_hex		(x,	1);
	set_cmt	(0X43DD6F2F,	"Size",	0);
	create_insn	(x=0X43DD6F37);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6F45);
	op_hex		(x,	1);
	create_insn	(0X43DD6F53);
	set_cmt	(0X43DD6F57,	"Size",	0);
	create_insn	(x=0X43DD6F63);
	op_hex		(x,	1);
	create_insn	(0X43DD6F68);
	create_insn	(x=0X43DD6F8E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6F91);
	op_hex		(x,	1);
	create_insn	(x=0X43DD6FBA);
	op_hex		(x,	1);
	set_cmt	(0X43DD6FBD,	"num",	0);
	set_cmt	(0X43DD6FC3,	"value",	0);
	set_cmt	(0X43DD6FC5,	"pointer",	0);
	set_cmt	(0X43DD6FCB,	"num",	0);
	set_cmt	(0X43DD6FCF,	"value",	0);
	set_cmt	(0X43DD6FD1,	"pointer",	0);
	create_insn	(x=0X43DD6FD9);
	op_hex		(x,	1);
	create_insn	(x=0X43DD700C);
	op_hex		(x,	1);
	set_cmt	(0X43DD700F,	"num",	0);
	set_cmt	(0X43DD7010,	"value",	0);
	set_cmt	(0X43DD7015,	"pointer",	0);
	create_insn	(x=0X43DD7027);
	op_hex		(x,	1);
	create_insn	(x=0X43DD705F);
	op_hex		(x,	1);
	create_insn	(0X43DD7076);
	make_array	(0X43DD7081,	0XF);
	create_insn	(x=0X43DD7090);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD709B,	0X5);
	create_insn	(0X43DD70A0);
	make_array	(0X43DD70B4,	0XC);
	create_insn	(0X43DD70C0);
	make_array	(0X43DD713C,	0X4);
	create_insn	(0X43DD7140);
	set_name	(0X43DD7140,	"C_SDK::Security::FNV1A::GameEngine::GetCLagRecordHash");
	make_array	(0X43DD7146,	0XA);
	create_insn	(0X43DD7150);
	set_name	(0X43DD7150,	"C_SDK::Security::FNV1A::GameEngine::GetSimulationTimeHash");
	make_array	(0X43DD7156,	0XA);
	create_insn	(0X43DD7160);
	make_array	(0X43DD7166,	0XA);
	create_insn	(0X43DD7170);
	make_array	(0X43DD7176,	0XA);
	create_insn	(0X43DD7180);
	set_name	(0X43DD7180,	"C_SDK::Player::Controller::IsHaveImmunity");
	set_cmt	(0X43DD71A2,	"propHash",	0);
	set_cmt	(0X43DD71A7,	"classHash",	0);
	create_insn	(0X43DD71C0);
	make_array	(0X43DD71C4,	0XC);
	create_insn	(0X43DD71D0);
	create_insn	(x=0X43DD71D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD71D6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD71ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD71F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD71FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7201);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7208);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD720F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7216);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7221);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7225);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7228);
	op_hex		(x,	1);
	create_insn	(x=0X43DD722B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD722F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD723C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7240);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7245);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD724A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD7251);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7261);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7266);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DD7276,	0XA);
	create_insn	(0X43DD7280);
	set_cmt	(0X43DD7286,	"num",	0);
	set_cmt	(0X43DD728D,	"value",	0);
	set_cmt	(0X43DD728F,	"pointer",	0);
	create_insn	(x=0X43DD7295);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7298);
	op_hex		(x,	1);
	create_insn	(x=0X43DD729B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD72A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD72B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD72BD);
	op_hex		(x,	1);
	create_insn	(x=0X43DD72FA);
	op_hex		(x,	1);
	make_array	(0X43DD7306,	0XA);
	create_insn	(0X43DD7310);
	create_insn	(x=0X43DD7320);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7323);
	op_hex		(x,	1);
	set_cmt	(0X43DD7326,	"this",	0);
	create_insn	(x=0X43DD7340);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD734A);
	op_stkvar	(x,	1);
	set_cmt	(0X43DD734D,	"a3",	0);
	set_cmt	(0X43DD734E,	"a2",	0);
	create_insn	(x=0X43DD736E);
	op_stkvar	(x,	0);
	make_array	(0X43DD737E,	0X2);
	create_insn	(0X43DD7380);
	create_insn	(x=0X43DD7383);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD738A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD73AE);
	op_hex		(x,	1);
	create_insn	(0X43DD73B5);
	make_array	(0X43DD73BB,	0X5);
	create_insn	(0X43DD73C0);
	create_insn	(x=0X43DD73C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD73CB);
	op_hex		(x,	1);
	set_cmt	(0X43DD73F1,	"a3",	0);
	set_cmt	(0X43DD73F2,	"a2",	0);
	set_cmt	(0X43DD73F3,	"this",	0);
	make_array	(0X43DD7406,	0XA);
	create_insn	(0X43DD7410);
	create_insn	(x=0X43DD7415);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD7428);
	op_hex		(x,	1);
	create_insn	(x=0X43DD742E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7435);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7441);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7446);
	op_hex		(x,	1);
	create_insn	(x=0X43DD744B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7453);
	op_hex		(x,	1);
	create_insn	(x=0X43DD745C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7472);
	op_hex		(x,	1);
	create_insn	(x=0X43DD747D);
	op_hex		(x,	1);
	create_insn	(x=0X43DD748C);
	op_stkvar	(x,	0);
	create_insn	(0X43DD7491);
	create_insn	(x=0X43DD7498);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD74A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD74A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD74AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD74B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD74B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD74C3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD74CB);
	op_stkvar	(x,	1);
	create_insn	(0X43DD74DC);
	create_insn	(x=0X43DD74E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD74EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD74F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD74FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD750C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD750F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7522);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7525);
	op_stkvar	(x,	0);
	make_array	(0X43DD753B,	0X5);
	create_insn	(0X43DD7540);
	create_insn	(x=0X43DD7545);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD7558);
	op_hex		(x,	1);
	create_insn	(x=0X43DD755E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7565);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7571);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7576);
	op_hex		(x,	1);
	create_insn	(x=0X43DD757B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7583);
	op_hex		(x,	1);
	create_insn	(x=0X43DD758C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD75A2);
	op_hex		(x,	1);
	create_insn	(x=0X43DD75AD);
	op_hex		(x,	1);
	create_insn	(x=0X43DD75BC);
	op_stkvar	(x,	0);
	create_insn	(0X43DD75C1);
	create_insn	(x=0X43DD75C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD75D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD75D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD75DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD75E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD75E9);
	op_hex		(x,	1);
	create_insn	(x=0X43DD75EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD75F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7603);
	op_stkvar	(x,	1);
	create_insn	(0X43DD7614);
	create_insn	(x=0X43DD761B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7627);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD762F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7637);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7644);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7647);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD765A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD765D);
	op_stkvar	(x,	0);
	make_array	(0X43DD7673,	0XD);
	create_insn	(0X43DD7680);
	create_insn	(x=0X43DD7691);
	op_hex		(x,	1);
	create_insn	(x=0X43DD76C3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD76C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD76CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD76D7);
	op_stkvar	(x,	1);
	create_insn	(0X43DD76E8);
	make_array	(0X43DD76EE,	0X2);
	create_insn	(0X43DD76F0);
	create_insn	(x=0X43DD76F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD76F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD76FE);
	op_stkvar	(x,	1);
	make_array	(0X43DD7721,	0XF);
	create_insn	(0X43DD7730);
	create_insn	(x=0X43DD7733);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7736);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD773A);
	op_stkvar	(x,	1);
	make_array	(0X43DD7764,	0XC);
	create_insn	(0X43DD7770);
	create_insn	(x=0X43DD7773);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD777A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7783);
	op_hex		(x,	1);
	create_insn	(0X43DD7788);
	create_insn	(x=0X43DD7793);
	op_hex		(x,	1);
	set_cmt	(0X43DD779B,	"Size",	0);
	create_insn	(x=0X43DD77A3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD77AD);
	op_hex		(x,	1);
	create_insn	(0X43DD77B7);
	set_cmt	(0X43DD77C1,	"Size",	0);
	create_insn	(x=0X43DD77C7);
	op_hex		(x,	1);
	create_insn	(0X43DD77CE);
	make_array	(0X43DD77D4,	0XC);
	create_insn	(x=0X43DD77E0);
	op_hex		(x,	1);
	make_array	(0X43DD77E6,	0XA);
	create_insn	(0X43DD77F0);
	make_array	(0X43DD780C,	0X4);
	create_insn	(0X43DD7810);
	create_insn	(x=0X43DD7813);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7817);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7828);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD782B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7842);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD784D);
	op_hex		(x,	1);
	create_insn	(0X43DD785F);
	create_insn	(x=0X43DD7871);
	op_hex		(x,	1);
	create_insn	(0X43DD7883);
	create_insn	(x=0X43DD7885);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7887);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD788F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD789D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD78AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD78B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD78BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD78C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD78CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD78CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD78D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD78E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD78E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD78EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD78EE);
	op_hex		(x,	1);
	create_insn	(x=0X43DD78F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7919);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD791C);
	op_hex		(x,	1);
	create_insn	(0X43DD792C);
	create_insn	(x=0X43DD793B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD793E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7946);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7949);
	op_hex		(x,	1);
	create_insn	(x=0X43DD794F);
	op_stkvar	(x,	1);
	create_insn	(0X43DD795F);
	make_array	(0X43DD7964,	0XC);
	create_insn	(0X43DD7970);
	make_array	(0X43DD7998,	0X8);
	create_insn	(x=0X43DD79A0);
	op_hex		(x,	1);
	make_array	(0X43DD79A6,	0XA);
	create_insn	(0X43DD79B0);
	create_insn	(x=0X43DD79B3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD79B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD79BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD79D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD79E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD79EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD79F5);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7A53);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7A5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7A63);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7A68);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7A71);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7A79);
	op_stkvar	(x,	1);
	make_array	(0X43DD7A85,	0XB);
	create_insn	(0X43DD7A90);
	create_insn	(x=0X43DD7A93);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7A99);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7AA3);
	op_hex		(x,	1);
	create_insn	(0X43DD7AA8);
	create_insn	(x=0X43DD7AB3);
	op_hex		(x,	1);
	set_cmt	(0X43DD7ABB,	"Size",	0);
	create_insn	(x=0X43DD7AC3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7ACD);
	op_hex		(x,	1);
	create_insn	(0X43DD7AD7);
	set_cmt	(0X43DD7AE1,	"Size",	0);
	create_insn	(x=0X43DD7AE7);
	op_hex		(x,	1);
	create_insn	(0X43DD7AEE);
	make_array	(0X43DD7AF4,	0XC);
	create_insn	(0X43DD7B00);
	create_insn	(x=0X43DD7B03);
	op_stkvar	(x,	1);
	make_array	(0X43DD7B37,	0X9);
	create_insn	(0X43DD7B40);
	create_insn	(x=0X43DD7B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7B94);
	op_hex		(x,	1);
	make_array	(0X43DD7B9C,	0X4);
	create_insn	(0X43DD7BA0);
	create_insn	(x=0X43DD7BDC);
	op_hex		(x,	1);
	create_insn	(0X43DD7BFA);
	create_byte	(0X43DD7C00);
	make_array	(0X43DD7C00,	0X10);
	create_insn	(0X43DD7C10);
	create_insn	(x=0X43DD7C13);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7C17);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7C1F);
	op_hex		(x,	1);
	make_array	(0X43DD7C26,	0XA);
	create_insn	(0X43DD7C30);
	create_insn	(x=0X43DD7C48);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7C4F);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7C5B);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7C81);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7C87);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7C95);
	op_stkvar	(x,	1);
	create_insn	(0X43DD7CA6);
	make_array	(0X43DD7CAC,	0X4);
	create_insn	(0X43DD7CB0);
	create_insn	(x=0X43DD7CB5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD7CC8);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7CCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7CD5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7CE1);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7CE6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7CEB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7CF3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7CFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7D12);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7D1D);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7D2C);
	op_stkvar	(x,	0);
	create_insn	(0X43DD7D31);
	create_insn	(x=0X43DD7D38);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7D43);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7D46);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7D4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7D55);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7D58);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7D5B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7D62);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7D6C);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7D6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7D77);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7D87);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7D8A);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7D8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7D93);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7D9B);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7D9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7DA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7DB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7DB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7DC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7DCC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7DD4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7DD7);
	op_stkvar	(x,	0);
	make_array	(0X43DD7DED,	0X3);
	create_insn	(0X43DD7DF0);
	create_insn	(0X43DD7E35);
	make_array	(0X43DD7E42,	0XE);
	create_insn	(0X43DD7E50);
	set_cmt	(0X43DD7E87,	"a3",	0);
	set_cmt	(0X43DD7E88,	"a2",	0);
	set_cmt	(0X43DD7E89,	"this",	0);
	create_insn	(0X43DD7E98);
	make_array	(0X43DD7E9D,	0X3);
	create_insn	(0X43DD7EA0);
	create_insn	(x=0X43DD7EA3);
	op_hex		(x,	1);
	set_cmt	(0X43DD7EBC,	"num",	0);
	create_insn	(x=0X43DD7EC1);
	op_stkvar	(x,	1);
	set_cmt	(0X43DD7EC7,	"value",	0);
	set_cmt	(0X43DD7EC9,	"pointer",	0);
	create_insn	(x=0X43DD7ECF);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7ED2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7EDC);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7EEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7EFD);
	op_stkvar	(x,	0);
	create_insn	(0X43DD7F11);
	create_insn	(x=0X43DD7F12);
	op_hex		(x,	1);
	make_array	(0X43DD7F1C,	0X4);
	create_insn	(0X43DD7F20);
	create_insn	(x=0X43DD7F25);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD7F38);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7F3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7F41);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD7F4E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7F58);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7F69);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7F74);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7F79);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7F88);
	op_stkvar	(x,	0);
	create_insn	(0X43DD7F8D);
	create_insn	(x=0X43DD7F95);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7F9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7FA9);
	op_hex		(x,	1);
	create_insn	(0X43DD7FAE);
	create_insn	(x=0X43DD7FB9);
	op_hex		(x,	1);
	set_cmt	(0X43DD7FC1,	"Size",	0);
	create_insn	(x=0X43DD7FC7);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7FD5);
	op_hex		(x,	1);
	create_insn	(0X43DD7FDD);
	set_cmt	(0X43DD7FE1,	"Size",	0);
	create_insn	(x=0X43DD7FE7);
	op_hex		(x,	1);
	create_insn	(x=0X43DD7FEC);
	op_stkvar	(x,	0);
	create_insn	(0X43DD7FF1);
	create_insn	(x=0X43DD7FF3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD7FF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8000);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8020);
	op_hex		(x,	1);
	create_insn	(0X43DD8025);
	create_insn	(x=0X43DD8043);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8046);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD805F);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8089);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8092);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD809E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD80AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD80BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD80C1);
	op_stkvar	(x,	0);
	make_array	(0X43DD80D7,	0X9);
	create_insn	(0X43DD80E0);
	create_insn	(0X43DD810A);
	make_array	(0X43DD8117,	0X9);
	create_insn	(0X43DD8120);
	set_name	(0X43DD8120,	"C_SDK::CommonUtil::StrCopy");
	create_insn	(x=0X43DD8128);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8140);
	op_stkvar	(x,	0);
	create_insn	(0X43DD8166);
	create_insn	(x=0X43DD816D);
	op_hex		(x,	1);
	create_insn	(x=0X43DD817E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD818C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD818F);
	op_hex		(x,	1);
	make_array	(0X43DD81A1,	0XF);
	create_insn	(0X43DD81B0);
	create_insn	(x=0X43DD81B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD81BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD81E1);
	op_hex		(x,	1);
	create_insn	(0X43DD81E8);
	make_array	(0X43DD81EE,	0X2);
	create_insn	(0X43DD81F0);
	set_cmt	(0X43DD8201,	"buffer",	0);
	set_cmt	(0X43DD8203,	"bufferPointer",	0);
	set_cmt	(0X43DD820D,	"pulCrc",	0);
	set_cmt	(0X43DD8215,	"buffer",	0);
	set_cmt	(0X43DD8217,	"bufferPointer",	0);
	set_cmt	(0X43DD821A,	"pulCrc",	0);
	set_cmt	(0X43DD8222,	"buffer",	0);
	set_cmt	(0X43DD8224,	"bufferPointer",	0);
	set_cmt	(0X43DD8227,	"pulCrc",	0);
	set_cmt	(0X43DD822F,	"buffer",	0);
	set_cmt	(0X43DD8231,	"bufferPointer",	0);
	set_cmt	(0X43DD8234,	"pulCrc",	0);
	set_cmt	(0X43DD823C,	"buffer",	0);
	set_cmt	(0X43DD823E,	"bufferPointer",	0);
	set_cmt	(0X43DD8241,	"pulCrc",	0);
	set_cmt	(0X43DD8249,	"buffer",	0);
	set_cmt	(0X43DD824B,	"bufferPointer",	0);
	set_cmt	(0X43DD824E,	"pulCrc",	0);
	set_cmt	(0X43DD8256,	"buffer",	0);
	set_cmt	(0X43DD8258,	"bufferPointer",	0);
	set_cmt	(0X43DD825B,	"pulCrc",	0);
	set_cmt	(0X43DD8263,	"buffer",	0);
	set_cmt	(0X43DD8265,	"bufferPointer",	0);
	set_cmt	(0X43DD8268,	"pulCrc",	0);
	set_cmt	(0X43DD8270,	"buffer",	0);
	set_cmt	(0X43DD8272,	"bufferPointer",	0);
	set_cmt	(0X43DD8275,	"pulCrc",	0);
	set_cmt	(0X43DD827D,	"buffer",	0);
	set_cmt	(0X43DD827F,	"bufferPointer",	0);
	set_cmt	(0X43DD8282,	"pulCrc",	0);
	set_cmt	(0X43DD828A,	"buffer",	0);
	set_cmt	(0X43DD828C,	"bufferPointer",	0);
	set_cmt	(0X43DD828F,	"pulCrc",	0);
	set_cmt	(0X43DD8297,	"buffer",	0);
	set_cmt	(0X43DD8299,	"bufferPointer",	0);
	set_cmt	(0X43DD829C,	"pulCrc",	0);
	create_insn	(x=0X43DD82A7);
	op_hex		(x,	1);
	make_array	(0X43DD82B4,	0XC);
	create_insn	(0X43DD82C0);
	make_array	(0X43DD8368,	0X8);
	create_insn	(0X43DD8370);
	set_name	(0X43DD8370,	"C_SDK::Hash::CRC32::ProcessBuffer");
	create_insn	(x=0X43DD8378);
	op_stkvar	(x,	1);
	set_cmt	(0X43DD8380,	"switch 8 cases ",	0);
	set_cmt	(0X43DD8385,	"switch jump",	0);
	create_insn	(x=0X43DD8385);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DD838C,	"jumptable 43DD8385 default case",	1);
	create_insn	(0X43DD838C);
	set_name	(0X43DD838C,	"def_43DD8385");
	create_insn	(x=0X43DD838E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD83AA);
	op_hex		(x,	1);
	create_insn	(x=0X43DD83BD);
	op_hex		(x,	1);
	create_insn	(x=0X43DD83D0);
	op_hex		(x,	1);
	create_insn	(x=0X43DD83DD);
	op_hex		(x,	1);
	create_insn	(x=0X43DD83E9);
	op_hex		(x,	1);
	create_insn	(x=0X43DD83F6);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8403);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8412);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8427);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8434);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8441);
	op_hex		(x,	1);
	create_insn	(x=0X43DD844E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD845D);
	op_hex		(x,	1);
	set_cmt	(0X43DD8465,	"jumptable 43DD8385 case 7",	1);
	create_insn	(0X43DD8465);
	create_insn	(x=0X43DD846D);
	op_hex		(x,	1);
	set_cmt	(0X43DD8478,	"jumptable 43DD8385 case 6",	1);
	create_insn	(x=0X43DD8480);
	op_hex		(x,	1);
	set_cmt	(0X43DD848B,	"jumptable 43DD8385 case 5",	1);
	create_insn	(x=0X43DD8493);
	op_hex		(x,	1);
	set_cmt	(0X43DD849E,	"jumptable 43DD8385 case 4",	1);
	create_insn	(x=0X43DD84A3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD84B2);
	op_hex		(x,	1);
	create_insn	(x=0X43DD84BF);
	op_hex		(x,	1);
	create_insn	(x=0X43DD84CC);
	op_hex		(x,	1);
	set_cmt	(0X43DD84DB,	"jumptable 43DD8385 case 3",	1);
	create_insn	(0X43DD84DB);
	create_insn	(x=0X43DD84E3);
	op_hex		(x,	1);
	set_cmt	(0X43DD84EE,	"jumptable 43DD8385 case 2",	1);
	create_insn	(x=0X43DD84F6);
	op_hex		(x,	1);
	set_cmt	(0X43DD8501,	"jumptable 43DD8385 case 1",	1);
	create_insn	(x=0X43DD8509);
	op_hex		(x,	1);
	set_cmt	(0X43DD8513,	"jumptable 43DD8385 case 0",	1);
	make_array	(0X43DD851A,	0X2);
	set_cmt	(0X43DD851C,	"jump table for switch statement",	0);
	create_dword	(x=0X43DD851C);
	make_array	(x,	0X8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DD851C,	"jpt_43DD8385");
	make_array	(0X43DD853C,	0X4);
	create_insn	(0X43DD8540);
	make_array	(0X43DD857B,	0X5);
	create_insn	(0X43DD8580);
	create_insn	(x=0X43DD8585);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DD8598);
	op_hex		(x,	1);
	create_insn	(x=0X43DD859E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD85A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD85AA);
	op_hex		(x,	1);
	create_insn	(x=0X43DD85B2);
	op_hex		(x,	1);
	create_insn	(x=0X43DD85C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD85CB);
	op_hex		(x,	1);
	create_insn	(x=0X43DD85D0);
	op_hex		(x,	1);
	create_insn	(x=0X43DD85DF);
	op_stkvar	(x,	0);
	create_insn	(0X43DD85E4);
	create_insn	(x=0X43DD85EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD85F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8600);
	op_hex		(x,	1);
	create_insn	(0X43DD8605);
	create_insn	(x=0X43DD8610);
	op_hex		(x,	1);
	set_cmt	(0X43DD8618,	"Size",	0);
	create_insn	(x=0X43DD861E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD862C);
	op_hex		(x,	1);
	create_insn	(0X43DD8634);
	set_cmt	(0X43DD8638,	"Size",	0);
	create_insn	(x=0X43DD863E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8643);
	op_stkvar	(x,	0);
	create_insn	(0X43DD8648);
	create_insn	(x=0X43DD864A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD864D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8657);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD865A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8666);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8677);
	op_hex		(x,	1);
	create_insn	(0X43DD867C);
	create_insn	(x=0X43DD8688);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD869B);
	op_hex		(x,	1);
	create_insn	(x=0X43DD869E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD86B0);
	op_hex		(x,	1);
	create_insn	(x=0X43DD86D4);
	op_hex		(x,	1);
	create_insn	(x=0X43DD86D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD86E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD86EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD86ED);
	op_stkvar	(x,	1);
	create_insn	(0X43DD8700);
	create_insn	(x=0X43DD8706);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8709);
	op_stkvar	(x,	0);
	create_insn	(0X43DD8720);
	create_insn	(x=0X43DD8731);
	op_hex		(x,	1);
	create_insn	(x=0X43DD873D);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8763);
	op_hex		(x,	1);
	create_insn	(0X43DD8785);
	make_array	(0X43DD878C,	0X4);
	create_insn	(0X43DD8790);
	make_array	(0X43DD87E5,	0XB);
	create_insn	(0X43DD87F0);
	make_array	(0X43DD8804,	0XC);
	create_insn	(0X43DD8810);
	make_array	(0X43DD8836,	0XA);
	create_insn	(0X43DD8840);
	create_insn	(x=0X43DD8843);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8866);
	op_hex		(x,	1);
	create_insn	(x=0X43DD886A);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8877);
	op_hex		(x,	1);
	create_insn	(x=0X43DD887B);
	op_hex		(x,	1);
	create_insn	(0X43DD88A6);
	create_insn	(0X43DD88B7);
	create_insn	(x=0X43DD88DC);
	op_hex		(x,	1);
	create_insn	(x=0X43DD88E4);
	op_hex		(x,	1);
	set_cmt	(0X43DD8902,	"_DWORD",	0);
	create_insn	(0X43DD8902);
	set_cmt	(0X43DD890A,	"_DWORD",	0);
	create_insn	(0X43DD8910);
	make_array	(0X43DD8938,	0X8);
	create_insn	(0X43DD8940);
	make_array	(0X43DD897E,	0X2);
	create_insn	(0X43DD8980);
	make_array	(0X43DD89AA,	0X6);
	create_insn	(0X43DD89B0);
	create_insn	(0X43DD89BF);
	create_insn	(0X43DD89C0);
	set_name	(0X43DD89C0,	"OneTap::Features::Visuals::Chams::PreareMaterialTexture");
	create_insn	(x=0X43DD89C3);
	op_hex		(x,	1);
	create_insn	(x=0X43DD89E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD89E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD89ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD89FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8A17);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8A1E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8A2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8A39);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8A3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8A4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8A55);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8A67);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8A87);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8A8E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8A9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8AAB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD8AB5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8ACB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8AD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8ADB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8AE5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8AEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8AFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8B17);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8B1E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8B2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8B39);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8B3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8B4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8B55);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8B5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8B6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8B87);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8B8E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8B9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8BB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8BBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8BD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8BDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8BE4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8BEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8BF8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8C0B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8C27);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8C2E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8C3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8C49);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8C4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8C58);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8C75);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8C79);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8C80);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8CA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8CBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8CC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8CD6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8CE0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8CEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8CF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8D06);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8D27);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8D2E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8D3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8D49);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8D4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8D5B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8D65);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8D97);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8D9E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8DAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8DC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8DCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8DE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8DEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8DF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8DFE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8E08);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8E12);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8E31);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8E3F);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8E4F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8E5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8E60);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8E6C);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD8E76);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DD8E80);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8E92);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8EA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8EAE);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8EBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8ED3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8EDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8EF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8EFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8F04);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8F21);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8F25);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8F2C);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8F4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8F56);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8F66);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8F87);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8F8E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD8F9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8FB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8FBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8FD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8FDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD8FE4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD8FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9001);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9005);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD900C);
	op_hex		(x,	1);
	create_insn	(x=0X43DD901C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD902E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9036);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD903F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD904F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9060);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9067);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD906E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD907E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9093);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD909A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD90A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD90B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD90BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD90C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD90D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD90E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD90E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD90EB);
	op_hex		(x,	1);
	create_insn	(x=0X43DD90FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9106);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD910C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9115);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD911B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9128);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9135);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9139);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9140);
	op_hex		(x,	1);
	create_insn	(x=0X43DD9150);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9165);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD916C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD917A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9185);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9190);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9196);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD91A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD91B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD91B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD91BD);
	op_hex		(x,	1);
	create_insn	(x=0X43DD91CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD91D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD91DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD91E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD91ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD91FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9210);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9214);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD921B);
	op_hex		(x,	1);
	create_insn	(x=0X43DD922B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9240);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9247);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9255);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9260);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD926B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9271);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9280);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9290);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9294);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD929B);
	op_hex		(x,	1);
	create_insn	(x=0X43DD92AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD92B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD92BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD92C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD92D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD92E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD92E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD92EC);
	op_hex		(x,	1);
	create_insn	(x=0X43DD92FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9311);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9318);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9326);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9331);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD933C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9342);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9351);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9360);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9364);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD936B);
	op_hex		(x,	1);
	create_insn	(x=0X43DD937B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9386);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD938C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9395);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD93A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD93B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD93B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD93BD);
	op_hex		(x,	1);
	create_insn	(x=0X43DD93CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD93E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD93E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD93F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9402);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD940D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9413);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9422);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9430);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9434);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD943B);
	op_hex		(x,	1);
	create_insn	(x=0X43DD944B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9456);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD945C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9468);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9472);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD947B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD948B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD94A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD94A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD94AE);
	op_hex		(x,	1);
	create_insn	(x=0X43DD94BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD94D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD94DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD94E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD94F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD94FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9504);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9513);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9520);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9524);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD952B);
	op_hex		(x,	1);
	create_insn	(x=0X43DD953B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9546);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD954C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9558);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9562);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD956C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD957C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9590);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9597);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD959E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD95AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD95C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD95CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD95D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD95E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD95EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD95F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9603);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9610);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9614);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD961B);
	op_hex		(x,	1);
	create_insn	(x=0X43DD962B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9636);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD963C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9645);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD964B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9658);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9665);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9669);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9670);
	op_hex		(x,	1);
	create_insn	(x=0X43DD9680);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9695);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD969C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD96AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD96B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD96C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD96C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD96D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD96E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD96E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD96ED);
	op_hex		(x,	1);
	create_insn	(x=0X43DD96FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9708);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD970E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD971A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9724);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9734);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9741);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9748);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD974F);
	op_hex		(x,	1);
	create_insn	(x=0X43DD975F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9774);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD977B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9789);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9794);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD979F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD97A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD97B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD97C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD97C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD97CC);
	op_hex		(x,	1);
	create_insn	(x=0X43DD97DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD97E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD97ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD97F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9803);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9813);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9820);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9827);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD982E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD983E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9853);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD985A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9868);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9873);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD987E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9884);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9893);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD98A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD98A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD98AB);
	op_hex		(x,	1);
	create_insn	(x=0X43DD98BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD98C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD98CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD98D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD98E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD98EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD98FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9910);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9917);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD991E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD992E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9943);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD994A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9958);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9963);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD996E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9974);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9983);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9990);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9994);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD999B);
	op_hex		(x,	1);
	create_insn	(x=0X43DD99AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD99B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD99BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD99C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD99CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD99D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD99E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD99E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD99F0);
	op_hex		(x,	1);
	create_insn	(x=0X43DD9A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9A15);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9A2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9A35);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9A46);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9A4D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9A5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9A7B);
	op_hex		(x,	1);
	create_insn	(x=0X43DD9A8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9A96);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9A9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9AA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9AB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9ABC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9AC5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9AD5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9AE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9AE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9AF0);
	op_hex		(x,	1);
	create_insn	(x=0X43DD9B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9B15);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9B2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9B35);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9B46);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9B55);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9B62);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9B66);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9B6D);
	op_hex		(x,	1);
	create_insn	(x=0X43DD9B7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9B8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9B97);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9BA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9BA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9BB1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9BC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9BD7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9BDE);
	op_hex		(x,	1);
	create_insn	(x=0X43DD9BEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9C03);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9C0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9C23);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9C2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9C34);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9C51);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9C55);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9C5C);
	op_hex		(x,	1);
	create_insn	(x=0X43DD9C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9C77);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9C7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9C89);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9C93);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9CA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9CC7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9CCE);
	op_hex		(x,	1);
	create_insn	(x=0X43DD9CDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9CF3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9CFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9D13);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9D1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9D24);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9D2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9D38);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9D4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9D67);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9D6E);
	op_hex		(x,	1);
	create_insn	(x=0X43DD9D7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9D98);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9DA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9DB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9DC7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9DCE);
	op_hex		(x,	1);
	create_insn	(x=0X43DD9DDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9DF3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9DFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9E13);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9E1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9E24);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9E33);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9E4B);
	op_hex		(x,	1);
	create_insn	(x=0X43DD9E5B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9E6D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9E75);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9E7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9E86);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9E8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9E9B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9EA8);
	op_stkvar	(x,	1);
	create_insn	(0X43DD9EB5);
	create_insn	(x=0X43DD9EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9ED7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9EDE);
	op_hex		(x,	1);
	create_insn	(x=0X43DD9EEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9F03);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9F0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9F23);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9F5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9F64);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9F6E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9F78);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9F8F);
	op_stkvar	(x,	1);
	create_insn	(0X43DD9F9C);
	create_insn	(x=0X43DD9FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9FB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9FBE);
	op_hex		(x,	1);
	create_insn	(x=0X43DD9FCD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DD9FDE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9FE1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9FE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DD9FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA001);
	op_stkvar	(x,	1);
	create_insn	(0X43DDA00E);
	create_insn	(x=0X43DDA015);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA025);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA029);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA030);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA040);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA04B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA04E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDA059);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA064);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA06F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA075);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA07F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA089);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA092);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA09E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA0AB);
	op_stkvar	(x,	1);
	create_insn	(0X43DDA0B8);
	create_insn	(x=0X43DDA0BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA0D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA0D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA0DE);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA0EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA0F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA0FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA102);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA10C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA116);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA120);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA12C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA138);
	op_stkvar	(x,	1);
	create_insn	(0X43DDA145);
	create_insn	(x=0X43DDA149);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA160);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA167);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA16E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA17D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA192);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA195);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA1A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA1B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA1E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA1ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA1F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA205);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA20C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA216);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA220);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA229);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA235);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA242);
	op_stkvar	(x,	1);
	create_insn	(0X43DDA24F);
	create_insn	(x=0X43DDA256);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA270);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA277);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA27E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA28E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA29A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDA2A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA2C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA2C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA2D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA2E9);
	op_stkvar	(x,	1);
	create_insn	(0X43DDA2F6);
	create_insn	(x=0X43DDA2FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA310);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA317);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA31E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA32E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA339);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA33F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA342);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA34C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA356);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA360);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA36C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA378);
	op_stkvar	(x,	1);
	create_insn	(0X43DDA385);
	create_insn	(x=0X43DDA389);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA3A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA3A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA3AE);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA3BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA3C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA3CB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDA3D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA3E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA3EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA3F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA3FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA40A);
	op_stkvar	(x,	1);
	create_insn	(0X43DDA417);
	create_insn	(x=0X43DDA41E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA430);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA434);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA43B);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA44B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA456);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA45C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA45F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA469);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA473);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA47D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA489);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA495);
	op_stkvar	(x,	1);
	create_insn	(0X43DDA4A2);
	create_insn	(x=0X43DDA4A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA4C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA4CE);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA4DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA4F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA4F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA4FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA509);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA514);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA51F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA525);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA530);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA53D);
	op_stkvar	(x,	1);
	create_insn	(0X43DDA54A);
	create_insn	(x=0X43DDA551);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA561);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA565);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA56C);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA57C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA587);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA58D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA590);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA59A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA5A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA5AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA5BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA5C0);
	op_stkvar	(x,	1);
	create_insn	(0X43DDA5D4);
	create_insn	(x=0X43DDA5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA5E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA5EE);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA5FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA613);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA616);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA61D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA62A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA635);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA668);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA66E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA675);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA681);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA690);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA6A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA6A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA6AE);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA6BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA6C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA6CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA6DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA6EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA6F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA710);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA717);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA71E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA72E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA73B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDA745);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA750);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA75B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA761);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA76C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA77B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA790);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA794);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA79B);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA7AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA7B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA7BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA7C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA7D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA7EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA800);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA807);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA80E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA81E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA833);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA83A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA848);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA853);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA865);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA86B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA872);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA87C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA886);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA894);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA8A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA8B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA8BE);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA8CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA8D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA8DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA8EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA8FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA909);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA920);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA927);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA92E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA93E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA953);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA95A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA968);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA973);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA97E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA984);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA98E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA998);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA9A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDA9B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA9BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA9D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA9D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA9DE);
	op_hex		(x,	1);
	create_insn	(x=0X43DDA9EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA9F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDA9FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAA0B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAA15);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAA24);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAA33);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAA40);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAA47);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAA4E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDAA5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAA73);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAA7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAA88);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAA93);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAA9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAAA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAAAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAABE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAAD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAAD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAADB);
	op_hex		(x,	1);
	create_insn	(x=0X43DDAAEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAAF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAAFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAB08);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDAB12);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAB1C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAB25);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAB31);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAB40);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAB50);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAB57);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAB5E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDAB6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAB83);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAB8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAB98);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDABA3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDABAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDABB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDABBE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDABC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDABD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDABDD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDABEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAC00);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAC07);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAC0E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDAC1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAC30);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAC38);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAC42);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAC49);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAC58);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAC67);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAC80);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAC87);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAC8E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDAC9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDACB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDACBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDACC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDACD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAD06);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAD0C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAD13);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAD1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAD2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAD37);
	op_stkvar	(x,	1);
	create_insn	(0X43DDAD44);
	create_insn	(x=0X43DDAD4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAD60);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAD67);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAD6E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDAD7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAD89);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAD8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAD9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDADA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDADAF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDADBD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDADC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDADD5);
	op_stkvar	(x,	1);
	create_insn	(0X43DDADE2);
	create_insn	(x=0X43DDADE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAE00);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAE07);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAE0E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDAE1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAE2B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDAE35);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAE40);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAE4B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAE51);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAE5B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAE65);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAE6E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAE7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAE89);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAEA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAEAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAEB5);
	op_hex		(x,	1);
	create_insn	(x=0X43DDAEC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAEDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAEE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAEF5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAF02);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAF0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAF1C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAF29);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAF36);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAF43);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAF50);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAF5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAF6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAF75);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAF7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDAF8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAFA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAFAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAFB5);
	op_hex		(x,	1);
	create_insn	(x=0X43DDAFC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAFD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDAFDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAFE7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDAFFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB008);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB015);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB022);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB02F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB03C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB049);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB056);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB063);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB070);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB07D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB088);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB08E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB09D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB0B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB0BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB0C5);
	op_hex		(x,	1);
	create_insn	(x=0X43DDB0D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB0EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB0F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB105);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB112);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB11F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB12C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB139);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB144);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB14A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB159);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB171);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB17D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB185);
	op_hex		(x,	1);
	create_insn	(x=0X43DDB195);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB1A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDB1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB1B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB1CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB1D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB1D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB1E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB1F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB1FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB204);
	op_hex		(x,	1);
	create_insn	(x=0X43DDB214);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB22A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB237);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB244);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB251);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB25E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB26B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB278);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB285);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB292);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB29F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB2AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB2B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB2C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB2D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB2DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB2E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB2F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB301);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB30D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB315);
	op_hex		(x,	1);
	create_insn	(x=0X43DDB325);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB332);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDB33C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB347);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB35B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB368);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB375);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB382);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB38F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB39C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB3A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB3B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB3C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB3D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB3DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB3E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB3F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB401);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB40D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB415);
	op_hex		(x,	1);
	create_insn	(x=0X43DDB425);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB43B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB448);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB455);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB462);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB46F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB47C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB489);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB496);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB4A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB4B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB4BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB4CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB4D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB4E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB4F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB4FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB50B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB518);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB525);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB532);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB53F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB54C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB559);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB564);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB56A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB579);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB591);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB59D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB5A5);
	op_hex		(x,	1);
	create_insn	(x=0X43DDB5B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB5C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDB5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB5D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB5EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB5F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB605);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB612);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB61F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB62C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB639);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB646);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB653);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB660);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB66D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB67A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB687);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB692);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB698);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB6A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB6B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB6C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB6C9);
	op_hex		(x,	1);
	create_insn	(x=0X43DDB6D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB6EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB6F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB703);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB70D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB717);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB721);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB729);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB72F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB73B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB751);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB75A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB762);
	op_hex		(x,	1);
	create_insn	(x=0X43DDB772);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB77F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDB789);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB794);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	create_insn	(x=0X43DDB7A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB7B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB7C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB7CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB7DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB7E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB7F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB803);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB810);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB81D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB82A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB837);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB844);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB84F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB855);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB864);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB872);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB87E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB886);
	op_hex		(x,	1);
	create_insn	(x=0X43DDB896);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB8AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB8B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB8C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB8D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB8E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB8ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB8FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB907);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB914);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB921);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB92E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB939);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB93F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDB94E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB961);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB96D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB975);
	op_hex		(x,	1);
	create_insn	(x=0X43DDB985);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB992);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDB99C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB9A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDB9B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DDB9C3,	0XD);
	create_insn	(0X43DDB9D0);
	create_insn	(x=0X43DDB9D3);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBA20);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBA25);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBA32);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBA37);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBA44);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBA51);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBA5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBA68);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBA71);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBA78);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBA7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBA82);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBA89);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBA90);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBA97);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBA9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBAA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBAB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBAC7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBACA);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBACD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBAD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBADE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBAE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBAE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBAED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBAF1);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBAF8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBAFD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBB03);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBB0F);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBB12);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBB1D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBB20);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBB27);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBB2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBB34);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBB3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBB46);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBB4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBB4D);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBB50);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBB54);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBB61);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBB66);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBB69);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBB70);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBB74);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBB77);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBB7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBB89);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBB8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBB97);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBB9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBBA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBBA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBBAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBBB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBBC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBBC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBBC7);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBBCA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBBCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBBDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBBE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBBE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBBEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBBEE);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBBF1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBBF7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBC03);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBC06);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBC11);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBC17);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBC1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBC25);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBC2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBC36);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBC3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBC50);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBC54);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBC5A);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBC5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBC61);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBC71);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBC75);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBC81);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBC8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBC93);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBC99);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBCA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBCBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBCC2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBCCB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBCD2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBCDC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBCE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBD07);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBD0D);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBD10);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBD17);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBD27);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBD2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBD3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBD45);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBD4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBD52);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBD60);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBD6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBD74);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBD7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBD82);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBD89);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBD93);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBD9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBDB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBDB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBDBA);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBDBD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBDD4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBDDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBDE7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBDF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBDF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBDFF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBE0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBE2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBE37);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBE44);
	op_stkvar	(x,	1);
	make_array	(0X43DDBE56,	0XA);
	create_insn	(0X43DDBE60);
	set_name	(0X43DDBE60,	"OneTap::Features::Visuals::AsusWalls");
	create_insn	(x=0X43DDBE63);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBE66);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBE6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBE72);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBE9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBEA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBECB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBED1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBED9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBEE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBEE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBEEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBEEE);
	op_stkvar	(x,	0);
	create_insn	(0X43DDBF02);
	create_insn	(x=0X43DDBF04);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBF15);
	op_stkvar	(x,	0);
	make_array	(0X43DDBF5A,	0X6);
	create_insn	(0X43DDBF60);
	create_insn	(x=0X43DDBF63);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBF66);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBF76);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBF7F);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBF82);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBF8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBFAB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBFB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBFB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBFC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDBFDC);
	op_hex		(x,	1);
	create_insn	(x=0X43DDBFE1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBFE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBFED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDBFFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC009);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC017);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC01A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC021);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC028);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC02F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC036);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC03D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC044);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC050);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC054);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC057);
	op_hex		(x,	1);
	create_insn	(x=0X43DDC05A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC05E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC06B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC06F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC074);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC077);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC081);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC08B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC09D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC0A2);
	op_hex		(x,	1);
	create_insn	(x=0X43DDC0A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC0AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC0B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC0B6);
	op_stkvar	(x,	1);
	create_insn	(0X43DDC0C0);
	create_insn	(x=0X43DDC0CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC0D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC0D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC0DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC0E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC0ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC0F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC0FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC106);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC10A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC10D);
	op_hex		(x,	1);
	create_insn	(x=0X43DDC110);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC114);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC121);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC125);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC12A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC12D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC137);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC141);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC14B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC150);
	op_hex		(x,	1);
	create_insn	(x=0X43DDC153);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC159);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC15E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC164);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC16D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC17B);
	op_stkvar	(x,	1);
	make_array	(0X43DDC18C,	0X4);
	create_insn	(0X43DDC190);
	create_insn	(x=0X43DDC193);
	op_hex		(x,	1);
	create_insn	(x=0X43DDC1BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC1DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC1EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC1F3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC223);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DDC234,	0XC);
	create_insn	(0X43DDC240);
	create_insn	(0X43DDC250);
	create_insn	(x=0X43DDC255);
	op_hex		(x,	1);
	create_insn	(x=0X43DDC25A);
	op_hex		(x,	1);
	create_insn	(x=0X43DDC25D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC28D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC29C);
	op_hex		(x,	1);
	create_insn	(x=0X43DDC2C3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC2CF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC2DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC2E2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC2ED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC2F5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC2FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC309);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC311);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC31D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC328);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC330);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC33B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC343);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC34B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC357);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC35F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC36B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC376);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC37E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC389);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC391);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC399);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC3A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC3AD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC3B9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC3C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC3CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC3D7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC3DF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC3E7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC3F3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC3FB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC407);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC412);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC41A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC425);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC42D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC435);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC441);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC449);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC455);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC460);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC468);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC473);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC47B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC483);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC48F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC4A7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DDC4AE,	0X2);
	create_insn	(0X43DDC4B0);
	create_insn	(0X43DDC4BC);
	create_insn	(x=0X43DDC4C1);
	op_hex		(x,	1);
	create_insn	(x=0X43DDC4C6);
	op_hex		(x,	1);
	create_insn	(x=0X43DDC4C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC4F6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC4FB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC50D);
	op_hex		(x,	1);
	create_insn	(x=0X43DDC543);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC54B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC553);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC55F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC567);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC573);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC57E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC586);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC591);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC599);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC5A1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC5AD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC5B5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC5C1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC5CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC5D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC5DF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC5E7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC5EF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC5FB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC603);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC60F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC61A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC622);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC62D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC635);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC63D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC649);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC651);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC65D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC668);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC670);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC67B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC683);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC68B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC697);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC69F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC6AB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC6B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC6BE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC6C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC6D1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC6D9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC6E5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC6ED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC6F9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC704);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDC70C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDC724);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DDC72A,	0X6);
	create_insn	(0X43DDC730);
	create_insn	(x=0X43DDC73B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC74A);
	op_stkvar	(x,	0);
	make_array	(0X43DDC757,	0X9);
	create_insn	(0X43DDC760);
	create_insn	(0X43DDC780);
	create_insn	(x=0X43DDC783);
	op_hex		(x,	1);
	create_insn	(x=0X43DDC786);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDC78C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC791);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDC7A4);
	op_hex		(x,	1);
	create_insn	(x=0X43DDC7A7);
	op_hex		(x,	1);
	make_array	(0X43DDC7B3,	0XD);
	create_insn	(x=0X43DDC7C0);
	op_hex		(x,	1);
	make_array	(0X43DDC7C6,	0XA);
	create_insn	(x=0X43DDC7D0);
	op_hex		(x,	1);
	make_array	(0X43DDC7D6,	0XA);
	create_insn	(x=0X43DDC7E0);
	op_hex		(x,	1);
	make_array	(0X43DDC7E6,	0XA);
	create_insn	(x=0X43DDC7F0);
	op_hex		(x,	1);
	make_array	(0X43DDC7F6,	0XA);
	create_insn	(x=0X43DDC800);
	op_hex		(x,	1);
	make_array	(0X43DDC806,	0XA);
	create_insn	(x=0X43DDC810);
	op_hex		(x,	1);
	make_array	(0X43DDC816,	0XA);
	create_insn	(x=0X43DDC820);
	op_hex		(x,	1);
	make_array	(0X43DDC826,	0XA);
	create_insn	(x=0X43DDC830);
	op_hex		(x,	1);
	make_array	(0X43DDC836,	0XA);
	create_insn	(x=0X43DDC840);
	op_hex		(x,	1);
	make_array	(0X43DDC846,	0XA);
	create_insn	(x=0X43DDC850);
	op_hex		(x,	1);
	make_array	(0X43DDC856,	0XA);
	create_insn	(x=0X43DDC860);
	op_hex		(x,	1);
	make_array	(0X43DDC866,	0XA);
	create_insn	(x=0X43DDC870);
	op_hex		(x,	1);
	make_array	(0X43DDC876,	0XA);
	create_insn	(x=0X43DDC880);
	op_hex		(x,	1);
	make_array	(0X43DDC886,	0XA);
	create_insn	(x=0X43DDC890);
	op_hex		(x,	1);
	make_array	(0X43DDC896,	0XA);
	create_insn	(x=0X43DDC8A0);
	op_hex		(x,	1);
	make_array	(0X43DDC8A6,	0XA);
	create_insn	(x=0X43DDC8B0);
	op_hex		(x,	1);
	make_array	(0X43DDC8B6,	0XA);
	create_insn	(x=0X43DDC8C0);
	op_hex		(x,	1);
	make_array	(0X43DDC8C6,	0XA);
	create_insn	(x=0X43DDC8D0);
	op_hex		(x,	1);
	make_array	(0X43DDC8D6,	0XA);
	create_insn	(x=0X43DDC8E0);
	op_hex		(x,	1);
	make_array	(0X43DDC8E6,	0XA);
	create_insn	(x=0X43DDC8F0);
	op_hex		(x,	1);
	make_array	(0X43DDC8F6,	0XA);
	create_insn	(x=0X43DDC900);
	op_hex		(x,	1);
	make_array	(0X43DDC906,	0XA);
	create_insn	(x=0X43DDC910);
	op_hex		(x,	1);
	make_array	(0X43DDC916,	0XA);
	create_insn	(x=0X43DDC920);
	op_hex		(x,	1);
	make_array	(0X43DDC926,	0XA);
	create_insn	(x=0X43DDC930);
	op_hex		(x,	1);
	make_array	(0X43DDC936,	0XA);
	create_insn	(x=0X43DDC940);
	op_hex		(x,	1);
	make_array	(0X43DDC946,	0XA);
	create_insn	(x=0X43DDC950);
	op_hex		(x,	1);
	make_array	(0X43DDC956,	0XA);
	create_insn	(0X43DDC960);
	create_insn	(x=0X43DDC97D);
	op_stkvar	(x,	1);
	make_array	(0X43DDC9B3,	0XD);
	create_insn	(0X43DDC9C0);
	set_name	(0X43DDC9C0,	"C_SDK::Player::Animation::UpdateCollisionBounds");
	make_array	(0X43DDC9D7,	0X9);
	create_insn	(0X43DDC9E0);
	make_array	(0X43DDC9F7,	0X9);
	create_insn	(0X43DDCA00);
	make_array	(0X43DDCA09,	0X7);
	create_insn	(0X43DDCA10);
	make_array	(0X43DDCA13,	0XD);
	create_insn	(x=0X43DDCA20);
	op_hex		(x,	1);
	make_array	(0X43DDCA26,	0XA);
	create_insn	(x=0X43DDCA30);
	op_hex		(x,	1);
	make_array	(0X43DDCA36,	0XA);
	create_insn	(x=0X43DDCA40);
	op_hex		(x,	1);
	make_array	(0X43DDCA46,	0XA);
	create_insn	(x=0X43DDCA50);
	op_hex		(x,	1);
	make_array	(0X43DDCA56,	0XA);
	create_insn	(x=0X43DDCA60);
	op_hex		(x,	1);
	make_array	(0X43DDCA66,	0XA);
	set_cmt	(0X43DDCA70,	"index",	0);
	create_insn	(0X43DDCA70);
	make_array	(0X43DDCA7C,	0X4);
	create_insn	(0X43DDCA80);
	set_cmt	(0X43DDCA8E,	"Size",	0);
	set_cmt	(0X43DDCABD,	"Size",	0);
	set_cmt	(0X43DDCB61,	"num",	0);
	set_cmt	(0X43DDCB66,	"value",	0);
	set_cmt	(0X43DDCB80,	"pointer",	0);
	create_insn	(x=0X43DDCBD6);
	op_hex		(x,	1);
	make_array	(0X43DDCD8A,	0X6);
	create_insn	(0X43DDCD90);
	create_insn	(x=0X43DDCDB9);
	op_hex		(x,	1);
	create_insn	(x=0X43DDCDD6);
	op_hex		(x,	1);
	make_array	(0X43DDCDDC,	0X4);
	create_insn	(0X43DDCDE0);
	set_cmt	(0X43DDCE1E,	"Size",	0);
	create_insn	(x=0X43DDCE2B);
	op_hex		(x,	1);
	make_array	(0X43DDCE52,	0XE);
	create_insn	(0X43DDCE60);
	create_insn	(0X43DDCE8B);
	make_array	(0X43DDCE9C,	0X4);
	create_insn	(0X43DDCEA0);
	create_insn	(0X43DDCEEC);
	make_array	(0X43DDCEFA,	0X6);
	create_insn	(0X43DDCF00);
	create_insn	(x=0X43DDCF0E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDCF1A);
	op_hex		(x,	1);
	create_insn	(x=0X43DDCF46);
	op_hex		(x,	1);
	create_insn	(0X43DDCF59);
	set_cmt	(0X43DDCF5F,	"Trap to Debugger",	0);
	create_insn	(x=0X43DDCF5F);
	op_hex		(x,	0);
	create_insn	(0X43DDCF60);
	create_insn	(x=0X43DDCF63);
	op_hex		(x,	1);
	create_insn	(0X43DDCFA1);
	create_insn	(x=0X43DDCFB5);
	op_hex		(x,	1);
	create_insn	(0X43DDCFBA);
	create_insn	(x=0X43DDCFC5);
	op_hex		(x,	1);
	set_cmt	(0X43DDCFCD,	"Size",	0);
	create_insn	(x=0X43DDCFD5);
	op_hex		(x,	1);
	create_insn	(x=0X43DDCFE3);
	op_hex		(x,	1);
	create_insn	(0X43DDCFEB);
	set_cmt	(0X43DDCFEF,	"Size",	0);
	create_insn	(x=0X43DDCFF5);
	op_hex		(x,	1);
	create_insn	(0X43DDCFFA);
	create_insn	(x=0X43DDD021);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD024);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD04B);
	op_hex		(x,	1);
	set_cmt	(0X43DDD04E,	"num",	0);
	set_cmt	(0X43DDD054,	"value",	0);
	set_cmt	(0X43DDD056,	"pointer",	0);
	set_cmt	(0X43DDD05C,	"num",	0);
	set_cmt	(0X43DDD060,	"value",	0);
	set_cmt	(0X43DDD062,	"pointer",	0);
	create_insn	(0X43DDD06A);
	create_insn	(x=0X43DDD09D);
	op_hex		(x,	1);
	set_cmt	(0X43DDD0A0,	"num",	0);
	set_cmt	(0X43DDD0A1,	"value",	0);
	set_cmt	(0X43DDD0A6,	"pointer",	0);
	create_insn	(x=0X43DDD0B5);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD0BF);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD0E3);
	op_hex		(x,	1);
	create_insn	(0X43DDD0F5);
	create_byte	(0X43DDD100);
	make_array	(0X43DDD100,	0X10);
	create_insn	(0X43DDD110);
	create_insn	(x=0X43DDD11E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD148);
	op_hex		(x,	1);
	create_insn	(0X43DDD15B);
	make_array	(0X43DDD161,	0XF);
	create_insn	(0X43DDD170);
	create_insn	(x=0X43DDD17E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD18A);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD1B6);
	op_hex		(x,	1);
	create_insn	(0X43DDD1C9);
	set_cmt	(0X43DDD1CF,	"Trap to Debugger",	0);
	create_insn	(x=0X43DDD1CF);
	op_hex		(x,	0);
	create_insn	(0X43DDD1D0);
	create_insn	(x=0X43DDD216);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD228);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD24C);
	op_hex		(x,	1);
	create_insn	(0X43DDD25F);
	make_array	(0X43DDD265,	0XB);
	create_insn	(0X43DDD270);
	create_insn	(x=0X43DDD2B3);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD2C5);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD2E9);
	op_hex		(x,	1);
	create_insn	(0X43DDD2FC);
	make_array	(0X43DDD302,	0XE);
	create_insn	(0X43DDD310);
	create_insn	(x=0X43DDD313);
	op_hex		(x,	1);
	create_insn	(0X43DDD351);
	create_insn	(x=0X43DDD35B);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD368);
	op_hex		(x,	1);
	create_insn	(0X43DDD36D);
	create_insn	(x=0X43DDD378);
	op_hex		(x,	1);
	set_cmt	(0X43DDD380,	"Size",	0);
	create_insn	(x=0X43DDD388);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD396);
	op_hex		(x,	1);
	create_insn	(0X43DDD39E);
	set_cmt	(0X43DDD3A2,	"Size",	0);
	create_insn	(x=0X43DDD3A8);
	op_hex		(x,	1);
	create_insn	(0X43DDD3AD);
	create_insn	(x=0X43DDD3D4);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD3D7);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD403);
	op_hex		(x,	1);
	set_cmt	(0X43DDD406,	"num",	0);
	set_cmt	(0X43DDD40C,	"value",	0);
	set_cmt	(0X43DDD40E,	"pointer",	0);
	set_cmt	(0X43DDD414,	"num",	0);
	set_cmt	(0X43DDD418,	"value",	0);
	set_cmt	(0X43DDD41A,	"pointer",	0);
	create_insn	(0X43DDD422);
	create_insn	(x=0X43DDD44E);
	op_hex		(x,	1);
	set_cmt	(0X43DDD451,	"num",	0);
	set_cmt	(0X43DDD452,	"value",	0);
	set_cmt	(0X43DDD457,	"pointer",	0);
	create_insn	(x=0X43DDD466);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD470);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD494);
	op_hex		(x,	1);
	create_insn	(0X43DDD4A6);
	make_array	(0X43DDD4B1,	0XF);
	create_insn	(0X43DDD4C0);
	create_insn	(x=0X43DDD4C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDD4C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDD4CC);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD4F0);
	op_hex		(x,	1);
	create_insn	(0X43DDD4F7);
	make_array	(0X43DDD4FD,	0X3);
	create_insn	(0X43DDD500);
	create_insn	(x=0X43DDD503);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDD50D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDD531);
	op_hex		(x,	1);
	create_insn	(0X43DDD538);
	make_array	(0X43DDD53E,	0X2);
	create_insn	(0X43DDD540);
	create_insn	(x=0X43DDD54C);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD570);
	op_hex		(x,	1);
	create_insn	(0X43DDD577);
	make_array	(0X43DDD57D,	0X3);
	create_insn	(0X43DDD580);
	set_name	(0X43DDD580,	"C_SDK::Player::Weapon::IsWeapon");
	make_array	(0X43DDD58A,	0X6);
	create_insn	(0X43DDD590);
	set_cmt	(0X43DDD598,	"num",	0);
	set_cmt	(0X43DDD59D,	"value",	0);
	set_cmt	(0X43DDD627,	"pointer",	0);
	set_cmt	(0X43DDD62D,	"num",	0);
	set_cmt	(0X43DDD642,	"value",	0);
	set_cmt	(0X43DDD644,	"pointer",	0);
	create_insn	(x=0X43DDD667);
	op_hex		(x,	1);
	create_insn	(0X43DDD6E0);
	create_insn	(x=0X43DDD6E5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDD6F8);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD70F);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD717);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD72E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD733);
	op_hex		(x,	1);
	create_insn	(0X43DDD745);
	create_insn	(x=0X43DDD760);
	op_hex		(x,	1);
	create_insn	(0X43DDD765);
	create_insn	(x=0X43DDD770);
	op_hex		(x,	1);
	set_cmt	(0X43DDD778,	"Size",	0);
	create_insn	(x=0X43DDD77E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD78C);
	op_hex		(x,	1);
	create_insn	(0X43DDD797);
	set_cmt	(0X43DDD79B,	"Size",	0);
	create_insn	(x=0X43DDD7A1);
	op_hex		(x,	1);
	create_insn	(0X43DDD7AB);
	create_insn	(0X43DDD7F0);
	create_insn	(x=0X43DDD805);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD829);
	op_hex		(x,	1);
	create_insn	(0X43DDD856);
	create_insn	(0X43DDD86F);
	create_insn	(0X43DDD898);
	make_array	(0X43DDD8B7,	0X9);
	create_insn	(0X43DDD8C0);
	create_insn	(x=0X43DDD8C5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDD8D8);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD8F1);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD8F5);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD902);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD921);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD92C);
	op_hex		(x,	1);
	create_insn	(0X43DDD940);
	create_insn	(0X43DDD9C1);
	create_insn	(x=0X43DDD9ED);
	op_hex		(x,	1);
	create_insn	(x=0X43DDD9F9);
	op_hex		(x,	1);
	create_insn	(x=0X43DDDA21);
	op_hex		(x,	1);
	create_insn	(0X43DDDA52);
	make_array	(0X43DDDA71,	0XF);
	create_insn	(0X43DDDA80);
	make_array	(0X43DDDABC,	0X4);
	create_insn	(0X43DDDAC0);
	create_insn	(x=0X43DDDAC5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDDAD8);
	op_hex		(x,	1);
	create_insn	(x=0X43DDDAF1);
	op_hex		(x,	1);
	create_insn	(x=0X43DDDAF6);
	op_hex		(x,	1);
	create_insn	(x=0X43DDDB03);
	op_hex		(x,	1);
	create_insn	(x=0X43DDDB1E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDDB29);
	op_hex		(x,	1);
	create_insn	(0X43DDDB3D);
	create_insn	(x=0X43DDDB4B);
	op_hex		(x,	1);
	create_insn	(x=0X43DDDB58);
	op_hex		(x,	1);
	create_insn	(0X43DDDB5D);
	create_insn	(x=0X43DDDB68);
	op_hex		(x,	1);
	set_cmt	(0X43DDDB70,	"Size",	0);
	create_insn	(x=0X43DDDB76);
	op_hex		(x,	1);
	create_insn	(x=0X43DDDB84);
	op_hex		(x,	1);
	create_insn	(0X43DDDB8C);
	set_cmt	(0X43DDDB90,	"Size",	0);
	create_insn	(x=0X43DDDB96);
	op_hex		(x,	1);
	create_insn	(0X43DDDBA0);
	create_insn	(x=0X43DDDBC2);
	op_hex		(x,	1);
	create_insn	(0X43DDDBDB);
	create_insn	(x=0X43DDDC06);
	op_hex		(x,	1);
	create_insn	(x=0X43DDDC12);
	op_hex		(x,	1);
	create_insn	(x=0X43DDDC3A);
	op_hex		(x,	1);
	create_insn	(0X43DDDC66);
	make_array	(0X43DDDC85,	0XB);
	create_insn	(0X43DDDC90);
	make_array	(0X43DDDCD8,	0X8);
	create_insn	(0X43DDDCE0);
	create_insn	(x=0X43DDDCE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDDCE9);
	op_hex		(x,	1);
	create_insn	(x=0X43DDDCF3);
	op_hex		(x,	1);
	create_insn	(0X43DDDCF8);
	create_insn	(x=0X43DDDD03);
	op_hex		(x,	1);
	set_cmt	(0X43DDDD0B,	"Size",	0);
	create_insn	(x=0X43DDDD13);
	op_hex		(x,	1);
	create_insn	(x=0X43DDDD1D);
	op_hex		(x,	1);
	create_insn	(0X43DDDD27);
	set_cmt	(0X43DDDD31,	"Size",	0);
	create_insn	(x=0X43DDDD37);
	op_hex		(x,	1);
	create_insn	(0X43DDDD3E);
	make_array	(0X43DDDD44,	0XC);
	create_insn	(0X43DDDD50);
	make_array	(0X43DDDDBA,	0X6);
	create_insn	(0X43DDDDC0);
	create_insn	(0X43DDDE30);
	create_insn	(x=0X43DDDE5D);
	op_hex		(x,	1);
	make_array	(0X43DDDEA5,	0XB);
	create_insn	(0X43DDDEB0);
	make_array	(0X43DDDEC6,	0XA);
	create_insn	(x=0X43DDDED0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DDDEDB,	0X5);
	create_insn	(0X43DDDEE0);
	create_insn	(x=0X43DDDEE3);
	op_hex		(x,	1);
	set_cmt	(0X43DDDEE6,	"switch 10 cases ",	0);
	set_cmt	(0X43DDDEF4,	"switch jump",	0);
	create_insn	(x=0X43DDDEF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DDDEFB,	"jumptable 43DDDEF4 case 1",	1);
	create_insn	(0X43DDDEFB);
	create_insn	(x=0X43DDDEFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDDF01);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDF08);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDF0C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDF13);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDF1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDF25);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDDF29);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDDF2C);
	op_hex		(x,	1);
	create_insn	(x=0X43DDDF2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDF33);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDDF40);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDF44);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDDF49);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDDF53);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDDF63,	"jumptable 43DDDEF4 case 2",	1);
	create_insn	(0X43DDDF63);
	create_insn	(x=0X43DDDF66);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDDF70);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDF76);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDF7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDF84);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDF90);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDDF94);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDDF97);
	op_hex		(x,	1);
	create_insn	(x=0X43DDDF9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDF9E);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDDFAD,	"jumptable 43DDDEF4 case 3",	1);
	create_insn	(0X43DDDFAD);
	create_insn	(x=0X43DDDFB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDDFBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDFC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDFC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDFCF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDFE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDDFE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDDFE7);
	op_hex		(x,	1);
	create_insn	(x=0X43DDDFEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDDFEE);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE000,	"jumptable 43DDDEF4 case 4",	1);
	create_insn	(0X43DDE000);
	create_insn	(x=0X43DDE003);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE00D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE014);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE018);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE01F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE026);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE031);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE035);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE038);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE03B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE03F);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE051,	"jumptable 43DDDEF4 case 5",	1);
	create_insn	(0X43DDE051);
	create_insn	(x=0X43DDE054);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE05E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE06B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE072);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE079);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE084);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE088);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE08B);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE08E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE092);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE0A4,	"jumptable 43DDDEF4 case 6",	1);
	create_insn	(0X43DDE0A4);
	create_insn	(x=0X43DDE0A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE0AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE0B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE0B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE0BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE0C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE0CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE0D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE0D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE0DC);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE0DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE0E3);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE0F5,	"jumptable 43DDDEF4 case 7",	1);
	create_insn	(0X43DDE0F5);
	create_insn	(x=0X43DDE0F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE0FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE109);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE10F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE116);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE11D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE130);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE134);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE137);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE13A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE13E);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE150,	"jumptable 43DDDEF4 case 10",	1);
	create_insn	(0X43DDE150);
	create_insn	(x=0X43DDE153);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE156);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE15D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE161);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE168);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE16F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE180);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE184);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE187);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE18A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE18E);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE1A0,	"jumptable 43DDDEF4 default case, cases 8,9",	1);
	create_insn	(0X43DDE1A0);
	set_name	(0X43DDE1A0,	"def_43DDDEF4");
	create_insn	(x=0X43DDE1A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE1A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE1AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE1B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE1BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE1C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE1D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE1D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE1D7);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE1DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE1DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE1EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE1EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE1F9);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE219,	"a3",	0);
	set_cmt	(0X43DDE21A,	"a2",	0);
	set_cmt	(0X43DDE21B,	"this",	0);
	create_insn	(x=0X43DDE222);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE22A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE255);
	op_hex		(x,	1);
	set_cmt	(0X43DDE260,	"jump table for switch statement",	0);
	create_dword	(x=0X43DDE260);
	make_array	(x,	0XA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DDE260,	"jpt_43DDDEF4");
	make_array	(0X43DDE288,	0X8);
	create_insn	(0X43DDE290);
	create_insn	(x=0X43DDE293);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE299);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE2A2,	"num",	0);
	set_cmt	(0X43DDE2A7,	"value",	0);
	set_cmt	(0X43DDE2A9,	"pointer",	0);
	create_insn	(x=0X43DDE2B7);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE2BF);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE2D3,	"_DWORD",	0);
	create_insn	(x=0X43DDE2D3);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE2D6,	"_DWORD",	0);
	create_insn	(x=0X43DDE2D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE2E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE2F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE30E);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE314,	"_DWORD",	0);
	set_cmt	(0X43DDE316,	"_DWORD",	0);
	set_cmt	(0X43DDE318,	"_DWORD",	0);
	set_cmt	(0X43DDE31A,	"_DWORD",	0);
	set_cmt	(0X43DDE31B,	"_DWORD",	0);
	set_cmt	(0X43DDE31D,	"_DWORD",	0);
	create_insn	(x=0X43DDE330);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE337);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE33E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE346);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE349);
	op_stkvar	(x,	0);
	create_insn	(0X43DDE350);
	create_insn	(x=0X43DDE352);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE35A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE35E);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE361,	"_DWORD",	0);
	create_insn	(x=0X43DDE362);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE366,	"_DWORD",	0);
	set_cmt	(0X43DDE367,	"_DWORD",	0);
	create_insn	(x=0X43DDE369);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE36F,	"_DWORD",	0);
	set_cmt	(0X43DDE370,	"_DWORD",	0);
	set_cmt	(0X43DDE372,	"_DWORD",	0);
	create_insn	(x=0X43DDE37E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE382);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE385);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE388);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE38B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE397);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE39A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE3A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE3A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE3AD);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE3BD);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE3C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE3CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE3D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE3EB);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE3EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE3FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE400);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE406);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE410,	"switch 83 cases ",	0);
	create_insn	(x=0X43DDE410);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE418);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DDE41F,	"switch jump",	0);
	create_insn	(x=0X43DDE41F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DDE426,	"jumptable 43DDE41F cases 10,34,59,92",	1);
	create_insn	(0X43DDE426);
	create_insn	(x=0X43DDE429);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE433);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE436);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE439,	"jumptable 43DDE41F default case, cases 11-33,35-58,60-91",	1);
	set_name	(0X43DDE439,	"def_43DDE41F");
	create_insn	(x=0X43DDE43E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE442);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE445);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE44A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE451);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE45B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE462);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE479);
	op_stkvar	(x,	1);
	create_insn	(0X43DDE494);
	make_array	(0X43DDE499,	0X3);
	set_cmt	(0X43DDE49C,	"jump table for switch statement",	0);
	create_dword	(x=0X43DDE49C);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DDE49C,	"jpt_43DDE41F");
	set_cmt	(0X43DDE4A4,	"indirect table for switch statement",	0);
	create_byte	(0X43DDE4A4);
	make_array	(0X43DDE4A4,	0X53);
	make_array	(0X43DDE4F7,	0X9);
	create_insn	(0X43DDE500);
	create_insn	(x=0X43DDE503);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE51B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE51E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE525);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE52C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE530);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE537);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE53E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE550);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE554);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE557);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE55A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE55E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE56B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE56F);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE572,	"this",	0);
	create_insn	(x=0X43DDE572);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE575);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE58F,	"this",	0);
	create_insn	(x=0X43DDE59B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE5A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE5D0);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE5E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE5E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE5EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE5F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE5F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE5FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE604);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE608);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE60F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE616);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE621);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE625);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE628);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE62B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE62F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE63C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE640);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE643,	"this",	0);
	create_insn	(x=0X43DDE643);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE646);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE660,	"this",	0);
	create_insn	(x=0X43DDE66C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE676);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE6A1);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE6A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE6AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE6B2);
	op_stkvar	(x,	0);
	set_cmt	(0X43DDE6E9,	"propHash",	0);
	set_cmt	(0X43DDE6EE,	"classHash",	0);
	set_cmt	(0X43DDE705,	"interface",	0);
	set_cmt	(0X43DDE70B,	"index",	0);
	create_insn	(x=0X43DDE710);
	op_stkvar	(x,	0);
	set_cmt	(0X43DDE71A,	"this",	0);
	set_cmt	(0X43DDE731,	"propHash",	0);
	set_cmt	(0X43DDE736,	"classHash",	0);
	create_insn	(x=0X43DDE745);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE757,	"propHash",	0);
	set_cmt	(0X43DDE75C,	"classHash",	0);
	set_cmt	(0X43DDE773,	"interface",	0);
	set_cmt	(0X43DDE779,	"index",	0);
	create_insn	(x=0X43DDE77E);
	op_stkvar	(x,	0);
	set_cmt	(0X43DDE788,	"this",	0);
	set_cmt	(0X43DDE7A0,	"propHash",	0);
	set_cmt	(0X43DDE7A5,	"classHash",	0);
	create_insn	(x=0X43DDE7B7);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE7C9,	"propHash",	0);
	set_cmt	(0X43DDE7CE,	"classHash",	0);
	set_cmt	(0X43DDE7E7,	"propHash",	0);
	set_cmt	(0X43DDE7EC,	"classHash",	0);
	create_insn	(x=0X43DDE814);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE828,	"vtable",	0);
	set_cmt	(0X43DDE837,	"vtable",	0);
	set_cmt	(0X43DDE857,	"propHash",	0);
	set_cmt	(0X43DDE85C,	"classHash",	0);
	create_insn	(x=0X43DDE86E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE871);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE87B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE882);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE888);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE88C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE893);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE89A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE8A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE8A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE8AC);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE8AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE8B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE8C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE8C4);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDE8C7,	"this",	0);
	create_insn	(x=0X43DDE8C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE8CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE8E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE8F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE903);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE918);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDE91B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDE91F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDE929);
	op_stkvar	(x,	1);
	make_array	(0X43DDE93C,	0X4);
	create_insn	(0X43DDE940);
	create_insn	(x=0X43DDE943);
	op_hex		(x,	1);
	create_insn	(0X43DDE981);
	create_insn	(x=0X43DDE995);
	op_hex		(x,	1);
	create_insn	(0X43DDE99A);
	create_insn	(x=0X43DDE9A5);
	op_hex		(x,	1);
	set_cmt	(0X43DDE9AD,	"Size",	0);
	create_insn	(x=0X43DDE9B5);
	op_hex		(x,	1);
	create_insn	(x=0X43DDE9C3);
	op_hex		(x,	1);
	create_insn	(0X43DDE9CB);
	set_cmt	(0X43DDE9CF,	"Size",	0);
	create_insn	(x=0X43DDE9D5);
	op_hex		(x,	1);
	create_insn	(0X43DDE9DA);
	create_insn	(x=0X43DDEA01);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEA04);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEA2B);
	op_hex		(x,	1);
	set_cmt	(0X43DDEA2E,	"num",	0);
	set_cmt	(0X43DDEA34,	"value",	0);
	set_cmt	(0X43DDEA36,	"pointer",	0);
	set_cmt	(0X43DDEA3C,	"num",	0);
	set_cmt	(0X43DDEA40,	"value",	0);
	set_cmt	(0X43DDEA42,	"pointer",	0);
	create_insn	(0X43DDEA4A);
	create_insn	(x=0X43DDEA7D);
	op_hex		(x,	1);
	set_cmt	(0X43DDEA80,	"num",	0);
	set_cmt	(0X43DDEA81,	"value",	0);
	set_cmt	(0X43DDEA86,	"pointer",	0);
	create_insn	(x=0X43DDEA95);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEA9F);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEAC3);
	op_hex		(x,	1);
	create_insn	(0X43DDEAD5);
	create_byte	(0X43DDEAE0);
	make_array	(0X43DDEAE0,	0X10);
	create_insn	(0X43DDEAF0);
	create_insn	(x=0X43DDEAF3);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEAFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEB0B);
	op_stkvar	(x,	1);
	create_insn	(0X43DDEB20);
	create_insn	(x=0X43DDEB2F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEB38);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDEB4B,	"Size",	0);
	create_insn	(x=0X43DDEB54);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEB57);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEB76);
	op_stkvar	(x,	1);
	create_insn	(0X43DDEB8D);
	make_array	(0X43DDEB92,	0XE);
	create_insn	(0X43DDEBA0);
	create_insn	(x=0X43DDEBA3);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEBA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEBB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEBBB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEBC2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEBC8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEBD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEBE5);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEBEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEBF1);
	op_stkvar	(x,	1);
	create_insn	(0X43DDEC05);
	create_insn	(x=0X43DDEC19);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEC1C);
	op_hex		(x,	1);
	create_insn	(0X43DDEC2E);
	create_insn	(x=0X43DDEC35);
	op_hex		(x,	1);
	create_insn	(0X43DDEC44);
	create_insn	(x=0X43DDEC55);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEC5B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEC63);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEC67);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEC6E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEC77);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEC7F);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEC86);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEC8D);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEC96);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEC99);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEC9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDECA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDECD0);
	op_hex		(x,	1);
	create_insn	(0X43DDECE0);
	create_insn	(x=0X43DDECED);
	op_hex		(x,	1);
	create_insn	(x=0X43DDECF8);
	op_hex		(x,	1);
	create_insn	(x=0X43DDED01);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDED06);
	op_stkvar	(x,	1);
	create_insn	(0X43DDED1A);
	create_insn	(0X43DDED20);
	create_insn	(x=0X43DDED23);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDED3C);
	op_stkvar	(x,	0);
	make_array	(0X43DDED79,	0X7);
	create_insn	(0X43DDED80);
	create_insn	(x=0X43DDED8F);
	op_stkvar	(x,	1);
	create_insn	(0X43DDEDB5);
	make_array	(0X43DDEDFC,	0X4);
	create_insn	(0X43DDEE00);
	set_name	(0X43DDEE00,	"C_SDK::Player::Controller::IsPlayer");
	make_array	(0X43DDEE0A,	0X6);
	create_insn	(0X43DDEE10);
	create_insn	(x=0X43DDEE15);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DDEE28);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEE2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEE33);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEE44);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEE48);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEE4D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEE55);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEE6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEE74);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEE7F);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEE8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEE92);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEE96);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEE9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEEA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEEA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEEB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEEB5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEEBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEEBF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEEE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEEED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEEF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEEFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEF18);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEF1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEF22);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEF30);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEF3C);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEF64);
	op_hex		(x,	1);
	create_insn	(x=0X43DDEF67);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEF6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEF81);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEF97);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEF9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEFB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEFBF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDEFC5);
	op_stkvar	(x,	0);
	create_insn	(0X43DDEFE6);
	create_insn	(x=0X43DDEFEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDEFEF);
	op_stkvar	(x,	0);
	make_array	(0X43DDF005,	0XB);
	create_insn	(0X43DDF010);
	create_insn	(x=0X43DDF02C);
	op_stkvar	(x,	1);
	make_array	(0X43DDF069,	0X7);
	create_insn	(x=0X43DDF070);
	op_hex		(x,	1);
	make_array	(0X43DDF076,	0XA);
	create_insn	(x=0X43DDF080);
	op_hex		(x,	1);
	make_array	(0X43DDF086,	0XA);
	create_insn	(x=0X43DDF090);
	op_hex		(x,	1);
	make_array	(0X43DDF096,	0XA);
	create_insn	(x=0X43DDF0A0);
	op_hex		(x,	1);
	make_array	(0X43DDF0A6,	0XA);
	create_insn	(x=0X43DDF0B0);
	op_hex		(x,	1);
	make_array	(0X43DDF0B6,	0XA);
	create_insn	(x=0X43DDF0C0);
	op_hex		(x,	1);
	make_array	(0X43DDF0C6,	0XA);
	create_insn	(x=0X43DDF0D0);
	op_hex		(x,	1);
	make_array	(0X43DDF0D6,	0XA);
	create_insn	(x=0X43DDF0E0);
	op_hex		(x,	1);
	make_array	(0X43DDF0E6,	0XA);
	create_insn	(x=0X43DDF0F0);
	op_hex		(x,	1);
	make_array	(0X43DDF0F6,	0XA);
	create_insn	(0X43DDF100);
	create_insn	(x=0X43DDF103);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF106);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF10B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF113);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF116);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF132);
	op_stkvar	(x,	0);
	create_insn	(0X43DDF145);
	create_insn	(x=0X43DDF1A1);
	op_stkvar	(x,	1);
	create_insn	(0X43DDF1B6);
	create_insn	(0X43DDF1C6);
	create_insn	(0X43DDF1D1);
	create_insn	(x=0X43DDF1FE);
	op_stkvar	(x,	1);
	create_insn	(0X43DDF213);
	create_insn	(0X43DDF226);
	create_insn	(0X43DDF230);
	create_insn	(0X43DDF251);
	create_insn	(x=0X43DDF271);
	op_stkvar	(x,	1);
	create_insn	(0X43DDF280);
	create_insn	(0X43DDF28C);
	create_insn	(x=0X43DDF2C0);
	op_stkvar	(x,	1);
	create_insn	(0X43DDF2CF);
	create_insn	(0X43DDF2DA);
	create_insn	(x=0X43DDF2EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF2FC);
	op_stkvar	(x,	1);
	make_array	(0X43DDF305,	0XB);
	create_insn	(x=0X43DDF310);
	op_hex		(x,	1);
	make_array	(0X43DDF316,	0XA);
	create_insn	(x=0X43DDF320);
	op_hex		(x,	1);
	make_array	(0X43DDF326,	0XA);
	create_insn	(x=0X43DDF330);
	op_hex		(x,	1);
	make_array	(0X43DDF336,	0XA);
	create_insn	(0X43DDF340);
	create_insn	(x=0X43DDF343);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF34B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF358);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF35B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF371);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF386);
	op_stkvar	(x,	0);
	create_insn	(0X43DDF38F);
	create_insn	(x=0X43DDF393);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF398);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF3A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF3AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF3B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF3BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF3CE);
	op_hex		(x,	1);
	create_insn	(0X43DDF3DC);
	create_insn	(x=0X43DDF3F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF3F3);
	op_hex		(x,	1);
	create_insn	(0X43DDF405);
	create_insn	(x=0X43DDF40C);
	op_hex		(x,	1);
	create_insn	(0X43DDF41B);
	create_insn	(x=0X43DDF42C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF432);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF436);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF43D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF444);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF447);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF44A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF457);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF45B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF463);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF466);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF48B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF48E);
	op_hex		(x,	1);
	create_insn	(0X43DDF49E);
	create_insn	(x=0X43DDF4AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF4B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF4B6);
	op_hex		(x,	1);
	create_insn	(0X43DDF4C6);
	make_array	(0X43DDF4CB,	0X5);
	create_insn	(0X43DDF4D0);
	set_cmt	(0X43DDF4D3,	"index",	0);
	create_insn	(0X43DDF4E0);
	create_insn	(x=0X43DDF4E3);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF4E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF4EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF4FD);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF507);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF50A);
	op_hex		(x,	1);
	make_array	(0X43DDF516,	0XA);
	create_insn	(0X43DDF520);
	create_insn	(x=0X43DDF52E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF533);
	op_hex		(x,	1);
	make_array	(0X43DDF54D,	0X3);
	create_insn	(0X43DDF550);
	create_insn	(x=0X43DDF553);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF559);
	op_stkvar	(x,	1);
	create_insn	(0X43DDF570);
	create_insn	(x=0X43DDF577);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDF591,	"a3",	0);
	set_cmt	(0X43DDF592,	"a2",	0);
	set_cmt	(0X43DDF593,	"this",	0);
	make_array	(0X43DDF5A1,	0XF);
	create_insn	(0X43DDF5B0);
	set_name	(0X43DDF5B0,	"C_SDK::CommonUtil::IsVTableNull");
	make_array	(0X43DDF5B8,	0X8);
	create_insn	(0X43DDF5C0);
	create_insn	(x=0X43DDF5D2);
	op_hex		(x,	1);
	create_insn	(0X43DDF600);
	make_array	(0X43DDF614,	0XC);
	create_insn	(0X43DDF620);
	make_array	(0X43DDF634,	0XC);
	create_insn	(0X43DDF640);
	set_name	(0X43DDF640,	"C_SDK::Surface::DrawManager::SetDrawColor");
	create_insn	(x=0X43DDF643);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF648);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF64E);
	op_stkvar	(x,	1);
	make_array	(0X43DDF65E,	0X2);
	create_insn	(0X43DDF660);
	set_name	(0X43DDF660,	"std::copy_len");
	create_insn	(x=0X43DDF664);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF680);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDF684,	"num",	0);
	set_cmt	(0X43DDF685,	"value",	0);
	set_cmt	(0X43DDF686,	"pointer",	0);
	create_insn	(x=0X43DDF68F);
	op_hex		(x,	1);
	create_insn	(0X43DDF69E);
	create_insn	(x=0X43DDF6A8);
	op_hex		(x,	1);
	create_insn	(0X43DDF6B9);
	create_insn	(x=0X43DDF6C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DDF6CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF6D4);
	op_stkvar	(x,	1);
	set_cmt	(0X43DDF6D7,	"num",	0);
	set_cmt	(0X43DDF6D8,	"value",	0);
	set_cmt	(0X43DDF6D9,	"pointer",	0);
	create_insn	(x=0X43DDF6E5);
	op_hex		(x,	1);
	create_insn	(0X43DDF6F7);
	make_array	(0X43DDF6FC,	0X4);
	create_insn	(0X43DDF700);
	make_array	(0X43DDF709,	0X7);
	create_insn	(0X43DDF710);
	make_array	(0X43DDF716,	0XA);
	create_insn	(0X43DDF720);
	create_insn	(x=0X43DDF727);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDF738);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF73C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDF74C);
	op_hex		(x,	1);
	make_array	(0X43DDF756,	0XA);
	create_insn	(0X43DDF760);
	create_insn	(x=0X43DDF763);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF76A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDF77A);
	op_hex		(x,	1);
	make_array	(0X43DDF784,	0XC);
	create_insn	(0X43DDF790);
	create_insn	(x=0X43DDF7D3);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF7E5);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF809);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF82A);
	op_hex		(x,	1);
	create_insn	(0X43DDF82F);
	create_insn	(0X43DDF840);
	create_insn	(x=0X43DDF843);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DDF854);
	op_hex		(x,	1);
	create_insn	(0X43DDF859);
	create_insn	(x=0X43DDF864);
	op_hex		(x,	1);
	set_cmt	(0X43DDF86C,	"Size",	0);
	create_insn	(x=0X43DDF874);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF87E);
	op_hex		(x,	1);
	create_insn	(0X43DDF888);
	set_cmt	(0X43DDF892,	"Size",	0);
	create_insn	(x=0X43DDF898);
	op_hex		(x,	1);
	create_insn	(0X43DDF89F);
	make_array	(0X43DDF8A5,	0XB);
	create_insn	(0X43DDF8B0);
	create_insn	(x=0X43DDF8C1);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF8CD);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF8F3);
	op_hex		(x,	1);
	create_insn	(0X43DDF915);
	make_array	(0X43DDF91B,	0X5);
	create_insn	(0X43DDF920);
	make_array	(0X43DDF937,	0X9);
	create_insn	(0X43DDF940);
	make_array	(0X43DDF947,	0X9);
	create_insn	(0X43DDF950);
	create_insn	(x=0X43DDF95C);
	op_hex		(x,	1);
	create_insn	(0X43DDF975);
	create_insn	(x=0X43DDF98C);
	op_hex		(x,	1);
	create_insn	(0X43DDF9AF);
	make_array	(0X43DDF9B8,	0X8);
	create_insn	(0X43DDF9C0);
	create_insn	(x=0X43DDF9C3);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF9E7);
	op_hex		(x,	1);
	create_insn	(x=0X43DDF9EA);
	op_hex		(x,	1);
	make_array	(0X43DDF9F6,	0XA);
	create_insn	(0X43DDFA00);
	create_insn	(x=0X43DDFA09);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDFA39);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFA3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DDFA44);
	make_array	(0X43DDFA4A,	0X6);
	create_insn	(0X43DDFA50);
	create_insn	(x=0X43DDFA53);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFA5F);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFA79);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFA86);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFACF);
	op_hex		(x,	1);
	make_array	(0X43DDFAD8,	0X8);
	create_insn	(0X43DDFAE0);
	create_insn	(x=0X43DDFAEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDFB1E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFB21);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFB25);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDFB38);
	op_hex		(x,	1);
	create_insn	(0X43DDFB42);
	make_array	(0X43DDFB48,	0X8);
	create_insn	(0X43DDFB50);
	create_insn	(x=0X43DDFB5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDFB8C);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFB8F);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFB93);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDFBA6);
	op_hex		(x,	1);
	create_insn	(0X43DDFBB0);
	make_array	(0X43DDFBB6,	0XA);
	create_insn	(0X43DDFBC0);
	create_insn	(x=0X43DDFBC3);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFBCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DDFBDA);
	op_hex		(x,	1);
	make_array	(0X43DDFBE4,	0XC);
	create_insn	(0X43DDFBF0);
	create_insn	(x=0X43DDFC0A);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFC25);
	op_hex		(x,	1);
	create_insn	(0X43DDFC2A);
	create_insn	(x=0X43DDFC35);
	op_hex		(x,	1);
	set_cmt	(0X43DDFC3D,	"Size",	0);
	create_insn	(x=0X43DDFC43);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFC4D);
	op_hex		(x,	1);
	create_insn	(0X43DDFC55);
	set_cmt	(0X43DDFC59,	"Size",	0);
	create_insn	(x=0X43DDFC5F);
	op_hex		(x,	1);
	create_insn	(0X43DDFC66);
	create_insn	(x=0X43DDFC78);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFCAE);
	op_hex		(x,	1);
	create_insn	(0X43DDFCBA);
	create_byte	(0X43DDFCC0);
	make_array	(0X43DDFCC0,	0X10);
	create_insn	(0X43DDFCD0);
	create_insn	(x=0X43DDFCEB);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFD03);
	op_hex		(x,	1);
	set_cmt	(0X43DDFD0B,	"Size",	0);
	create_insn	(x=0X43DDFD13);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFD1D);
	op_hex		(x,	1);
	create_insn	(0X43DDFD25);
	set_cmt	(0X43DDFD29,	"Size",	0);
	create_insn	(x=0X43DDFD2F);
	op_hex		(x,	1);
	create_insn	(0X43DDFD34);
	create_insn	(x=0X43DDFD49);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFD7D);
	op_hex		(x,	1);
	create_insn	(0X43DDFD89);
	set_cmt	(0X43DDFD8F,	"Trap to Debugger",	0);
	create_insn	(x=0X43DDFD8F);
	op_hex		(x,	0);
	create_insn	(0X43DDFD90);
	create_insn	(x=0X43DDFD93);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFDA6);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFDBF);
	op_hex		(x,	1);
	set_cmt	(0X43DDFDC7,	"Size",	0);
	create_insn	(x=0X43DDFDCD);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFDD7);
	op_hex		(x,	1);
	create_insn	(0X43DDFDDF);
	set_cmt	(0X43DDFDE3,	"Size",	0);
	create_insn	(x=0X43DDFDE9);
	op_hex		(x,	1);
	create_insn	(0X43DDFDF0);
	create_insn	(x=0X43DDFE02);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFE36);
	op_hex		(x,	1);
	create_insn	(0X43DDFE42);
	make_array	(0X43DDFE48,	0X8);
	create_insn	(0X43DDFE50);
	create_insn	(x=0X43DDFE53);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFE5F);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFE7D);
	op_hex		(x,	1);
	create_insn	(0X43DDFE82);
	create_insn	(x=0X43DDFE8D);
	op_hex		(x,	1);
	set_cmt	(0X43DDFE95,	"Size",	0);
	create_insn	(x=0X43DDFE9B);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFEA5);
	op_hex		(x,	1);
	create_insn	(0X43DDFEAD);
	set_cmt	(0X43DDFEB1,	"Size",	0);
	create_insn	(x=0X43DDFEB7);
	op_hex		(x,	1);
	create_insn	(0X43DDFEBE);
	create_insn	(x=0X43DDFED3);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFF09);
	op_hex		(x,	1);
	create_insn	(0X43DDFF15);
	make_array	(0X43DDFF1B,	0X5);
	create_insn	(0X43DDFF20);
	create_insn	(x=0X43DDFF23);
	op_hex		(x,	1);
	create_insn	(0X43DDFF54);
	create_insn	(x=0X43DDFF5E);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFF78);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFF7D);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFF97);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFF9F);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFFB7);
	op_hex		(x,	1);
	create_insn	(x=0X43DDFFDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DE0005);
	create_insn	(0X43DE0010);
	create_insn	(x=0X43DE0013);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0016);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0019);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0026);
	op_hex		(x,	1);
	create_insn	(x=0X43DE005D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE00AB);
	op_hex		(x,	1);
	set_cmt	(0X43DE00B5,	"this",	0);
	set_cmt	(0X43DE00C1,	"a3",	0);
	set_cmt	(0X43DE00C7,	"a2",	0);
	create_insn	(x=0X43DE00DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE0119);
	op_hex		(x,	1);
	make_array	(0X43DE0126,	0XA);
	create_insn	(0X43DE0130);
	make_array	(0X43DE014E,	0X2);
	create_insn	(0X43DE0150);
	create_insn	(x=0X43DE0153);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0197);
	op_hex		(x,	1);
	create_insn	(x=0X43DE01BA);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0205);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0225);
	op_hex		(x,	1);
	create_insn	(x=0X43DE025D);
	op_hex		(x,	1);
	create_insn	(0X43DE0294);
	set_cmt	(0X43DE02BE,	"switch 12 cases ",	0);
	create_insn	(x=0X43DE02BE);
	op_hex		(x,	1);
	create_insn	(x=0X43DE02C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DE02CD,	"switch jump",	0);
	create_insn	(x=0X43DE02CD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE02D4,	"jumptable 43DE02CD case 13\njumptable 43DE048E case 13",	1);
	create_insn	(0X43DE02D4);
	create_insn	(x=0X43DE02DC);
	op_hex		(x,	1);
	set_cmt	(0X43DE02E4,	"jumptable 43DE02CD default case, cases 2-12",	1);
	create_insn	(0X43DE02E4);
	set_name	(0X43DE02E4,	"def_43DE02CD");
	create_insn	(x=0X43DE030A);
	op_hex		(x,	1);
	create_insn	(0X43DE0325);
	create_insn	(0X43DE0357);
	create_insn	(0X43DE0397);
	create_insn	(0X43DE03DA);
	create_insn	(0X43DE0434);
	create_insn	(0X43DE0443);
	set_cmt	(0X43DE047F,	"switch 12 cases ",	0);
	create_insn	(x=0X43DE047F);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0487);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DE048E,	"switch jump",	0);
	create_insn	(x=0X43DE048E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE0495,	"jumptable 43DE048E default case, cases 2-12",	1);
	create_insn	(0X43DE0495);
	set_name	(0X43DE0495,	"def_43DE048E");
	create_insn	(x=0X43DE04BB);
	op_hex		(x,	1);
	create_insn	(0X43DE04D6);
	set_cmt	(0X43DE04EF,	"switch 12 cases ",	0);
	create_insn	(x=0X43DE04EF);
	op_hex		(x,	1);
	create_insn	(x=0X43DE04F7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DE04FE,	"switch jump",	0);
	create_insn	(x=0X43DE04FE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE0505,	"jumptable 43DE04FE case 13",	1);
	create_insn	(0X43DE0505);
	create_insn	(x=0X43DE0511);
	op_hex		(x,	1);
	set_cmt	(0X43DE051D,	"jumptable 43DE04FE default case, cases 2-12",	1);
	create_insn	(0X43DE051D);
	set_name	(0X43DE051D,	"def_43DE04FE");
	create_insn	(x=0X43DE059B);
	op_hex		(x,	1);
	create_insn	(0X43DE05D2);
	make_array	(0X43DE05E5,	0X3);
	set_cmt	(0X43DE05E8,	"jump table for switch statement",	0);
	create_dword	(x=0X43DE05E8);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DE05E8,	"jpt_43DE02CD");
	set_cmt	(0X43DE05F0,	"indirect table for switch statement",	0);
	create_byte	(0X43DE05F0);
	make_array	(0X43DE05F0,	0XC);
	set_cmt	(0X43DE05FC,	"jump table for switch statement",	0);
	create_dword	(x=0X43DE05FC);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DE05FC,	"jpt_43DE048E");
	set_cmt	(0X43DE0604,	"indirect table for switch statement",	0);
	create_byte	(0X43DE0604);
	make_array	(0X43DE0604,	0XC);
	set_cmt	(0X43DE0610,	"jump table for switch statement",	0);
	create_dword	(x=0X43DE0610);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DE0610,	"jpt_43DE04FE");
	set_cmt	(0X43DE0618,	"indirect table for switch statement",	0);
	create_byte	(0X43DE0618);
	make_array	(0X43DE0618,	0XC);
	make_array	(0X43DE0624,	0XC);
	create_insn	(0X43DE0630);
	create_insn	(x=0X43DE0633);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0659);
	op_hex		(x,	1);
	create_insn	(x=0X43DE06AF);
	op_hex		(x,	1);
	create_insn	(x=0X43DE06D0);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0710);
	op_hex		(x,	1);
	make_array	(0X43DE0722,	0XE);
	create_insn	(0X43DE0730);
	create_insn	(x=0X43DE074B);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0759);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE0766);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DE0786);
	make_array	(0X43DE07A3,	0XD);
	create_insn	(0X43DE07B0);
	create_insn	(0X43DE07BA);
	make_array	(0X43DE07BD,	0X3);
	create_insn	(0X43DE07C0);
	create_insn	(0X43DE0812);
	make_array	(0X43DE0873,	0XD);
	create_insn	(0X43DE0880);
	create_insn	(x=0X43DE0883);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0886);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0889);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0896);
	op_hex		(x,	1);
	create_insn	(0X43DE08DB);
	set_cmt	(0X43DE08E0,	"switch 35 cases ",	0);
	create_insn	(x=0X43DE08E0);
	op_hex		(x,	1);
	create_insn	(x=0X43DE08E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DE08EF,	"switch jump",	0);
	create_insn	(x=0X43DE08EF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE08F6,	"jumptable 43DE08EF default case, cases 63-93",	1);
	create_insn	(0X43DE08F6);
	set_name	(0X43DE08F6,	"def_43DE08EF");
	set_cmt	(0X43DE0906,	"jumptable 43DE08EF case 60",	1);
	create_insn	(0X43DE0906);
	set_cmt	(0X43DE090F,	"jumptable 43DE08EF case 62",	1);
	create_insn	(0X43DE090F);
	set_cmt	(0X43DE0918,	"jumptable 43DE08EF case 61",	1);
	create_insn	(0X43DE0918);
	set_cmt	(0X43DE0921,	"jumptable 43DE08EF case 94",	1);
	create_insn	(0X43DE0921);
	create_insn	(0X43DE094C);
	create_insn	(0X43DE0963);
	create_insn	(x=0X43DE0979);
	op_hex		(x,	1);
	create_insn	(0X43DE097F);
	create_insn	(x=0X43DE0981);
	op_hex		(x,	1);
	create_insn	(0X43DE0987);
	create_insn	(x=0X43DE0989);
	op_hex		(x,	1);
	create_insn	(x=0X43DE09A6);
	op_hex		(x,	1);
	create_insn	(0X43DE0A04);
	create_insn	(x=0X43DE0A20);
	op_hex		(x,	1);
	create_insn	(0X43DE0A83);
	create_insn	(x=0X43DE0A9F);
	op_hex		(x,	1);
	create_insn	(0X43DE0ADC);
	make_array	(0X43DE0AFA,	0X2);
	set_cmt	(0X43DE0AFC,	"jump table for switch statement",	0);
	create_dword	(x=0X43DE0AFC);
	make_array	(x,	0X5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DE0AFC,	"jpt_43DE08EF");
	set_cmt	(0X43DE0B10,	"indirect table for switch statement",	0);
	create_byte	(0X43DE0B10);
	make_array	(0X43DE0B10,	0X23);
	make_array	(0X43DE0B33,	0XD);
	create_insn	(0X43DE0B40);
	create_insn	(x=0X43DE0B43);
	op_hex		(x,	1);
	set_cmt	(0X43DE0B59,	"switch 12 cases ",	0);
	create_insn	(x=0X43DE0B59);
	op_hex		(x,	1);
	set_cmt	(0X43DE0B65,	"switch jump",	0);
	create_insn	(x=0X43DE0B65);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE0B6C,	"jumptable 43DE0B65 case 2",	1);
	create_insn	(0X43DE0B6C);
	set_cmt	(0X43DE0B7F,	"jumptable 43DE0B65 case 3",	1);
	create_insn	(0X43DE0B7F);
	create_insn	(0X43DE0BA1);
	create_insn	(x=0X43DE0BA5);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0BBC);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0BF1);
	op_hex		(x,	1);
	set_cmt	(0X43DE0C04,	"jumptable 43DE0B65 case 4",	1);
	create_insn	(0X43DE0C04);
	create_insn	(x=0X43DE0C46);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0C4F);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0C51);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0C57);
	op_hex		(x,	1);
	create_insn	(0X43DE0C7D);
	create_insn	(0X43DE0C9A);
	create_insn	(x=0X43DE0CA7);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0CE3);
	op_hex		(x,	1);
	set_cmt	(0X43DE0CF6,	"jumptable 43DE0B65 case 5",	1);
	create_insn	(0X43DE0CF6);
	create_insn	(x=0X43DE0D1B);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0D24);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0D26);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0D33);
	op_hex		(x,	1);
	create_insn	(0X43DE0D52);
	create_insn	(x=0X43DE0D5B);
	op_hex		(x,	1);
	create_insn	(x=0X43DE0D88);
	op_hex		(x,	1);
	set_cmt	(0X43DE0D9B,	"jumptable 43DE0B65 case 6",	1);
	create_insn	(0X43DE0D9B);
	create_insn	(0X43DE0DC3);
	set_cmt	(0X43DE0DE0,	"jumptable 43DE0B65 case 7",	1);
	create_insn	(0X43DE0DE0);
	set_cmt	(0X43DE0E00,	"jumptable 43DE0B65 case 8",	1);
	create_insn	(0X43DE0E00);
	create_insn	(0X43DE0E34);
	set_cmt	(0X43DE0E79,	"jumptable 43DE0B65 case 9",	1);
	create_insn	(0X43DE0E79);
	create_insn	(0X43DE0EAD);
	set_cmt	(0X43DE0EF2,	"jumptable 43DE0B65 case 10",	1);
	create_insn	(0X43DE0EF2);
	create_insn	(0X43DE0F25);
	set_cmt	(0X43DE0F3A,	"jumptable 43DE0B65 case 11",	1);
	create_insn	(0X43DE0F3A);
	create_insn	(0X43DE0F78);
	create_insn	(x=0X43DE0F9F);
	op_hex		(x,	1);
	set_cmt	(0X43DE0FB2,	"jumptable 43DE0B65 case 12",	1);
	create_insn	(0X43DE0FB2);
	set_cmt	(0X43DE0FC8,	"jumptable 43DE0B65 case 13",	1);
	create_insn	(0X43DE0FC8);
	create_insn	(x=0X43DE0FD2);
	op_hex		(x,	1);
	set_cmt	(0X43DE0FD5,	"jumptable 43DE0B65 default case",	1);
	set_name	(0X43DE0FD5,	"def_43DE0B65");
	make_array	(0X43DE0FE2,	0X2);
	set_cmt	(0X43DE0FE4,	"jump table for switch statement",	0);
	create_dword	(x=0X43DE0FE4);
	make_array	(x,	0XC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DE0FE4,	"jpt_43DE0B65");
	make_array	(0X43DE1014,	0XC);
	create_insn	(0X43DE1020);
	create_insn	(x=0X43DE1023);
	op_hex		(x,	1);
	create_insn	(0X43DE106B);
	create_insn	(x=0X43DE1093);
	op_hex		(x,	1);
	create_insn	(0X43DE10A0);
	create_insn	(x=0X43DE10A6);
	op_hex		(x,	1);
	create_insn	(0X43DE10C0);
	make_array	(0X43DE112E,	0X2);
	create_insn	(0X43DE1130);
	create_insn	(x=0X43DE1133);
	op_hex		(x,	1);
	create_insn	(0X43DE1162);
	set_cmt	(0X43DE1179,	"unsigned int",	0);
	create_insn	(x=0X43DE117F);
	op_hex		(x,	1);
	create_insn	(0X43DE11A4);
	create_insn	(x=0X43DE11AC);
	op_hex		(x,	1);
	create_insn	(x=0X43DE11AF);
	op_hex		(x,	1);
	create_insn	(0X43DE1224);
	create_insn	(0X43DE126C);
	create_insn	(x=0X43DE12DB);
	op_hex		(x,	1);
	create_insn	(0X43DE12E0);
	create_insn	(0X43DE130E);
	make_array	(0X43DE1321,	0XF);
	create_insn	(0X43DE1330);
	create_insn	(x=0X43DE1333);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1362);
	op_hex		(x,	1);
	create_insn	(x=0X43DE136B);
	op_hex		(x,	1);
	create_insn	(x=0X43DE136D);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1373);
	op_hex		(x,	1);
	create_insn	(0X43DE139A);
	make_array	(0X43DE13B2,	0XE);
	create_insn	(0X43DE13C0);
	create_insn	(x=0X43DE13C3);
	op_hex		(x,	1);
	create_insn	(0X43DE1411);
	make_array	(0X43DE141B,	0X5);
	create_insn	(0X43DE1420);
	create_insn	(x=0X43DE1423);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1426);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1429);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1436);
	op_hex		(x,	1);
	create_insn	(0X43DE1483);
	create_insn	(0X43DE14AF);
	create_insn	(0X43DE14F6);
	create_insn	(0X43DE1538);
	create_insn	(x=0X43DE155B);
	op_hex		(x,	1);
	create_insn	(x=0X43DE156E);
	op_hex		(x,	1);
	create_insn	(0X43DE1587);
	create_insn	(0X43DE159E);
	create_insn	(x=0X43DE15B0);
	op_hex		(x,	1);
	create_insn	(x=0X43DE15C3);
	op_hex		(x,	1);
	create_insn	(0X43DE15DC);
	make_array	(0X43DE15EC,	0X4);
	create_insn	(0X43DE15F0);
	create_insn	(x=0X43DE15F3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE15F6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE15F9);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1606);
	op_hex		(x,	1);
	create_insn	(0X43DE1653);
	create_insn	(0X43DE167F);
	create_insn	(0X43DE16C6);
	create_insn	(0X43DE1708);
	create_insn	(x=0X43DE1729);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1741);
	op_hex		(x,	1);
	create_insn	(0X43DE175A);
	create_insn	(0X43DE1771);
	create_insn	(x=0X43DE1781);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1799);
	op_hex		(x,	1);
	create_insn	(0X43DE17B2);
	make_array	(0X43DE17C2,	0XE);
	create_insn	(0X43DE17D0);
	create_insn	(x=0X43DE17D3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE17EC);
	op_hex		(x,	1);
	create_insn	(x=0X43DE17F5);
	op_hex		(x,	1);
	create_insn	(x=0X43DE17F7);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1804);
	op_hex		(x,	1);
	make_array	(0X43DE181C,	0X4);
	create_insn	(0X43DE1820);
	create_insn	(x=0X43DE1823);
	op_hex		(x,	1);
	create_insn	(x=0X43DE182C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE1831);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DE187D);
	create_insn	(x=0X43DE18A5);
	op_hex		(x,	1);
	make_array	(0X43DE18B1,	0XF);
	create_insn	(0X43DE18C0);
	create_insn	(0X43DE18F5);
	create_insn	(0X43DE1918);
	make_array	(0X43DE1926,	0XA);
	create_insn	(0X43DE1930);
	create_insn	(x=0X43DE1933);
	op_hex		(x,	1);
	create_insn	(x=0X43DE195E);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1967);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1969);
	op_hex		(x,	1);
	create_insn	(x=0X43DE196F);
	op_hex		(x,	1);
	make_array	(0X43DE198E,	0X2);
	create_insn	(0X43DE1990);
	create_insn	(x=0X43DE1993);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1996);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1999);
	op_hex		(x,	1);
	create_insn	(x=0X43DE19A6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE19D5);
	op_hex		(x,	1);
	create_insn	(x=0X43DE19E8);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1A0F);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1A18);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1A1A);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1A21);
	op_hex		(x,	1);
	create_insn	(0X43DE1A2C);
	create_insn	(x=0X43DE1A5D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE1A62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DE1A95);
	create_insn	(x=0X43DE1A98);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1AA3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1AB5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE1ABD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DE1AF0);
	create_insn	(x=0X43DE1B15);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DE1BA7);
	make_array	(0X43DE1BF1,	0XF);
	create_insn	(0X43DE1C00);
	create_insn	(x=0X43DE1C03);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1C06);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1C09);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1C16);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1C45);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1C58);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1C7F);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1C88);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1C8A);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1C91);
	op_hex		(x,	1);
	create_insn	(0X43DE1C9C);
	create_insn	(x=0X43DE1CCD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE1CD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DE1D05);
	create_insn	(x=0X43DE1D08);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1D13);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1D25);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE1D2D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DE1D60);
	create_insn	(x=0X43DE1D85);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DE1E17);
	make_array	(0X43DE1E61,	0XF);
	create_insn	(0X43DE1E70);
	create_insn	(x=0X43DE1E73);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1E76);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1E79);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1E86);
	op_hex		(x,	1);
	set_cmt	(0X43DE1E90,	"switch 121 cases ",	0);
	create_insn	(x=0X43DE1E99);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DE1EA0,	"switch jump",	0);
	create_insn	(x=0X43DE1EA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE1EA7,	"jumptable 43DE1EA0 cases 0,100",	1);
	create_insn	(0X43DE1EA7);
	create_insn	(x=0X43DE1EAC);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1EC9);
	op_hex		(x,	1);
	create_insn	(0X43DE1F1E);
	set_cmt	(0X43DE1F86,	"jumptable 43DE1EA0 cases 88,120",	1);
	create_insn	(0X43DE1F86);
	create_insn	(x=0X43DE1F8C);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1F8F);
	op_hex		(x,	1);
	create_insn	(x=0X43DE1FB4);
	op_hex		(x,	1);
	create_insn	(0X43DE1FFA);
	set_cmt	(0X43DE2065,	"jumptable 43DE1EA0 cases 66,98",	1);
	create_insn	(0X43DE2065);
	create_insn	(x=0X43DE206B);
	op_hex		(x,	1);
	create_insn	(x=0X43DE206E);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2097);
	op_hex		(x,	1);
	create_insn	(0X43DE20E5);
	set_cmt	(0X43DE214D,	"jumptable 43DE1EA0 case 111",	1);
	create_insn	(0X43DE214D);
	create_insn	(x=0X43DE2152);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2165);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2168);
	op_hex		(x,	1);
	create_insn	(0X43DE21CF);
	set_cmt	(0X43DE2237,	"jumptable 43DE1EA0 case 110",	1);
	create_insn	(0X43DE2237);
	create_insn	(x=0X43DE223C);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2250);
	op_hex		(x,	1);
	create_insn	(x=0X43DE227C);
	op_hex		(x,	1);
	create_insn	(0X43DE22C3);
	set_cmt	(0X43DE2329,	"jumptable 43DE1EA0 default case, cases 1-65,67-87,89-97,99,101-109,112-119",	1);
	set_name	(0X43DE2329,	"def_43DE1EA0");
	make_array	(0X43DE2332,	0X2);
	set_cmt	(0X43DE2334,	"jump table for switch statement",	0);
	create_dword	(x=0X43DE2334);
	make_array	(x,	0X6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DE2334,	"jpt_43DE1EA0");
	set_cmt	(0X43DE234C,	"indirect table for switch statement",	0);
	create_byte	(0X43DE234C);
	make_array	(0X43DE234C,	0X79);
	make_array	(0X43DE23C5,	0XB);
	create_insn	(0X43DE23D0);
	create_insn	(x=0X43DE23D3);
	op_hex		(x,	1);
	create_insn	(0X43DE241F);
	set_cmt	(0X43DE244E,	"num",	0);
	set_cmt	(0X43DE244F,	"value",	0);
	set_cmt	(0X43DE2450,	"pointer",	0);
	create_insn	(x=0X43DE2456);
	op_hex		(x,	1);
	create_insn	(0X43DE2464);
	create_insn	(x=0X43DE246E);
	op_hex		(x,	1);
	set_cmt	(0X43DE2475,	"num",	0);
	set_cmt	(0X43DE2476,	"value",	0);
	set_cmt	(0X43DE2477,	"pointer",	0);
	create_insn	(x=0X43DE2480);
	op_hex		(x,	1);
	set_cmt	(0X43DE248F,	"num",	0);
	set_cmt	(0X43DE2490,	"value",	0);
	set_cmt	(0X43DE2491,	"pointer",	0);
	create_insn	(x=0X43DE2497);
	op_hex		(x,	1);
	create_insn	(0X43DE24A1);
	set_cmt	(0X43DE24AB,	"num",	0);
	set_cmt	(0X43DE24AC,	"value",	0);
	set_cmt	(0X43DE24AD,	"pointer",	0);
	create_insn	(x=0X43DE24B3);
	op_hex		(x,	1);
	create_insn	(0X43DE24BD);
	create_insn	(0X43DE24E0);
	create_insn	(x=0X43DE24E3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE24E6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE24E9);
	op_hex		(x,	1);
	create_insn	(x=0X43DE24F6);
	op_hex		(x,	1);
	set_cmt	(0X43DE2500,	"switch 121 cases ",	0);
	create_insn	(x=0X43DE2509);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DE2510,	"switch jump",	0);
	create_insn	(x=0X43DE2510);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE2517,	"jumptable 43DE2510 cases 0,100",	1);
	create_insn	(0X43DE2517);
	create_insn	(x=0X43DE2524);
	op_hex		(x,	1);
	create_insn	(0X43DE2574);
	set_cmt	(0X43DE25DB,	"jumptable 43DE2510 cases 88,120",	1);
	create_insn	(0X43DE25DB);
	create_insn	(x=0X43DE25E1);
	op_hex		(x,	1);
	create_insn	(x=0X43DE25E4);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2610);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2615);
	op_hex		(x,	1);
	create_insn	(0X43DE265C);
	set_cmt	(0X43DE26C7,	"jumptable 43DE2510 cases 66,98",	1);
	create_insn	(0X43DE26C7);
	create_insn	(x=0X43DE26CD);
	op_hex		(x,	1);
	create_insn	(x=0X43DE26D0);
	op_hex		(x,	1);
	create_insn	(x=0X43DE26F8);
	op_hex		(x,	1);
	create_insn	(x=0X43DE26FD);
	op_hex		(x,	1);
	create_insn	(0X43DE2755);
	set_cmt	(0X43DE27B9,	"jumptable 43DE2510 case 111",	1);
	create_insn	(0X43DE27B9);
	create_insn	(x=0X43DE27C1);
	op_hex		(x,	1);
	create_insn	(x=0X43DE27C6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE27D7);
	op_hex		(x,	1);
	create_insn	(x=0X43DE27DA);
	op_hex		(x,	1);
	create_insn	(0X43DE283E);
	set_cmt	(0X43DE28A2,	"jumptable 43DE2510 case 110",	1);
	create_insn	(0X43DE28A2);
	create_insn	(x=0X43DE28AF);
	op_hex		(x,	1);
	create_insn	(x=0X43DE28E0);
	op_hex		(x,	1);
	create_insn	(0X43DE2922);
	set_cmt	(0X43DE2980,	"jumptable 43DE2510 default case, cases 1-65,67-87,89-97,99,101-109,112-119",	1);
	set_name	(0X43DE2980,	"def_43DE2510");
	make_array	(0X43DE2989,	0X3);
	set_cmt	(0X43DE298C,	"jump table for switch statement",	0);
	create_dword	(x=0X43DE298C);
	make_array	(x,	0X6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DE298C,	"jpt_43DE2510");
	set_cmt	(0X43DE29A4,	"indirect table for switch statement",	0);
	create_byte	(0X43DE29A4);
	make_array	(0X43DE29A4,	0X79);
	make_array	(0X43DE2A1D,	0X3);
	create_insn	(0X43DE2A20);
	set_cmt	(0X43DE2A23,	"switch 104 cases ",	0);
	create_insn	(x=0X43DE2A28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DE2A2F,	"switch jump",	0);
	create_insn	(x=0X43DE2A2F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE2A36,	"jumptable 43DE2A2F cases 0,71,103",	1);
	create_insn	(0X43DE2A36);
	set_cmt	(0X43DE2A3F,	"jumptable 43DE2A2F cases 69,101",	1);
	create_insn	(0X43DE2A3F);
	set_cmt	(0X43DE2A44,	"jumptable 43DE2A2F cases 70,102",	1);
	create_insn	(0X43DE2A44);
	set_cmt	(0X43DE2A4F,	"jumptable 43DE2A2F cases 65,97",	1);
	create_insn	(0X43DE2A4F);
	set_cmt	(0X43DE2A58,	"jumptable 43DE2A2F default case, cases 1-64,66-68,72-96,98-100",	1);
	set_name	(0X43DE2A58,	"def_43DE2A2F");
	make_array	(0X43DE2A59,	0X3);
	set_cmt	(0X43DE2A5C,	"jump table for switch statement",	0);
	create_dword	(x=0X43DE2A5C);
	make_array	(x,	0X5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DE2A5C,	"jpt_43DE2A2F");
	set_cmt	(0X43DE2A70,	"indirect table for switch statement",	0);
	create_byte	(0X43DE2A70);
	make_array	(0X43DE2A70,	0X68);
	make_array	(0X43DE2AD8,	0X8);
	create_insn	(0X43DE2AE0);
	create_insn	(x=0X43DE2B28);
	op_hex		(x,	1);
	create_insn	(0X43DE2B34);
	set_cmt	(0X43DE2B65,	"num",	0);
	set_cmt	(0X43DE2B66,	"value",	0);
	set_cmt	(0X43DE2B67,	"pointer",	0);
	create_insn	(x=0X43DE2B6D);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2B89);
	op_hex		(x,	1);
	create_insn	(0X43DE2B95);
	create_insn	(x=0X43DE2B9F);
	op_hex		(x,	1);
	set_cmt	(0X43DE2BA6,	"num",	0);
	set_cmt	(0X43DE2BA7,	"value",	0);
	set_cmt	(0X43DE2BA8,	"pointer",	0);
	create_insn	(x=0X43DE2BAE);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2BCA);
	op_hex		(x,	1);
	set_cmt	(0X43DE2BD4,	"num",	0);
	set_cmt	(0X43DE2BD5,	"value",	0);
	set_cmt	(0X43DE2BD8,	"pointer",	0);
	create_insn	(x=0X43DE2BDE);
	op_hex		(x,	1);
	create_insn	(0X43DE2BEA);
	create_insn	(x=0X43DE2C01);
	op_hex		(x,	1);
	set_cmt	(0X43DE2C0F,	"num",	0);
	set_cmt	(0X43DE2C10,	"value",	0);
	set_cmt	(0X43DE2C11,	"pointer",	0);
	create_insn	(x=0X43DE2C17);
	op_hex		(x,	1);
	make_array	(0X43DE2C23,	0XD);
	create_insn	(0X43DE2C30);
	create_insn	(x=0X43DE2C33);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2C54);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2C57);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2C88);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2CA8);
	op_hex		(x,	1);
	create_insn	(0X43DE2CAD);
	create_insn	(x=0X43DE2CB9);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2CDD);
	op_hex		(x,	1);
	set_cmt	(0X43DE2D01,	"Size",	0);
	create_insn	(x=0X43DE2D09);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2D17);
	op_hex		(x,	1);
	create_insn	(0X43DE2D1F);
	set_cmt	(0X43DE2D23,	"Size",	0);
	create_insn	(x=0X43DE2D29);
	op_hex		(x,	1);
	create_insn	(0X43DE2D2E);
	create_insn	(x=0X43DE2D42);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2D88);
	op_hex		(x,	1);
	create_insn	(0X43DE2D90);
	create_insn	(x=0X43DE2DA7);
	op_hex		(x,	1);
	set_cmt	(0X43DE2DD1,	"Size",	0);
	create_insn	(x=0X43DE2DD7);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2DE5);
	op_hex		(x,	1);
	create_insn	(0X43DE2DED);
	set_cmt	(0X43DE2DF1,	"Size",	0);
	create_insn	(x=0X43DE2DF7);
	op_hex		(x,	1);
	create_insn	(0X43DE2DFE);
	create_insn	(x=0X43DE2E0F);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2E51);
	op_hex		(x,	1);
	create_insn	(0X43DE2E59);
	create_insn	(0X43DE2E6D);
	make_array	(0X43DE2E73,	0XD);
	create_insn	(0X43DE2E80);
	create_insn	(x=0X43DE2ED7);
	op_hex		(x,	1);
	create_insn	(0X43DE2EE3);
	set_cmt	(0X43DE2F17,	"num",	0);
	set_cmt	(0X43DE2F18,	"value",	0);
	set_cmt	(0X43DE2F19,	"pointer",	0);
	create_insn	(x=0X43DE2F1F);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2F4A);
	op_hex		(x,	1);
	create_insn	(0X43DE2F56);
	create_insn	(x=0X43DE2F60);
	op_hex		(x,	1);
	set_cmt	(0X43DE2F67,	"num",	0);
	set_cmt	(0X43DE2F68,	"value",	0);
	set_cmt	(0X43DE2F69,	"pointer",	0);
	create_insn	(x=0X43DE2F6F);
	op_hex		(x,	1);
	set_cmt	(0X43DE2F87,	"num",	0);
	set_cmt	(0X43DE2F88,	"value",	0);
	set_cmt	(0X43DE2F8B,	"pointer",	0);
	create_insn	(x=0X43DE2F93);
	op_hex		(x,	1);
	create_insn	(0X43DE2F9F);
	set_cmt	(0X43DE2FB3,	"num",	0);
	set_cmt	(0X43DE2FB4,	"value",	0);
	set_cmt	(0X43DE2FB5,	"pointer",	0);
	create_insn	(x=0X43DE2FBD);
	op_hex		(x,	1);
	make_array	(0X43DE2FC9,	0X7);
	create_insn	(0X43DE2FD0);
	create_insn	(x=0X43DE2FD3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2FF4);
	op_hex		(x,	1);
	create_insn	(x=0X43DE2FF7);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3033);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3053);
	op_hex		(x,	1);
	create_insn	(0X43DE3058);
	create_insn	(x=0X43DE3064);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3088);
	op_hex		(x,	1);
	set_cmt	(0X43DE30AC,	"Size",	0);
	create_insn	(x=0X43DE30B4);
	op_hex		(x,	1);
	create_insn	(x=0X43DE30C2);
	op_hex		(x,	1);
	create_insn	(0X43DE30CA);
	set_cmt	(0X43DE30CE,	"Size",	0);
	create_insn	(x=0X43DE30D4);
	op_hex		(x,	1);
	create_insn	(0X43DE30D9);
	create_insn	(x=0X43DE30ED);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3133);
	op_hex		(x,	1);
	create_insn	(0X43DE313B);
	create_insn	(x=0X43DE3152);
	op_hex		(x,	1);
	set_cmt	(0X43DE317C,	"Size",	0);
	create_insn	(x=0X43DE3182);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3190);
	op_hex		(x,	1);
	create_insn	(0X43DE3198);
	set_cmt	(0X43DE319C,	"Size",	0);
	create_insn	(x=0X43DE31A2);
	op_hex		(x,	1);
	create_insn	(0X43DE31A9);
	create_insn	(x=0X43DE31BA);
	op_hex		(x,	1);
	create_insn	(x=0X43DE31FC);
	op_hex		(x,	1);
	create_insn	(0X43DE3204);
	create_insn	(0X43DE3218);
	make_array	(0X43DE321E,	0X2);
	create_insn	(0X43DE3220);
	create_insn	(x=0X43DE3265);
	op_hex		(x,	1);
	create_insn	(0X43DE3271);
	set_cmt	(0X43DE32A6,	"num",	0);
	set_cmt	(0X43DE32A7,	"value",	0);
	set_cmt	(0X43DE32A8,	"pointer",	0);
	create_insn	(x=0X43DE32AE);
	op_hex		(x,	1);
	create_insn	(x=0X43DE32CA);
	op_hex		(x,	1);
	create_insn	(0X43DE32D6);
	create_insn	(x=0X43DE32E0);
	op_hex		(x,	1);
	set_cmt	(0X43DE32E7,	"num",	0);
	set_cmt	(0X43DE32E8,	"value",	0);
	set_cmt	(0X43DE32E9,	"pointer",	0);
	create_insn	(x=0X43DE32EF);
	op_hex		(x,	1);
	create_insn	(x=0X43DE330A);
	op_hex		(x,	1);
	set_cmt	(0X43DE3314,	"num",	0);
	set_cmt	(0X43DE3315,	"value",	0);
	set_cmt	(0X43DE3318,	"pointer",	0);
	create_insn	(x=0X43DE331E);
	op_hex		(x,	1);
	create_insn	(0X43DE332A);
	create_insn	(x=0X43DE3340);
	op_hex		(x,	1);
	set_cmt	(0X43DE334C,	"num",	0);
	set_cmt	(0X43DE334D,	"value",	0);
	set_cmt	(0X43DE334E,	"pointer",	0);
	create_insn	(x=0X43DE3354);
	op_hex		(x,	1);
	create_insn	(0X43DE3360);
	create_insn	(x=0X43DE3366);
	op_hex		(x,	1);
	set_cmt	(0X43DE3369,	"switch 12 cases ",	0);
	create_insn	(x=0X43DE3369);
	op_hex		(x,	1);
	set_cmt	(0X43DE3371,	"switch jump",	0);
	create_insn	(x=0X43DE3371);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE3378,	"jumptable 43DE3371 case 2",	1);
	create_insn	(0X43DE3378);
	set_cmt	(0X43DE3385,	"jumptable 43DE3371 case 3",	1);
	create_insn	(0X43DE3385);
	set_cmt	(0X43DE3398,	"jumptable 43DE3371 cases 4,5",	1);
	create_insn	(0X43DE3398);
	set_cmt	(0X43DE33A4,	"jumptable 43DE3371 default case, cases 6-13",	1);
	create_insn	(0X43DE33A4);
	set_name	(0X43DE33A4,	"def_43DE3371");
	make_array	(0X43DE33B5,	0X3);
	set_cmt	(0X43DE33B8,	"jump table for switch statement",	0);
	create_dword	(x=0X43DE33B8);
	make_array	(x,	0XC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DE33B8,	"jpt_43DE3371");
	make_array	(0X43DE33E8,	0X8);
	create_insn	(0X43DE33F0);
	create_insn	(x=0X43DE33F3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE347B);
	op_hex		(x,	1);
	create_insn	(x=0X43DE347F);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3488);
	op_hex		(x,	1);
	create_insn	(x=0X43DE348F);
	op_hex		(x,	1);
	create_insn	(x=0X43DE349A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE34A7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DE34E3);
	make_array	(0X43DE3502,	0XE);
	create_insn	(0X43DE3510);
	create_insn	(x=0X43DE353D);
	op_hex		(x,	1);
	make_array	(0X43DE354B,	0X5);
	create_insn	(0X43DE3550);
	create_insn	(x=0X43DE3553);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3556);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3559);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3566);
	op_hex		(x,	1);
	create_insn	(x=0X43DE35B0);
	op_hex		(x,	1);
	set_cmt	(0X43DE35C0,	"num",	0);
	set_cmt	(0X43DE35C5,	"value",	0);
	set_cmt	(0X43DE35C6,	"pointer",	0);
	create_insn	(x=0X43DE35CC);
	op_hex		(x,	1);
	create_insn	(x=0X43DE35DB);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3601);
	op_hex		(x,	1);
	create_insn	(0X43DE360F);
	set_cmt	(0X43DE3644,	"num",	0);
	set_cmt	(0X43DE3645,	"value",	0);
	set_cmt	(0X43DE3646,	"pointer",	0);
	create_insn	(x=0X43DE364C);
	op_hex		(x,	1);
	create_insn	(0X43DE366B);
	create_insn	(x=0X43DE3675);
	op_hex		(x,	1);
	set_cmt	(0X43DE367F,	"num",	0);
	set_cmt	(0X43DE3680,	"value",	0);
	set_cmt	(0X43DE3681,	"pointer",	0);
	create_insn	(x=0X43DE3687);
	op_hex		(x,	1);
	create_insn	(0X43DE36A7);
	set_cmt	(0X43DE36BB,	"num",	0);
	set_cmt	(0X43DE36BC,	"value",	0);
	set_cmt	(0X43DE36BD,	"pointer",	0);
	create_insn	(x=0X43DE36C5);
	op_hex		(x,	1);
	make_array	(0X43DE36D3,	0XD);
	create_insn	(0X43DE36E0);
	create_insn	(x=0X43DE3724);
	op_hex		(x,	1);
	set_cmt	(0X43DE3734,	"num",	0);
	set_cmt	(0X43DE3735,	"value",	0);
	set_cmt	(0X43DE3736,	"pointer",	0);
	create_insn	(x=0X43DE373C);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3755);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3757);
	op_hex		(x,	1);
	create_insn	(0X43DE376B);
	set_cmt	(0X43DE379F,	"num",	0);
	set_cmt	(0X43DE37A0,	"value",	0);
	set_cmt	(0X43DE37A1,	"pointer",	0);
	create_insn	(x=0X43DE37A7);
	op_hex		(x,	1);
	create_insn	(0X43DE37C4);
	create_insn	(x=0X43DE37CE);
	op_hex		(x,	1);
	set_cmt	(0X43DE37D5,	"num",	0);
	set_cmt	(0X43DE37D6,	"value",	0);
	set_cmt	(0X43DE37D7,	"pointer",	0);
	create_insn	(x=0X43DE37DD);
	op_hex		(x,	1);
	set_cmt	(0X43DE37F5,	"num",	0);
	set_cmt	(0X43DE37F6,	"value",	0);
	set_cmt	(0X43DE37F9,	"pointer",	0);
	create_insn	(x=0X43DE3801);
	op_hex		(x,	1);
	create_insn	(0X43DE380D);
	set_cmt	(0X43DE3821,	"num",	0);
	set_cmt	(0X43DE3822,	"value",	0);
	set_cmt	(0X43DE3823,	"pointer",	0);
	create_insn	(x=0X43DE382B);
	op_hex		(x,	1);
	make_array	(0X43DE3837,	0X9);
	create_insn	(0X43DE3840);
	create_insn	(x=0X43DE3884);
	op_hex		(x,	1);
	set_cmt	(0X43DE3894,	"num",	0);
	set_cmt	(0X43DE3895,	"value",	0);
	set_cmt	(0X43DE3896,	"pointer",	0);
	create_insn	(x=0X43DE389C);
	op_hex		(x,	1);
	create_insn	(x=0X43DE38B5);
	op_hex		(x,	1);
	create_insn	(x=0X43DE38B9);
	op_hex		(x,	1);
	create_insn	(0X43DE38C8);
	set_cmt	(0X43DE38FC,	"num",	0);
	set_cmt	(0X43DE38FD,	"value",	0);
	set_cmt	(0X43DE38FE,	"pointer",	0);
	create_insn	(x=0X43DE3904);
	op_hex		(x,	1);
	create_insn	(0X43DE3921);
	create_insn	(x=0X43DE392B);
	op_hex		(x,	1);
	set_cmt	(0X43DE3932,	"num",	0);
	set_cmt	(0X43DE3933,	"value",	0);
	set_cmt	(0X43DE3934,	"pointer",	0);
	create_insn	(x=0X43DE393A);
	op_hex		(x,	1);
	set_cmt	(0X43DE3952,	"num",	0);
	set_cmt	(0X43DE3953,	"value",	0);
	set_cmt	(0X43DE3956,	"pointer",	0);
	create_insn	(x=0X43DE395E);
	op_hex		(x,	1);
	create_insn	(0X43DE396A);
	set_cmt	(0X43DE397E,	"num",	0);
	set_cmt	(0X43DE397F,	"value",	0);
	set_cmt	(0X43DE3980,	"pointer",	0);
	create_insn	(x=0X43DE3988);
	op_hex		(x,	1);
	make_array	(0X43DE3994,	0XC);
	create_insn	(0X43DE39A0);
	create_insn	(x=0X43DE39E8);
	op_hex		(x,	1);
	set_cmt	(0X43DE39F8,	"num",	0);
	set_cmt	(0X43DE39F9,	"value",	0);
	set_cmt	(0X43DE39FA,	"pointer",	0);
	create_insn	(x=0X43DE3A00);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3A0B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE3A12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE3A29);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3A2C);
	op_hex		(x,	1);
	create_insn	(0X43DE3A41);
	set_cmt	(0X43DE3A75,	"num",	0);
	set_cmt	(0X43DE3A76,	"value",	0);
	set_cmt	(0X43DE3A77,	"pointer",	0);
	create_insn	(x=0X43DE3A7D);
	op_hex		(x,	1);
	create_insn	(0X43DE3A9A);
	create_insn	(x=0X43DE3AA4);
	op_hex		(x,	1);
	set_cmt	(0X43DE3AAB,	"num",	0);
	set_cmt	(0X43DE3AAC,	"value",	0);
	set_cmt	(0X43DE3AAD,	"pointer",	0);
	create_insn	(x=0X43DE3AB3);
	op_hex		(x,	1);
	set_cmt	(0X43DE3ACB,	"num",	0);
	set_cmt	(0X43DE3ACC,	"value",	0);
	set_cmt	(0X43DE3ACF,	"pointer",	0);
	create_insn	(x=0X43DE3AD7);
	op_hex		(x,	1);
	create_insn	(0X43DE3AE3);
	set_cmt	(0X43DE3AF7,	"num",	0);
	set_cmt	(0X43DE3AF8,	"value",	0);
	set_cmt	(0X43DE3AF9,	"pointer",	0);
	create_insn	(x=0X43DE3B01);
	op_hex		(x,	1);
	make_array	(0X43DE3B0D,	0X3);
	create_insn	(0X43DE3B10);
	create_insn	(x=0X43DE3B54);
	op_hex		(x,	1);
	set_cmt	(0X43DE3B64,	"num",	0);
	set_cmt	(0X43DE3B65,	"value",	0);
	set_cmt	(0X43DE3B66,	"pointer",	0);
	create_insn	(x=0X43DE3B6C);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3B7E);
	op_hex		(x,	1);
	create_insn	(0X43DE3B8A);
	set_cmt	(0X43DE3BBE,	"num",	0);
	set_cmt	(0X43DE3BBF,	"value",	0);
	set_cmt	(0X43DE3BC0,	"pointer",	0);
	create_insn	(x=0X43DE3BC6);
	op_hex		(x,	1);
	create_insn	(0X43DE3BE3);
	create_insn	(x=0X43DE3BED);
	op_hex		(x,	1);
	set_cmt	(0X43DE3BF4,	"num",	0);
	set_cmt	(0X43DE3BF5,	"value",	0);
	set_cmt	(0X43DE3BF6,	"pointer",	0);
	create_insn	(x=0X43DE3BFC);
	op_hex		(x,	1);
	set_cmt	(0X43DE3C14,	"num",	0);
	set_cmt	(0X43DE3C15,	"value",	0);
	set_cmt	(0X43DE3C18,	"pointer",	0);
	create_insn	(x=0X43DE3C20);
	op_hex		(x,	1);
	create_insn	(0X43DE3C2C);
	set_cmt	(0X43DE3C40,	"num",	0);
	set_cmt	(0X43DE3C41,	"value",	0);
	set_cmt	(0X43DE3C42,	"pointer",	0);
	create_insn	(x=0X43DE3C4A);
	op_hex		(x,	1);
	make_array	(0X43DE3C56,	0XA);
	create_insn	(0X43DE3C60);
	create_insn	(x=0X43DE3C63);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3C66);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3C69);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3C76);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3C98);
	op_hex		(x,	1);
	set_cmt	(0X43DE3CAA,	"num",	0);
	set_cmt	(0X43DE3CAF,	"value",	0);
	set_cmt	(0X43DE3CB0,	"pointer",	0);
	create_insn	(x=0X43DE3CB6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3CBF);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3CF3);
	op_hex		(x,	1);
	make_array	(0X43DE3D03,	0XD);
	create_insn	(0X43DE3D10);
	create_insn	(x=0X43DE3D2D);
	op_hex		(x,	1);
	create_insn	(0X43DE3D39);
	set_cmt	(0X43DE3D46,	"num",	0);
	set_cmt	(0X43DE3D4B,	"value",	0);
	set_cmt	(0X43DE3D4C,	"pointer",	0);
	create_insn	(x=0X43DE3D52);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3D69);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3D6B);
	op_hex		(x,	1);
	create_insn	(0X43DE3D80);
	create_insn	(x=0X43DE3D9D);
	op_hex		(x,	1);
	create_insn	(0X43DE3DA9);
	set_cmt	(0X43DE3DB6,	"num",	0);
	set_cmt	(0X43DE3DBB,	"value",	0);
	set_cmt	(0X43DE3DBC,	"pointer",	0);
	create_insn	(x=0X43DE3DC2);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3DD9);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3DDD);
	op_hex		(x,	1);
	make_array	(0X43DE3DEC,	0X4);
	create_insn	(0X43DE3DF0);
	create_insn	(x=0X43DE3E0D);
	op_hex		(x,	1);
	create_insn	(0X43DE3E19);
	set_cmt	(0X43DE3E26,	"num",	0);
	set_cmt	(0X43DE3E2B,	"value",	0);
	set_cmt	(0X43DE3E2C,	"pointer",	0);
	create_insn	(x=0X43DE3E32);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3E42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE3E49);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE3E65);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3E68);
	op_hex		(x,	1);
	make_array	(0X43DE3E7D,	0X3);
	create_insn	(0X43DE3E80);
	create_insn	(x=0X43DE3E9D);
	op_hex		(x,	1);
	create_insn	(0X43DE3EA9);
	set_cmt	(0X43DE3EB6,	"num",	0);
	set_cmt	(0X43DE3EBB,	"value",	0);
	set_cmt	(0X43DE3EBC,	"pointer",	0);
	create_insn	(x=0X43DE3EC2);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3ED7);
	op_hex		(x,	1);
	make_array	(0X43DE3EE3,	0XD);
	create_insn	(0X43DE3EF0);
	create_insn	(x=0X43DE3EF3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3EF6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3EF9);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3F06);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3F50);
	op_hex		(x,	1);
	set_cmt	(0X43DE3F60,	"num",	0);
	set_cmt	(0X43DE3F65,	"value",	0);
	set_cmt	(0X43DE3F66,	"pointer",	0);
	create_insn	(x=0X43DE3F6C);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3F78);
	op_hex		(x,	1);
	create_insn	(x=0X43DE3FA4);
	op_hex		(x,	1);
	create_insn	(0X43DE3FB2);
	set_cmt	(0X43DE3FE7,	"num",	0);
	set_cmt	(0X43DE3FE8,	"value",	0);
	set_cmt	(0X43DE3FE9,	"pointer",	0);
	create_insn	(x=0X43DE3FEF);
	op_hex		(x,	1);
	create_insn	(0X43DE400E);
	create_insn	(x=0X43DE4018);
	op_hex		(x,	1);
	set_cmt	(0X43DE4022,	"num",	0);
	set_cmt	(0X43DE4023,	"value",	0);
	set_cmt	(0X43DE4024,	"pointer",	0);
	create_insn	(x=0X43DE402A);
	op_hex		(x,	1);
	create_insn	(0X43DE404A);
	set_cmt	(0X43DE405E,	"num",	0);
	set_cmt	(0X43DE405F,	"value",	0);
	set_cmt	(0X43DE4060,	"pointer",	0);
	create_insn	(x=0X43DE4068);
	op_hex		(x,	1);
	make_array	(0X43DE4076,	0XA);
	create_insn	(0X43DE4080);
	create_insn	(x=0X43DE4083);
	op_hex		(x,	1);
	create_insn	(x=0X43DE40C6);
	op_hex		(x,	1);
	set_cmt	(0X43DE40D6,	"num",	0);
	set_cmt	(0X43DE40D7,	"value",	0);
	set_cmt	(0X43DE40D8,	"pointer",	0);
	create_insn	(x=0X43DE40DE);
	op_hex		(x,	1);
	create_insn	(x=0X43DE40F5);
	op_hex		(x,	1);
	create_insn	(x=0X43DE40F9);
	op_hex		(x,	1);
	create_insn	(x=0X43DE40FF);
	op_hex		(x,	1);
	create_insn	(0X43DE4111);
	set_cmt	(0X43DE4145,	"num",	0);
	set_cmt	(0X43DE4146,	"value",	0);
	set_cmt	(0X43DE4147,	"pointer",	0);
	create_insn	(x=0X43DE414D);
	op_hex		(x,	1);
	create_insn	(0X43DE416A);
	create_insn	(x=0X43DE4174);
	op_hex		(x,	1);
	set_cmt	(0X43DE417B,	"num",	0);
	set_cmt	(0X43DE417C,	"value",	0);
	set_cmt	(0X43DE417D,	"pointer",	0);
	create_insn	(x=0X43DE4183);
	op_hex		(x,	1);
	set_cmt	(0X43DE419B,	"num",	0);
	set_cmt	(0X43DE419C,	"value",	0);
	set_cmt	(0X43DE419F,	"pointer",	0);
	create_insn	(x=0X43DE41A7);
	op_hex		(x,	1);
	create_insn	(0X43DE41B3);
	set_cmt	(0X43DE41C7,	"num",	0);
	set_cmt	(0X43DE41C8,	"value",	0);
	set_cmt	(0X43DE41C9,	"pointer",	0);
	create_insn	(x=0X43DE41D1);
	op_hex		(x,	1);
	make_array	(0X43DE41DD,	0X3);
	create_insn	(0X43DE41E0);
	create_insn	(x=0X43DE41E3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4226);
	op_hex		(x,	1);
	set_cmt	(0X43DE4236,	"num",	0);
	set_cmt	(0X43DE4237,	"value",	0);
	set_cmt	(0X43DE4238,	"pointer",	0);
	create_insn	(x=0X43DE423E);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4255);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4259);
	op_hex		(x,	1);
	create_insn	(x=0X43DE425F);
	op_hex		(x,	1);
	create_insn	(0X43DE4270);
	set_cmt	(0X43DE42A4,	"num",	0);
	set_cmt	(0X43DE42A5,	"value",	0);
	set_cmt	(0X43DE42A6,	"pointer",	0);
	create_insn	(x=0X43DE42AC);
	op_hex		(x,	1);
	create_insn	(0X43DE42C9);
	create_insn	(x=0X43DE42D3);
	op_hex		(x,	1);
	set_cmt	(0X43DE42DA,	"num",	0);
	set_cmt	(0X43DE42DB,	"value",	0);
	set_cmt	(0X43DE42DC,	"pointer",	0);
	create_insn	(x=0X43DE42E2);
	op_hex		(x,	1);
	set_cmt	(0X43DE42FA,	"num",	0);
	set_cmt	(0X43DE42FB,	"value",	0);
	set_cmt	(0X43DE42FE,	"pointer",	0);
	create_insn	(x=0X43DE4306);
	op_hex		(x,	1);
	create_insn	(0X43DE4312);
	set_cmt	(0X43DE4326,	"num",	0);
	set_cmt	(0X43DE4327,	"value",	0);
	set_cmt	(0X43DE4328,	"pointer",	0);
	create_insn	(x=0X43DE4330);
	op_hex		(x,	1);
	make_array	(0X43DE433C,	0X4);
	create_insn	(0X43DE4340);
	create_insn	(x=0X43DE4343);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4386);
	op_hex		(x,	1);
	set_cmt	(0X43DE4396,	"num",	0);
	set_cmt	(0X43DE4397,	"value",	0);
	set_cmt	(0X43DE4398,	"pointer",	0);
	create_insn	(x=0X43DE439E);
	op_hex		(x,	1);
	create_insn	(0X43DE43BB);
	set_cmt	(0X43DE43EF,	"num",	0);
	set_cmt	(0X43DE43F0,	"value",	0);
	set_cmt	(0X43DE43F1,	"pointer",	0);
	create_insn	(x=0X43DE43F7);
	op_hex		(x,	1);
	create_insn	(0X43DE4414);
	create_insn	(x=0X43DE441E);
	op_hex		(x,	1);
	set_cmt	(0X43DE4425,	"num",	0);
	set_cmt	(0X43DE4426,	"value",	0);
	set_cmt	(0X43DE4427,	"pointer",	0);
	create_insn	(x=0X43DE442D);
	op_hex		(x,	1);
	set_cmt	(0X43DE4445,	"num",	0);
	set_cmt	(0X43DE4446,	"value",	0);
	set_cmt	(0X43DE4449,	"pointer",	0);
	create_insn	(x=0X43DE4451);
	op_hex		(x,	1);
	create_insn	(0X43DE445D);
	set_cmt	(0X43DE4471,	"num",	0);
	set_cmt	(0X43DE4472,	"value",	0);
	set_cmt	(0X43DE4473,	"pointer",	0);
	create_insn	(x=0X43DE447B);
	op_hex		(x,	1);
	make_array	(0X43DE4487,	0X9);
	create_insn	(0X43DE4490);
	create_insn	(x=0X43DE4493);
	op_hex		(x,	1);
	create_insn	(x=0X43DE44D6);
	op_hex		(x,	1);
	set_cmt	(0X43DE44E6,	"num",	0);
	set_cmt	(0X43DE44E7,	"value",	0);
	set_cmt	(0X43DE44E8,	"pointer",	0);
	create_insn	(x=0X43DE44EE);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4503);
	op_hex		(x,	1);
	create_insn	(0X43DE450F);
	set_cmt	(0X43DE4543,	"num",	0);
	set_cmt	(0X43DE4544,	"value",	0);
	set_cmt	(0X43DE4545,	"pointer",	0);
	create_insn	(x=0X43DE454B);
	op_hex		(x,	1);
	create_insn	(0X43DE4568);
	create_insn	(x=0X43DE4572);
	op_hex		(x,	1);
	set_cmt	(0X43DE4579,	"num",	0);
	set_cmt	(0X43DE457A,	"value",	0);
	set_cmt	(0X43DE457B,	"pointer",	0);
	create_insn	(x=0X43DE4581);
	op_hex		(x,	1);
	set_cmt	(0X43DE4599,	"num",	0);
	set_cmt	(0X43DE459A,	"value",	0);
	set_cmt	(0X43DE459D,	"pointer",	0);
	create_insn	(x=0X43DE45A5);
	op_hex		(x,	1);
	create_insn	(0X43DE45B1);
	set_cmt	(0X43DE45C5,	"num",	0);
	set_cmt	(0X43DE45C6,	"value",	0);
	set_cmt	(0X43DE45C7,	"pointer",	0);
	create_insn	(x=0X43DE45CF);
	op_hex		(x,	1);
	make_array	(0X43DE45DB,	0X5);
	create_insn	(0X43DE45E0);
	create_insn	(x=0X43DE45E3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE45E6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE45E9);
	op_hex		(x,	1);
	create_insn	(x=0X43DE45F6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4618);
	op_hex		(x,	1);
	set_cmt	(0X43DE462A,	"num",	0);
	set_cmt	(0X43DE462F,	"value",	0);
	set_cmt	(0X43DE4630,	"pointer",	0);
	create_insn	(x=0X43DE4636);
	op_hex		(x,	1);
	create_insn	(x=0X43DE463F);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4676);
	op_hex		(x,	1);
	make_array	(0X43DE4686,	0XA);
	create_insn	(0X43DE4690);
	create_insn	(x=0X43DE46AD);
	op_hex		(x,	1);
	create_insn	(0X43DE46B9);
	set_cmt	(0X43DE46C6,	"num",	0);
	set_cmt	(0X43DE46CB,	"value",	0);
	set_cmt	(0X43DE46CC,	"pointer",	0);
	create_insn	(x=0X43DE46D2);
	op_hex		(x,	1);
	create_insn	(x=0X43DE46EC);
	op_hex		(x,	1);
	create_insn	(x=0X43DE46F0);
	op_hex		(x,	1);
	create_insn	(x=0X43DE46F6);
	op_hex		(x,	1);
	make_array	(0X43DE4708,	0X8);
	create_insn	(0X43DE4710);
	create_insn	(x=0X43DE472D);
	op_hex		(x,	1);
	create_insn	(0X43DE4739);
	set_cmt	(0X43DE4746,	"num",	0);
	set_cmt	(0X43DE474B,	"value",	0);
	set_cmt	(0X43DE474C,	"pointer",	0);
	create_insn	(x=0X43DE4752);
	op_hex		(x,	1);
	create_insn	(x=0X43DE476C);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4770);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4776);
	op_hex		(x,	1);
	make_array	(0X43DE4787,	0X9);
	create_insn	(0X43DE4790);
	create_insn	(x=0X43DE47AD);
	op_hex		(x,	1);
	create_insn	(0X43DE47B9);
	set_cmt	(0X43DE47C6,	"num",	0);
	set_cmt	(0X43DE47CB,	"value",	0);
	set_cmt	(0X43DE47CC,	"pointer",	0);
	create_insn	(x=0X43DE47D2);
	op_hex		(x,	1);
	make_array	(0X43DE47EA,	0X6);
	create_insn	(0X43DE47F0);
	create_insn	(x=0X43DE480D);
	op_hex		(x,	1);
	create_insn	(0X43DE4819);
	set_cmt	(0X43DE4826,	"num",	0);
	set_cmt	(0X43DE482B,	"value",	0);
	set_cmt	(0X43DE482C,	"pointer",	0);
	create_insn	(x=0X43DE4832);
	op_hex		(x,	1);
	create_insn	(x=0X43DE484A);
	op_hex		(x,	1);
	make_array	(0X43DE4856,	0XA);
	create_insn	(0X43DE4860);
	create_insn	(x=0X43DE4888);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4896);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE48AC);
	op_hex		(x,	1);
	create_insn	(x=0X43DE48C4);
	op_hex		(x,	1);
	create_insn	(x=0X43DE48C7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE48DE);
	op_hex		(x,	1);
	create_insn	(x=0X43DE48F6);
	op_hex		(x,	1);
	create_insn	(0X43DE4913);
	create_insn	(x=0X43DE492A);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4942);
	op_hex		(x,	1);
	make_array	(0X43DE4956,	0XA);
	create_insn	(0X43DE4960);
	create_insn	(x=0X43DE4978);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE497F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE4996);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4999);
	op_hex		(x,	1);
	create_insn	(x=0X43DE499D);
	op_hex		(x,	1);
	make_array	(0X43DE49B9,	0X7);
	create_insn	(0X43DE49C0);
	create_insn	(x=0X43DE49C3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4A56);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4A5A);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4A64);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4A6B);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4A7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE4A92);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4AAA);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4AB1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE4AC7);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4ADF);
	op_hex		(x,	1);
	create_insn	(0X43DE4B10);
	create_insn	(x=0X43DE4B27);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4B3F);
	op_hex		(x,	1);
	make_array	(0X43DE4B56,	0XA);
	create_insn	(0X43DE4B60);
	create_insn	(x=0X43DE4B70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE4B87);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4B8A);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4BA1);
	op_hex		(x,	1);
	make_array	(0X43DE4BAC,	0X4);
	create_insn	(0X43DE4BB0);
	make_array	(0X43DE4BB4,	0XC);
	create_insn	(0X43DE4BC0);
	set_cmt	(0X43DE4BEA,	"a3",	0);
	set_cmt	(0X43DE4BEB,	"a2",	0);
	set_cmt	(0X43DE4BEC,	"this",	0);
	make_array	(0X43DE4BFB,	0X5);
	create_insn	(0X43DE4C00);
	set_cmt	(0X43DE4C2A,	"a3",	0);
	set_cmt	(0X43DE4C2B,	"a2",	0);
	set_cmt	(0X43DE4C2C,	"this",	0);
	make_array	(0X43DE4C3B,	0X5);
	create_insn	(0X43DE4C40);
	set_cmt	(0X43DE4C6A,	"a3",	0);
	set_cmt	(0X43DE4C6B,	"a2",	0);
	set_cmt	(0X43DE4C6C,	"this",	0);
	make_array	(0X43DE4C7B,	0X5);
	create_insn	(0X43DE4C80);
	create_insn	(x=0X43DE4C83);
	op_hex		(x,	1);
	create_insn	(0X43DE4CC8);
	set_cmt	(0X43DE4D01,	"Size",	0);
	create_insn	(0X43DE4D01);
	create_insn	(x=0X43DE4D0B);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4D17);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DE4D1E);
	create_insn	(x=0X43DE4D3D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE4D7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE4DA8);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4DC5);
	op_hex		(x,	1);
	make_array	(0X43DE4DE5,	0XB);
	create_insn	(0X43DE4DF0);
	make_array	(0X43DE4DF4,	0XC);
	create_insn	(0X43DE4E00);
	create_insn	(x=0X43DE4E0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE4E11);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DE4E18,	0X8);
	create_insn	(0X43DE4E20);
	create_insn	(x=0X43DE4E23);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DE4E40);
	create_insn	(x=0X43DE4E49);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE4E56);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4E59);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4E67);
	op_hex		(x,	1);
	make_array	(0X43DE4E71,	0XF);
	create_insn	(0X43DE4E80);
	create_insn	(x=0X43DE4E8D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE4EA4);
	op_hex		(x,	1);
	create_insn	(x=0X43DE4EA7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DE4EB4,	0XC);
	create_insn	(0X43DE4EC0);
	create_insn	(x=0X43DE4ECD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE4EE4);
	op_hex		(x,	1);
	make_array	(0X43DE4EEE,	0X2);
	create_insn	(0X43DE4EF0);
	create_insn	(x=0X43DE4EF3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DE4EFE,	0X2);
	create_insn	(0X43DE4F00);
	set_name	(0X43DE4F00,	"C_SDK::Surface::DrawManager::SetDrawColorEx");
	create_insn	(x=0X43DE4F03);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE4F08);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE4F0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE4F14);
	op_stkvar	(x,	1);
	create_insn	(0X43DE4F20);
	create_insn	(x=0X43DE4F23);
	op_hex		(x,	1);
	create_insn	(0X43DE4F6C);
	create_insn	(0X43DE4FB7);
	create_insn	(0X43DE5014);
	make_array	(0X43DE5031,	0XF);
	create_insn	(0X43DE5040);
	create_insn	(x=0X43DE5045);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE5058);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5072);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5076);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5083);
	op_hex		(x,	1);
	create_insn	(x=0X43DE50A1);
	op_hex		(x,	1);
	create_insn	(x=0X43DE50AC);
	op_hex		(x,	1);
	create_insn	(0X43DE50C0);
	create_insn	(0X43DE511E);
	create_insn	(0X43DE5163);
	make_array	(0X43DE517C,	0X4);
	create_insn	(0X43DE5180);
	create_insn	(x=0X43DE5185);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE5198);
	op_hex		(x,	1);
	create_insn	(x=0X43DE51B4);
	op_hex		(x,	1);
	create_insn	(x=0X43DE51B9);
	op_hex		(x,	1);
	create_insn	(x=0X43DE51C6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE51E5);
	op_hex		(x,	1);
	create_insn	(x=0X43DE51F0);
	op_hex		(x,	1);
	create_insn	(0X43DE5204);
	create_insn	(0X43DE5264);
	create_insn	(0X43DE52AC);
	make_array	(0X43DE52C5,	0XB);
	create_insn	(0X43DE52D0);
	create_insn	(x=0X43DE52E1);
	op_hex		(x,	1);
	create_insn	(x=0X43DE52ED);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5313);
	op_hex		(x,	1);
	create_insn	(0X43DE5338);
	make_array	(0X43DE533E,	0X2);
	create_insn	(0X43DE5340);
	create_insn	(0X43DE5370);
	make_array	(0X43DE539E,	0X2);
	create_insn	(0X43DE53A0);
	create_insn	(x=0X43DE53B1);
	op_hex		(x,	1);
	create_insn	(x=0X43DE53C3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE53E9);
	op_hex		(x,	1);
	create_insn	(x=0X43DE53EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE53EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE5403);
	op_stkvar	(x,	1);
	create_insn	(0X43DE541A);
	create_byte	(0X43DE5420);
	make_array	(0X43DE5420,	0X10);
	create_insn	(0X43DE5430);
	create_insn	(x=0X43DE5433);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE5437);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE543E);
	op_stkvar	(x,	1);
	make_array	(0X43DE5468,	0X8);
	create_insn	(0X43DE5470);
	make_array	(0X43DE54A6,	0XA);
	create_insn	(0X43DE54B0);
	create_insn	(x=0X43DE54B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE54BF);
	op_hex		(x,	1);
	create_insn	(x=0X43DE54C9);
	op_hex		(x,	1);
	create_insn	(0X43DE54CE);
	create_insn	(x=0X43DE54D9);
	op_hex		(x,	1);
	set_cmt	(0X43DE54E1,	"Size",	0);
	create_insn	(x=0X43DE54E9);
	op_hex		(x,	1);
	create_insn	(x=0X43DE54F3);
	op_hex		(x,	1);
	create_insn	(0X43DE54FD);
	set_cmt	(0X43DE5507,	"Size",	0);
	create_insn	(x=0X43DE550D);
	op_hex		(x,	1);
	create_insn	(0X43DE5514);
	make_array	(0X43DE551A,	0X6);
	create_insn	(0X43DE5520);
	create_insn	(x=0X43DE5523);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE552F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE5532);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5556);
	op_hex		(x,	1);
	create_insn	(0X43DE555D);
	make_array	(0X43DE5563,	0XD);
	create_insn	(0X43DE5570);
	create_insn	(x=0X43DE5573);
	op_hex		(x,	1);
	set_cmt	(0X43DE5576,	"interface",	0);
	create_insn	(x=0X43DE557C);
	op_hex		(x,	1);
	set_cmt	(0X43DE557F,	"index",	0);
	create_insn	(x=0X43DE5594);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DE55DD,	0X3);
	create_insn	(0X43DE55E0);
	create_insn	(x=0X43DE55E3);
	op_hex		(x,	1);
	set_cmt	(0X43DE55E9,	"interface",	0);
	set_cmt	(0X43DE55EF,	"index",	0);
	set_cmt	(0X43DE5605,	"interface",	0);
	set_cmt	(0X43DE560B,	"index",	0);
	set_cmt	(0X43DE5679,	"a3",	0);
	set_cmt	(0X43DE567A,	"a2",	0);
	set_cmt	(0X43DE567B,	"this",	0);
	create_insn	(0X43DE5694);
	create_insn	(x=0X43DE56F7);
	op_hex		(x,	1);
	create_insn	(x=0X43DE573F);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5771);
	op_hex		(x,	1);
	create_insn	(0X43DE57C9);
	create_insn	(0X43DE5806);
	create_insn	(0X43DE5832);
	create_insn	(x=0X43DE5842);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5858);
	op_hex		(x,	1);
	create_insn	(x=0X43DE58AD);
	op_hex		(x,	1);
	create_insn	(x=0X43DE58F4);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5926);
	op_hex		(x,	1);
	create_insn	(0X43DE5980);
	create_insn	(0X43DE59AC);
	create_insn	(0X43DE59D8);
	create_insn	(x=0X43DE59E8);
	op_hex		(x,	1);
	create_insn	(x=0X43DE59FE);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5A26);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5A6A);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5AB2);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5ABF);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5B1A);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5B6F);
	op_hex		(x,	1);
	create_insn	(0X43DE5B7B);
	create_insn	(x=0X43DE5B89);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5B8D);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5BC3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5BC6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5BFF);
	op_hex		(x,	1);
	create_insn	(0X43DE5C20);
	create_insn	(x=0X43DE5C67);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5CAF);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5CE1);
	op_hex		(x,	1);
	create_insn	(0X43DE5D3B);
	create_insn	(0X43DE5D67);
	create_insn	(0X43DE5D93);
	create_insn	(x=0X43DE5DA3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5DB9);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5E04);
	op_hex		(x,	1);
	set_cmt	(0X43DE5E1D,	"interface",	0);
	set_cmt	(0X43DE5E23,	"index",	0);
	create_insn	(0X43DE5E47);
	make_array	(0X43DE5E4D,	0X3);
	create_insn	(0X43DE5E50);
	create_insn	(x=0X43DE5E93);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5EA5);
	op_hex		(x,	1);
	create_insn	(x=0X43DE5EC9);
	op_hex		(x,	1);
	create_insn	(0X43DE5EDC);
	make_array	(0X43DE5EE2,	0XE);
	create_insn	(0X43DE5EF0);
	make_array	(0X43DE5EFB,	0X5);
	create_insn	(x=0X43DE5F00);
	op_hex		(x,	1);
	make_array	(0X43DE5F06,	0XA);
	create_insn	(0X43DE5F10);
	make_array	(0X43DE5F24,	0XC);
	create_insn	(0X43DE5F30);
	make_array	(0X43DE5F44,	0XC);
	create_insn	(0X43DE5F50);
	make_array	(0X43DE5F67,	0X9);
	create_insn	(0X43DE5F70);
	make_array	(0X43DE5F87,	0X9);
	create_insn	(0X43DE5F90);
	create_insn	(x=0X43DE5F93);
	op_hex		(x,	1);
	make_array	(0X43DE6008,	0X8);
	create_insn	(0X43DE6010);
	set_name	(0X43DE6010,	"C_SDK::Security::Xor::DecryptArray");
	create_insn	(x=0X43DE6014);
	op_stkvar	(x,	1);
	set_cmt	(0X43DE601A,	"to",	0);
	set_cmt	(0X43DE601C,	"size",	0);
	set_cmt	(0X43DE601E,	"from",	0);
	create_insn	(x=0X43DE6038);
	op_hex		(x,	1);
	make_array	(0X43DE6056,	0XA);
	create_insn	(0X43DE6060);
	create_insn	(0X43DE608B);
	make_array	(0X43DE6091,	0XF);
	create_insn	(0X43DE60A0);
	create_insn	(x=0X43DE60A3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE6111);
	op_hex		(x,	1);
	create_insn	(x=0X43DE6135);
	op_hex		(x,	1);
	create_insn	(0X43DE6141);
	create_insn	(x=0X43DE6195);
	op_hex		(x,	1);
	create_insn	(0X43DE61CF);
	create_insn	(x=0X43DE621B);
	op_hex		(x,	1);
	create_insn	(0X43DE622B);
	create_insn	(0X43DE623B);
	create_insn	(0X43DE6249);
	create_insn	(0X43DE6256);
	create_insn	(0X43DE6262);
	create_insn	(0X43DE626F);
	create_insn	(0X43DE627C);
	create_insn	(0X43DE6289);
	create_insn	(x=0X43DE62E5);
	op_hex		(x,	1);
	create_insn	(x=0X43DE6306);
	op_hex		(x,	1);
	create_insn	(0X43DE6310);
	create_insn	(x=0X43DE633E);
	op_hex		(x,	1);
	create_insn	(x=0X43DE635F);
	op_hex		(x,	1);
	create_insn	(0X43DE636F);
	make_array	(0X43DE63C1,	0XF);
	create_insn	(0X43DE63D0);
	create_insn	(x=0X43DE63D3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE63D6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE63F1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE63FC,	"Size",	0);
	create_insn	(x=0X43DE6406);
	op_hex		(x,	1);
	make_array	(0X43DE6493,	0XD);
	create_insn	(0X43DE64A0);
	create_insn	(x=0X43DE64C1);
	op_hex		(x,	1);
	make_array	(0X43DE64D2,	0XE);
	create_insn	(0X43DE64E0);
	make_array	(0X43DE6507,	0X9);
	create_insn	(0X43DE6510);
	make_array	(0X43DE6514,	0XC);
	create_insn	(0X43DE6520);
	create_insn	(0X43DE655B);
	make_array	(0X43DE6564,	0XC);
	create_insn	(0X43DE6570);
	create_insn	(0X43DE6586);
	create_insn	(0X43DE6590);
	create_insn	(0X43DE65A8);
	make_array	(0X43DE65B3,	0XD);
	create_insn	(0X43DE65C0);
	create_insn	(0X43DE65DF);
	make_array	(0X43DE65EE,	0X2);
	create_insn	(0X43DE65F0);
	create_insn	(0X43DE6608);
	make_array	(0X43DE6613,	0XD);
	create_insn	(0X43DE6620);
	create_insn	(0X43DE6635);
	make_array	(0X43DE6638,	0X8);
	create_insn	(0X43DE6640);
	make_array	(0X43DE6651,	0XF);
	create_insn	(0X43DE6660);
	create_insn	(0X43DE6676);
	create_insn	(0X43DE6680);
	create_insn	(0X43DE669C);
	make_array	(0X43DE66A9,	0X7);
	create_insn	(0X43DE66B0);
	make_array	(0X43DE66C6,	0XA);
	create_insn	(0X43DE66D0);
	make_array	(0X43DE66D7,	0X9);
	create_insn	(0X43DE66E0);
	create_insn	(x=0X43DE66E9);
	op_hex		(x,	1);
	set_cmt	(0X43DE66F0,	"color",	0);
	create_insn	(x=0X43DE6785);
	op_hex		(x,	1);
	create_insn	(0X43DE67D8);
	create_insn	(x=0X43DE67E3);
	op_hex		(x,	1);
	create_insn	(0X43DE6807);
	create_insn	(x=0X43DE6812);
	op_hex		(x,	1);
	create_insn	(0X43DE6836);
	create_insn	(0X43DE6846);
	create_insn	(0X43DE6880);
	create_insn	(0X43DE68A8);
	create_insn	(0X43DE68DD);
	set_cmt	(0X43DE6910,	"a1",	0);
	set_cmt	(0X43DE6913,	"a3",	0);
	set_cmt	(0X43DE6916,	"a2",	0);
	create_insn	(0X43DE6929);
	make_array	(0X43DE693E,	0X2);
	create_insn	(0X43DE6940);
	make_array	(0X43DE6977,	0X9);
	create_insn	(0X43DE6980);
	make_array	(0X43DE69F8,	0X8);
	create_insn	(0X43DE6A00);
	make_array	(0X43DE6A26,	0XA);
	create_insn	(0X43DE6A30);
	make_array	(0X43DE6A57,	0X9);
	create_insn	(0X43DE6A60);
	create_insn	(x=0X43DE6A63);
	op_hex		(x,	1);
	create_insn	(x=0X43DE6A83);
	op_hex		(x,	1);
	create_insn	(x=0X43DE6ADB);
	op_hex		(x,	1);
	create_insn	(x=0X43DE6B35);
	op_hex		(x,	1);
	make_array	(0X43DE6B43,	0XD);
	create_insn	(0X43DE6B50);
	create_insn	(x=0X43DE6B53);
	op_hex		(x,	1);
	create_insn	(0X43DE6B60);
	create_insn	(0X43DE6B78);
	create_insn	(0X43DE6BB0);
	make_array	(0X43DE6BCE,	0X2);
	create_insn	(0X43DE6BD0);
	create_insn	(x=0X43DE6BE1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE6BE6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE6BEB);
	op_hex		(x,	1);
	make_array	(0X43DE6BFE,	0X2);
	create_insn	(0X43DE6C00);
	create_insn	(0X43DE6C18);
	make_array	(0X43DE6C5C,	0X4);
	create_insn	(0X43DE6C60);
	make_array	(0X43DE6C7E,	0X2);
	create_insn	(0X43DE6C80);
	create_insn	(x=0X43DE6C91);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE6C96);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE6C9B);
	op_hex		(x,	1);
	make_array	(0X43DE6CAE,	0X2);
	create_insn	(0X43DE6CB0);
	create_insn	(x=0X43DE6CB3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE6CB6);
	op_hex		(x,	1);
	set_cmt	(0X43DE6CC2,	"Size",	0);
	create_insn	(x=0X43DE6CCB);
	op_hex		(x,	1);
	create_insn	(x=0X43DE6CE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE6CF9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE6D24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DE6D2A,	"Size",	0);
	create_insn	(x=0X43DE6D42);
	op_hex		(x,	1);
	create_insn	(x=0X43DE6D51);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE6D8F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE6D9A,	"Size",	0);
	create_insn	(x=0X43DE6DA1);
	op_hex		(x,	1);
	create_insn	(0X43DE6DC3);
	create_insn	(0X43DE6DCC);
	make_array	(0X43DE6DD5,	0XB);
	create_insn	(0X43DE6DE0);
	create_insn	(x=0X43DE6E10);
	op_hex		(x,	1);
	create_insn	(0X43DE6E52);
	create_insn	(x=0X43DE6E71);
	op_hex		(x,	1);
	make_array	(0X43DE6E86,	0XA);
	create_insn	(0X43DE6E90);
	create_insn	(x=0X43DE6EBD);
	op_hex		(x,	1);
	create_insn	(x=0X43DE6EC2);
	op_hex		(x,	1);
	create_insn	(0X43DE6ECF);
	make_array	(0X43DE6EDD,	0X3);
	create_insn	(0X43DE6EE0);
	create_insn	(x=0X43DE6EE6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE6F34);
	op_hex		(x,	1);
	create_insn	(x=0X43DE6F3F);
	op_hex		(x,	1);
	create_insn	(0X43DE6F59);
	create_insn	(x=0X43DE6F7E);
	op_hex		(x,	1);
	create_insn	(x=0X43DE6F93);
	op_hex		(x,	1);
	create_insn	(x=0X43DE6FBB);
	op_hex		(x,	1);
	make_array	(0X43DE6FE8,	0X8);
	create_insn	(0X43DE6FF0);
	make_array	(0X43DE7004,	0XC);
	create_insn	(0X43DE7010);
	create_insn	(x=0X43DE7013);
	op_hex		(x,	1);
	create_insn	(0X43DE7032);
	create_insn	(x=0X43DE704A);
	op_hex		(x,	1);
	create_insn	(x=0X43DE7073);
	op_hex		(x,	1);
	create_insn	(x=0X43DE709B);
	op_hex		(x,	1);
	make_array	(0X43DE70A6,	0XA);
	create_insn	(0X43DE70B0);
	create_insn	(x=0X43DE70B3);
	op_hex		(x,	1);
	create_insn	(0X43DE70D2);
	create_insn	(x=0X43DE70EA);
	op_hex		(x,	1);
	create_insn	(x=0X43DE7113);
	op_hex		(x,	1);
	create_insn	(x=0X43DE713B);
	op_hex		(x,	1);
	make_array	(0X43DE7146,	0XA);
	create_insn	(0X43DE7150);
	create_insn	(x=0X43DE7153);
	op_hex		(x,	1);
	create_insn	(x=0X43DE7156);
	op_hex		(x,	1);
	set_cmt	(0X43DE7162,	"Size",	0);
	create_insn	(x=0X43DE716B);
	op_hex		(x,	1);
	create_insn	(x=0X43DE7180);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE7199);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE71C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DE71CA,	"Size",	0);
	create_insn	(x=0X43DE71E2);
	op_hex		(x,	1);
	create_insn	(x=0X43DE71F1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE7221);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE722C,	"Size",	0);
	create_insn	(x=0X43DE7233);
	op_hex		(x,	1);
	create_insn	(0X43DE7255);
	create_insn	(0X43DE725E);
	make_array	(0X43DE7267,	0X9);
	create_insn	(0X43DE7270);
	create_insn	(x=0X43DE729D);
	op_hex		(x,	1);
	create_insn	(x=0X43DE72A2);
	op_hex		(x,	1);
	create_insn	(0X43DE72AF);
	make_array	(0X43DE72BD,	0X3);
	create_insn	(0X43DE72C0);
	create_insn	(x=0X43DE7305);
	op_hex		(x,	1);
	create_insn	(x=0X43DE730C);
	op_hex		(x,	1);
	create_insn	(0X43DE733A);
	create_insn	(x=0X43DE735E);
	op_hex		(x,	1);
	create_insn	(0X43DE7372);
	make_array	(0X43DE737B,	0X5);
	create_insn	(0X43DE7380);
	make_array	(0X43DE7394,	0XC);
	create_insn	(0X43DE73A0);
	create_insn	(0X43DE73BA);
	create_insn	(x=0X43DE73C6);
	op_hex		(x,	1);
	make_array	(0X43DE73EA,	0X6);
	create_insn	(0X43DE73F0);
	create_insn	(0X43DE740A);
	create_insn	(x=0X43DE7416);
	op_hex		(x,	1);
	make_array	(0X43DE743A,	0X6);
	create_insn	(0X43DE7440);
	create_insn	(0X43DE7458);
	make_array	(0X43DE7498,	0X8);
	create_insn	(0X43DE74A0);
	make_array	(0X43DE74BE,	0X2);
	create_insn	(0X43DE74C0);
	create_insn	(x=0X43DE74DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE74E1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE74E6);
	op_hex		(x,	1);
	make_array	(0X43DE74F9,	0X7);
	create_insn	(0X43DE7500);
	create_insn	(0X43DE7518);
	create_insn	(0X43DE7560);
	make_array	(0X43DE757E,	0X2);
	create_insn	(0X43DE7580);
	create_insn	(x=0X43DE759C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE75A1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE75A6);
	op_hex		(x,	1);
	make_array	(0X43DE75B9,	0X7);
	create_insn	(0X43DE75C0);
	create_insn	(x=0X43DE75F3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE75F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE75FD);
	op_hex		(x,	1);
	make_array	(0X43DE760E,	0X2);
	create_insn	(0X43DE7610);
	make_array	(0X43DE7633,	0XD);
	create_insn	(0X43DE7640);
	create_insn	(x=0X43DE76C0);
	op_hex		(x,	1);
	create_insn	(0X43DE76FB);
	create_insn	(0X43DE7705);
	create_insn	(0X43DE776A);
	create_insn	(x=0X43DE778B);
	op_hex		(x,	1);
	create_insn	(0X43DE779F);
	make_array	(0X43DE77A7,	0X9);
	create_insn	(0X43DE77B0);
	make_array	(0X43DE77C8,	0X8);
	create_insn	(0X43DE77D0);
	create_insn	(0X43DE77E8);
	create_insn	(0X43DE7820);
	make_array	(0X43DE783E,	0X2);
	create_insn	(0X43DE7840);
	create_insn	(x=0X43DE7851);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE7856);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE785B);
	op_hex		(x,	1);
	make_array	(0X43DE786E,	0X2);
	create_insn	(0X43DE7870);
	create_insn	(0X43DE7888);
	make_array	(0X43DE78CC,	0X4);
	create_insn	(0X43DE78D0);
	make_array	(0X43DE78EE,	0X2);
	create_insn	(0X43DE78F0);
	create_insn	(x=0X43DE7901);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE7906);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE790B);
	op_hex		(x,	1);
	make_array	(0X43DE791E,	0X2);
	create_insn	(0X43DE7920);
	create_insn	(x=0X43DE7923);
	op_hex		(x,	1);
	create_insn	(x=0X43DE7926);
	op_hex		(x,	1);
	set_cmt	(0X43DE7941,	"Size",	0);
	create_insn	(x=0X43DE7951);
	op_hex		(x,	1);
	create_insn	(x=0X43DE7957);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE7971);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE7999);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DE799F,	"Size",	0);
	create_insn	(x=0X43DE79BB);
	op_hex		(x,	1);
	create_insn	(x=0X43DE79CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE79FA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE7A05,	"Size",	0);
	create_insn	(x=0X43DE7A0C);
	op_hex		(x,	1);
	create_insn	(0X43DE7A2E);
	create_insn	(0X43DE7A38);
	make_array	(0X43DE7A42,	0XE);
	create_insn	(0X43DE7A50);
	create_insn	(x=0X43DE7A89);
	op_hex		(x,	1);
	create_insn	(x=0X43DE7A8E);
	op_hex		(x,	1);
	make_array	(0X43DE7AC2,	0XE);
	create_insn	(0X43DE7AD0);
	create_insn	(x=0X43DE7AD3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE7AD6);
	op_hex		(x,	1);
	set_cmt	(0X43DE7AF1,	"Size",	0);
	create_insn	(x=0X43DE7AFC);
	op_hex		(x,	1);
	create_insn	(x=0X43DE7B1F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE7B39);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE7B64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DE7B6A,	"Size",	0);
	create_insn	(x=0X43DE7B86);
	op_hex		(x,	1);
	create_insn	(x=0X43DE7B95);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE7BB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE7BBB,	"Size",	0);
	create_insn	(x=0X43DE7BC2);
	op_hex		(x,	1);
	create_insn	(0X43DE7BE4);
	create_insn	(0X43DE7BEE);
	make_array	(0X43DE7BF8,	0X8);
	create_insn	(0X43DE7C00);
	create_insn	(x=0X43DE7C06);
	op_hex		(x,	1);
	make_array	(0X43DE7C14,	0XC);
	create_insn	(0X43DE7C20);
	create_insn	(x=0X43DE7C35);
	op_hex		(x,	1);
	create_insn	(0X43DE7C40);
	create_insn	(0X43DE7C58);
	make_array	(0X43DE7C98,	0X8);
	create_insn	(0X43DE7CA0);
	make_array	(0X43DE7CBE,	0X2);
	create_insn	(0X43DE7CC0);
	create_insn	(x=0X43DE7CDD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE7CE2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE7CE7);
	op_hex		(x,	1);
	make_array	(0X43DE7CF8,	0X8);
	create_insn	(0X43DE7D00);
	create_insn	(0X43DE7D18);
	create_insn	(0X43DE7D60);
	make_array	(0X43DE7D7E,	0X2);
	create_insn	(0X43DE7D80);
	create_insn	(x=0X43DE7D9D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE7DA2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE7DA7);
	op_hex		(x,	1);
	make_array	(0X43DE7DB8,	0X8);
	create_insn	(0X43DE7DC0);
	create_insn	(x=0X43DE7DD5);
	op_hex		(x,	1);
	create_insn	(0X43DE7DE0);
	create_insn	(x=0X43DE7DFD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE7E02);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE7E07);
	op_hex		(x,	1);
	make_array	(0X43DE7E18,	0X8);
	create_insn	(0X43DE7E20);
	create_insn	(x=0X43DE7E3D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE7E42);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE7E47);
	op_hex		(x,	1);
	make_array	(0X43DE7E58,	0X8);
	create_insn	(0X43DE7E60);
	create_insn	(0X43DE7E74);
	make_array	(0X43DE7EA5,	0XB);
	create_insn	(0X43DE7EB0);
	create_insn	(0X43DE7ECA);
	create_insn	(0X43DE7F17);
	make_array	(0X43DE7F28,	0X8);
	create_insn	(0X43DE7F30);
	set_cmt	(0X43DE7F38,	"color",	0);
	create_insn	(0X43DE7F53);
	create_insn	(0X43DE7F6D);
	set_cmt	(0X43DE7F92,	"a3",	0);
	create_insn	(0X43DE7FA4);
	set_cmt	(0X43DE7FB2,	"a2",	0);
	set_cmt	(0X43DE7FBB,	"a1",	0);
	create_insn	(x=0X43DE7FC7);
	op_hex		(x,	1);
	create_insn	(x=0X43DE7FD1);
	op_hex		(x,	1);
	create_insn	(x=0X43DE7FD4);
	op_hex		(x,	1);
	create_insn	(0X43DE7FFD);
	create_insn	(0X43DE8034);
	make_array	(0X43DE8047,	0X9);
	create_insn	(0X43DE8050);
	create_insn	(x=0X43DE8064);
	op_hex		(x,	1);
	create_insn	(0X43DE8079);
	make_array	(0X43DE807B,	0X5);
	create_insn	(0X43DE8080);
	create_insn	(x=0X43DE8083);
	op_hex		(x,	1);
	create_insn	(x=0X43DE8096);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE80A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE80A9);
	op_hex		(x,	1);
	make_array	(0X43DE80BE,	0X2);
	create_insn	(0X43DE80C0);
	create_insn	(x=0X43DE80C3);
	op_hex		(x,	1);
	set_cmt	(0X43DE80F3,	"Size",	0);
	create_insn	(x=0X43DE80FD);
	op_hex		(x,	1);
	set_cmt	(0X43DE811A,	"Size",	0);
	create_insn	(x=0X43DE8121);
	op_hex		(x,	1);
	create_insn	(0X43DE813B);
	create_insn	(x=0X43DE8181);
	op_hex		(x,	1);
	make_array	(0X43DE8193,	0XD);
	create_insn	(0X43DE81A0);
	create_insn	(x=0X43DE81A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE81B8);
	op_hex		(x,	1);
	create_insn	(x=0X43DE81BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE81C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE81CA);
	op_hex		(x,	1);
	create_insn	(x=0X43DE81CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE81D5);
	op_hex		(x,	1);
	create_insn	(x=0X43DE81E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE81EE);
	op_hex		(x,	1);
	create_insn	(x=0X43DE81F3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE8202);
	op_stkvar	(x,	0);
	create_insn	(0X43DE8207);
	create_insn	(x=0X43DE820E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE8219);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE821C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE8223);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8229);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE822C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8238);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8249);
	op_hex		(x,	1);
	create_insn	(0X43DE824E);
	create_insn	(x=0X43DE8258);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8261);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE826E);
	op_hex		(x,	1);
	create_insn	(x=0X43DE8271);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE8279);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE8284);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8287);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE829A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE829D);
	op_stkvar	(x,	0);
	make_array	(0X43DE82B3,	0XD);
	create_insn	(0X43DE82C0);
	create_insn	(x=0X43DE82C3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE82C6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE82C9);
	op_hex		(x,	1);
	create_insn	(x=0X43DE82D6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE830B);
	op_hex		(x,	1);
	create_insn	(x=0X43DE831E);
	op_hex		(x,	1);
	make_array	(0X43DE832B,	0X5);
	create_insn	(x=0X43DE8330);
	op_hex		(x,	1);
	make_array	(0X43DE8336,	0XA);
	create_insn	(x=0X43DE8340);
	op_hex		(x,	1);
	make_array	(0X43DE8346,	0XA);
	create_insn	(x=0X43DE8350);
	op_hex		(x,	1);
	make_array	(0X43DE8356,	0XA);
	create_insn	(0X43DE8360);
	create_insn	(x=0X43DE8371);
	op_hex		(x,	1);
	create_insn	(x=0X43DE8395);
	op_hex		(x,	1);
	create_insn	(x=0X43DE8398);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE839B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE83A6);
	op_stkvar	(x,	1);
	create_insn	(0X43DE83B4);
	make_array	(0X43DE83BA,	0X6);
	create_insn	(0X43DE83C0);
	set_name	(0X43DE83C0,	"C_SDK::Surface::DrawManager::GetNextRainbowColor");
	create_insn	(x=0X43DE83C3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE83C6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE83DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE83ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE83F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE83F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8403);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE8416);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE841C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8422);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8428);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE842C);
	op_stkvar	(x,	1);
	create_insn	(0X43DE846A);
	create_insn	(0X43DE8484);
	create_insn	(0X43DE84A1);
	create_insn	(0X43DE84BE);
	create_insn	(0X43DE84DB);
	make_array	(0X43DE8523,	0XD);
	create_insn	(0X43DE8530);
	create_insn	(x=0X43DE8533);
	op_hex		(x,	1);
	create_insn	(x=0X43DE853B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE854E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE858E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE8597);
	op_hex		(x,	1);
	create_insn	(0X43DE85A1);
	create_insn	(0X43DE8604);
	create_insn	(0X43DE8620);
	create_insn	(0X43DE863C);
	create_insn	(0X43DE8658);
	create_insn	(0X43DE8674);
	create_insn	(x=0X43DE8690);
	op_hex		(x,	1);
	create_insn	(x=0X43DE8696);
	op_hex		(x,	1);
	create_insn	(x=0X43DE86A5);
	op_hex		(x,	1);
	create_insn	(x=0X43DE86BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE86C1);
	op_stkvar	(x,	0);
	make_array	(0X43DE86ED,	0X3);
	create_insn	(0X43DE86F0);
	create_insn	(x=0X43DE86F3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE86FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE8704);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE871E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8721);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8731);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE876A);
	op_hex		(x,	1);
	create_insn	(0X43DE8774);
	create_insn	(0X43DE87B4);
	create_insn	(0X43DE87CC);
	create_insn	(0X43DE87E4);
	create_insn	(0X43DE87FC);
	create_insn	(0X43DE8814);
	create_insn	(x=0X43DE8840);
	op_hex		(x,	1);
	create_insn	(x=0X43DE8846);
	op_hex		(x,	1);
	create_insn	(x=0X43DE8855);
	op_hex		(x,	1);
	create_insn	(x=0X43DE8899);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE88AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE88B3);
	op_stkvar	(x,	1);
	make_array	(0X43DE88C3,	0XD);
	create_insn	(0X43DE88D0);
	create_insn	(x=0X43DE88D3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE88E6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE88F1,	"Size",	0);
	create_insn	(x=0X43DE8902);
	op_hex		(x,	1);
	make_array	(0X43DE8939,	0X7);
	create_insn	(0X43DE8940);
	create_insn	(x=0X43DE8960);
	op_hex		(x,	1);
	make_array	(0X43DE897E,	0X2);
	create_insn	(0X43DE8980);
	create_insn	(0X43DE89E5);
	create_insn	(x=0X43DE89ED);
	op_hex		(x,	1);
	create_insn	(0X43DE8A02);
	create_insn	(x=0X43DE8A41);
	op_hex		(x,	1);
	create_insn	(0X43DE8A60);
	create_insn	(x=0X43DE8A67);
	op_stkvar	(x,	1);
	make_array	(0X43DE8A79,	0X7);
	create_insn	(0X43DE8A80);
	create_insn	(x=0X43DE8A83);
	op_stkvar	(x,	1);
	make_array	(0X43DE8A8D,	0X3);
	create_insn	(0X43DE8A90);
	create_insn	(0X43DE8ACC);
	make_array	(0X43DE8AD5,	0XB);
	create_insn	(0X43DE8AE0);
	set_name	(0X43DE8AE0,	"nullsub_4");
	make_array	(0X43DE8AE3,	0XD);
	create_insn	(0X43DE8AF0);
	make_array	(0X43DE8AF3,	0XD);
	create_insn	(0X43DE8B00);
	make_array	(0X43DE8B03,	0XD);
	create_insn	(0X43DE8B10);
	create_insn	(x=0X43DE8B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8B2E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE8B39,	"Size",	0);
	create_insn	(x=0X43DE8B40);
	op_hex		(x,	1);
	make_array	(0X43DE8B67,	0X9);
	create_insn	(0X43DE8B70);
	create_insn	(x=0X43DE8B83);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE8B8E,	"Size",	0);
	create_insn	(x=0X43DE8B95);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8B98);
	op_hex		(x,	1);
	create_insn	(0X43DE8BC0);
	make_array	(0X43DE8BC5,	0XB);
	create_insn	(0X43DE8BD0);
	set_cmt	(0X43DE8BD3,	"Size",	0);
	create_insn	(x=0X43DE8BD5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE8BDB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DE8BF5,	"Size",	0);
	create_insn	(x=0X43DE8BFF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE8C05);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE8C2A);
	op_hex		(x,	1);
	make_array	(0X43DE8C48,	0X8);
	create_insn	(0X43DE8C50);
	create_insn	(x=0X43DE8C70);
	op_hex		(x,	1);
	create_insn	(x=0X43DE8C8C);
	op_hex		(x,	1);
	create_insn	(x=0X43DE8CAA);
	op_hex		(x,	1);
	create_insn	(x=0X43DE8CC0);
	op_hex		(x,	1);
	make_array	(0X43DE8CC5,	0XB);
	create_insn	(0X43DE8CD0);
	create_insn	(x=0X43DE8CDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8CEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8CF2);
	op_stkvar	(x,	1);
	create_insn	(0X43DE8D00);
	create_insn	(x=0X43DE8D0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8D29);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE8D2C);
	op_stkvar	(x,	0);
	make_array	(0X43DE8D3B,	0X5);
	create_insn	(0X43DE8D40);
	make_array	(0X43DE8D53,	0XD);
	create_insn	(0X43DE8D60);
	make_array	(0X43DE8D64,	0XC);
	create_insn	(0X43DE8D70);
	create_insn	(x=0X43DE8D74);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE8D80);
	op_stkvar	(x,	1);
	create_insn	(0X43DE8D88);
	create_insn	(x=0X43DE8DC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8DD0);
	op_stkvar	(x,	1);
	create_insn	(0X43DE8DF0);
	create_insn	(x=0X43DE8E25);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE8E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8E2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE8E36);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE8E3F);
	op_stkvar	(x,	1);
	make_array	(0X43DE8E4B,	0X5);
	create_insn	(0X43DE8E50);
	set_cmt	(0X43DE8E51,	"num",	0);
	set_cmt	(0X43DE8E58,	"value",	0);
	set_cmt	(0X43DE8E5A,	"pointer",	0);
	create_insn	(x=0X43DE8E60);
	op_hex		(x,	1);
	make_array	(0X43DE8E67,	0X9);
	create_insn	(0X43DE8E70);
	set_cmt	(0X43DE8E74,	"num",	0);
	set_cmt	(0X43DE8E7B,	"value",	0);
	set_cmt	(0X43DE8E7D,	"pointer",	0);
	create_insn	(x=0X43DE8E97);
	op_hex		(x,	1);
	make_array	(0X43DE8EA1,	0XF);
	create_insn	(0X43DE8EB0);
	create_insn	(x=0X43DE8EB6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE8F08);
	op_hex		(x,	1);
	create_insn	(x=0X43DE8F2A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43DE8F41);
	create_insn	(x=0X43DE8F46);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DE8F56,	0XA);
	create_insn	(0X43DE8F60);
	set_cmt	(0X43DE8F63,	"Size",	0);
	create_insn	(x=0X43DE8F65);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE8F6B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DE8F85,	"Size",	0);
	create_insn	(x=0X43DE8F8F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE8F95);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE8FB6);
	op_hex		(x,	1);
	make_array	(0X43DE8FE7,	0X9);
	create_insn	(0X43DE8FF0);
	set_cmt	(0X43DE8FF3,	"Size",	0);
	create_insn	(x=0X43DE8FFC);
	op_hex		(x,	1);
	create_insn	(x=0X43DE9008);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE900E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE902C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE9037,	"Size",	0);
	create_insn	(x=0X43DE903E);
	op_hex		(x,	1);
	make_array	(0X43DE9058,	0X8);
	create_insn	(0X43DE9060);
	set_cmt	(0X43DE9063,	"Size",	0);
	create_insn	(x=0X43DE9065);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE907E);
	op_hex		(x,	1);
	make_array	(0X43DE908D,	0X3);
	create_insn	(0X43DE9090);
	create_insn	(x=0X43DE90A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE90AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE90B2);
	op_stkvar	(x,	1);
	make_array	(0X43DE90D1,	0XF);
	create_insn	(0X43DE90E0);
	set_name	(0X43DE90E0,	"OneTap::GUI::Render::AddUpperFrame");
	create_insn	(x=0X43DE90ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE90F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE90F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9104);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE910A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9125);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE912B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DE913B,	"Size",	0);
	create_insn	(x=0X43DE9171);
	op_hex		(x,	1);
	create_insn	(x=0X43DE917F);
	op_stkvar	(x,	1);
	make_array	(0X43DE91C7,	0X9);
	create_insn	(0X43DE91D0);
	create_insn	(x=0X43DE91DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE91F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DE9203,	"Size",	0);
	create_insn	(x=0X43DE920A);
	op_hex		(x,	1);
	make_array	(0X43DE9235,	0XB);
	create_insn	(0X43DE9240);
	create_insn	(x=0X43DE9251);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9267);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE926C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9282);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_2(void) {
        auto x;
#define id x

	create_insn	(x=0X43DE9285);
	op_hex		(x,	1);
	make_array	(0X43DE9293,	0XD);
	create_insn	(0X43DE92A0);
	set_cmt	(0X43DE92AD,	"Size",	0);
	create_insn	(x=0X43DE92AF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE92C9);
	op_hex		(x,	1);
	create_insn	(x=0X43DE92D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE92E5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE92EB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE92F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DE92FE,	0X2);
	create_insn	(0X43DE9300);
	create_insn	(x=0X43DE930E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE931E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9336);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE933C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9350);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE9357);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE9364);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9379);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE937D);
	op_stkvar	(x,	1);
	make_array	(0X43DE9398,	0X8);
	create_insn	(0X43DE93A0);
	make_array	(0X43DE93A6,	0XA);
	create_insn	(0X43DE93B0);
	create_insn	(x=0X43DE93BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE93CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE93F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE93F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9408);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9414);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9422);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9432);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9438);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DE947A,	0X6);
	create_insn	(0X43DE9480);
	create_insn	(x=0X43DE948D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9498);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE949E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE94C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE94CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE94E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE94F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9500);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9512);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9518);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DE9558,	0X8);
	create_insn	(0X43DE9560);
	create_insn	(x=0X43DE956D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9576);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE957C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE959B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE95A1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE95A7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DE95F4,	0XC);
	create_insn	(0X43DE9600);
	create_insn	(x=0X43DE960B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9625);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE9639);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE964D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43DE9664);
	make_array	(0X43DE9668,	0X8);
	create_insn	(0X43DE9670);
	create_insn	(0X43DE9688);
	make_array	(0X43DE96C8,	0X8);
	create_insn	(0X43DE96D0);
	make_array	(0X43DE96EE,	0X2);
	create_insn	(0X43DE96F0);
	create_insn	(x=0X43DE9701);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE9706);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE970B);
	op_hex		(x,	1);
	make_array	(0X43DE971E,	0X2);
	create_insn	(0X43DE9720);
	create_insn	(0X43DE9738);
	create_insn	(0X43DE9780);
	make_array	(0X43DE979E,	0X2);
	create_insn	(0X43DE97A0);
	create_insn	(x=0X43DE97B1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE97B6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE97BB);
	op_hex		(x,	1);
	make_array	(0X43DE97CE,	0X2);
	create_insn	(0X43DE97D0);
	create_insn	(0X43DE9809);
	create_insn	(0X43DE983B);
	create_insn	(0X43DE9860);
	create_insn	(0X43DE9872);
	make_array	(0X43DE98B7,	0X9);
	create_insn	(0X43DE98C0);
	create_insn	(x=0X43DE98FA);
	op_hex		(x,	1);
	create_insn	(0X43DE9900);
	create_insn	(x=0X43DE990D);
	op_hex		(x,	1);
	create_insn	(x=0X43DE993E);
	op_hex		(x,	1);
	create_insn	(0X43DE996E);
	create_insn	(0X43DE99A0);
	create_insn	(x=0X43DE99B1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE99B6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DE99BB);
	op_hex		(x,	1);
	make_array	(0X43DE99CE,	0X2);
	create_insn	(0X43DE99D0);
	create_insn	(x=0X43DE99DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE99ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9A14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9A1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9A21);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DE9A37,	0X9);
	create_insn	(0X43DE9A40);
	create_insn	(x=0X43DE9A4D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9A5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9A73);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9A81);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9A91);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9A97);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DE9AAA,	0X6);
	create_insn	(0X43DE9AB0);
	create_insn	(x=0X43DE9ABD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9ACD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9AF3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9AF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9AFF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9B06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9B1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9B26);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9B32);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9B3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9B4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9B56);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9B62);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9B68);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE9B72);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE9B7C);
	op_stkvar	(x,	0);
	make_array	(0X43DE9BA4,	0XC);
	create_insn	(0X43DE9BB0);
	create_insn	(x=0X43DE9BB3);
	op_stkvar	(x,	1);
	create_insn	(0X43DE9BC0);
	create_insn	(x=0X43DE9BCD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9BDD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9C03);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9C09);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9C0F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9C16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9C2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9C36);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9C42);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9C4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9C5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9C66);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DE9C6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE9C76);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE9C80);
	op_stkvar	(x,	0);
	make_array	(0X43DE9C9E,	0X2);
	create_insn	(0X43DE9CA0);
	create_insn	(x=0X43DE9CA3);
	op_hex		(x,	1);
	create_insn	(x=0X43DE9CA6);
	op_hex		(x,	1);
	create_insn	(x=0X43DE9CA9);
	op_hex		(x,	1);
	create_insn	(x=0X43DE9CB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DE9CB6);
	op_hex		(x,	1);
	set_cmt	(0X43DE9CD9,	"num",	0);
	set_cmt	(0X43DE9CDE,	"value",	0);
	create_insn	(x=0X43DE9D15);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9D1B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9D22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DE9D35,	"pointer",	0);
	set_cmt	(0X43DE9D69,	"Size",	0);
	create_insn	(x=0X43DE9D7A);
	op_hex		(x,	1);
	create_insn	(x=0X43DE9DAB);
	op_hex		(x,	1);
	create_insn	(x=0X43DE9DCA);
	op_hex		(x,	1);
	set_cmt	(0X43DE9DEE,	"a3",	0);
	set_cmt	(0X43DE9DEF,	"a2",	0);
	set_cmt	(0X43DE9DF0,	"this",	0);
	create_insn	(x=0X43DE9E0E);
	op_hex		(x,	1);
	create_insn	(0X43DE9E40);
	create_insn	(x=0X43DE9E48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DE9E50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DE9E62,	0XE);
	create_insn	(0X43DE9E70);
	make_array	(0X43DE9E7A,	0X6);
	create_insn	(0X43DE9E80);
	make_array	(0X43DE9E84,	0XC);
	create_insn	(0X43DE9E90);
	set_cmt	(0X43DE9E96,	"num",	0);
	set_cmt	(0X43DE9E9A,	"value",	0);
	set_cmt	(0X43DE9E9C,	"pointer",	0);
	create_insn	(x=0X43DE9EA2);
	op_hex		(x,	1);
	create_insn	(x=0X43DE9ED8);
	op_stkvar	(x,	1);
	set_cmt	(0X43DE9EDB,	"Size",	0);
	create_insn	(x=0X43DE9FC4);
	op_hex		(x,	1);
	set_cmt	(0X43DE9FD2,	"Size",	0);
	create_insn	(x=0X43DEA026);
	op_hex		(x,	1);
	set_cmt	(0X43DEA02F,	"Size",	0);
	create_insn	(x=0X43DEA03C);
	op_hex		(x,	1);
	set_cmt	(0X43DEA045,	"Size",	0);
	create_insn	(x=0X43DEA052);
	op_hex		(x,	1);
	set_cmt	(0X43DEA058,	"Size",	0);
	create_insn	(x=0X43DEA065);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA06B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA074);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA07D);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEA080,	"Size",	0);
	create_insn	(x=0X43DEA08C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEA0A1);
	op_hex		(x,	1);
	set_cmt	(0X43DEA0AE,	"Size",	0);
	create_insn	(x=0X43DEA0BB);
	op_hex		(x,	1);
	make_array	(0X43DEA0DE,	0X2);
	create_insn	(0X43DEA0E0);
	create_insn	(x=0X43DEA0E3);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA0EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA0F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA0F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA105);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA109);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA110);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA117);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA122);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA126);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA129);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA12C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA130);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA13D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA141);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA144);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA14B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA151);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA158);
	op_stkvar	(x,	0);
	set_cmt	(0X43DEA169,	"a3",	0);
	set_cmt	(0X43DEA16A,	"a2",	0);
	set_cmt	(0X43DEA16B,	"this",	0);
	create_insn	(x=0X43DEA16B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA178);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA17E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA187);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA197);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA1BC);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA1BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA1C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA1F2);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA1FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA201);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA208);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA20F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA213);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA21A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA221);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA230);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA234);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA237);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA23A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA23E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA24B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA24F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA252);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA259);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA25F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA266);
	op_stkvar	(x,	0);
	set_cmt	(0X43DEA279,	"a3",	0);
	set_cmt	(0X43DEA27A,	"a2",	0);
	set_cmt	(0X43DEA27B,	"this",	0);
	create_insn	(x=0X43DEA27B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA288);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA28E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA297);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA2A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA2CC);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA2CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA2D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA302);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA30E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA311);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA318);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA31F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA323);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA32A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA331);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA340);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA344);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA347);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA34A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA34E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA35B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA35F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA362);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA369);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA36F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA376);
	op_stkvar	(x,	0);
	set_cmt	(0X43DEA389,	"a3",	0);
	set_cmt	(0X43DEA38A,	"a2",	0);
	set_cmt	(0X43DEA38B,	"this",	0);
	create_insn	(x=0X43DEA38B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA398);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA39E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA3A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA3B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA3DC);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA3DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA3E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA412);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA41E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA421);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA428);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA42F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA433);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA43A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA441);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA450);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA454);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA457);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA45A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA45E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA46B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA46F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA472);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA479);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA47F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA486);
	op_stkvar	(x,	0);
	set_cmt	(0X43DEA499,	"a3",	0);
	set_cmt	(0X43DEA49A,	"a2",	0);
	set_cmt	(0X43DEA49B,	"this",	0);
	create_insn	(x=0X43DEA49B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA4A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA4AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA4B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA4C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA4EC);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA4EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA4F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA522);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA53F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA542);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA548);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA54E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA55E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA5BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA5C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA5CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA5D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA60D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA614);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA61D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA628);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA62F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA657);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA65E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA667);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA675);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA67C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA6A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA6BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA6D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA6E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA6EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA6F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA712);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA71A);
	op_hex		(x,	1);
	create_insn	(0X43DEA72A);
	create_insn	(x=0X43DEA734);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA73B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA740);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA747);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA74F);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA755);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA75D);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA760);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA768);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA76B);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA77B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA782);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA787);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA78F);
	op_hex		(x,	1);
	create_insn	(x=0X43DEA79A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA79D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA7AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA7C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEA7CC);
	op_stkvar	(x,	1);
	make_array	(0X43DEA7DC,	0X4);
	create_insn	(0X43DEA7E0);
	create_insn	(0X43DEA7F3);
	make_array	(0X43DEA848,	0X8);
	create_insn	(0X43DEA850);
	create_insn	(x=0X43DEA854);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEA859);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DEA88E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DEA899,	"Size",	0);
	create_insn	(x=0X43DEA8A0);
	op_hex		(x,	1);
	make_array	(0X43DEA8CC,	0X4);
	create_insn	(0X43DEA8D0);
	make_array	(0X43DEA8EB,	0X5);
	create_insn	(0X43DEA8F0);
	make_array	(0X43DEA8F6,	0XA);
	create_insn	(0X43DEA900);
	create_insn	(x=0X43DEA903);
	op_hex		(x,	1);
	make_array	(0X43DEA981,	0XF);
	create_insn	(0X43DEA990);
	create_insn	(0X43DEA9A0);
	make_array	(0X43DEA9A3,	0XD);
	create_insn	(0X43DEA9B0);
	create_insn	(x=0X43DEA9B3);
	op_hex		(x,	1);
	make_array	(0X43DEAA31,	0XF);
	create_insn	(0X43DEAA40);
	make_array	(0X43DEAA4B,	0X5);
	create_insn	(0X43DEAA50);
	create_insn	(x=0X43DEAA53);
	op_hex		(x,	1);
	make_array	(0X43DEAAD1,	0XF);
	create_insn	(0X43DEAAE0);
	make_array	(0X43DEAAE6,	0XA);
	create_insn	(0X43DEAAF0);
	create_insn	(x=0X43DEAAF3);
	op_hex		(x,	1);
	make_array	(0X43DEAB71,	0XF);
	create_insn	(0X43DEAB80);
	create_insn	(x=0X43DEABAA);
	op_hex		(x,	1);
	create_insn	(x=0X43DEABC1);
	op_hex		(x,	1);
	make_array	(0X43DEABC6,	0XA);
	create_insn	(0X43DEABD0);
	make_array	(0X43DEABE8,	0X8);
	create_insn	(0X43DEABF0);
	create_insn	(x=0X43DEABF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DEAC00);
	set_name	(0X43DEAC00,	"OneTap::Features::Server::IsNotAimStep");
	make_array	(0X43DEAC0B,	0X5);
	create_insn	(0X43DEAC10);
	set_name	(0X43DEAC10,	"OneTap::Features::Server::IsNotAimStepAdditional");
	create_insn	(0X43DEAC25);
	make_array	(0X43DEAC28,	0X8);
	create_insn	(0X43DEAC30);
	create_insn	(x=0X43DEAC35);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEAC3C,	0X4);
	create_insn	(0X43DEAC40);
	create_insn	(x=0X43DEAC45);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DEAC4E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43DEAC5A);
	make_array	(0X43DEAC5D,	0X3);
	create_insn	(0X43DEAC60);
	create_insn	(x=0X43DEAC65);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEAC6C,	0X4);
	create_insn	(0X43DEAC70);
	make_array	(0X43DEAC7B,	0X5);
	create_insn	(0X43DEAC80);
	create_insn	(x=0X43DEAC85);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43DEAC90);
	create_insn	(x=0X43DEAC95);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEAC9C,	0X4);
	create_insn	(0X43DEACA0);
	create_insn	(x=0X43DEACA5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEACAC,	0X4);
	create_insn	(0X43DEACB0);
	create_insn	(x=0X43DEACD0);
	op_hex		(x,	1);
	create_insn	(x=0X43DEACE6);
	op_hex		(x,	1);
	create_insn	(x=0X43DEAD02);
	op_hex		(x,	1);
	create_insn	(x=0X43DEAD15);
	op_hex		(x,	1);
	make_array	(0X43DEAD1B,	0X5);
	create_insn	(0X43DEAD20);
	make_array	(0X43DEAD38,	0X8);
	create_insn	(0X43DEAD40);
	create_insn	(x=0X43DEAD46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DEAD50);
	make_array	(0X43DEAD5B,	0X5);
	create_insn	(0X43DEAD60);
	create_insn	(x=0X43DEAD65);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEAD6C,	0X4);
	create_insn	(0X43DEAD70);
	make_array	(0X43DEAD76,	0XA);
	create_insn	(0X43DEAD80);
	make_array	(0X43DEAD86,	0XA);
	create_insn	(0X43DEAD90);
	create_insn	(x=0X43DEAD95);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEAD9C,	0X4);
	create_insn	(0X43DEADA0);
	create_insn	(x=0X43DEADA5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEADAC,	0X4);
	create_insn	(0X43DEADB0);
	create_insn	(x=0X43DEADB5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEADBC,	0X4);
	create_insn	(0X43DEADC0);
	create_insn	(x=0X43DEADC5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEADCC,	0X4);
	create_insn	(0X43DEADD0);
	create_insn	(x=0X43DEADD5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DEADDE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43DEADEA);
	make_array	(0X43DEADED,	0X3);
	create_insn	(0X43DEADF0);
	create_insn	(x=0X43DEADF5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEADFC,	0X4);
	create_insn	(0X43DEAE00);
	create_insn	(x=0X43DEAE05);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEAE0C,	0X4);
	create_insn	(0X43DEAE10);
	make_array	(0X43DEAE1B,	0X5);
	create_insn	(0X43DEAE20);
	make_array	(0X43DEAE38,	0X8);
	create_insn	(0X43DEAE40);
	make_array	(0X43DEAE46,	0XA);
	create_insn	(0X43DEAE50);
	create_insn	(0X43DEAE65);
	make_array	(0X43DEAE68,	0X8);
	create_insn	(0X43DEAE70);
	create_byte	(0X43DEAE76);
	make_array	(0X43DEAE76,	0X2A);
	create_insn	(0X43DEAEA0);
	set_cmt	(0X43DEAEA5,	"switch 5 cases ",	0);
	set_cmt	(0X43DEAEAF,	"switch jump",	0);
	create_insn	(x=0X43DEAEAF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DEAEB6,	"jumptable 43DEAEAF case 1",	1);
	create_insn	(0X43DEAEB6);
	create_insn	(x=0X43DEAEBB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAECA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAED9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAEE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAEF7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DEAF02,	"jumptable 43DEAEAF case 2",	1);
	create_insn	(0X43DEAF02);
	create_insn	(x=0X43DEAF07);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAF16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAF25);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAF34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAF43);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DEAF4E,	"jumptable 43DEAEAF case 3",	1);
	create_insn	(0X43DEAF4E);
	create_insn	(x=0X43DEAF53);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAF62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAF71);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAF80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAF8F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DEAF9A,	"jumptable 43DEAEAF case 4",	1);
	create_insn	(0X43DEAF9A);
	create_insn	(x=0X43DEAF9F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAFAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAFBD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAFCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAFDB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DEAFE6,	"jumptable 43DEAEAF case 5",	1);
	create_insn	(0X43DEAFE6);
	create_insn	(x=0X43DEAFEB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEAFFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEB009);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEB018);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEB027);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DEB032,	"jumptable 43DEAEAF default case",	1);
	create_insn	(0X43DEB032);
	set_name	(0X43DEB032,	"def_43DEAEAF");
	create_insn	(x=0X43DEB037);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEB046);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEB055);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEB064);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEB073);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEB07E,	0X2);
	set_cmt	(0X43DEB080,	"jump table for switch statement",	0);
	create_dword	(x=0X43DEB080);
	make_array	(x,	0X5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DEB080,	"jpt_43DEAEAF");
	make_array	(0X43DEB094,	0XC);
	create_insn	(0X43DEB0A0);
	create_insn	(0X43DEB0B9);
	make_array	(0X43DEB0BC,	0X4);
	create_insn	(0X43DEB0C0);
	make_array	(0X43DEB0D2,	0XE);
	create_insn	(0X43DEB0E0);
	create_insn	(0X43DEB0F5);
	make_array	(0X43DEB0F8,	0X8);
	create_insn	(0X43DEB100);
	make_array	(0X43DEB106,	0XA);
	create_insn	(0X43DEB110);
	create_insn	(0X43DEB125);
	make_array	(0X43DEB128,	0X8);
	create_insn	(0X43DEB130);
	make_array	(0X43DEB136,	0XA);
	create_insn	(0X43DEB140);
	create_insn	(0X43DEB155);
	make_array	(0X43DEB158,	0X8);
	create_insn	(0X43DEB160);
	make_array	(0X43DEB16B,	0X5);
	create_insn	(0X43DEB170);
	make_array	(0X43DEB17B,	0X5);
	create_insn	(0X43DEB180);
	make_array	(0X43DEB18B,	0X5);
	create_insn	(0X43DEB190);
	create_insn	(0X43DEB1A6);
	make_array	(0X43DEB1A9,	0X7);
	create_insn	(0X43DEB1B0);
	create_insn	(0X43DEB1C5);
	make_array	(0X43DEB1C8,	0X8);
	create_insn	(0X43DEB1D0);
	create_insn	(0X43DEB1EE);
	make_array	(0X43DEB1F1,	0XF);
	create_insn	(0X43DEB200);
	make_array	(0X43DEB20B,	0X5);
	create_insn	(0X43DEB210);
	make_array	(0X43DEB216,	0XA);
	create_insn	(0X43DEB220);
	make_array	(0X43DEB226,	0XA);
	create_insn	(0X43DEB230);
	make_array	(0X43DEB236,	0XA);
	create_insn	(0X43DEB240);
	create_insn	(0X43DEB255);
	make_array	(0X43DEB258,	0X8);
	create_insn	(0X43DEB260);
	make_array	(0X43DEB26B,	0X5);
	create_insn	(0X43DEB270);
	make_array	(0X43DEB276,	0XA);
	create_insn	(0X43DEB280);
	make_array	(0X43DEB286,	0XA);
	create_insn	(0X43DEB290);
	make_array	(0X43DEB29B,	0X5);
	create_insn	(0X43DEB2A0);
	make_array	(0X43DEB2A6,	0XA);
	create_insn	(0X43DEB2B0);
	make_array	(0X43DEB2B6,	0XA);
	create_insn	(0X43DEB2C0);
	make_array	(0X43DEB2C6,	0XA);
	create_insn	(0X43DEB2D0);
	make_array	(0X43DEB2DB,	0X5);
	create_insn	(0X43DEB2E0);
	create_insn	(0X43DEB2F5);
	make_array	(0X43DEB2F8,	0X8);
	create_insn	(0X43DEB300);
	make_array	(0X43DEB306,	0XA);
	create_insn	(0X43DEB310);
	make_array	(0X43DEB31B,	0X5);
	create_insn	(0X43DEB320);
	create_insn	(0X43DEB335);
	make_array	(0X43DEB338,	0X8);
	create_insn	(0X43DEB340);
	make_array	(0X43DEB34B,	0X5);
	create_insn	(0X43DEB350);
	create_insn	(0X43DEB365);
	make_array	(0X43DEB368,	0X8);
	create_insn	(0X43DEB370);
	make_array	(0X43DEB37B,	0X5);
	create_insn	(0X43DEB380);
	create_insn	(0X43DEB395);
	make_array	(0X43DEB398,	0X8);
	create_insn	(0X43DEB3A0);
	make_array	(0X43DEB3AB,	0X5);
	create_insn	(0X43DEB3B0);
	create_insn	(0X43DEB3C5);
	make_array	(0X43DEB3C8,	0X8);
	create_insn	(0X43DEB3D0);
	make_array	(0X43DEB3DB,	0X5);
	create_insn	(0X43DEB3E0);
	create_insn	(0X43DEB3F5);
	make_array	(0X43DEB3F8,	0X8);
	create_insn	(0X43DEB400);
	make_array	(0X43DEB40B,	0X5);
	create_insn	(0X43DEB410);
	create_insn	(0X43DEB425);
	make_array	(0X43DEB428,	0X8);
	create_insn	(0X43DEB430);
	make_array	(0X43DEB43B,	0X5);
	create_insn	(0X43DEB440);
	create_insn	(0X43DEB455);
	make_array	(0X43DEB458,	0X8);
	create_insn	(0X43DEB460);
	make_array	(0X43DEB46B,	0X5);
	create_insn	(0X43DEB470);
	create_insn	(0X43DEB485);
	make_array	(0X43DEB488,	0X8);
	create_insn	(0X43DEB490);
	make_array	(0X43DEB49B,	0X5);
	create_insn	(0X43DEB4A0);
	create_insn	(0X43DEB4B5);
	make_array	(0X43DEB4B8,	0X8);
	create_insn	(0X43DEB4C0);
	make_array	(0X43DEB4CB,	0X5);
	create_insn	(0X43DEB4D0);
	create_insn	(0X43DEB4E5);
	make_array	(0X43DEB4E8,	0X8);
	create_insn	(0X43DEB4F0);
	make_array	(0X43DEB4FB,	0X5);
	create_insn	(0X43DEB500);
	create_insn	(0X43DEB515);
	make_array	(0X43DEB518,	0X8);
	create_insn	(0X43DEB520);
	make_array	(0X43DEB52B,	0X5);
	create_insn	(0X43DEB530);
	create_insn	(0X43DEB545);
	make_array	(0X43DEB548,	0X8);
	create_insn	(0X43DEB550);
	make_array	(0X43DEB55B,	0X5);
	create_insn	(0X43DEB560);
	create_insn	(0X43DEB575);
	make_array	(0X43DEB578,	0X8);
	create_insn	(0X43DEB580);
	make_array	(0X43DEB58B,	0X5);
	create_insn	(0X43DEB590);
	make_array	(0X43DEB59B,	0X5);
	create_insn	(0X43DEB5A0);
	make_array	(0X43DEB5AB,	0X5);
	create_insn	(0X43DEB5B0);
	make_array	(0X43DEB5BB,	0X5);
	create_insn	(0X43DEB5C0);
	make_array	(0X43DEB5C6,	0XA);
	create_insn	(0X43DEB5D0);
	create_insn	(0X43DEB5E5);
	make_array	(0X43DEB5E8,	0X8);
	create_insn	(0X43DEB5F0);
	make_array	(0X43DEB5F6,	0XA);
	create_insn	(0X43DEB600);
	create_insn	(0X43DEB615);
	make_array	(0X43DEB618,	0X8);
	create_insn	(0X43DEB620);
	make_array	(0X43DEB626,	0XA);
	create_insn	(0X43DEB630);
	make_array	(0X43DEB63B,	0X5);
	create_insn	(0X43DEB640);
	create_insn	(x=0X43DEB645);
	op_hex		(x,	1);
	create_insn	(x=0X43DEB648);
	op_hex		(x,	1);
	create_insn	(0X43DEB650);
	make_array	(0X43DEB653,	0XD);
	create_insn	(0X43DEB660);
	make_array	(0X43DEB666,	0XA);
	create_insn	(0X43DEB670);
	create_insn	(x=0X43DEB673);
	op_hex		(x,	1);
	create_insn	(x=0X43DEB67B);
	op_hex		(x,	1);
	create_insn	(x=0X43DEB686);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DEB69F,	"num",	0);
	set_cmt	(0X43DEB6A4,	"value",	0);
	set_cmt	(0X43DEB6A6,	"pointer",	0);
	create_insn	(x=0X43DEB6A6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DEB6BD);
	op_hex		(x,	1);
	set_cmt	(0X43DEB6C0,	"_DWORD",	0);
	set_cmt	(0X43DEB6C5,	"_DWORD",	0);
	create_insn	(x=0X43DEB6C5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DEB6CA,	"_DWORD",	0);
	set_cmt	(0X43DEB6CF,	"_DWORD",	0);
	create_insn	(x=0X43DEB6CF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DEB6D6,	"num",	0);
	set_cmt	(0X43DEB6DB,	"value",	0);
	set_cmt	(0X43DEB6DD,	"pointer",	0);
	create_insn	(x=0X43DEB6DD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DEB6E7);
	op_hex		(x,	1);
	set_cmt	(0X43DEB6EA,	"_DWORD",	0);
	set_cmt	(0X43DEB6EF,	"_DWORD",	0);
	create_insn	(x=0X43DEB6EF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DEB6F4,	"_DWORD",	0);
	set_cmt	(0X43DEB6F9,	"_DWORD",	0);
	create_insn	(x=0X43DEB6F9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DEB700,	"num",	0);
	set_cmt	(0X43DEB705,	"value",	0);
	set_cmt	(0X43DEB707,	"pointer",	0);
	create_insn	(x=0X43DEB707);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DEB71F);
	op_hex		(x,	1);
	set_cmt	(0X43DEB722,	"fromArray",	0);
	set_cmt	(0X43DEB728,	"toArray",	0);
	create_insn	(x=0X43DEB7A6);
	op_hex		(x,	1);
	create_insn	(x=0X43DEB7B3);
	op_hex		(x,	1);
	set_cmt	(0X43DEB7F9,	"this",	0);
	set_cmt	(0X43DEB7FD,	"a3",	0);
	set_cmt	(0X43DEB7FE,	"a2",	0);
	set_cmt	(0X43DEB804,	"num",	0);
	set_cmt	(0X43DEB80D,	"value",	0);
	set_cmt	(0X43DEB80F,	"pointer",	0);
	create_insn	(x=0X43DEB819);
	op_hex		(x,	1);
	create_insn	(x=0X43DEB842);
	op_hex		(x,	1);
	create_insn	(x=0X43DEB87F);
	op_hex		(x,	1);
	create_insn	(0X43DEB8A8);
	create_insn	(x=0X43DEB8AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEB8E3,	0XD);
	create_insn	(0X43DEB8F0);
	make_array	(0X43DEB8F7,	0X9);
	create_insn	(0X43DEB900);
	make_array	(0X43DEB90B,	0X5);
	create_insn	(0X43DEB910);
	create_insn	(x=0X43DEB913);
	op_hex		(x,	1);
	create_insn	(x=0X43DEB916);
	op_hex		(x,	1);
	set_cmt	(0X43DEB94D,	"a3",	0);
	set_cmt	(0X43DEB94E,	"a2",	0);
	set_cmt	(0X43DEB94F,	"this",	0);
	set_cmt	(0X43DEB966,	"toArray",	0);
	set_cmt	(0X43DEB971,	"fromArray",	0);
	create_insn	(x=0X43DEB9F4);
	op_hex		(x,	1);
	create_insn	(x=0X43DEBA21);
	op_hex		(x,	1);
	set_cmt	(0X43DEBA69,	"a3",	0);
	set_cmt	(0X43DEBA6A,	"a2",	0);
	set_cmt	(0X43DEBA6B,	"this",	0);
	set_cmt	(0X43DEBA74,	"num",	0);
	set_cmt	(0X43DEBA7D,	"value",	0);
	set_cmt	(0X43DEBA7F,	"pointer",	0);
	create_insn	(x=0X43DEBA89);
	op_hex		(x,	1);
	create_insn	(x=0X43DEBAB2);
	op_hex		(x,	1);
	create_insn	(x=0X43DEBAEF);
	op_hex		(x,	1);
	create_insn	(0X43DEBB18);
	create_insn	(x=0X43DEBB1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEBBD8);
	op_hex		(x,	1);
	create_insn	(x=0X43DEBBFC);
	op_hex		(x,	1);
	set_cmt	(0X43DEBC20,	"a3",	0);
	set_cmt	(0X43DEBC21,	"a2",	0);
	set_cmt	(0X43DEBC22,	"this",	0);
	create_insn	(0X43DEBC57);
	create_insn	(x=0X43DEBC59);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DEBCA9,	"a3",	0);
	set_cmt	(0X43DEBCAA,	"a2",	0);
	set_cmt	(0X43DEBCAB,	"this",	0);
	create_insn	(x=0X43DEBCE1);
	op_hex		(x,	1);
	create_insn	(x=0X43DEBD19);
	op_hex		(x,	1);
	create_insn	(x=0X43DEBD2F);
	op_hex		(x,	1);
	set_cmt	(0X43DEBD34,	"this",	0);
	set_cmt	(0X43DEBD59,	"a3",	0);
	set_cmt	(0X43DEBD5A,	"a2",	0);
	create_insn	(0X43DEBD73);
	create_insn	(0X43DEBD96);
	create_insn	(x=0X43DEBD9D);
	op_hex		(x,	1);
	make_array	(0X43DEBDA9,	0X7);
	create_insn	(0X43DEBDB0);
	create_insn	(x=0X43DEBDBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEBDDD);
	op_stkvar	(x,	0);
	make_array	(0X43DEBDEA,	0X6);
	create_insn	(0X43DEBDF0);
	make_array	(0X43DEBDF7,	0X9);
	create_insn	(0X43DEBE00);
	create_insn	(x=0X43DEBE03);
	op_hex		(x,	1);
	create_insn	(x=0X43DEBE17);
	op_hex		(x,	1);
	set_cmt	(0X43DEBE1D,	"fromArray",	0);
	set_cmt	(0X43DEBE25,	"toArray",	0);
	create_insn	(x=0X43DEBEA3);
	op_hex		(x,	1);
	create_insn	(x=0X43DEBEC6);
	op_hex		(x,	1);
	set_cmt	(0X43DEBF04,	"to",	0);
	set_cmt	(0X43DEBF08,	"size",	0);
	set_cmt	(0X43DEBF0A,	"from",	0);
	create_insn	(x=0X43DEBF2B);
	op_hex		(x,	1);
	create_insn	(x=0X43DEBFBB);
	op_hex		(x,	1);
	create_insn	(0X43DEBFC0);
	create_insn	(x=0X43DEBFCE);
	op_hex		(x,	1);
	create_insn	(0X43DEBFD3);
	create_insn	(x=0X43DEC00C);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC018);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEC04D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEC09A,	0X6);
	create_insn	(0X43DEC0A0);
	make_array	(0X43DEC0A7,	0X9);
	create_insn	(0X43DEC0B0);
	create_insn	(x=0X43DEC0BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEC0E8,	0X8);
	create_insn	(0X43DEC0F0);
	create_insn	(x=0X43DEC0F3);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC0F6);
	op_hex		(x,	1);
	set_cmt	(0X43DEC129,	"this",	0);
	set_cmt	(0X43DEC12D,	"a3",	0);
	set_cmt	(0X43DEC12E,	"a2",	0);
	create_insn	(x=0X43DEC14F);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC15B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEC19D);
	op_hex		(x,	1);
	make_array	(0X43DEC1A5,	0XB);
	create_insn	(0X43DEC1B0);
	create_insn	(x=0X43DEC1B3);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC1B6);
	op_hex		(x,	1);
	set_cmt	(0X43DEC1E9,	"this",	0);
	set_cmt	(0X43DEC1ED,	"a3",	0);
	set_cmt	(0X43DEC1EE,	"a2",	0);
	create_insn	(x=0X43DEC20F);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC21B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEC25D);
	op_hex		(x,	1);
	make_array	(0X43DEC265,	0XB);
	create_insn	(0X43DEC270);
	create_insn	(x=0X43DEC27E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEC28C,	0X4);
	create_insn	(0X43DEC290);
	make_array	(0X43DEC295,	0XB);
	create_insn	(0X43DEC2A0);
	set_name	(0X43DEC2A0,	"OneTap::Features::Misc::BuyBot::Execute");
	create_insn	(x=0X43DEC2A3);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC2A6);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC2B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC2B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC2BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC2C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC2CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC2D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC2DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC2F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC2F8);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC2FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC300);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC30E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC313);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC317);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC31F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC326);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC32E);
	op_stkvar	(x,	0);
	set_cmt	(0X43DEC33F,	"a3",	0);
	set_cmt	(0X43DEC340,	"a2",	0);
	set_cmt	(0X43DEC341,	"this",	0);
	create_insn	(x=0X43DEC341);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC34A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC353);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC37F);
	op_hex		(x,	1);
	set_cmt	(0X43DEC387,	"switch 30 cases ",	0);
	set_cmt	(0X43DEC390,	"switch jump",	0);
	create_insn	(x=0X43DEC390);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DEC397,	"jumptable 43DEC390 case 0",	1);
	create_insn	(0X43DEC397);
	create_insn	(x=0X43DEC39A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC39E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC3A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC3AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC3B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC3BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC3D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC3D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC3D8);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC3DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC3E0);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC3F3,	"jumptable 43DEC390 case 1",	1);
	create_insn	(0X43DEC3F3);
	create_insn	(x=0X43DEC3F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC3FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC402);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC40A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC412);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC420);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC424);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC428);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC42B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC430);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC443,	"jumptable 43DEC390 case 2",	1);
	create_insn	(0X43DEC443);
	create_insn	(x=0X43DEC446);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC44A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC452);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC45A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC462);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC470);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC474);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC478);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC47B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC480);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC493,	"jumptable 43DEC390 case 3",	1);
	create_insn	(0X43DEC493);
	create_insn	(x=0X43DEC496);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC49A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC4A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC4AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC4B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC4C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC4C8);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC4CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC4D0);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC4E3,	"jumptable 43DEC390 case 4",	1);
	create_insn	(0X43DEC4E3);
	create_insn	(x=0X43DEC4E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC4EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC4F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC4FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC502);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC510);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC514);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC518);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC51B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC520);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC533,	"jumptable 43DEC390 case 5",	1);
	create_insn	(0X43DEC533);
	create_insn	(x=0X43DEC536);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC53A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC542);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC54A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC552);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC560);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC564);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC568);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC56B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC570);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC583,	"jumptable 43DEC390 case 6",	1);
	create_insn	(0X43DEC583);
	create_insn	(x=0X43DEC586);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC58A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC592);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC59A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC5A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC5B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC5B8);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC5BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC5C0);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC5D3,	"jumptable 43DEC390 case 7",	1);
	create_insn	(0X43DEC5D3);
	create_insn	(x=0X43DEC5D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC5DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC5E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC5EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC5F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC600);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC604);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC608);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC60B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC610);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC623,	"jumptable 43DEC390 case 8",	1);
	create_insn	(0X43DEC623);
	create_insn	(x=0X43DEC626);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC62A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC632);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC63A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC642);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC650);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC654);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC658);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC65B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC660);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC673,	"jumptable 43DEC390 case 9",	1);
	create_insn	(0X43DEC673);
	create_insn	(x=0X43DEC676);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC67A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC682);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC68A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC692);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC6A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC6A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC6A8);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC6AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC6B0);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC6C3,	"jumptable 43DEC390 case 10",	1);
	create_insn	(0X43DEC6C3);
	create_insn	(x=0X43DEC6C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC6CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC6D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC6DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC6E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC6F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC6F8);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC6FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC700);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC713,	"jumptable 43DEC390 case 11",	1);
	create_insn	(0X43DEC713);
	create_insn	(x=0X43DEC716);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC71A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC722);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC72A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC732);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC740);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC744);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC748);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC74B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC750);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC763,	"jumptable 43DEC390 case 12",	1);
	create_insn	(0X43DEC763);
	create_insn	(x=0X43DEC766);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC76A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC772);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC77A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC782);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC790);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC794);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC798);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC79B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC7A0);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC7B3,	"jumptable 43DEC390 case 13",	1);
	create_insn	(0X43DEC7B3);
	create_insn	(x=0X43DEC7B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC7BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC7C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC7CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC7D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC7E8);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC7EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC7F0);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC803,	"jumptable 43DEC390 case 14",	1);
	create_insn	(0X43DEC803);
	create_insn	(x=0X43DEC806);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC80A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC812);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC81A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC822);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC830);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC834);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC838);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC83B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC840);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC853,	"jumptable 43DEC390 case 15",	1);
	create_insn	(0X43DEC853);
	create_insn	(x=0X43DEC856);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC85A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC862);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC86A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC872);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC880);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC884);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC888);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC88B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC890);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC8A3,	"jumptable 43DEC390 case 16",	1);
	create_insn	(0X43DEC8A3);
	create_insn	(x=0X43DEC8A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC8AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC8B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC8BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC8C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC8D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC8D8);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC8DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC8E0);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC8F3,	"jumptable 43DEC390 case 17",	1);
	create_insn	(0X43DEC8F3);
	create_insn	(x=0X43DEC8F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC8FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC902);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC90A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC912);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC920);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC924);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC928);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC92B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC930);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC943,	"jumptable 43DEC390 case 18",	1);
	create_insn	(0X43DEC943);
	create_insn	(x=0X43DEC946);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC94A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC952);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC95A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC962);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC970);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC974);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC978);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC97B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC980);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC993,	"jumptable 43DEC390 case 19",	1);
	create_insn	(0X43DEC993);
	create_insn	(x=0X43DEC996);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC99A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC9A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC9AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC9B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC9C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC9C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC9C8);
	op_hex		(x,	1);
	create_insn	(x=0X43DEC9CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC9D0);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEC9E3,	"jumptable 43DEC390 case 20",	1);
	create_insn	(0X43DEC9E3);
	create_insn	(x=0X43DEC9E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEC9EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC9F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEC9FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECA02);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECA10);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECA14);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECA18);
	op_hex		(x,	1);
	create_insn	(x=0X43DECA1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECA20);
	op_stkvar	(x,	1);
	set_cmt	(0X43DECA33,	"jumptable 43DEC390 case 21",	1);
	create_insn	(0X43DECA33);
	create_insn	(x=0X43DECA36);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECA3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECA42);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECA4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECA52);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECA60);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECA64);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECA68);
	op_hex		(x,	1);
	create_insn	(x=0X43DECA6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECA70);
	op_stkvar	(x,	1);
	set_cmt	(0X43DECA83,	"jumptable 43DEC390 case 22",	1);
	create_insn	(0X43DECA83);
	create_insn	(x=0X43DECA86);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECA8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECA92);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECA9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECAA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECAB8);
	op_hex		(x,	1);
	create_insn	(x=0X43DECABB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECAC0);
	op_stkvar	(x,	1);
	set_cmt	(0X43DECAD3,	"jumptable 43DEC390 case 23",	1);
	create_insn	(0X43DECAD3);
	create_insn	(x=0X43DECAD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECADA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECAE2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECAEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECAF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECB00);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECB04);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECB08);
	op_hex		(x,	1);
	create_insn	(x=0X43DECB0B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECB10);
	op_stkvar	(x,	1);
	set_cmt	(0X43DECB23,	"jumptable 43DEC390 case 24",	1);
	create_insn	(0X43DECB23);
	create_insn	(x=0X43DECB26);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECB2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECB32);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECB3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECB42);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECB50);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECB54);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECB58);
	op_hex		(x,	1);
	create_insn	(x=0X43DECB5B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECB60);
	op_stkvar	(x,	1);
	set_cmt	(0X43DECB73,	"jumptable 43DEC390 case 25",	1);
	create_insn	(0X43DECB73);
	create_insn	(x=0X43DECB76);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECB7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECB82);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECB8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECB92);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECBA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECBA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECBA8);
	op_hex		(x,	1);
	create_insn	(x=0X43DECBAB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECBB0);
	op_stkvar	(x,	1);
	set_cmt	(0X43DECBC3,	"jumptable 43DEC390 case 26",	1);
	create_insn	(0X43DECBC3);
	create_insn	(x=0X43DECBC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECBCA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECBD2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECBDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECBE2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECBF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECBF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECBF8);
	op_hex		(x,	1);
	create_insn	(x=0X43DECBFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECC00);
	op_stkvar	(x,	1);
	set_cmt	(0X43DECC13,	"jumptable 43DEC390 case 27",	1);
	create_insn	(0X43DECC13);
	create_insn	(x=0X43DECC16);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECC1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECC22);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECC2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECC32);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECC40);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECC44);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECC48);
	op_hex		(x,	1);
	create_insn	(x=0X43DECC4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECC50);
	op_stkvar	(x,	1);
	set_cmt	(0X43DECC63,	"jumptable 43DEC390 case 28",	1);
	create_insn	(0X43DECC63);
	create_insn	(x=0X43DECC66);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECC6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECC72);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECC7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECC82);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECC90);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECC94);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECC98);
	op_hex		(x,	1);
	create_insn	(x=0X43DECC9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECCA0);
	op_stkvar	(x,	1);
	set_cmt	(0X43DECCB3,	"jumptable 43DEC390 case 29",	1);
	create_insn	(0X43DECCB3);
	create_insn	(x=0X43DECCB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECCBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECCC2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECCCA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECCD2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECCE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECCE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECCE8);
	op_hex		(x,	1);
	create_insn	(x=0X43DECCEB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECCF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECCFE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECD03);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECD07);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECD0B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECD16);
	op_stkvar	(x,	1);
	set_cmt	(0X43DECD1F,	"jumptable 43DEC390 default case",	1);
	create_insn	(x=0X43DECD1F);
	op_stkvar	(x,	0);
	set_name	(0X43DECD1F,	"def_43DEC390");
	create_insn	(x=0X43DECD24);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECD28);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECD2C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECD31);
	op_stkvar	(x,	1);
	set_cmt	(0X43DECD36,	"isPlayerPointerNeeded",	0);
	set_cmt	(0X43DECD37,	"playerInstance",	0);
	set_cmt	(0X43DECD3D,	"command",	0);
	create_insn	(x=0X43DECD43);
	op_stkvar	(x,	1);
	set_cmt	(0X43DECD54,	"jump table for switch statement",	0);
	create_dword	(x=0X43DECD54);
	make_array	(x,	0X1E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43DECD54,	"jpt_43DEC390");
	make_array	(0X43DECDCC,	0X4);
	create_insn	(0X43DECDD0);
	create_insn	(0X43DECDE0);
	make_array	(0X43DECDEB,	0X5);
	create_insn	(0X43DECDF0);
	make_array	(0X43DECDF6,	0XA);
	create_insn	(0X43DECE00);
	create_insn	(0X43DECE15);
	make_array	(0X43DECE18,	0X8);
	create_insn	(0X43DECE20);
	make_array	(0X43DECE26,	0XA);
	create_insn	(0X43DECE30);
	make_array	(0X43DECE36,	0XA);
	create_insn	(0X43DECE40);
	create_insn	(0X43DECE55);
	make_array	(0X43DECE58,	0X8);
	create_insn	(0X43DECE60);
	create_insn	(0X43DECE7B);
	make_array	(0X43DECE7E,	0X2);
	create_insn	(0X43DECE80);
	create_insn	(0X43DECE95);
	make_array	(0X43DECE98,	0X8);
	create_insn	(0X43DECEA0);
	make_array	(0X43DECEA6,	0XA);
	create_insn	(0X43DECEB0);
	make_array	(0X43DECEB6,	0XA);
	create_insn	(0X43DECEC0);
	make_array	(0X43DECEC6,	0XA);
	create_insn	(0X43DECED0);
	create_insn	(x=0X43DECEE8);
	op_hex		(x,	1);
	create_insn	(x=0X43DECEEC);
	op_hex		(x,	1);
	create_insn	(x=0X43DECEF1);
	op_hex		(x,	1);
	create_insn	(x=0X43DECEF5);
	op_hex		(x,	1);
	make_array	(0X43DECF03,	0XD);
	create_insn	(0X43DECF10);
	make_array	(0X43DECF1B,	0X5);
	create_insn	(0X43DECF20);
	create_insn	(0X43DECF35);
	make_array	(0X43DECF38,	0X8);
	create_insn	(0X43DECF40);
	make_array	(0X43DECF46,	0XA);
	create_insn	(0X43DECF50);
	make_array	(0X43DECF5B,	0X5);
	create_insn	(0X43DECF60);
	make_array	(0X43DECF68,	0X8);
	create_insn	(0X43DECF70);
	set_name	(0X43DECF70,	"OneTap::Configuration::Create");
	create_insn	(x=0X43DECF73);
	op_hex		(x,	1);
	create_insn	(x=0X43DECF76);
	op_hex		(x,	1);
	create_insn	(x=0X43DECF7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECF90);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECF94);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DECF98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DECF9D);
	op_stkvar	(x,	0);
	set_cmt	(0X43DECFB1,	"a3",	0);
	set_cmt	(0X43DECFB2,	"a2",	0);
	create_insn	(x=0X43DECFB2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DECFB7,	"this",	0);
	create_insn	(x=0X43DECFB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECFC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECFC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECFC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECFCF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECFD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DECFE3);
	op_hex		(x,	1);
	create_insn	(x=0X43DECFEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECFF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DECFFF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DED00A);
	op_hex		(x,	1);
	create_insn	(x=0X43DED016);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED01A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED026);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DED031);
	op_hex		(x,	1);
	create_insn	(x=0X43DED03D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED041);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED04D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DED058);
	op_hex		(x,	1);
	create_insn	(x=0X43DED064);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED068);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED074);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DED07F);
	op_hex		(x,	1);
	create_insn	(x=0X43DED08B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED08F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED09B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DED0A6);
	op_hex		(x,	1);
	create_insn	(x=0X43DED0AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED0B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED0BE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DED0C9);
	op_hex		(x,	1);
	create_insn	(x=0X43DED0D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED0D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED0E1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DED0EC);
	op_hex		(x,	1);
	create_insn	(x=0X43DED0F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED0F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED104);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DED10F);
	op_hex		(x,	1);
	create_insn	(0X43DED11B);
	create_insn	(x=0X43DED11D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED12B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED130);
	op_hex		(x,	1);
	create_insn	(x=0X43DED135);
	op_hex		(x,	1);
	create_insn	(x=0X43DED138);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED13C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED145);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED149);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED161);
	op_hex		(x,	1);
	create_insn	(x=0X43DED16A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED17A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED182);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DED199);
	op_hex		(x,	1);
	create_insn	(x=0X43DED19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED1A2);
	op_stkvar	(x,	0);
	set_cmt	(0X43DED1A6,	"size",	0);
	set_cmt	(0X43DED1A8,	"to",	0);
	create_insn	(x=0X43DED1A8);
	op_stkvar	(x,	1);
	set_cmt	(0X43DED1AC,	"from",	0);
	create_insn	(x=0X43DED1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED1C8);
	op_hex		(x,	1);
	create_insn	(x=0X43DED1CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED1D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED1E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED1E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED1EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED203);
	op_stkvar	(x,	1);
	set_cmt	(0X43DED207,	"to",	0);
	create_insn	(x=0X43DED207);
	op_stkvar	(x,	1);
	set_cmt	(0X43DED211,	"size",	0);
	set_cmt	(0X43DED213,	"from",	0);
	create_insn	(x=0X43DED233);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED237);
	op_hex		(x,	1);
	create_insn	(x=0X43DED23A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED23F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED250);
	op_stkvar	(x,	1);
	set_cmt	(0X43DED254,	"to",	0);
	create_insn	(x=0X43DED254);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED25E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED262);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED266);
	op_hex		(x,	1);
	set_cmt	(0X43DED269,	"size",	0);
	create_insn	(x=0X43DED26B);
	op_stkvar	(x,	0);
	set_cmt	(0X43DED26F,	"from",	0);
	create_insn	(x=0X43DED287);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED28B);
	op_hex		(x,	1);
	create_insn	(x=0X43DED28E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED293);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED2A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED2A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED2AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED2B3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DED2BF);
	op_hex		(x,	1);
	create_insn	(x=0X43DED2C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED2CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED2D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED2D4);
	op_hex		(x,	1);
	create_insn	(x=0X43DED2D9);
	op_hex		(x,	1);
	create_insn	(x=0X43DED2DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED2E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED313);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED317);
	op_hex		(x,	1);
	create_insn	(x=0X43DED31A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED322);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED32A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED32F);
	op_hex		(x,	1);
	create_insn	(x=0X43DED334);
	op_hex		(x,	1);
	create_insn	(x=0X43DED337);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED33B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED344);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED36E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED372);
	op_hex		(x,	1);
	create_insn	(x=0X43DED375);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED37D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED385);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED38A);
	op_hex		(x,	1);
	create_insn	(x=0X43DED38D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED391);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED39A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED3C8);
	op_hex		(x,	1);
	create_insn	(x=0X43DED3CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED3E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED3E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED3F0);
	op_hex		(x,	1);
	create_insn	(x=0X43DED3F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED405);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED409);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DED412);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DED41F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED423);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED42B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED430);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED438);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED440);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED450);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED454);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED458);
	op_hex		(x,	1);
	create_insn	(x=0X43DED45B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED460);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED46E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED473);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED477);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED47F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED486);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED48E);
	op_stkvar	(x,	0);
	set_cmt	(0X43DED49F,	"a3",	0);
	set_cmt	(0X43DED4A0,	"a2",	0);
	set_cmt	(0X43DED4A1,	"this",	0);
	create_insn	(x=0X43DED4A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED4AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DED4AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED4BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED4C5);
	op_stkvar	(x,	0);
	set_cmt	(0X43DED4D9,	"a3",	0);
	set_cmt	(0X43DED4DA,	"a2",	0);
	create_insn	(x=0X43DED4DA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DED4DF,	"this",	0);
	create_insn	(x=0X43DED4DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED4EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED4F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED4F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED4FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED506);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED50E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED520);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED524);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED528);
	op_hex		(x,	1);
	create_insn	(x=0X43DED52B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED530);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED53E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED543);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED547);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED54F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED556);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED55E);
	op_stkvar	(x,	0);
	set_cmt	(0X43DED56F,	"a3",	0);
	set_cmt	(0X43DED570,	"a2",	0);
	set_cmt	(0X43DED571,	"this",	0);
	create_insn	(x=0X43DED571);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED57A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED582);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED586);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED592);
	op_hex		(x,	1);
	create_insn	(x=0X43DED595);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED59C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED5A8);
	op_hex		(x,	1);
	create_insn	(x=0X43DED5D9);
	op_hex		(x,	1);
	create_insn	(x=0X43DED5DE);
	op_hex		(x,	1);
	set_cmt	(0X43DED5E7,	"hash",	0);
	create_insn	(0X43DED604);
	create_insn	(x=0X43DED610);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED61C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED649);
	op_hex		(x,	1);
	create_insn	(x=0X43DED64C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED653);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED65E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED669);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED676);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED6A3);
	op_hex		(x,	1);
	create_insn	(x=0X43DED6A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED6AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED6B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED6C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED6CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED6F7);
	op_hex		(x,	1);
	create_insn	(x=0X43DED6FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED6FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED706);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED70E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED718);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED742);
	op_hex		(x,	1);
	create_insn	(x=0X43DED745);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED751);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED77E);
	op_hex		(x,	1);
	create_insn	(x=0X43DED781);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED785);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED790);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED79B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED7CE);
	op_hex		(x,	1);
	create_insn	(x=0X43DED7D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED7D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED7DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED7E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED7EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED81B);
	op_hex		(x,	1);
	create_insn	(x=0X43DED829);
	op_hex		(x,	1);
	create_insn	(x=0X43DED835);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED839);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED841);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED84A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED854);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED85C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED864);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED870);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED874);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED878);
	op_hex		(x,	1);
	create_insn	(x=0X43DED87B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED880);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED88E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED893);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED897);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED89F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED8A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED8AE);
	op_stkvar	(x,	0);
	set_cmt	(0X43DED8BF,	"a3",	0);
	set_cmt	(0X43DED8C0,	"a2",	0);
	set_cmt	(0X43DED8C1,	"this",	0);
	create_insn	(x=0X43DED8C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED8CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED8D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED8FD);
	op_hex		(x,	1);
	create_insn	(x=0X43DED900);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DED912);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DED917);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED920);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DED925);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED929);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED92E);
	op_hex		(x,	1);
	set_cmt	(0X43DED959,	"a3",	0);
	set_cmt	(0X43DED95A,	"a2",	0);
	set_cmt	(0X43DED95B,	"this",	0);
	create_insn	(x=0X43DED962);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED970);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED984);
	op_stkvar	(x,	1);
	set_cmt	(0X43DED98B,	"num",	0);
	set_cmt	(0X43DED998,	"value",	0);
	set_cmt	(0X43DED99C,	"pointer",	0);
	create_insn	(x=0X43DED99C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DED9A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED9AA);
	op_hex		(x,	1);
	create_insn	(x=0X43DED9B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DED9DE);
	op_hex		(x,	1);
	make_array	(0X43DED9E9,	0X7);
	create_insn	(0X43DED9F0);
	make_array	(0X43DED9F7,	0X9);
	create_insn	(0X43DEDA00);
	set_name	(0X43DEDA00,	"OneTap::Configuration::Save");
	create_insn	(x=0X43DEDA03);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDA06);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDA11);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDA15);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDA1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDA22);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDA27);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDA2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDA37);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDA43);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDA47);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDA4B);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDA4E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDA53);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDA61);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDA66);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDA6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDA71);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEDA80,	"toArray",	0);
	set_cmt	(0X43DEDA81,	"fromArray",	0);
	create_insn	(x=0X43DEDA8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDA93);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDA97);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDA9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDAA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDAAB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDAB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDAC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDAC8);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDACB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDAD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDADE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDAE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDAE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDAF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDAF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDB04);
	op_stkvar	(x,	0);
	set_cmt	(0X43DEDB19,	"a3",	0);
	set_cmt	(0X43DEDB1A,	"a2",	0);
	set_cmt	(0X43DEDB1B,	"this",	0);
	create_insn	(x=0X43DEDB1B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDB27);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDB2B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDB2F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDB3D);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDB55);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDB5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEDB62);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDB6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDB83);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDB87);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDB8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDB97);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDBA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDBCA);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDBCD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDBD4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDBDC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDBE4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDBEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDC1B);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDC1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDC25);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDC30);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDC3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDC48);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDC72);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDC75);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDC79);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDC84);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDC8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDC99);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDCC3);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDCC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDCD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDCFB);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDCFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDD02);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDD0D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDD18);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDD25);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDD51);
	op_hex		(x,	1);
	make_array	(0X43DEDD5C,	0X4);
	create_insn	(0X43DEDD60);
	make_array	(0X43DEDD67,	0X9);
	create_insn	(0X43DEDD70);
	set_name	(0X43DEDD70,	"OneTap::Configuration::Reset");
	create_insn	(x=0X43DEDD73);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDD76);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDD7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDD85);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEDD9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDDA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDDAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDDB9);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEDDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDDD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDDD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDDE5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDDEC);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEDDF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDDFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDE13);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDE1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDE25);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDE30);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDE37);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDE42);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDE4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDE4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDE57);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDE5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDE70);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDE74);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDE78);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDE7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDE80);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDE8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDE93);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDE97);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDE9E);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEDEAD,	"toArray",	0);
	set_cmt	(0X43DEDEAE,	"fromArray",	0);
	create_insn	(x=0X43DEDEBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDEC0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDEC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDECB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDED0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDED8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDEE0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDEF8);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDEFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDF00);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDF0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDF13);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDF17);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDF22);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDF29);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDF34);
	op_stkvar	(x,	0);
	set_cmt	(0X43DEDF49,	"a3",	0);
	set_cmt	(0X43DEDF4A,	"a2",	0);
	set_cmt	(0X43DEDF4B,	"this",	0);
	create_insn	(x=0X43DEDF4B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDF57);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDF5B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDF5F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDF6D);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDF88);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDF92);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDFA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDFAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDFB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDFB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEDFD0);
	op_hex		(x,	1);
	create_insn	(x=0X43DEDFDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDFEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEDFEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE011);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEE01E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE025);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEE032);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE04D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE054);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE06C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE073);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE089);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE092);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE0BC);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE0BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE0C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEE0CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEE0D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEE0E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE10D);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE110);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE117);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEE122);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEE12D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEE13A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE164);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE167);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE16B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEE176);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEE181);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEE18B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE1B5);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE1B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE1ED);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE1F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE1F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEE1FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEE20A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEE217);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE243);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE246);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE24D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE263);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE274);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE27B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEE28F);
	op_stkvar	(x,	1);
	make_array	(0X43DEE2A3,	0XD);
	create_insn	(0X43DEE2B0);
	create_insn	(0X43DEE2B6);
	set_name	(0X43DEE2B6,	"nullsub_5");
	make_array	(0X43DEE2B7,	0X9);
	create_insn	(0X43DEE2C0);
	create_insn	(x=0X43DEE2C3);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE2D7);
	op_hex		(x,	1);
	set_cmt	(0X43DEE2DD,	"fromArray",	0);
	set_cmt	(0X43DEE2E5,	"toArray",	0);
	create_insn	(x=0X43DEE358);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE3A8);
	op_hex		(x,	1);
	set_cmt	(0X43DEE3DA,	"toArray",	0);
	set_cmt	(0X43DEE3DB,	"fromArray",	0);
	create_insn	(x=0X43DEE428);
	op_hex		(x,	1);
	set_cmt	(0X43DEE46F,	"a3",	0);
	set_cmt	(0X43DEE470,	"a2",	0);
	set_cmt	(0X43DEE471,	"this",	0);
	create_insn	(x=0X43DEE49A);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE50C);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE51F);
	op_hex		(x,	1);
	set_cmt	(0X43DEE538,	"toArray",	0);
	set_cmt	(0X43DEE539,	"fromArray",	0);
	create_insn	(x=0X43DEE588);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE5AC);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE5B7);
	op_hex		(x,	1);
	create_insn	(0X43DEE610);
	make_array	(0X43DEE617,	0X9);
	create_insn	(0X43DEE620);
	create_insn	(x=0X43DEE623);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE626);
	op_hex		(x,	1);
	create_insn	(0X43DEE69E);
	create_insn	(0X43DEE6B5);
	create_insn	(x=0X43DEE768);
	op_hex		(x,	1);
	set_cmt	(0X43DEE79A,	"toArray",	0);
	set_cmt	(0X43DEE79B,	"fromArray",	0);
	create_insn	(x=0X43DEE7E8);
	op_hex		(x,	1);
	set_cmt	(0X43DEE82F,	"a3",	0);
	set_cmt	(0X43DEE830,	"a2",	0);
	set_cmt	(0X43DEE831,	"this",	0);
	create_insn	(x=0X43DEE84E);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE860);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE871);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEE8BD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEE8CD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DEE8F7);
	create_insn	(0X43DEE923);
	set_cmt	(0X43DEE93D,	"toArray",	0);
	set_cmt	(0X43DEE93E,	"fromArray",	0);
	create_insn	(x=0X43DEE98B);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE9AF);
	op_hex		(x,	1);
	create_insn	(x=0X43DEE9BA);
	op_hex		(x,	1);
	make_array	(0X43DEEA89,	0X7);
	create_insn	(0X43DEEA90);
	make_array	(0X43DEEA97,	0X9);
	create_insn	(0X43DEEAA0);
	set_name	(0X43DEEAA0,	"OneTap::Configuration::Refresh");
	create_insn	(x=0X43DEEAA3);
	op_hex		(x,	1);
	create_insn	(x=0X43DEEAA6);
	op_hex		(x,	1);
	create_insn	(x=0X43DEEAB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEABA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEAC7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEACF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEAD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEADF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEAE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEAEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEAF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEB02);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEB06);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEB0A);
	op_hex		(x,	1);
	create_insn	(x=0X43DEEB0D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEB12);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEB20);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEB25);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEB2F);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEEB34,	"_DWORD",	0);
	set_cmt	(0X43DEEB36,	"_DWORD",	0);
	set_cmt	(0X43DEEB3B,	"_DWORD",	0);
	set_cmt	(0X43DEEB3D,	"_DWORD",	0);
	set_cmt	(0X43DEEB3F,	"_DWORD",	0);
	set_cmt	(0X43DEEB41,	"_DWORD",	0);
	set_cmt	(0X43DEEB46,	"_DWORD",	0);
	create_insn	(x=0X43DEEB56);
	op_hex		(x,	1);
	create_insn	(x=0X43DEEB5B);
	op_hex		(x,	1);
	set_cmt	(0X43DEEB64,	"hash",	0);
	create_insn	(0X43DEEB81);
	create_insn	(x=0X43DEEB8D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEB96);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEBC2);
	op_hex		(x,	1);
	create_insn	(x=0X43DEEBC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEBCC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEBD4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEBDC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEBE4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEBEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEBF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEC00);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEC04);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEC08);
	op_hex		(x,	1);
	create_insn	(x=0X43DEEC0B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEC10);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEC1E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEC23);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEEC27,	"_DWORD",	0);
	create_insn	(x=0X43DEEC29);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEEC2E,	"_DWORD",	0);
	set_cmt	(0X43DEEC33,	"_DWORD",	0);
	set_cmt	(0X43DEEC35,	"_DWORD",	0);
	set_cmt	(0X43DEEC37,	"_DWORD",	0);
	set_cmt	(0X43DEEC39,	"_DWORD",	0);
	set_cmt	(0X43DEEC3E,	"_DWORD",	0);
	create_insn	(x=0X43DEEC4D);
	op_hex		(x,	1);
	create_insn	(x=0X43DEEC51);
	op_hex		(x,	1);
	set_cmt	(0X43DEEC54,	"hash",	0);
	create_insn	(0X43DEEC76);
	create_insn	(x=0X43DEEC82);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEC8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEECB7);
	op_hex		(x,	1);
	create_insn	(x=0X43DEECBD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEECC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEECC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEECD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEECD9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEECE1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEECF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEECF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEECF8);
	op_hex		(x,	1);
	create_insn	(x=0X43DEECFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEED00);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEED0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEED13);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEED17);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEED1C);
	op_hex		(x,	1);
	set_cmt	(0X43DEED40,	"a3",	0);
	set_cmt	(0X43DEED41,	"a2",	0);
	set_cmt	(0X43DEED42,	"this",	0);
	create_insn	(x=0X43DEED49);
	op_stkvar	(x,	1);
	create_insn	(0X43DEED7A);
	create_insn	(x=0X43DEED7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEED86);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEED8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEDBB);
	op_hex		(x,	1);
	create_insn	(x=0X43DEEDD5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEDE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEDEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEDEF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEDFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEE05);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEE24);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEE2B);
	op_hex		(x,	1);
	create_insn	(x=0X43DEEE2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEE36);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEE47);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEE4F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEE56);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEE5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEE68);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEE70);
	op_stkvar	(x,	0);
	set_cmt	(0X43DEEE81,	"a3",	0);
	set_cmt	(0X43DEEE82,	"a2",	0);
	set_cmt	(0X43DEEE83,	"this",	0);
	create_insn	(x=0X43DEEE83);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEE8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEE90);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEE97);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEEA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEEAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEEBE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEEC3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEEC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEECD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEEDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DEEEE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEEED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEEF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEEFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEF03);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEF13);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEF1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEF29);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEF32);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEF61);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEF65);
	op_hex		(x,	1);
	create_insn	(x=0X43DEEF68);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEF73);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEF7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEF91);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEF95);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEF9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEFA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEFAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEFB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEFBD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEFD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEFD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEFD8);
	op_hex		(x,	1);
	create_insn	(x=0X43DEEFDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEFE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEFEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEEFF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEEFF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF002);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF009);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF014);
	op_stkvar	(x,	0);
	set_cmt	(0X43DEF029,	"a3",	0);
	set_cmt	(0X43DEF02A,	"a2",	0);
	set_cmt	(0X43DEF02B,	"this",	0);
	create_insn	(x=0X43DEF02B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF037);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF043);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF047);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF04F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF057);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF05E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF066);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF06E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF080);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF084);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF088);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF08B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF090);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF09E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF0A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF0A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF0B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF0B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF0C4);
	op_stkvar	(x,	0);
	set_cmt	(0X43DEF0D9,	"a3",	0);
	set_cmt	(0X43DEF0DA,	"a2",	0);
	set_cmt	(0X43DEF0DB,	"this",	0);
	create_insn	(x=0X43DEF0DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF0E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF0F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF0FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF10A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF119);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEF120,	"a3",	0);
	set_cmt	(0X43DEF121,	"a2",	0);
	set_cmt	(0X43DEF122,	"this",	0);
	create_insn	(x=0X43DEF122);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF12B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF12F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF133);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF13B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF143);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF151);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF156);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF15B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF160);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF16C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DEF171);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF17A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF17F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF183);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF187);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF18C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF196);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF1A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF1AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF1B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF1D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF1DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF206);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF209);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF210);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF214);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF218);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF21B);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF223);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF227);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF237);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF23F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF243);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF24B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF250);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF258);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF260);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF270);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF274);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF278);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF27B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF280);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF28E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF293);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF297);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF29B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF2A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF2A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF2B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF2B6);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF2B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF2BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF2C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF2CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF2CF);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF2D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF2D7);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF2DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF2E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF30D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF311);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF314);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF318);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF323);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF32E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF336);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF33D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF347);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF35D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF361);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF365);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF372);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF37E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF386);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF38D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF397);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF3AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF3B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF3B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF3C2);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF3CE);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF3D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF3D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF3DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF3E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF3EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF3F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF3FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF402);
	op_stkvar	(x,	0);
	set_cmt	(0X43DEF40A,	"a3",	0);
	create_insn	(x=0X43DEF40B);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEF410,	"a2",	0);
	set_cmt	(0X43DEF411,	"this",	0);
	create_insn	(x=0X43DEF411);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF41A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF41E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF429);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF434);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF448);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF451);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF456);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF45A);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEF45F,	"a3",	0);
	set_cmt	(0X43DEF463,	"this",	0);
	create_insn	(x=0X43DEF463);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEF46A,	"a2",	0);
	create_insn	(x=0X43DEF47D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF488);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF49F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF4A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEF4B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF4BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF4EB);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF4EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF4F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF521);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF524);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF530);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF55A);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF55D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF561);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF56C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF577);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF585);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF5AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF5BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF5E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF5E9);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF5F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF5FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF606);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF636);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF639);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF640);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF65E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF66A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF676);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF67F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF696);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF6AF);
	op_hex		(x,	1);
	create_insn	(0X43DEF6CD);
	create_insn	(x=0X43DEF6CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEF6DC);
	op_stkvar	(x,	1);
	create_insn	(0X43DEF6ED);
	make_array	(0X43DEF6F2,	0XE);
	create_insn	(0X43DEF700);
	create_insn	(0X43DEF710);
	create_insn	(x=0X43DEF71A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DEF733);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DEF786,	0XA);
	create_insn	(0X43DEF790);
	create_insn	(x=0X43DEF793);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF798);
	op_stkvar	(x,	1);
	make_array	(0X43DEF7A4,	0XC);
	create_insn	(0X43DEF7B0);
	create_insn	(x=0X43DEF7B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF7BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF7D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF7E1);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF81F);
	op_stkvar	(x,	1);
	create_insn	(0X43DEF830);
	make_array	(0X43DEF83A,	0X6);
	create_insn	(0X43DEF840);
	create_insn	(x=0X43DEF843);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF846);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF84A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF84D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF853);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF85F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF888);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF8BB);
	op_stkvar	(x,	1);
	create_insn	(0X43DEF8CC);
	make_array	(0X43DEF8D1,	0XF);
	create_insn	(0X43DEF8E0);
	make_array	(0X43DEF8F7,	0X9);
	create_insn	(0X43DEF900);
	create_insn	(x=0X43DEF903);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF90F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEF91B);
	op_stkvar	(x,	1);
	create_insn	(0X43DEF930);
	create_insn	(x=0X43DEF93F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF948);
	op_stkvar	(x,	1);
	set_cmt	(0X43DEF95B,	"Size",	0);
	create_insn	(x=0X43DEF964);
	op_hex		(x,	1);
	create_insn	(x=0X43DEF967);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF994);
	op_stkvar	(x,	1);
	create_insn	(0X43DEF9AB);
	make_array	(0X43DEF9B0,	0X10);
	create_insn	(0X43DEF9C0);
	create_insn	(0X43DEF9D0);
	create_insn	(x=0X43DEF9D5);
	op_hex		(x,	1);
	create_insn	(0X43DEF9E0);
	create_insn	(x=0X43DEF9E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEF9EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFA07);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFA11);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFA20);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFA4F);
	op_stkvar	(x,	1);
	create_insn	(0X43DEFA60);
	make_array	(0X43DEFA6A,	0X6);
	create_insn	(0X43DEFA70);
	make_array	(0X43DEFA99,	0X7);
	create_insn	(0X43DEFAA0);
	create_insn	(x=0X43DEFAAE);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFAE6);
	op_hex		(x,	1);
	create_insn	(0X43DEFAF9);
	set_cmt	(0X43DEFAFF,	"Trap to Debugger",	0);
	create_insn	(x=0X43DEFAFF);
	op_hex		(x,	0);
	create_insn	(0X43DEFB00);
	create_insn	(x=0X43DEFB03);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFB0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFB13);
	op_hex		(x,	1);
	create_insn	(0X43DEFB18);
	create_insn	(x=0X43DEFB23);
	op_hex		(x,	1);
	set_cmt	(0X43DEFB2B,	"Size",	0);
	create_insn	(x=0X43DEFB33);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFB3D);
	op_hex		(x,	1);
	create_insn	(0X43DEFB47);
	set_cmt	(0X43DEFB51,	"Size",	0);
	create_insn	(x=0X43DEFB57);
	op_hex		(x,	1);
	create_insn	(0X43DEFB5E);
	make_array	(0X43DEFB64,	0XC);
	create_insn	(0X43DEFB70);
	create_insn	(x=0X43DEFB75);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DEFB88);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFB8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFB93);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFB98);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFB9F);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFBA7);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFBB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFBBE);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFBC3);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFBD0);
	op_stkvar	(x,	1);
	create_insn	(0X43DEFBD5);
	create_insn	(x=0X43DEFBD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFBDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFBDF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFBF0);
	op_hex		(x,	1);
	create_insn	(0X43DEFBF5);
	create_insn	(x=0X43DEFC00);
	op_hex		(x,	1);
	set_cmt	(0X43DEFC08,	"Size",	0);
	create_insn	(x=0X43DEFC0E);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFC1C);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFC22);
	op_stkvar	(x,	1);
	create_insn	(0X43DEFC27);
	set_cmt	(0X43DEFC2B,	"Size",	0);
	create_insn	(x=0X43DEFC31);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFC36);
	op_stkvar	(x,	1);
	create_insn	(0X43DEFC3B);
	create_insn	(x=0X43DEFC3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFC40);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFC4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFC4D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFC54);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFC67);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFC80);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFC83);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFC95);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFCB9);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFCBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFCC7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFCD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFCD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFCE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFCFF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFD05);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFD0B);
	op_stkvar	(x,	0);
	create_insn	(0X43DEFD28);
	create_insn	(x=0X43DEFD2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFD31);
	op_stkvar	(x,	0);
	make_array	(0X43DEFD47,	0X9);
	create_insn	(0X43DEFD50);
	create_insn	(x=0X43DEFD55);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFD6F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DEFD7A,	"Size",	0);
	create_insn	(x=0X43DEFD81);
	op_hex		(x,	1);
	make_array	(0X43DEFDA8,	0X8);
	create_insn	(0X43DEFDB0);
	create_insn	(x=0X43DEFDB5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DEFDC8);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFDCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFDD3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFDD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFDE4);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFDE9);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFDF3);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFDFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFE12);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFE1D);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFE2C);
	op_stkvar	(x,	0);
	create_insn	(0X43DEFE31);
	create_insn	(x=0X43DEFE39);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFE42);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFE45);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFE54);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFE5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFE63);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFE6B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFE7A);
	op_stkvar	(x,	1);
	create_insn	(0X43DEFE7F);
	create_insn	(x=0X43DEFE86);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFE93);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFE9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFEA3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFEA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DEFEC7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DEFECA);
	op_stkvar	(x,	0);
	create_byte	(0X43DEFEE0);
	make_array	(0X43DEFEE0,	0X10);
	create_insn	(0X43DEFEF0);
	create_insn	(x=0X43DEFEF8);
	op_hex		(x,	1);
	set_cmt	(0X43DEFF1C,	"this",	0);
	set_cmt	(0X43DEFF1E,	"a3",	0);
	set_cmt	(0X43DEFF1F,	"a2",	0);
	make_array	(0X43DEFF32,	0XE);
	create_insn	(0X43DEFF40);
	create_insn	(x=0X43DEFF45);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DEFF58);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFF73);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFF78);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFF87);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFFA4);
	op_hex		(x,	1);
	create_insn	(x=0X43DEFFAF);
	op_hex		(x,	1);
	create_insn	(0X43DEFFC3);
	create_insn	(x=0X43DEFFF6);
	op_hex		(x,	1);
	create_insn	(0X43DF0015);
	create_insn	(x=0X43DF0042);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43DF0062);
	make_array	(0X43DF007B,	0X5);
	create_insn	(0X43DF0080);
	create_insn	(0X43DF00AE);
	create_insn	(0X43DF00E2);
	set_cmt	(0X43DF00EB,	"Size",	0);
	create_insn	(x=0X43DF00F5);
	op_hex		(x,	1);
	create_insn	(0X43DF013F);
	make_array	(0X43DF0144,	0XC);
	create_insn	(x=0X43DF0150);
	op_hex		(x,	1);
	make_array	(0X43DF0156,	0XA);
	create_insn	(x=0X43DF0160);
	op_hex		(x,	1);
	make_array	(0X43DF0166,	0XA);
	create_insn	(x=0X43DF0170);
	op_hex		(x,	1);
	make_array	(0X43DF0176,	0XA);
	create_insn	(x=0X43DF0180);
	op_hex		(x,	1);
	make_array	(0X43DF0186,	0XA);
	create_insn	(x=0X43DF0190);
	op_hex		(x,	1);
	make_array	(0X43DF0196,	0XA);
	create_insn	(x=0X43DF01A0);
	op_hex		(x,	1);
	make_array	(0X43DF01A6,	0XA);
	create_insn	(x=0X43DF01B0);
	op_hex		(x,	1);
	make_array	(0X43DF01B6,	0XA);
	create_insn	(x=0X43DF01C0);
	op_hex		(x,	1);
	make_array	(0X43DF01C6,	0XA);
	create_insn	(x=0X43DF01D0);
	op_hex		(x,	1);
	make_array	(0X43DF01D6,	0XA);
	create_insn	(x=0X43DF01E0);
	op_hex		(x,	1);
	make_array	(0X43DF01E6,	0XA);
	create_insn	(x=0X43DF01F0);
	op_hex		(x,	1);
	make_array	(0X43DF01F6,	0XA);
	create_insn	(x=0X43DF0200);
	op_hex		(x,	1);
	make_array	(0X43DF0206,	0XA);
	create_insn	(x=0X43DF0210);
	op_hex		(x,	1);
	make_array	(0X43DF0216,	0XA);
	create_insn	(x=0X43DF0220);
	op_hex		(x,	1);
	make_array	(0X43DF0226,	0XA);
	create_insn	(x=0X43DF0230);
	op_hex		(x,	1);
	make_array	(0X43DF0236,	0XA);
	create_insn	(x=0X43DF0240);
	op_hex		(x,	1);
	make_array	(0X43DF0246,	0XA);
	create_insn	(x=0X43DF0250);
	op_hex		(x,	1);
	make_array	(0X43DF0256,	0XA);
	create_insn	(x=0X43DF0260);
	op_hex		(x,	1);
	make_array	(0X43DF0266,	0XA);
	create_insn	(x=0X43DF0270);
	op_hex		(x,	1);
	make_array	(0X43DF0276,	0XA);
	create_insn	(x=0X43DF0280);
	op_hex		(x,	1);
	make_array	(0X43DF0286,	0XA);
	create_insn	(x=0X43DF0290);
	op_hex		(x,	1);
	make_array	(0X43DF0296,	0XA);
	create_insn	(x=0X43DF02A0);
	op_hex		(x,	1);
	make_array	(0X43DF02A6,	0XA);
	create_insn	(x=0X43DF02B0);
	op_hex		(x,	1);
	make_array	(0X43DF02B6,	0XA);
	create_insn	(x=0X43DF02C0);
	op_hex		(x,	1);
	make_array	(0X43DF02C6,	0XA);
	create_insn	(x=0X43DF02D0);
	op_hex		(x,	1);
	make_array	(0X43DF02D6,	0XA);
	create_insn	(x=0X43DF02E0);
	op_hex		(x,	1);
	make_array	(0X43DF02E6,	0XA);
	create_insn	(x=0X43DF02F0);
	op_hex		(x,	1);
	make_array	(0X43DF02F6,	0XA);
	create_insn	(x=0X43DF0300);
	op_hex		(x,	1);
	make_array	(0X43DF0306,	0XA);
	create_insn	(x=0X43DF0310);
	op_hex		(x,	1);
	make_array	(0X43DF0316,	0XA);
	create_insn	(x=0X43DF0320);
	op_hex		(x,	1);
	make_array	(0X43DF0326,	0XA);
	create_insn	(x=0X43DF0330);
	op_hex		(x,	1);
	make_array	(0X43DF0336,	0XA);
	create_insn	(x=0X43DF0340);
	op_hex		(x,	1);
	make_array	(0X43DF0346,	0XA);
	create_insn	(x=0X43DF0350);
	op_hex		(x,	1);
	make_array	(0X43DF0356,	0XA);
	create_insn	(x=0X43DF0360);
	op_hex		(x,	1);
	make_array	(0X43DF0366,	0XA);
	create_insn	(x=0X43DF0370);
	op_hex		(x,	1);
	make_array	(0X43DF0376,	0XA);
	create_insn	(x=0X43DF0380);
	op_hex		(x,	1);
	make_array	(0X43DF0386,	0XA);
	create_insn	(x=0X43DF0390);
	op_hex		(x,	1);
	make_array	(0X43DF0396,	0XA);
	create_insn	(x=0X43DF03A0);
	op_hex		(x,	1);
	make_array	(0X43DF03A6,	0XA);
	create_insn	(x=0X43DF03B0);
	op_hex		(x,	1);
	make_array	(0X43DF03B6,	0XA);
	create_insn	(x=0X43DF03C0);
	op_hex		(x,	1);
	make_array	(0X43DF03C6,	0XA);
	create_insn	(x=0X43DF03D0);
	op_hex		(x,	1);
	make_array	(0X43DF03D6,	0XA);
	create_insn	(x=0X43DF03E0);
	op_hex		(x,	1);
	make_array	(0X43DF03E6,	0XA);
	create_insn	(x=0X43DF03F0);
	op_hex		(x,	1);
	make_array	(0X43DF03F6,	0XA);
	create_insn	(x=0X43DF0400);
	op_hex		(x,	1);
	make_array	(0X43DF0406,	0XA);
	create_insn	(x=0X43DF0410);
	op_hex		(x,	1);
	make_array	(0X43DF0416,	0XA);
	create_insn	(x=0X43DF0420);
	op_hex		(x,	1);
	make_array	(0X43DF0426,	0XA);
	create_insn	(x=0X43DF0430);
	op_hex		(x,	1);
	make_array	(0X43DF0436,	0XA);
	create_insn	(x=0X43DF0440);
	op_hex		(x,	1);
	make_array	(0X43DF0446,	0XA);
	create_insn	(x=0X43DF0450);
	op_hex		(x,	1);
	make_array	(0X43DF0456,	0XA);
	create_insn	(x=0X43DF0460);
	op_hex		(x,	1);
	make_array	(0X43DF0466,	0XA);
	create_insn	(x=0X43DF0470);
	op_hex		(x,	1);
	make_array	(0X43DF0476,	0XA);
	create_insn	(x=0X43DF0480);
	op_hex		(x,	1);
	make_array	(0X43DF0486,	0XA);
	create_insn	(x=0X43DF0490);
	op_hex		(x,	1);
	make_array	(0X43DF0496,	0XA);
	create_insn	(x=0X43DF04A0);
	op_hex		(x,	1);
	make_array	(0X43DF04A6,	0XA);
	create_insn	(x=0X43DF04B0);
	op_hex		(x,	1);
	make_array	(0X43DF04B6,	0XA);
	create_insn	(x=0X43DF04C0);
	op_hex		(x,	1);
	make_array	(0X43DF04C6,	0XA);
	create_insn	(x=0X43DF04D0);
	op_hex		(x,	1);
	make_array	(0X43DF04D6,	0XA);
	create_insn	(x=0X43DF04E0);
	op_hex		(x,	1);
	make_array	(0X43DF04E6,	0XA);
	create_insn	(x=0X43DF04F0);
	op_hex		(x,	1);
	make_array	(0X43DF04F6,	0XA);
	create_insn	(x=0X43DF0500);
	op_hex		(x,	1);
	make_array	(0X43DF0506,	0XA);
	create_insn	(x=0X43DF0510);
	op_hex		(x,	1);
	make_array	(0X43DF0516,	0XA);
	create_insn	(x=0X43DF0520);
	op_hex		(x,	1);
	make_array	(0X43DF0526,	0XA);
	create_insn	(x=0X43DF0530);
	op_hex		(x,	1);
	make_array	(0X43DF0536,	0XA);
	create_insn	(x=0X43DF0540);
	op_hex		(x,	1);
	make_array	(0X43DF0546,	0XA);
	create_insn	(x=0X43DF0550);
	op_hex		(x,	1);
	make_array	(0X43DF0556,	0XA);
	create_insn	(x=0X43DF0560);
	op_hex		(x,	1);
	make_array	(0X43DF0566,	0XA);
	create_insn	(x=0X43DF0570);
	op_hex		(x,	1);
	make_array	(0X43DF0576,	0XA);
	create_insn	(x=0X43DF0580);
	op_hex		(x,	1);
	make_array	(0X43DF0586,	0XA);
	create_insn	(x=0X43DF0590);
	op_hex		(x,	1);
	make_array	(0X43DF0596,	0XA);
	create_insn	(x=0X43DF05A0);
	op_hex		(x,	1);
	make_array	(0X43DF05A6,	0XA);
	create_insn	(x=0X43DF05B0);
	op_hex		(x,	1);
	make_array	(0X43DF05B6,	0XA);
	create_insn	(x=0X43DF05C0);
	op_hex		(x,	1);
	make_array	(0X43DF05C6,	0XA);
	create_insn	(x=0X43DF05D0);
	op_hex		(x,	1);
	make_array	(0X43DF05D6,	0XA);
	create_insn	(x=0X43DF05E0);
	op_hex		(x,	1);
	make_array	(0X43DF05E6,	0XA);
	create_insn	(x=0X43DF05F0);
	op_hex		(x,	1);
	make_array	(0X43DF05F6,	0XA);
	create_insn	(x=0X43DF0600);
	op_hex		(x,	1);
	make_array	(0X43DF0606,	0XA);
	create_insn	(x=0X43DF0610);
	op_hex		(x,	1);
	create_insn	(0X43DF0616);
	make_array	(0X43DF061E,	0X2);
	create_insn	(0X43DF0620);
	create_insn	(x=0X43DF062A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF0667);
	op_hex		(x,	1);
	create_insn	(x=0X43DF0675);
	op_hex		(x,	1);
	create_insn	(0X43DF0680);
	create_insn	(0X43DF0690);
	create_insn	(0X43DF06A0);
	create_insn	(0X43DF06E1);
	create_insn	(x=0X43DF06FE);
	op_hex		(x,	1);
	create_insn	(0X43DF0745);
	create_insn	(x=0X43DF0746);
	op_hex		(x,	1);
	make_array	(0X43DF074E,	0X2);
	create_insn	(0X43DF0750);
	create_insn	(0X43DF076C);
	create_insn	(0X43DF0780);
	create_insn	(0X43DF07A7);
	create_insn	(x=0X43DF07BF);
	op_hex		(x,	1);
	create_insn	(0X43DF0810);
	create_insn	(x=0X43DF0813);
	op_hex		(x,	1);
	create_insn	(x=0X43DF0816);
	op_hex		(x,	1);
	set_cmt	(0X43DF081C,	"int *",	0);
	set_cmt	(0X43DF081D,	"char",	0);
	create_insn	(0X43DF0844);
	create_insn	(x=0X43DF084B);
	op_hex		(x,	1);
	create_insn	(0X43DF0855);
	create_insn	(x=0X43DF0883);
	op_hex		(x,	1);
	create_insn	(0X43DF0895);
	create_insn	(x=0X43DF08B0);
	op_hex		(x,	1);
	set_cmt	(0X43DF08C0,	"char *",	0);
	create_insn	(x=0X43DF0970);
	op_hex		(x,	1);
	create_insn	(x=0X43DF097C);
	op_hex		(x,	1);
	create_insn	(x=0X43DF09DD);
	op_hex		(x,	1);
	create_insn	(0X43DF09EA);
	create_insn	(0X43DF09F1);
	create_insn	(0X43DF0A0C);
	create_insn	(x=0X43DF0A13);
	op_hex		(x,	1);
	create_insn	(0X43DF0A20);
	create_insn	(x=0X43DF0A23);
	op_hex		(x,	1);
	create_insn	(x=0X43DF0A29);
	op_hex		(x,	1);
	create_insn	(0X43DF0A4B);
	create_insn	(0X43DF0A65);
	create_insn	(0X43DF0A77);
	create_insn	(x=0X43DF0AA2);
	op_hex		(x,	1);
	create_insn	(0X43DF0AB4);
	create_insn	(x=0X43DF0B19);
	op_hex		(x,	1);
	create_insn	(x=0X43DF0B46);
	op_hex		(x,	1);
	create_insn	(0X43DF0B5E);
	create_insn	(0X43DF0B71);
	make_array	(0X43DF0B88,	0X8);
	create_insn	(0X43DF0B90);
	create_insn	(x=0X43DF0B93);
	op_hex		(x,	1);
	create_insn	(x=0X43DF0B96);
	op_hex		(x,	1);
	create_insn	(0X43DF0BBC);
	create_insn	(0X43DF0BDE);
	create_insn	(x=0X43DF0C24);
	op_hex		(x,	1);
	create_insn	(0X43DF0C3E);
	create_insn	(x=0X43DF0C5D);
	op_hex		(x,	1);
	make_array	(0X43DF0C7A,	0X6);
	create_insn	(0X43DF0C80);
	create_insn	(x=0X43DF0C83);
	op_hex		(x,	1);
	create_insn	(x=0X43DF0C86);
	op_hex		(x,	1);
	create_insn	(0X43DF0CB2);
	create_insn	(x=0X43DF0CE1);
	op_hex		(x,	1);
	create_insn	(x=0X43DF0CF6);
	op_hex		(x,	1);
	create_insn	(0X43DF0D37);
	make_array	(0X43DF0D66,	0XA);
	create_insn	(0X43DF0D70);
	create_insn	(x=0X43DF0D73);
	op_hex		(x,	1);
	create_insn	(x=0X43DF0D76);
	op_hex		(x,	1);
	create_insn	(x=0X43DF0DAE);
	op_hex		(x,	1);
	create_insn	(0X43DF0E11);
	create_insn	(0X43DF0E40);
	create_insn	(0X43DF0E61);
	create_insn	(x=0X43DF0E6F);
	op_hex		(x,	1);
	create_insn	(0X43DF0E89);
	create_insn	(0X43DF0E90);
	create_insn	(x=0X43DF0EAE);
	op_hex		(x,	1);
	create_insn	(x=0X43DF0EB5);
	op_hex		(x,	1);
	create_insn	(0X43DF0EBA);
	create_insn	(0X43DF0EC0);
	create_insn	(0X43DF0EEA);
	make_array	(0X43DF0EFB,	0X5);
	create_insn	(0X43DF0F00);
	create_insn	(x=0X43DF0F03);
	op_hex		(x,	1);
	create_insn	(x=0X43DF0F0B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF0F21);
	op_stkvar	(x,	0);
	create_insn	(0X43DF0F40);
	create_insn	(x=0X43DF0F5D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF0F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF0F6F);
	op_hex		(x,	1);
	create_insn	(x=0X43DF0F77);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF0F82);
	op_hex		(x,	1);
	create_insn	(x=0X43DF0F8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF0F93);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF0FA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF0FAD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43DF0FBA,	0X6);
	create_insn	(0X43DF0FC0);
	make_array	(0X43DF0FE3,	0XD);
	create_insn	(0X43DF0FF0);
	create_insn	(x=0X43DF0FF3);
	op_hex		(x,	1);
	create_insn	(x=0X43DF0FF7);
	op_stkvar	(x,	1);
	create_insn	(0X43DF100C);
	create_insn	(0X43DF1034);
	create_insn	(x=0X43DF1069);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF106C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DF1070);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF1074);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF1078);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF107C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF1080);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF109C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF10AA);
	op_hex		(x,	1);
	create_insn	(x=0X43DF10AD);
	op_hex		(x,	1);
	create_insn	(x=0X43DF10C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF10C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF10D7);
	op_hex		(x,	1);
	create_insn	(x=0X43DF10DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF10E5);
	op_stkvar	(x,	0);
	create_insn	(0X43DF10F5);
	create_insn	(x=0X43DF10F7);
	op_hex		(x,	1);
	make_array	(0X43DF1101,	0XF);
	create_insn	(0X43DF1110);
	create_insn	(x=0X43DF1113);
	op_hex		(x,	1);
	create_insn	(x=0X43DF1135);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF1139);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF113D);
	op_stkvar	(x,	1);
	create_insn	(0X43DF1165);
	create_insn	(x=0X43DF1169);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF116C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF1180);
	op_hex		(x,	1);
	create_insn	(0X43DF1194);
	create_insn	(0X43DF119C);
	make_array	(0X43DF11A3,	0XD);
	create_insn	(0X43DF11B0);
	create_insn	(x=0X43DF11B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DF11CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF11D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF11D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DF11DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF11E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DF11E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF11EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DF11FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF11FE);
	op_hex		(x,	1);
	create_insn	(x=0X43DF1207);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF1210);
	op_stkvar	(x,	1);
	make_array	(0X43DF123B,	0X5);
	create_insn	(0X43DF1240);
	create_insn	(0X43DF124E);
	create_insn	(x=0X43DF1267);
	op_hex		(x,	1);
	make_array	(0X43DF12A4,	0XC);
	create_insn	(0X43DF12B0);
	set_name	(0X43DF12B0,	"OneTap::Features::Misc::BuyBot::RunCmd");
	create_insn	(x=0X43DF12B3);
	op_hex		(x,	1);
	create_insn	(x=0X43DF12B6);
	op_stkvar	(x,	1);
	set_cmt	(0X43DF12BA,	"int *",	0);
	set_cmt	(0X43DF12BB,	"char",	0);
	create_insn	(x=0X43DF12BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DF12C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF12D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DF12D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DF12DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DF12F3);
	op_stkvar	(x,	0);
	set_cmt	(0X43DF12FE,	"char *",	0);
	create_insn	(x=0X43DF12FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43DF1301);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF131D);
	op_stkvar	(x,	1);
	set_cmt	(0X43DF1320,	"interface",	0);
	create_insn	(x=0X43DF1320);
	op_stkvar	(x,	1);
	set_cmt	(0X43DF1323,	"index",	0);
	create_insn	(x=0X43DF1330);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF1335);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF133A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF133F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF1347);
	op_stkvar	(x,	1);
	create_insn	(x=0X43DF1372);
	op_hex		(x,	1);
	set_cmt	(0X43DF137E,	"index",	0);
	create_insn	(0X43DF137E);
	create_insn	(x=0X43DF138A);
	op_stkvar	(x,	0);
	make_array	(0X43DF1398,	0X8);
	create_insn	(0X43DF13A0);
	create_insn	(x=0X43DF13DE);
	op_hex		(x,	1);
	create_insn	(0X43DF13EA);
	create_insn	(0X43DF13F0);
	make_array	(0X43DF1402,	0XE);
	create_insn	(0X43DF1410);
	make_array	(0X43DF1415,	0XB);
	create_insn	(0X43DF1420);
	create_insn	(x=0X43DF1423);
	op_hex		(x,	1);
	create_insn	(x=0X43DF1435);
	op_hex		(x,	1);
	create_insn	(x=0X43DF149F);
	op_hex		(x,	1);
	create_insn	(0X43DF14B0);
	make_array	(0X43DF14B5,	0XB);
	create_insn	(0X43DF14C0);
	create_insn	(x=0X43DF14D5);
	op_hex		(x,	1);
	create_insn	(x=0X43DF14DC);
	op_hex		(x,	1);
	create_insn	(x=0X43DF14E8);
	op_hex		(x,	1);
	create_insn	(x=0X43DF1514);
	op_hex		(x,	1);
	create_insn	(0X43DF1527);
	make_array	(0X43DF152D,	0X3);
	create_insn	(0X43DF1530);
	set_name	(0X43DF1530,	"C_SDK::CBufferedCommand::Operator::New");
	make_array	(0X43DF156A,	0X6);
	create_insn	(0X43DF1570);
	create_insn	(x=0X43DF1573);
	op_hex		(x,	1);
	set_cmt	(0X43DF1581,	"num",	0);
	set_cmt	(0X43DF1586,	"value",	0);
	set_cmt	(0X43DF1588,	"pointer",	0);
	create_insn	(x=0X43DF15A9);
	op_hex		(x,	1);
	create_insn	(0X43DF15D0);
	create_insn	(0X43DF15EA);
	make_array	(0X43DF15FC,	0X4);
	create_insn	(0X43DF1600);
	create_insn	(x=0X43DF1603);
	op_hex		(x,	1);
	set_cmt	(0X43DF1623,	"_DWORD",	0);
	create_insn	(x=0X43DF1623);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DF1628,	"_DWORD",	0);
	set_cmt	(0X43DF162A,	"_DWORD",	0);
	set_cmt	(0X43DF162D,	"_DWORD",	0);
	set_cmt	(0X43DF1633,	"_DWORD",	0);
	set_cmt	(0X43DF1635,	"_DWORD",	0);
	create_insn	(x=0X43DF163B);
	op_hex		(x,	1);
	make_array	(0X43DF1664,	0XC);
	create_insn	(0X43DF1670);
	create_insn	(x=0X43DF1673);
	op_hex		(x,	1);
	create_insn	(x=0X43DF1693);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DF16AB);
	op_hex		(x,	1);
	make_array	(0X43DF16D4,	0XC);
	create_insn	(0X43DF16E0);
	create_insn	(x=0X43DF16EE);
	op_hex		(x,	1);
	create_insn	(x=0X43DF16FC);
	op_hex		(x,	1);
	make_array	(0X43DF1706,	0XA);
	create_insn	(0X43DF1710);
	make_array	(0X43DF1713,	0XD);
	create_insn	(0X43DF1720);
	make_array	(0X43DF1726,	0XA);
	create_insn	(0X43DF1730);
	make_array	(0X43DF1736,	0XA);
	create_insn	(0X43DF1740);
	make_array	(0X43DF1746,	0XA);
	create_insn	(0X43DF1750);
	make_array	(0X43DF1756,	0XA);
	create_insn	(0X43DF1760);
	make_array	(0X43DF1766,	0XA);
	create_insn	(0X43DF1770);
	make_array	(0X43DF1776,	0XA);
	create_insn	(0X43DF1780);
	make_array	(0X43DF1786,	0XA);
	create_insn	(0X43DF1790);
	make_array	(0X43DF1796,	0XA);
	create_insn	(0X43DF17A0);
	make_array	(0X43DF17A6,	0XA);
	create_insn	(0X43DF17B0);
	make_array	(0X43DF17B6,	0XA);
	create_insn	(0X43DF17C0);
	make_array	(0X43DF17C6,	0XA);
	create_insn	(0X43DF17D0);
	make_array	(0X43DF17D6,	0XA);
	create_insn	(0X43DF17E0);
	make_array	(0X43DF17E6,	0XA);
	create_insn	(0X43DF17F0);
	make_array	(0X43DF17F6,	0XA);
	create_insn	(0X43DF1800);
	make_array	(0X43DF1806,	0XA);
	create_insn	(0X43DF1810);
	make_array	(0X43DF1816,	0XA);
	create_insn	(0X43DF1820);
	make_array	(0X43DF1826,	0XA);
	create_insn	(0X43DF1830);
	make_array	(0X43DF1836,	0XA);
	create_insn	(0X43DF1840);
	make_array	(0X43DF1846,	0XA);
	create_insn	(0X43DF1850);
	make_array	(0X43DF1856,	0XA);
	create_insn	(0X43DF1860);
	make_array	(0X43DF1866,	0XA);
	create_insn	(0X43DF1870);
	make_array	(0X43DF1876,	0XA);
	create_insn	(0X43DF1880);
	make_array	(0X43DF1886,	0XA);
	create_insn	(x=0X43DF1890);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DF1896,	0XA);
	create_insn	(0X43DF18A0);
	make_array	(0X43DF18A6,	0XA);
	create_insn	(0X43DF18B0);
	make_array	(0X43DF18B6,	0XA);
	create_insn	(0X43DF18C0);
	make_array	(0X43DF18C6,	0XA);
	create_insn	(0X43DF18D0);
	make_array	(0X43DF18D6,	0XA);
	create_insn	(0X43DF18E0);
	make_array	(0X43DF18E6,	0XA);
	create_insn	(0X43DF18F0);
	make_array	(0X43DF18F6,	0XA);
	create_insn	(0X43DF1900);
	make_array	(0X43DF1906,	0XA);
	create_insn	(0X43DF1910);
	make_array	(0X43DF1916,	0XA);
	create_insn	(0X43DF1920);
	make_array	(0X43DF1926,	0XA);
	create_insn	(0X43DF1930);
	make_array	(0X43DF1936,	0XA);
	create_insn	(0X43DF1940);
	make_array	(0X43DF1946,	0XA);
	create_insn	(0X43DF1950);
	make_array	(0X43DF1956,	0XA);
	create_insn	(0X43DF1960);
	make_array	(0X43DF1966,	0XA);
	create_insn	(0X43DF1970);
	make_array	(0X43DF1976,	0XA);
	create_insn	(0X43DF1980);
	make_array	(0X43DF1986,	0XA);
	create_insn	(0X43DF1990);
	make_array	(0X43DF1996,	0XA);
	create_insn	(0X43DF19A0);
	make_array	(0X43DF19A6,	0XA);
	create_insn	(0X43DF19B0);
	make_array	(0X43DF19B6,	0XA);
	create_insn	(0X43DF19C0);
	make_array	(0X43DF19C6,	0XA);
	create_insn	(0X43DF19D0);
	make_array	(0X43DF19D6,	0XA);
	create_insn	(0X43DF19E0);
	make_array	(0X43DF19E6,	0XA);
	create_insn	(0X43DF19F0);
	make_array	(0X43DF19F6,	0XA);
	create_insn	(0X43DF1A00);
	make_array	(0X43DF1A06,	0XA);
	create_insn	(0X43DF1A10);
	make_array	(0X43DF1A16,	0XA);
	create_insn	(0X43DF1A20);
	make_array	(0X43DF1A26,	0XA);
	create_insn	(0X43DF1A30);
	make_array	(0X43DF1A36,	0XA);
	create_insn	(0X43DF1A40);
	make_array	(0X43DF1A46,	0XA);
	create_insn	(0X43DF1A50);
	make_array	(0X43DF1A56,	0XA);
	create_insn	(0X43DF1A60);
	make_array	(0X43DF1A66,	0XA);
	create_insn	(0X43DF1A70);
	make_array	(0X43DF1A76,	0XA);
	create_insn	(0X43DF1A80);
	make_array	(0X43DF1A86,	0XA);
	create_insn	(0X43DF1A90);
	make_array	(0X43DF1A96,	0XA);
	create_insn	(0X43DF1AA0);
	make_array	(0X43DF1AA6,	0XA);
	create_insn	(0X43DF1AB0);
	make_array	(0X43DF1AB6,	0XA);
	create_insn	(0X43DF1AC0);
	make_array	(0X43DF1AC6,	0XA);
	create_insn	(0X43DF1AD0);
	make_array	(0X43DF1AD6,	0XA);
	create_insn	(0X43DF1AE0);
	make_array	(0X43DF1AE6,	0XA);
	create_insn	(0X43DF1AF0);
	make_array	(0X43DF1AF6,	0XA);
	create_insn	(0X43DF1B00);
	make_array	(0X43DF1B06,	0XA);
	create_insn	(0X43DF1B10);
	make_array	(0X43DF1B16,	0XA);
	create_insn	(0X43DF1B20);
	make_array	(0X43DF1B26,	0XA);
	create_insn	(0X43DF1B30);
	make_array	(0X43DF1B36,	0XA);
	create_insn	(0X43DF1B40);
	make_array	(0X43DF1B46,	0XA);
	create_insn	(0X43DF1B50);
	make_array	(0X43DF1B56,	0XA);
	create_insn	(0X43DF1B60);
	make_array	(0X43DF1B66,	0XA);
	create_insn	(0X43DF1B70);
	make_array	(0X43DF1B76,	0XA);
	create_insn	(0X43DF1B80);
	make_array	(0X43DF1B86,	0XA);
	create_insn	(0X43DF1B90);
	make_array	(0X43DF1B96,	0XA);
	create_insn	(0X43DF1BA0);
	make_array	(0X43DF1BA6,	0XA);
	create_insn	(0X43DF1BB0);
	make_array	(0X43DF1BB6,	0XA);
	create_insn	(0X43DF1BC0);
	make_array	(0X43DF1BC6,	0XA);
	create_insn	(0X43DF1BD0);
	make_array	(0X43DF1BD6,	0XA);
	create_insn	(0X43DF1BE0);
	make_array	(0X43DF1BE6,	0XA);
	create_insn	(0X43DF1BF0);
	make_array	(0X43DF1BF6,	0XA);
	create_insn	(0X43DF1C00);
	make_array	(0X43DF1C06,	0XA);
	create_insn	(0X43DF1C10);
	make_array	(0X43DF1C16,	0XA);
	create_insn	(0X43DF1C20);
	make_array	(0X43DF1C26,	0XA);
	create_insn	(0X43DF1C30);
	make_array	(0X43DF1C36,	0XA);
	create_insn	(0X43DF1C40);
	make_array	(0X43DF1C46,	0XA);
	create_insn	(0X43DF1C50);
	make_array	(0X43DF1C56,	0XA);
	create_insn	(0X43DF1C60);
	make_array	(0X43DF1C66,	0XA);
	create_insn	(0X43DF1C70);
	make_array	(0X43DF1C76,	0XA);
	create_insn	(0X43DF1C80);
	make_array	(0X43DF1C86,	0XA);
	create_insn	(0X43DF1C90);
	make_array	(0X43DF1C96,	0XA);
	create_insn	(0X43DF1CA0);
	make_array	(0X43DF1CA6,	0XA);
	create_insn	(0X43DF1CB0);
	make_array	(0X43DF1CB6,	0XA);
	create_insn	(0X43DF1CC0);
	make_array	(0X43DF1CC6,	0XA);
	create_insn	(0X43DF1CD0);
	make_array	(0X43DF1CD6,	0XA);
	create_insn	(0X43DF1CE0);
	make_array	(0X43DF1CE6,	0XA);
	create_insn	(0X43DF1CF0);
	make_array	(0X43DF1CF6,	0XA);
	create_insn	(0X43DF1D00);
	make_array	(0X43DF1D06,	0XA);
	create_insn	(0X43DF1D10);
	make_array	(0X43DF1D16,	0XA);
	create_insn	(0X43DF1D20);
	make_array	(0X43DF1D26,	0XA);
	create_insn	(0X43DF1D30);
	make_array	(0X43DF1D36,	0XA);
	create_insn	(0X43DF1D40);
	make_array	(0X43DF1D46,	0XA);
	create_insn	(0X43DF1D50);
	make_array	(0X43DF1D56,	0XA);
	create_insn	(0X43DF1D60);
	make_array	(0X43DF1D66,	0XA);
	create_insn	(0X43DF1D70);
	make_array	(0X43DF1D76,	0XA);
	create_insn	(0X43DF1D80);
	make_array	(0X43DF1D86,	0XA);
	create_insn	(0X43DF1D90);
	make_array	(0X43DF1D96,	0XA);
	create_insn	(0X43DF1DA0);
	make_array	(0X43DF1DA6,	0XA);
	create_insn	(0X43DF1DB0);
	make_array	(0X43DF1DB6,	0XA);
	create_insn	(0X43DF1DC0);
	make_array	(0X43DF1DC6,	0XA);
	create_insn	(0X43DF1DD0);
	make_array	(0X43DF1DD6,	0XA);
	create_insn	(0X43DF1DE0);
	make_array	(0X43DF1DE6,	0XA);
	create_insn	(0X43DF1DF0);
	make_array	(0X43DF1DF6,	0XA);
	create_insn	(0X43DF1E00);
	make_array	(0X43DF1E06,	0XA);
	create_insn	(0X43DF1E10);
	make_array	(0X43DF1E16,	0XA);
	create_insn	(0X43DF1E20);
	make_array	(0X43DF1E26,	0XA);
	create_insn	(0X43DF1E30);
	make_array	(0X43DF1E36,	0XA);
	create_insn	(0X43DF1E40);
	make_array	(0X43DF1E46,	0XA);
	create_insn	(0X43DF1E50);
	make_array	(0X43DF1E56,	0XA);
	create_insn	(x=0X43DF1E60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DF1E66,	0XA);
	create_insn	(0X43DF1E70);
	make_array	(0X43DF1E76,	0XA);
	create_insn	(0X43DF1E80);
	make_array	(0X43DF1E86,	0XA);
	create_insn	(0X43DF1E90);
	make_array	(0X43DF1E96,	0XA);
	create_insn	(0X43DF1EA0);
	make_array	(0X43DF1EA6,	0XA);
	create_insn	(0X43DF1EB0);
	make_array	(0X43DF1EB6,	0XA);
	create_insn	(0X43DF1EC0);
	make_array	(0X43DF1EC6,	0XA);
	create_insn	(0X43DF1ED0);
	make_array	(0X43DF1ED6,	0XA);
	create_insn	(0X43DF1EE0);
	make_array	(0X43DF1EE6,	0XA);
	create_insn	(0X43DF1EF0);
	make_array	(0X43DF1EF6,	0XA);
	create_insn	(0X43DF1F00);
	make_array	(0X43DF1F06,	0XA);
	create_insn	(0X43DF1F10);
	make_array	(0X43DF1F16,	0XA);
	create_insn	(0X43DF1F20);
	make_array	(0X43DF1F26,	0XA);
	create_insn	(0X43DF1F30);
	make_array	(0X43DF1F36,	0XA);
	create_insn	(0X43DF1F40);
	make_array	(0X43DF1F46,	0XA);
	create_insn	(0X43DF1F50);
	make_array	(0X43DF1F56,	0XA);
	create_insn	(0X43DF1F60);
	make_array	(0X43DF1F66,	0XA);
	create_insn	(0X43DF1F70);
	make_array	(0X43DF1F76,	0XA);
	create_insn	(0X43DF1F80);
	make_array	(0X43DF1F86,	0XA);
	create_insn	(0X43DF1F90);
	make_array	(0X43DF1F96,	0XA);
	create_insn	(0X43DF1FA0);
	make_array	(0X43DF1FA6,	0XA);
	create_insn	(0X43DF1FB0);
	make_array	(0X43DF1FB6,	0XA);
	create_insn	(0X43DF1FC0);
	make_array	(0X43DF1FC6,	0XA);
	create_insn	(0X43DF1FD0);
	make_array	(0X43DF1FD6,	0XA);
	create_insn	(0X43DF1FE0);
	make_array	(0X43DF1FE6,	0XA);
	create_insn	(0X43DF1FF0);
	make_array	(0X43DF1FF6,	0XA);
	create_insn	(0X43DF2000);
	make_array	(0X43DF2006,	0XA);
	create_insn	(0X43DF2010);
	make_array	(0X43DF2016,	0XA);
	create_insn	(0X43DF2020);
	make_array	(0X43DF2026,	0XA);
	create_insn	(0X43DF2030);
	make_array	(0X43DF2036,	0XA);
	create_insn	(0X43DF2040);
	make_array	(0X43DF2046,	0XA);
	create_insn	(0X43DF2050);
	make_array	(0X43DF2056,	0XA);
	create_insn	(0X43DF2060);
	make_array	(0X43DF2066,	0XA);
	create_insn	(0X43DF2070);
	make_array	(0X43DF2076,	0XA);
	create_insn	(0X43DF2080);
	make_array	(0X43DF2086,	0XA);
	create_insn	(0X43DF2090);
	make_array	(0X43DF2096,	0XA);
	create_insn	(0X43DF20A0);
	make_array	(0X43DF20A6,	0XA);
	create_insn	(0X43DF20B0);
	make_array	(0X43DF20B6,	0XA);
	create_insn	(0X43DF20C0);
	make_array	(0X43DF20C6,	0XA);
	create_insn	(0X43DF20D0);
	make_array	(0X43DF20D6,	0XA);
	create_insn	(0X43DF20E0);
	make_array	(0X43DF20E6,	0XA);
	create_insn	(0X43DF20F0);
	make_array	(0X43DF20F6,	0XA);
	create_insn	(0X43DF2100);
	make_array	(0X43DF2106,	0XA);
	create_insn	(0X43DF2110);
	make_array	(0X43DF2116,	0XA);
	create_insn	(0X43DF2120);
	make_array	(0X43DF2126,	0XA);
	create_insn	(0X43DF2130);
	make_array	(0X43DF2136,	0XA);
	create_insn	(0X43DF2140);
	make_array	(0X43DF2146,	0XA);
	create_insn	(0X43DF2150);
	make_array	(0X43DF2156,	0XA);
	create_insn	(0X43DF2160);
	make_array	(0X43DF2166,	0XA);
	create_insn	(0X43DF2170);
	make_array	(0X43DF2176,	0XA);
	create_insn	(0X43DF2180);
	make_array	(0X43DF2186,	0XA);
	create_insn	(0X43DF2190);
	make_array	(0X43DF2196,	0XA);
	create_insn	(0X43DF21A0);
	make_array	(0X43DF21A6,	0XA);
	create_insn	(0X43DF21B0);
	make_array	(0X43DF21B6,	0XA);
	create_insn	(0X43DF21C0);
	make_array	(0X43DF21C6,	0XA);
	create_insn	(0X43DF21D0);
	make_array	(0X43DF21D6,	0XA);
	create_insn	(0X43DF21E0);
	make_array	(0X43DF21E6,	0XA);
	create_insn	(0X43DF21F0);
	make_array	(0X43DF21F6,	0XA);
	create_insn	(0X43DF2200);
	make_array	(0X43DF2206,	0XA);
	create_insn	(0X43DF2210);
	make_array	(0X43DF2216,	0XA);
	create_insn	(0X43DF2220);
	make_array	(0X43DF2226,	0XA);
	create_insn	(0X43DF2230);
	make_array	(0X43DF2236,	0XA);
	create_insn	(0X43DF2240);
	make_array	(0X43DF2246,	0XA);
	create_insn	(0X43DF2250);
	make_array	(0X43DF2256,	0XA);
	create_insn	(0X43DF2260);
	make_array	(0X43DF2266,	0XA);
	create_insn	(0X43DF2270);
	make_array	(0X43DF2276,	0XA);
	create_insn	(0X43DF2280);
	make_array	(0X43DF2286,	0XA);
	create_insn	(0X43DF2290);
	make_array	(0X43DF2296,	0XA);
	create_insn	(0X43DF22A0);
	make_array	(0X43DF22A6,	0XA);
	create_insn	(0X43DF22B0);
	make_array	(0X43DF22B6,	0XA);
	create_insn	(0X43DF22C0);
	make_array	(0X43DF22C6,	0XA);
	create_insn	(0X43DF22D0);
	make_array	(0X43DF22D6,	0XA);
	create_insn	(0X43DF22E0);
	make_array	(0X43DF22E6,	0XA);
	create_insn	(0X43DF22F0);
	make_array	(0X43DF22F6,	0XA);
	create_insn	(0X43DF2300);
	make_array	(0X43DF2306,	0XA);
	create_insn	(0X43DF2310);
	make_array	(0X43DF2316,	0XA);
	create_insn	(0X43DF2320);
	make_array	(0X43DF2326,	0XA);
	create_insn	(0X43DF2330);
	make_array	(0X43DF2336,	0XA);
	create_insn	(0X43DF2340);
	make_array	(0X43DF2346,	0XA);
	create_insn	(0X43DF2350);
	make_array	(0X43DF2356,	0XA);
	create_insn	(0X43DF2360);
	make_array	(0X43DF2366,	0XA);
	create_insn	(0X43DF2370);
	make_array	(0X43DF2376,	0XA);
	create_insn	(0X43DF2380);
	make_array	(0X43DF2386,	0XA);
	create_insn	(0X43DF2390);
	make_array	(0X43DF2396,	0XA);
	create_insn	(0X43DF23A0);
	make_array	(0X43DF23A6,	0XA);
	create_insn	(0X43DF23B0);
	make_array	(0X43DF23B6,	0XA);
	create_insn	(0X43DF23C0);
	make_array	(0X43DF23C6,	0XA);
	create_insn	(0X43DF23D0);
	make_array	(0X43DF23D6,	0XA);
	create_insn	(0X43DF23E0);
	make_array	(0X43DF23E6,	0XA);
	create_insn	(0X43DF23F0);
	make_array	(0X43DF23F6,	0XA);
	create_insn	(0X43DF2400);
	make_array	(0X43DF2406,	0XA);
	create_insn	(0X43DF2410);
	make_array	(0X43DF2416,	0XA);
	create_insn	(0X43DF2420);
	make_array	(0X43DF2426,	0XA);
	create_insn	(0X43DF2430);
	make_array	(0X43DF2436,	0XA);
	create_insn	(0X43DF2440);
	make_array	(0X43DF2446,	0XA);
	create_insn	(0X43DF2450);
	make_array	(0X43DF2456,	0XA);
	create_insn	(0X43DF2460);
	make_array	(0X43DF2466,	0XA);
	create_insn	(0X43DF2470);
	make_array	(0X43DF2476,	0XA);
	create_insn	(0X43DF2480);
	make_array	(0X43DF2486,	0XA);
	create_insn	(0X43DF2490);
	make_array	(0X43DF2496,	0XA);
	create_insn	(0X43DF24A0);
	make_array	(0X43DF24A6,	0XA);
	create_insn	(0X43DF24B0);
	make_array	(0X43DF24B6,	0XA);
	create_insn	(0X43DF24C0);
	make_array	(0X43DF24C6,	0XA);
	create_insn	(0X43DF24D0);
	make_array	(0X43DF24D6,	0XA);
	create_insn	(0X43DF24E0);
	make_array	(0X43DF24E6,	0XA);
	create_insn	(0X43DF24F0);
	make_array	(0X43DF24F6,	0XA);
	create_insn	(0X43DF2500);
	make_array	(0X43DF2506,	0XA);
	create_insn	(0X43DF2510);
	make_array	(0X43DF2516,	0XA);
	create_insn	(0X43DF2520);
	make_array	(0X43DF2526,	0XA);
	create_insn	(0X43DF2530);
	make_array	(0X43DF2536,	0XA);
	create_insn	(0X43DF2540);
	make_array	(0X43DF2546,	0XA);
	create_insn	(0X43DF2550);
	make_array	(0X43DF2556,	0XA);
	create_insn	(0X43DF2560);
	make_array	(0X43DF2566,	0XA);
	create_insn	(0X43DF2570);
	make_array	(0X43DF2576,	0XA);
	create_insn	(0X43DF2580);
	make_array	(0X43DF2586,	0XA);
	create_insn	(0X43DF2590);
	make_array	(0X43DF2596,	0XA);
	create_insn	(0X43DF25A0);
	make_array	(0X43DF25A6,	0XA);
	create_insn	(0X43DF25B0);
	make_array	(0X43DF25B6,	0XA);
	create_insn	(0X43DF25C0);
	make_array	(0X43DF25C6,	0XA);
	create_insn	(0X43DF25D0);
	make_array	(0X43DF25D6,	0XA);
	create_insn	(0X43DF25E0);
	make_array	(0X43DF25E6,	0XA);
	create_insn	(0X43DF25F0);
	make_array	(0X43DF25F6,	0XA);
	create_insn	(0X43DF2600);
	make_array	(0X43DF2606,	0XA);
	create_insn	(0X43DF2610);
	make_array	(0X43DF2616,	0XA);
	create_insn	(0X43DF2620);
	make_array	(0X43DF2626,	0XA);
	create_insn	(0X43DF2630);
	make_array	(0X43DF2636,	0XA);
	create_insn	(0X43DF2640);
	make_array	(0X43DF2646,	0XA);
	create_insn	(0X43DF2650);
	make_array	(0X43DF2656,	0XA);
	create_insn	(0X43DF2660);
	make_array	(0X43DF2666,	0XA);
	create_insn	(0X43DF2670);
	make_array	(0X43DF2676,	0XA);
	create_insn	(0X43DF2680);
	make_array	(0X43DF2686,	0XA);
	create_insn	(0X43DF2690);
	make_array	(0X43DF2696,	0XA);
	create_insn	(0X43DF26A0);
	make_array	(0X43DF26A6,	0XA);
	create_insn	(0X43DF26B0);
	make_array	(0X43DF26B6,	0XA);
	create_insn	(0X43DF26C0);
	make_array	(0X43DF26C6,	0XA);
	create_insn	(0X43DF26D0);
	make_array	(0X43DF26D6,	0XA);
	create_insn	(0X43DF26E0);
	make_array	(0X43DF26E6,	0XA);
	create_insn	(0X43DF26F0);
	make_array	(0X43DF26F6,	0XA);
	create_insn	(0X43DF2700);
	make_array	(0X43DF2706,	0XA);
	create_insn	(0X43DF2710);
	make_array	(0X43DF2716,	0XA);
	create_insn	(0X43DF2720);
	make_array	(0X43DF2726,	0XA);
	create_insn	(0X43DF2730);
	make_array	(0X43DF2736,	0XA);
	create_insn	(0X43DF2740);
	make_array	(0X43DF2746,	0XA);
	create_insn	(0X43DF2750);
	make_array	(0X43DF2756,	0XA);
	create_insn	(0X43DF2760);
	make_array	(0X43DF2766,	0XA);
	create_insn	(0X43DF2770);
	make_array	(0X43DF2776,	0XA);
	create_insn	(0X43DF2780);
	make_array	(0X43DF2786,	0XA);
	create_insn	(0X43DF2790);
	make_array	(0X43DF2796,	0XA);
	create_insn	(0X43DF27A0);
	make_array	(0X43DF27A6,	0XA);
	create_insn	(0X43DF27B0);
	make_array	(0X43DF27B6,	0XA);
	create_insn	(0X43DF27C0);
	make_array	(0X43DF27C6,	0XA);
	create_insn	(0X43DF27D0);
	make_array	(0X43DF27D6,	0XA);
	create_insn	(0X43DF27E0);
	make_array	(0X43DF27E6,	0XA);
	create_insn	(0X43DF27F0);
	make_array	(0X43DF27F6,	0XA);
	create_insn	(0X43DF2800);
	make_array	(0X43DF2806,	0XA);
	create_insn	(0X43DF2810);
	make_array	(0X43DF2816,	0XA);
	create_insn	(0X43DF2820);
	make_array	(0X43DF2826,	0XA);
	create_insn	(0X43DF2830);
	make_array	(0X43DF2836,	0XA);
	create_insn	(0X43DF2840);
	make_array	(0X43DF2846,	0XA);
	create_insn	(0X43DF2850);
	make_array	(0X43DF2856,	0XA);
	create_insn	(0X43DF2860);
	make_array	(0X43DF2866,	0XA);
	create_insn	(0X43DF2870);
	make_array	(0X43DF2876,	0XA);
	create_insn	(0X43DF2880);
	make_array	(0X43DF2886,	0XA);
	create_insn	(0X43DF2890);
	make_array	(0X43DF2896,	0XA);
	create_insn	(0X43DF28A0);
	make_array	(0X43DF28A6,	0XA);
	create_insn	(0X43DF28B0);
	make_array	(0X43DF28B6,	0XA);
	create_insn	(0X43DF28C0);
	make_array	(0X43DF28C6,	0XA);
	create_insn	(0X43DF28D0);
	make_array	(0X43DF28D6,	0XA);
	create_insn	(0X43DF28E0);
	make_array	(0X43DF28E6,	0XA);
	create_insn	(0X43DF28F0);
	make_array	(0X43DF28F6,	0XA);
	create_insn	(0X43DF2900);
	make_array	(0X43DF2906,	0XA);
	create_insn	(0X43DF2910);
	make_array	(0X43DF2916,	0XA);
	create_insn	(0X43DF2920);
	make_array	(0X43DF2926,	0XA);
	create_insn	(0X43DF2930);
	make_array	(0X43DF2936,	0XA);
	create_insn	(0X43DF2940);
	make_array	(0X43DF2946,	0XA);
	create_insn	(0X43DF2950);
	make_array	(0X43DF2956,	0XA);
	create_insn	(0X43DF2960);
	make_array	(0X43DF2966,	0XA);
	create_insn	(0X43DF2970);
	make_array	(0X43DF2976,	0XA);
	create_insn	(0X43DF2980);
	make_array	(0X43DF2986,	0XA);
	create_insn	(0X43DF2990);
	make_array	(0X43DF2996,	0XA);
	create_insn	(0X43DF29A0);
	make_array	(0X43DF29A6,	0XA);
	create_insn	(0X43DF29B0);
	make_array	(0X43DF29B6,	0XA);
	create_insn	(0X43DF29C0);
	make_array	(0X43DF29C6,	0XA);
	create_insn	(0X43DF29D0);
	make_array	(0X43DF29D6,	0XA);
	create_insn	(0X43DF29E0);
	make_array	(0X43DF29E6,	0XA);
	create_insn	(0X43DF29F0);
	make_array	(0X43DF29F6,	0XA);
	create_insn	(0X43DF2A00);
	make_array	(0X43DF2A06,	0XA);
	create_insn	(0X43DF2A10);
	make_array	(0X43DF2A16,	0XA);
	create_insn	(0X43DF2A20);
	make_array	(0X43DF2A26,	0XA);
	create_insn	(0X43DF2A30);
	make_array	(0X43DF2A36,	0XA);
	create_insn	(0X43DF2A40);
	make_array	(0X43DF2A46,	0XA);
	create_insn	(0X43DF2A50);
	make_array	(0X43DF2A56,	0XA);
	create_insn	(0X43DF2A60);
	make_array	(0X43DF2A66,	0XA);
	create_insn	(0X43DF2A70);
	make_array	(0X43DF2A76,	0XA);
	create_insn	(0X43DF2A80);
	make_array	(0X43DF2A86,	0XA);
	create_insn	(0X43DF2A90);
	make_array	(0X43DF2A96,	0XA);
	create_insn	(0X43DF2AA0);
	make_array	(0X43DF2AA6,	0XA);
	create_insn	(0X43DF2AB0);
	make_array	(0X43DF2AB6,	0XA);
	create_insn	(0X43DF2AC0);
	make_array	(0X43DF2AC6,	0XA);
	create_insn	(0X43DF2AD0);
	make_array	(0X43DF2AD6,	0XA);
	create_insn	(0X43DF2AE0);
	make_array	(0X43DF2AE6,	0XA);
	create_insn	(0X43DF2AF0);
	make_array	(0X43DF2AF6,	0XA);
	create_insn	(0X43DF2B00);
	make_array	(0X43DF2B06,	0XA);
	create_insn	(0X43DF2B10);
	make_array	(0X43DF2B16,	0XA);
	create_insn	(0X43DF2B20);
	make_array	(0X43DF2B26,	0XA);
	create_insn	(0X43DF2B30);
	make_array	(0X43DF2B36,	0XA);
	create_insn	(0X43DF2B40);
	make_array	(0X43DF2B46,	0XA);
	create_insn	(0X43DF2B50);
	make_array	(0X43DF2B56,	0XA);
	create_insn	(0X43DF2B60);
	make_array	(0X43DF2B66,	0XA);
	create_insn	(0X43DF2B70);
	make_array	(0X43DF2B76,	0XA);
	create_insn	(0X43DF2B80);
	make_array	(0X43DF2B86,	0XA);
	create_insn	(0X43DF2B90);
	make_array	(0X43DF2B96,	0XA);
	create_insn	(0X43DF2BA0);
	make_array	(0X43DF2BA6,	0XA);
	create_insn	(0X43DF2BB0);
	make_array	(0X43DF2BB6,	0XA);
	create_insn	(0X43DF2BC0);
	make_array	(0X43DF2BC6,	0XA);
	create_insn	(0X43DF2BD0);
	make_array	(0X43DF2BD6,	0XA);
	create_insn	(0X43DF2BE0);
	make_array	(0X43DF2BE6,	0XA);
	create_insn	(0X43DF2BF0);
	make_array	(0X43DF2BF6,	0XA);
	create_insn	(0X43DF2C00);
	make_array	(0X43DF2C06,	0XA);
	create_insn	(0X43DF2C10);
	make_array	(0X43DF2C16,	0XA);
	create_insn	(0X43DF2C20);
	make_array	(0X43DF2C26,	0XA);
	create_insn	(0X43DF2C30);
	make_array	(0X43DF2C36,	0XA);
	create_insn	(0X43DF2C40);
	make_array	(0X43DF2C46,	0XA);
	create_insn	(0X43DF2C50);
	make_array	(0X43DF2C56,	0XA);
	create_insn	(0X43DF2C60);
	make_array	(0X43DF2C66,	0XA);
	create_insn	(0X43DF2C70);
	make_array	(0X43DF2C76,	0XA);
	create_insn	(0X43DF2C80);
	set_name	(0X43DF2C80,	"OneTap::Startup::InitGlobalVariables");
	create_insn	(x=0X43DF2C99);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF2E68,	"instance",	0);
	set_cmt	(0X43DF2E77,	"num",	0);
	set_cmt	(0X43DF2E79,	"value",	0);
	set_cmt	(0X43DF2E7A,	"pointer",	0);
	create_insn	(x=0X43DF2E7A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DF2EF2);
	op_hex		(x,	1);
	create_insn	(x=0X43DF2EF5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF2F19,	"Size",	0);
	set_cmt	(0X43DF2F7E,	"Size",	0);
	set_cmt	(0X43DF2FC4,	"Size",	0);
	set_cmt	(0X43DF2FD6,	"Size",	0);
	set_cmt	(0X43DF2FE8,	"Size",	0);
	create_insn	(x=0X43DF2FF7);
	op_hex		(x,	1);
	create_insn	(x=0X43DF2FFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF3011,	"Trap to Debugger",	0);
	create_insn	(x=0X43DF3011);
	op_hex		(x,	0);
	set_cmt	(0X43DF3012,	"num",	0);
	set_cmt	(0X43DF3020,	"value",	0);
	set_cmt	(0X43DF3021,	"pointer",	0);
	create_insn	(x=0X43DF3021);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43DF303F,	"num",	0);
	set_cmt	(0X43DF3041,	"value",	0);
	create_insn	(x=0X43DF3042);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DF30AC);
	op_hex		(x,	1);
	create_insn	(x=0X43DF30C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_byte	(0X43DF3101);
	make_array	(0X43DF3101,	0X2F);
	set_cmt	(0X43DF3130,	"size",	0);
	create_insn	(0X43DF3130);
	set_name	(0X43DF3130,	"OneTap::GUI::Render::InitColors");
	create_insn	(x=0X43DF3133);
	op_hex		(x,	1);
	create_insn	(x=0X43DF314B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3153);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3162);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF316F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF317E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF318E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF31A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF31DB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3228);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3275);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF32C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF32FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF334C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3391);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF33F5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3452);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF35C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF36A3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3702);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF37EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3966);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF39C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3A0F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3A5F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3ABC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3B9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3BF9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3D75);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3DE1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_3(void) {
        auto x;
#define id x

	create_insn	(x=0X43DF3EB9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3F16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF3FEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF404B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF4133);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF420B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF4268);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF4358);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF443B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF4495);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF456D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF45A7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF45E1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF461B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF466B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF46A5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF470B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF47B5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF48D7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF496E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF4A05);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF4A9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF4B33);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF4BCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF4C7F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF4DBF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF4EE1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF4F8B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF50AD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF5162);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF5284);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF532E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF5450);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF54FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF5621);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF56CB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF580B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF594B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF5A6D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF5B09);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF5C4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF5D6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF5E88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF5EF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF5FD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6024);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6081);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6159);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF619E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6202);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF623C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF628C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF62C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6316);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6366);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF63A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF63DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF641C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF646C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF64BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF64F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6546);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6596);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF65AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF65D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6670);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF66C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF671B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF677F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF67B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF67FB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6835);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6877);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF68B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6909);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6959);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6993);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF69D5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6A0F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6A51);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6A93);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6AD5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6B17);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6B51);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6B93);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6BD5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6C17);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6C59);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6C93);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6CD5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6D17);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6D6F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6DB5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6DF3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6E39);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6E7F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6EBF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6EFF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6F37);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6F77);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6FB7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF6FF7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7037);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF706F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF70AF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF70EF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF712F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF716F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF71AD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7201);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7255);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF72A9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF72E7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF732D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF736B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF73B1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF73EF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF742D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7481);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF74BF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF74FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF753B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7581);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF75C7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF760D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7653);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF7688,	"blue",	0);
	set_cmt	(0X43DF768D,	"green",	0);
	set_cmt	(0X43DF7692,	"red",	0);
	set_cmt	(0X43DF7697,	"color",	0);
	create_insn	(x=0X43DF76B1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF771C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF7751,	"blue",	0);
	set_cmt	(0X43DF7756,	"green",	0);
	set_cmt	(0X43DF775B,	"red",	0);
	set_cmt	(0X43DF7760,	"color",	0);
	create_insn	(x=0X43DF777A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF77E5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7823);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF7858,	"alpha",	0);
	set_cmt	(0X43DF785D,	"blue",	0);
	set_cmt	(0X43DF7862,	"green",	0);
	set_cmt	(0X43DF7867,	"red",	0);
	set_cmt	(0X43DF786C,	"color",	0);
	create_insn	(x=0X43DF7886);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF78F1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF7926,	"alpha",	0);
	set_cmt	(0X43DF792B,	"blue",	0);
	set_cmt	(0X43DF7930,	"green",	0);
	set_cmt	(0X43DF7935,	"red",	0);
	set_cmt	(0X43DF7937,	"color",	0);
	create_insn	(x=0X43DF7951);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF79BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF79FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7A38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF7A6D,	"blue",	0);
	set_cmt	(0X43DF7A6F,	"green",	0);
	set_cmt	(0X43DF7A71,	"red",	0);
	set_cmt	(0X43DF7A76,	"color",	0);
	create_insn	(x=0X43DF7A90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7AFB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7B39);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7B77);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7BB5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF7BEA,	"blue",	0);
	set_cmt	(0X43DF7BEC,	"green",	0);
	set_cmt	(0X43DF7BEE,	"red",	0);
	set_cmt	(0X43DF7BF3,	"color",	0);
	create_insn	(x=0X43DF7C0D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7C78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7CB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF7CEB,	"blue",	0);
	set_cmt	(0X43DF7CED,	"green",	0);
	set_cmt	(0X43DF7CEF,	"red",	0);
	set_cmt	(0X43DF7CF4,	"color",	0);
	create_insn	(x=0X43DF7D0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7D79);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7DB7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7DFD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7E43);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7E97);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7ED5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7F13);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7F51);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7F8F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF7FCD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF800B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8051);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF808F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF80CD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8113);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8151);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF818F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF81D5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8229);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8267);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF82A5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF82EB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8322);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DF8348);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF83C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF841D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8471);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF84B7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF84F5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8533);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8571);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF85AF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF85ED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF862B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8669);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF869E,	"alpha",	0);
	set_cmt	(0X43DF86A0,	"blue",	0);
	set_cmt	(0X43DF86A5,	"green",	0);
	set_cmt	(0X43DF86AA,	"red",	0);
	set_cmt	(0X43DF86AF,	"color",	0);
	create_insn	(x=0X43DF86C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8734);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8772);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF87B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF87E5,	"alpha",	0);
	set_cmt	(0X43DF87EA,	"blue",	0);
	set_cmt	(0X43DF87EF,	"green",	0);
	set_cmt	(0X43DF87F1,	"red",	0);
	set_cmt	(0X43DF87F6,	"color",	0);
	create_insn	(x=0X43DF8810);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF8872,	"alpha",	0);
	set_cmt	(0X43DF8877,	"blue",	0);
	set_cmt	(0X43DF887C,	"green",	0);
	set_cmt	(0X43DF8881,	"red",	0);
	set_cmt	(0X43DF8886,	"color",	0);
	create_insn	(x=0X43DF889D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF8902,	"alpha",	0);
	set_cmt	(0X43DF8907,	"blue",	0);
	set_cmt	(0X43DF8909,	"green",	0);
	set_cmt	(0X43DF890E,	"red",	0);
	set_cmt	(0X43DF8913,	"color",	0);
	create_insn	(x=0X43DF892D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8998);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF89D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8A14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8A52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8A90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8ACE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8B0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8B4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8B88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF8BBD,	"alpha",	0);
	set_cmt	(0X43DF8BC2,	"blue",	0);
	set_cmt	(0X43DF8BC7,	"green",	0);
	set_cmt	(0X43DF8BC9,	"red",	0);
	set_cmt	(0X43DF8BCE,	"color",	0);
	create_insn	(x=0X43DF8BE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF8C4A,	"alpha",	0);
	set_cmt	(0X43DF8C4F,	"blue",	0);
	set_cmt	(0X43DF8C54,	"green",	0);
	set_cmt	(0X43DF8C59,	"red",	0);
	set_cmt	(0X43DF8C5E,	"color",	0);
	create_insn	(x=0X43DF8C78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF8CDA,	"alpha",	0);
	set_cmt	(0X43DF8CDF,	"blue",	0);
	set_cmt	(0X43DF8CE4,	"green",	0);
	set_cmt	(0X43DF8CE9,	"red",	0);
	set_cmt	(0X43DF8CEE,	"color",	0);
	create_insn	(x=0X43DF8D08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8D73);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8DB1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8DEF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF8E24,	"alpha",	0);
	set_cmt	(0X43DF8E29,	"blue",	0);
	set_cmt	(0X43DF8E2E,	"green",	0);
	set_cmt	(0X43DF8E33,	"red",	0);
	set_cmt	(0X43DF8E38,	"color",	0);
	create_insn	(x=0X43DF8E52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF8EB4,	"alpha",	0);
	set_cmt	(0X43DF8EB9,	"blue",	0);
	set_cmt	(0X43DF8EBE,	"green",	0);
	set_cmt	(0X43DF8EC3,	"red",	0);
	set_cmt	(0X43DF8EC8,	"color",	0);
	create_insn	(x=0X43DF8EE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF8F44,	"alpha",	0);
	set_cmt	(0X43DF8F49,	"blue",	0);
	set_cmt	(0X43DF8F4E,	"green",	0);
	set_cmt	(0X43DF8F53,	"red",	0);
	set_cmt	(0X43DF8F58,	"color",	0);
	create_insn	(x=0X43DF8F72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF8FDD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF901B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF9050,	"alpha",	0);
	set_cmt	(0X43DF9055,	"blue",	0);
	set_cmt	(0X43DF905A,	"green",	0);
	set_cmt	(0X43DF905F,	"red",	0);
	set_cmt	(0X43DF9064,	"color",	0);
	create_insn	(x=0X43DF907E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF90E0,	"alpha",	0);
	set_cmt	(0X43DF90E5,	"blue",	0);
	set_cmt	(0X43DF90EA,	"green",	0);
	set_cmt	(0X43DF90EF,	"red",	0);
	set_cmt	(0X43DF90F4,	"color",	0);
	create_insn	(x=0X43DF910E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9179);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF91B7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF91F5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9233);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9271);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF92B7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF92EC,	"alpha",	0);
	set_cmt	(0X43DF92F1,	"blue",	0);
	set_cmt	(0X43DF92F6,	"green",	0);
	set_cmt	(0X43DF92FB,	"red",	0);
	set_cmt	(0X43DF92FD,	"color",	0);
	create_insn	(x=0X43DF9317);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF9379,	"alpha",	0);
	set_cmt	(0X43DF937E,	"blue",	0);
	set_cmt	(0X43DF9383,	"green",	0);
	set_cmt	(0X43DF9385,	"red",	0);
	set_cmt	(0X43DF938A,	"color",	0);
	create_insn	(x=0X43DF93A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF9406,	"alpha",	0);
	set_cmt	(0X43DF940B,	"blue",	0);
	set_cmt	(0X43DF940D,	"green",	0);
	set_cmt	(0X43DF940F,	"red",	0);
	set_cmt	(0X43DF9414,	"color",	0);
	create_insn	(x=0X43DF942E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF9490,	"alpha",	0);
	set_cmt	(0X43DF9495,	"blue",	0);
	set_cmt	(0X43DF949A,	"green",	0);
	set_cmt	(0X43DF949F,	"red",	0);
	set_cmt	(0X43DF94A1,	"color",	0);
	create_insn	(x=0X43DF94BB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF951D,	"alpha",	0);
	set_cmt	(0X43DF9522,	"blue",	0);
	set_cmt	(0X43DF9527,	"green",	0);
	set_cmt	(0X43DF952C,	"red",	0);
	set_cmt	(0X43DF952E,	"color",	0);
	create_insn	(x=0X43DF9545);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF95AA,	"alpha",	0);
	set_cmt	(0X43DF95AF,	"blue",	0);
	set_cmt	(0X43DF95B4,	"green",	0);
	set_cmt	(0X43DF95B9,	"red",	0);
	set_cmt	(0X43DF95BB,	"color",	0);
	create_insn	(x=0X43DF95D5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF9637,	"alpha",	0);
	set_cmt	(0X43DF963C,	"blue",	0);
	set_cmt	(0X43DF9641,	"green",	0);
	set_cmt	(0X43DF9643,	"red",	0);
	set_cmt	(0X43DF9648,	"color",	0);
	create_insn	(x=0X43DF9662);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF96CD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF970B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9749);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF977E,	"alpha",	0);
	set_cmt	(0X43DF9783,	"blue",	0);
	set_cmt	(0X43DF9788,	"green",	0);
	set_cmt	(0X43DF978D,	"red",	0);
	set_cmt	(0X43DF9792,	"color",	0);
	create_insn	(x=0X43DF97AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF980E,	"alpha",	0);
	set_cmt	(0X43DF9817,	"blue",	0);
	set_cmt	(0X43DF981C,	"green",	0);
	set_cmt	(0X43DF9821,	"red",	0);
	set_cmt	(0X43DF9826,	"color",	0);
	create_insn	(x=0X43DF983C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF989E,	"alpha",	0);
	set_cmt	(0X43DF98A3,	"blue",	0);
	set_cmt	(0X43DF98A8,	"green",	0);
	set_cmt	(0X43DF98AD,	"red",	0);
	set_cmt	(0X43DF98B2,	"color",	0);
	create_insn	(x=0X43DF98CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9937);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9975);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF99B3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF99F1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9A2F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9A6D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9AAB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9AFF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9B53);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9BA7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9BE5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9C23);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9C61);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9C9F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9CDD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF9D12,	"alpha",	0);
	set_cmt	(0X43DF9D14,	"blue",	0);
	set_cmt	(0X43DF9D19,	"green",	0);
	set_cmt	(0X43DF9D1E,	"red",	0);
	set_cmt	(0X43DF9D23,	"color",	0);
	create_insn	(x=0X43DF9D3D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DF9D9F,	"alpha",	0);
	set_cmt	(0X43DF9DA1,	"blue",	0);
	set_cmt	(0X43DF9DA6,	"green",	0);
	set_cmt	(0X43DF9DAB,	"red",	0);
	set_cmt	(0X43DF9DB0,	"color",	0);
	create_insn	(x=0X43DF9DCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9E35);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9E89);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9EDD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9F31);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9F6F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9FAD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DF9FF3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFA028,	"alpha",	0);
	set_cmt	(0X43DFA02D,	"blue",	0);
	set_cmt	(0X43DFA032,	"green",	0);
	set_cmt	(0X43DFA037,	"red",	0);
	set_cmt	(0X43DFA03C,	"color",	0);
	set_cmt	(0X43DFA05F,	"alpha",	0);
	set_cmt	(0X43DFA064,	"blue",	0);
	set_cmt	(0X43DFA069,	"green",	0);
	set_cmt	(0X43DFA06E,	"red",	0);
	set_cmt	(0X43DFA073,	"color",	0);
	create_insn	(x=0X43DFA094);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFA0F6,	"alpha",	0);
	set_cmt	(0X43DFA0FB,	"blue",	0);
	set_cmt	(0X43DFA100,	"green",	0);
	set_cmt	(0X43DFA102,	"red",	0);
	set_cmt	(0X43DFA104,	"color",	0);
	set_cmt	(0X43DFA127,	"alpha",	0);
	set_cmt	(0X43DFA12C,	"blue",	0);
	set_cmt	(0X43DFA131,	"green",	0);
	set_cmt	(0X43DFA136,	"red",	0);
	set_cmt	(0X43DFA13B,	"color",	0);
	create_insn	(x=0X43DFA15C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFA1BE,	"alpha",	0);
	set_cmt	(0X43DFA1C3,	"blue",	0);
	set_cmt	(0X43DFA1C8,	"green",	0);
	set_cmt	(0X43DFA1CD,	"red",	0);
	set_cmt	(0X43DFA1D2,	"color",	0);
	set_cmt	(0X43DFA1F5,	"alpha",	0);
	set_cmt	(0X43DFA1FA,	"blue",	0);
	set_cmt	(0X43DFA1FF,	"green",	0);
	set_cmt	(0X43DFA204,	"red",	0);
	set_cmt	(0X43DFA209,	"color",	0);
	create_insn	(x=0X43DFA22A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFA28C,	"alpha",	0);
	set_cmt	(0X43DFA291,	"blue",	0);
	set_cmt	(0X43DFA296,	"green",	0);
	set_cmt	(0X43DFA29B,	"red",	0);
	set_cmt	(0X43DFA29D,	"color",	0);
	set_cmt	(0X43DFA2C0,	"alpha",	0);
	set_cmt	(0X43DFA2C5,	"blue",	0);
	set_cmt	(0X43DFA2CA,	"green",	0);
	set_cmt	(0X43DFA2CF,	"red",	0);
	set_cmt	(0X43DFA2D4,	"color",	0);
	create_insn	(x=0X43DFA2F5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFA357,	"alpha",	0);
	set_cmt	(0X43DFA35C,	"blue",	0);
	set_cmt	(0X43DFA361,	"green",	0);
	set_cmt	(0X43DFA363,	"red",	0);
	set_cmt	(0X43DFA365,	"color",	0);
	set_cmt	(0X43DFA388,	"alpha",	0);
	set_cmt	(0X43DFA38D,	"blue",	0);
	set_cmt	(0X43DFA392,	"green",	0);
	set_cmt	(0X43DFA397,	"red",	0);
	set_cmt	(0X43DFA39C,	"color",	0);
	create_insn	(x=0X43DFA3BD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFA41F,	"alpha",	0);
	set_cmt	(0X43DFA424,	"blue",	0);
	set_cmt	(0X43DFA429,	"green",	0);
	set_cmt	(0X43DFA42E,	"red",	0);
	set_cmt	(0X43DFA433,	"color",	0);
	set_cmt	(0X43DFA456,	"alpha",	0);
	set_cmt	(0X43DFA45B,	"blue",	0);
	set_cmt	(0X43DFA460,	"green",	0);
	set_cmt	(0X43DFA465,	"red",	0);
	set_cmt	(0X43DFA46A,	"color",	0);
	create_insn	(x=0X43DFA48B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFA4ED,	"alpha",	0);
	set_cmt	(0X43DFA4EF,	"blue",	0);
	set_cmt	(0X43DFA4F4,	"green",	0);
	set_cmt	(0X43DFA4F9,	"red",	0);
	set_cmt	(0X43DFA4FE,	"color",	0);
	set_cmt	(0X43DFA521,	"alpha",	0);
	set_cmt	(0X43DFA526,	"blue",	0);
	set_cmt	(0X43DFA52B,	"green",	0);
	set_cmt	(0X43DFA530,	"red",	0);
	set_cmt	(0X43DFA535,	"color",	0);
	create_insn	(x=0X43DFA556);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFA5B8,	"alpha",	0);
	set_cmt	(0X43DFA5BD,	"blue",	0);
	set_cmt	(0X43DFA5C2,	"green",	0);
	set_cmt	(0X43DFA5C7,	"red",	0);
	set_cmt	(0X43DFA5CC,	"color",	0);
	set_cmt	(0X43DFA5EF,	"alpha",	0);
	set_cmt	(0X43DFA5F4,	"blue",	0);
	set_cmt	(0X43DFA5F9,	"green",	0);
	set_cmt	(0X43DFA5FE,	"red",	0);
	set_cmt	(0X43DFA603,	"color",	0);
	create_insn	(x=0X43DFA624);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFA686,	"alpha",	0);
	set_cmt	(0X43DFA68B,	"blue",	0);
	set_cmt	(0X43DFA690,	"green",	0);
	set_cmt	(0X43DFA692,	"red",	0);
	set_cmt	(0X43DFA694,	"color",	0);
	set_cmt	(0X43DFA6B7,	"alpha",	0);
	set_cmt	(0X43DFA6BC,	"blue",	0);
	set_cmt	(0X43DFA6C1,	"green",	0);
	set_cmt	(0X43DFA6C6,	"red",	0);
	set_cmt	(0X43DFA6CB,	"color",	0);
	create_insn	(x=0X43DFA6EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFA74E,	"alpha",	0);
	set_cmt	(0X43DFA753,	"blue",	0);
	set_cmt	(0X43DFA755,	"green",	0);
	set_cmt	(0X43DFA757,	"red",	0);
	set_cmt	(0X43DFA75C,	"color",	0);
	set_cmt	(0X43DFA77F,	"alpha",	0);
	set_cmt	(0X43DFA784,	"blue",	0);
	set_cmt	(0X43DFA789,	"green",	0);
	set_cmt	(0X43DFA78E,	"red",	0);
	set_cmt	(0X43DFA793,	"color",	0);
	create_insn	(x=0X43DFA7B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFA816,	"alpha",	0);
	set_cmt	(0X43DFA81B,	"blue",	0);
	set_cmt	(0X43DFA820,	"green",	0);
	set_cmt	(0X43DFA822,	"red",	0);
	set_cmt	(0X43DFA824,	"color",	0);
	set_cmt	(0X43DFA847,	"alpha",	0);
	set_cmt	(0X43DFA84C,	"blue",	0);
	set_cmt	(0X43DFA851,	"green",	0);
	set_cmt	(0X43DFA856,	"red",	0);
	set_cmt	(0X43DFA85B,	"color",	0);
	create_insn	(x=0X43DFA87C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFA8DE,	"alpha",	0);
	set_cmt	(0X43DFA8E3,	"blue",	0);
	set_cmt	(0X43DFA8E8,	"green",	0);
	set_cmt	(0X43DFA8EA,	"red",	0);
	set_cmt	(0X43DFA8EC,	"color",	0);
	set_cmt	(0X43DFA90F,	"alpha",	0);
	set_cmt	(0X43DFA914,	"blue",	0);
	set_cmt	(0X43DFA919,	"green",	0);
	set_cmt	(0X43DFA91E,	"red",	0);
	set_cmt	(0X43DFA923,	"color",	0);
	create_insn	(x=0X43DFA944);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFA9A6,	"alpha",	0);
	set_cmt	(0X43DFA9AB,	"blue",	0);
	set_cmt	(0X43DFA9AD,	"green",	0);
	set_cmt	(0X43DFA9AF,	"red",	0);
	set_cmt	(0X43DFA9B4,	"color",	0);
	set_cmt	(0X43DFA9D7,	"alpha",	0);
	set_cmt	(0X43DFA9DC,	"blue",	0);
	set_cmt	(0X43DFA9E1,	"green",	0);
	set_cmt	(0X43DFA9E6,	"red",	0);
	set_cmt	(0X43DFA9EB,	"color",	0);
	create_insn	(x=0X43DFAA0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAA77);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAABD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAAFB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAB39);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAB7F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFABC5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAC0B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAC49);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAC87);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFACC5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAD03);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAD41);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAD95);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFADD3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAE27);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAE65);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAEB9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAEF7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAF35);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAF73);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAFB9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFAFFF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB045);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB08B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB0DF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB11D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB171);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB1B7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB1F5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB24D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB2CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB30C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB352);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB398);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB3DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB424);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB46A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB4B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB4EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB534);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB57A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB5C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB606);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB64C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB6A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB6F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB732);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB770);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB7AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB7EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB82A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB868);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFB8A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFBA47);
	op_hex		(x,	1);
	create_insn	(x=0X43DFBA7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFBB08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFBB4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFBB8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFBD37);
	op_hex		(x,	1);
	create_insn	(x=0X43DFBD6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFBDF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFBE3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFBE92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFBED0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFBF0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFBF54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFBF92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFBFD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC00E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC04C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC092);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC0D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC11E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC164);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC1A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFC1D7,	"alpha",	0);
	set_cmt	(0X43DFC1D9,	"blue",	0);
	set_cmt	(0X43DFC1DB,	"green",	0);
	set_cmt	(0X43DFC1DD,	"red",	0);
	set_cmt	(0X43DFC1DF,	"color",	0);
	create_insn	(x=0X43DFC1F9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC264);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFC299,	"alpha",	0);
	set_cmt	(0X43DFC29B,	"blue",	0);
	set_cmt	(0X43DFC29D,	"green",	0);
	set_cmt	(0X43DFC2A2,	"red",	0);
	set_cmt	(0X43DFC2A7,	"color",	0);
	create_insn	(x=0X43DFC2C1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC32C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFC361,	"alpha",	0);
	set_cmt	(0X43DFC366,	"blue",	0);
	set_cmt	(0X43DFC36B,	"green",	0);
	set_cmt	(0X43DFC370,	"red",	0);
	set_cmt	(0X43DFC375,	"color",	0);
	create_insn	(x=0X43DFC38F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC3FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC438);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC47E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC4C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC518);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC56C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC5B1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC5F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC636);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC67C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC6D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC716);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC754);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC792);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC7D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC824);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC8CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC90A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC948);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC986);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFC9C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFCA02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFCA48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFCA8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFCAD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFCB1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFCB60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFCBA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFCBEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFCC29,	"blue",	0);
	set_cmt	(0X43DFCC2B,	"green",	0);
	set_cmt	(0X43DFCC2D,	"red",	0);
	set_cmt	(0X43DFCC32,	"color",	0);
	create_insn	(x=0X43DFCC4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFCCAE,	"blue",	0);
	set_cmt	(0X43DFCCB0,	"green",	0);
	set_cmt	(0X43DFCCB5,	"red",	0);
	set_cmt	(0X43DFCCBA,	"color",	0);
	create_insn	(x=0X43DFCCD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFCD3F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43DFCD74,	"blue",	0);
	set_cmt	(0X43DFCD76,	"green",	0);
	set_cmt	(0X43DFCD7B,	"red",	0);
	set_cmt	(0X43DFCD80,	"color",	0);
	create_insn	(x=0X43DFCD9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFCE05);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFCE55);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFCEEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFCF7F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD014);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD0A9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD13E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD1D3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD268);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD2FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD392);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD427);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD4BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD551);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD5E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD67B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD710);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD7A5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD83A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD8CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD964);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFD9F9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFDA8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFDB23);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFDBB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFDC4D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFDCE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFDD77);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFDE0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFDEA1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFDF36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFDFCB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE060);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE0F5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE18A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE21F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE2B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE349);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE3DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE473);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE508);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE59D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE632);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE6C7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE75C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE7F1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE886);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE91B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFE9B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFEA37);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFEA71);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFEAA7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFEB0D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFEB94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFEBCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43DFEC0B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43DFEC32,	0XE);
	create_insn	(0X43DFEC40);
	create_insn	(x=0X43DFEC43);
	op_hex		(x,	1);
	create_insn	(x=0X43DFECA7);
	op_hex		(x,	1);
	create_insn	(x=0X43DFECD3);
	op_hex		(x,	1);
	create_insn	(x=0X43DFED04);
	op_hex		(x,	1);
	create_insn	(0X43DFED1B);
	create_insn	(x=0X43DFED28);
	op_hex		(x,	1);
	create_insn	(x=0X43DFED2D);
	op_hex		(x,	1);
	set_cmt	(0X43DFED59,	"this",	0);
	set_cmt	(0X43DFED5C,	"a3",	0);
	set_cmt	(0X43DFED5D,	"a2",	0);
	create_insn	(x=0X43DFED77);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFEDB5);
	op_hex		(x,	1);
	make_array	(0X43DFEDC4,	0XC);
	create_insn	(0X43DFEDD0);
	create_insn	(x=0X43DFEDD3);
	op_hex		(x,	1);
	set_cmt	(0X43DFEE28,	"a3",	0);
	set_cmt	(0X43DFEE29,	"a2",	0);
	set_cmt	(0X43DFEE2A,	"this",	0);
	create_insn	(x=0X43DFEE48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFEE4E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFEE8C);
	op_hex		(x,	1);
	create_insn	(x=0X43DFEED7);
	op_hex		(x,	1);
	create_insn	(x=0X43DFEF04);
	op_hex		(x,	1);
	create_insn	(x=0X43DFEF35);
	op_hex		(x,	1);
	make_array	(0X43DFEF5A,	0X6);
	create_insn	(0X43DFEF60);
	create_insn	(x=0X43DFEF63);
	op_hex		(x,	1);
	set_cmt	(0X43DFEF6F,	"size",	0);
	create_insn	(x=0X43DFEFC7);
	op_hex		(x,	1);
	create_insn	(x=0X43DFEFF3);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF024);
	op_hex		(x,	1);
	create_insn	(0X43DFF038);
	create_insn	(x=0X43DFF048);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF04D);
	op_hex		(x,	1);
	set_cmt	(0X43DFF079,	"this",	0);
	set_cmt	(0X43DFF07C,	"a3",	0);
	set_cmt	(0X43DFF07D,	"a2",	0);
	create_insn	(x=0X43DFF097);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFF0D5);
	op_hex		(x,	1);
	make_array	(0X43DFF0E4,	0XC);
	create_insn	(0X43DFF0F0);
	create_insn	(x=0X43DFF0F3);
	op_hex		(x,	1);
	set_cmt	(0X43DFF136,	"a3",	0);
	set_cmt	(0X43DFF137,	"a2",	0);
	set_cmt	(0X43DFF138,	"this",	0);
	create_insn	(x=0X43DFF153);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFF159);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFF197);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF1D7);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF204);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF235);
	op_hex		(x,	1);
	make_array	(0X43DFF258,	0X8);
	create_insn	(0X43DFF260);
	create_insn	(x=0X43DFF263);
	op_hex		(x,	1);
	set_cmt	(0X43DFF26F,	"size",	0);
	create_insn	(x=0X43DFF2C7);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF2F3);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF324);
	op_hex		(x,	1);
	create_insn	(0X43DFF338);
	create_insn	(x=0X43DFF348);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF34D);
	op_hex		(x,	1);
	set_cmt	(0X43DFF379,	"this",	0);
	set_cmt	(0X43DFF37C,	"a3",	0);
	set_cmt	(0X43DFF37D,	"a2",	0);
	create_insn	(x=0X43DFF397);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFF3D5);
	op_hex		(x,	1);
	make_array	(0X43DFF3E4,	0XC);
	create_insn	(0X43DFF3F0);
	create_insn	(x=0X43DFF3F3);
	op_hex		(x,	1);
	set_cmt	(0X43DFF3FD,	"size",	0);
	set_cmt	(0X43DFF47D,	"a3",	0);
	set_cmt	(0X43DFF47E,	"a2",	0);
	set_cmt	(0X43DFF47F,	"this",	0);
	create_insn	(x=0X43DFF49A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFF4A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFF4DE);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF51D);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF54A);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF57B);
	op_hex		(x,	1);
	make_array	(0X43DFF59D,	0X3);
	create_insn	(0X43DFF5A0);
	create_insn	(x=0X43DFF5A3);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF607);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF633);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF664);
	op_hex		(x,	1);
	create_insn	(0X43DFF67B);
	create_insn	(x=0X43DFF688);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF68D);
	op_hex		(x,	1);
	set_cmt	(0X43DFF6B9,	"this",	0);
	set_cmt	(0X43DFF6BC,	"a3",	0);
	set_cmt	(0X43DFF6BD,	"a2",	0);
	create_insn	(x=0X43DFF6D7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFF715);
	op_hex		(x,	1);
	make_array	(0X43DFF724,	0XC);
	create_insn	(0X43DFF730);
	create_insn	(x=0X43DFF733);
	op_hex		(x,	1);
	set_cmt	(0X43DFF788,	"a3",	0);
	set_cmt	(0X43DFF789,	"a2",	0);
	set_cmt	(0X43DFF78A,	"this",	0);
	create_insn	(x=0X43DFF7A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFF7AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFF7EC);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF837);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF864);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF895);
	op_hex		(x,	1);
	make_array	(0X43DFF8BA,	0X6);
	create_insn	(0X43DFF8C0);
	create_insn	(x=0X43DFF8C3);
	op_hex		(x,	1);
	set_cmt	(0X43DFF8CD,	"size",	0);
	set_cmt	(0X43DFF908,	"a3",	0);
	set_cmt	(0X43DFF909,	"a2",	0);
	set_cmt	(0X43DFF90A,	"this",	0);
	create_insn	(x=0X43DFF925);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFF92B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFF969);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF9A8);
	op_hex		(x,	1);
	create_insn	(x=0X43DFF9D5);
	op_hex		(x,	1);
	create_insn	(x=0X43DFFA06);
	op_hex		(x,	1);
	make_array	(0X43DFFA28,	0X8);
	create_insn	(0X43DFFA30);
	create_insn	(x=0X43DFFA33);
	op_hex		(x,	1);
	create_insn	(x=0X43DFFA97);
	op_hex		(x,	1);
	create_insn	(x=0X43DFFAC3);
	op_hex		(x,	1);
	create_insn	(x=0X43DFFAF4);
	op_hex		(x,	1);
	create_insn	(0X43DFFB08);
	create_insn	(x=0X43DFFB18);
	op_hex		(x,	1);
	create_insn	(x=0X43DFFB1D);
	op_hex		(x,	1);
	set_cmt	(0X43DFFB49,	"this",	0);
	set_cmt	(0X43DFFB4C,	"a3",	0);
	set_cmt	(0X43DFFB4D,	"a2",	0);
	create_insn	(x=0X43DFFB67);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFFBA5);
	op_hex		(x,	1);
	make_array	(0X43DFFBB4,	0XC);
	create_insn	(0X43DFFBC0);
	create_insn	(x=0X43DFFBC3);
	op_hex		(x,	1);
	set_cmt	(0X43DFFC33,	"a3",	0);
	set_cmt	(0X43DFFC34,	"a2",	0);
	set_cmt	(0X43DFFC35,	"this",	0);
	create_insn	(x=0X43DFFC53);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFFC59);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFFC97);
	op_hex		(x,	1);
	create_insn	(x=0X43DFFCD7);
	op_hex		(x,	1);
	create_insn	(x=0X43DFFD04);
	op_hex		(x,	1);
	create_insn	(x=0X43DFFD35);
	op_hex		(x,	1);
	make_array	(0X43DFFD57,	0X9);
	create_insn	(0X43DFFD60);
	create_insn	(x=0X43DFFD63);
	op_hex		(x,	1);
	create_insn	(x=0X43DFFDC7);
	op_hex		(x,	1);
	create_insn	(x=0X43DFFDF3);
	op_hex		(x,	1);
	create_insn	(x=0X43DFFE24);
	op_hex		(x,	1);
	create_insn	(0X43DFFE38);
	create_insn	(x=0X43DFFE48);
	op_hex		(x,	1);
	create_insn	(x=0X43DFFE4D);
	op_hex		(x,	1);
	set_cmt	(0X43DFFE79,	"this",	0);
	set_cmt	(0X43DFFE7C,	"a3",	0);
	set_cmt	(0X43DFFE7D,	"a2",	0);
	create_insn	(x=0X43DFFE97);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFFED5);
	op_hex		(x,	1);
	make_array	(0X43DFFEE4,	0XC);
	create_insn	(0X43DFFEF0);
	create_insn	(x=0X43DFFEF3);
	op_hex		(x,	1);
	set_cmt	(0X43DFFF4C,	"a3",	0);
	set_cmt	(0X43DFFF4D,	"a2",	0);
	set_cmt	(0X43DFFF4E,	"this",	0);
	create_insn	(x=0X43DFFF69);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFFF6F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43DFFFAD);
	op_hex		(x,	1);
	create_insn	(x=0X43DFFFEC);
	op_hex		(x,	1);
	create_insn	(x=0X43E00019);
	op_hex		(x,	1);
	create_insn	(x=0X43E0004A);
	op_hex		(x,	1);
	make_array	(0X43E0006C,	0X4);
	create_insn	(0X43E00070);
	create_insn	(x=0X43E00073);
	op_hex		(x,	1);
	set_cmt	(0X43E0007D,	"size",	0);
	set_cmt	(0X43E000CE,	"a3",	0);
	set_cmt	(0X43E000CF,	"a2",	0);
	set_cmt	(0X43E000D0,	"this",	0);
	create_insn	(x=0X43E000EB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E000F1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E0012F);
	op_hex		(x,	1);
	create_insn	(x=0X43E00177);
	op_hex		(x,	1);
	create_insn	(x=0X43E001A4);
	op_hex		(x,	1);
	create_insn	(x=0X43E001D5);
	op_hex		(x,	1);
	make_array	(0X43E001F7,	0X9);
	create_insn	(0X43E00200);
	create_insn	(x=0X43E00203);
	op_hex		(x,	1);
	set_cmt	(0X43E0020F,	"size",	0);
	create_insn	(x=0X43E00267);
	op_hex		(x,	1);
	create_insn	(x=0X43E00293);
	op_hex		(x,	1);
	create_insn	(x=0X43E002C4);
	op_hex		(x,	1);
	create_insn	(0X43E002D8);
	create_insn	(x=0X43E002E8);
	op_hex		(x,	1);
	create_insn	(x=0X43E002ED);
	op_hex		(x,	1);
	set_cmt	(0X43E00319,	"this",	0);
	set_cmt	(0X43E0031C,	"a3",	0);
	set_cmt	(0X43E0031D,	"a2",	0);
	create_insn	(x=0X43E00337);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E00375);
	op_hex		(x,	1);
	make_array	(0X43E00384,	0XC);
	create_insn	(0X43E00390);
	create_insn	(x=0X43E00393);
	op_hex		(x,	1);
	set_cmt	(0X43E0039D,	"size",	0);
	set_cmt	(0X43E003E4,	"a3",	0);
	set_cmt	(0X43E003E5,	"a2",	0);
	set_cmt	(0X43E003E6,	"this",	0);
	create_insn	(x=0X43E00401);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E00407);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E00445);
	op_hex		(x,	1);
	create_insn	(x=0X43E00487);
	op_hex		(x,	1);
	create_insn	(x=0X43E004B4);
	op_hex		(x,	1);
	create_insn	(x=0X43E004E5);
	op_hex		(x,	1);
	make_array	(0X43E00507,	0X9);
	create_insn	(0X43E00510);
	create_insn	(x=0X43E00513);
	op_hex		(x,	1);
	set_cmt	(0X43E0051F,	"size",	0);
	create_insn	(x=0X43E00577);
	op_hex		(x,	1);
	create_insn	(x=0X43E005A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E005D4);
	op_hex		(x,	1);
	create_insn	(0X43E005E8);
	create_insn	(x=0X43E005F8);
	op_hex		(x,	1);
	create_insn	(x=0X43E005FD);
	op_hex		(x,	1);
	set_cmt	(0X43E00629,	"this",	0);
	set_cmt	(0X43E0062C,	"a3",	0);
	set_cmt	(0X43E0062D,	"a2",	0);
	create_insn	(x=0X43E00647);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E00685);
	op_hex		(x,	1);
	make_array	(0X43E00694,	0XC);
	create_insn	(0X43E006A0);
	create_insn	(x=0X43E006A3);
	op_hex		(x,	1);
	set_cmt	(0X43E006AD,	"size",	0);
	set_cmt	(0X43E006EE,	"a3",	0);
	set_cmt	(0X43E006EF,	"a2",	0);
	set_cmt	(0X43E006F0,	"this",	0);
	create_insn	(x=0X43E0070B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E00711);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E0074F);
	op_hex		(x,	1);
	create_insn	(x=0X43E00797);
	op_hex		(x,	1);
	create_insn	(x=0X43E007C4);
	op_hex		(x,	1);
	create_insn	(x=0X43E007F5);
	op_hex		(x,	1);
	make_array	(0X43E00817,	0X9);
	create_insn	(0X43E00820);
	create_insn	(x=0X43E00823);
	op_hex		(x,	1);
	set_cmt	(0X43E0082F,	"size",	0);
	create_insn	(x=0X43E00887);
	op_hex		(x,	1);
	create_insn	(x=0X43E008B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E008E4);
	op_hex		(x,	1);
	create_insn	(0X43E008F8);
	create_insn	(x=0X43E00908);
	op_hex		(x,	1);
	create_insn	(x=0X43E0090D);
	op_hex		(x,	1);
	set_cmt	(0X43E00939,	"this",	0);
	set_cmt	(0X43E0093C,	"a3",	0);
	set_cmt	(0X43E0093D,	"a2",	0);
	create_insn	(x=0X43E00957);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E00995);
	op_hex		(x,	1);
	make_array	(0X43E009A4,	0XC);
	create_insn	(0X43E009B0);
	create_insn	(x=0X43E009B3);
	op_hex		(x,	1);
	set_cmt	(0X43E009BD,	"size",	0);
	set_cmt	(0X43E009FE,	"a3",	0);
	set_cmt	(0X43E009FF,	"a2",	0);
	set_cmt	(0X43E00A00,	"this",	0);
	create_insn	(x=0X43E00A1B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E00A21);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E00A5F);
	op_hex		(x,	1);
	create_insn	(x=0X43E00AA7);
	op_hex		(x,	1);
	create_insn	(x=0X43E00AD4);
	op_hex		(x,	1);
	create_insn	(x=0X43E00B05);
	op_hex		(x,	1);
	make_array	(0X43E00B27,	0X9);
	create_insn	(0X43E00B30);
	create_insn	(x=0X43E00B33);
	op_hex		(x,	1);
	set_cmt	(0X43E00B3F,	"size",	0);
	create_insn	(x=0X43E00B87);
	op_hex		(x,	1);
	create_insn	(x=0X43E00BB1);
	op_hex		(x,	1);
	create_insn	(x=0X43E00BE4);
	op_hex		(x,	1);
	create_insn	(x=0X43E00BF8);
	op_hex		(x,	1);
	create_insn	(x=0X43E00BFD);
	op_hex		(x,	1);
	set_cmt	(0X43E00C29,	"this",	0);
	set_cmt	(0X43E00C2C,	"a3",	0);
	set_cmt	(0X43E00C2D,	"a2",	0);
	create_insn	(x=0X43E00C45);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E00C83);
	op_hex		(x,	1);
	make_array	(0X43E00C92,	0XE);
	create_insn	(0X43E00CA0);
	create_insn	(x=0X43E00CA3);
	op_hex		(x,	1);
	set_cmt	(0X43E00CA7,	"size",	0);
	set_cmt	(0X43E00CE5,	"a3",	0);
	set_cmt	(0X43E00CE6,	"a2",	0);
	set_cmt	(0X43E00CE7,	"this",	0);
	create_insn	(x=0X43E00D02);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E00D08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E00D46);
	op_hex		(x,	1);
	create_insn	(x=0X43E00D87);
	op_hex		(x,	1);
	create_insn	(x=0X43E00DB4);
	op_hex		(x,	1);
	create_insn	(x=0X43E00DE7);
	op_hex		(x,	1);
	make_array	(0X43E00DFB,	0X5);
	create_insn	(0X43E00E00);
	create_insn	(0X43E00E1A);
	make_array	(0X43E00E27,	0X9);
	create_insn	(0X43E00E30);
	create_insn	(0X43E00E51);
	create_insn	(0X43E00E60);
	create_insn	(x=0X43E00E63);
	op_hex		(x,	1);
	create_insn	(x=0X43E00E77);
	op_hex		(x,	1);
	make_array	(0X43E00E81,	0XF);
	create_insn	(x=0X43E00E90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E00E99,	0X7);
	create_insn	(0X43E00EA0);
	create_insn	(x=0X43E00EA3);
	op_hex		(x,	1);
	create_insn	(x=0X43E00EB4);
	op_hex		(x,	1);
	make_array	(0X43E00EBE,	0X2);
	create_insn	(0X43E00EC0);
	create_insn	(x=0X43E00EC3);
	op_hex		(x,	1);
	create_insn	(x=0X43E00ED4);
	op_hex		(x,	1);
	make_array	(0X43E00EDE,	0X2);
	create_insn	(0X43E00EE0);
	make_array	(0X43E00F02,	0XE);
	create_insn	(0X43E00F10);
	set_name	(0X43E00F10,	"C_SDK::InputSystem::ExecuteClientCmd");
	create_insn	(x=0X43E00F13);
	op_hex		(x,	1);
	create_insn	(x=0X43E00F27);
	op_hex		(x,	1);
	make_array	(0X43E00F31,	0XF);
	create_insn	(0X43E00F40);
	create_insn	(x=0X43E00F43);
	op_hex		(x,	1);
	create_insn	(x=0X43E00F57);
	op_hex		(x,	1);
	make_array	(0X43E00F61,	0XF);
	create_insn	(0X43E00F70);
	create_insn	(x=0X43E00F73);
	op_hex		(x,	1);
	create_insn	(x=0X43E00F84);
	op_hex		(x,	1);
	make_array	(0X43E00F8E,	0X2);
	create_insn	(0X43E00F90);
	create_insn	(x=0X43E00F93);
	op_hex		(x,	1);
	create_insn	(x=0X43E00FA4);
	op_hex		(x,	1);
	make_array	(0X43E00FAE,	0X2);
	create_insn	(0X43E00FB0);
	create_insn	(x=0X43E00FB3);
	op_hex		(x,	1);
	create_insn	(x=0X43E00FC4);
	op_hex		(x,	1);
	make_array	(0X43E00FCE,	0X2);
	create_insn	(0X43E00FD0);
	create_insn	(x=0X43E00FD3);
	op_hex		(x,	1);
	create_insn	(x=0X43E00FE4);
	op_hex		(x,	1);
	make_array	(0X43E00FEE,	0X2);
	create_insn	(0X43E00FF0);
	create_insn	(x=0X43E00FF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E01004);
	op_hex		(x,	1);
	make_array	(0X43E0100E,	0X2);
	create_insn	(0X43E01010);
	create_insn	(x=0X43E01013);
	op_hex		(x,	1);
	create_insn	(x=0X43E01024);
	op_hex		(x,	1);
	make_array	(0X43E0102E,	0X2);
	create_insn	(0X43E01030);
	create_insn	(x=0X43E01035);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E01048);
	op_hex		(x,	1);
	create_insn	(x=0X43E0105A);
	op_hex		(x,	1);
	create_insn	(x=0X43E01062);
	op_hex		(x,	1);
	create_insn	(x=0X43E0107B);
	op_hex		(x,	1);
	create_insn	(x=0X43E01080);
	op_hex		(x,	1);
	create_insn	(0X43E01094);
	create_insn	(x=0X43E010B0);
	op_hex		(x,	1);
	create_insn	(0X43E010B5);
	create_insn	(x=0X43E010C0);
	op_hex		(x,	1);
	set_cmt	(0X43E010C8,	"Size",	0);
	create_insn	(x=0X43E010CE);
	op_hex		(x,	1);
	create_insn	(x=0X43E010DC);
	op_hex		(x,	1);
	create_insn	(0X43E010E4);
	set_cmt	(0X43E010E8,	"Size",	0);
	create_insn	(x=0X43E010EE);
	op_hex		(x,	1);
	create_insn	(0X43E010F8);
	create_insn	(x=0X43E01127);
	op_hex		(x,	1);
	create_insn	(0X43E0112C);
	create_insn	(x=0X43E0114B);
	op_hex		(x,	1);
	create_insn	(x=0X43E01160);
	op_hex		(x,	1);
	create_insn	(x=0X43E01184);
	op_hex		(x,	1);
	create_insn	(0X43E011B0);
	set_cmt	(0X43E011CF,	"Trap to Debugger",	0);
	create_insn	(x=0X43E011CF);
	op_hex		(x,	0);
	create_insn	(0X43E011D0);
	set_name	(0X43E011D0,	"j_nullsub_3");
	make_array	(0X43E011D5,	0XB);
	create_insn	(x=0X43E011E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E011E6,	0XA);
	create_insn	(0X43E011F0);
	set_name	(0X43E011F0,	"C_SDK::LoggerSystem::PrintToConsole");
	create_insn	(x=0X43E01211);
	op_hex		(x,	1);
	make_array	(0X43E01216,	0XA);
	create_insn	(0X43E01220);
	create_insn	(x=0X43E01223);
	op_hex		(x,	1);
	create_insn	(x=0X43E0123B);
	op_hex		(x,	1);
	create_insn	(x=0X43E01245);
	op_hex		(x,	1);
	create_insn	(x=0X43E01248);
	op_hex		(x,	1);
	make_array	(0X43E01254,	0XC);
	create_insn	(0X43E01260);
	create_insn	(x=0X43E01273);
	op_hex		(x,	1);
	make_array	(0X43E01278,	0X8);
	create_insn	(0X43E01280);
	set_cmt	(0X43E012BC,	"unsigned int",	0);
	create_insn	(x=0X43E012C2);
	op_hex		(x,	1);
	create_insn	(x=0X43E012C8);
	op_hex		(x,	1);
	make_array	(0X43E012F6,	0XA);
	create_insn	(0X43E01300);
	create_insn	(x=0X43E01303);
	op_hex		(x,	1);
	create_insn	(x=0X43E01306);
	op_hex		(x,	1);
	create_insn	(0X43E0131C);
	create_insn	(x=0X43E01330);
	op_hex		(x,	1);
	create_insn	(x=0X43E0133C);
	op_hex		(x,	1);
	set_cmt	(0X43E01343,	"hash",	0);
	create_insn	(x=0X43E01391);
	op_hex		(x,	1);
	create_insn	(x=0X43E01398);
	op_hex		(x,	1);
	make_array	(0X43E013B6,	0XA);
	create_insn	(0X43E013C0);
	make_array	(0X43E013C6,	0XA);
	create_insn	(0X43E013D0);
	make_array	(0X43E013D6,	0XA);
	create_insn	(0X43E013E0);
	create_insn	(x=0X43E013E8);
	op_hex		(x,	1);
	create_insn	(x=0X43E013EC);
	op_hex		(x,	1);
	set_cmt	(0X43E013FD,	"propHash",	0);
	set_cmt	(0X43E01402,	"classHash",	0);
	create_insn	(x=0X43E01411);
	op_hex		(x,	1);
	create_insn	(0X43E0141C);
	make_array	(0X43E01425,	0XB);
	create_insn	(0X43E01430);
	set_cmt	(0X43E01452,	"propHash",	0);
	set_cmt	(0X43E01457,	"classHash",	0);
	create_insn	(0X43E0147F);
	make_array	(0X43E01486,	0XA);
	create_insn	(0X43E01490);
	create_insn	(x=0X43E01493);
	op_hex		(x,	1);
	create_insn	(x=0X43E014A8);
	op_hex		(x,	1);
	create_insn	(x=0X43E014B0);
	op_hex		(x,	1);
	set_cmt	(0X43E01865,	"Size",	0);
	create_insn	(x=0X43E0189A);
	op_hex		(x,	1);
	set_cmt	(0X43E018F1,	"Size",	0);
	create_insn	(x=0X43E018FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E01900);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E0192F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E0193D);
	op_hex		(x,	1);
	set_cmt	(0X43E0196E,	"Size",	0);
	create_insn	(x=0X43E01979);
	op_hex		(x,	1);
	create_insn	(x=0X43E01980);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E019AD);
	make_array	(0X43E019B2,	0XE);
	create_insn	(0X43E019C0);
	create_insn	(x=0X43E019C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E019C6);
	op_hex		(x,	1);
	set_cmt	(0X43E019D6,	"arg",	0);
	create_insn	(x=0X43E019D7);
	op_hex		(x,	1);
	set_cmt	(0X43E019DB,	"propHash",	0);
	create_insn	(x=0X43E019E0);
	op_hex		(x,	1);
	set_cmt	(0X43E019E3,	"classHash",	0);
	create_insn	(0X43E019F9);
	set_cmt	(0X43E01A32,	"propHash",	0);
	set_cmt	(0X43E01A37,	"classHash",	0);
	set_cmt	(0X43E01A52,	"propHash",	0);
	set_cmt	(0X43E01A57,	"classHash",	0);
	set_cmt	(0X43E01ACD,	"propHash",	0);
	set_cmt	(0X43E01AD2,	"classHash",	0);
	set_cmt	(0X43E01B10,	"propHash",	0);
	set_cmt	(0X43E01B15,	"classHash",	0);
	create_insn	(x=0X43E01BF2);
	op_hex		(x,	1);
	create_insn	(x=0X43E01BF7);
	op_hex		(x,	1);
	create_insn	(x=0X43E01C32);
	op_hex		(x,	1);
	create_insn	(0X43E01E83);
	create_insn	(x=0X43E01E90);
	op_hex		(x,	1);
	create_insn	(x=0X43E01E9B);
	op_hex		(x,	1);
	create_insn	(x=0X43E01EC6);
	op_hex		(x,	1);
	create_insn	(0X43E01F1F);
	make_array	(0X43E01FA9,	0X7);
	create_insn	(0X43E01FB0);
	create_insn	(x=0X43E01FB3);
	op_hex		(x,	1);
	create_insn	(x=0X43E01FB9);
	op_hex		(x,	1);
	create_insn	(0X43E021D7);
	create_insn	(0X43E0226B);
	create_insn	(0X43E02275);
	create_insn	(0X43E02477);
	create_insn	(0X43E024EC);
	make_array	(0X43E02522,	0XE);
	create_insn	(0X43E02530);
	set_name	(0X43E02530,	"OneTap::GUI::RenderChilds");
	create_insn	(x=0X43E02533);
	op_hex		(x,	1);
	create_insn	(x=0X43E02536);
	op_hex		(x,	1);
	create_insn	(x=0X43E02539);
	op_hex		(x,	1);
	create_insn	(x=0X43E02546);
	op_hex		(x,	1);
	create_insn	(x=0X43E02551);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E025C1,	"this",	0);
	set_cmt	(0X43E025D8,	"vtable",	0);
	create_insn	(0X43E02654);
	set_cmt	(0X43E02660,	"propHash",	0);
	set_cmt	(0X43E02665,	"classHash",	0);
	set_cmt	(0X43E0267D,	"index",	0);
	set_cmt	(0X43E02682,	"interface",	0);
	set_cmt	(0X43E0268F,	"this",	0);
	set_cmt	(0X43E026A7,	"propHash",	0);
	set_cmt	(0X43E026AC,	"classHash",	0);
	create_insn	(x=0X43E02711);
	op_hex		(x,	1);
	create_insn	(0X43E0275E);
	set_cmt	(0X43E02783,	"a3",	0);
	set_cmt	(0X43E02784,	"a2",	0);
	set_cmt	(0X43E02785,	"this",	0);
	create_insn	(x=0X43E027C7);
	op_hex		(x,	1);
	create_insn	(0X43E02805);
	set_cmt	(0X43E02837,	"a3",	0);
	set_cmt	(0X43E02838,	"a2",	0);
	set_cmt	(0X43E02839,	"this",	0);
	create_insn	(x=0X43E028A8);
	op_hex		(x,	1);
	create_insn	(0X43E028EA);
	create_insn	(x=0X43E02931);
	op_hex		(x,	1);
	create_insn	(x=0X43E02986);
	op_hex		(x,	1);
	create_insn	(x=0X43E029DB);
	op_hex		(x,	1);
	create_insn	(x=0X43E02A2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E02A61);
	op_hex		(x,	1);
	create_insn	(x=0X43E02A95);
	op_hex		(x,	1);
	create_insn	(0X43E02AC4);
	create_insn	(x=0X43E02B16);
	op_hex		(x,	1);
	create_insn	(x=0X43E02B49);
	op_hex		(x,	1);
	set_cmt	(0X43E02B74,	"a9",	0);
	set_cmt	(0X43E02B75,	"a8",	0);
	set_cmt	(0X43E02B76,	"a7",	0);
	set_cmt	(0X43E02B77,	"a6",	0);
	create_insn	(x=0X43E02B78);
	op_hex		(x,	1);
	set_cmt	(0X43E02B7F,	"a2",	0);
	set_cmt	(0X43E02B82,	"a5",	0);
	set_cmt	(0X43E02B8A,	"a4",	0);
	set_cmt	(0X43E02B91,	"a3",	0);
	set_cmt	(0X43E02B94,	"a1",	0);
	create_insn	(x=0X43E02BAD);
	op_hex		(x,	1);
	set_cmt	(0X43E02BD9,	"a9",	0);
	set_cmt	(0X43E02BDA,	"a8",	0);
	set_cmt	(0X43E02BDB,	"a7",	0);
	set_cmt	(0X43E02BDC,	"a6",	0);
	create_insn	(x=0X43E02BDD);
	op_hex		(x,	1);
	set_cmt	(0X43E02BE0,	"a5",	0);
	set_cmt	(0X43E02BE8,	"a4",	0);
	set_cmt	(0X43E02BEF,	"a3",	0);
	set_cmt	(0X43E02C04,	"a2",	0);
	set_cmt	(0X43E02C0B,	"a1",	0);
	set_cmt	(0X43E02C13,	"a9",	0);
	set_cmt	(0X43E02C14,	"a8",	0);
	set_cmt	(0X43E02C15,	"a7",	0);
	set_cmt	(0X43E02C19,	"a6",	0);
	create_insn	(x=0X43E02C1A);
	op_hex		(x,	1);
	set_cmt	(0X43E02C20,	"a5",	0);
	set_cmt	(0X43E02C28,	"a4",	0);
	set_cmt	(0X43E02C3B,	"a1",	0);
	set_cmt	(0X43E02C3E,	"a3",	0);
	set_cmt	(0X43E02C41,	"a2",	0);
	create_insn	(x=0X43E02C5D);
	op_hex		(x,	1);
	create_insn	(x=0X43E02CC7);
	op_hex		(x,	1);
	set_cmt	(0X43E02D09,	"a3",	0);
	set_cmt	(0X43E02D0A,	"a2",	0);
	set_cmt	(0X43E02D0B,	"this",	0);
	create_insn	(x=0X43E02D24);
	op_hex		(x,	1);
	create_insn	(x=0X43E02D96);
	op_hex		(x,	1);
	create_insn	(x=0X43E02DCC);
	op_hex		(x,	1);
	create_insn	(x=0X43E02E17);
	op_hex		(x,	1);
	set_cmt	(0X43E02E61,	"a3",	0);
	set_cmt	(0X43E02E62,	"a2",	0);
	set_cmt	(0X43E02E63,	"this",	0);
	create_insn	(0X43E02E72);
	create_insn	(x=0X43E02EB8);
	op_hex		(x,	1);
	create_insn	(x=0X43E02EC2);
	op_hex		(x,	1);
	create_insn	(x=0X43E02EDE);
	op_hex		(x,	1);
	create_insn	(x=0X43E02EE1);
	op_hex		(x,	1);
	create_insn	(x=0X43E02EF6);
	op_hex		(x,	1);
	create_insn	(x=0X43E02F45);
	op_hex		(x,	1);
	create_insn	(x=0X43E02F8B);
	op_hex		(x,	1);
	create_insn	(x=0X43E02FA0);
	op_hex		(x,	1);
	make_array	(0X43E03001,	0XF);
	create_insn	(0X43E03010);
	create_insn	(0X43E03030);
	create_insn	(x=0X43E03033);
	op_hex		(x,	1);
	create_insn	(x=0X43E030C7);
	op_hex		(x,	1);
	create_insn	(0X43E030EF);
	create_insn	(x=0X43E03127);
	op_hex		(x,	1);
	set_cmt	(0X43E0316B,	"a3",	0);
	set_cmt	(0X43E0316C,	"a2",	0);
	set_cmt	(0X43E0316D,	"this",	0);
	create_insn	(x=0X43E031AB);
	op_hex		(x,	1);
	create_insn	(x=0X43E03214);
	op_hex		(x,	1);
	create_insn	(0X43E0323F);
	create_insn	(x=0X43E03282);
	op_hex		(x,	1);
	make_array	(0X43E0328E,	0X2);
	create_insn	(0X43E03290);
	create_insn	(x=0X43E03293);
	op_hex		(x,	1);
	create_insn	(x=0X43E03296);
	op_hex		(x,	1);
	create_insn	(x=0X43E03299);
	op_hex		(x,	1);
	create_insn	(x=0X43E032A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E032BD);
	op_hex		(x,	1);
	create_insn	(x=0X43E032DC);
	op_hex		(x,	1);
	create_insn	(x=0X43E032F8);
	op_hex		(x,	1);
	create_insn	(x=0X43E03353);
	op_hex		(x,	1);
	create_insn	(x=0X43E03356);
	op_hex		(x,	1);
	create_insn	(x=0X43E033A8);
	op_hex		(x,	1);
	create_insn	(x=0X43E033E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E033EB);
	op_hex		(x,	1);
	create_insn	(x=0X43E03442);
	op_hex		(x,	1);
	create_insn	(x=0X43E0345F);
	op_hex		(x,	1);
	create_insn	(x=0X43E034CD);
	op_hex		(x,	1);
	make_array	(0X43E034DB,	0X5);
	create_insn	(0X43E034E0);
	make_array	(0X43E03512,	0XE);
	create_insn	(0X43E03520);
	create_insn	(x=0X43E03523);
	op_hex		(x,	1);
	create_insn	(x=0X43E03526);
	op_hex		(x,	1);
	create_insn	(x=0X43E036CF);
	op_hex		(x,	1);
	create_insn	(x=0X43E036E8);
	op_hex		(x,	1);
	create_insn	(x=0X43E036FD);
	op_hex		(x,	1);
	create_insn	(x=0X43E03702);
	op_hex		(x,	1);
	create_insn	(x=0X43E0370D);
	op_hex		(x,	1);
	create_insn	(0X43E03979);
	create_insn	(0X43E039C8);
	create_insn	(0X43E03A29);
	make_array	(0X43E03A49,	0X7);
	create_insn	(0X43E03A50);
	make_array	(0X43E03A62,	0XE);
	create_insn	(0X43E03A70);
	create_insn	(x=0X43E03A75);
	op_hex		(x,	1);
	create_insn	(0X43E03A80);
	make_array	(0X43E03A89,	0X7);
	create_insn	(0X43E03A90);
	create_insn	(x=0X43E03AB7);
	op_hex		(x,	1);
	create_insn	(x=0X43E03AC4);
	op_hex		(x,	1);
	create_insn	(x=0X43E03AED);
	op_hex		(x,	1);
	create_insn	(0X43E03B01);
	make_array	(0X43E03B07,	0X9);
	create_insn	(0X43E03B10);
	create_insn	(x=0X43E03B15);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E03B1C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E03B66);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E03B72);
	op_stkvar	(x,	1);
	create_insn	(0X43E03B80);
	create_insn	(x=0X43E03B8A);
	op_stkvar	(x,	1);
	make_array	(0X43E03B96,	0XA);
	create_insn	(0X43E03BA0);
	create_insn	(x=0X43E03BAE);
	op_hex		(x,	1);
	create_insn	(x=0X43E03BC0);
	op_hex		(x,	1);
	create_insn	(x=0X43E03BEC);
	op_hex		(x,	1);
	create_insn	(0X43E03BFF);
	create_insn	(0X43E03C10);
	make_array	(0X43E03C17,	0X9);
	create_insn	(0X43E03C20);
	create_insn	(0X43E03C41);
	make_array	(0X43E03C4C,	0X4);
	create_insn	(x=0X43E03C50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43E03C5B,	0X5);
	create_insn	(0X43E03C60);
	make_array	(0X43E03C84,	0XC);
	create_insn	(0X43E03C90);
	create_insn	(x=0X43E03C93);
	op_hex		(x,	1);
	create_insn	(0X43E03D9F);
	make_array	(0X43E03E17,	0X9);
	create_insn	(0X43E03E20);
	make_array	(0X43E03E2A,	0X6);
	create_insn	(0X43E03E30);
	set_cmt	(0X43E03E59,	"this",	0);
	set_cmt	(0X43E03E5B,	"a3",	0);
	set_cmt	(0X43E03E5C,	"a2",	0);
	make_array	(0X43E03E66,	0XA);
	create_insn	(0X43E03E70);
	create_insn	(x=0X43E03E75);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E03E88);
	op_hex		(x,	1);
	create_insn	(x=0X43E03EA1);
	op_hex		(x,	1);
	create_insn	(x=0X43E03EA6);
	op_hex		(x,	1);
	create_insn	(x=0X43E03EB3);
	op_hex		(x,	1);
	create_insn	(x=0X43E03ED2);
	op_hex		(x,	1);
	create_insn	(x=0X43E03EDD);
	op_hex		(x,	1);
	create_insn	(0X43E03EF1);
	create_insn	(x=0X43E03F2C);
	op_hex		(x,	1);
	create_insn	(x=0X43E03F4D);
	op_hex		(x,	1);
	create_insn	(x=0X43E03F5E);
	op_hex		(x,	1);
	create_insn	(0X43E03F8C);
	make_array	(0X43E03FB0,	0X10);
	create_insn	(0X43E03FC0);
	create_insn	(x=0X43E03FC3);
	op_hex		(x,	1);
	create_insn	(x=0X43E03FC6);
	op_hex		(x,	1);
	create_insn	(x=0X43E03FC9);
	op_hex		(x,	1);
	create_insn	(x=0X43E03FD6);
	op_hex		(x,	1);
	create_insn	(x=0X43E0400B);
	op_hex		(x,	1);
	create_insn	(x=0X43E0401E);
	op_hex		(x,	1);
	make_array	(0X43E0402B,	0X5);
	create_insn	(0X43E04030);
	set_cmt	(0X43E04053,	"a3",	0);
	set_cmt	(0X43E04054,	"a2",	0);
	make_array	(0X43E04061,	0XF);
	create_insn	(0X43E04070);
	create_insn	(x=0X43E04075);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E04088);
	op_hex		(x,	1);
	create_insn	(x=0X43E040A1);
	op_hex		(x,	1);
	create_insn	(x=0X43E040A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E040B2);
	op_hex		(x,	1);
	create_insn	(x=0X43E040CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E040D8);
	op_hex		(x,	1);
	create_insn	(0X43E040EC);
	create_insn	(x=0X43E040FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E04107);
	op_hex		(x,	1);
	create_insn	(0X43E0410C);
	create_insn	(x=0X43E04117);
	op_hex		(x,	1);
	set_cmt	(0X43E0411F,	"Size",	0);
	create_insn	(x=0X43E04125);
	op_hex		(x,	1);
	create_insn	(x=0X43E04133);
	op_hex		(x,	1);
	create_insn	(0X43E0413B);
	set_cmt	(0X43E0413F,	"Size",	0);
	create_insn	(x=0X43E04145);
	op_hex		(x,	1);
	create_insn	(0X43E0414F);
	create_insn	(x=0X43E0418E);
	op_hex		(x,	1);
	create_insn	(0X43E04193);
	create_insn	(x=0X43E041B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E041C8);
	op_hex		(x,	1);
	create_insn	(x=0X43E041D4);
	op_hex		(x,	1);
	create_insn	(x=0X43E041FC);
	op_hex		(x,	1);
	create_insn	(0X43E04228);
	make_array	(0X43E04247,	0X9);
	create_insn	(0X43E04250);
	create_insn	(x=0X43E04255);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E04268);
	op_hex		(x,	1);
	create_insn	(x=0X43E04281);
	op_hex		(x,	1);
	create_insn	(x=0X43E04285);
	op_hex		(x,	1);
	create_insn	(x=0X43E04292);
	op_hex		(x,	1);
	create_insn	(x=0X43E042B1);
	op_hex		(x,	1);
	create_insn	(x=0X43E042BC);
	op_hex		(x,	1);
	create_insn	(0X43E042D0);
	create_insn	(x=0X43E042DE);
	op_hex		(x,	1);
	create_insn	(x=0X43E042EB);
	op_hex		(x,	1);
	create_insn	(0X43E042F0);
	create_insn	(x=0X43E042FB);
	op_hex		(x,	1);
	set_cmt	(0X43E04303,	"Size",	0);
	create_insn	(x=0X43E04309);
	op_hex		(x,	1);
	create_insn	(x=0X43E04317);
	op_hex		(x,	1);
	create_insn	(0X43E0431F);
	set_cmt	(0X43E04323,	"Size",	0);
	create_insn	(x=0X43E04329);
	op_hex		(x,	1);
	create_insn	(0X43E04333);
	create_insn	(x=0X43E0437C);
	op_hex		(x,	1);
	create_insn	(x=0X43E0438B);
	op_hex		(x,	1);
	create_insn	(x=0X43E043BB);
	op_hex		(x,	1);
	create_insn	(x=0X43E043C7);
	op_hex		(x,	1);
	create_insn	(x=0X43E043EB);
	op_hex		(x,	1);
	create_insn	(0X43E0441B);
	make_array	(0X43E04445,	0XB);
	create_insn	(0X43E04450);
	create_insn	(x=0X43E04453);
	op_stkvar	(x,	1);
	create_insn	(0X43E04480);
	create_insn	(x=0X43E04485);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E04498);
	op_hex		(x,	1);
	create_insn	(x=0X43E0449E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E044A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E044B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E044B8);
	op_hex		(x,	1);
	create_insn	(x=0X43E044BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E044C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E044CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E044E4);
	op_hex		(x,	1);
	create_insn	(x=0X43E044EF);
	op_hex		(x,	1);
	create_insn	(x=0X43E044FE);
	op_stkvar	(x,	0);
	create_insn	(0X43E04503);
	create_insn	(x=0X43E0450B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E04517);
	op_hex		(x,	1);
	create_insn	(x=0X43E04523);
	op_hex		(x,	1);
	create_insn	(0X43E04528);
	create_insn	(x=0X43E04533);
	op_hex		(x,	1);
	set_cmt	(0X43E0453B,	"Size",	0);
	create_insn	(x=0X43E04541);
	op_hex		(x,	1);
	create_insn	(x=0X43E0454F);
	op_hex		(x,	1);
	create_insn	(0X43E04557);
	set_cmt	(0X43E0455B,	"Size",	0);
	create_insn	(x=0X43E04561);
	op_hex		(x,	1);
	create_insn	(x=0X43E04566);
	op_stkvar	(x,	0);
	create_insn	(0X43E0456B);
	create_insn	(x=0X43E0456D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E04570);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E04577);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E04586);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E04589);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E04593);
	op_hex		(x,	1);
	create_insn	(x=0X43E0459B);
	op_stkvar	(x,	1);
	create_insn	(0X43E045AC);
	create_insn	(x=0X43E045B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E045BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E045C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E045D7);
	op_hex		(x,	1);
	create_insn	(x=0X43E045E9);
	op_hex		(x,	1);
	create_insn	(x=0X43E045FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E04607);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E04611);
	op_hex		(x,	1);
	create_insn	(x=0X43E04616);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0462F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E04632);
	op_stkvar	(x,	1);
	create_insn	(0X43E04645);
	create_insn	(x=0X43E0464B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0464E);
	op_stkvar	(x,	0);
	make_array	(0X43E04664,	0XC);
	create_insn	(0X43E04670);
	create_insn	(x=0X43E04675);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E04688);
	op_hex		(x,	1);
	create_insn	(x=0X43E046A1);
	op_hex		(x,	1);
	create_insn	(x=0X43E046A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E046B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E046D2);
	op_hex		(x,	1);
	create_insn	(x=0X43E046DD);
	op_hex		(x,	1);
	create_insn	(0X43E046F1);
	create_insn	(x=0X43E0474A);
	op_hex		(x,	1);
	create_insn	(x=0X43E0475B);
	op_hex		(x,	1);
	create_insn	(0X43E04789);
	make_array	(0X43E047AD,	0X3);
	create_insn	(0X43E047B0);
	create_insn	(x=0X43E047B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E047B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E047BF);
	op_stkvar	(x,	1);
	make_array	(0X43E0480E,	0X2);
	create_insn	(0X43E04810);
	create_insn	(x=0X43E04813);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E04817);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0481B);
	op_stkvar	(x,	1);
	create_insn	(0X43E04870);
	create_insn	(x=0X43E048A1);
	op_hex		(x,	1);
	create_insn	(x=0X43E048E2);
	op_hex		(x,	1);
	make_array	(0X43E048F3,	0XD);
	create_insn	(0X43E04900);
	create_insn	(x=0X43E04903);
	op_hex		(x,	1);
	create_insn	(x=0X43E04913);
	op_hex		(x,	1);
	create_insn	(x=0X43E04940);
	op_hex		(x,	1);
	create_insn	(x=0X43E04943);
	op_hex		(x,	1);
	create_insn	(x=0X43E04946);
	op_hex		(x,	1);
	create_insn	(x=0X43E04952);
	op_hex		(x,	1);
	create_insn	(x=0X43E0495F);
	op_hex		(x,	1);
	create_insn	(0X43E04979);
	create_insn	(x=0X43E0498B);
	op_hex		(x,	1);
	create_insn	(x=0X43E04990);
	op_hex		(x,	1);
	create_insn	(x=0X43E049F1);
	op_hex		(x,	1);
	create_insn	(0X43E04A03);
	create_insn	(x=0X43E04A0C);
	op_hex		(x,	1);
	create_insn	(x=0X43E04A1A);
	op_hex		(x,	1);
	create_insn	(x=0X43E04A2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E04A75);
	op_hex		(x,	1);
	create_insn	(x=0X43E04AA6);
	op_hex		(x,	1);
	create_insn	(x=0X43E04ACA);
	op_hex		(x,	1);
	create_insn	(x=0X43E04B02);
	op_hex		(x,	1);
	create_insn	(x=0X43E04B69);
	op_hex		(x,	1);
	create_insn	(x=0X43E04B78);
	op_hex		(x,	1);
	create_insn	(x=0X43E04B85);
	op_hex		(x,	1);
	create_insn	(0X43E04B9C);
	make_array	(0X43E04BEC,	0X4);
	create_insn	(0X43E04BF0);
	create_insn	(x=0X43E04C1B);
	op_hex		(x,	1);
	make_array	(0X43E04C2B,	0X5);
	create_insn	(0X43E04C30);
	create_insn	(0X43E04C67);
	make_array	(0X43E04C81,	0XF);
	create_insn	(0X43E04C90);
	create_insn	(0X43E04D00);
	create_insn	(x=0X43E04D03);
	op_hex		(x,	1);
	create_insn	(x=0X43E04D17);
	op_hex		(x,	1);
	create_insn	(x=0X43E04D27);
	op_hex		(x,	1);
	create_insn	(x=0X43E04D36);
	op_hex		(x,	1);
	create_insn	(x=0X43E04D4B);
	op_hex		(x,	1);
	create_insn	(x=0X43E04D55);
	op_hex		(x,	1);
	create_insn	(x=0X43E04D5B);
	op_hex		(x,	1);
	create_insn	(x=0X43E04D9C);
	op_hex		(x,	1);
	create_insn	(0X43E04DA1);
	create_insn	(x=0X43E04DAC);
	op_hex		(x,	1);
	create_insn	(0X43E04F1D);
	create_insn	(0X43E04F7A);
	create_insn	(0X43E04FA7);
	make_array	(0X43E04FB6,	0XA);
	create_insn	(0X43E04FC0);
	create_insn	(x=0X43E04FC6);
	op_hex		(x,	1);
	create_insn	(0X43E05012);
	create_insn	(0X43E05045);
	create_insn	(0X43E05079);
	create_insn	(0X43E050B8);
	create_insn	(0X43E050CC);
	create_insn	(0X43E050D1);
	create_insn	(0X43E05102);
	create_insn	(0X43E05162);
	create_insn	(0X43E0517D);
	create_insn	(0X43E0519E);
	create_insn	(0X43E051B2);
	make_array	(0X43E051CB,	0X5);
	create_insn	(0X43E051D0);
	create_insn	(x=0X43E051D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E051E8);
	op_hex		(x,	1);
	create_insn	(x=0X43E05206);
	op_hex		(x,	1);
	create_insn	(x=0X43E05231);
	op_hex		(x,	1);
	create_insn	(x=0X43E05263);
	op_hex		(x,	1);
	make_array	(0X43E052AA,	0X6);
	create_insn	(0X43E052B0);
	create_insn	(0X43E05330);
	make_array	(0X43E05347,	0X9);
	create_insn	(0X43E05350);
	create_insn	(x=0X43E05353);
	op_hex		(x,	1);
	create_insn	(x=0X43E0539C);
	op_hex		(x,	1);
	create_insn	(x=0X43E053A2);
	op_hex		(x,	1);
	create_insn	(0X43E053B6);
	create_insn	(x=0X43E053CB);
	op_hex		(x,	1);
	create_insn	(0X43E053D6);
	create_insn	(x=0X43E053D8);
	op_hex		(x,	1);
	create_insn	(0X43E053E7);
	create_insn	(x=0X43E0543E);
	op_hex		(x,	1);
	create_insn	(x=0X43E0545A);
	op_hex		(x,	1);
	create_insn	(x=0X43E05481);
	op_hex		(x,	1);
	create_insn	(0X43E05491);
	create_insn	(x=0X43E054A7);
	op_hex		(x,	1);
	create_insn	(x=0X43E054C2);
	op_hex		(x,	1);
	create_insn	(0X43E054D2);
	create_insn	(0X43E054D7);
	make_array	(0X43E054DC,	0X4);
	create_insn	(0X43E054E0);
	make_array	(0X43E054F6,	0XA);
	create_insn	(0X43E05500);
	create_insn	(0X43E05546);
	create_insn	(x=0X43E0554D);
	op_hex		(x,	1);
	create_insn	(x=0X43E05575);
	op_hex		(x,	1);
	make_array	(0X43E05587,	0X9);
	create_insn	(0X43E05590);
	create_insn	(x=0X43E05593);
	op_hex		(x,	1);
	create_insn	(x=0X43E055BF);
	op_hex		(x,	1);
	make_array	(0X43E055D7,	0X9);
	create_insn	(0X43E055E0);
	create_insn	(x=0X43E055E5);
	op_hex		(x,	1);
	create_insn	(0X43E055F0);
	create_insn	(x=0X43E05620);
	op_hex		(x,	1);
	create_insn	(x=0X43E05661);
	op_hex		(x,	1);
	create_insn	(0X43E05677);
	make_array	(0X43E0567D,	0X3);
	create_insn	(0X43E05680);
	create_insn	(x=0X43E056B1);
	op_hex		(x,	1);
	create_insn	(x=0X43E056C4);
	op_hex		(x,	1);
	create_insn	(x=0X43E056E8);
	op_hex		(x,	1);
	create_insn	(0X43E0570B);
	create_insn	(0X43E05720);
	make_array	(0X43E05744,	0XC);
	create_insn	(0X43E05750);
	create_insn	(x=0X43E05762);
	op_hex		(x,	1);
	create_insn	(x=0X43E05786);
	op_hex		(x,	1);
	create_insn	(0X43E0578D);
	make_array	(0X43E05793,	0XD);
	create_insn	(0X43E057A0);
	make_array	(0X43E05815,	0XB);
	create_insn	(0X43E05820);
	create_insn	(x=0X43E05825);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E05838);
	op_hex		(x,	1);
	create_insn	(x=0X43E05857);
	op_hex		(x,	1);
	create_insn	(x=0X43E0585C);
	op_hex		(x,	1);
	create_insn	(x=0X43E05868);
	op_hex		(x,	1);
	create_insn	(x=0X43E05887);
	op_hex		(x,	1);
	create_insn	(x=0X43E05892);
	op_hex		(x,	1);
	create_insn	(0X43E058A4);
	create_insn	(x=0X43E058BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E058C4);
	op_hex		(x,	1);
	create_insn	(0X43E058C9);
	create_insn	(x=0X43E058D4);
	op_hex		(x,	1);
	set_cmt	(0X43E058DC,	"Size",	0);
	create_insn	(x=0X43E058E2);
	op_hex		(x,	1);
	create_insn	(x=0X43E058F0);
	op_hex		(x,	1);
	create_insn	(0X43E058F8);
	set_cmt	(0X43E058FC,	"Size",	0);
	create_insn	(x=0X43E05902);
	op_hex		(x,	1);
	create_insn	(0X43E05909);
	create_insn	(x=0X43E05938);
	op_hex		(x,	1);
	create_insn	(x=0X43E0595D);
	op_hex		(x,	1);
	create_insn	(0X43E05968);
	create_insn	(0X43E05981);
	create_insn	(x=0X43E05999);
	op_hex		(x,	1);
	create_insn	(0X43E059A4);
	create_insn	(0X43E059B9);
	create_insn	(x=0X43E059DA);
	op_hex		(x,	1);
	create_insn	(0X43E059E5);
	create_insn	(0X43E059FA);
	create_insn	(x=0X43E05A30);
	op_hex		(x,	1);
	create_insn	(x=0X43E05A42);
	op_hex		(x,	1);
	create_insn	(x=0X43E05A66);
	op_hex		(x,	1);
	create_insn	(0X43E05AB1);
	make_array	(0X43E05ADB,	0X5);
	create_insn	(0X43E05AE0);
	create_insn	(x=0X43E05B10);
	op_hex		(x,	1);
	create_insn	(x=0X43E05B53);
	op_hex		(x,	1);
	make_array	(0X43E05B63,	0XD);
	create_insn	(0X43E05B70);
	create_insn	(0X43E05B91);
	create_insn	(0X43E05BA0);
	create_insn	(x=0X43E05BA3);
	op_hex		(x,	1);
	create_insn	(x=0X43E05BBB);
	op_hex		(x,	1);
	set_cmt	(0X43E05C09,	"Size",	0);
	create_insn	(0X43E05C09);
	create_insn	(x=0X43E05C1C);
	op_hex		(x,	1);
	create_insn	(x=0X43E05C43);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E05C89,	0X7);
	create_insn	(0X43E05C90);
	create_insn	(x=0X43E05C99);
	op_hex		(x,	1);
	create_insn	(x=0X43E05CA9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E05CCD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E05CDC);
	create_insn	(0X43E05CE0);
	make_array	(0X43E05CE6,	0XA);
	create_insn	(0X43E05CF0);
	create_insn	(x=0X43E05D0D);
	op_hex		(x,	1);
	create_insn	(x=0X43E05D16);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E05D55,	"_DWORD",	0);
	set_cmt	(0X43E05D56,	"_DWORD",	0);
	create_insn	(x=0X43E05D59);
	op_hex		(x,	1);
	create_insn	(0X43E05D9A);
	create_insn	(x=0X43E05DA1);
	op_hex		(x,	1);
	make_array	(0X43E05DAD,	0X3);
	create_insn	(0X43E05DB0);
	set_name	(0X43E05DB0,	"OneTap::HooksManager::DynamicSetup::FrameStageNotify");
	create_insn	(x=0X43E05DB3);
	op_hex		(x,	1);
	create_insn	(x=0X43E05DB6);
	op_stkvar	(x,	1);
	set_cmt	(0X43E05DB9,	"hookData",	0);
	create_insn	(x=0X43E05DB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05DBF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05DC5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05DCA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05DD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05DD4);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E05DDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05DE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05DF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05DFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05E02);
	op_stkvar	(x,	0);
	create_insn	(0X43E05E07);
	create_insn	(x=0X43E05E09);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05E0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05E1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05E26);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05E37);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05E4A);
	op_stkvar	(x,	1);
	create_insn	(0X43E05E53);
	make_array	(0X43E05E5B,	0X5);
	create_insn	(0X43E05E60);
	set_name	(0X43E05E60,	"OneTap::HooksManager::DynamicSetup::Custom");
	create_insn	(x=0X43E05E63);
	op_hex		(x,	1);
	create_insn	(x=0X43E05E66);
	op_stkvar	(x,	1);
	set_cmt	(0X43E05E69,	"hookData",	0);
	create_insn	(x=0X43E05E69);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05E6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05E72);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05E75);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05E7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05E80);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05E87);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05E8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05E97);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05E9B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05EA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05EAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05EB1);
	op_stkvar	(x,	0);
	create_insn	(0X43E05EB6);
	create_insn	(x=0X43E05EB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05EBE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05ECE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05ED5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05EE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05EEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05EF9);
	op_stkvar	(x,	1);
	create_insn	(0X43E05F02);
	make_array	(0X43E05F0A,	0X6);
	create_insn	(0X43E05F10);
	set_name	(0X43E05F10,	"OneTap::HooksManager::DynamicSetup::OnScreenSizeChanged");
	create_insn	(x=0X43E05F13);
	op_hex		(x,	1);
	create_insn	(x=0X43E05F16);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05F1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05F22);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05F25);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05F2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05F30);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05F37);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05F3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05F43);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05F49);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05F59);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05F79);
	op_stkvar	(x,	1);
	set_cmt	(0X43E05F8B,	"hookData",	0);
	create_insn	(x=0X43E05F8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05F97);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05F9B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05FA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05FAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05FB1);
	op_stkvar	(x,	0);
	create_insn	(0X43E05FB6);
	create_insn	(x=0X43E05FB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05FBE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E05FCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05FD5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05FE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05FEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E05FF9);
	op_stkvar	(x,	1);
	make_array	(0X43E06002,	0XE);
	create_insn	(0X43E06010);
	create_insn	(x=0X43E06013);
	op_hex		(x,	1);
	set_cmt	(0X43E06019,	"hookData",	0);
	create_insn	(x=0X43E06034);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E06067);
	create_insn	(0X43E060A0);
	create_insn	(0X43E060B3);
	make_array	(0X43E060BB,	0X5);
	create_insn	(0X43E060C0);
	create_insn	(x=0X43E060C3);
	op_hex		(x,	1);
	set_cmt	(0X43E060C9,	"hookData",	0);
	create_insn	(x=0X43E060E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E06117);
	create_insn	(0X43E06150);
	create_insn	(0X43E06163);
	make_array	(0X43E0616B,	0X5);
	create_insn	(0X43E06170);
	set_name	(0X43E06170,	"OneTap::HooksManager::DynamicSetup::OverrideView");
	create_insn	(x=0X43E06173);
	op_hex		(x,	1);
	create_insn	(x=0X43E06176);
	op_stkvar	(x,	1);
	set_cmt	(0X43E06179,	"hookData",	0);
	create_insn	(x=0X43E06179);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0617F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06185);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0618A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06191);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06194);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E0619B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E061A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E061AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E061B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E061BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E061C2);
	op_stkvar	(x,	0);
	create_insn	(0X43E061C7);
	create_insn	(x=0X43E061C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E061CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E061DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E061E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E061F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06200);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0620A);
	op_stkvar	(x,	1);
	create_insn	(0X43E06213);
	make_array	(0X43E0621B,	0X5);
	create_insn	(0X43E06220);
	create_insn	(x=0X43E06223);
	op_hex		(x,	1);
	set_cmt	(0X43E06229,	"hookData",	0);
	create_insn	(x=0X43E06244);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E06277);
	create_insn	(0X43E062B0);
	create_insn	(0X43E062C3);
	make_array	(0X43E062CB,	0X5);
	create_insn	(0X43E062D0);
	create_insn	(x=0X43E062D3);
	op_hex		(x,	1);
	set_cmt	(0X43E062D9,	"hookData",	0);
	create_insn	(x=0X43E062F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E06327);
	create_insn	(0X43E06360);
	create_insn	(0X43E06373);
	make_array	(0X43E0637B,	0X5);
	create_insn	(0X43E06380);
	set_name	(0X43E06380,	"OneTap::HooksManager::DynamicSetup::GetViewmodelFov");
	create_insn	(x=0X43E06383);
	op_hex		(x,	1);
	create_insn	(x=0X43E06386);
	op_stkvar	(x,	1);
	set_cmt	(0X43E06389,	"hookData",	0);
	create_insn	(x=0X43E06389);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0638F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06395);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0639A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E063A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E063A4);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E063AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E063B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E063BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E063C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E063CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E063D2);
	op_stkvar	(x,	0);
	create_insn	(0X43E063D7);
	create_insn	(x=0X43E063D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E063DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E063EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E063F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06407);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06410);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0641A);
	op_stkvar	(x,	1);
	create_insn	(0X43E06423);
	make_array	(0X43E0642B,	0X5);
	create_insn	(0X43E06430);
	create_insn	(x=0X43E06433);
	op_hex		(x,	1);
	set_cmt	(0X43E06439,	"hookData",	0);
	create_insn	(x=0X43E06454);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E06487);
	create_insn	(0X43E064C0);
	create_insn	(0X43E064D3);
	make_array	(0X43E064DB,	0X5);
	create_insn	(0X43E064E0);
	set_name	(0X43E064E0,	"OneTap::HooksManager::DynamicSetup::GetLocalViewAngles");
	create_insn	(x=0X43E064E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E064E6);
	op_stkvar	(x,	1);
	set_cmt	(0X43E064E9,	"hookData",	0);
	create_insn	(x=0X43E064E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E064EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E064F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E064FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06501);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06504);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E0650B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06518);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0651C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06524);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0652B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06532);
	op_stkvar	(x,	0);
	create_insn	(0X43E06537);
	create_insn	(x=0X43E06539);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0653F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0654F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06556);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06567);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06570);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0657A);
	op_stkvar	(x,	1);
	create_insn	(0X43E06583);
	make_array	(0X43E0658B,	0X5);
	create_insn	(0X43E06590);
	set_name	(0X43E06590,	"OneTap::HooksManager::DynamicSetup::RunCommand");
	create_insn	(x=0X43E06593);
	op_hex		(x,	1);
	create_insn	(x=0X43E06596);
	op_stkvar	(x,	1);
	set_cmt	(0X43E06599,	"hookData",	0);
	create_insn	(x=0X43E06599);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0659F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E065A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E065AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E065B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E065B4);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E065BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E065C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E065CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E065D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E065DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E065E2);
	op_stkvar	(x,	0);
	create_insn	(0X43E065E7);
	create_insn	(x=0X43E065E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E065EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E065FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06606);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06617);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06620);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0662A);
	op_stkvar	(x,	1);
	create_insn	(0X43E06633);
	make_array	(0X43E0663B,	0X5);
	create_insn	(0X43E06640);
	create_insn	(x=0X43E06643);
	op_hex		(x,	1);
	set_cmt	(0X43E06649,	"hookData",	0);
	create_insn	(x=0X43E06664);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E06697);
	create_insn	(0X43E066D0);
	create_insn	(0X43E066E3);
	make_array	(0X43E066EB,	0X5);
	create_insn	(0X43E066F0);
	set_name	(0X43E066F0,	"OneTap::HooksManager::DynamicSetup::CreateMove");
	create_insn	(x=0X43E066F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E066F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E066FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06701);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06708);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0670E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06711);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E06718);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0671E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06724);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06734);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0673B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06754);
	op_stkvar	(x,	1);
	make_array	(0X43E06766,	0XA);
	create_insn	(0X43E06770);
	set_name	(0X43E06770,	"OneTap::HooksManager::DynamicSetup::WriteUserCmdDeltaToBuffer");
	create_insn	(x=0X43E06773);
	op_hex		(x,	1);
	create_insn	(x=0X43E06776);
	op_stkvar	(x,	1);
	set_cmt	(0X43E06779,	"hookData",	0);
	create_insn	(x=0X43E06779);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0677F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06785);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0678A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06791);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06794);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E0679B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E067A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E067AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E067B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E067BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E067C2);
	op_stkvar	(x,	0);
	create_insn	(0X43E067C7);
	create_insn	(x=0X43E067C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E067CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E067DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E067E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E067F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06800);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0680A);
	op_stkvar	(x,	1);
	create_insn	(0X43E06813);
	make_array	(0X43E0681B,	0X5);
	create_insn	(0X43E06820);
	create_insn	(x=0X43E06823);
	op_hex		(x,	1);
	set_cmt	(0X43E06829,	"hookData",	0);
	create_insn	(x=0X43E06844);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E06877);
	create_insn	(0X43E068B0);
	create_insn	(0X43E068C3);
	make_array	(0X43E068CB,	0X5);
	create_insn	(0X43E068D0);
	create_insn	(x=0X43E068D3);
	op_hex		(x,	1);
	set_cmt	(0X43E068D9,	"hookData",	0);
	create_insn	(x=0X43E068F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E06927);
	create_insn	(0X43E06960);
	create_insn	(0X43E06973);
	make_array	(0X43E0697B,	0X5);
	create_insn	(0X43E06980);
	create_insn	(x=0X43E06983);
	op_hex		(x,	1);
	set_cmt	(0X43E06989,	"hookData",	0);
	create_insn	(x=0X43E069A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E069D7);
	create_insn	(0X43E06A10);
	create_insn	(0X43E06A23);
	make_array	(0X43E06A2B,	0X5);
	create_insn	(0X43E06A30);
	set_name	(0X43E06A30,	"OneTap::HooksManager::DynamicSetup::DrawModelExecute");
	create_insn	(x=0X43E06A33);
	op_hex		(x,	1);
	create_insn	(x=0X43E06A36);
	op_stkvar	(x,	1);
	set_cmt	(0X43E06A39,	"hookData",	0);
	create_insn	(x=0X43E06A39);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06A3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06A45);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06A4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06A51);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06A54);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E06A5B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06A68);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06A74);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06A7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06A82);
	op_stkvar	(x,	0);
	create_insn	(0X43E06A87);
	create_insn	(x=0X43E06A89);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06A8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06A9F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06AA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06AB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06ACA);
	op_stkvar	(x,	1);
	create_insn	(0X43E06AD3);
	make_array	(0X43E06ADB,	0X5);
	create_insn	(0X43E06AE0);
	create_insn	(x=0X43E06AE3);
	op_hex		(x,	1);
	set_cmt	(0X43E06AE9,	"hookData",	0);
	create_insn	(x=0X43E06B04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E06B37);
	create_insn	(0X43E06B70);
	create_insn	(0X43E06B83);
	make_array	(0X43E06B8B,	0X5);
	create_insn	(0X43E06B90);
	create_insn	(x=0X43E06B93);
	op_hex		(x,	1);
	set_cmt	(0X43E06B99,	"hookData",	0);
	create_insn	(x=0X43E06BB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E06BE7);
	create_insn	(0X43E06C20);
	create_insn	(0X43E06C33);
	make_array	(0X43E06C3B,	0X5);
	create_insn	(0X43E06C40);
	set_name	(0X43E06C40,	"OneTap::HooksManager::DynamicSetup::BoneSetup");
	create_insn	(x=0X43E06C43);
	op_hex		(x,	1);
	create_insn	(x=0X43E06C49);
	op_stkvar	(x,	0);
	set_cmt	(0X43E06C4F,	"hookData",	0);
	create_insn	(x=0X43E06C4F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06C52);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06C57);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06C5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06C65);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E06C6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06C79);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06C7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06C85);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06C8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06C93);
	op_stkvar	(x,	0);
	create_insn	(0X43E06C98);
	create_insn	(x=0X43E06C9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06CA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E06CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06CB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06CD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E06CDB);
	op_stkvar	(x,	1);
	create_insn	(0X43E06CE4);
	make_array	(0X43E06CEC,	0X4);
	create_insn	(0X43E06CF0);
	create_insn	(x=0X43E06CF3);
	op_hex		(x,	1);
	set_cmt	(0X43E06CFF,	"hookData",	0);
	create_insn	(x=0X43E06D15);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E06D48);
	create_insn	(0X43E06D81);
	create_insn	(0X43E06D94);
	make_array	(0X43E06D9C,	0X4);
	create_insn	(0X43E06DA0);
	create_insn	(x=0X43E06DA3);
	op_hex		(x,	1);
	set_cmt	(0X43E06DAF,	"hookData",	0);
	create_insn	(x=0X43E06DC5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E06DF8);
	create_insn	(0X43E06E31);
	create_insn	(0X43E06E44);
	make_array	(0X43E06E4C,	0X4);
	create_insn	(0X43E06E50);
	create_insn	(x=0X43E06E53);
	op_hex		(x,	1);
	set_cmt	(0X43E06E5F,	"hookData",	0);
	create_insn	(x=0X43E06E75);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E06EA8);
	create_insn	(0X43E06EE1);
	create_insn	(0X43E06EF4);
	make_array	(0X43E06EFC,	0X4);
	create_insn	(0X43E06F00);
	create_insn	(x=0X43E06F03);
	op_hex		(x,	1);
	set_cmt	(0X43E06F09,	"hookData",	0);
	create_insn	(x=0X43E06F24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E06F57);
	create_insn	(0X43E06F90);
	create_insn	(0X43E06FA3);
	make_array	(0X43E06FAB,	0X5);
	create_insn	(0X43E06FB0);
	create_insn	(x=0X43E06FB3);
	op_hex		(x,	1);
	set_cmt	(0X43E06FB9,	"hookData",	0);
	create_insn	(x=0X43E06FD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E07007);
	create_insn	(0X43E07040);
	create_insn	(0X43E07053);
	make_array	(0X43E0705B,	0X5);
	create_insn	(0X43E07060);
	create_insn	(x=0X43E07063);
	op_hex		(x,	1);
	set_cmt	(0X43E07069,	"hookData",	0);
	create_insn	(x=0X43E07084);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E070B7);
	create_insn	(0X43E070F0);
	create_insn	(0X43E07103);
	make_array	(0X43E0710B,	0X5);
	create_insn	(0X43E07110);
	create_insn	(x=0X43E07113);
	op_hex		(x,	1);
	set_cmt	(0X43E07119,	"hookData",	0);
	create_insn	(x=0X43E07134);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E07167);
	create_insn	(0X43E071A0);
	create_insn	(0X43E071B3);
	make_array	(0X43E071BB,	0X5);
	create_insn	(0X43E071C0);
	create_insn	(x=0X43E071C3);
	op_hex		(x,	1);
	set_cmt	(0X43E071C9,	"hookData",	0);
	create_insn	(x=0X43E071E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E07217);
	create_insn	(0X43E07250);
	create_insn	(0X43E07263);
	make_array	(0X43E0726B,	0X5);
	create_insn	(0X43E07270);
	create_insn	(x=0X43E07273);
	op_hex		(x,	1);
	set_cmt	(0X43E0727F,	"hookData",	0);
	create_insn	(x=0X43E07295);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E072C8);
	create_insn	(0X43E07301);
	create_insn	(0X43E07314);
	make_array	(0X43E0731C,	0X4);
	create_insn	(0X43E07320);
	create_insn	(x=0X43E07323);
	op_hex		(x,	1);
	set_cmt	(0X43E0732F,	"hookData",	0);
	create_insn	(x=0X43E07345);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E07378);
	create_insn	(0X43E073B1);
	create_insn	(0X43E073C4);
	make_array	(0X43E073CC,	0X4);
	create_insn	(0X43E073D0);
	create_insn	(x=0X43E073D3);
	op_hex		(x,	1);
	set_cmt	(0X43E073DF,	"hookData",	0);
	create_insn	(x=0X43E073F5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E07428);
	create_insn	(0X43E07461);
	create_insn	(0X43E07474);
	make_array	(0X43E0747C,	0X4);
	create_insn	(0X43E07480);
	set_name	(0X43E07480,	"OneTap::HooksManager::DynamicSetup::ListLeavesInBox");
	create_insn	(x=0X43E07483);
	op_hex		(x,	1);
	create_insn	(x=0X43E07486);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07489,	"hookData",	0);
	create_insn	(x=0X43E07489);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0748F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07495);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0749A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E074A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E074A4);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E074AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E074B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E074BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E074C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E074CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E074D2);
	op_stkvar	(x,	0);
	create_insn	(0X43E074D7);
	create_insn	(x=0X43E074D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E074DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E074EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E074F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07507);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07510);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0751A);
	op_stkvar	(x,	1);
	create_insn	(0X43E07523);
	make_array	(0X43E0752B,	0X5);
	create_insn	(0X43E07530);
	create_insn	(x=0X43E07533);
	op_hex		(x,	1);
	set_cmt	(0X43E0753F,	"hookData",	0);
	create_insn	(x=0X43E07555);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E07588);
	create_insn	(0X43E075C1);
	create_insn	(0X43E075D4);
	make_array	(0X43E075DC,	0X4);
	create_insn	(0X43E075E0);
	create_insn	(x=0X43E075E3);
	op_hex		(x,	1);
	set_cmt	(0X43E075E9,	"hookData",	0);
	create_insn	(x=0X43E07604);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E07637);
	create_insn	(0X43E07670);
	create_insn	(0X43E07683);
	make_array	(0X43E0768B,	0X5);
	create_insn	(0X43E07690);
	create_insn	(x=0X43E07693);
	op_hex		(x,	1);
	set_cmt	(0X43E07699,	"hookData",	0);
	create_insn	(x=0X43E076B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E076E7);
	create_insn	(0X43E07720);
	create_insn	(0X43E07733);
	make_array	(0X43E0773B,	0X5);
	create_insn	(0X43E07740);
	create_insn	(0X43E07760);
	make_array	(0X43E0776C,	0X4);
	create_insn	(0X43E07770);
	create_insn	(0X43E07780);
	create_insn	(x=0X43E07785);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E07798);
	op_hex		(x,	1);
	create_insn	(x=0X43E077B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E077B8);
	op_hex		(x,	1);
	create_insn	(x=0X43E077C7);
	op_hex		(x,	1);
	create_insn	(x=0X43E077E8);
	op_hex		(x,	1);
	create_insn	(x=0X43E077F3);
	op_hex		(x,	1);
	create_insn	(0X43E07807);
	create_insn	(x=0X43E07815);
	op_hex		(x,	1);
	create_insn	(x=0X43E07820);
	op_hex		(x,	1);
	create_insn	(0X43E07825);
	create_insn	(x=0X43E07830);
	op_hex		(x,	1);
	set_cmt	(0X43E07838,	"Size",	0);
	create_insn	(x=0X43E0783E);
	op_hex		(x,	1);
	create_insn	(x=0X43E0784C);
	op_hex		(x,	1);
	create_insn	(0X43E07854);
	set_cmt	(0X43E07858,	"Size",	0);
	create_insn	(x=0X43E0785E);
	op_hex		(x,	1);
	create_insn	(0X43E07865);
	create_insn	(0X43E078C3);
	create_insn	(x=0X43E078FD);
	op_hex		(x,	1);
	create_insn	(x=0X43E07909);
	op_hex		(x,	1);
	create_insn	(x=0X43E07931);
	op_hex		(x,	1);
	create_insn	(0X43E0796E);
	make_array	(0X43E0798D,	0X3);
	create_insn	(0X43E07990);
	make_array	(0X43E079BE,	0X2);
	create_insn	(0X43E079C0);
	make_array	(0X43E079C5,	0XB);
	create_insn	(0X43E079D0);
	create_insn	(x=0X43E079D2);
	op_hex		(x,	1);
	create_insn	(x=0X43E079E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E07A08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E07A17);
	create_insn	(0X43E07A1B);
	create_insn	(0X43E07A20);
	make_array	(0X43E07A34,	0XC);
	create_insn	(0X43E07A40);
	create_insn	(x=0X43E07A43);
	op_hex		(x,	1);
	create_insn	(x=0X43E07A93);
	op_hex		(x,	1);
	create_insn	(x=0X43E07A97);
	op_hex		(x,	1);
	set_cmt	(0X43E07A9E,	"hash",	0);
	set_cmt	(0X43E07AC5,	"_DWORD",	0);
	set_cmt	(0X43E07AC6,	"_DWORD",	0);
	set_cmt	(0X43E07ACB,	"_DWORD",	0);
	set_cmt	(0X43E07ACF,	"_DWORD",	0);
	set_cmt	(0X43E07AD0,	"_DWORD",	0);
	create_insn	(x=0X43E07AF6);
	op_hex		(x,	1);
	create_insn	(x=0X43E07AFA);
	op_hex		(x,	1);
	set_cmt	(0X43E07B01,	"hash",	0);
	set_cmt	(0X43E07B28,	"_DWORD",	0);
	set_cmt	(0X43E07B29,	"_DWORD",	0);
	set_cmt	(0X43E07B2D,	"_DWORD",	0);
	set_cmt	(0X43E07B31,	"_DWORD",	0);
	set_cmt	(0X43E07B32,	"_DWORD",	0);
	create_insn	(x=0X43E07B3B);
	op_hex		(x,	1);
	create_insn	(x=0X43E07B3F);
	op_hex		(x,	1);
	set_cmt	(0X43E07B46,	"hash",	0);
	set_cmt	(0X43E07B6A,	"_DWORD",	0);
	set_cmt	(0X43E07B6C,	"_DWORD",	0);
	set_cmt	(0X43E07B6D,	"_DWORD",	0);
	create_insn	(0X43E07B89);
	create_insn	(x=0X43E07B98);
	op_hex		(x,	1);
	create_insn	(x=0X43E07B9C);
	op_hex		(x,	1);
	set_cmt	(0X43E07BA3,	"hash",	0);
	set_cmt	(0X43E07BCA,	"_DWORD",	0);
	set_cmt	(0X43E07BCB,	"_DWORD",	0);
	set_cmt	(0X43E07BD0,	"_DWORD",	0);
	set_cmt	(0X43E07BD4,	"_DWORD",	0);
	set_cmt	(0X43E07BD5,	"_DWORD",	0);
	create_insn	(x=0X43E07BF7);
	op_hex		(x,	1);
	create_insn	(x=0X43E07BFB);
	op_hex		(x,	1);
	set_cmt	(0X43E07C02,	"hash",	0);
	set_cmt	(0X43E07C29,	"_DWORD",	0);
	set_cmt	(0X43E07C2A,	"_DWORD",	0);
	set_cmt	(0X43E07C2E,	"_DWORD",	0);
	set_cmt	(0X43E07C32,	"_DWORD",	0);
	set_cmt	(0X43E07C33,	"_DWORD",	0);
	create_insn	(x=0X43E07C3F);
	op_hex		(x,	1);
	create_insn	(x=0X43E07C43);
	op_hex		(x,	1);
	set_cmt	(0X43E07C4A,	"hash",	0);
	set_cmt	(0X43E07C72,	"_DWORD",	0);
	set_cmt	(0X43E07C74,	"_DWORD",	0);
	set_cmt	(0X43E07C75,	"_DWORD",	0);
	make_array	(0X43E07C7E,	0X2);
	create_insn	(0X43E07C80);
	set_name	(0X43E07C80,	"OneTap::Startup::SetupOffsets");
	create_insn	(x=0X43E07C83);
	op_hex		(x,	1);
	create_insn	(x=0X43E07C8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07C9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07CA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07CBA);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07CC4,	"hash",	0);
	create_insn	(x=0X43E07CD6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07CDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07CDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07CE9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07CF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07CF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07CFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07D02);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07D08);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07D0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07D16);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07D21);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07D25);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07D28);
	op_hex		(x,	1);
	create_insn	(x=0X43E07D2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07D30);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07D41);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07D45);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07D48,	"a5",	0);
	create_insn	(x=0X43E07D49);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07D4C,	"a4",	0);
	create_insn	(x=0X43E07D4D);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07D50,	"signature",	0);
	create_insn	(x=0X43E07D50);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07D54,	"module",	0);
	create_insn	(x=0X43E07D54);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07D57,	"a3",	0);
	create_insn	(x=0X43E07D5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07D61);
	op_hex		(x,	1);
	create_insn	(x=0X43E07D6B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07D96);
	op_hex		(x,	1);
	create_insn	(x=0X43E07DA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07DAF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07DBC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07DC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07DCA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07DCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07DD5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07DDC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07DE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07DEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07DF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07DF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07DFC);
	op_hex		(x,	1);
	create_insn	(x=0X43E07DFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07E04);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07E15);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07E19);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07E1C,	"a5",	0);
	create_insn	(x=0X43E07E1D);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07E20,	"a4",	0);
	create_insn	(x=0X43E07E21);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07E24,	"signature",	0);
	create_insn	(x=0X43E07E24);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07E28,	"module",	0);
	create_insn	(x=0X43E07E28);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07E2B,	"a3",	0);
	create_insn	(x=0X43E07E32);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07E35);
	op_hex		(x,	1);
	create_insn	(x=0X43E07E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07E6B);
	op_hex		(x,	1);
	create_insn	(x=0X43E07E75);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07E81);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07E84);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07E91);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07E95);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07EA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07EAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07EAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07EB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07EBC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07ED7);
	op_hex		(x,	1);
	create_insn	(x=0X43E07EDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07EDF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07EE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07EF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07EF4);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07EF7,	"a5",	0);
	create_insn	(x=0X43E07EF8);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07EFB,	"a4",	0);
	create_insn	(x=0X43E07EFC);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07EFF,	"signature",	0);
	create_insn	(x=0X43E07EFF);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07F03,	"module",	0);
	create_insn	(x=0X43E07F03);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07F06,	"a3",	0);
	create_insn	(x=0X43E07F0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07F10);
	op_hex		(x,	1);
	create_insn	(x=0X43E07F1B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07F46);
	op_hex		(x,	1);
	create_insn	(x=0X43E07F51);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07F55);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07F58);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07F68);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07F6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07F73);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07F7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07F81);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07F88);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07F8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07F96);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07FA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07FA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07FA8);
	op_hex		(x,	1);
	create_insn	(x=0X43E07FAB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07FB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07FC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E07FC5);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07FC8,	"a5",	0);
	create_insn	(x=0X43E07FC9);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07FCC,	"a4",	0);
	create_insn	(x=0X43E07FCD);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07FD0,	"signature",	0);
	create_insn	(x=0X43E07FD0);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07FD4,	"module",	0);
	create_insn	(x=0X43E07FD4);
	op_stkvar	(x,	1);
	set_cmt	(0X43E07FD7,	"a3",	0);
	create_insn	(x=0X43E07FDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E07FE1);
	op_hex		(x,	1);
	create_insn	(x=0X43E07FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08017);
	op_hex		(x,	1);
	create_insn	(x=0X43E08024);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08027);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0802E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08035);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08039);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08040);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08047);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0804E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08060);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08064);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08067);
	op_hex		(x,	1);
	create_insn	(x=0X43E0806A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0806F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08073);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08080);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08084);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08087,	"a5",	0);
	create_insn	(x=0X43E08088);
	op_stkvar	(x,	1);
	set_cmt	(0X43E0808B,	"a4",	0);
	create_insn	(x=0X43E0808C);
	op_stkvar	(x,	1);
	set_cmt	(0X43E0808F,	"signature",	0);
	create_insn	(x=0X43E0808F);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08093,	"module",	0);
	create_insn	(x=0X43E08093);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08096,	"a3",	0);
	create_insn	(x=0X43E0809D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E080A0);
	op_hex		(x,	1);
	create_insn	(x=0X43E080AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E080D8);
	op_hex		(x,	1);
	create_insn	(x=0X43E080E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E080E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E080EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E080F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E080FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08101);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08108);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0810E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08112);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08119);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08120);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08130);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08134);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08137);
	op_hex		(x,	1);
	create_insn	(x=0X43E0813A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0813F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08143);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08150);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08154);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08157,	"a5",	0);
	create_insn	(x=0X43E08158);
	op_stkvar	(x,	1);
	set_cmt	(0X43E0815B,	"a4",	0);
	create_insn	(x=0X43E0815C);
	op_stkvar	(x,	1);
	set_cmt	(0X43E0815F,	"signature",	0);
	create_insn	(x=0X43E0815F);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08163,	"module",	0);
	create_insn	(x=0X43E08163);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08166,	"a3",	0);
	create_insn	(x=0X43E0816D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08170);
	op_hex		(x,	1);
	create_insn	(x=0X43E0817B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E081A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E081B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E081B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E081BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E081C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E081C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E081CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E081D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E081DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E081E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E081EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E081F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E081F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E081FC);
	op_hex		(x,	1);
	create_insn	(x=0X43E081FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08204);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08208);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08215);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08219);
	op_stkvar	(x,	1);
	set_cmt	(0X43E0821C,	"a5",	0);
	create_insn	(x=0X43E0821D);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08220,	"a4",	0);
	create_insn	(x=0X43E08221);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08224,	"signature",	0);
	create_insn	(x=0X43E08224);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08228,	"module",	0);
	create_insn	(x=0X43E08228);
	op_stkvar	(x,	1);
	set_cmt	(0X43E0822B,	"a3",	0);
	create_insn	(x=0X43E08232);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08235);
	op_hex		(x,	1);
	create_insn	(x=0X43E08248);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08273);
	op_hex		(x,	1);
	set_cmt	(0X43E08276,	"hash",	0);
	set_cmt	(0X43E08280,	"hash",	0);
	create_insn	(x=0X43E08285);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08294);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E082A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E082A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E082B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E082BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E082C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E082CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E082D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E082E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E082E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E082EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E082F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E082F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08310);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08317);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0831A);
	op_hex		(x,	1);
	create_insn	(x=0X43E0831D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08325);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08329);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08336);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0833A);
	op_stkvar	(x,	1);
	set_cmt	(0X43E0833D,	"a5",	0);
	create_insn	(x=0X43E0833E);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08341,	"a4",	0);
	create_insn	(x=0X43E08342);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08345,	"signature",	0);
	create_insn	(x=0X43E08345);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08349,	"module",	0);
	create_insn	(x=0X43E08349);
	op_stkvar	(x,	1);
	set_cmt	(0X43E0834C,	"a3",	0);
	create_insn	(x=0X43E08353);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08356);
	op_hex		(x,	1);
	create_insn	(x=0X43E08361);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0838C);
	op_hex		(x,	1);
	create_insn	(x=0X43E08396);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E083A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E083A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E083B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E083BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E083C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E083C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E083CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E083D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E083D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E083E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E083E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E083F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E083F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E083FC);
	op_hex		(x,	1);
	create_insn	(x=0X43E083FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08407);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0840B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08418);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0841C);
	op_stkvar	(x,	1);
	set_cmt	(0X43E0841F,	"a5",	0);
	create_insn	(x=0X43E08420);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08423,	"a4",	0);
	create_insn	(x=0X43E08424);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08427,	"signature",	0);
	create_insn	(x=0X43E08427);
	op_stkvar	(x,	1);
	set_cmt	(0X43E0842B,	"module",	0);
	create_insn	(x=0X43E0842B);
	op_stkvar	(x,	1);
	set_cmt	(0X43E0842E,	"a3",	0);
	create_insn	(x=0X43E08435);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08438);
	op_hex		(x,	1);
	create_insn	(x=0X43E08443);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0846E);
	op_hex		(x,	1);
	create_insn	(x=0X43E08479);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0847D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08480);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08490);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08497);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0849B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E084A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E084A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E084AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E084B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E084BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E084C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E084CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E084CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E084D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E084D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E084D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E084E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E084EA);
	op_stkvar	(x,	1);
	set_cmt	(0X43E084ED,	"a5",	0);
	create_insn	(x=0X43E084EE);
	op_stkvar	(x,	1);
	set_cmt	(0X43E084F1,	"a4",	0);
	create_insn	(x=0X43E084F2);
	op_stkvar	(x,	1);
	set_cmt	(0X43E084F5,	"signature",	0);
	create_insn	(x=0X43E084F5);
	op_stkvar	(x,	1);
	set_cmt	(0X43E084F9,	"module",	0);
	create_insn	(x=0X43E084F9);
	op_stkvar	(x,	1);
	set_cmt	(0X43E084FC,	"a3",	0);
	create_insn	(x=0X43E08503);
	op_hex		(x,	1);
	create_insn	(x=0X43E08509);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08518);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08527);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0852A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08537);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0853E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08545);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08549);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08550);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08557);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0855E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08570);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08577);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0857A);
	op_hex		(x,	1);
	create_insn	(x=0X43E0857D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08585);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08589);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08596);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0859A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0859E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E085A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E085A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E085AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E085B2);
	op_hex		(x,	1);
	create_insn	(x=0X43E085B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E085CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E085D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E085D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E085E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E085EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E085EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E085F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E085F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08600);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08607);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08612);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08616);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08619);
	op_hex		(x,	1);
	create_insn	(x=0X43E0861C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08621);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08625);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08632);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08636);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08639,	"a5",	0);
	create_insn	(x=0X43E0863A);
	op_stkvar	(x,	1);
	set_cmt	(0X43E0863D,	"a4",	0);
	create_insn	(x=0X43E0863E);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08641,	"signature",	0);
	create_insn	(x=0X43E08641);
	op_stkvar	(x,	1);
	set_cmt	(0X43E08645,	"a3",	0);
	set_cmt	(0X43E08646,	"module",	0);
	create_insn	(x=0X43E08646);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0864E);
	op_hex		(x,	1);
	create_insn	(x=0X43E08651);
	op_stkvar	(x,	1);
	set_cmt	(0X43E0865E,	"hash",	0);
	create_insn	(x=0X43E08670);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08674);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E08677);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08683);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0868A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08691);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08695);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E08699);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E086A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E086A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E086B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E086B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E086B9);
	op_hex		(x,	1);
	create_insn	(x=0X43E086BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E086C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E086C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E086D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E086D6);
	op_stkvar	(x,	1);
	set_cmt	(0X43E086D9,	"a5",	0);
	create_insn	(x=0X43E086DA);
	op_stkvar	(x,	1);
	set_cmt	(0X43E086DD,	"a4",	0);
	create_insn	(x=0X43E086DE);
	op_stkvar	(x,	1);
	set_cmt	(0X43E086E1,	"signature",	0);
	create_insn	(x=0X43E086E1);
	op_stkvar	(x,	1);
	set_cmt	(0X43E086E5,	"module",	0);
	create_insn	(x=0X43E086E5);
	op_stkvar	(x,	1);
	set_cmt	(0X43E086E8,	"a3",	0);
	create_insn	(x=0X43E086EF);
	op_hex		(x,	1);
	create_insn	(x=0X43E086F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E086FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E0870A);
	op_stkvar	(x,	1);
	make_array	(0X43E0871A,	0X6);
	create_insn	(0X43E08720);
	create_insn	(x=0X43E08723);
	op_hex		(x,	1);
	create_insn	(x=0X43E08726);
	op_hex		(x,	1);
	create_insn	(x=0X43E08771);
	op_hex		(x,	1);
	create_insn	(x=0X43E08775);
	op_hex		(x,	1);
	set_cmt	(0X43E0877C,	"hash",	0);
	set_cmt	(0X43E087A4,	"_DWORD",	0);
	set_cmt	(0X43E087A5,	"_DWORD",	0);
	set_cmt	(0X43E087AB,	"_DWORD",	0);
	set_cmt	(0X43E087B0,	"_DWORD",	0);
	set_cmt	(0X43E087B1,	"_DWORD",	0);
	create_insn	(x=0X43E087E0);
	op_hex		(x,	1);
	create_insn	(x=0X43E087E4);
	op_hex		(x,	1);
	set_cmt	(0X43E087EB,	"hash",	0);
	set_cmt	(0X43E08817,	"_DWORD",	0);
	set_cmt	(0X43E08818,	"_DWORD",	0);
	set_cmt	(0X43E0881D,	"_DWORD",	0);
	set_cmt	(0X43E08822,	"_DWORD",	0);
	set_cmt	(0X43E08823,	"_DWORD",	0);
	create_insn	(x=0X43E0882C);
	op_hex		(x,	1);
	create_insn	(x=0X43E08830);
	op_hex		(x,	1);
	set_cmt	(0X43E08837,	"hash",	0);
	create_insn	(0X43E08866);
	create_insn	(x=0X43E08872);
	op_hex		(x,	1);
	create_insn	(x=0X43E08876);
	op_hex		(x,	1);
	set_cmt	(0X43E0887D,	"hash",	0);
	set_cmt	(0X43E088A5,	"_DWORD",	0);
	set_cmt	(0X43E088A6,	"_DWORD",	0);
	set_cmt	(0X43E088AC,	"_DWORD",	0);
	set_cmt	(0X43E088B1,	"_DWORD",	0);
	set_cmt	(0X43E088B2,	"_DWORD",	0);
	create_insn	(x=0X43E088D9);
	op_hex		(x,	1);
	create_insn	(x=0X43E088DD);
	op_hex		(x,	1);
	set_cmt	(0X43E088E4,	"hash",	0);
	set_cmt	(0X43E08910,	"_DWORD",	0);
	set_cmt	(0X43E08911,	"_DWORD",	0);
	set_cmt	(0X43E08916,	"_DWORD",	0);
	set_cmt	(0X43E0891B,	"_DWORD",	0);
	set_cmt	(0X43E0891C,	"_DWORD",	0);
	create_insn	(x=0X43E08925);
	op_hex		(x,	1);
	create_insn	(x=0X43E08929);
	op_hex		(x,	1);
	set_cmt	(0X43E08930,	"hash",	0);
	set_cmt	(0X43E08954,	"_DWORD",	0);
	set_cmt	(0X43E08956,	"_DWORD",	0);
	set_cmt	(0X43E08957,	"_DWORD",	0);
	create_insn	(x=0X43E0896F);
	op_hex		(x,	1);
	create_insn	(x=0X43E08984);
	op_hex		(x,	1);
	set_cmt	(0X43E0898B,	"hash",	0);
	set_cmt	(0X43E089AF,	"_DWORD",	0);
	set_cmt	(0X43E089B8,	"_DWORD",	0);
	set_cmt	(0X43E089BD,	"_DWORD",	0);
	set_cmt	(0X43E089BE,	"_DWORD",	0);
	create_insn	(0X43E089E8);
	make_array	(0X43E089F5,	0XB);
	create_insn	(0X43E08A00);
	create_insn	(x=0X43E08A03);
	op_hex		(x,	1);
	create_insn	(x=0X43E08A06);
	op_hex		(x,	1);
	make_array	(0X43E08B82,	0XE);
	create_insn	(0X43E08B90);
	make_array	(0X43E08D89,	0X7);
	create_insn	(0X43E08D90);
	create_insn	(0X43E08DB7);
	create_insn	(0X43E08DC6);
	create_insn	(0X43E08DD0);
	create_insn	(0X43E08DE2);
	make_array	(0X43E08DF7,	0X9);
	create_insn	(0X43E08E00);
	create_insn	(0X43E08E25);
	create_insn	(x=0X43E08E37);
	op_hex		(x,	1);
	create_insn	(x=0X43E08E46);
	op_hex		(x,	1);
	create_insn	(x=0X43E08E55);
	op_hex		(x,	1);
	create_insn	(x=0X43E08E64);
	op_hex		(x,	1);
	create_insn	(x=0X43E08E73);
	op_hex		(x,	1);
	create_insn	(x=0X43E08E82);
	op_hex		(x,	1);
	create_insn	(x=0X43E08EA1);
	op_hex		(x,	1);
	create_insn	(0X43E08EB0);
	make_array	(0X43E08EF5,	0XB);
	create_insn	(0X43E08F00);
	create_insn	(x=0X43E08F03);
	op_hex		(x,	1);
	create_insn	(x=0X43E08F06);
	op_hex		(x,	1);
	create_insn	(x=0X43E08F32);
	op_hex		(x,	1);
	create_insn	(0X43E08F3B);
	create_insn	(x=0X43E09044);
	op_hex		(x,	1);
	create_insn	(x=0X43E090E2);
	op_hex		(x,	1);
	create_insn	(0X43E0912C);
	create_insn	(x=0X43E09133);
	op_hex		(x,	1);
	create_insn	(x=0X43E091ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E09226);
	op_hex		(x,	1);
	create_insn	(x=0X43E0930F);
	op_hex		(x,	1);
	make_array	(0X43E093B3,	0XD);
	create_insn	(0X43E093C0);
	set_cmt	(0X43E093CD,	"Size",	0);
	create_insn	(x=0X43E093F6);
	op_hex		(x,	1);
	make_array	(0X43E09409,	0X7);
	create_insn	(0X43E09410);
	create_insn	(x=0X43E0942B);
	op_hex		(x,	1);
	create_insn	(0X43E09430);
	make_array	(0X43E09595,	0XB);
	create_insn	(0X43E095A0);
	create_insn	(0X43E095B0);
	create_insn	(x=0X43E095B3);
	op_hex		(x,	1);
	set_cmt	(0X43E0964A,	"index",	0);
	set_cmt	(0X43E0964F,	"interface",	0);
	set_cmt	(0X43E0965C,	"this",	0);
	set_cmt	(0X43E0969A,	"propHash",	0);
	set_cmt	(0X43E0969F,	"classHash",	0);
	set_cmt	(0X43E096C1,	"propHash",	0);
	set_cmt	(0X43E096C6,	"classHash",	0);
	create_insn	(0X43E096EA);
	set_cmt	(0X43E096EE,	"propHash",	0);
	set_cmt	(0X43E096F3,	"classHash",	0);
	set_cmt	(0X43E09719,	"propHash",	0);
	set_cmt	(0X43E0971E,	"classHash",	0);
	set_cmt	(0X43E09758,	"index",	0);
	set_cmt	(0X43E09763,	"interface",	0);
	set_cmt	(0X43E09770,	"this",	0);
	create_insn	(0X43E0979B);
	make_array	(0X43E097A6,	0XA);
	create_insn	(0X43E097B0);
	create_insn	(x=0X43E097B3);
	op_hex		(x,	1);
	set_cmt	(0X43E097F5,	"index",	0);
	set_cmt	(0X43E09800,	"interface",	0);
	set_cmt	(0X43E0980D,	"this",	0);
	create_insn	(0X43E09838);
	make_array	(0X43E09843,	0XD);
	create_insn	(0X43E09850);
	create_insn	(x=0X43E09853);
	op_hex		(x,	1);
	create_insn	(x=0X43E09856);
	op_hex		(x,	1);
	set_cmt	(0X43E09862,	"arg",	0);
	set_cmt	(0X43E09956,	"angles",	0);
	set_cmt	(0X43E09987,	"angles",	0);
	make_array	(0X43E099ED,	0X3);
	create_insn	(0X43E099F0);
	create_insn	(x=0X43E09A43);
	op_hex		(x,	1);
	create_insn	(x=0X43E09A55);
	op_hex		(x,	1);
	create_insn	(x=0X43E09A79);
	op_hex		(x,	1);
	create_insn	(0X43E09A8C);
	make_array	(0X43E09A92,	0XE);
	create_insn	(0X43E09AA0);
	create_insn	(x=0X43E09AA3);
	op_hex		(x,	1);
	create_insn	(0X43E09AE1);
	create_insn	(x=0X43E09AF5);
	op_hex		(x,	1);
	create_insn	(0X43E09AFA);
	create_insn	(x=0X43E09B05);
	op_hex		(x,	1);
	set_cmt	(0X43E09B0D,	"Size",	0);
	create_insn	(x=0X43E09B15);
	op_hex		(x,	1);
	create_insn	(x=0X43E09B23);
	op_hex		(x,	1);
	create_insn	(0X43E09B2B);
	set_cmt	(0X43E09B2F,	"Size",	0);
	create_insn	(x=0X43E09B35);
	op_hex		(x,	1);
	create_insn	(0X43E09B3A);
	create_insn	(x=0X43E09B61);
	op_hex		(x,	1);
	create_insn	(x=0X43E09B64);
	op_hex		(x,	1);
	create_insn	(x=0X43E09B8B);
	op_hex		(x,	1);
	set_cmt	(0X43E09B8E,	"num",	0);
	set_cmt	(0X43E09B94,	"value",	0);
	set_cmt	(0X43E09B96,	"pointer",	0);
	set_cmt	(0X43E09B9C,	"num",	0);
	set_cmt	(0X43E09BA0,	"value",	0);
	set_cmt	(0X43E09BA2,	"pointer",	0);
	create_insn	(0X43E09BAA);
	create_insn	(x=0X43E09BDD);
	op_hex		(x,	1);
	set_cmt	(0X43E09BE0,	"num",	0);
	set_cmt	(0X43E09BE1,	"value",	0);
	set_cmt	(0X43E09BE6,	"pointer",	0);
	create_insn	(x=0X43E09BF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E09BFF);
	op_hex		(x,	1);
	create_insn	(x=0X43E09C23);
	op_hex		(x,	1);
	create_insn	(0X43E09C35);
	create_byte	(0X43E09C40);
	make_array	(0X43E09C40,	0X10);
	create_insn	(0X43E09C50);
	create_insn	(x=0X43E09C63);
	op_hex		(x,	1);
	create_insn	(0X43E09C68);
	create_insn	(x=0X43E09C73);
	op_hex		(x,	1);
	set_cmt	(0X43E09C7B,	"Size",	0);
	create_insn	(x=0X43E09C83);
	op_hex		(x,	1);
	create_insn	(x=0X43E09C8D);
	op_hex		(x,	1);
	create_insn	(0X43E09C97);
	set_cmt	(0X43E09CA1,	"Size",	0);
	create_insn	(x=0X43E09CA7);
	op_hex		(x,	1);
	create_insn	(0X43E09CAE);
	make_array	(0X43E09CB4,	0XC);
	create_insn	(0X43E09CC0);
	create_insn	(x=0X43E09CEE);
	op_hex		(x,	1);
	create_insn	(0X43E09CF5);
	make_array	(0X43E09CFB,	0X5);
	create_insn	(0X43E09D00);
	create_insn	(x=0X43E09E61);
	op_hex		(x,	1);
	make_array	(0X43E09E68,	0X8);
	create_insn	(0X43E09E70);
	create_insn	(x=0X43E09E78);
	op_hex		(x,	1);
	create_insn	(x=0X43E09E7D);
	op_hex		(x,	1);
	create_insn	(x=0X43E09E8B);
	op_hex		(x,	1);
	create_insn	(x=0X43E09F30);
	op_hex		(x,	1);
	create_insn	(x=0X43E09F3E);
	op_hex		(x,	1);
	create_insn	(0X43E09FDA);
	create_insn	(0X43E09FE2);
	set_cmt	(0X43E09FED,	"interface",	0);
	create_insn	(0X43E09FED);
	set_cmt	(0X43E09FF3,	"index",	0);
	set_cmt	(0X43E0A006,	"index",	0);
	set_cmt	(0X43E0A00E,	"interface",	0);
	make_array	(0X43E0A05A,	0X6);
	create_insn	(0X43E0A060);
	create_insn	(x=0X43E0A068);
	op_hex		(x,	1);
	create_insn	(x=0X43E0A06D);
	op_hex		(x,	1);
	create_insn	(x=0X43E0A07B);
	op_hex		(x,	1);
	create_insn	(x=0X43E0A120);
	op_hex		(x,	1);
	create_insn	(x=0X43E0A12E);
	op_hex		(x,	1);
	create_insn	(0X43E0A1CA);
	create_insn	(0X43E0A1D2);
	set_cmt	(0X43E0A1DD,	"interface",	0);
	create_insn	(0X43E0A1DD);
	set_cmt	(0X43E0A1E3,	"index",	0);
	set_cmt	(0X43E0A1F6,	"index",	0);
	set_cmt	(0X43E0A1FB,	"interface",	0);
	set_cmt	(0X43E0A225,	"angles",	0);
	make_array	(0X43E0A25A,	0X6);
	create_insn	(0X43E0A260);
	make_array	(0X43E0A28D,	0X3);
	create_insn	(0X43E0A290);
	create_insn	(0X43E0A2A0);
	create_insn	(x=0X43E0A2A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E0A2A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E0A2A9);
	op_hex		(x,	1);
	create_insn	(x=0X43E0A2B6);
	op_hex		(x,	1);
	set_cmt	(0X43E0A2BC,	"interface",	0);
	set_cmt	(0X43E0A2C2,	"index",	0);
	set_cmt	(0X43E0A32F,	"this",	0);
	set_cmt	(0X43E0A33B,	"this",	0);
	create_insn	(x=0X43E0A33E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E0A3DE);
	op_hex		(x,	1);
	create_insn	(0X43E0A496);
	make_array	(0X43E0A4A2,	0XE);
	create_insn	(0X43E0A4B0);
	create_insn	(x=0X43E0A4B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E0A4DC);
	op_hex		(x,	1);
	create_insn	(x=0X43E0A4E1);
	op_hex		(x,	1);
	create_insn	(x=0X43E0A4EE);
	op_hex		(x,	1);
	create_insn	(x=0X43E0A4F1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E0A506);
	op_hex		(x,	1);
	set_cmt	(0X43E0A512,	"index",	0);
	set_cmt	(0X43E0A517,	"interface",	0);
	set_cmt	(0X43E0A524,	"this",	0);
	set_cmt	(0X43E0A530,	"a3",	0);
	set_cmt	(0X43E0A532,	"a2",	0);
	set_cmt	(0X43E0A534,	"m_player",	0);
	create_insn	(0X43E0A596);
	set_cmt	(0X43E0A5AC,	"index",	0);
	set_cmt	(0X43E0A5B7,	"interface",	0);
	set_cmt	(0X43E0A5FA,	"this",	0);
	set_cmt	(0X43E0A611,	"propHash",	0);
	set_cmt	(0X43E0A616,	"classHash",	0);
	set_cmt	(0X43E0A62A,	"index",	0);
	set_cmt	(0X43E0A635,	"interface",	0);
	set_cmt	(0X43E0A64C,	"this",	0);
	set_cmt	(0X43E0A663,	"propHash",	0);
	set_cmt	(0X43E0A668,	"classHash",	0);
	create_insn	(0X43E0A6E4);
	make_array	(0X43E0A6FA,	0X6);
	create_insn	(0X43E0A700);
	set_cmt	(0X43E0A70A,	"interface",	0);
	set_cmt	(0X43E0A710,	"index",	0);
	set_cmt	(0X43E0A71C,	"this",	0);
	create_insn	(x=0X43E0A730);
	op_hex		(x,	1);
	set_cmt	(0X43E0A735,	"propHash",	0);
	create_insn	(x=0X43E0A73A);
	op_hex		(x,	1);
	set_cmt	(0X43E0A73D,	"classHash",	0);
	create_insn	(0X43E0A754);
	set_cmt	(0X43E0A75D,	"index",	0);
	set_cmt	(0X43E0A771,	"interface",	0);
	set_cmt	(0X43E0A77E,	"this",	0);
	set_cmt	(0X43E0A792,	"index",	0);
	set_cmt	(0X43E0A7A5,	"interface",	0);
	set_cmt	(0X43E0A7B2,	"this",	0);
	set_cmt	(0X43E0A7CA,	"propHash",	0);
	set_cmt	(0X43E0A7CF,	"classHash",	0);
	set_cmt	(0X43E0A7E2,	"index",	0);
	set_cmt	(0X43E0A83A,	"interface",	0);
	set_cmt	(0X43E0A847,	"this",	0);
	set_cmt	(0X43E0A85E,	"propHash",	0);
	set_cmt	(0X43E0A863,	"classHash",	0);
	set_cmt	(0X43E0A875,	"index",	0);
	set_cmt	(0X43E0A886,	"interface",	0);
	set_cmt	(0X43E0A893,	"this",	0);
	create_insn	(x=0X43E0A8A7);
	op_hex		(x,	1);
	set_cmt	(0X43E0A8AC,	"propHash",	0);
	create_insn	(x=0X43E0A8B1);
	op_hex		(x,	1);
	set_cmt	(0X43E0A8B4,	"classHash",	0);
	create_insn	(0X43E0A8CB);
	create_insn	(x=0X43E0A953);
	op_hex		(x,	1);
	create_insn	(0X43E0A964);
	set_cmt	(0X43E0A96F,	"index",	0);
	set_cmt	(0X43E0A97A,	"interface",	0);
	set_cmt	(0X43E0A987,	"this",	0);
	create_insn	(x=0X43E0A99B);
	op_hex		(x,	1);
	set_cmt	(0X43E0A9A0,	"propHash",	0);
	create_insn	(x=0X43E0A9A5);
	op_hex		(x,	1);
	set_cmt	(0X43E0A9A8,	"classHash",	0);
	create_insn	(0X43E0A9BF);
	set_cmt	(0X43E0A9E8,	"index",	0);
	set_cmt	(0X43E0A9ED,	"interface",	0);
	set_cmt	(0X43E0A9FA,	"this",	0);
	set_cmt	(0X43E0AA06,	"_DWORD",	0);
	set_cmt	(0X43E0AA0C,	"a1",	0);
	set_cmt	(0X43E0AA11,	"int",	0);
	make_array	(0X43E0AA33,	0XD);
	create_insn	(0X43E0AA40);
	set_cmt	(0X43E0AA4A,	"interface",	0);
	set_cmt	(0X43E0AA50,	"index",	0);
	set_cmt	(0X43E0AA5D,	"this",	0);
	set_cmt	(0X43E0AA74,	"index",	0);
	set_cmt	(0X43E0AA87,	"interface",	0);
	set_cmt	(0X43E0AA94,	"this",	0);
	set_cmt	(0X43E0AAAB,	"propHash",	0);
	set_cmt	(0X43E0AAB0,	"classHash",	0);
	set_cmt	(0X43E0AAC3,	"index",	0);
	set_cmt	(0X43E0AB11,	"interface",	0);
	set_cmt	(0X43E0AB1E,	"this",	0);
	set_cmt	(0X43E0AB35,	"propHash",	0);
	set_cmt	(0X43E0AB3A,	"classHash",	0);
	set_cmt	(0X43E0AB4C,	"index",	0);
	set_cmt	(0X43E0AB5D,	"interface",	0);
	set_cmt	(0X43E0AB6A,	"this",	0);
	create_insn	(x=0X43E0AB7E);
	op_hex		(x,	1);
	set_cmt	(0X43E0AB83,	"propHash",	0);
	create_insn	(x=0X43E0AB88);
	op_hex		(x,	1);
	set_cmt	(0X43E0AB8B,	"classHash",	0);
	create_insn	(0X43E0ABA2);
	set_cmt	(0X43E0ABAB,	"index",	0);
	set_cmt	(0X43E0ABC2,	"interface",	0);
	set_cmt	(0X43E0ABCF,	"this",	0);
	set_cmt	(0X43E0ABE3,	"index",	0);
	set_cmt	(0X43E0ABF6,	"interface",	0);
	set_cmt	(0X43E0AC03,	"this",	0);
	set_cmt	(0X43E0AC1A,	"propHash",	0);
	set_cmt	(0X43E0AC1F,	"classHash",	0);
	set_cmt	(0X43E0AC35,	"index",	0);
	set_cmt	(0X43E0AC86,	"interface",	0);
	set_cmt	(0X43E0AC93,	"this",	0);
	set_cmt	(0X43E0ACAA,	"propHash",	0);
	set_cmt	(0X43E0ACAF,	"classHash",	0);
	set_cmt	(0X43E0ACC1,	"index",	0);
	set_cmt	(0X43E0ACD2,	"interface",	0);
	set_cmt	(0X43E0ACDF,	"this",	0);
	create_insn	(x=0X43E0ACF3);
	op_hex		(x,	1);
	set_cmt	(0X43E0ACF8,	"propHash",	0);
	create_insn	(x=0X43E0ACFD);
	op_hex		(x,	1);
	set_cmt	(0X43E0AD00,	"classHash",	0);
	create_insn	(0X43E0AD23);
	make_array	(0X43E0AD36,	0XA);
	create_insn	(0X43E0AD40);
	set_cmt	(0X43E0AD4A,	"interface",	0);
	set_cmt	(0X43E0AD50,	"index",	0);
	set_cmt	(0X43E0AD5D,	"this",	0);
	set_cmt	(0X43E0AD74,	"index",	0);
	set_cmt	(0X43E0AD87,	"interface",	0);
	set_cmt	(0X43E0AD94,	"this",	0);
	set_cmt	(0X43E0ADAB,	"propHash",	0);
	set_cmt	(0X43E0ADB0,	"classHash",	0);
	set_cmt	(0X43E0ADC6,	"index",	0);
	set_cmt	(0X43E0AE17,	"interface",	0);
	set_cmt	(0X43E0AE24,	"this",	0);
	set_cmt	(0X43E0AE3B,	"propHash",	0);
	set_cmt	(0X43E0AE40,	"classHash",	0);
	set_cmt	(0X43E0AE52,	"index",	0);
	set_cmt	(0X43E0AE63,	"interface",	0);
	set_cmt	(0X43E0AE70,	"this",	0);
	create_insn	(x=0X43E0AE84);
	op_hex		(x,	1);
	set_cmt	(0X43E0AE89,	"propHash",	0);
	create_insn	(x=0X43E0AE8E);
	op_hex		(x,	1);
	set_cmt	(0X43E0AE91,	"classHash",	0);
	create_insn	(0X43E0AEB4);
	make_array	(0X43E0AEC7,	0X9);
	create_insn	(0X43E0AED0);
	set_cmt	(0X43E0AED2,	"num",	0);
	set_cmt	(0X43E0AED7,	"value",	0);
	set_cmt	(0X43E0AED9,	"pointer",	0);
	create_insn	(x=0X43E0AED9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E0B070);
	op_hex		(x,	1);
	create_insn	(x=0X43E0B087);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E0B117);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E0B149);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E0B175);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E0B191,	"num",	0);
	set_cmt	(0X43E0B196,	"value",	0);
	set_cmt	(0X43E0B197,	"pointer",	0);
	create_insn	(x=0X43E0B197);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E0B1A7);
	op_hex		(x,	1);
	create_insn	(x=0X43E0B1B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E0B1C5,	0XB);
	create_insn	(0X43E0B1D0);
	make_array	(0X43E0B20C,	0X4);
	create_insn	(0X43E0B210);
	create_insn	(x=0X43E0B215);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E0B228);
	op_hex		(x,	1);
	create_insn	(x=0X43E0B241);
	op_hex		(x,	1);
	create_insn	(x=0X43E0B246);
	op_hex		(x,	1);
	create_insn	(x=0X43E0B253);
	op_hex		(x,	1);
	create_insn	(x=0X43E0B26E);
	op_hex		(x,	1);
	create_insn	(x=0X43E0B279);
	op_hex		(x,	1);
	create_insn	(0X43E0B28D);
	create_insn	(x=0X43E0B29B);
	op_hex		(x,	1);
	create_insn	(x=0X43E0B2A8);
	op_hex		(x,	1);
	create_insn	(0X43E0B2AD);
	create_insn	(x=0X43E0B2B8);
	op_hex		(x,	1);
	set_cmt	(0X43E0B2C0,	"Size",	0);
	create_insn	(x=0X43E0B2C6);
	op_hex		(x,	1);
	create_insn	(x=0X43E0B2D4);
	op_hex		(x,	1);
	create_insn	(0X43E0B2DC);
	set_cmt	(0X43E0B2E0,	"Size",	0);
	create_insn	(x=0X43E0B2E6);
	op_hex		(x,	1);
	create_insn	(0X43E0B2F0);
	create_insn	(x=0X43E0B312);
	op_hex		(x,	1);
	create_insn	(0X43E0B32B);
	create_insn	(x=0X43E0B356);
	op_hex		(x,	1);
	create_insn	(x=0X43E0B362);
	op_hex		(x,	1);
	create_insn	(x=0X43E0B38A);
	op_hex		(x,	1);
	create_insn	(0X43E0B3B6);
	make_array	(0X43E0B3D5,	0XB);
	create_insn	(0X43E0B3E0);
	make_array	(0X43E0B44A,	0X6);
	create_insn	(0X43E0B450);
	make_array	(0X43E0B4BC,	0X4);
	create_insn	(0X43E0B4C0);
	set_cmt	(0X43E0B4CA,	"interface",	0);
	set_cmt	(0X43E0B4D0,	"index",	0);
	set_cmt	(0X43E0B4DD,	"this",	0);
	set_cmt	(0X43E0B4F0,	"index",	0);
	set_cmt	(0X43E0B503,	"interface",	0);
	set_cmt	(0X43E0B510,	"this",	0);
	set_cmt	(0X43E0B527,	"propHash",	0);
	set_cmt	(0X43E0B52C,	"classHash",	0);
	set_cmt	(0X43E0B53F,	"index",	0);
	set_cmt	(0X43E0B597,	"interface",	0);
	set_cmt	(0X43E0B5A4,	"this",	0);
	set_cmt	(0X43E0B5BB,	"propHash",	0);
	set_cmt	(0X43E0B5C0,	"classHash",	0);
	set_cmt	(0X43E0B5D2,	"index",	0);
	set_cmt	(0X43E0B5E3,	"interface",	0);
	set_cmt	(0X43E0B5F0,	"this",	0);
	create_insn	(x=0X43E0B604);
	op_hex		(x,	1);
	set_cmt	(0X43E0B609,	"propHash",	0);
	create_insn	(x=0X43E0B60E);
	op_hex		(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_4(void) {
        auto x;
#define id x

	set_cmt	(0X43E0B611,	"classHash",	0);
	create_insn	(0X43E0B628);
	create_insn	(x=0X43E0B6AC);
	op_hex		(x,	1);
	create_insn	(0X43E0B6C9);
	make_array	(0X43E0B6D7,	0X9);
	create_insn	(0X43E0B6E0);
	set_cmt	(0X43E0B6EA,	"interface",	0);
	set_cmt	(0X43E0B6F0,	"index",	0);
	set_cmt	(0X43E0B6FD,	"this",	0);
	set_cmt	(0X43E0B714,	"index",	0);
	set_cmt	(0X43E0B727,	"interface",	0);
	set_cmt	(0X43E0B734,	"this",	0);
	set_cmt	(0X43E0B74B,	"propHash",	0);
	set_cmt	(0X43E0B750,	"classHash",	0);
	set_cmt	(0X43E0B763,	"index",	0);
	set_cmt	(0X43E0B7B1,	"interface",	0);
	set_cmt	(0X43E0B7BE,	"this",	0);
	set_cmt	(0X43E0B7D5,	"propHash",	0);
	set_cmt	(0X43E0B7DA,	"classHash",	0);
	set_cmt	(0X43E0B7EC,	"index",	0);
	set_cmt	(0X43E0B7FD,	"interface",	0);
	set_cmt	(0X43E0B80A,	"this",	0);
	create_insn	(x=0X43E0B81E);
	op_hex		(x,	1);
	set_cmt	(0X43E0B823,	"propHash",	0);
	create_insn	(x=0X43E0B828);
	op_hex		(x,	1);
	set_cmt	(0X43E0B82B,	"classHash",	0);
	create_insn	(0X43E0B842);
	set_cmt	(0X43E0B84B,	"index",	0);
	set_cmt	(0X43E0B862,	"interface",	0);
	set_cmt	(0X43E0B86F,	"this",	0);
	set_cmt	(0X43E0B882,	"index",	0);
	set_cmt	(0X43E0B895,	"interface",	0);
	set_cmt	(0X43E0B8A2,	"this",	0);
	set_cmt	(0X43E0B8B9,	"propHash",	0);
	set_cmt	(0X43E0B8BE,	"classHash",	0);
	set_cmt	(0X43E0B8D4,	"index",	0);
	set_cmt	(0X43E0B925,	"interface",	0);
	set_cmt	(0X43E0B932,	"this",	0);
	set_cmt	(0X43E0B949,	"propHash",	0);
	set_cmt	(0X43E0B94E,	"classHash",	0);
	set_cmt	(0X43E0B960,	"index",	0);
	set_cmt	(0X43E0B971,	"interface",	0);
	set_cmt	(0X43E0B97E,	"this",	0);
	create_insn	(x=0X43E0B992);
	op_hex		(x,	1);
	set_cmt	(0X43E0B997,	"propHash",	0);
	create_insn	(x=0X43E0B99C);
	op_hex		(x,	1);
	set_cmt	(0X43E0B99F,	"classHash",	0);
	create_insn	(0X43E0B9C2);
	make_array	(0X43E0B9D5,	0XB);
	create_insn	(0X43E0B9E0);
	create_insn	(x=0X43E0B9E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E0B9E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E0B9F9);
	op_hex		(x,	1);
	create_insn	(x=0X43E0B9FD);
	op_hex		(x,	1);
	create_insn	(x=0X43E0BA00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E0BA29);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E0BA4E);
	op_hex		(x,	1);
	set_cmt	(0X43E0BA9F,	"this",	0);
	create_insn	(x=0X43E0BAAD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E0BB29,	"end",	0);
	set_cmt	(0X43E0BB2A,	"start",	0);
	create_insn	(0X43E0BB75);
	create_insn	(x=0X43E0BBB1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E0BBB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E0BBD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E0BC05);
	op_hex		(x,	1);
	create_insn	(0X43E0BCAB);
	create_insn	(0X43E0BCCD);
	create_insn	(0X43E0BCEC);
	create_insn	(0X43E0BD0E);
	create_insn	(0X43E0BD30);
	create_insn	(0X43E0BE54);
	make_array	(0X43E0BF59,	0X7);
	create_insn	(0X43E0BF60);
	make_array	(0X43E0BF74,	0XC);
	create_insn	(0X43E0BF80);
	create_insn	(x=0X43E0BFB0);
	op_hex		(x,	1);
	create_insn	(x=0X43E0BFB4);
	op_hex		(x,	1);
	create_insn	(x=0X43E0BFC1);
	op_hex		(x,	1);
	create_insn	(x=0X43E0BFC5);
	op_hex		(x,	1);
	create_insn	(0X43E0C000);
	create_insn	(0X43E0C021);
	create_insn	(0X43E0C039);
	make_array	(0X43E0C04B,	0X5);
	create_insn	(0X43E0C050);
	create_insn	(0X43E0C070);
	create_insn	(0X43E0C0C1);
	create_insn	(0X43E0C0DF);
	create_insn	(x=0X43E0C0E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E0C0EF);
	make_array	(0X43E0C0F4,	0XC);
	create_insn	(0X43E0C100);
	set_cmt	(0X43E0C140,	"Size",	0);
	create_insn	(x=0X43E0C14A);
	op_hex		(x,	1);
	set_cmt	(0X43E0C1AE,	"propHash",	0);
	set_cmt	(0X43E0C1B3,	"classHash",	0);
	set_cmt	(0X43E0C1E4,	"propHash",	0);
	set_cmt	(0X43E0C1E9,	"classHash",	0);
	set_cmt	(0X43E0C215,	"propHash",	0);
	set_cmt	(0X43E0C21A,	"classHash",	0);
	make_array	(0X43E0C25B,	0X5);
	create_insn	(0X43E0C260);
	create_insn	(x=0X43E0C263);
	op_hex		(x,	1);
	create_insn	(0X43E0C2A1);
	create_insn	(x=0X43E0C2B5);
	op_hex		(x,	1);
	create_insn	(0X43E0C2BA);
	create_insn	(x=0X43E0C2C5);
	op_hex		(x,	1);
	set_cmt	(0X43E0C2CD,	"Size",	0);
	create_insn	(x=0X43E0C2D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E0C2E3);
	op_hex		(x,	1);
	create_insn	(0X43E0C2EB);
	set_cmt	(0X43E0C2EF,	"Size",	0);
	create_insn	(x=0X43E0C2F5);
	op_hex		(x,	1);
	create_insn	(0X43E0C2FA);
	create_insn	(x=0X43E0C321);
	op_hex		(x,	1);
	create_insn	(x=0X43E0C324);
	op_hex		(x,	1);
	create_insn	(x=0X43E0C34B);
	op_hex		(x,	1);
	set_cmt	(0X43E0C34E,	"num",	0);
	set_cmt	(0X43E0C354,	"value",	0);
	set_cmt	(0X43E0C356,	"pointer",	0);
	set_cmt	(0X43E0C35C,	"num",	0);
	set_cmt	(0X43E0C360,	"value",	0);
	set_cmt	(0X43E0C362,	"pointer",	0);
	create_insn	(0X43E0C36A);
	create_insn	(x=0X43E0C39D);
	op_hex		(x,	1);
	set_cmt	(0X43E0C3A0,	"num",	0);
	set_cmt	(0X43E0C3A1,	"value",	0);
	set_cmt	(0X43E0C3A6,	"pointer",	0);
	create_insn	(x=0X43E0C3B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E0C3BF);
	op_hex		(x,	1);
	create_insn	(x=0X43E0C3E3);
	op_hex		(x,	1);
	create_insn	(0X43E0C3F5);
	create_byte	(0X43E0C400);
	make_array	(0X43E0C400,	0X10);
	create_insn	(0X43E0C410);
	create_insn	(x=0X43E0C420);
	op_hex		(x,	1);
	create_insn	(x=0X43E0C44F);
	op_hex		(x,	1);
	set_cmt	(0X43E0C465,	"num",	0);
	set_cmt	(0X43E0C46A,	"value",	0);
	set_cmt	(0X43E0C46F,	"pointer",	0);
	create_insn	(x=0X43E0C475);
	op_hex		(x,	1);
	create_insn	(0X43E0C487);
	make_array	(0X43E0C4A2,	0XE);
	create_insn	(0X43E0C4B0);
	create_insn	(x=0X43E0C4C1);
	op_hex		(x,	1);
	create_insn	(x=0X43E0C53A);
	op_hex		(x,	1);
	set_cmt	(0X43E0C54A,	"num",	0);
	set_cmt	(0X43E0C54F,	"value",	0);
	set_cmt	(0X43E0C554,	"pointer",	0);
	create_insn	(x=0X43E0C55A);
	op_hex		(x,	1);
	create_insn	(0X43E0C56E);
	create_insn	(0X43E0C590);
	make_array	(0X43E0C596,	0XA);
	create_insn	(0X43E0C5A0);
	make_array	(0X43E0C5A6,	0XA);
	create_insn	(0X43E0C5B0);
	make_array	(0X43E0C5B6,	0XA);
	create_insn	(0X43E0C5C0);
	make_array	(0X43E0C5C6,	0XA);
	create_insn	(0X43E0C5D0);
	make_array	(0X43E0C5D6,	0XA);
	create_insn	(0X43E0C5E0);
	make_array	(0X43E0C5E6,	0XA);
	create_insn	(0X43E0C5F0);
	make_array	(0X43E0C5F6,	0XA);
	create_insn	(0X43E0C600);
	make_array	(0X43E0C606,	0XA);
	create_insn	(0X43E0C610);
	make_array	(0X43E0C616,	0XA);
	create_insn	(0X43E0C620);
	make_array	(0X43E0C626,	0XA);
	create_insn	(0X43E0C630);
	make_array	(0X43E0C636,	0XA);
	create_insn	(0X43E0C640);
	make_array	(0X43E0C646,	0XA);
	create_insn	(0X43E0C650);
	make_array	(0X43E0C656,	0XA);
	create_insn	(0X43E0C660);
	make_array	(0X43E0C666,	0XA);
	create_insn	(0X43E0C670);
	make_array	(0X43E0C676,	0XA);
	create_insn	(0X43E0C680);
	make_array	(0X43E0C686,	0XA);
	create_insn	(0X43E0C690);
	make_array	(0X43E0C696,	0XA);
	create_insn	(0X43E0C6A0);
	make_array	(0X43E0C6A6,	0XA);
	create_insn	(0X43E0C6B0);
	make_array	(0X43E0C6B6,	0XA);
	create_insn	(0X43E0C6C0);
	make_array	(0X43E0C6C6,	0XA);
	create_insn	(0X43E0C6D0);
	make_array	(0X43E0C6D6,	0XA);
	create_insn	(0X43E0C6E0);
	make_array	(0X43E0C6E6,	0XA);
	create_insn	(0X43E0C6F0);
	make_array	(0X43E0C6F6,	0XA);
	create_insn	(0X43E0C700);
	make_array	(0X43E0C706,	0XA);
	create_insn	(0X43E0C710);
	make_array	(0X43E0C716,	0XA);
	create_insn	(0X43E0C720);
	make_array	(0X43E0C726,	0XA);
	create_insn	(0X43E0C730);
	make_array	(0X43E0C736,	0XA);
	create_insn	(0X43E0C740);
	make_array	(0X43E0C746,	0XA);
	create_insn	(0X43E0C750);
	make_array	(0X43E0C756,	0XA);
	create_insn	(0X43E0C760);
	make_array	(0X43E0C766,	0XA);
	create_insn	(0X43E0C770);
	make_array	(0X43E0C776,	0XA);
	create_insn	(0X43E0C780);
	make_array	(0X43E0C786,	0XA);
	create_insn	(0X43E0C790);
	make_array	(0X43E0C796,	0XA);
	create_insn	(0X43E0C7A0);
	make_array	(0X43E0C7A6,	0XA);
	create_insn	(0X43E0C7B0);
	make_array	(0X43E0C7B6,	0XA);
	create_insn	(0X43E0C7C0);
	make_array	(0X43E0C7C6,	0XA);
	create_insn	(0X43E0C7D0);
	make_array	(0X43E0C7D6,	0XA);
	create_insn	(0X43E0C7E0);
	make_array	(0X43E0C7E6,	0XA);
	create_insn	(0X43E0C7F0);
	make_array	(0X43E0C7F6,	0XA);
	create_insn	(0X43E0C800);
	make_array	(0X43E0C806,	0XA);
	create_insn	(0X43E0C810);
	make_array	(0X43E0C816,	0XA);
	create_insn	(0X43E0C820);
	make_array	(0X43E0C826,	0XA);
	create_insn	(0X43E0C830);
	make_array	(0X43E0C836,	0XA);
	create_insn	(0X43E0C840);
	make_array	(0X43E0C846,	0XA);
	create_insn	(0X43E0C850);
	make_array	(0X43E0C856,	0XA);
	create_insn	(0X43E0C860);
	make_array	(0X43E0C866,	0XA);
	create_insn	(0X43E0C870);
	make_array	(0X43E0C876,	0XA);
	create_insn	(0X43E0C880);
	make_array	(0X43E0C886,	0XA);
	create_insn	(0X43E0C890);
	make_array	(0X43E0C896,	0XA);
	create_insn	(0X43E0C8A0);
	make_array	(0X43E0C8A6,	0XA);
	create_insn	(0X43E0C8B0);
	make_array	(0X43E0C8B6,	0XA);
	create_insn	(0X43E0C8C0);
	make_array	(0X43E0C8C6,	0XA);
	create_insn	(0X43E0C8D0);
	make_array	(0X43E0C8D6,	0XA);
	create_insn	(0X43E0C8E0);
	make_array	(0X43E0C8E6,	0XA);
	create_insn	(0X43E0C8F0);
	make_array	(0X43E0C8F6,	0XA);
	create_insn	(0X43E0C900);
	make_array	(0X43E0C906,	0XA);
	create_insn	(0X43E0C910);
	make_array	(0X43E0C916,	0XA);
	create_insn	(0X43E0C920);
	make_array	(0X43E0C926,	0XA);
	create_insn	(0X43E0C930);
	make_array	(0X43E0C936,	0XA);
	create_insn	(0X43E0C940);
	make_array	(0X43E0C946,	0XA);
	create_insn	(0X43E0C950);
	make_array	(0X43E0C956,	0XA);
	create_insn	(0X43E0C960);
	make_array	(0X43E0C966,	0XA);
	create_insn	(0X43E0C970);
	make_array	(0X43E0C976,	0XA);
	create_insn	(0X43E0C980);
	make_array	(0X43E0C986,	0XA);
	create_insn	(0X43E0C990);
	make_array	(0X43E0C996,	0XA);
	create_insn	(0X43E0C9A0);
	make_array	(0X43E0C9A6,	0XA);
	create_insn	(0X43E0C9B0);
	make_array	(0X43E0C9B6,	0XA);
	create_insn	(0X43E0C9C0);
	make_array	(0X43E0C9C6,	0XA);
	create_insn	(0X43E0C9D0);
	make_array	(0X43E0C9D6,	0XA);
	create_insn	(0X43E0C9E0);
	make_array	(0X43E0C9E6,	0XA);
	create_insn	(0X43E0C9F0);
	make_array	(0X43E0C9F6,	0XA);
	create_insn	(0X43E0CA00);
	make_array	(0X43E0CA06,	0XA);
	create_insn	(0X43E0CA10);
	make_array	(0X43E0CA16,	0XA);
	create_insn	(0X43E0CA20);
	make_array	(0X43E0CA26,	0XA);
	create_insn	(0X43E0CA30);
	make_array	(0X43E0CA36,	0XA);
	create_insn	(0X43E0CA40);
	make_array	(0X43E0CA46,	0XA);
	create_insn	(0X43E0CA50);
	make_array	(0X43E0CA56,	0XA);
	create_insn	(0X43E0CA60);
	make_array	(0X43E0CA66,	0XA);
	create_insn	(0X43E0CA70);
	make_array	(0X43E0CA76,	0XA);
	create_insn	(0X43E0CA80);
	make_array	(0X43E0CA86,	0XA);
	create_insn	(0X43E0CA90);
	make_array	(0X43E0CA96,	0XA);
	create_insn	(0X43E0CAA0);
	make_array	(0X43E0CAA6,	0XA);
	create_insn	(0X43E0CAB0);
	make_array	(0X43E0CAB6,	0XA);
	create_insn	(0X43E0CAC0);
	make_array	(0X43E0CAC6,	0XA);
	create_insn	(0X43E0CAD0);
	make_array	(0X43E0CAD6,	0XA);
	create_insn	(0X43E0CAE0);
	make_array	(0X43E0CAE6,	0XA);
	create_insn	(0X43E0CAF0);
	make_array	(0X43E0CAF6,	0XA);
	create_insn	(0X43E0CB00);
	make_array	(0X43E0CB06,	0XA);
	create_insn	(0X43E0CB10);
	make_array	(0X43E0CB16,	0XA);
	create_insn	(0X43E0CB20);
	make_array	(0X43E0CB26,	0XA);
	create_insn	(0X43E0CB30);
	make_array	(0X43E0CB36,	0XA);
	create_insn	(0X43E0CB40);
	make_array	(0X43E0CB46,	0XA);
	create_insn	(0X43E0CB50);
	make_array	(0X43E0CB56,	0XA);
	create_insn	(0X43E0CB60);
	make_array	(0X43E0CB66,	0XA);
	create_insn	(0X43E0CB70);
	make_array	(0X43E0CB76,	0XA);
	create_insn	(0X43E0CB80);
	make_array	(0X43E0CB86,	0XA);
	create_insn	(0X43E0CB90);
	make_array	(0X43E0CB96,	0XA);
	create_insn	(0X43E0CBA0);
	make_array	(0X43E0CBA6,	0XA);
	create_insn	(0X43E0CBB0);
	make_array	(0X43E0CBB6,	0XA);
	create_insn	(0X43E0CBC0);
	make_array	(0X43E0CBC6,	0XA);
	create_insn	(0X43E0CBD0);
	make_array	(0X43E0CBD6,	0XA);
	create_insn	(0X43E0CBE0);
	make_array	(0X43E0CBE6,	0XA);
	create_insn	(0X43E0CBF0);
	make_array	(0X43E0CBF6,	0XA);
	create_insn	(0X43E0CC00);
	make_array	(0X43E0CC06,	0XA);
	create_insn	(0X43E0CC10);
	make_array	(0X43E0CC16,	0XA);
	create_insn	(0X43E0CC20);
	make_array	(0X43E0CC26,	0XA);
	create_insn	(0X43E0CC30);
	make_array	(0X43E0CC36,	0XA);
	create_insn	(0X43E0CC40);
	make_array	(0X43E0CC46,	0XA);
	create_insn	(0X43E0CC50);
	make_array	(0X43E0CC56,	0XA);
	create_insn	(0X43E0CC60);
	make_array	(0X43E0CC66,	0XA);
	create_insn	(0X43E0CC70);
	make_array	(0X43E0CC76,	0XA);
	create_insn	(0X43E0CC80);
	make_array	(0X43E0CC86,	0XA);
	create_insn	(0X43E0CC90);
	make_array	(0X43E0CC96,	0XA);
	create_insn	(0X43E0CCA0);
	make_array	(0X43E0CCA6,	0XA);
	create_insn	(0X43E0CCB0);
	make_array	(0X43E0CCB6,	0XA);
	create_insn	(0X43E0CCC0);
	make_array	(0X43E0CCC6,	0XA);
	create_insn	(0X43E0CCD0);
	make_array	(0X43E0CCD6,	0XA);
	create_insn	(0X43E0CCE0);
	make_array	(0X43E0CCE6,	0XA);
	create_insn	(0X43E0CCF0);
	make_array	(0X43E0CCF6,	0XA);
	create_insn	(0X43E0CD00);
	make_array	(0X43E0CD06,	0XA);
	create_insn	(0X43E0CD10);
	make_array	(0X43E0CD16,	0XA);
	create_insn	(0X43E0CD20);
	make_array	(0X43E0CD26,	0XA);
	create_insn	(0X43E0CD30);
	make_array	(0X43E0CD36,	0XA);
	create_insn	(0X43E0CD40);
	make_array	(0X43E0CD46,	0XA);
	create_insn	(0X43E0CD50);
	make_array	(0X43E0CD56,	0XA);
	create_insn	(0X43E0CD60);
	make_array	(0X43E0CD66,	0XA);
	create_insn	(0X43E0CD70);
	make_array	(0X43E0CD76,	0XA);
	create_insn	(0X43E0CD80);
	make_array	(0X43E0CD86,	0XA);
	create_insn	(0X43E0CD90);
	make_array	(0X43E0CD96,	0XA);
	create_insn	(0X43E0CDA0);
	make_array	(0X43E0CDA6,	0XA);
	create_insn	(0X43E0CDB0);
	make_array	(0X43E0CDB6,	0XA);
	create_insn	(0X43E0CDC0);
	make_array	(0X43E0CDC6,	0XA);
	create_insn	(0X43E0CDD0);
	make_array	(0X43E0CDD6,	0XA);
	create_insn	(0X43E0CDE0);
	make_array	(0X43E0CDE6,	0XA);
	create_insn	(0X43E0CDF0);
	make_array	(0X43E0CDF6,	0XA);
	create_insn	(0X43E0CE00);
	make_array	(0X43E0CE06,	0XA);
	create_insn	(0X43E0CE10);
	make_array	(0X43E0CE16,	0XA);
	create_insn	(0X43E0CE20);
	make_array	(0X43E0CE26,	0XA);
	create_insn	(0X43E0CE30);
	make_array	(0X43E0CE36,	0XA);
	create_insn	(0X43E0CE40);
	make_array	(0X43E0CE46,	0XA);
	create_insn	(0X43E0CE50);
	make_array	(0X43E0CE56,	0XA);
	create_insn	(0X43E0CE60);
	make_array	(0X43E0CE66,	0XA);
	create_insn	(0X43E0CE70);
	make_array	(0X43E0CE76,	0XA);
	create_insn	(0X43E0CE80);
	make_array	(0X43E0CE86,	0XA);
	create_insn	(0X43E0CE90);
	make_array	(0X43E0CE96,	0XA);
	create_insn	(0X43E0CEA0);
	make_array	(0X43E0CEA6,	0XA);
	create_insn	(0X43E0CEB0);
	make_array	(0X43E0CEB6,	0XA);
	create_insn	(0X43E0CEC0);
	make_array	(0X43E0CEC6,	0XA);
	create_insn	(0X43E0CED0);
	make_array	(0X43E0CED6,	0XA);
	create_insn	(0X43E0CEE0);
	make_array	(0X43E0CEE6,	0XA);
	create_insn	(0X43E0CEF0);
	make_array	(0X43E0CEF6,	0XA);
	create_insn	(0X43E0CF00);
	make_array	(0X43E0CF06,	0XA);
	create_insn	(0X43E0CF10);
	make_array	(0X43E0CF16,	0XA);
	create_insn	(0X43E0CF20);
	make_array	(0X43E0CF26,	0XA);
	create_insn	(0X43E0CF30);
	make_array	(0X43E0CF36,	0XA);
	create_insn	(0X43E0CF40);
	make_array	(0X43E0CF46,	0XA);
	create_insn	(0X43E0CF50);
	make_array	(0X43E0CF56,	0XA);
	create_insn	(0X43E0CF60);
	make_array	(0X43E0CF66,	0XA);
	create_insn	(0X43E0CF70);
	make_array	(0X43E0CF76,	0XA);
	create_insn	(0X43E0CF80);
	make_array	(0X43E0CF86,	0XA);
	create_insn	(0X43E0CF90);
	make_array	(0X43E0CF96,	0XA);
	create_insn	(0X43E0CFA0);
	make_array	(0X43E0CFA6,	0XA);
	create_insn	(0X43E0CFB0);
	make_array	(0X43E0CFB6,	0XA);
	create_insn	(0X43E0CFC0);
	make_array	(0X43E0CFC6,	0XA);
	create_insn	(0X43E0CFD0);
	make_array	(0X43E0CFD6,	0XA);
	create_insn	(0X43E0CFE0);
	make_array	(0X43E0CFE6,	0XA);
	create_insn	(0X43E0CFF0);
	make_array	(0X43E0CFF6,	0XA);
	create_insn	(0X43E0D000);
	make_array	(0X43E0D006,	0XA);
	create_insn	(0X43E0D010);
	make_array	(0X43E0D016,	0XA);
	create_insn	(0X43E0D020);
	make_array	(0X43E0D026,	0XA);
	create_insn	(0X43E0D030);
	make_array	(0X43E0D036,	0XA);
	create_insn	(0X43E0D040);
	make_array	(0X43E0D046,	0XA);
	create_insn	(0X43E0D050);
	make_array	(0X43E0D056,	0XA);
	create_insn	(0X43E0D060);
	make_array	(0X43E0D066,	0XA);
	create_insn	(0X43E0D070);
	make_array	(0X43E0D076,	0XA);
	create_insn	(0X43E0D080);
	make_array	(0X43E0D086,	0XA);
	create_insn	(0X43E0D090);
	make_array	(0X43E0D096,	0XA);
	create_insn	(0X43E0D0A0);
	make_array	(0X43E0D0A6,	0XA);
	create_insn	(0X43E0D0B0);
	make_array	(0X43E0D0B6,	0XA);
	create_insn	(0X43E0D0C0);
	make_array	(0X43E0D0C6,	0XA);
	create_insn	(0X43E0D0D0);
	make_array	(0X43E0D0D6,	0XA);
	create_insn	(0X43E0D0E0);
	make_array	(0X43E0D0E6,	0XA);
	create_insn	(0X43E0D0F0);
	make_array	(0X43E0D0F6,	0XA);
	create_insn	(0X43E0D100);
	make_array	(0X43E0D106,	0XA);
	create_insn	(0X43E0D110);
	make_array	(0X43E0D116,	0XA);
	create_insn	(0X43E0D120);
	make_array	(0X43E0D126,	0XA);
	create_insn	(0X43E0D130);
	make_array	(0X43E0D136,	0XA);
	create_insn	(0X43E0D140);
	make_array	(0X43E0D146,	0XA);
	create_insn	(0X43E0D150);
	make_array	(0X43E0D156,	0XA);
	create_insn	(0X43E0D160);
	make_array	(0X43E0D166,	0XA);
	create_insn	(0X43E0D170);
	make_array	(0X43E0D176,	0XA);
	create_insn	(0X43E0D180);
	make_array	(0X43E0D186,	0XA);
	create_insn	(0X43E0D190);
	make_array	(0X43E0D196,	0XA);
	create_insn	(0X43E0D1A0);
	make_array	(0X43E0D1A6,	0XA);
	create_insn	(0X43E0D1B0);
	make_array	(0X43E0D1B6,	0XA);
	create_insn	(0X43E0D1C0);
	make_array	(0X43E0D1C6,	0XA);
	create_insn	(0X43E0D1D0);
	make_array	(0X43E0D1D6,	0XA);
	create_insn	(0X43E0D1E0);
	make_array	(0X43E0D1E6,	0XA);
	create_insn	(0X43E0D1F0);
	make_array	(0X43E0D1F6,	0XA);
	create_insn	(0X43E0D200);
	make_array	(0X43E0D206,	0XA);
	create_insn	(0X43E0D210);
	make_array	(0X43E0D216,	0XA);
	create_insn	(0X43E0D220);
	make_array	(0X43E0D226,	0XA);
	create_insn	(0X43E0D230);
	make_array	(0X43E0D236,	0XA);
	create_insn	(0X43E0D240);
	make_array	(0X43E0D246,	0XA);
	create_insn	(0X43E0D250);
	make_array	(0X43E0D256,	0XA);
	create_insn	(0X43E0D260);
	make_array	(0X43E0D266,	0XA);
	create_insn	(0X43E0D270);
	make_array	(0X43E0D276,	0XA);
	create_insn	(0X43E0D280);
	make_array	(0X43E0D286,	0XA);
	create_insn	(0X43E0D290);
	make_array	(0X43E0D296,	0XA);
	create_insn	(0X43E0D2A0);
	make_array	(0X43E0D2A6,	0XA);
	create_insn	(0X43E0D2B0);
	make_array	(0X43E0D2B6,	0XA);
	create_insn	(0X43E0D2C0);
	make_array	(0X43E0D2C6,	0XA);
	create_insn	(0X43E0D2D0);
	make_array	(0X43E0D2D6,	0XA);
	create_insn	(0X43E0D2E0);
	make_array	(0X43E0D2E6,	0XA);
	create_insn	(0X43E0D2F0);
	make_array	(0X43E0D2F6,	0XA);
	create_insn	(0X43E0D300);
	make_array	(0X43E0D306,	0XA);
	create_insn	(0X43E0D310);
	make_array	(0X43E0D316,	0XA);
	create_insn	(0X43E0D320);
	make_array	(0X43E0D326,	0XA);
	create_insn	(0X43E0D330);
	make_array	(0X43E0D336,	0XA);
	create_insn	(0X43E0D340);
	make_array	(0X43E0D346,	0XA);
	create_insn	(0X43E0D350);
	make_array	(0X43E0D356,	0XA);
	create_insn	(0X43E0D360);
	make_array	(0X43E0D366,	0XA);
	create_insn	(0X43E0D370);
	make_array	(0X43E0D376,	0XA);
	create_insn	(0X43E0D380);
	make_array	(0X43E0D386,	0XA);
	create_insn	(0X43E0D390);
	make_array	(0X43E0D396,	0XA);
	create_insn	(0X43E0D3A0);
	make_array	(0X43E0D3A6,	0XA);
	create_insn	(0X43E0D3B0);
	make_array	(0X43E0D3B6,	0XA);
	create_insn	(0X43E0D3C0);
	make_array	(0X43E0D3C6,	0XA);
	create_insn	(0X43E0D3D0);
	make_array	(0X43E0D3D6,	0XA);
	create_insn	(0X43E0D3E0);
	make_array	(0X43E0D3E6,	0XA);
	create_insn	(0X43E0D3F0);
	make_array	(0X43E0D3F6,	0XA);
	create_insn	(0X43E0D400);
	make_array	(0X43E0D406,	0XA);
	create_insn	(0X43E0D410);
	make_array	(0X43E0D416,	0XA);
	create_insn	(0X43E0D420);
	make_array	(0X43E0D426,	0XA);
	create_insn	(0X43E0D430);
	make_array	(0X43E0D436,	0XA);
	create_insn	(0X43E0D440);
	make_array	(0X43E0D446,	0XA);
	create_insn	(0X43E0D450);
	make_array	(0X43E0D456,	0XA);
	create_insn	(0X43E0D460);
	make_array	(0X43E0D466,	0XA);
	create_insn	(0X43E0D470);
	make_array	(0X43E0D476,	0XA);
	create_insn	(0X43E0D480);
	make_array	(0X43E0D486,	0XA);
	create_insn	(0X43E0D490);
	make_array	(0X43E0D496,	0XA);
	create_insn	(0X43E0D4A0);
	make_array	(0X43E0D4A6,	0XA);
	create_insn	(0X43E0D4B0);
	make_array	(0X43E0D4B6,	0XA);
	create_insn	(0X43E0D4C0);
	make_array	(0X43E0D4C6,	0XA);
	create_insn	(0X43E0D4D0);
	make_array	(0X43E0D4D6,	0XA);
	create_insn	(0X43E0D4E0);
	make_array	(0X43E0D4E6,	0XA);
	create_insn	(0X43E0D4F0);
	make_array	(0X43E0D4F6,	0XA);
	create_insn	(0X43E0D500);
	make_array	(0X43E0D506,	0XA);
	create_insn	(0X43E0D510);
	make_array	(0X43E0D516,	0XA);
	create_insn	(0X43E0D520);
	make_array	(0X43E0D526,	0XA);
	create_insn	(0X43E0D530);
	make_array	(0X43E0D536,	0XA);
	create_insn	(0X43E0D540);
	make_array	(0X43E0D546,	0XA);
	create_insn	(0X43E0D550);
	make_array	(0X43E0D556,	0XA);
	create_insn	(0X43E0D560);
	make_array	(0X43E0D566,	0XA);
	create_insn	(0X43E0D570);
	make_array	(0X43E0D576,	0XA);
	create_insn	(0X43E0D580);
	make_array	(0X43E0D586,	0XA);
	create_insn	(0X43E0D590);
	make_array	(0X43E0D596,	0XA);
	create_insn	(0X43E0D5A0);
	make_array	(0X43E0D5A6,	0XA);
	create_insn	(0X43E0D5B0);
	make_array	(0X43E0D5B6,	0XA);
	create_insn	(0X43E0D5C0);
	make_array	(0X43E0D5C6,	0XA);
	create_insn	(0X43E0D5D0);
	make_array	(0X43E0D5D6,	0XA);
	create_insn	(0X43E0D5E0);
	make_array	(0X43E0D5E6,	0XA);
	create_insn	(0X43E0D5F0);
	make_array	(0X43E0D5F6,	0XA);
	create_insn	(0X43E0D600);
	make_array	(0X43E0D606,	0XA);
	create_insn	(0X43E0D610);
	make_array	(0X43E0D616,	0XA);
	create_insn	(0X43E0D620);
	make_array	(0X43E0D626,	0XA);
	create_insn	(0X43E0D630);
	make_array	(0X43E0D636,	0XA);
	create_insn	(x=0X43E0D640);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E0D646,	0XA);
	create_insn	(0X43E0D650);
	make_array	(0X43E0D656,	0XA);
	create_insn	(0X43E0D660);
	make_array	(0X43E0D666,	0XA);
	create_insn	(0X43E0D670);
	make_array	(0X43E0D676,	0XA);
	create_insn	(0X43E0D680);
	make_array	(0X43E0D686,	0XA);
	create_insn	(0X43E0D690);
	make_array	(0X43E0D696,	0XA);
	create_insn	(0X43E0D6A0);
	make_array	(0X43E0D6A6,	0XA);
	create_insn	(0X43E0D6B0);
	make_array	(0X43E0D6B6,	0XA);
	create_insn	(0X43E0D6C0);
	make_array	(0X43E0D6C6,	0XA);
	create_insn	(0X43E0D6D0);
	make_array	(0X43E0D6D6,	0XA);
	create_insn	(0X43E0D6E0);
	make_array	(0X43E0D6E6,	0XA);
	create_insn	(0X43E0D6F0);
	make_array	(0X43E0D6F6,	0XA);
	create_insn	(0X43E0D700);
	make_array	(0X43E0D706,	0XA);
	create_insn	(0X43E0D710);
	make_array	(0X43E0D716,	0XA);
	create_insn	(0X43E0D720);
	make_array	(0X43E0D726,	0XA);
	create_insn	(0X43E0D730);
	make_array	(0X43E0D736,	0XA);
	create_insn	(0X43E0D740);
	make_array	(0X43E0D746,	0XA);
	create_insn	(0X43E0D750);
	make_array	(0X43E0D756,	0XA);
	create_insn	(0X43E0D760);
	make_array	(0X43E0D766,	0XA);
	create_insn	(0X43E0D770);
	make_array	(0X43E0D776,	0XA);
	create_insn	(0X43E0D780);
	make_array	(0X43E0D786,	0XA);
	create_insn	(0X43E0D790);
	make_array	(0X43E0D796,	0XA);
	create_insn	(0X43E0D7A0);
	make_array	(0X43E0D7A6,	0XA);
	create_insn	(0X43E0D7B0);
	make_array	(0X43E0D7B6,	0XA);
	create_insn	(0X43E0D7C0);
	make_array	(0X43E0D7C6,	0XA);
	create_insn	(0X43E0D7D0);
	make_array	(0X43E0D7D6,	0XA);
	create_insn	(0X43E0D7E0);
	make_array	(0X43E0D7E6,	0XA);
	create_insn	(0X43E0D7F0);
	make_array	(0X43E0D7F6,	0XA);
	create_insn	(0X43E0D800);
	make_array	(0X43E0D806,	0XA);
	create_insn	(0X43E0D810);
	make_array	(0X43E0D816,	0XA);
	create_insn	(0X43E0D820);
	make_array	(0X43E0D826,	0XA);
	create_insn	(0X43E0D830);
	make_array	(0X43E0D836,	0XA);
	create_insn	(x=0X43E0D840);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E0D846,	0XA);
	create_insn	(0X43E0D850);
	make_array	(0X43E0D856,	0XA);
	create_insn	(0X43E0D860);
	make_array	(0X43E0D866,	0XA);
	create_insn	(0X43E0D870);
	make_array	(0X43E0D876,	0XA);
	create_insn	(0X43E0D880);
	make_array	(0X43E0D886,	0XA);
	create_insn	(0X43E0D890);
	make_array	(0X43E0D896,	0XA);
	create_insn	(0X43E0D8A0);
	make_array	(0X43E0D8A6,	0XA);
	create_insn	(0X43E0D8B0);
	make_array	(0X43E0D8B6,	0XA);
	create_insn	(0X43E0D8C0);
	make_array	(0X43E0D8C6,	0XA);
	create_insn	(0X43E0D8D0);
	make_array	(0X43E0D8D6,	0XA);
	create_insn	(0X43E0D8E0);
	make_array	(0X43E0D8E6,	0XA);
	create_insn	(0X43E0D8F0);
	make_array	(0X43E0D8F6,	0XA);
	create_insn	(0X43E0D900);
	make_array	(0X43E0D906,	0XA);
	create_insn	(0X43E0D910);
	make_array	(0X43E0D916,	0XA);
	create_insn	(0X43E0D920);
	make_array	(0X43E0D926,	0XA);
	create_insn	(0X43E0D930);
	make_array	(0X43E0D936,	0XA);
	create_insn	(0X43E0D940);
	make_array	(0X43E0D946,	0XA);
	create_insn	(0X43E0D950);
	make_array	(0X43E0D956,	0XA);
	create_insn	(0X43E0D960);
	make_array	(0X43E0D966,	0XA);
	create_insn	(0X43E0D970);
	make_array	(0X43E0D976,	0XA);
	create_insn	(0X43E0D980);
	make_array	(0X43E0D986,	0XA);
	create_insn	(0X43E0D990);
	make_array	(0X43E0D996,	0XA);
	create_insn	(0X43E0D9A0);
	make_array	(0X43E0D9A6,	0XA);
	create_insn	(0X43E0D9B0);
	make_array	(0X43E0D9B6,	0XA);
	create_insn	(0X43E0D9C0);
	make_array	(0X43E0D9C6,	0XA);
	create_insn	(0X43E0D9D0);
	make_array	(0X43E0D9D6,	0XA);
	create_insn	(0X43E0D9E0);
	make_array	(0X43E0D9E6,	0XA);
	create_insn	(0X43E0D9F0);
	make_array	(0X43E0D9F6,	0XA);
	create_insn	(0X43E0DA00);
	make_array	(0X43E0DA06,	0XA);
	create_insn	(0X43E0DA10);
	make_array	(0X43E0DA16,	0XA);
	create_insn	(0X43E0DA20);
	make_array	(0X43E0DA26,	0XA);
	create_insn	(0X43E0DA30);
	make_array	(0X43E0DA36,	0XA);
	create_insn	(0X43E0DA40);
	make_array	(0X43E0DA46,	0XA);
	create_insn	(0X43E0DA50);
	make_array	(0X43E0DA56,	0XA);
	create_insn	(0X43E0DA60);
	make_array	(0X43E0DA66,	0XA);
	create_insn	(0X43E0DA70);
	make_array	(0X43E0DA76,	0XA);
	create_insn	(0X43E0DA80);
	make_array	(0X43E0DA86,	0XA);
	create_insn	(0X43E0DA90);
	make_array	(0X43E0DA96,	0XA);
	create_insn	(0X43E0DAA0);
	make_array	(0X43E0DAA6,	0XA);
	create_insn	(0X43E0DAB0);
	make_array	(0X43E0DAB6,	0XA);
	create_insn	(0X43E0DAC0);
	make_array	(0X43E0DAC6,	0XA);
	create_insn	(0X43E0DAD0);
	make_array	(0X43E0DAD6,	0XA);
	create_insn	(0X43E0DAE0);
	make_array	(0X43E0DAE6,	0XA);
	create_insn	(0X43E0DAF0);
	make_array	(0X43E0DAF6,	0XA);
	create_insn	(0X43E0DB00);
	make_array	(0X43E0DB06,	0XA);
	create_insn	(0X43E0DB10);
	make_array	(0X43E0DB16,	0XA);
	create_insn	(0X43E0DB20);
	make_array	(0X43E0DB26,	0XA);
	create_insn	(0X43E0DB30);
	make_array	(0X43E0DB36,	0XA);
	create_insn	(0X43E0DB40);
	make_array	(0X43E0DB46,	0XA);
	create_insn	(0X43E0DB50);
	make_array	(0X43E0DB56,	0XA);
	create_insn	(0X43E0DB60);
	make_array	(0X43E0DB66,	0XA);
	create_insn	(0X43E0DB70);
	make_array	(0X43E0DB76,	0XA);
	create_insn	(0X43E0DB80);
	make_array	(0X43E0DB86,	0XA);
	create_insn	(0X43E0DB90);
	make_array	(0X43E0DB96,	0XA);
	create_insn	(0X43E0DBA0);
	make_array	(0X43E0DBA6,	0XA);
	create_insn	(0X43E0DBB0);
	make_array	(0X43E0DBB6,	0XA);
	create_insn	(0X43E0DBC0);
	make_array	(0X43E0DBC6,	0XA);
	create_insn	(0X43E0DBD0);
	make_array	(0X43E0DBD6,	0XA);
	create_insn	(0X43E0DBE0);
	make_array	(0X43E0DBE6,	0XA);
	create_insn	(0X43E0DBF0);
	make_array	(0X43E0DBF6,	0XA);
	create_insn	(0X43E0DC00);
	make_array	(0X43E0DC06,	0XA);
	create_insn	(0X43E0DC10);
	make_array	(0X43E0DC16,	0XA);
	create_insn	(0X43E0DC20);
	make_array	(0X43E0DC26,	0XA);
	create_insn	(0X43E0DC30);
	make_array	(0X43E0DC36,	0XA);
	create_insn	(0X43E0DC40);
	make_array	(0X43E0DC46,	0XA);
	create_insn	(0X43E0DC50);
	make_array	(0X43E0DC56,	0XA);
	create_insn	(0X43E0DC60);
	make_array	(0X43E0DC66,	0XA);
	create_insn	(0X43E0DC70);
	make_array	(0X43E0DC76,	0XA);
	create_insn	(0X43E0DC80);
	make_array	(0X43E0DC86,	0XA);
	create_insn	(0X43E0DC90);
	make_array	(0X43E0DC96,	0XA);
	create_insn	(0X43E0DCA0);
	make_array	(0X43E0DCA6,	0XA);
	create_insn	(0X43E0DCB0);
	make_array	(0X43E0DCB6,	0XA);
	create_insn	(0X43E0DCC0);
	make_array	(0X43E0DCC6,	0XA);
	create_insn	(0X43E0DCD0);
	make_array	(0X43E0DCD6,	0XA);
	create_insn	(0X43E0DCE0);
	make_array	(0X43E0DCE6,	0XA);
	create_insn	(0X43E0DCF0);
	make_array	(0X43E0DCF6,	0XA);
	create_insn	(0X43E0DD00);
	make_array	(0X43E0DD06,	0XA);
	create_insn	(0X43E0DD10);
	make_array	(0X43E0DD16,	0XA);
	create_insn	(0X43E0DD20);
	make_array	(0X43E0DD26,	0XA);
	create_insn	(0X43E0DD30);
	make_array	(0X43E0DD36,	0XA);
	create_insn	(0X43E0DD40);
	make_array	(0X43E0DD46,	0XA);
	create_insn	(0X43E0DD50);
	make_array	(0X43E0DD56,	0XA);
	create_insn	(0X43E0DD60);
	make_array	(0X43E0DD66,	0XA);
	create_insn	(0X43E0DD70);
	make_array	(0X43E0DD76,	0XA);
	create_insn	(0X43E0DD80);
	make_array	(0X43E0DD86,	0XA);
	create_insn	(0X43E0DD90);
	make_array	(0X43E0DD96,	0XA);
	create_insn	(0X43E0DDA0);
	make_array	(0X43E0DDA6,	0XA);
	create_insn	(0X43E0DDB0);
	make_array	(0X43E0DDB6,	0XA);
	create_insn	(0X43E0DDC0);
	make_array	(0X43E0DDC6,	0XA);
	create_insn	(0X43E0DDD0);
	make_array	(0X43E0DDD6,	0XA);
	create_insn	(0X43E0DDE0);
	make_array	(0X43E0DDE6,	0XA);
	create_insn	(0X43E0DDF0);
	make_array	(0X43E0DDF6,	0XA);
	create_insn	(0X43E0DE00);
	make_array	(0X43E0DE06,	0XA);
	create_insn	(0X43E0DE10);
	make_array	(0X43E0DE16,	0XA);
	create_insn	(0X43E0DE20);
	make_array	(0X43E0DE26,	0XA);
	create_insn	(0X43E0DE30);
	make_array	(0X43E0DE36,	0XA);
	create_insn	(0X43E0DE40);
	make_array	(0X43E0DE46,	0XA);
	create_insn	(0X43E0DE50);
	make_array	(0X43E0DE56,	0XA);
	create_insn	(0X43E0DE60);
	make_array	(0X43E0DE66,	0XA);
	create_insn	(0X43E0DE70);
	make_array	(0X43E0DE76,	0XA);
	create_insn	(0X43E0DE80);
	make_array	(0X43E0DE86,	0XA);
	create_insn	(0X43E0DE90);
	make_array	(0X43E0DE96,	0XA);
	create_insn	(0X43E0DEA0);
	make_array	(0X43E0DEA6,	0XA);
	create_insn	(0X43E0DEB0);
	make_array	(0X43E0DEB6,	0XA);
	create_insn	(0X43E0DEC0);
	make_array	(0X43E0DEC6,	0XA);
	create_insn	(0X43E0DED0);
	make_array	(0X43E0DED6,	0XA);
	create_insn	(0X43E0DEE0);
	make_array	(0X43E0DEE6,	0XA);
	create_insn	(0X43E0DEF0);
	make_array	(0X43E0DEF6,	0XA);
	create_insn	(0X43E0DF00);
	make_array	(0X43E0DF06,	0XA);
	create_insn	(0X43E0DF10);
	make_array	(0X43E0DF16,	0XA);
	create_insn	(0X43E0DF20);
	make_array	(0X43E0DF26,	0XA);
	create_insn	(0X43E0DF30);
	make_array	(0X43E0DF36,	0XA);
	create_insn	(0X43E0DF40);
	make_array	(0X43E0DF46,	0XA);
	create_insn	(0X43E0DF50);
	make_array	(0X43E0DF56,	0XA);
	create_insn	(0X43E0DF60);
	make_array	(0X43E0DF66,	0XA);
	create_insn	(0X43E0DF70);
	make_array	(0X43E0DF76,	0XA);
	create_insn	(0X43E0DF80);
	make_array	(0X43E0DF86,	0XA);
	create_insn	(0X43E0DF90);
	make_array	(0X43E0DF96,	0XA);
	create_insn	(0X43E0DFA0);
	make_array	(0X43E0DFA6,	0XA);
	create_insn	(0X43E0DFB0);
	make_array	(0X43E0DFB6,	0XA);
	create_insn	(0X43E0DFC0);
	make_array	(0X43E0DFC6,	0XA);
	create_insn	(0X43E0DFD0);
	make_array	(0X43E0DFD6,	0XA);
	create_insn	(0X43E0DFE0);
	make_array	(0X43E0DFE6,	0XA);
	create_insn	(0X43E0DFF0);
	make_array	(0X43E0DFF6,	0XA);
	create_insn	(0X43E0E000);
	make_array	(0X43E0E006,	0XA);
	create_insn	(0X43E0E010);
	make_array	(0X43E0E016,	0XA);
	create_insn	(0X43E0E020);
	make_array	(0X43E0E026,	0XA);
	create_insn	(0X43E0E030);
	make_array	(0X43E0E036,	0XA);
	create_insn	(0X43E0E040);
	make_array	(0X43E0E046,	0XA);
	create_insn	(0X43E0E050);
	make_array	(0X43E0E056,	0XA);
	create_insn	(0X43E0E060);
	make_array	(0X43E0E066,	0XA);
	create_insn	(0X43E0E070);
	make_array	(0X43E0E076,	0XA);
	create_insn	(0X43E0E080);
	make_array	(0X43E0E086,	0XA);
	create_insn	(0X43E0E090);
	make_array	(0X43E0E096,	0XA);
	create_insn	(0X43E0E0A0);
	make_array	(0X43E0E0A6,	0XA);
	create_insn	(0X43E0E0B0);
	make_array	(0X43E0E0B6,	0XA);
	create_insn	(0X43E0E0C0);
	make_array	(0X43E0E0C6,	0XA);
	create_insn	(0X43E0E0D0);
	make_array	(0X43E0E0D6,	0XA);
	create_insn	(0X43E0E0E0);
	make_array	(0X43E0E0E6,	0XA);
	create_insn	(0X43E0E0F0);
	make_array	(0X43E0E0F6,	0XA);
	create_insn	(0X43E0E100);
	make_array	(0X43E0E106,	0XA);
	create_insn	(0X43E0E110);
	make_array	(0X43E0E116,	0XA);
	create_insn	(0X43E0E120);
	make_array	(0X43E0E126,	0XA);
	create_insn	(0X43E0E130);
	make_array	(0X43E0E136,	0XA);
	create_insn	(0X43E0E140);
	make_array	(0X43E0E146,	0XA);
	create_insn	(0X43E0E150);
	make_array	(0X43E0E156,	0XA);
	create_insn	(0X43E0E160);
	make_array	(0X43E0E166,	0XA);
	create_insn	(0X43E0E170);
	make_array	(0X43E0E176,	0XA);
	create_insn	(0X43E0E180);
	make_array	(0X43E0E186,	0XA);
	create_insn	(0X43E0E190);
	make_array	(0X43E0E196,	0XA);
	create_insn	(0X43E0E1A0);
	make_array	(0X43E0E1A6,	0XA);
	create_insn	(0X43E0E1B0);
	make_array	(0X43E0E1B6,	0XA);
	create_insn	(0X43E0E1C0);
	make_array	(0X43E0E1C6,	0XA);
	create_insn	(0X43E0E1D0);
	make_array	(0X43E0E1D6,	0XA);
	create_insn	(0X43E0E1E0);
	make_array	(0X43E0E1E6,	0XA);
	create_insn	(0X43E0E1F0);
	make_array	(0X43E0E1F6,	0XA);
	create_insn	(0X43E0E200);
	make_array	(0X43E0E206,	0XA);
	create_insn	(0X43E0E210);
	make_array	(0X43E0E216,	0XA);
	create_insn	(0X43E0E220);
	make_array	(0X43E0E226,	0XA);
	create_insn	(0X43E0E230);
	make_array	(0X43E0E236,	0XA);
	create_insn	(0X43E0E240);
	make_array	(0X43E0E246,	0XA);
	create_insn	(0X43E0E250);
	make_array	(0X43E0E256,	0XA);
	create_insn	(0X43E0E260);
	make_array	(0X43E0E266,	0XA);
	create_insn	(0X43E0E270);
	make_array	(0X43E0E276,	0XA);
	create_insn	(0X43E0E280);
	make_array	(0X43E0E286,	0XA);
	create_insn	(0X43E0E290);
	make_array	(0X43E0E296,	0XA);
	create_insn	(0X43E0E2A0);
	make_array	(0X43E0E2A6,	0XA);
	create_insn	(0X43E0E2B0);
	make_array	(0X43E0E2B6,	0XA);
	create_insn	(0X43E0E2C0);
	make_array	(0X43E0E2C6,	0XA);
	create_insn	(0X43E0E2D0);
	make_array	(0X43E0E2D6,	0XA);
	create_insn	(0X43E0E2E0);
	make_array	(0X43E0E2E6,	0XA);
	create_insn	(0X43E0E2F0);
	make_array	(0X43E0E2F6,	0XA);
	create_insn	(0X43E0E300);
	make_array	(0X43E0E306,	0XA);
	create_insn	(0X43E0E310);
	make_array	(0X43E0E316,	0XA);
	create_insn	(0X43E0E320);
	make_array	(0X43E0E326,	0XA);
	create_insn	(0X43E0E330);
	make_array	(0X43E0E336,	0XA);
	create_insn	(0X43E0E340);
	make_array	(0X43E0E346,	0XA);
	create_insn	(0X43E0E350);
	make_array	(0X43E0E356,	0XA);
	create_insn	(0X43E0E360);
	make_array	(0X43E0E366,	0XA);
	create_insn	(0X43E0E370);
	make_array	(0X43E0E376,	0XA);
	create_insn	(0X43E0E380);
	make_array	(0X43E0E386,	0XA);
	create_insn	(0X43E0E390);
	make_array	(0X43E0E396,	0XA);
	create_insn	(0X43E0E3A0);
	make_array	(0X43E0E3A6,	0XA);
	create_insn	(0X43E0E3B0);
	make_array	(0X43E0E3B6,	0XA);
	create_insn	(0X43E0E3C0);
	make_array	(0X43E0E3C6,	0XA);
	create_insn	(0X43E0E3D0);
	make_array	(0X43E0E3D6,	0XA);
	create_insn	(0X43E0E3E0);
	make_array	(0X43E0E3E6,	0XA);
	create_insn	(0X43E0E3F0);
	make_array	(0X43E0E3F6,	0XA);
	create_insn	(0X43E0E400);
	make_array	(0X43E0E406,	0XA);
	create_insn	(0X43E0E410);
	make_array	(0X43E0E416,	0XA);
	create_insn	(0X43E0E420);
	make_array	(0X43E0E426,	0XA);
	create_insn	(0X43E0E430);
	make_array	(0X43E0E436,	0XA);
	create_insn	(0X43E0E440);
	make_array	(0X43E0E446,	0XA);
	create_insn	(0X43E0E450);
	make_array	(0X43E0E456,	0XA);
	create_insn	(0X43E0E460);
	make_array	(0X43E0E466,	0XA);
	create_insn	(0X43E0E470);
	make_array	(0X43E0E476,	0XA);
	create_insn	(0X43E0E480);
	make_array	(0X43E0E486,	0XA);
	create_insn	(0X43E0E490);
	make_array	(0X43E0E496,	0XA);
	create_insn	(0X43E0E4A0);
	make_array	(0X43E0E4A6,	0XA);
	create_insn	(0X43E0E4B0);
	make_array	(0X43E0E4B6,	0XA);
	create_insn	(0X43E0E4C0);
	make_array	(0X43E0E4C6,	0XA);
	create_insn	(0X43E0E4D0);
	make_array	(0X43E0E4D6,	0XA);
	create_insn	(0X43E0E4E0);
	make_array	(0X43E0E4E6,	0XA);
	create_insn	(0X43E0E4F0);
	make_array	(0X43E0E4F6,	0XA);
	create_insn	(0X43E0E500);
	make_array	(0X43E0E506,	0XA);
	create_insn	(0X43E0E510);
	make_array	(0X43E0E516,	0XA);
	create_insn	(0X43E0E520);
	make_array	(0X43E0E526,	0XA);
	create_insn	(0X43E0E530);
	make_array	(0X43E0E536,	0XA);
	create_insn	(0X43E0E540);
	make_array	(0X43E0E546,	0XA);
	create_insn	(0X43E0E550);
	make_array	(0X43E0E556,	0XA);
	create_insn	(0X43E0E560);
	make_array	(0X43E0E566,	0XA);
	create_insn	(0X43E0E570);
	make_array	(0X43E0E576,	0XA);
	create_insn	(0X43E0E580);
	make_array	(0X43E0E586,	0XA);
	create_insn	(0X43E0E590);
	make_array	(0X43E0E596,	0XA);
	create_insn	(0X43E0E5A0);
	make_array	(0X43E0E5A6,	0XA);
	create_insn	(0X43E0E5B0);
	make_array	(0X43E0E5B6,	0XA);
	create_insn	(0X43E0E5C0);
	make_array	(0X43E0E5C6,	0XA);
	create_insn	(0X43E0E5D0);
	make_array	(0X43E0E5D6,	0XA);
	create_insn	(0X43E0E5E0);
	make_array	(0X43E0E5E6,	0XA);
	create_insn	(0X43E0E5F0);
	make_array	(0X43E0E5F6,	0XA);
	create_insn	(0X43E0E600);
	make_array	(0X43E0E606,	0XA);
	create_insn	(0X43E0E610);
	make_array	(0X43E0E616,	0XA);
	create_insn	(x=0X43E0E620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E0E626,	0XA);
	create_insn	(0X43E0E630);
	make_array	(0X43E0E636,	0XA);
	create_insn	(0X43E0E640);
	make_array	(0X43E0E646,	0XA);
	create_insn	(0X43E0E650);
	make_array	(0X43E0E656,	0XA);
	create_insn	(0X43E0E660);
	make_array	(0X43E0E666,	0XA);
	create_insn	(0X43E0E670);
	make_array	(0X43E0E676,	0XA);
	create_insn	(0X43E0E680);
	make_array	(0X43E0E686,	0XA);
	create_insn	(0X43E0E690);
	make_array	(0X43E0E696,	0XA);
	create_insn	(0X43E0E6A0);
	make_array	(0X43E0E6A6,	0XA);
	create_insn	(0X43E0E6B0);
	make_array	(0X43E0E6B6,	0XA);
	create_insn	(0X43E0E6C0);
	make_array	(0X43E0E6C6,	0XA);
	create_insn	(0X43E0E6D0);
	make_array	(0X43E0E6D6,	0XA);
	create_insn	(0X43E0E6E0);
	make_array	(0X43E0E6E6,	0XA);
	create_insn	(0X43E0E6F0);
	make_array	(0X43E0E6F6,	0XA);
	create_insn	(0X43E0E700);
	make_array	(0X43E0E706,	0XA);
	create_insn	(0X43E0E710);
	make_array	(0X43E0E716,	0XA);
	create_insn	(0X43E0E720);
	make_array	(0X43E0E726,	0XA);
	create_insn	(0X43E0E730);
	make_array	(0X43E0E736,	0XA);
	create_insn	(0X43E0E740);
	make_array	(0X43E0E746,	0XA);
	create_insn	(0X43E0E750);
	make_array	(0X43E0E756,	0XA);
	create_insn	(0X43E0E760);
	make_array	(0X43E0E766,	0XA);
	create_insn	(0X43E0E770);
	make_array	(0X43E0E776,	0XA);
	create_insn	(0X43E0E780);
	make_array	(0X43E0E786,	0XA);
	create_insn	(0X43E0E790);
	make_array	(0X43E0E796,	0XA);
	create_insn	(0X43E0E7A0);
	make_array	(0X43E0E7A6,	0XA);
	create_insn	(0X43E0E7B0);
	make_array	(0X43E0E7B6,	0XA);
	create_insn	(0X43E0E7C0);
	make_array	(0X43E0E7C6,	0XA);
	create_insn	(0X43E0E7D0);
	make_array	(0X43E0E7D6,	0XA);
	create_insn	(0X43E0E7E0);
	make_array	(0X43E0E7E6,	0XA);
	create_insn	(0X43E0E7F0);
	make_array	(0X43E0E7F6,	0XA);
	create_insn	(0X43E0E800);
	make_array	(0X43E0E806,	0XA);
	create_insn	(0X43E0E810);
	make_array	(0X43E0E816,	0XA);
	create_insn	(0X43E0E820);
	make_array	(0X43E0E826,	0XA);
	create_insn	(0X43E0E830);
	make_array	(0X43E0E836,	0XA);
	create_insn	(0X43E0E840);
	make_array	(0X43E0E846,	0XA);
	create_insn	(0X43E0E850);
	make_array	(0X43E0E856,	0XA);
	create_insn	(0X43E0E860);
	make_array	(0X43E0E866,	0XA);
	create_insn	(0X43E0E870);
	make_array	(0X43E0E876,	0XA);
	create_insn	(0X43E0E880);
	make_array	(0X43E0E886,	0XA);
	create_insn	(0X43E0E890);
	make_array	(0X43E0E896,	0XA);
	create_insn	(0X43E0E8A0);
	make_array	(0X43E0E8A6,	0XA);
	create_insn	(0X43E0E8B0);
	make_array	(0X43E0E8B6,	0XA);
	create_insn	(0X43E0E8C0);
	make_array	(0X43E0E8C6,	0XA);
	create_insn	(0X43E0E8D0);
	make_array	(0X43E0E8D6,	0XA);
	create_insn	(0X43E0E8E0);
	make_array	(0X43E0E8E6,	0XA);
	create_insn	(0X43E0E8F0);
	make_array	(0X43E0E8F6,	0XA);
	create_insn	(0X43E0E900);
	make_array	(0X43E0E906,	0XA);
	create_insn	(0X43E0E910);
	make_array	(0X43E0E916,	0XA);
	create_insn	(0X43E0E920);
	make_array	(0X43E0E926,	0XA);
	create_insn	(0X43E0E930);
	make_array	(0X43E0E936,	0XA);
	create_insn	(0X43E0E940);
	make_array	(0X43E0E946,	0XA);
	create_insn	(0X43E0E950);
	make_array	(0X43E0E956,	0XA);
	create_insn	(0X43E0E960);
	make_array	(0X43E0E966,	0XA);
	create_insn	(0X43E0E970);
	make_array	(0X43E0E976,	0XA);
	create_insn	(0X43E0E980);
	make_array	(0X43E0E986,	0XA);
	create_insn	(0X43E0E990);
	make_array	(0X43E0E996,	0XA);
	create_insn	(0X43E0E9A0);
	create_insn	(0X43E0E9D1);
	make_array	(0X43E0E9F3,	0XD);
	create_insn	(0X43E0EA00);
	make_array	(0X43E0EA06,	0XA);
	create_insn	(0X43E0EA10);
	make_array	(0X43E0EA1C,	0X4);
	create_insn	(0X43E0EA20);
	make_array	(0X43E0EA2D,	0X3);
	create_insn	(0X43E0EA30);
	create_insn	(0X43E0EA40);
	create_insn	(0X43E0EA50);
	make_array	(0X43E0EA5E,	0X2);
	create_insn	(0X43E0EA60);
	create_insn	(0X43E0EA88);
	make_array	(0X43E0EA95,	0XB);
	create_insn	(0X43E0EAA0);
	create_insn	(0X43E0EACD);
	make_array	(0X43E0EADA,	0X6);
	create_insn	(0X43E0EAE0);
	create_insn	(x=0X43E0EAF1);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EB00);
	op_hex		(x,	1);
	make_array	(0X43E0EB06,	0XA);
	create_insn	(0X43E0EB10);
	create_insn	(x=0X43E0EB15);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E0EB28);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EB44);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EB49);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EB53);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EB72);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EB7D);
	op_hex		(x,	1);
	create_insn	(0X43E0EB91);
	create_insn	(0X43E0EBDF);
	create_insn	(0X43E0EC27);
	create_byte	(0X43E0EC40);
	make_array	(0X43E0EC40,	0X10);
	create_insn	(0X43E0EC50);
	create_insn	(x=0X43E0EC61);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EC93);
	op_hex		(x,	1);
	create_insn	(0X43E0ECB8);
	make_array	(0X43E0ECBE,	0X2);
	create_insn	(0X43E0ECC0);
	make_array	(0X43E0ECF1,	0XF);
	create_insn	(0X43E0ED00);
	make_array	(0X43E0ED34,	0XC);
	create_insn	(0X43E0ED40);
	create_insn	(x=0X43E0ED43);
	op_hex		(x,	1);
	create_insn	(x=0X43E0ED5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E0ED8B);
	op_hex		(x,	1);
	create_insn	(x=0X43E0ED8E);
	op_hex		(x,	1);
	create_insn	(x=0X43E0ED91);
	op_hex		(x,	1);
	create_insn	(x=0X43E0ED9F);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EDAC);
	op_hex		(x,	1);
	create_insn	(0X43E0EDCB);
	create_insn	(x=0X43E0EDDD);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EDE2);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EE41);
	op_hex		(x,	1);
	create_insn	(0X43E0EE4B);
	create_insn	(x=0X43E0EE54);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EE62);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EE76);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EEF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EF20);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EF57);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EFBB);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EFD6);
	op_hex		(x,	1);
	create_insn	(x=0X43E0EFE8);
	op_hex		(x,	1);
	create_insn	(0X43E0F002);
	make_array	(0X43E0F054,	0XC);
	create_insn	(0X43E0F060);
	create_insn	(x=0X43E0F063);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F07E);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F090);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F09C);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F0AD);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F107);
	op_hex		(x,	1);
	create_insn	(0X43E0F10F);
	create_insn	(x=0X43E0F119);
	op_hex		(x,	1);
	create_insn	(0X43E0F1BA);
	create_insn	(0X43E0F2C0);
	create_insn	(0X43E0F339);
	create_insn	(0X43E0F377);
	make_array	(0X43E0F386,	0XA);
	create_insn	(0X43E0F390);
	create_insn	(x=0X43E0F393);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F3A9);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F401);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F436);
	op_hex		(x,	1);
	make_array	(0X43E0F475,	0XB);
	create_insn	(0X43E0F480);
	create_insn	(x=0X43E0F485);
	op_hex		(x,	1);
	make_array	(0X43E0F518,	0X8);
	create_insn	(0X43E0F520);
	create_insn	(x=0X43E0F56D);
	op_hex		(x,	1);
	create_insn	(0X43E0F587);
	make_array	(0X43E0F58C,	0X4);
	create_insn	(0X43E0F590);
	create_insn	(x=0X43E0F595);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E0F5A8);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F5AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0F5B8);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F5C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0F5C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0F5CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0F5D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0F5E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0F5EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0F5ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E0F5F8);
	op_stkvar	(x,	1);
	create_insn	(0X43E0F60B);
	set_cmt	(0X43E0F61F,	"Trap to Debugger",	0);
	create_insn	(x=0X43E0F61F);
	op_hex		(x,	0);
	create_insn	(0X43E0F620);
	create_insn	(0X43E0F64E);
	set_cmt	(0X43E0F679,	"Size",	0);
	create_insn	(x=0X43E0F682);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F6A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E0F6BB);
	create_byte	(0X43E0F6C0);
	make_array	(0X43E0F6C0,	0X10);
	create_insn	(0X43E0F6D0);
	create_insn	(0X43E0F6FE);
	set_cmt	(0X43E0F729,	"Size",	0);
	create_insn	(x=0X43E0F732);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F754);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E0F76B);
	make_array	(0X43E0F770,	0X10);
	create_insn	(0X43E0F780);
	create_insn	(x=0X43E0F7AB);
	op_hex		(x,	1);
	make_array	(0X43E0F7BB,	0X5);
	create_insn	(0X43E0F7C0);
	create_insn	(x=0X43E0F806);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F818);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F83C);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F85D);
	op_hex		(x,	1);
	create_insn	(0X43E0F862);
	make_array	(0X43E0F868,	0X8);
	create_insn	(0X43E0F870);
	create_insn	(x=0X43E0F8BD);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F8D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F8F7);
	op_hex		(x,	1);
	create_insn	(x=0X43E0F925);
	op_hex		(x,	1);
	create_insn	(0X43E0F92A);
	create_insn	(0X43E0F940);
	create_insn	(x=0X43E0F943);
	op_hex		(x,	1);
	create_insn	(0X43E0F956);
	create_insn	(0X43E0F9B0);
	create_insn	(0X43E0F9BD);
	create_insn	(0X43E0FB1F);
	create_insn	(0X43E0FB2C);
	create_insn	(0X43E0FB4E);
	make_array	(0X43E0FD04,	0XC);
	create_insn	(0X43E0FD10);
	create_insn	(x=0X43E0FD13);
	op_hex		(x,	1);
	create_insn	(x=0X43E0FD16);
	op_hex		(x,	1);
	create_insn	(x=0X43E0FD19);
	op_hex		(x,	1);
	create_insn	(x=0X43E0FD26);
	op_hex		(x,	1);
	create_insn	(0X43E0FD80);
	create_insn	(0X43E0FD9F);
	create_insn	(0X43E0FDAB);
	create_insn	(0X43E0FE39);
	create_insn	(0X43E0FE4A);
	create_insn	(0X43E0FE63);
	create_insn	(0X43E0FE87);
	make_array	(0X43E0FF70,	0X10);
	create_insn	(0X43E0FF80);
	create_insn	(x=0X43E0FF89);
	op_hex		(x,	1);
	create_insn	(0X43E0FFB7);
	create_insn	(x=0X43E0FFD7);
	op_hex		(x,	1);
	create_insn	(0X43E0FFDC);
	create_insn	(x=0X43E0FFE7);
	op_hex		(x,	1);
	set_cmt	(0X43E0FFEF,	"Size",	0);
	create_insn	(x=0X43E0FFF7);
	op_hex		(x,	1);
	create_insn	(x=0X43E10005);
	op_hex		(x,	1);
	create_insn	(0X43E10013);
	set_cmt	(0X43E10017,	"Size",	0);
	create_insn	(x=0X43E10023);
	op_hex		(x,	1);
	create_insn	(0X43E10028);
	create_insn	(x=0X43E1004E);
	op_hex		(x,	1);
	create_insn	(x=0X43E10051);
	op_hex		(x,	1);
	create_insn	(x=0X43E1007A);
	op_hex		(x,	1);
	set_cmt	(0X43E1007D,	"num",	0);
	set_cmt	(0X43E10083,	"value",	0);
	set_cmt	(0X43E10085,	"pointer",	0);
	set_cmt	(0X43E1008B,	"num",	0);
	set_cmt	(0X43E1008F,	"value",	0);
	set_cmt	(0X43E10091,	"pointer",	0);
	create_insn	(x=0X43E10099);
	op_hex		(x,	1);
	create_insn	(x=0X43E100CC);
	op_hex		(x,	1);
	set_cmt	(0X43E100CF,	"num",	0);
	set_cmt	(0X43E100D0,	"value",	0);
	set_cmt	(0X43E100D5,	"pointer",	0);
	create_insn	(x=0X43E100E7);
	op_hex		(x,	1);
	create_insn	(x=0X43E1011F);
	op_hex		(x,	1);
	create_insn	(0X43E10136);
	make_array	(0X43E10141,	0XF);
	create_insn	(0X43E10150);
	make_array	(0X43E10257,	0X9);
	create_insn	(0X43E10260);
	create_insn	(x=0X43E10263);
	op_hex		(x,	1);
	create_insn	(x=0X43E10266);
	op_hex		(x,	1);
	set_cmt	(0X43E1026C,	"arg",	0);
	create_insn	(0X43E1038B);
	make_array	(0X43E1042B,	0X5);
	create_insn	(0X43E10430);
	make_array	(0X43E10448,	0X8);
	create_insn	(0X43E10450);
	create_insn	(0X43E104C8);
	make_array	(0X43E104E1,	0XF);
	create_insn	(0X43E104F0);
	make_array	(0X43E10521,	0XF);
	create_insn	(0X43E10530);
	create_insn	(x=0X43E10533);
	op_hex		(x,	1);
	create_insn	(0X43E105AB);
	create_insn	(0X43E10618);
	make_array	(0X43E10622,	0XE);
	create_insn	(0X43E10630);
	create_insn	(0X43E106A0);
	make_array	(0X43E106B5,	0XB);
	create_insn	(0X43E106C0);
	make_array	(0X43E106DC,	0X4);
	create_insn	(0X43E106E0);
	create_insn	(x=0X43E106E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E106E6);
	op_hex		(x,	1);
	set_cmt	(0X43E106ED,	"arg",	0);
	create_insn	(0X43E10B99);
	create_insn	(0X43E10BAF);
	create_insn	(0X43E10DFC);
	make_array	(0X43E10E06,	0XA);
	create_insn	(0X43E10E10);
	create_insn	(x=0X43E10E15);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E10E28);
	op_hex		(x,	1);
	create_insn	(x=0X43E10E42);
	op_hex		(x,	1);
	create_insn	(x=0X43E10E47);
	op_hex		(x,	1);
	create_insn	(x=0X43E10E51);
	op_hex		(x,	1);
	create_insn	(x=0X43E10E70);
	op_hex		(x,	1);
	create_insn	(x=0X43E10E7B);
	op_hex		(x,	1);
	create_insn	(0X43E10E8F);
	create_insn	(x=0X43E10F73);
	op_hex		(x,	1);
	create_insn	(0X43E10F7B);
	create_insn	(0X43E10FC3);
	make_array	(0X43E10FDC,	0X4);
	create_insn	(0X43E10FE0);
	make_array	(0X43E11039,	0X7);
	create_insn	(0X43E11040);
	create_insn	(x=0X43E11045);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E11058);
	op_hex		(x,	1);
	create_insn	(x=0X43E11071);
	op_hex		(x,	1);
	create_insn	(x=0X43E11076);
	op_hex		(x,	1);
	create_insn	(x=0X43E11083);
	op_hex		(x,	1);
	create_insn	(x=0X43E110A2);
	op_hex		(x,	1);
	create_insn	(x=0X43E110AD);
	op_hex		(x,	1);
	create_insn	(0X43E110C1);
	create_insn	(x=0X43E110F6);
	op_hex		(x,	1);
	create_insn	(x=0X43E1110C);
	op_hex		(x,	1);
	create_insn	(0X43E11111);
	create_insn	(0X43E11156);
	create_insn	(0X43E11170);
	create_insn	(x=0X43E11181);
	op_hex		(x,	1);
	create_insn	(x=0X43E111B0);
	op_hex		(x,	1);
	create_insn	(0X43E111CF);
	make_array	(0X43E111D5,	0XB);
	create_insn	(0X43E111E0);
	make_array	(0X43E11262,	0XE);
	create_insn	(0X43E11270);
	create_insn	(x=0X43E11280);
	op_hex		(x,	1);
	create_insn	(0X43E11285);
	create_insn	(x=0X43E11290);
	op_hex		(x,	1);
	set_cmt	(0X43E11298,	"Size",	0);
	create_insn	(x=0X43E112A0);
	op_hex		(x,	1);
	create_insn	(x=0X43E112AA);
	op_hex		(x,	1);
	create_insn	(0X43E112B4);
	set_cmt	(0X43E112BE,	"Size",	0);
	create_insn	(x=0X43E112C4);
	op_hex		(x,	1);
	create_insn	(0X43E112CB);
	make_array	(0X43E112D1,	0XF);
	create_insn	(0X43E112E0);
	create_insn	(x=0X43E1130B);
	op_hex		(x,	1);
	create_insn	(0X43E11312);
	make_array	(0X43E11318,	0X8);
	create_insn	(0X43E11320);
	make_array	(0X43E11396,	0XA);
	create_insn	(0X43E113A0);
	create_insn	(x=0X43E113AD);
	op_hex		(x,	1);
	create_insn	(x=0X43E113CA);
	op_hex		(x,	1);
	create_insn	(0X43E113D2);
	make_array	(0X43E113D7,	0X9);
	create_insn	(0X43E113E0);
	make_array	(0X43E11423,	0XD);
	create_insn	(0X43E11430);
	create_insn	(x=0X43E11433);
	op_hex		(x,	1);
	create_insn	(x=0X43E11436);
	op_hex		(x,	1);
	create_insn	(x=0X43E114F4);
	op_hex		(x,	1);
	create_insn	(0X43E11503);
	create_insn	(x=0X43E1159A);
	op_hex		(x,	1);
	set_cmt	(0X43E115A3,	"index",	0);
	set_cmt	(0X43E115A8,	"interface",	0);
	set_cmt	(0X43E115E7,	"this",	0);
	create_insn	(x=0X43E115FB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E11610,	"index",	0);
	set_cmt	(0X43E1161F,	"interface",	0);
	set_cmt	(0X43E1165E,	"this",	0);
	create_insn	(x=0X43E1166B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43E11691,	0XF);
	create_insn	(0X43E116A0);
	create_insn	(x=0X43E116AE);
	op_hex		(x,	1);
	create_insn	(x=0X43E116BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E116E6);
	op_hex		(x,	1);
	create_insn	(0X43E116F9);
	set_cmt	(0X43E116FF,	"Trap to Debugger",	0);
	create_insn	(x=0X43E116FF);
	op_hex		(x,	0);
	create_insn	(x=0X43E11700);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E11772,	0XE);
	create_insn	(0X43E11780);
	set_name	(0X43E11780,	"C_SDK::CUserCmd::Operator::Copy");
	create_insn	(x=0X43E11783);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E11786);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E1182E,	0X2);
	create_insn	(0X43E11830);
	create_insn	(x=0X43E11832);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1184F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1186F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1188F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E118AF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E118CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E118EF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1190F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1192F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1194F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1196F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1198F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E119AF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E119D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E119D7,	0X9);
	create_insn	(0X43E119E0);
	set_cmt	(0X43E119E5,	"num",	0);
	set_cmt	(0X43E119E7,	"value",	0);
	set_cmt	(0X43E119F5,	"pointer",	0);
	set_cmt	(0X43E11A1E,	"num",	0);
	set_cmt	(0X43E11A27,	"value",	0);
	set_cmt	(0X43E11A29,	"pointer",	0);
	create_insn	(x=0X43E11A36);
	op_hex		(x,	1);
	set_cmt	(0X43E11A9E,	"num",	0);
	set_cmt	(0X43E11BA2,	"value",	0);
	set_cmt	(0X43E11BA4,	"pointer",	0);
	set_cmt	(0X43E11CE7,	"num",	0);
	set_cmt	(0X43E11CE9,	"value",	0);
	set_cmt	(0X43E11D27,	"pointer",	0);
	create_insn	(x=0X43E11D37);
	op_hex		(x,	1);
	set_cmt	(0X43E11DAC,	"num",	0);
	set_cmt	(0X43E11DAE,	"value",	0);
	set_cmt	(0X43E11DEC,	"pointer",	0);
	create_insn	(x=0X43E11DFC);
	op_hex		(x,	1);
	make_array	(0X43E12147,	0X9);
	create_insn	(x=0X43E12150);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1215A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E12164);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E12180);
	create_insn	(x=0X43E12190);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E121A7);
	op_hex		(x,	1);
	create_insn	(x=0X43E121DD);
	op_hex		(x,	1);
	create_insn	(0X43E121F0);
	create_insn	(0X43E12200);
	create_insn	(x=0X43E12203);
	op_hex		(x,	1);
	create_insn	(x=0X43E1220A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1221A);
	op_hex		(x,	1);
	make_array	(0X43E12224,	0XC);
	create_insn	(0X43E12230);
	set_cmt	(0X43E12269,	"Size",	0);
	create_insn	(x=0X43E12273);
	op_hex		(x,	1);
	make_array	(0X43E122A8,	0X8);
	create_insn	(0X43E122B0);
	create_insn	(x=0X43E12303);
	op_hex		(x,	1);
	create_insn	(x=0X43E12346);
	op_hex		(x,	1);
	create_insn	(x=0X43E12357);
	op_hex		(x,	1);
	create_insn	(x=0X43E1237B);
	op_hex		(x,	1);
	create_insn	(x=0X43E1239C);
	op_hex		(x,	1);
	create_insn	(0X43E123A2);
	create_insn	(0X43E123B0);
	create_insn	(x=0X43E123B3);
	op_hex		(x,	1);
	create_insn	(0X43E123C6);
	create_insn	(x=0X43E124E0);
	op_hex		(x,	1);
	create_insn	(0X43E12506);
	create_insn	(0X43E12532);
	create_insn	(0X43E12554);
	create_insn	(x=0X43E12625);
	op_hex		(x,	1);
	create_insn	(0X43E12654);
	make_array	(0X43E12689,	0X7);
	create_insn	(0X43E12690);
	create_insn	(x=0X43E12693);
	op_hex		(x,	1);
	create_insn	(0X43E126D1);
	create_insn	(x=0X43E126E5);
	op_hex		(x,	1);
	create_insn	(0X43E126EA);
	create_insn	(x=0X43E126F5);
	op_hex		(x,	1);
	set_cmt	(0X43E126FD,	"Size",	0);
	create_insn	(x=0X43E12705);
	op_hex		(x,	1);
	create_insn	(x=0X43E12713);
	op_hex		(x,	1);
	create_insn	(0X43E1271B);
	set_cmt	(0X43E1271F,	"Size",	0);
	create_insn	(x=0X43E12725);
	op_hex		(x,	1);
	create_insn	(0X43E1272A);
	create_insn	(x=0X43E12751);
	op_hex		(x,	1);
	create_insn	(x=0X43E12754);
	op_hex		(x,	1);
	create_insn	(x=0X43E1277B);
	op_hex		(x,	1);
	set_cmt	(0X43E1277E,	"num",	0);
	set_cmt	(0X43E12784,	"value",	0);
	set_cmt	(0X43E12786,	"pointer",	0);
	set_cmt	(0X43E1278C,	"num",	0);
	set_cmt	(0X43E12790,	"value",	0);
	set_cmt	(0X43E12792,	"pointer",	0);
	create_insn	(0X43E1279A);
	create_insn	(x=0X43E127CD);
	op_hex		(x,	1);
	set_cmt	(0X43E127D0,	"num",	0);
	set_cmt	(0X43E127D1,	"value",	0);
	set_cmt	(0X43E127D6,	"pointer",	0);
	create_insn	(x=0X43E127E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E127EF);
	op_hex		(x,	1);
	create_insn	(x=0X43E12813);
	op_hex		(x,	1);
	create_insn	(0X43E12825);
	make_array	(0X43E12830,	0X10);
	create_insn	(0X43E12840);
	create_insn	(x=0X43E1284F);
	op_hex		(x,	1);
	make_array	(0X43E12863,	0XD);
	create_insn	(0X43E12870);
	make_array	(0X43E12884,	0XC);
	create_insn	(0X43E12890);
	create_insn	(x=0X43E12893);
	op_hex		(x,	1);
	create_insn	(x=0X43E128CC);
	op_hex		(x,	1);
	make_array	(0X43E128D3,	0XD);
	create_insn	(0X43E128E0);
	create_insn	(x=0X43E128F4);
	op_hex		(x,	1);
	create_insn	(x=0X43E128F9);
	op_hex		(x,	1);
	create_insn	(x=0X43E128FE);
	op_hex		(x,	1);
	create_insn	(x=0X43E12904);
	op_hex		(x,	1);
	create_insn	(x=0X43E1290D);
	op_hex		(x,	1);
	create_insn	(x=0X43E1291D);
	op_hex		(x,	1);
	create_insn	(x=0X43E12925);
	op_hex		(x,	1);
	create_insn	(x=0X43E12928);
	op_hex		(x,	1);
	create_insn	(0X43E1293B);
	create_insn	(0X43E12951);
	create_insn	(0X43E12965);
	create_insn	(0X43E1297F);
	create_insn	(x=0X43E129A3);
	op_hex		(x,	1);
	create_insn	(0X43E12A22);
	make_array	(0X43E12A62,	0XE);
	create_insn	(0X43E12A70);
	create_insn	(x=0X43E12A73);
	op_hex		(x,	1);
	create_insn	(x=0X43E12A76);
	op_hex		(x,	1);
	set_cmt	(0X43E12A89,	"arg",	0);
	set_cmt	(0X43E12A8E,	"propHash",	0);
	set_cmt	(0X43E12A93,	"classHash",	0);
	set_cmt	(0X43E12AB9,	"propHash",	0);
	set_cmt	(0X43E12ABE,	"classHash",	0);
	set_cmt	(0X43E12B0C,	"propHash",	0);
	set_cmt	(0X43E12B11,	"classHash",	0);
	set_cmt	(0X43E12B61,	"propHash",	0);
	set_cmt	(0X43E12B66,	"classHash",	0);
	set_cmt	(0X43E12B87,	"propHash",	0);
	set_cmt	(0X43E12B8C,	"classHash",	0);
	create_insn	(x=0X43E12BB0);
	op_hex		(x,	1);
	create_insn	(x=0X43E12C3E);
	op_hex		(x,	1);
	create_insn	(0X43E12C5E);
	create_insn	(x=0X43E12CDE);
	op_hex		(x,	1);
	create_insn	(x=0X43E12D3D);
	op_hex		(x,	1);
	create_insn	(0X43E12D61);
	create_insn	(x=0X43E12E3E);
	op_hex		(x,	1);
	create_insn	(x=0X43E12E74);
	op_hex		(x,	1);
	create_insn	(x=0X43E12EA9);
	op_hex		(x,	1);
	create_insn	(0X43E12EF2);
	create_insn	(0X43E12F2D);
	create_insn	(x=0X43E12F83);
	op_hex		(x,	1);
	create_insn	(x=0X43E12F88);
	op_hex		(x,	1);
	create_insn	(x=0X43E12FC9);
	op_hex		(x,	1);
	create_insn	(x=0X43E12FCE);
	op_hex		(x,	1);
	create_insn	(x=0X43E12FDB);
	op_hex		(x,	1);
	create_insn	(x=0X43E12FDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E1303A,	"index",	0);
	set_cmt	(0X43E1303F,	"interface",	0);
	set_cmt	(0X43E1304C,	"this",	0);
	create_insn	(x=0X43E1305E);
	op_hex		(x,	1);
	create_insn	(x=0X43E13061);
	op_hex		(x,	1);
	make_array	(0X43E13182,	0XE);
	create_insn	(0X43E13190);
	create_insn	(x=0X43E13193);
	op_hex		(x,	1);
	create_insn	(x=0X43E13236);
	op_hex		(x,	1);
	create_insn	(x=0X43E132CF);
	op_hex		(x,	1);
	create_insn	(x=0X43E13368);
	op_hex		(x,	1);
	create_insn	(x=0X43E13401);
	op_hex		(x,	1);
	make_array	(0X43E13434,	0XC);
	create_insn	(0X43E13440);
	create_insn	(x=0X43E1344E);
	op_hex		(x,	1);
	create_insn	(x=0X43E1345A);
	op_hex		(x,	1);
	create_insn	(x=0X43E13486);
	op_hex		(x,	1);
	create_insn	(0X43E13499);
	set_cmt	(0X43E1349F,	"Trap to Debugger",	0);
	create_insn	(x=0X43E1349F);
	op_hex		(x,	0);
	create_insn	(0X43E134A0);
	create_insn	(x=0X43E134AC);
	op_hex		(x,	1);
	create_insn	(x=0X43E134D0);
	op_hex		(x,	1);
	create_insn	(0X43E134D7);
	make_array	(0X43E134DD,	0X3);
	create_insn	(0X43E134E0);
	create_insn	(x=0X43E134E5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E134F8);
	op_hex		(x,	1);
	create_insn	(x=0X43E13514);
	op_hex		(x,	1);
	create_insn	(x=0X43E13519);
	op_hex		(x,	1);
	create_insn	(x=0X43E13526);
	op_hex		(x,	1);
	create_insn	(x=0X43E13543);
	op_hex		(x,	1);
	create_insn	(x=0X43E1354E);
	op_hex		(x,	1);
	create_insn	(0X43E13565);
	create_insn	(x=0X43E13575);
	op_hex		(x,	1);
	create_insn	(x=0X43E1357F);
	op_hex		(x,	1);
	create_insn	(0X43E13584);
	create_insn	(x=0X43E1358F);
	op_hex		(x,	1);
	set_cmt	(0X43E13597,	"Size",	0);
	create_insn	(x=0X43E1359D);
	op_hex		(x,	1);
	create_insn	(x=0X43E135AB);
	op_hex		(x,	1);
	create_insn	(0X43E135B3);
	set_cmt	(0X43E135B7,	"Size",	0);
	create_insn	(x=0X43E135BD);
	op_hex		(x,	1);
	create_insn	(0X43E135C4);
	create_insn	(0X43E1361E);
	create_insn	(0X43E13639);
	create_insn	(0X43E13660);
	create_insn	(x=0X43E13675);
	op_hex		(x,	1);
	create_insn	(x=0X43E13681);
	op_hex		(x,	1);
	create_insn	(x=0X43E136A5);
	op_hex		(x,	1);
	create_insn	(0X43E136DB);
	make_array	(0X43E136FA,	0X6);
	create_insn	(0X43E13700);
	create_insn	(x=0X43E13703);
	op_hex		(x,	1);
	create_insn	(x=0X43E13713);
	op_hex		(x,	1);
	create_insn	(x=0X43E13740);
	op_hex		(x,	1);
	create_insn	(x=0X43E13743);
	op_hex		(x,	1);
	create_insn	(x=0X43E13746);
	op_hex		(x,	1);
	create_insn	(x=0X43E13752);
	op_hex		(x,	1);
	create_insn	(x=0X43E1375F);
	op_hex		(x,	1);
	create_insn	(0X43E13779);
	create_insn	(x=0X43E1378B);
	op_hex		(x,	1);
	create_insn	(x=0X43E13790);
	op_hex		(x,	1);
	create_insn	(x=0X43E137F0);
	op_hex		(x,	1);
	create_insn	(0X43E137FE);
	create_insn	(x=0X43E13807);
	op_hex		(x,	1);
	create_insn	(x=0X43E13815);
	op_hex		(x,	1);
	create_insn	(x=0X43E13825);
	op_hex		(x,	1);
	create_insn	(x=0X43E1386A);
	op_hex		(x,	1);
	create_insn	(x=0X43E13899);
	op_hex		(x,	1);
	create_insn	(x=0X43E138BB);
	op_hex		(x,	1);
	create_insn	(x=0X43E138F0);
	op_hex		(x,	1);
	create_insn	(x=0X43E13952);
	op_hex		(x,	1);
	create_insn	(x=0X43E13961);
	op_hex		(x,	1);
	create_insn	(x=0X43E1396E);
	op_hex		(x,	1);
	create_insn	(0X43E13985);
	make_array	(0X43E139CA,	0X6);
	create_insn	(0X43E139D0);
	create_insn	(x=0X43E139D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E139E7);
	op_hex		(x,	1);
	create_insn	(x=0X43E139F7);
	op_hex		(x,	1);
	create_insn	(x=0X43E13A06);
	op_hex		(x,	1);
	create_insn	(x=0X43E13A1B);
	op_hex		(x,	1);
	create_insn	(x=0X43E13A25);
	op_hex		(x,	1);
	create_insn	(x=0X43E13A2B);
	op_hex		(x,	1);
	create_insn	(x=0X43E13A6C);
	op_hex		(x,	1);
	create_insn	(0X43E13A71);
	create_insn	(x=0X43E13A7C);
	op_hex		(x,	1);
	create_insn	(0X43E13BE0);
	create_insn	(0X43E13C36);
	create_insn	(0X43E13C5F);
	make_array	(0X43E13C6E,	0X2);
	create_insn	(0X43E13C70);
	create_insn	(x=0X43E13C73);
	op_hex		(x,	1);
	create_insn	(x=0X43E13C88);
	op_hex		(x,	1);
	create_insn	(x=0X43E13CA6);
	op_hex		(x,	1);
	create_insn	(x=0X43E13CCF);
	op_hex		(x,	1);
	create_insn	(x=0X43E13CF8);
	op_hex		(x,	1);
	make_array	(0X43E13D3B,	0X5);
	create_insn	(0X43E13D40);
	make_array	(0X43E13DB5,	0XB);
	create_insn	(0X43E13DC0);
	create_insn	(x=0X43E13DE0);
	op_hex		(x,	1);
	create_insn	(x=0X43E13DF7);
	op_hex		(x,	1);
	make_array	(0X43E13DFB,	0X5);
	create_insn	(0X43E13E00);
	create_insn	(x=0X43E13E05);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E13E18);
	op_hex		(x,	1);
	create_insn	(x=0X43E13E2E);
	op_hex		(x,	1);
	create_insn	(x=0X43E13E38);
	op_hex		(x,	1);
	create_insn	(x=0X43E13E54);
	op_hex		(x,	1);
	create_insn	(x=0X43E13E59);
	op_hex		(x,	1);
	create_insn	(0X43E13E6D);
	create_insn	(x=0X43E13E86);
	op_hex		(x,	1);
	create_insn	(0X43E13E8B);
	create_insn	(x=0X43E13E96);
	op_hex		(x,	1);
	set_cmt	(0X43E13E9E,	"Size",	0);
	create_insn	(x=0X43E13EA4);
	op_hex		(x,	1);
	create_insn	(x=0X43E13EB2);
	op_hex		(x,	1);
	create_insn	(0X43E13EBA);
	set_cmt	(0X43E13EBE,	"Size",	0);
	create_insn	(x=0X43E13EC4);
	op_hex		(x,	1);
	create_insn	(0X43E13ECB);
	create_insn	(0X43E13F19);
	create_insn	(x=0X43E13F34);
	op_hex		(x,	1);
	create_insn	(x=0X43E13F5C);
	op_hex		(x,	1);
	create_insn	(0X43E13F92);
	create_insn	(0X43E13FAB);
	create_insn	(0X43E13FD4);
	make_array	(0X43E13FF3,	0XD);
	create_insn	(0X43E14000);
	create_insn	(x=0X43E14011);
	op_hex		(x,	1);
	create_insn	(x=0X43E14035);
	op_hex		(x,	1);
	create_insn	(0X43E14057);
	create_insn	(0X43E14060);
	create_insn	(x=0X43E14065);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E14078);
	op_hex		(x,	1);
	create_insn	(x=0X43E1408C);
	op_hex		(x,	1);
	create_insn	(x=0X43E14096);
	op_hex		(x,	1);
	create_insn	(x=0X43E140AF);
	op_hex		(x,	1);
	create_insn	(x=0X43E140B4);
	op_hex		(x,	1);
	create_insn	(0X43E140C8);
	create_insn	(x=0X43E140E4);
	op_hex		(x,	1);
	create_insn	(0X43E140E9);
	create_insn	(x=0X43E140F4);
	op_hex		(x,	1);
	set_cmt	(0X43E140FC,	"Size",	0);
	create_insn	(x=0X43E14102);
	op_hex		(x,	1);
	create_insn	(x=0X43E14110);
	op_hex		(x,	1);
	create_insn	(0X43E14118);
	set_cmt	(0X43E1411C,	"Size",	0);
	create_insn	(x=0X43E14122);
	op_hex		(x,	1);
	create_insn	(0X43E1412C);
	create_insn	(x=0X43E14161);
	op_hex		(x,	1);
	create_insn	(0X43E14166);
	create_insn	(x=0X43E1418D);
	op_hex		(x,	1);
	create_insn	(x=0X43E141A8);
	op_hex		(x,	1);
	create_insn	(x=0X43E141CC);
	op_hex		(x,	1);
	create_insn	(0X43E141FF);
	make_array	(0X43E1421E,	0X2);
	create_insn	(0X43E14220);
	make_array	(0X43E14237,	0X9);
	create_insn	(0X43E14240);
	set_cmt	(0X43E14245,	"a2",	0);
	set_cmt	(0X43E14258,	"propHash",	0);
	set_cmt	(0X43E1425D,	"classHash",	0);
	set_cmt	(0X43E14281,	"propHash",	0);
	set_cmt	(0X43E14286,	"classHash",	0);
	create_insn	(x=0X43E142A3);
	op_hex		(x,	1);
	set_cmt	(0X43E142A7,	"propHash",	0);
	create_insn	(x=0X43E142AC);
	op_hex		(x,	1);
	set_cmt	(0X43E142AF,	"classHash",	0);
	create_insn	(0X43E142C5);
	set_cmt	(0X43E142DE,	"propHash",	0);
	set_cmt	(0X43E142E3,	"classHash",	0);
	set_cmt	(0X43E14304,	"propHash",	0);
	set_cmt	(0X43E14309,	"classHash",	0);
	set_cmt	(0X43E1432A,	"propHash",	0);
	set_cmt	(0X43E1432F,	"classHash",	0);
	set_cmt	(0X43E14351,	"propHash",	0);
	set_cmt	(0X43E14356,	"classHash",	0);
	set_cmt	(0X43E1438F,	"propHash",	0);
	set_cmt	(0X43E14394,	"classHash",	0);
	set_cmt	(0X43E143CD,	"propHash",	0);
	set_cmt	(0X43E143D2,	"classHash",	0);
	set_cmt	(0X43E1440A,	"propHash",	0);
	set_cmt	(0X43E1440F,	"classHash",	0);
	set_cmt	(0X43E14430,	"propHash",	0);
	set_cmt	(0X43E14435,	"classHash",	0);
	set_cmt	(0X43E14457,	"propHash",	0);
	set_cmt	(0X43E1445C,	"classHash",	0);
	set_cmt	(0X43E14495,	"propHash",	0);
	set_cmt	(0X43E1449A,	"classHash",	0);
	set_cmt	(0X43E144D3,	"propHash",	0);
	set_cmt	(0X43E144D8,	"classHash",	0);
	set_cmt	(0X43E14511,	"propHash",	0);
	set_cmt	(0X43E14516,	"classHash",	0);
	set_cmt	(0X43E14531,	"player",	0);
	set_cmt	(0X43E14551,	"player",	0);
	set_cmt	(0X43E14563,	"propHash",	0);
	set_cmt	(0X43E14568,	"classHash",	0);
	set_cmt	(0X43E1457A,	"player",	0);
	set_cmt	(0X43E14593,	"propHash",	0);
	set_cmt	(0X43E14598,	"classHash",	0);
	make_array	(0X43E145B6,	0XA);
	create_insn	(0X43E145C0);
	set_cmt	(0X43E145E3,	"propHash",	0);
	set_cmt	(0X43E145E8,	"classHash",	0);
	set_cmt	(0X43E1460C,	"propHash",	0);
	set_cmt	(0X43E14611,	"classHash",	0);
	create_insn	(x=0X43E14631);
	op_hex		(x,	1);
	set_cmt	(0X43E14635,	"propHash",	0);
	create_insn	(x=0X43E1463A);
	op_hex		(x,	1);
	set_cmt	(0X43E1463D,	"classHash",	0);
	create_insn	(0X43E14653);
	set_cmt	(0X43E1466E,	"propHash",	0);
	set_cmt	(0X43E14673,	"classHash",	0);
	set_cmt	(0X43E14696,	"propHash",	0);
	set_cmt	(0X43E1469B,	"classHash",	0);
	set_cmt	(0X43E146C0,	"propHash",	0);
	set_cmt	(0X43E146C5,	"classHash",	0);
	set_cmt	(0X43E146E3,	"propHash",	0);
	set_cmt	(0X43E146E8,	"classHash",	0);
	set_cmt	(0X43E14721,	"propHash",	0);
	set_cmt	(0X43E14726,	"classHash",	0);
	set_cmt	(0X43E1475F,	"propHash",	0);
	set_cmt	(0X43E14764,	"classHash",	0);
	set_cmt	(0X43E147A4,	"propHash",	0);
	set_cmt	(0X43E147A9,	"classHash",	0);
	set_cmt	(0X43E147CE,	"propHash",	0);
	set_cmt	(0X43E147D3,	"classHash",	0);
	set_cmt	(0X43E147F1,	"propHash",	0);
	set_cmt	(0X43E147F6,	"classHash",	0);
	set_cmt	(0X43E1482F,	"propHash",	0);
	set_cmt	(0X43E14834,	"classHash",	0);
	set_cmt	(0X43E1486D,	"propHash",	0);
	set_cmt	(0X43E14872,	"classHash",	0);
	set_cmt	(0X43E148AB,	"propHash",	0);
	set_cmt	(0X43E148B0,	"classHash",	0);
	set_cmt	(0X43E148CB,	"player",	0);
	set_cmt	(0X43E148F2,	"player",	0);
	set_cmt	(0X43E14909,	"propHash",	0);
	set_cmt	(0X43E1490E,	"classHash",	0);
	set_cmt	(0X43E14922,	"player",	0);
	set_cmt	(0X43E14946,	"propHash",	0);
	set_cmt	(0X43E1494B,	"classHash",	0);
	make_array	(0X43E1496B,	0X5);
	create_insn	(0X43E14970);
	create_insn	(x=0X43E1497F);
	op_hex		(x,	1);
	create_insn	(x=0X43E14987);
	op_hex		(x,	1);
	create_insn	(x=0X43E14993);
	op_hex		(x,	1);
	make_array	(0X43E14B26,	0XA);
	create_insn	(0X43E14B30);
	create_insn	(x=0X43E14B33);
	op_hex		(x,	1);
	create_insn	(x=0X43E14B36);
	op_hex		(x,	1);
	create_insn	(x=0X43E14B39);
	op_hex		(x,	1);
	create_insn	(x=0X43E14B46);
	op_hex		(x,	1);
	create_insn	(x=0X43E14B51);
	op_hex		(x,	1);
	create_insn	(x=0X43E14BC5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E14C1A);
	op_hex		(x,	1);
	create_insn	(0X43E14C1F);
	create_insn	(x=0X43E14C44);
	op_hex		(x,	1);
	create_insn	(x=0X43E14C6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E14CBB);
	op_hex		(x,	1);
	create_insn	(x=0X43E14D0E);
	op_hex		(x,	1);
	set_cmt	(0X43E14D31,	"a2",	0);
	set_cmt	(0X43E14D39,	"a9",	0);
	set_cmt	(0X43E14D3A,	"a8",	0);
	set_cmt	(0X43E14D3B,	"a7",	0);
	set_cmt	(0X43E14D3C,	"a6",	0);
	create_insn	(x=0X43E14D41);
	op_hex		(x,	1);
	set_cmt	(0X43E14D47,	"a5",	0);
	set_cmt	(0X43E14D4F,	"a4",	0);
	set_cmt	(0X43E14D59,	"a3",	0);
	set_cmt	(0X43E14D5C,	"a1",	0);
	create_insn	(x=0X43E14D81);
	op_hex		(x,	1);
	set_cmt	(0X43E14DAA,	"a9",	0);
	set_cmt	(0X43E14DAB,	"a8",	0);
	set_cmt	(0X43E14DAC,	"a2",	0);
	set_cmt	(0X43E14DB7,	"a7",	0);
	set_cmt	(0X43E14DB8,	"a6",	0);
	create_insn	(x=0X43E14DB9);
	op_hex		(x,	1);
	set_cmt	(0X43E14DBC,	"a5",	0);
	set_cmt	(0X43E14DC4,	"a4",	0);
	set_cmt	(0X43E14DCB,	"a3",	0);
	set_cmt	(0X43E14DD7,	"a1",	0);
	set_cmt	(0X43E14DDF,	"a2",	0);
	set_cmt	(0X43E14DE7,	"a9",	0);
	set_cmt	(0X43E14DE8,	"a8",	0);
	set_cmt	(0X43E14DE9,	"a7",	0);
	set_cmt	(0X43E14DED,	"a6",	0);
	create_insn	(x=0X43E14DF1);
	op_hex		(x,	1);
	set_cmt	(0X43E14E01,	"a5",	0);
	set_cmt	(0X43E14E12,	"a1",	0);
	set_cmt	(0X43E14E15,	"a4",	0);
	set_cmt	(0X43E14E1A,	"a3",	0);
	create_insn	(x=0X43E14E3E);
	op_hex		(x,	1);
	create_insn	(x=0X43E14E78);
	op_hex		(x,	1);
	create_insn	(x=0X43E14ED9);
	op_hex		(x,	1);
	create_insn	(0X43E14EF0);
	set_cmt	(0X43E14EF7,	"index",	0);
	set_cmt	(0X43E14EFF,	"interface",	0);
	set_cmt	(0X43E14F0C,	"this",	0);
	set_cmt	(0X43E14F27,	"propHash",	0);
	set_cmt	(0X43E14F2C,	"classHash",	0);
	make_array	(0X43E14F5D,	0X3);
	create_insn	(0X43E14F60);
	make_array	(0X43E14FCB,	0X5);
	create_insn	(0X43E14FD0);
	make_array	(0X43E14FD8,	0X8);
	create_insn	(0X43E14FE0);
	create_insn	(x=0X43E14FEE);
	op_hex		(x,	1);
	create_insn	(x=0X43E15023);
	op_hex		(x,	1);
	create_insn	(0X43E15036);
	make_array	(0X43E1503C,	0X4);
	create_insn	(0X43E15040);
	create_insn	(x=0X43E15050);
	op_hex		(x,	1);
	create_insn	(0X43E1506D);
	make_array	(0X43E15072,	0XE);
	create_insn	(0X43E15080);
	make_array	(0X43E150BE,	0X2);
	create_insn	(0X43E150C0);
	make_array	(0X43E150C8,	0X8);
	create_insn	(0X43E150D0);
	make_array	(0X43E150E4,	0XC);
	create_insn	(0X43E150F0);
	create_insn	(x=0X43E150FE);
	op_hex		(x,	1);
	create_insn	(x=0X43E15125);
	op_hex		(x,	1);
	create_insn	(0X43E1512D);
	make_array	(0X43E15136,	0XA);
	create_insn	(0X43E15140);
	create_insn	(0X43E15167);
	create_insn	(x=0X43E15173);
	op_hex		(x,	1);
	create_insn	(0X43E15180);
	create_insn	(0X43E1525E);
	create_insn	(0X43E15286);
	create_insn	(0X43E152AE);
	create_insn	(0X43E152D6);
	make_array	(0X43E152DB,	0X5);
	create_insn	(0X43E152E0);
	set_cmt	(0X43E152EF,	"Size",	0);
	set_cmt	(0X43E152FD,	"Size",	0);
	create_insn	(x=0X43E1530B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E15348,	"Size",	0);
	create_insn	(x=0X43E15356);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E15396);
	op_hex		(x,	1);
	create_insn	(x=0X43E15399);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E153AF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1548F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E154AF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E154CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E154EF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1550F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E15535);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E15549,	0X7);
	create_insn	(0X43E15550);
	create_insn	(x=0X43E15553);
	op_hex		(x,	1);
	make_array	(0X43E15702,	0XE);
	create_insn	(0X43E15710);
	make_array	(0X43E15768,	0X8);
	create_insn	(0X43E15770);
	create_insn	(x=0X43E15773);
	op_hex		(x,	1);
	create_insn	(x=0X43E15776);
	op_hex		(x,	1);
	create_insn	(x=0X43E15779);
	op_hex		(x,	1);
	create_insn	(x=0X43E15789);
	op_hex		(x,	1);
	set_cmt	(0X43E1578C,	"switch 7 cases ",	0);
	set_cmt	(0X43E15797,	"switch jump",	0);
	create_insn	(x=0X43E15797);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E1579E,	"jumptable 43E15797 case 1",	1);
	create_insn	(0X43E1579E);
	set_cmt	(0X43E157B7,	"jumptable 43E15797 case 2",	1);
	create_insn	(0X43E157B7);
	set_cmt	(0X43E157D7,	"jumptable 43E15797 case 3",	1);
	create_insn	(0X43E157D7);
	set_cmt	(0X43E157F0,	"jumptable 43E15797 case 4",	1);
	create_insn	(0X43E157F0);
	set_cmt	(0X43E15810,	"jumptable 43E15797 case 5",	1);
	create_insn	(0X43E15810);
	set_cmt	(0X43E15830,	"jumptable 43E15797 case 6",	1);
	create_insn	(0X43E15830);
	set_cmt	(0X43E1584D,	"jumptable 43E15797 case 7",	1);
	create_insn	(0X43E1584D);
	set_cmt	(0X43E1586A,	"jumptable 43E15797 default case",	1);
	create_insn	(0X43E1586A);
	set_name	(0X43E1586A,	"def_43E15797");
	make_array	(0X43E158C9,	0X3);
	set_cmt	(0X43E158CC,	"jump table for switch statement",	0);
	create_dword	(x=0X43E158CC);
	make_array	(x,	0X7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E158CC,	"jpt_43E15797");
	make_array	(0X43E158E8,	0X8);
	create_insn	(0X43E158F0);
	create_insn	(0X43E15943);
	make_array	(0X43E15965,	0XB);
	create_insn	(0X43E15970);
	create_insn	(x=0X43E1597E);
	op_hex		(x,	1);
	create_insn	(x=0X43E159B6);
	op_hex		(x,	1);
	create_insn	(0X43E159C9);
	set_cmt	(0X43E159CF,	"Trap to Debugger",	0);
	create_insn	(x=0X43E159CF);
	op_hex		(x,	0);
	create_insn	(0X43E159D0);
	create_insn	(x=0X43E159DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E15A0F);
	op_hex		(x,	1);
	make_array	(0X43E15A4B,	0X5);
	create_insn	(0X43E15A50);
	create_insn	(x=0X43E15A5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E15A8A);
	op_hex		(x,	1);
	make_array	(0X43E15AC7,	0X9);
	create_insn	(0X43E15AD0);
	create_insn	(x=0X43E15AD3);
	op_hex		(x,	1);
	create_insn	(x=0X43E15AEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E15B32);
	op_hex		(x,	1);
	create_insn	(0X43E15B46);
	make_array	(0X43E15B4B,	0X5);
	create_insn	(0X43E15B50);
	create_insn	(x=0X43E15BC6);
	op_hex		(x,	1);
	create_insn	(x=0X43E15BD7);
	op_hex		(x,	1);
	create_insn	(x=0X43E15BFB);
	op_hex		(x,	1);
	create_insn	(0X43E15C0F);
	make_array	(0X43E15C15,	0XB);
	create_insn	(0X43E15C20);
	create_insn	(x=0X43E15C83);
	op_hex		(x,	1);
	create_insn	(x=0X43E15C94);
	op_hex		(x,	1);
	create_insn	(x=0X43E15CB8);
	op_hex		(x,	1);
	create_insn	(0X43E15CCC);
	make_array	(0X43E15CD2,	0XE);
	create_insn	(0X43E15CE0);
	create_insn	(x=0X43E15CE3);
	op_hex		(x,	1);
	create_insn	(0X43E15CF6);
	create_insn	(0X43E15D59);
	create_insn	(0X43E15E8D);
	create_insn	(0X43E15E9D);
	create_insn	(0X43E15EBF);
	make_array	(0X43E16047,	0X9);
	create_insn	(0X43E16050);
	create_insn	(x=0X43E160AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E160C0);
	op_hex		(x,	1);
	create_insn	(x=0X43E160E4);
	op_hex		(x,	1);
	create_insn	(0X43E160FD);
	make_array	(0X43E16103,	0XD);
	create_insn	(0X43E16110);
	create_insn	(x=0X43E16113);
	op_hex		(x,	1);
	create_insn	(x=0X43E16116);
	op_hex		(x,	1);
	create_insn	(x=0X43E16119);
	op_hex		(x,	1);
	create_insn	(x=0X43E16126);
	op_hex		(x,	1);
	create_insn	(0X43E16193);
	create_insn	(0X43E16209);
	create_insn	(0X43E1621A);
	create_insn	(0X43E1622F);
	create_insn	(0X43E16250);
	create_insn	(0X43E16264);
	make_array	(0X43E16323,	0XD);
	create_insn	(0X43E16330);
	create_insn	(x=0X43E1635E);
	op_hex		(x,	1);
	create_insn	(0X43E16365);
	make_array	(0X43E1636B,	0X5);
	create_insn	(0X43E16370);
	create_insn	(x=0X43E16373);
	op_hex		(x,	1);
	create_insn	(0X43E163B1);
	create_insn	(x=0X43E163C5);
	op_hex		(x,	1);
	create_insn	(0X43E163CA);
	create_insn	(x=0X43E163D5);
	op_hex		(x,	1);
	set_cmt	(0X43E163DD,	"Size",	0);
	create_insn	(x=0X43E163E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E163F3);
	op_hex		(x,	1);
	create_insn	(0X43E163FB);
	set_cmt	(0X43E163FF,	"Size",	0);
	create_insn	(x=0X43E16405);
	op_hex		(x,	1);
	create_insn	(0X43E1640A);
	create_insn	(x=0X43E16431);
	op_hex		(x,	1);
	create_insn	(x=0X43E16434);
	op_hex		(x,	1);
	create_insn	(x=0X43E1645B);
	op_hex		(x,	1);
	set_cmt	(0X43E1645E,	"num",	0);
	set_cmt	(0X43E16464,	"value",	0);
	set_cmt	(0X43E16466,	"pointer",	0);
	set_cmt	(0X43E1646C,	"num",	0);
	set_cmt	(0X43E16470,	"value",	0);
	set_cmt	(0X43E16472,	"pointer",	0);
	create_insn	(0X43E1647A);
	create_insn	(x=0X43E164AD);
	op_hex		(x,	1);
	set_cmt	(0X43E164B0,	"num",	0);
	set_cmt	(0X43E164B1,	"value",	0);
	set_cmt	(0X43E164B6,	"pointer",	0);
	create_insn	(x=0X43E164C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E164CF);
	op_hex		(x,	1);
	create_insn	(x=0X43E164F3);
	op_hex		(x,	1);
	create_insn	(0X43E16505);
	make_array	(0X43E16510,	0X10);
	create_insn	(0X43E16520);
	create_insn	(x=0X43E16529);
	op_hex		(x,	1);
	create_insn	(0X43E16557);
	create_insn	(x=0X43E16577);
	op_hex		(x,	1);
	create_insn	(0X43E1657C);
	create_insn	(x=0X43E16587);
	op_hex		(x,	1);
	set_cmt	(0X43E1658F,	"Size",	0);
	create_insn	(x=0X43E16597);
	op_hex		(x,	1);
	create_insn	(x=0X43E165A5);
	op_hex		(x,	1);
	create_insn	(0X43E165B3);
	set_cmt	(0X43E165B7,	"Size",	0);
	create_insn	(x=0X43E165C3);
	op_hex		(x,	1);
	create_insn	(0X43E165C8);
	create_insn	(x=0X43E165EE);
	op_hex		(x,	1);
	create_insn	(x=0X43E165F1);
	op_hex		(x,	1);
	create_insn	(x=0X43E1661A);
	op_hex		(x,	1);
	set_cmt	(0X43E1661D,	"num",	0);
	set_cmt	(0X43E16623,	"value",	0);
	set_cmt	(0X43E16625,	"pointer",	0);
	set_cmt	(0X43E1662B,	"num",	0);
	set_cmt	(0X43E1662F,	"value",	0);
	set_cmt	(0X43E16631,	"pointer",	0);
	create_insn	(x=0X43E16639);
	op_hex		(x,	1);
	create_insn	(x=0X43E1666C);
	op_hex		(x,	1);
	set_cmt	(0X43E1666F,	"num",	0);
	set_cmt	(0X43E16670,	"value",	0);
	set_cmt	(0X43E16675,	"pointer",	0);
	create_insn	(x=0X43E16687);
	op_hex		(x,	1);
	create_insn	(x=0X43E166BF);
	op_hex		(x,	1);
	create_insn	(0X43E166D6);
	make_array	(0X43E166E1,	0XF);
	create_insn	(0X43E166F0);
	create_insn	(0X43E16730);
	create_insn	(x=0X43E16735);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E16748);
	op_hex		(x,	1);
	create_insn	(x=0X43E16762);
	op_hex		(x,	1);
	create_insn	(x=0X43E16766);
	op_hex		(x,	1);
	create_insn	(x=0X43E16773);
	op_hex		(x,	1);
	create_insn	(x=0X43E1678E);
	op_hex		(x,	1);
	create_insn	(x=0X43E16799);
	op_hex		(x,	1);
	create_insn	(0X43E167AD);
	create_insn	(x=0X43E167F2);
	op_hex		(x,	1);
	create_insn	(0X43E1680E);
	create_insn	(0X43E16852);
	make_array	(0X43E1686B,	0X5);
	create_insn	(0X43E16870);
	create_insn	(x=0X43E16875);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E16888);
	op_hex		(x,	1);
	create_insn	(x=0X43E168A2);
	op_hex		(x,	1);
	create_insn	(x=0X43E168A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E168B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E168CE);
	op_hex		(x,	1);
	create_insn	(x=0X43E168D9);
	op_hex		(x,	1);
	create_insn	(0X43E168ED);
	create_insn	(0X43E1694C);
	create_insn	(0X43E16990);
	make_array	(0X43E169A9,	0X7);
	create_insn	(0X43E169B0);
	create_insn	(x=0X43E169B5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E169C8);
	op_hex		(x,	1);
	create_insn	(x=0X43E169E4);
	op_hex		(x,	1);
	create_insn	(x=0X43E169E9);
	op_hex		(x,	1);
	create_insn	(x=0X43E169F6);
	op_hex		(x,	1);
	create_insn	(x=0X43E16A15);
	op_hex		(x,	1);
	create_insn	(x=0X43E16A20);
	op_hex		(x,	1);
	create_insn	(0X43E16A34);
	create_insn	(x=0X43E16A4D);
	op_hex		(x,	1);
	create_insn	(0X43E16A52);
	create_insn	(x=0X43E16A5D);
	op_hex		(x,	1);
	set_cmt	(0X43E16A65,	"Size",	0);
	create_insn	(x=0X43E16A6B);
	op_hex		(x,	1);
	create_insn	(x=0X43E16A79);
	op_hex		(x,	1);
	create_insn	(0X43E16A81);
	set_cmt	(0X43E16A85,	"Size",	0);
	create_insn	(x=0X43E16A8B);
	op_hex		(x,	1);
	create_insn	(0X43E16A92);
	create_insn	(0X43E16AE8);
	create_insn	(0X43E16AF0);
	create_insn	(x=0X43E16B21);
	op_hex		(x,	1);
	create_insn	(x=0X43E16B55);
	op_hex		(x,	1);
	create_insn	(0X43E16B8A);
	make_array	(0X43E16BA9,	0X7);
	create_insn	(0X43E16BB0);
	create_insn	(0X43E16C00);
	create_insn	(0X43E16C83);
	make_array	(0X43E16C8C,	0X4);
	create_insn	(0X43E16C90);
	make_array	(0X43E16FC3,	0X1D);
	create_insn	(0X43E16FE0);
	set_cmt	(0X43E16FF0,	"propHash",	0);
	set_cmt	(0X43E16FF5,	"classHash",	0);
	set_cmt	(0X43E17015,	"propHash",	0);
	set_cmt	(0X43E1701A,	"classHash",	0);
	create_insn	(x=0X43E17034);
	op_hex		(x,	1);
	set_cmt	(0X43E17038,	"propHash",	0);
	create_insn	(x=0X43E1703D);
	op_hex		(x,	1);
	set_cmt	(0X43E17040,	"classHash",	0);
	create_insn	(0X43E17056);
	set_cmt	(0X43E1706B,	"propHash",	0);
	set_cmt	(0X43E17070,	"classHash",	0);
	set_cmt	(0X43E1708F,	"propHash",	0);
	set_cmt	(0X43E17094,	"classHash",	0);
	set_cmt	(0X43E170C4,	"propHash",	0);
	set_cmt	(0X43E170C9,	"classHash",	0);
	set_cmt	(0X43E17114,	"propHash",	0);
	set_cmt	(0X43E17119,	"classHash",	0);
	set_cmt	(0X43E17164,	"propHash",	0);
	set_cmt	(0X43E17169,	"classHash",	0);
	set_cmt	(0X43E171A1,	"propHash",	0);
	set_cmt	(0X43E171A6,	"classHash",	0);
	create_insn	(x=0X43E171C0);
	op_hex		(x,	1);
	create_insn	(x=0X43E171C4);
	op_hex		(x,	1);
	create_insn	(0X43E171E7);
	set_cmt	(0X43E171FC,	"propHash",	0);
	set_cmt	(0X43E17201,	"classHash",	0);
	set_cmt	(0X43E17231,	"propHash",	0);
	set_cmt	(0X43E17236,	"classHash",	0);
	set_cmt	(0X43E17266,	"propHash",	0);
	set_cmt	(0X43E1726B,	"classHash",	0);
	make_array	(0X43E172D5,	0XB);
	create_insn	(0X43E172E0);
	create_insn	(x=0X43E172E8);
	op_hex		(x,	1);
	set_cmt	(0X43E172F6,	"propHash",	0);
	set_cmt	(0X43E172FB,	"classHash",	0);
	set_cmt	(0X43E1731E,	"propHash",	0);
	set_cmt	(0X43E17323,	"classHash",	0);
	create_insn	(x=0X43E17341);
	op_hex		(x,	1);
	set_cmt	(0X43E17345,	"propHash",	0);
	create_insn	(x=0X43E1734A);
	op_hex		(x,	1);
	set_cmt	(0X43E1734D,	"classHash",	0);
	create_insn	(0X43E17363);
	set_cmt	(0X43E1737A,	"propHash",	0);
	set_cmt	(0X43E1737F,	"classHash",	0);
	set_cmt	(0X43E1739B,	"propHash",	0);
	set_cmt	(0X43E173A0,	"classHash",	0);
	set_cmt	(0X43E173D0,	"propHash",	0);
	set_cmt	(0X43E173D5,	"classHash",	0);
	set_cmt	(0X43E17430,	"propHash",	0);
	set_cmt	(0X43E17435,	"classHash",	0);
	set_cmt	(0X43E17480,	"propHash",	0);
	set_cmt	(0X43E17485,	"classHash",	0);
	set_cmt	(0X43E174C2,	"propHash",	0);
	set_cmt	(0X43E174C7,	"classHash",	0);
	create_insn	(x=0X43E174EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E174EE);
	op_hex		(x,	1);
	create_insn	(0X43E17516);
	set_cmt	(0X43E1752A,	"propHash",	0);
	set_cmt	(0X43E1752F,	"classHash",	0);
	set_cmt	(0X43E1755F,	"propHash",	0);
	set_cmt	(0X43E17564,	"classHash",	0);
	set_cmt	(0X43E17594,	"propHash",	0);
	set_cmt	(0X43E17599,	"classHash",	0);
	make_array	(0X43E17606,	0XA);
	create_insn	(0X43E17610);
	make_array	(0X43E1763C,	0X4);
	create_insn	(0X43E17640);
	create_insn	(x=0X43E17643);
	op_hex		(x,	1);
	create_insn	(x=0X43E17646);
	op_hex		(x,	1);
	create_insn	(0X43E1768A);
	create_insn	(0X43E176FE);
	create_insn	(0X43E1772A);
	create_insn	(0X43E17773);
	make_array	(0X43E17781,	0XF);
	create_insn	(0X43E17790);
	create_insn	(x=0X43E177BE);
	op_hex		(x,	1);
	create_insn	(0X43E177C5);
	make_array	(0X43E177CB,	0X5);
	create_insn	(0X43E177D0);
	make_array	(0X43E17892,	0XE);
	create_insn	(0X43E178A0);
	create_insn	(x=0X43E178A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E178B8);
	op_hex		(x,	1);
	create_insn	(x=0X43E178D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E178D8);
	op_hex		(x,	1);
	create_insn	(x=0X43E178E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E17903);
	op_hex		(x,	1);
	create_insn	(x=0X43E1790E);
	op_hex		(x,	1);
	create_insn	(0X43E17922);
	create_insn	(x=0X43E1793D);
	op_hex		(x,	1);
	create_insn	(0X43E17942);
	create_insn	(x=0X43E1794D);
	op_hex		(x,	1);
	set_cmt	(0X43E17955,	"Size",	0);
	create_insn	(x=0X43E1795B);
	op_hex		(x,	1);
	create_insn	(x=0X43E17969);
	op_hex		(x,	1);
	create_insn	(0X43E17971);
	set_cmt	(0X43E17975,	"Size",	0);
	create_insn	(x=0X43E1797B);
	op_hex		(x,	1);
	create_insn	(0X43E17985);
	create_insn	(x=0X43E179B6);
	op_hex		(x,	1);
	create_insn	(0X43E179CF);
	create_insn	(x=0X43E179FC);
	op_hex		(x,	1);
	create_insn	(x=0X43E17A2F);
	op_hex		(x,	1);
	create_insn	(0X43E17A5D);
	make_array	(0X43E17A7C,	0X4);
	create_insn	(0X43E17A80);
	make_array	(0X43E17B38,	0X8);
	create_insn	(0X43E17B40);
	create_insn	(x=0X43E17B46);
	op_hex		(x,	1);
	create_insn	(0X43E17C11);
	make_array	(0X43E17C1A,	0X6);
	create_insn	(x=0X43E17C20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E17C26,	0XA);
	create_insn	(0X43E17C30);
	make_array	(0X43E17C38,	0X8);
	create_insn	(0X43E17C40);
	create_insn	(x=0X43E17C46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E17C56,	0XA);
	create_insn	(0X43E17C60);
	make_array	(0X43E17C7E,	0X2);
	create_insn	(0X43E17C80);
	create_insn	(x=0X43E17C83);
	op_hex		(x,	1);
	create_insn	(x=0X43E17C86);
	op_hex		(x,	1);
	set_cmt	(0X43E17C8E,	"this",	0);
	create_insn	(0X43E17CB9);
	set_cmt	(0X43E17CC2,	"propHash",	0);
	set_cmt	(0X43E17CC7,	"classHash",	0);
	set_cmt	(0X43E17D25,	"index",	0);
	set_cmt	(0X43E17D30,	"interface",	0);
	set_cmt	(0X43E17D3D,	"this",	0);
	create_insn	(0X43E17E1E);
	create_insn	(0X43E17E53);
	make_array	(0X43E17E8B,	0X5);
	create_insn	(0X43E17E90);
	make_array	(0X43E17F0D,	0X3);
	create_insn	(0X43E17F10);
	create_insn	(x=0X43E17F28);
	op_hex		(x,	1);
	create_insn	(x=0X43E17F3B);
	op_hex		(x,	1);
	create_insn	(x=0X43E17F51);
	op_hex		(x,	1);
	create_insn	(x=0X43E17F71);
	op_hex		(x,	1);
	create_insn	(x=0X43E17FB1);
	op_hex		(x,	1);
	create_insn	(x=0X43E17FF5);
	op_hex		(x,	1);
	create_insn	(0X43E18004);
	create_insn	(x=0X43E18016);
	op_hex		(x,	1);
	create_insn	(0X43E18027);
	make_array	(0X43E1802C,	0X4);
	create_insn	(0X43E18030);
	create_insn	(x=0X43E18035);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E18048);
	op_hex		(x,	1);
	create_insn	(x=0X43E18061);
	op_hex		(x,	1);
	create_insn	(x=0X43E18066);
	op_hex		(x,	1);
	create_insn	(x=0X43E18073);
	op_hex		(x,	1);
	create_insn	(x=0X43E18092);
	op_hex		(x,	1);
	create_insn	(x=0X43E1809D);
	op_hex		(x,	1);
	create_insn	(0X43E180B1);
	set_cmt	(0X43E180D9,	"num",	0);
	set_cmt	(0X43E180DE,	"value",	0);
	set_cmt	(0X43E180E0,	"pointer",	0);
	create_insn	(x=0X43E180E6);
	op_hex		(x,	1);
	create_insn	(0X43E18107);
	create_insn	(x=0X43E18134);
	op_hex		(x,	1);
	create_insn	(x=0X43E18168);
	op_hex		(x,	1);
	create_insn	(0X43E1819D);
	make_array	(0X43E181BC,	0X4);
	create_insn	(0X43E181C0);
	create_insn	(x=0X43E18337);
	op_hex		(x,	1);
	make_array	(0X43E18353,	0XD);
	create_insn	(0X43E18360);
	create_insn	(x=0X43E18381);
	op_hex		(x,	1);
	make_array	(0X43E18397,	0X9);
	create_insn	(0X43E183A0);
	create_insn	(x=0X43E183B1);
	op_hex		(x,	1);
	make_array	(0X43E183B8,	0X8);
	create_insn	(x=0X43E183C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E183C6,	0XA);
	create_insn	(0X43E183D0);
	make_array	(0X43E183D8,	0X8);
	create_insn	(0X43E183E0);
	set_cmt	(0X43E183E1,	"Size",	0);
	create_insn	(x=0X43E183EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E183ED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E18421,	0XF);
	create_insn	(0X43E18430);
	create_insn	(x=0X43E18441);
	op_hex		(x,	1);
	make_array	(0X43E18448,	0X8);
	create_insn	(x=0X43E18450);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E18456,	0XA);
	create_insn	(0X43E18460);
	make_array	(0X43E18479,	0X7);
	create_insn	(0X43E18480);
	set_cmt	(0X43E18481,	"Size",	0);
	create_insn	(x=0X43E1848A);
	op_hex		(x,	1);
	create_insn	(x=0X43E1848D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E184B5,	0XB);
	create_insn	(0X43E184C0);
	create_insn	(0X43E1852E);
	make_array	(0X43E18533,	0XD);
	create_insn	(0X43E18540);
	create_insn	(x=0X43E18555);
	op_hex		(x,	1);
	create_insn	(x=0X43E1855C);
	op_hex		(x,	1);
	create_insn	(x=0X43E18568);
	op_hex		(x,	1);
	create_insn	(x=0X43E18594);
	op_hex		(x,	1);
	create_insn	(0X43E185A7);
	create_insn	(0X43E185B0);
	create_insn	(x=0X43E185D4);
	op_hex		(x,	1);
	create_insn	(x=0X43E18600);
	op_hex		(x,	1);
	create_insn	(0X43E18613);
	set_cmt	(0X43E1861F,	"Trap to Debugger",	0);
	create_insn	(x=0X43E1861F);
	op_hex		(x,	0);
	create_insn	(0X43E18620);
	create_insn	(x=0X43E18623);
	op_hex		(x,	1);
	create_insn	(x=0X43E1863C);
	op_hex		(x,	1);
	create_insn	(0X43E18653);
	create_insn	(x=0X43E1866D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43E1867B,	0X5);
	create_insn	(0X43E18680);
	create_insn	(x=0X43E1868F);
	op_hex		(x,	1);
	make_array	(0X43E18696,	0XA);
	create_insn	(0X43E186A0);
	create_insn	(x=0X43E186AC);
	op_hex		(x,	1);
	create_insn	(x=0X43E186D0);
	op_hex		(x,	1);
	create_insn	(0X43E186D7);
	make_array	(0X43E186DD,	0X3);
	create_insn	(0X43E186E0);
	create_insn	(0X43E18701);
	make_array	(0X43E18707,	0X9);
	create_insn	(0X43E18710);
	set_cmt	(0X43E18715,	"Size",	0);
	create_insn	(x=0X43E1872F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E18743);
	op_hex		(x,	1);
	make_array	(0X43E1875A,	0X6);
	create_insn	(0X43E18760);
	create_insn	(x=0X43E18765);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E18778);
	op_hex		(x,	1);
	create_insn	(x=0X43E1878A);
	op_hex		(x,	1);
	create_insn	(x=0X43E18792);
	op_hex		(x,	1);
	create_insn	(x=0X43E187AB);
	op_hex		(x,	1);
	create_insn	(x=0X43E187B0);
	op_hex		(x,	1);
	create_insn	(0X43E187C4);
	create_insn	(x=0X43E187DD);
	op_hex		(x,	1);
	create_insn	(0X43E187E2);
	create_insn	(x=0X43E187ED);
	op_hex		(x,	1);
	set_cmt	(0X43E187F5,	"Size",	0);
	create_insn	(x=0X43E187FB);
	op_hex		(x,	1);
	create_insn	(x=0X43E18809);
	op_hex		(x,	1);
	create_insn	(0X43E18811);
	set_cmt	(0X43E18815,	"Size",	0);
	create_insn	(x=0X43E1881B);
	op_hex		(x,	1);
	create_insn	(0X43E18822);
	create_insn	(x=0X43E1884A);
	op_hex		(x,	1);
	create_insn	(0X43E18890);
	create_insn	(0X43E188AA);
	create_insn	(x=0X43E188E9);
	op_hex		(x,	1);
	create_insn	(x=0X43E1890D);
	op_hex		(x,	1);
	create_insn	(0X43E1893A);
	make_array	(0X43E18964,	0XC);
	create_insn	(0X43E18970);
	create_insn	(x=0X43E18975);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E18988);
	op_hex		(x,	1);
	create_insn	(x=0X43E189A1);
	op_hex		(x,	1);
	create_insn	(x=0X43E189A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E189B0);
	op_hex		(x,	1);
	create_insn	(x=0X43E189CF);
	op_hex		(x,	1);
	create_insn	(x=0X43E189DA);
	op_hex		(x,	1);
	create_insn	(0X43E189EE);
	create_insn	(x=0X43E189FC);
	op_hex		(x,	1);
	create_insn	(x=0X43E18A09);
	op_hex		(x,	1);
	create_insn	(0X43E18A0E);
	create_insn	(x=0X43E18A19);
	op_hex		(x,	1);
	set_cmt	(0X43E18A21,	"Size",	0);
	create_insn	(x=0X43E18A27);
	op_hex		(x,	1);
	create_insn	(x=0X43E18A35);
	op_hex		(x,	1);
	create_insn	(0X43E18A3D);
	set_cmt	(0X43E18A41,	"Size",	0);
	create_insn	(x=0X43E18A47);
	op_hex		(x,	1);
	create_insn	(0X43E18A51);
	create_insn	(x=0X43E18AA0);
	op_hex		(x,	1);
	create_insn	(x=0X43E18AB2);
	op_hex		(x,	1);
	create_insn	(x=0X43E18ACB);
	op_hex		(x,	1);
	create_insn	(x=0X43E18AD5);
	op_hex		(x,	1);
	create_insn	(x=0X43E18AE1);
	op_hex		(x,	1);
	create_insn	(x=0X43E18B09);
	op_hex		(x,	1);
	create_insn	(0X43E18B38);
	make_array	(0X43E18B62,	0XE);
	create_insn	(0X43E18B70);
	make_array	(0X43E18BA6,	0XA);
	create_insn	(0X43E18BB0);
	make_array	(0X43E18BE9,	0X7);
	create_insn	(0X43E18BF0);
	create_insn	(0X43E18C46);
	create_insn	(x=0X43E18C6C);
	op_hex		(x,	1);
	make_array	(0X43E18C76,	0XA);
	create_insn	(0X43E18C80);
	create_insn	(x=0X43E18C9C);
	op_hex		(x,	1);
	make_array	(0X43E18CA6,	0XA);
	create_insn	(0X43E18CB0);
	create_insn	(x=0X43E18CC1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E18CD5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E18CDB);
	op_hex		(x,	1);
	create_insn	(x=0X43E18CEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E18CF8,	0X8);
	create_insn	(0X43E18D00);
	create_insn	(x=0X43E18D11);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E18D25);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E18D2B);
	op_hex		(x,	1);
	make_array	(0X43E18D42,	0XE);
	create_insn	(0X43E18D50);
	create_insn	(x=0X43E18D53);
	op_hex		(x,	1);
	create_insn	(x=0X43E18D64);
	op_hex		(x,	1);
	make_array	(0X43E18D6E,	0X2);
	create_insn	(x=0X43E18D70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E18D76,	0XA);
	create_insn	(0X43E18D80);
	create_insn	(x=0X43E18D95);
	op_hex		(x,	1);
	set_cmt	(0X43E18DB9,	"a3",	0);
	set_cmt	(0X43E18DBA,	"a2",	0);
	set_cmt	(0X43E18DBB,	"this",	0);
	make_array	(0X43E18DCA,	0X6);
	create_insn	(0X43E18DD0);
	create_insn	(0X43E18DF0);
	make_array	(0X43E18DF7,	0X9);
	create_insn	(0X43E18E00);
	make_array	(0X43E18E12,	0XE);
	create_insn	(0X43E18E20);
	create_insn	(x=0X43E18E28);
	op_hex		(x,	1);
	create_insn	(0X43E18E53);
	make_array	(0X43E18E5C,	0X4);
	create_insn	(0X43E18E60);
	create_insn	(x=0X43E18E66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E18E7C,	0X4);
	create_insn	(0X43E18E80);
	create_insn	(x=0X43E18E82);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E18E87);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E18E8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E18E9B);
	op_hex		(x,	1);
	create_insn	(x=0X43E18EAD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E18EB6,	0XA);
	create_insn	(0X43E18EC0);
	create_insn	(x=0X43E18EC9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E18ED6);
	op_hex		(x,	1);
	create_insn	(x=0X43E18ED9);
	op_hex		(x,	1);
	create_insn	(x=0X43E18EE7);
	op_hex		(x,	1);
	make_array	(0X43E18EF1,	0XF);
	create_insn	(0X43E18F00);
	create_insn	(x=0X43E18F03);
	op_hex		(x,	1);
	set_cmt	(0X43E18F11,	"a3",	0);
	set_cmt	(0X43E18F13,	"a2",	0);
	create_insn	(x=0X43E18F13);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E18F18,	"this",	0);
	create_insn	(x=0X43E18F52);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E18FB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E18FD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E19010);
	op_hex		(x,	1);
	create_insn	(x=0X43E19013);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E19049);
	op_hex		(x,	1);
	create_insn	(x=0X43E19058);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E19091);
	op_hex		(x,	1);
	create_insn	(x=0X43E19095);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E190A5,	0XB);
	create_insn	(0X43E190B0);
	set_name	(0X43E190B0,	"C_SDK::InputSystem::Get::CVar");
	set_cmt	(0X43E190D7,	"num",	0);
	set_cmt	(0X43E190DB,	"value",	0);
	set_cmt	(0X43E190DD,	"pointer",	0);
	create_insn	(x=0X43E190E9);
	op_hex		(x,	1);
	create_insn	(x=0X43E190EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E19101);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E19106);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1910E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E19115);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E19130);
	create_insn	(x=0X43E19133);
	op_hex		(x,	1);
	make_array	(0X43E19166,	0XA);
	create_insn	(0X43E19170);
	create_insn	(x=0X43E19173);
	op_hex		(x,	1);
	create_insn	(x=0X43E19176);
	op_hex		(x,	1);
	set_cmt	(0X43E19179,	"int *",	0);
	set_cmt	(0X43E19183,	"char",	0);
	create_insn	(0X43E191BE);
	create_insn	(0X43E19201);
	create_insn	(0X43E1921D);
	create_insn	(0X43E19235);
	create_insn	(0X43E19251);
	create_insn	(x=0X43E19267);
	op_hex		(x,	1);
	create_insn	(0X43E1928D);
	create_insn	(0X43E192A9);
	set_cmt	(0X43E192EE,	"a3",	0);
	set_cmt	(0X43E192EF,	"a2",	0);
	set_cmt	(0X43E192F0,	"this",	0);
	set_cmt	(0X43E1933B,	"num",	0);
	set_cmt	(0X43E1934B,	"value",	0);
	set_cmt	(0X43E1934D,	"pointer",	0);
	create_insn	(x=0X43E19365);
	op_hex		(x,	1);
	create_insn	(0X43E19377);
	create_insn	(0X43E19395);
	set_cmt	(0X43E193A3,	"switch 20 cases ",	0);
	create_insn	(x=0X43E193AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E193B2,	"switch jump",	0);
	create_insn	(x=0X43E193B2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E193B9,	"jumptable 43E193B2 default case, cases 11,12,14-26",	1);
	create_insn	(0X43E193B9);
	set_name	(0X43E193B9,	"def_43E193B2");
	set_cmt	(0X43E193C1,	"char *",	0);
	set_cmt	(0X43E193DA,	"num",	0);
	set_cmt	(0X43E193EA,	"value",	0);
	set_cmt	(0X43E193EC,	"pointer",	0);
	create_insn	(x=0X43E19408);
	op_hex		(x,	1);
	set_cmt	(0X43E1941B,	"jumptable 43E193B2 cases 8-10,13,27",	1);
	create_insn	(0X43E1942A);
	create_insn	(0X43E19445);
	create_insn	(0X43E194DB);
	create_insn	(0X43E19531);
	create_insn	(x=0X43E19537);
	op_hex		(x,	1);
	set_cmt	(0X43E19565,	"switch 10 cases ",	0);
	create_insn	(x=0X43E19565);
	op_hex		(x,	1);
	set_cmt	(0X43E19573,	"switch jump",	0);
	create_insn	(x=0X43E19573);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E1957A,	"jumptable 43E19573 case 513",	1);
	create_insn	(0X43E1957A);
	create_insn	(x=0X43E1957E);
	op_hex		(x,	1);
	set_cmt	(0X43E19597,	"jumptable 43E19573 case 514",	1);
	create_insn	(0X43E19597);
	create_insn	(x=0X43E1959B);
	op_hex		(x,	1);
	set_cmt	(0X43E195B4,	"jumptable 43E19573 case 522",	1);
	create_insn	(0X43E195B4);
	create_insn	(x=0X43E195C7);
	op_hex		(x,	1);
	create_insn	(x=0X43E195CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E195CD);
	op_hex		(x,	1);
	set_cmt	(0X43E195EB,	"jumptable 43E19573 case 516",	1);
	create_insn	(0X43E195EB);
	set_cmt	(0X43E195EF,	"jumptable 43E19573 case 517",	1);
	create_insn	(0X43E195EF);
	create_insn	(x=0X43E195F3);
	op_hex		(x,	1);
	set_cmt	(0X43E19602,	"jumptable 43E19573 default case, cases 515,518-521",	1);
	set_name	(0X43E19602,	"def_43E19573");
	set_cmt	(0X43E19608,	"jump table for switch statement",	0);
	create_dword	(x=0X43E19608);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E19608,	"jpt_43E193B2");
	set_cmt	(0X43E19610,	"indirect table for switch statement",	0);
	create_byte	(0X43E19610);
	make_array	(0X43E19610,	0X14);
	set_cmt	(0X43E19624,	"jump table for switch statement",	0);
	create_dword	(x=0X43E19624);
	make_array	(x,	0XA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E19624,	"jpt_43E19573");
	make_array	(0X43E1964C,	0X4);
	create_insn	(0X43E19650);
	create_insn	(x=0X43E1967E);
	op_hex		(x,	1);
	create_insn	(0X43E19685);
	make_array	(0X43E1968B,	0X5);
	create_insn	(0X43E19690);
	make_array	(0X43E196EB,	0X5);
	create_insn	(0X43E196F0);
	create_insn	(x=0X43E196F5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E19708);
	op_hex		(x,	1);
	create_insn	(x=0X43E19721);
	op_hex		(x,	1);
	create_insn	(x=0X43E19726);
	op_hex		(x,	1);
	create_insn	(x=0X43E19730);
	op_hex		(x,	1);
	create_insn	(x=0X43E1974F);
	op_hex		(x,	1);
	create_insn	(x=0X43E1975A);
	op_hex		(x,	1);
	create_insn	(0X43E1976E);
	create_insn	(x=0X43E19789);
	op_hex		(x,	1);
	create_insn	(0X43E1978E);
	create_insn	(x=0X43E19799);
	op_hex		(x,	1);
	set_cmt	(0X43E197A1,	"Size",	0);
	create_insn	(x=0X43E197A7);
	op_hex		(x,	1);
	create_insn	(x=0X43E197B5);
	op_hex		(x,	1);
	create_insn	(0X43E197BD);
	set_cmt	(0X43E197C1,	"Size",	0);
	create_insn	(x=0X43E197C7);
	op_hex		(x,	1);
	create_insn	(0X43E197D1);
	create_insn	(x=0X43E197F2);
	op_hex		(x,	1);
	create_insn	(0X43E1980B);
	create_insn	(x=0X43E19836);
	op_hex		(x,	1);
	create_insn	(x=0X43E19869);
	op_hex		(x,	1);
	create_insn	(0X43E1989A);
	make_array	(0X43E198B9,	0X7);
	create_insn	(0X43E198C0);
	create_insn	(x=0X43E198C6);
	op_hex		(x,	1);
	make_array	(0X43E19977,	0X9);
	create_insn	(0X43E19980);
	create_insn	(0X43E19A29);
	create_insn	(0X43E19A32);
	create_insn	(0X43E19A38);
	create_insn	(0X43E19A3E);
	set_cmt	(0X43E19A48,	"_DWORD",	0);
	set_cmt	(0X43E19A60,	"_DWORD",	0);
	create_insn	(0X43E19A6F);
	create_insn	(0X43E19A72);
	create_insn	(0X43E19A96);
	set_cmt	(0X43E19A9A,	"Size",	0);
	create_insn	(x=0X43E19AA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E19AB1);
	op_stkvar	(x,	1);
	create_insn	(0X43E19AB9);
	create_insn	(0X43E19AC2);
	create_insn	(0X43E19AC8);
	create_insn	(x=0X43E19ACB);
	op_stkvar	(x,	0);
	create_insn	(0X43E19AD6);
	set_name	(0X43E19AD6,	"??2@YAPAXI@Z");
	set_cmt	(0X43E19ADB,	"_DWORD",	0);
	create_insn	(x=0X43E19ADB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E19AE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E19AF7);
	op_stkvar	(x,	0);
	create_insn	(0X43E19B06);
	set_name	(0X43E19B06,	"Segment::Routine::FindPeSection");
	create_insn	(x=0X43E19B09);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E19B28);
	op_stkvar	(x,	1);
	create_insn	(0X43E19B46);
	create_insn	(0X43E19B4A);
	set_name	(0X43E19B4A,	"Segment::Routine::Scrt::AcquireStartupLock");
	create_insn	(x=0X43E19B5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E19B64);
	create_insn	(0X43E19B78);
	create_insn	(0X43E19B7C);
	set_name	(0X43E19B7C,	"Segment::Routine::Scrt::DllmainAfterInitializeC");
	create_insn	(0X43E19B8C);
	create_insn	(0X43E19B9F);
	create_insn	(0X43E19BA7);
	set_name	(0X43E19BA7,	"Segment::Routine::Scrt::DllmainBeforeInitializeC");
	create_insn	(0X43E19BB5);
	set_name	(0X43E19BB5,	"Segment::Routine::Scrt::DllmainCrtThreadAttach");
	create_insn	(0X43E19BC1);
	create_insn	(0X43E19BD1);
	create_insn	(0X43E19BD4);
	set_name	(0X43E19BD4,	"Segment::Routine::Scrt::DllmainCrtThreadDetach");
	create_insn	(0X43E19BE1);
	set_cmt	(0X43E19BF6,	"_DWORD",	0);
	create_insn	(0X43E19C15);
	set_name	(0X43E19C15,	"Segment::Routine::Scrt::DllmainUninitializeC");
	set_cmt	(0X43E19C1E,	"_DWORD",	0);
	create_insn	(x=0X43E19C1E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E19C2A);
	set_cmt	(0X43E19C38,	"_DWORD",	0);
	create_insn	(0X43E19C38);
	set_cmt	(0X43E19C45,	"_DWORD",	0);
	create_insn	(0X43E19C45);
	create_insn	(0X43E19C67);
	set_cmt	(0X43E19C70,	"_DWORD",	0);
	create_insn	(0X43E19C7A);
	create_insn	(0X43E19C7E);
	create_insn	(0X43E19C8E);
	set_cmt	(0X43E19C8F,	"a3",	0);
	create_insn	(x=0X43E19CA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E19CB7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E19CCA);
	op_hex		(x,	1);
	set_cmt	(0X43E19CFD,	"a4",	0);
	create_insn	(0X43E19CFD);
	set_cmt	(0X43E19D04,	"Trap to Debugger",	0);
	create_insn	(x=0X43E19D04);
	op_hex		(x,	0);
	create_insn	(0X43E19D05);
	set_name	(0X43E19D05,	"Segment::Routine::Scrt::IsNonWritableInCurrenImage");
	create_insn	(x=0X43E19D07);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E19D11);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X43E19D28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E19D39);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E19D42);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E19D45);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E19D4C,	"rva",	0);
	set_cmt	(0X43E19D4D,	"imageBase",	0);
	create_insn	(x=0X43E19D5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E19D6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E19D7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E19D80);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E19D89);
	op_stkvar	(x,	1);
	create_insn	(0X43E19D99);
	create_insn	(x=0X43E19DAD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E19DB6);
	set_name	(0X43E19DB6,	"Segment::Routine::Scrt::UninitializeCrt");
	create_insn	(x=0X43E19DC2);
	op_stkvar	(x,	0);
	set_cmt	(0X43E19DC8,	"_DWORD",	0);
	create_insn	(x=0X43E19DC8);
	op_stkvar	(x,	0);
	set_cmt	(0X43E19DD0,	"_DWORD",	0);
	create_insn	(x=0X43E19DD0);
	op_stkvar	(x,	0);
	create_insn	(0X43E19DDE);
	create_insn	(x=0X43E19DE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E19DF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E19E06);
	op_stkvar	(x,	1);
	create_insn	(0X43E19E0B);
	create_insn	(x=0X43E19E0E);
	op_stkvar	(x,	0);
	create_insn	(0X43E19E20);
	create_insn	(x=0X43E19E23);
	op_hex		(x,	1);
	create_insn	(x=0X43E19E2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E19E43);
	set_name	(0X43E19E43,	"??_U@YAPAXI@Z");
	create_insn	(0X43E19E4C);
	create_insn	(0X43E19E51);
	set_name	(0X43E19E51,	"Segment::Startup::DllMain::CrtDispatch");
	create_insn	(x=0X43E19E54);
	op_stkvar	(x,	1);
	create_insn	(0X43E19E70);
	create_insn	(0X43E19E77);
	set_cmt	(0X43E19E81,	"a5",	0);
	create_insn	(x=0X43E19E81);
	op_stkvar	(x,	0);
	set_cmt	(0X43E19E84,	"a4",	0);
	create_insn	(x=0X43E19E84);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E19E8F);
	op_stkvar	(x,	0);
	set_cmt	(0X43E19E99,	"bool",	0);
	create_insn	(0X43E19EA4);
	create_insn	(x=0X43E19EA6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E19EC8,	"a1",	0);
	create_insn	(x=0X43E19ECD);
	op_hex		(x,	1);
	create_insn	(x=0X43E19F00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E19F05);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E19F1E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E19F23);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E19F5A,	"offset",	0);
	set_cmt	(0X43E19F6D,	"a3",	0);
	set_cmt	(0X43E19F6F,	"_DWORD",	0);
	create_insn	(0X43E19F84);
	create_insn	(0X43E19F87);
	set_name	(0X43E19F87,	"Segment::Routine::Scrt::ReleaseStartupLock");
	create_insn	(0X43E19F91);
	set_cmt	(0X43E19FA3,	"a4",	0);
	create_insn	(0X43E19FA3);
	set_cmt	(0X43E19FAA,	"Trap to Debugger",	0);
	create_insn	(x=0X43E19FAA);
	op_hex		(x,	0);
	create_insn	(0X43E19FAB);
	set_name	(0X43E19FAB,	"Segment::Startup::DllMain::CrtProcessDetach");
	create_insn	(x=0X43E19FAD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E19FCB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E19FCE);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X43E19FEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E19FF1);
	op_stkvar	(x,	0);
	set_cmt	(0X43E19FFD,	"char",	0);
	set_cmt	(0X43E19FFF,	"char",	0);
	create_insn	(x=0X43E19FFF);
	op_stkvar	(x,	0);
	create_insn	(0X43E1A012);
	set_name	(0X43E1A012,	"Segment::Routine::Scrt::DllmainUninitializeCritical");
	create_insn	(0X43E1A021);
	create_insn	(x=0X43E1A023);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1A033,	"a4",	0);
	create_insn	(0X43E1A033);
	set_cmt	(0X43E1A03A,	"Trap to Debugger",	0);
	create_insn	(x=0X43E1A03A);
	op_hex		(x,	0);
	create_insn	(0X43E1A03B);
	set_name	(0X43E1A03B,	"Segment::Startup::DllMain::Dispatch");
	create_insn	(x=0X43E1A03D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E1A047);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A05D);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A06B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A070);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A075);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A07F);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1A08A,	"void *",	0);
	set_cmt	(0X43E1A08B,	"unsigned int",	0);
	set_cmt	(0X43E1A08C,	"HINSTANCE",	0);
	create_insn	(x=0X43E1A08C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A096);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1A0A1,	"callbackRoutine",	0);
	set_cmt	(0X43E1A0A2,	"reason",	0);
	set_cmt	(0X43E1A0A3,	"module",	0);
	create_insn	(x=0X43E1A0A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A0AD);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1A0B9,	"callbackRoutine",	0);
	set_cmt	(0X43E1A0BA,	"reason",	0);
	set_cmt	(0X43E1A0BB,	"module",	0);
	create_insn	(x=0X43E1A0BB);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1A0C3,	"void *",	0);
	set_cmt	(0X43E1A0C4,	"unsigned int",	0);
	set_cmt	(0X43E1A0C5,	"HINSTANCE",	0);
	create_insn	(x=0X43E1A0C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A0CF);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1A0E0,	"void *",	0);
	set_cmt	(0X43E1A0E1,	"unsigned int",	0);
	set_cmt	(0X43E1A0E2,	"HINSTANCE",	0);
	create_insn	(x=0X43E1A0E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A0EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A0F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A101);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A109);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E1A10E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A111);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A114);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A11C);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A120);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A125);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A128);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A131);
	op_stkvar	(x,	1);
	create_insn	(0X43E1A141);
	create_insn	(0X43E1A154);
	set_cmt	(0X43E1A157,	"_DWORD",	0);
	set_cmt	(0X43E1A16C,	"this",	0);
	create_insn	(0X43E1A16C);
	set_name	(0X43E1A16C,	"Segment::Startup::DllEntryPoint");
	create_insn	(x=0X43E1A16F);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1A17A,	"lpvReserved",	0);
	create_insn	(x=0X43E1A17A);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1A17D,	"fdwReason",	0);
	create_insn	(x=0X43E1A17D);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1A180,	"hinstDLL",	0);
	create_insn	(x=0X43E1A180);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A188);
	op_hex		(x,	1);
	create_insn	(0X43E1A18F);
	create_insn	(0X43E1A194);
	create_insn	(x=0X43E1A1A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1A1AF);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A1B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A1B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1A1C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1A1C7);
	create_insn	(x=0X43E1A1D5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1A1E2);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A1E8);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A1EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1A1F3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1A1FA);
	create_insn	(x=0X43E1A1FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1A20B);
	set_name	(0X43E1A20B,	"??0exception@std@@QAE@QBDH@Z");
	create_insn	(x=0X43E1A214);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1A220);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0X43E1A238);
	create_insn	(x=0X43E1A23B);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A246);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E1A254,	"Trap to Debugger",	0);
	create_insn	(x=0X43E1A254);
	op_hex		(x,	0);
	create_insn	(0X43E1A255);
	create_insn	(x=0X43E1A258);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A263);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E1A271,	"Trap to Debugger",	0);
	create_insn	(x=0X43E1A271);
	op_hex		(x,	0);
	create_insn	(0X43E1A272);
	set_name	(0X43E1A272,	"Segment::Routine::SaAvailableInit");
	create_insn	(x=0X43E1A275);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A27C);
	op_hex		(x,	1);
	set_cmt	(0X43E1A289,	"ProcessorFeature",	0);
	create_insn	(x=0X43E1A298);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A29E);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A2AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A2C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A2C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A2CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A2CE);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A2D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A2D7);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A2DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A2DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A2E2);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A2E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A2F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A2FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A30B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A30E);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A343);
	op_hex		(x,	1);
	create_insn	(0X43E1A34E);
	create_insn	(x=0X43E1A354);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A358);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A35B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A36B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A370);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A37C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A37F);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A387);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A392);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A397);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A39E);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A3AF);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A3B6);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A3C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A3C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A3CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A3CE);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A3DB);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A3ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A3F2);
	op_hex		(x,	1);
	create_insn	(0X43E1A409);
	create_insn	(0X43E1A40D);
	set_name	(0X43E1A40D,	"Segment::Routine::Scrt::IsUcrtDllInUse");
	create_insn	(0X43E1A419);
	set_name	(0X43E1A419,	"Segment::Routine::Scrt::FastFail");
	create_insn	(x=0X43E1A41C);
	op_hex		(x,	1);
	set_cmt	(0X43E1A423,	"ProcessorFeature",	0);
	create_insn	(x=0X43E1A42E);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1A431,	"DOS 2+ internal - FAST PUTCHAR\nAL = character to display",	0);
	create_insn	(x=0X43E1A431);
	op_hex		(x,	0);
	set_cmt	(0X43E1A43A,	"num",	0);
	create_insn	(x=0X43E1A43A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A441);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1A447,	"value",	0);
	set_cmt	(0X43E1A449,	"pointer",	0);
	create_insn	(x=0X43E1A44F);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A452);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A458);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A45E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A464);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A46A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A470);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A476);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A47D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A484);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A48B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A492);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A499);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A4A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A4A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A4AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A4B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A4B9);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1A4C6,	"num",	0);
	create_insn	(x=0X43E1A4C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A4CE);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1A4D1,	"value",	0);
	set_cmt	(0X43E1A4D3,	"pointer",	0);
	create_insn	(x=0X43E1A4D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A4DC);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A4DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A4E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A4ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A4FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A500);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A503);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A50B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A516);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A533);
	op_hex		(x,	1);
	set_name	(0X43E1A533,	"Segment::Routine::CrtDebuggerHook");
	make_array	(0X43E1A53B,	0X5);
	create_insn	(x=0X43E1A540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E1A540,	"Segment::ExceptionManager::SEHProlog4");
	create_insn	(x=0X43E1A54C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A550);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A554);
	op_stkvar	(x,	1);
	create_insn	(0X43E1A586);
	create_insn	(0X43E1A59B);
	create_insn	(x=0X43E1A5B5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E1A5BA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E1A5C4);
	op_hex		(x,	1);
	create_insn	(0X43E1A5CA);
	create_insn	(x=0X43E1A5CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A5D0);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A5D7);
	op_hex		(x,	1);
	create_insn	(0X43E1A617);
	set_name	(0X43E1A617,	"Segment::Security::InitCookie");
	set_cmt	(0X43E1A61E,	"_DWORD",	0);
	create_insn	(0X43E1A643);
	create_insn	(x=0X43E1A647);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A64C);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A662);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E1A66E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E1A67A);
	set_name	(0X43E1A67A,	"Segment::Routine::Scrt::InitializeDefaultLocalStdioOptions");
	create_insn	(x=0X43E1A682);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A690);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A697);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1A69D);
	create_insn	(x=0X43E1A69F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1A6A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E1A6B4,	"_DWORD",	0);
	create_insn	(0X43E1A6C9);
	create_insn	(x=0X43E1A6CB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1A6D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E1A6E0,	"_DWORD",	0);
	create_insn	(0X43E1A6F5);
	set_name	(0X43E1A6F5,	"Segment::Security::CheckCookie");
	create_insn	(0X43E1A700);
	create_insn	(0X43E1A706);
	create_insn	(0X43E1A72E);
	set_name	(0X43E1A72E,	"Segment::ExceptionManager::ReportGsFailure");
	create_insn	(x=0X43E1A731);
	op_hex		(x,	1);
	set_cmt	(0X43E1A737,	"ProcessorFeature",	0);
	set_cmt	(0X43E1A745,	"DOS 2+ internal - FAST PUTCHAR\nAL = character to display",	0);
	create_insn	(x=0X43E1A745);
	op_hex		(x,	0);
	create_insn	(x=0X43E1A79B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A7A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A7AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A7B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1A7F1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E1A807);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A80E);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A817);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1A81B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E1A827);
	create_insn	(0X43E1A82D);
	create_insn	(0X43E1A833);
	create_insn	(0X43E1A839);
	set_name	(0X43E1A839,	"C_SDK::MemoryManagment::MemSet");
	create_insn	(0X43E1A83F);
	create_insn	(0X43E1A845);
	set_name	(0X43E1A845,	"__std_type_info_destroy_list");
	create_insn	(0X43E1A84B);
	create_insn	(0X43E1A851);
	set_name	(0X43E1A851,	"callnewh");
	create_insn	(0X43E1A857);
	set_name	(0X43E1A857,	"malloc");
	create_insn	(0X43E1A85D);
	create_insn	(0X43E1A863);
	create_insn	(0X43E1A869);
	create_insn	(0X43E1A86F);
	create_insn	(0X43E1A875);
	create_insn	(0X43E1A87B);
	set_name	(0X43E1A87B,	"Segment::Routine::ExecuteOnExitTable");
	create_insn	(0X43E1A881);
	create_insn	(0X43E1A887);
	create_insn	(0X43E1A88D);
	set_name	(0X43E1A88D,	"Segment::Routine::InitTerm");
	create_insn	(0X43E1A893);
	set_name	(0X43E1A893,	"Segment::Routine::InitTermE");
	create_insn	(0X43E1A899);
	set_name	(0X43E1A899,	"C_SDK::ImportsRoutine::IsProcessorFeaturePresent");
	create_insn	(0X43E1A89F);
	set_name	(0X43E1A89F,	"Segment::Routine::ShouldInitializeEnvironment2");
	create_insn	(0X43E1A8A2);
	create_insn	(x=0X43E1A8C8);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A8CB);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A8CF);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A8DD);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A8E4);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A8F2);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A900);
	op_hex		(x,	1);
	create_insn	(0X43E1A90E);
	create_insn	(0X43E1A915);
	make_array	(0X43E1A91A,	0X6);
	create_insn	(0X43E1A920);
	create_insn	(0X43E1A940);
	make_array	(0X43E1A944,	0XC);
	create_insn	(0X43E1A950);
	set_cmt	(0X43E1A975,	"_DWORD",	0);
	set_cmt	(0X43E1A978,	"_DWORD",	0);
	set_cmt	(0X43E1A97B,	"_DWORD",	0);
	set_cmt	(0X43E1A97C,	"_DWORD",	0);
	set_cmt	(0X43E1A97F,	"_DWORD",	0);
	set_cmt	(0X43E1A981,	"_DWORD",	0);
	make_array	(0X43E1A98E,	0X2);
	create_insn	(0X43E1A990);
	create_insn	(x=0X43E1A993);
	op_hex		(x,	1);
	create_insn	(x=0X43E1A9AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1A9B2);
	create_insn	(x=0X43E1AAA9);
	op_hex		(x,	1);
	set_cmt	(0X43E1AAAE,	"propHash",	0);
	create_insn	(x=0X43E1AAB3);
	op_hex		(x,	1);
	set_cmt	(0X43E1AAB6,	"classHash",	0);
	create_insn	(0X43E1AAD0);
	create_insn	(x=0X43E1AAE2);
	op_hex		(x,	1);
	set_cmt	(0X43E1AAE7,	"propHash",	0);
	create_insn	(x=0X43E1AAEC);
	op_hex		(x,	1);
	set_cmt	(0X43E1AAEF,	"classHash",	0);
	set_cmt	(0X43E1AB1B,	"propHash",	0);
	set_cmt	(0X43E1AB20,	"classHash",	0);
	make_array	(0X43E1ABB7,	0X9);
	create_insn	(0X43E1ABC0);
	set_name	(0X43E1ABC0,	"OneTap::Features::AnimationSystem::TriggerBalanceAdjust");
	create_insn	(x=0X43E1ABCF);
	op_hex		(x,	1);
	set_cmt	(0X43E1ABD3,	"propHash",	0);
	create_insn	(x=0X43E1ABD8);
	op_hex		(x,	1);
	set_cmt	(0X43E1ABDB,	"classHash",	0);
	create_insn	(0X43E1ABF1);
	create_insn	(0X43E1AC86);
	set_cmt	(0X43E1ACA4,	"_DWORD",	0);
	set_cmt	(0X43E1ACB8,	"int",	0);
	create_insn	(0X43E1ACD0);
	create_insn	(x=0X43E1ACD3);
	op_hex		(x,	1);
	create_insn	(x=0X43E1ACD9);
	op_hex		(x,	1);
	create_insn	(x=0X43E1ACEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1ACF4);
	create_insn	(x=0X43E1AD08);
	op_hex		(x,	1);
	set_cmt	(0X43E1AD0C,	"propHash",	0);
	create_insn	(x=0X43E1AD11);
	op_hex		(x,	1);
	set_cmt	(0X43E1AD14,	"classHash",	0);
	create_insn	(0X43E1AD2A);
	make_array	(0X43E1ADC5,	0XB);
	create_insn	(0X43E1ADD0);
	create_insn	(x=0X43E1ADD8);
	op_hex		(x,	1);
	set_cmt	(0X43E1ADDF,	"propHash",	0);
	set_cmt	(0X43E1ADE4,	"classHash",	0);
	make_array	(0X43E1AE27,	0X9);
	create_insn	(0X43E1AE30);
	create_insn	(x=0X43E1AE4B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1AE59);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E1AE66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1AE6D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1AE73);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1AEC7);
	create_insn	(0X43E1AED3);
	create_insn	(0X43E1AEF0);
	set_cmt	(0X43E1AF0A,	"propHash",	0);
	set_cmt	(0X43E1AF0F,	"classHash",	0);
	create_insn	(0X43E1AF38);
	set_cmt	(0X43E1AF42,	"propHash",	0);
	set_cmt	(0X43E1AF47,	"classHash",	0);
	make_array	(0X43E1AF74,	0XC);
	create_insn	(0X43E1AF80);
	create_insn	(0X43E1AFBD);
	make_array	(0X43E1B048,	0X8);
	create_insn	(0X43E1B050);
	create_insn	(x=0X43E1B053);
	op_hex		(x,	1);
	create_insn	(x=0X43E1B056);
	op_hex		(x,	1);
	create_insn	(0X43E1B209);
	create_insn	(0X43E1B233);
	create_insn	(0X43E1B244);
	create_insn	(0X43E1B2C1);
	create_insn	(0X43E1B2EB);
	make_array	(0X43E1B2FC,	0X4);
	create_insn	(0X43E1B300);
	set_name	(0X43E1B300,	"OneTap::Features::AnimationSystem::Instance");
	create_insn	(x=0X43E1B303);
	op_hex		(x,	1);
	create_insn	(x=0X43E1B306);
	op_hex		(x,	1);
	create_insn	(x=0X43E1B309);
	op_hex		(x,	1);
	create_insn	(x=0X43E1B310);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1B316,	"interface",	0);
	create_insn	(x=0X43E1B31C);
	op_hex		(x,	1);
	set_cmt	(0X43E1B322,	"index",	0);
	set_cmt	(0X43E1B336,	"this",	0);
	create_insn	(x=0X43E1B353);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1B366);
	set_cmt	(0X43E1B3A2,	"index",	0);
	set_cmt	(0X43E1B3AD,	"interface",	0);
	set_cmt	(0X43E1B3BD,	"this",	0);
	create_insn	(x=0X43E1B3E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1B40E);
	op_hex		(x,	1);
	set_cmt	(0X43E1B412,	"propHash",	0);
	create_insn	(x=0X43E1B417);
	op_hex		(x,	1);
	set_cmt	(0X43E1B41A,	"classHash",	0);
	create_insn	(0X43E1B433);
	create_insn	(x=0X43E1B446);
	op_hex		(x,	1);
	create_insn	(x=0X43E1B450);
	op_hex		(x,	1);
	set_cmt	(0X43E1B454,	"propHash",	0);
	create_insn	(x=0X43E1B459);
	op_hex		(x,	1);
	set_cmt	(0X43E1B45C,	"classHash",	0);
	create_insn	(0X43E1B472);
	create_insn	(x=0X43E1B48A);
	op_hex		(x,	1);
	set_cmt	(0X43E1B48E,	"propHash",	0);
	create_insn	(x=0X43E1B493);
	op_hex		(x,	1);
	set_cmt	(0X43E1B496,	"classHash",	0);
	create_insn	(0X43E1B4AC);
	create_insn	(0X43E1B4DA);
	set_cmt	(0X43E1B4EA,	"m_player",	0);
	create_insn	(0X43E1B4FA);
	create_insn	(0X43E1B577);
	create_insn	(0X43E1B5B7);
	create_insn	(x=0X43E1B5E3);
	op_hex		(x,	1);
	set_cmt	(0X43E1B5E8,	"propHash",	0);
	create_insn	(x=0X43E1B5ED);
	op_hex		(x,	1);
	set_cmt	(0X43E1B5F0,	"classHash",	0);
	create_insn	(0X43E1B610);
	set_cmt	(0X43E1B644,	"propHash",	0);
	set_cmt	(0X43E1B649,	"classHash",	0);
	set_cmt	(0X43E1B6AF,	"side",	0);
	set_cmt	(0X43E1B6B1,	"prevLagData",	0);
	set_cmt	(0X43E1B6B4,	"lagData",	0);
	set_cmt	(0X43E1B6B5,	"animationRecord",	0);
	set_cmt	(0X43E1B6B6,	"player",	0);
	create_insn	(x=0X43E1B6C7);
	op_hex		(x,	1);
	set_cmt	(0X43E1B6CC,	"propHash",	0);
	create_insn	(x=0X43E1B6D1);
	op_hex		(x,	1);
	set_cmt	(0X43E1B6D4,	"classHash",	0);
	create_insn	(0X43E1B6F4);
	create_insn	(x=0X43E1B72A);
	op_hex		(x,	1);
	set_cmt	(0X43E1B72F,	"propHash",	0);
	create_insn	(x=0X43E1B734);
	op_hex		(x,	1);
	set_cmt	(0X43E1B737,	"classHash",	0);
	create_insn	(0X43E1B757);
	set_cmt	(0X43E1B772,	"propHash",	0);
	set_cmt	(0X43E1B777,	"classHash",	0);
	create_insn	(x=0X43E1B7CB);
	op_hex		(x,	1);
	create_insn	(0X43E1B7D4);
	create_insn	(x=0X43E1B7FE);
	op_hex		(x,	1);
	set_cmt	(0X43E1B802,	"propHash",	0);
	create_insn	(x=0X43E1B807);
	op_hex		(x,	1);
	set_cmt	(0X43E1B80A,	"classHash",	0);
	set_cmt	(0X43E1B83F,	"propHash",	0);
	set_cmt	(0X43E1B844,	"classHash",	0);
	create_insn	(x=0X43E1B894);
	op_hex		(x,	1);
	create_insn	(0X43E1B89D);
	set_cmt	(0X43E1B8A6,	"player",	0);
	set_cmt	(0X43E1B8A9,	"layers",	0);
	set_cmt	(0X43E1B8B4,	"side",	0);
	set_cmt	(0X43E1B8B6,	"prevLagData",	0);
	set_cmt	(0X43E1B8B9,	"lagData",	0);
	set_cmt	(0X43E1B8BC,	"animationRecord",	0);
	set_cmt	(0X43E1B8BF,	"player",	0);
	create_insn	(x=0X43E1B8D2);
	op_hex		(x,	1);
	set_cmt	(0X43E1B8D7,	"propHash",	0);
	create_insn	(x=0X43E1B8DC);
	op_hex		(x,	1);
	set_cmt	(0X43E1B8DF,	"classHash",	0);
	create_insn	(0X43E1B8FF);
	create_insn	(x=0X43E1B935);
	op_hex		(x,	1);
	set_cmt	(0X43E1B93A,	"propHash",	0);
	create_insn	(x=0X43E1B93F);
	op_hex		(x,	1);
	set_cmt	(0X43E1B942,	"classHash",	0);
	create_insn	(0X43E1B962);
	set_cmt	(0X43E1B97D,	"propHash",	0);
	set_cmt	(0X43E1B982,	"classHash",	0);
	create_insn	(x=0X43E1B9D6);
	op_hex		(x,	1);
	create_insn	(0X43E1B9DF);
	create_insn	(x=0X43E1BA09);
	op_hex		(x,	1);
	set_cmt	(0X43E1BA0D,	"propHash",	0);
	create_insn	(x=0X43E1BA12);
	op_hex		(x,	1);
	set_cmt	(0X43E1BA15,	"classHash",	0);
	set_cmt	(0X43E1BA4A,	"propHash",	0);
	set_cmt	(0X43E1BA4F,	"classHash",	0);
	set_cmt	(0X43E1BA92,	"side",	0);
	create_insn	(0X43E1BA92);
	set_cmt	(0X43E1BA94,	"prevLagData",	0);
	set_cmt	(0X43E1BA97,	"lagData",	0);
	set_cmt	(0X43E1BA98,	"animationRecord",	0);
	set_cmt	(0X43E1BA99,	"player",	0);
	create_insn	(x=0X43E1BAAA);
	op_hex		(x,	1);
	set_cmt	(0X43E1BAAF,	"propHash",	0);
	create_insn	(x=0X43E1BAB4);
	op_hex		(x,	1);
	set_cmt	(0X43E1BAB7,	"classHash",	0);
	create_insn	(0X43E1BADA);
	create_insn	(x=0X43E1BB7F);
	op_hex		(x,	1);
	set_cmt	(0X43E1BB84,	"propHash",	0);
	create_insn	(x=0X43E1BB89);
	op_hex		(x,	1);
	set_cmt	(0X43E1BB8C,	"classHash",	0);
	create_insn	(x=0X43E1BBD8);
	op_hex		(x,	1);
	set_cmt	(0X43E1BBDD,	"propHash",	0);
	create_insn	(x=0X43E1BBE2);
	op_hex		(x,	1);
	set_cmt	(0X43E1BBE5,	"classHash",	0);
	create_insn	(0X43E1BBFF);
	set_cmt	(0X43E1BC1A,	"propHash",	0);
	set_cmt	(0X43E1BC1F,	"classHash",	0);
	create_insn	(x=0X43E1BC76);
	op_hex		(x,	1);
	create_insn	(0X43E1BC7F);
	create_insn	(x=0X43E1BCA9);
	op_hex		(x,	1);
	set_cmt	(0X43E1BCAD,	"propHash",	0);
	create_insn	(x=0X43E1BCB2);
	op_hex		(x,	1);
	set_cmt	(0X43E1BCB5,	"classHash",	0);
	create_insn	(0X43E1BCD1);
	set_cmt	(0X43E1BCE9,	"propHash",	0);
	set_cmt	(0X43E1BCEE,	"classHash",	0);
	create_insn	(0X43E1BD1B);
	create_insn	(x=0X43E1BD1D);
	op_hex		(x,	1);
	set_cmt	(0X43E1BD22,	"propHash",	0);
	create_insn	(x=0X43E1BD27);
	op_hex		(x,	1);
	set_cmt	(0X43E1BD2A,	"classHash",	0);
	create_insn	(x=0X43E1BD79);
	op_hex		(x,	1);
	set_cmt	(0X43E1BD7E,	"propHash",	0);
	create_insn	(x=0X43E1BD83);
	op_hex		(x,	1);
	set_cmt	(0X43E1BD86,	"classHash",	0);
	create_insn	(0X43E1BDA0);
	set_cmt	(0X43E1BDBB,	"propHash",	0);
	set_cmt	(0X43E1BDC0,	"classHash",	0);
	create_insn	(x=0X43E1BE17);
	op_hex		(x,	1);
	create_insn	(0X43E1BE20);
	create_insn	(x=0X43E1BE4A);
	op_hex		(x,	1);
	set_cmt	(0X43E1BE4E,	"propHash",	0);
	create_insn	(x=0X43E1BE53);
	op_hex		(x,	1);
	set_cmt	(0X43E1BE56,	"classHash",	0);
	create_insn	(0X43E1BE72);
	set_cmt	(0X43E1BE8A,	"propHash",	0);
	set_cmt	(0X43E1BE8F,	"classHash",	0);
	create_insn	(x=0X43E1BEE4);
	op_hex		(x,	1);
	create_insn	(0X43E1BEED);
	set_cmt	(0X43E1BEF6,	"player",	0);
	set_cmt	(0X43E1BEF9,	"layers",	0);
	set_cmt	(0X43E1BF04,	"side",	0);
	set_cmt	(0X43E1BF06,	"prevLagData",	0);
	set_cmt	(0X43E1BF09,	"lagData",	0);
	set_cmt	(0X43E1BF0C,	"animationRecord",	0);
	set_cmt	(0X43E1BF0F,	"player",	0);
	create_insn	(x=0X43E1BF2C);
	op_hex		(x,	1);
	set_cmt	(0X43E1BF31,	"propHash",	0);
	create_insn	(x=0X43E1BF36);
	op_hex		(x,	1);
	set_cmt	(0X43E1BF39,	"classHash",	0);
	create_insn	(0X43E1BF59);
	create_insn	(x=0X43E1BF8F);
	op_hex		(x,	1);
	set_cmt	(0X43E1BF94,	"propHash",	0);
	create_insn	(x=0X43E1BF99);
	op_hex		(x,	1);
	set_cmt	(0X43E1BF9C,	"classHash",	0);
	create_insn	(0X43E1BFBC);
	set_cmt	(0X43E1BFD7,	"propHash",	0);
	set_cmt	(0X43E1BFDC,	"classHash",	0);
	create_insn	(x=0X43E1C030);
	op_hex		(x,	1);
	create_insn	(0X43E1C039);
	create_insn	(x=0X43E1C063);
	op_hex		(x,	1);
	set_cmt	(0X43E1C067,	"propHash",	0);
	create_insn	(x=0X43E1C06C);
	op_hex		(x,	1);
	set_cmt	(0X43E1C06F,	"classHash",	0);
	set_cmt	(0X43E1C0A4,	"propHash",	0);
	set_cmt	(0X43E1C0A9,	"classHash",	0);
	create_insn	(x=0X43E1C0D1);
	op_hex		(x,	1);
	set_cmt	(0X43E1C0D6,	"propHash",	0);
	create_insn	(x=0X43E1C0DB);
	op_hex		(x,	1);
	set_cmt	(0X43E1C0DE,	"classHash",	0);
	create_insn	(0X43E1C0FE);
	create_insn	(x=0X43E1C134);
	op_hex		(x,	1);
	set_cmt	(0X43E1C139,	"propHash",	0);
	create_insn	(x=0X43E1C13E);
	op_hex		(x,	1);
	set_cmt	(0X43E1C141,	"classHash",	0);
	create_insn	(0X43E1C161);
	set_cmt	(0X43E1C17C,	"propHash",	0);
	set_cmt	(0X43E1C181,	"classHash",	0);
	create_insn	(x=0X43E1C1D5);
	op_hex		(x,	1);
	create_insn	(0X43E1C1DE);
	create_insn	(x=0X43E1C208);
	op_hex		(x,	1);
	set_cmt	(0X43E1C20C,	"propHash",	0);
	create_insn	(x=0X43E1C211);
	op_hex		(x,	1);
	set_cmt	(0X43E1C214,	"classHash",	0);
	set_cmt	(0X43E1C249,	"propHash",	0);
	set_cmt	(0X43E1C24E,	"classHash",	0);
	create_insn	(x=0X43E1C29E);
	op_hex		(x,	1);
	create_insn	(0X43E1C2A7);
	set_cmt	(0X43E1C2B0,	"player",	0);
	set_cmt	(0X43E1C2B3,	"layers",	0);
	set_cmt	(0X43E1C2C7,	"side",	0);
	set_cmt	(0X43E1C2C9,	"prevLagData",	0);
	set_cmt	(0X43E1C2CC,	"lagData",	0);
	set_cmt	(0X43E1C2CD,	"animationRecord",	0);
	set_cmt	(0X43E1C2CE,	"player",	0);
	create_insn	(x=0X43E1C2DD);
	op_hex		(x,	1);
	set_cmt	(0X43E1C2E2,	"propHash",	0);
	create_insn	(x=0X43E1C2E7);
	op_hex		(x,	1);
	set_cmt	(0X43E1C2EA,	"classHash",	0);
	create_insn	(0X43E1C307);
	create_insn	(x=0X43E1C394);
	op_hex		(x,	1);
	set_cmt	(0X43E1C399,	"propHash",	0);
	create_insn	(x=0X43E1C39E);
	op_hex		(x,	1);
	set_cmt	(0X43E1C3A1,	"classHash",	0);
	create_insn	(0X43E1C3BB);
	set_cmt	(0X43E1C3D5,	"propHash",	0);
	set_cmt	(0X43E1C3DA,	"classHash",	0);
	create_insn	(x=0X43E1C430);
	op_hex		(x,	1);
	create_insn	(0X43E1C439);
	create_insn	(x=0X43E1C459);
	op_hex		(x,	1);
	set_cmt	(0X43E1C45D,	"propHash",	0);
	create_insn	(x=0X43E1C462);
	op_hex		(x,	1);
	set_cmt	(0X43E1C465,	"classHash",	0);
	create_insn	(0X43E1C47E);
	set_cmt	(0X43E1C498,	"propHash",	0);
	set_cmt	(0X43E1C49D,	"classHash",	0);
	create_insn	(x=0X43E1C4EF);
	op_hex		(x,	1);
	create_insn	(0X43E1C4F8);
	create_insn	(x=0X43E1C50B);
	op_hex		(x,	1);
	set_cmt	(0X43E1C50F,	"propHash",	0);
	create_insn	(x=0X43E1C514);
	op_hex		(x,	1);
	set_cmt	(0X43E1C517,	"classHash",	0);
	create_insn	(0X43E1C530);
	set_cmt	(0X43E1C54A,	"propHash",	0);
	set_cmt	(0X43E1C54F,	"classHash",	0);
	create_insn	(x=0X43E1C5A5);
	op_hex		(x,	1);
	create_insn	(0X43E1C5AE);
	set_cmt	(0X43E1C5C4,	"propHash",	0);
	set_cmt	(0X43E1C5C9,	"classHash",	0);
	set_cmt	(0X43E1C5DE,	"prevLagData",	0);
	set_cmt	(0X43E1C5E7,	"record",	0);
	set_cmt	(0X43E1C5FA,	"lagData",	0);
	create_insn	(0X43E1C729);
	create_insn	(x=0X43E1C753);
	op_hex		(x,	1);
	set_cmt	(0X43E1C757,	"propHash",	0);
	create_insn	(x=0X43E1C75C);
	op_hex		(x,	1);
	set_cmt	(0X43E1C75F,	"classHash",	0);
	create_insn	(0X43E1C778);
	set_cmt	(0X43E1C792,	"propHash",	0);
	set_cmt	(0X43E1C797,	"classHash",	0);
	create_insn	(x=0X43E1C7E4);
	op_hex		(x,	1);
	create_insn	(0X43E1C7ED);
	create_insn	(x=0X43E1C80D);
	op_hex		(x,	1);
	set_cmt	(0X43E1C811,	"propHash",	0);
	create_insn	(x=0X43E1C816);
	op_hex		(x,	1);
	set_cmt	(0X43E1C819,	"classHash",	0);
	create_insn	(0X43E1C832);
	set_cmt	(0X43E1C84C,	"propHash",	0);
	set_cmt	(0X43E1C851,	"classHash",	0);
	create_insn	(x=0X43E1C8A7);
	op_hex		(x,	1);
	create_insn	(0X43E1C8B3);
	create_insn	(0X43E1C8C1);
	create_insn	(x=0X43E1CA02);
	op_hex		(x,	1);
	create_insn	(x=0X43E1CA2C);
	op_hex		(x,	1);
	create_insn	(x=0X43E1CA3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1CA6C);
	op_hex		(x,	1);
	create_insn	(x=0X43E1CA9C);
	op_hex		(x,	1);
	create_insn	(x=0X43E1CAB3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E1CB3C,	0X4);
	create_insn	(0X43E1CB40);
	create_insn	(x=0X43E1CB43);
	op_hex		(x,	1);
	create_insn	(x=0X43E1CB46);
	op_hex		(x,	1);
	set_cmt	(0X43E1CB93,	"index",	0);
	set_cmt	(0X43E1CB9E,	"interface",	0);
	set_cmt	(0X43E1CBAF,	"this",	0);
	create_insn	(x=0X43E1CBD9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1CC05);
	op_hex		(x,	1);
	set_cmt	(0X43E1CC09,	"propHash",	0);
	create_insn	(x=0X43E1CC0E);
	op_hex		(x,	1);
	set_cmt	(0X43E1CC11,	"classHash",	0);
	create_insn	(0X43E1CC2B);
	create_insn	(x=0X43E1CC3F);
	op_hex		(x,	1);
	create_insn	(x=0X43E1CC49);
	op_hex		(x,	1);
	set_cmt	(0X43E1CC4D,	"propHash",	0);
	create_insn	(x=0X43E1CC52);
	op_hex		(x,	1);
	set_cmt	(0X43E1CC55,	"classHash",	0);
	create_insn	(0X43E1CC6B);
	create_insn	(x=0X43E1CC84);
	op_hex		(x,	1);
	set_cmt	(0X43E1CC88,	"propHash",	0);
	create_insn	(x=0X43E1CC8D);
	op_hex		(x,	1);
	set_cmt	(0X43E1CC90,	"classHash",	0);
	create_insn	(0X43E1CCA6);
	create_insn	(0X43E1CCD2);
	create_insn	(0X43E1CD3B);
	create_insn	(0X43E1CD84);
	set_cmt	(0X43E1CD9B,	"player",	0);
	set_cmt	(0X43E1CD9F,	"data",	0);
	set_cmt	(0X43E1CE23,	"propHash",	0);
	set_cmt	(0X43E1CE28,	"classHash",	0);
	set_cmt	(0X43E1CECD,	"propHash",	0);
	set_cmt	(0X43E1CED2,	"classHash",	0);
	create_insn	(x=0X43E1CEE5);
	op_hex		(x,	1);
	create_insn	(0X43E1CEEB);
	set_cmt	(0X43E1CEEF,	"propHash",	0);
	set_cmt	(0X43E1CEF4,	"classHash",	0);
	create_insn	(x=0X43E1CF07);
	op_hex		(x,	1);
	set_cmt	(0X43E1CF20,	"propHash",	0);
	set_cmt	(0X43E1CF25,	"classHash",	0);
	create_insn	(x=0X43E1CF46);
	op_hex		(x,	1);
	set_cmt	(0X43E1CF4A,	"propHash",	0);
	create_insn	(x=0X43E1CF4F);
	op_hex		(x,	1);
	set_cmt	(0X43E1CF52,	"classHash",	0);
	create_insn	(0X43E1CF6C);
	set_cmt	(0X43E1CF8A,	"propHash",	0);
	set_cmt	(0X43E1CF8F,	"classHash",	0);
	set_cmt	(0X43E1CFBA,	"propHash",	0);
	set_cmt	(0X43E1CFBF,	"classHash",	0);
	create_insn	(x=0X43E1D025);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1D02C);
	create_insn	(x=0X43E1D05B);
	op_hex		(x,	1);
	set_cmt	(0X43E1D05F,	"propHash",	0);
	create_insn	(x=0X43E1D064);
	op_hex		(x,	1);
	set_cmt	(0X43E1D067,	"classHash",	0);
	create_insn	(0X43E1D08C);
	create_insn	(0X43E1D143);
	create_insn	(x=0X43E1D164);
	op_hex		(x,	1);
	set_cmt	(0X43E1D168,	"propHash",	0);
	create_insn	(x=0X43E1D16D);
	op_hex		(x,	1);
	set_cmt	(0X43E1D170,	"classHash",	0);
	create_insn	(0X43E1D22B);
	set_cmt	(0X43E1D262,	"int",	0);
	set_cmt	(0X43E1D264,	"_DWORD",	0);
	create_insn	(0X43E1D27B);
	create_insn	(x=0X43E1D28C);
	op_hex		(x,	1);
	set_cmt	(0X43E1D290,	"propHash",	0);
	create_insn	(x=0X43E1D295);
	op_hex		(x,	1);
	set_cmt	(0X43E1D298,	"classHash",	0);
	create_insn	(0X43E1D2B1);
	create_insn	(0X43E1D2CD);
	create_insn	(x=0X43E1D2FB);
	op_hex		(x,	1);
	set_cmt	(0X43E1D300,	"propHash",	0);
	create_insn	(x=0X43E1D305);
	op_hex		(x,	1);
	set_cmt	(0X43E1D308,	"classHash",	0);
	create_insn	(x=0X43E1D335);
	op_hex		(x,	1);
	set_cmt	(0X43E1D33A,	"propHash",	0);
	create_insn	(x=0X43E1D33F);
	op_hex		(x,	1);
	set_cmt	(0X43E1D342,	"classHash",	0);
	create_insn	(0X43E1D36F);
	create_insn	(0X43E1D37E);
	create_insn	(x=0X43E1D3A4);
	op_hex		(x,	1);
	set_cmt	(0X43E1D3A9,	"propHash",	0);
	create_insn	(x=0X43E1D3AE);
	op_hex		(x,	1);
	set_cmt	(0X43E1D3B1,	"classHash",	0);
	create_insn	(x=0X43E1D3EB);
	op_hex		(x,	1);
	set_cmt	(0X43E1D3F0,	"propHash",	0);
	create_insn	(x=0X43E1D3F5);
	op_hex		(x,	1);
	set_cmt	(0X43E1D3F8,	"classHash",	0);
	create_insn	(0X43E1D41E);
	create_insn	(x=0X43E1D44C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1D454);
	create_insn	(x=0X43E1D561);
	op_hex		(x,	1);
	set_cmt	(0X43E1D566,	"propHash",	0);
	create_insn	(x=0X43E1D56B);
	op_hex		(x,	1);
	set_cmt	(0X43E1D56E,	"classHash",	0);
	create_insn	(0X43E1D592);
	create_insn	(x=0X43E1D5A5);
	op_hex		(x,	1);
	set_cmt	(0X43E1D5AA,	"propHash",	0);
	create_insn	(x=0X43E1D5AF);
	op_hex		(x,	1);
	set_cmt	(0X43E1D5B2,	"classHash",	0);
	set_cmt	(0X43E1D5E5,	"propHash",	0);
	set_cmt	(0X43E1D5EA,	"classHash",	0);
	create_insn	(0X43E1D68F);
	create_insn	(x=0X43E1D698);
	op_hex		(x,	1);
	set_cmt	(0X43E1D69C,	"propHash",	0);
	create_insn	(x=0X43E1D6A1);
	op_hex		(x,	1);
	set_cmt	(0X43E1D6A4,	"classHash",	0);
	create_insn	(0X43E1D6BD);
	set_cmt	(0X43E1D726,	"player",	0);
	set_cmt	(0X43E1D72A,	"animData",	0);
	create_insn	(x=0X43E1D741);
	op_hex		(x,	1);
	set_cmt	(0X43E1D745,	"propHash",	0);
	create_insn	(x=0X43E1D74A);
	op_hex		(x,	1);
	set_cmt	(0X43E1D74D,	"classHash",	0);
	create_insn	(0X43E1D767);
	set_cmt	(0X43E1D782,	"propHash",	0);
	set_cmt	(0X43E1D787,	"classHash",	0);
	create_insn	(x=0X43E1D7FA);
	op_hex		(x,	1);
	create_insn	(0X43E1D803);
	create_insn	(x=0X43E1D83E);
	op_hex		(x,	1);
	set_cmt	(0X43E1D842,	"propHash",	0);
	create_insn	(x=0X43E1D847);
	op_hex		(x,	1);
	set_cmt	(0X43E1D84A,	"classHash",	0);
	create_insn	(0X43E1D868);
	set_cmt	(0X43E1D881,	"propHash",	0);
	set_cmt	(0X43E1D886,	"classHash",	0);
	create_insn	(x=0X43E1D8F4);
	op_hex		(x,	1);
	create_insn	(0X43E1D8FD);
	set_cmt	(0X43E1D913,	"propHash",	0);
	set_cmt	(0X43E1D918,	"classHash",	0);
	create_insn	(x=0X43E1DA0F);
	op_hex		(x,	1);
	create_insn	(x=0X43E1DA3C);
	op_hex		(x,	1);
	create_insn	(x=0X43E1DA4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1DA80);
	op_hex		(x,	1);
	create_insn	(x=0X43E1DAAF);
	op_hex		(x,	1);
	create_insn	(x=0X43E1DAC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E1DB57,	0X9);
	create_insn	(0X43E1DB60);
	set_name	(0X43E1DB60,	"OneTap::Features::RageBot::Resolver");
	create_insn	(x=0X43E1DB63);
	op_hex		(x,	1);
	create_insn	(x=0X43E1DB66);
	op_hex		(x,	1);
	create_insn	(x=0X43E1DB6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1DB6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1DB7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1DB9B);
	op_hex		(x,	1);
	create_insn	(x=0X43E1DBA5);
	op_hex		(x,	1);
	create_insn	(x=0X43E1DC26);
	op_stkvar	(x,	1);
	create_insn	(0X43E1DCA0);
	create_insn	(0X43E1DCD3);
	create_insn	(x=0X43E1DCE2);
	op_hex		(x,	1);
	create_insn	(x=0X43E1DCF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E1DCF8);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1DCFC,	"srcAngle",	0);
	set_cmt	(0X43E1DD08,	"distAngle",	0);
	make_array	(0X43E1DD32,	0XE);
	create_insn	(0X43E1DD40);
	set_name	(0X43E1DD40,	"OneTap::Features::AnimationSystem::SetAngles");
	create_insn	(x=0X43E1DD43);
	op_hex		(x,	1);
	create_insn	(x=0X43E1DD49);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1DD4C,	"data",	0);
	create_insn	(x=0X43E1DD4C);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1DD4F,	"player",	0);
	create_insn	(x=0X43E1DD50);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1DD57);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1DD5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1DD65);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1DD6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1DD73);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1DD7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1DD81);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1DD88);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1DD9D,	"propHash",	0);
	set_cmt	(0X43E1DDA2,	"classHash",	0);
	create_insn	(x=0X43E1DDB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1DDC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1DDCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1DDD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1DDDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1DDF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1DDF7);
	op_hex		(x,	1);
	create_insn	(x=0X43E1DDFD);
	op_hex		(x,	1);
	set_cmt	(0X43E1DE02,	"propHash",	0);
	create_insn	(x=0X43E1DE07);
	op_hex		(x,	1);
	set_cmt	(0X43E1DE0A,	"classHash",	0);
	create_insn	(0X43E1DE24);
	create_insn	(x=0X43E1DE35);
	op_hex		(x,	1);
	set_cmt	(0X43E1DE3A,	"propHash",	0);
	create_insn	(x=0X43E1DE3F);
	op_hex		(x,	1);
	set_cmt	(0X43E1DE42,	"classHash",	0);
	create_insn	(x=0X43E1DE65);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1DE89);
	op_hex		(x,	1);
	set_cmt	(0X43E1DE8E,	"propHash",	0);
	create_insn	(x=0X43E1DE93);
	op_hex		(x,	1);
	set_cmt	(0X43E1DE96,	"classHash",	0);
	create_insn	(0X43E1DEB0);
	create_insn	(x=0X43E1DEB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1DEC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1DED0);
	op_hex		(x,	1);
	set_cmt	(0X43E1DED5,	"propHash",	0);
	create_insn	(x=0X43E1DEDA);
	op_hex		(x,	1);
	set_cmt	(0X43E1DEDD,	"classHash",	0);
	create_insn	(x=0X43E1DEF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1DF04);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1DF09);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1DF1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1DF32);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1DF37);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1DF45);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1DF59);
	op_stkvar	(x,	1);
	create_insn	(0X43E1DF6A);
	create_insn	(0X43E1DFAB);
	create_insn	(0X43E1DFBC);
	create_insn	(x=0X43E1DFFF);
	op_hex		(x,	1);
	set_cmt	(0X43E1E004,	"propHash",	0);
	create_insn	(x=0X43E1E009);
	op_hex		(x,	1);
	set_cmt	(0X43E1E00C,	"classHash",	0);
	create_insn	(x=0X43E1E01C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1E02B);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1E046,	"propHash",	0);
	set_cmt	(0X43E1E04B,	"classHash",	0);
	create_insn	(x=0X43E1E055);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1E05D);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1E084,	"propHash",	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_5(void) {
        auto x;
#define id x

	set_cmt	(0X43E1E089,	"classHash",	0);
	create_insn	(x=0X43E1E093);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1E0AE,	"angles.x",	0);
	set_cmt	(0X43E1E0B3,	"player",	0);
	set_cmt	(0X43E1E0BD,	"player",	0);
	set_cmt	(0X43E1E0BE,	"animData",	0);
	create_insn	(x=0X43E1E0BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1E0C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1E0CF);
	op_stkvar	(x,	1);
	create_insn	(0X43E1E0DF);
	create_insn	(x=0X43E1E0E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1E0EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1E0ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1E135);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1E13A);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1E145,	"propHash",	0);
	set_cmt	(0X43E1E14A,	"classHash",	0);
	create_insn	(x=0X43E1E154);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1E15C);
	op_hex		(x,	1);
	create_insn	(0X43E1E162);
	set_cmt	(0X43E1E166,	"propHash",	0);
	set_cmt	(0X43E1E16B,	"classHash",	0);
	create_insn	(x=0X43E1E175);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1E17D);
	op_hex		(x,	1);
	create_insn	(x=0X43E1E181);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1E185);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1E1A1);
	op_stkvar	(x,	1);
	create_insn	(0X43E1E1B5);
	create_insn	(x=0X43E1E1DF);
	op_hex		(x,	1);
	set_cmt	(0X43E1E1E4,	"propHash",	0);
	create_insn	(x=0X43E1E1E9);
	op_hex		(x,	1);
	set_cmt	(0X43E1E1EC,	"classHash",	0);
	create_insn	(x=0X43E1E210);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1E21E,	"propHash",	0);
	set_cmt	(0X43E1E223,	"classHash",	0);
	create_insn	(x=0X43E1E232);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1E235);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1E25B,	"propHash",	0);
	set_cmt	(0X43E1E260,	"classHash",	0);
	create_insn	(x=0X43E1E26F);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1E274,	"angles.x",	0);
	create_insn	(x=0X43E1E27C);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1E281,	"player",	0);
	create_insn	(x=0X43E1E295);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1E298);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1E29B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1E2A5);
	op_stkvar	(x,	0);
	make_array	(0X43E1E2C2,	0XE);
	create_insn	(0X43E1E2D0);
	set_name	(0X43E1E2D0,	"OneTap::Features::AnimationSystem::Update");
	create_insn	(x=0X43E1E2EB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1E3B1);
	op_hex		(x,	1);
	set_cmt	(0X43E1E3B6,	"propHash",	0);
	create_insn	(x=0X43E1E3BB);
	op_hex		(x,	1);
	set_cmt	(0X43E1E3BE,	"classHash",	0);
	create_insn	(0X43E1E3D8);
	create_insn	(x=0X43E1E3E7);
	op_hex		(x,	1);
	set_cmt	(0X43E1E3EC,	"propHash",	0);
	create_insn	(x=0X43E1E3F1);
	op_hex		(x,	1);
	set_cmt	(0X43E1E3F4,	"classHash",	0);
	set_cmt	(0X43E1E41F,	"propHash",	0);
	set_cmt	(0X43E1E424,	"classHash",	0);
	make_array	(0X43E1E4CA,	0X6);
	create_insn	(0X43E1E4D0);
	set_name	(0X43E1E4D0,	"OneTap::Features::AnimationSystem::Storage::Apply");
	set_cmt	(0X43E1E4E3,	"propHash",	0);
	set_cmt	(0X43E1E4E8,	"classHash",	0);
	create_insn	(x=0X43E1E4F7);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1E507,	"propHash",	0);
	set_cmt	(0X43E1E50C,	"classHash",	0);
	set_cmt	(0X43E1E540,	"propHash",	0);
	set_cmt	(0X43E1E545,	"classHash",	0);
	set_cmt	(0X43E1E567,	"propHash",	0);
	set_cmt	(0X43E1E56C,	"classHash",	0);
	create_insn	(x=0X43E1E58B);
	op_hex		(x,	1);
	set_cmt	(0X43E1E590,	"propHash",	0);
	create_insn	(x=0X43E1E595);
	op_hex		(x,	1);
	set_cmt	(0X43E1E598,	"classHash",	0);
	create_insn	(0X43E1E5B2);
	create_insn	(x=0X43E1E5C9);
	op_hex		(x,	1);
	set_cmt	(0X43E1E5CE,	"propHash",	0);
	create_insn	(x=0X43E1E5D3);
	op_hex		(x,	1);
	set_cmt	(0X43E1E5D6,	"classHash",	0);
	make_array	(0X43E1E601,	0XF);
	create_insn	(0X43E1E610);
	set_name	(0X43E1E610,	"OneTap::Features::AnimationSystem::Storage::Save");
	set_cmt	(0X43E1E621,	"propHash",	0);
	set_cmt	(0X43E1E626,	"classHash",	0);
	create_insn	(x=0X43E1E635);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1E647,	"propHash",	0);
	set_cmt	(0X43E1E64C,	"classHash",	0);
	set_cmt	(0X43E1E67B,	"propHash",	0);
	set_cmt	(0X43E1E680,	"classHash",	0);
	set_cmt	(0X43E1E69E,	"propHash",	0);
	set_cmt	(0X43E1E6A3,	"classHash",	0);
	create_insn	(x=0X43E1E6BE);
	op_hex		(x,	1);
	set_cmt	(0X43E1E6C3,	"propHash",	0);
	create_insn	(x=0X43E1E6C8);
	op_hex		(x,	1);
	set_cmt	(0X43E1E6CB,	"classHash",	0);
	create_insn	(0X43E1E6E5);
	create_insn	(x=0X43E1E6F8);
	op_hex		(x,	1);
	set_cmt	(0X43E1E6FD,	"propHash",	0);
	create_insn	(x=0X43E1E702);
	op_hex		(x,	1);
	set_cmt	(0X43E1E705,	"classHash",	0);
	make_array	(0X43E1E731,	0XF);
	create_insn	(0X43E1E740);
	set_name	(0X43E1E740,	"C_SDK::GlobalVars::UpdateGlobal");
	create_insn	(0X43E1E790);
	set_name	(0X43E1E790,	"C_SDK::GlobalVars::Operator::New");
	make_array	(0X43E1E7DC,	0X4);
	create_insn	(0X43E1E7E0);
	make_array	(0X43E1E7FB,	0X5);
	create_insn	(0X43E1E800);
	create_byte	(0X43E1E80B);
	make_array	(0X43E1E80B,	0X25);
	create_insn	(0X43E1E830);
	set_name	(0X43E1E830,	"OneTap::Features::AntiAim::Pitch");
	create_insn	(x=0X43E1E833);
	op_hex		(x,	1);
	create_insn	(x=0X43E1E836);
	op_hex		(x,	1);
	create_insn	(x=0X43E1E85C);
	op_hex		(x,	1);
	create_insn	(x=0X43E1E861);
	op_hex		(x,	1);
	create_insn	(x=0X43E1E86E);
	op_hex		(x,	1);
	create_insn	(x=0X43E1E871);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1E886);
	op_hex		(x,	1);
	set_cmt	(0X43E1E892,	"index",	0);
	set_cmt	(0X43E1E897,	"interface",	0);
	set_cmt	(0X43E1E8A4,	"this",	0);
	set_cmt	(0X43E1E8B0,	"a3",	0);
	set_cmt	(0X43E1E8B2,	"a2",	0);
	set_cmt	(0X43E1E8B4,	"m_player",	0);
	set_cmt	(0X43E1E8C9,	"index",	0);
	set_cmt	(0X43E1E8CE,	"interface",	0);
	set_cmt	(0X43E1E8DB,	"this",	0);
	create_insn	(x=0X43E1E8EF);
	op_hex		(x,	1);
	set_cmt	(0X43E1E8F4,	"propHash",	0);
	create_insn	(x=0X43E1E8F9);
	op_hex		(x,	1);
	set_cmt	(0X43E1E8FC,	"classHash",	0);
	create_insn	(0X43E1E913);
	create_insn	(x=0X43E1E928);
	op_stkvar	(x,	0);
	create_insn	(0X43E1E92F);
	create_insn	(x=0X43E1E93C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1E941);
	op_hex		(x,	1);
	create_insn	(x=0X43E1E946);
	op_hex		(x,	1);
	create_insn	(x=0X43E1E953);
	op_hex		(x,	1);
	create_insn	(x=0X43E1E956);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E1E9AD,	"index",	0);
	set_cmt	(0X43E1E9B2,	"interface",	0);
	set_cmt	(0X43E1E9BF,	"this",	0);
	create_insn	(x=0X43E1E9D3);
	op_hex		(x,	1);
	set_cmt	(0X43E1E9D8,	"propHash",	0);
	create_insn	(x=0X43E1E9DD);
	op_hex		(x,	1);
	set_cmt	(0X43E1E9E0,	"classHash",	0);
	create_insn	(0X43E1E9F7);
	set_cmt	(0X43E1EA28,	"switch 6 cases ",	0);
	set_cmt	(0X43E1EA2E,	"switch jump",	0);
	create_insn	(x=0X43E1EA2E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E1EA35,	"jumptable 43E1EA2E case 2",	1);
	create_insn	(0X43E1EA35);
	set_cmt	(0X43E1EA3F,	"jumptable 43E1EA2E case 3",	1);
	create_insn	(0X43E1EA3F);
	set_cmt	(0X43E1EA44,	"jumptable 43E1EA2E case 4",	1);
	create_insn	(0X43E1EA44);
	set_cmt	(0X43E1EA4E,	"jumptable 43E1EA2E case 5",	1);
	create_insn	(0X43E1EA4E);
	set_cmt	(0X43E1EA58,	"jumptable 43E1EA2E case 6",	1);
	create_insn	(0X43E1EA58);
	set_cmt	(0X43E1EA62,	"jumptable 43E1EA2E default case",	1);
	create_insn	(0X43E1EA62);
	set_name	(0X43E1EA62,	"def_43E1EA2E");
	create_insn	(x=0X43E1EA69);
	op_hex		(x,	1);
	create_insn	(x=0X43E1EA6E);
	op_hex		(x,	1);
	create_insn	(x=0X43E1EA7D);
	op_hex		(x,	1);
	create_insn	(x=0X43E1EA80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E1EA9C,	"jumptable 43E1EA2E case 1",	1);
	create_insn	(0X43E1EA9C);
	create_insn	(x=0X43E1EAAB);
	op_hex		(x,	1);
	create_insn	(x=0X43E1EAB0);
	op_hex		(x,	1);
	create_insn	(x=0X43E1EABD);
	op_hex		(x,	1);
	create_insn	(x=0X43E1EAC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1EB26);
	op_hex		(x,	1);
	create_insn	(x=0X43E1EB2B);
	op_hex		(x,	1);
	create_insn	(x=0X43E1EB38);
	op_hex		(x,	1);
	create_insn	(x=0X43E1EB3B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1EBCF);
	create_insn	(0X43E1EBFA);
	create_insn	(0X43E1EC20);
	set_cmt	(0X43E1EC26,	"index",	0);
	set_cmt	(0X43E1EC2B,	"interface",	0);
	set_cmt	(0X43E1EC38,	"this",	0);
	set_cmt	(0X43E1EC4F,	"propHash",	0);
	set_cmt	(0X43E1EC54,	"classHash",	0);
	create_insn	(x=0X43E1EC63);
	op_hex		(x,	1);
	set_cmt	(0X43E1EC69,	"cmd",	0);
	create_insn	(x=0X43E1EC69);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1EC75);
	op_hex		(x,	1);
	create_insn	(0X43E1ECAB);
	create_insn	(0X43E1ECCA);
	create_insn	(x=0X43E1ECEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1ECF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1ECFE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1ED02);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1ED06);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1ED57,	"interface",	0);
	set_cmt	(0X43E1ED5D,	"index",	0);
	create_insn	(0X43E1ED86);
	set_cmt	(0X43E1EDCF,	"cmd",	0);
	create_insn	(x=0X43E1EDCF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1EDD9);
	op_stkvar	(x,	0);
	create_insn	(0X43E1EDEA);
	set_cmt	(0X43E1EE1B,	"interface",	0);
	set_cmt	(0X43E1EE21,	"index",	0);
	create_insn	(x=0X43E1EE40);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1EE47);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1EE4C,	"cmd",	0);
	create_insn	(x=0X43E1EE4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1EE56);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1EE5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1EE65);
	op_hex		(x,	1);
	create_insn	(x=0X43E1EE6D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1EE81);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1EE86);
	op_stkvar	(x,	0);
	create_insn	(0X43E1EE94);
	set_cmt	(0X43E1EEC5,	"interface",	0);
	set_cmt	(0X43E1EECB,	"index",	0);
	create_insn	(x=0X43E1EEEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1EEF1);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1EEF6,	"cmd",	0);
	create_insn	(x=0X43E1EEF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1EF00);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1EF1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1EF1F);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1EF28,	"cmd",	0);
	create_insn	(x=0X43E1EF28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E1EF51,	"cmd",	0);
	create_insn	(x=0X43E1EF51);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E1EF7E,	"cmd",	0);
	create_insn	(x=0X43E1EF7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1EF88);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1EF9A);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1EFAB,	"index",	0);
	set_cmt	(0X43E1EFB0,	"interface",	0);
	set_cmt	(0X43E1EFBD,	"this",	0);
	set_cmt	(0X43E1EFD4,	"propHash",	0);
	set_cmt	(0X43E1EFD9,	"classHash",	0);
	set_cmt	(0X43E1F00B,	"cmd",	0);
	create_insn	(x=0X43E1F00B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1F017);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1F045,	"index",	0);
	set_cmt	(0X43E1F04A,	"interface",	0);
	create_insn	(x=0X43E1F05B);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1F067,	"this",	0);
	set_cmt	(0X43E1F073,	"m_player",	0);
	set_cmt	(0X43E1F084,	"index",	0);
	set_cmt	(0X43E1F089,	"interface",	0);
	set_cmt	(0X43E1F096,	"this",	0);
	set_cmt	(0X43E1F0A2,	"player",	0);
	set_cmt	(0X43E1F0B4,	"propHash",	0);
	set_cmt	(0X43E1F0B9,	"classHash",	0);
	set_cmt	(0X43E1F0D5,	"switch 84 cases ",	0);
	create_insn	(x=0X43E1F0DB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E1F0E2,	"switch jump",	0);
	create_insn	(x=0X43E1F0E2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E1F0E9,	"jumptable 43E1F0E2 cases 43-48,84",	1);
	create_insn	(x=0X43E1F0E9);
	op_stkvar	(x,	0);
	create_insn	(0X43E1F0F0);
	set_cmt	(0X43E1F0F5,	"jumptable 43E1F0E2 default case, cases 1-42,49-83",	1);
	set_name	(0X43E1F0F5,	"def_43E1F0E2");
	create_insn	(x=0X43E1F0F7);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1F101,	"index",	0);
	set_cmt	(0X43E1F106,	"interface",	0);
	set_cmt	(0X43E1F113,	"this",	0);
	set_cmt	(0X43E1F12A,	"propHash",	0);
	set_cmt	(0X43E1F12F,	"classHash",	0);
	create_insn	(x=0X43E1F141);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F145);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F148);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1F154,	"cmd",	0);
	create_insn	(x=0X43E1F154);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1F160);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F16D);
	op_hex		(x,	1);
	set_cmt	(0X43E1F17C,	"index",	0);
	set_cmt	(0X43E1F181,	"interface",	0);
	set_cmt	(0X43E1F18E,	"this",	0);
	set_cmt	(0X43E1F19A,	"player",	0);
	set_cmt	(0X43E1F1AC,	"propHash",	0);
	set_cmt	(0X43E1F1B1,	"classHash",	0);
	create_insn	(x=0X43E1F1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F1D0);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F1D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F1DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F1E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1F1EC);
	op_stkvar	(x,	0);
	set_cmt	(0X43E1F20D,	"index",	0);
	set_cmt	(0X43E1F212,	"interface",	0);
	set_cmt	(0X43E1F21F,	"this",	0);
	set_cmt	(0X43E1F236,	"propHash",	0);
	set_cmt	(0X43E1F23B,	"classHash",	0);
	create_insn	(0X43E1F263);
	set_cmt	(0X43E1F26B,	"cmd",	0);
	create_insn	(x=0X43E1F26B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1F277);
	op_hex		(x,	1);
	set_cmt	(0X43E1F284,	"cmd",	0);
	create_insn	(x=0X43E1F284);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1F299);
	create_insn	(x=0X43E1F336);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F33B);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F348);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F34B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1F36B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E1F3BF,	"cmd",	0);
	create_insn	(x=0X43E1F3BF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1F3FA);
	create_insn	(x=0X43E1F446);
	op_stkvar	(x,	0);
	create_insn	(0X43E1F4D2);
	create_insn	(x=0X43E1F506);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F517);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1F51D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F53A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F546);
	op_stkvar	(x,	1);
	create_insn	(0X43E1F568);
	create_insn	(x=0X43E1F58A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1F5B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1F5C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F5CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F5D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F5D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F5E1);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1F5E9,	"cmd",	0);
	create_insn	(x=0X43E1F5E9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1F605);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1F62A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1F63E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F644);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F64A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F650);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F658);
	op_stkvar	(x,	1);
	set_cmt	(0X43E1F65E,	"cmd",	0);
	create_insn	(x=0X43E1F65E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E1F675,	0X3);
	set_cmt	(0X43E1F678,	"jump table for switch statement",	0);
	create_dword	(x=0X43E1F678);
	make_array	(x,	0X6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E1F678,	"jpt_43E1EA2E");
	set_cmt	(0X43E1F690,	"jump table for switch statement",	0);
	create_dword	(x=0X43E1F690);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E1F690,	"jpt_43E1F0E2");
	set_cmt	(0X43E1F69C,	"indirect table for switch statement",	0);
	create_byte	(0X43E1F69C);
	make_array	(0X43E1F69C,	0X54);
	create_insn	(0X43E1F6F0);
	create_insn	(0X43E1F725);
	set_cmt	(0X43E1F728,	"index",	0);
	set_cmt	(0X43E1F72D,	"interface",	0);
	set_cmt	(0X43E1F741,	"this",	0);
	set_cmt	(0X43E1F758,	"propHash",	0);
	set_cmt	(0X43E1F75D,	"classHash",	0);
	make_array	(0X43E1F777,	0X9);
	create_insn	(0X43E1F780);
	set_name	(0X43E1F780,	"OneTap::Features::FakeLag::Instance");
	create_insn	(x=0X43E1F783);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F78B);
	op_hex		(x,	1);
	set_cmt	(0X43E1F79E,	"index",	0);
	set_cmt	(0X43E1F7A3,	"interface",	0);
	set_cmt	(0X43E1F7B0,	"this",	0);
	set_cmt	(0X43E1F7C7,	"propHash",	0);
	set_cmt	(0X43E1F7CC,	"classHash",	0);
	create_insn	(x=0X43E1F7DB);
	op_hex		(x,	1);
	set_cmt	(0X43E1F821,	"interface",	0);
	set_cmt	(0X43E1F827,	"index",	0);
	create_insn	(x=0X43E1F85E);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F863);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F870);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F873);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1F8A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F8A8);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F8B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F8B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1F8DF);
	create_insn	(x=0X43E1F8EE);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F8FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F908);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F915);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F919);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1F921);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1F929);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1F934);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1F93B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1F943);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1F94B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1F960);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F964);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F968);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F96B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1F970);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F97E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1F983);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F989);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F991);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1F9A4);
	op_hex		(x,	1);
	create_insn	(x=0X43E1F9A8);
	op_hex		(x,	1);
	set_cmt	(0X43E1F9C5,	"index",	0);
	set_cmt	(0X43E1F9C8,	"interface",	0);
	set_cmt	(0X43E1F9D5,	"this",	0);
	set_cmt	(0X43E1F9EC,	"propHash",	0);
	set_cmt	(0X43E1F9F1,	"classHash",	0);
	create_insn	(0X43E1FA08);
	set_cmt	(0X43E1FA13,	"index",	0);
	set_cmt	(0X43E1FA16,	"interface",	0);
	set_cmt	(0X43E1FA23,	"this",	0);
	set_cmt	(0X43E1FA3A,	"propHash",	0);
	set_cmt	(0X43E1FA3F,	"classHash",	0);
	set_cmt	(0X43E1FA5F,	"index",	0);
	set_cmt	(0X43E1FA64,	"interface",	0);
	set_cmt	(0X43E1FA71,	"this",	0);
	set_cmt	(0X43E1FA88,	"propHash",	0);
	set_cmt	(0X43E1FA8D,	"classHash",	0);
	create_insn	(x=0X43E1FAAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1FAB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E1FAB9);
	op_stkvar	(x,	0);
	create_insn	(0X43E1FACD);
	create_insn	(x=0X43E1FB0B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1FB11);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1FB17);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E1FB24);
	op_hex		(x,	1);
	create_insn	(0X43E1FB42);
	set_cmt	(0X43E1FB69,	"index",	0);
	set_cmt	(0X43E1FB6E,	"interface",	0);
	set_cmt	(0X43E1FB7B,	"this",	0);
	set_cmt	(0X43E1FB92,	"propHash",	0);
	set_cmt	(0X43E1FB97,	"classHash",	0);
	create_insn	(x=0X43E1FBA6);
	op_hex		(x,	1);
	set_cmt	(0X43E1FBC3,	"index",	0);
	set_cmt	(0X43E1FBC8,	"interface",	0);
	set_cmt	(0X43E1FBD5,	"this",	0);
	set_cmt	(0X43E1FBEC,	"propHash",	0);
	set_cmt	(0X43E1FBF1,	"classHash",	0);
	set_cmt	(0X43E1FC33,	"cmd",	0);
	create_insn	(x=0X43E1FC33);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E1FC56,	0XA);
	create_insn	(0X43E1FC60);
	create_insn	(x=0X43E1FC63);
	op_hex		(x,	1);
	create_insn	(x=0X43E1FC66);
	op_hex		(x,	1);
	set_cmt	(0X43E1FC93,	"index",	0);
	set_cmt	(0X43E1FC98,	"interface",	0);
	set_cmt	(0X43E1FCA5,	"this",	0);
	set_cmt	(0X43E1FCBF,	"index",	0);
	set_cmt	(0X43E1FCC4,	"interface",	0);
	set_cmt	(0X43E1FCD1,	"this",	0);
	set_cmt	(0X43E1FCDD,	"m_pPlayer",	0);
	set_cmt	(0X43E1FCFD,	"this",	0);
	set_cmt	(0X43E1FD1B,	"index",	0);
	set_cmt	(0X43E1FD20,	"interface",	0);
	set_cmt	(0X43E1FD2D,	"this",	0);
	set_cmt	(0X43E1FDAD,	"index",	0);
	set_cmt	(0X43E1FDB2,	"interface",	0);
	set_cmt	(0X43E1FDC1,	"this",	0);
	create_insn	(0X43E1FDF6);
	create_insn	(0X43E1FE00);
	create_insn	(x=0X43E1FE03);
	op_hex		(x,	1);
	create_insn	(x=0X43E1FE0B);
	op_hex		(x,	1);
	create_insn	(x=0X43E1FE13);
	op_hex		(x,	1);
	create_insn	(x=0X43E1FE17);
	op_hex		(x,	1);
	create_insn	(x=0X43E1FE1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1FE6C);
	op_hex		(x,	1);
	create_insn	(x=0X43E1FE71);
	op_hex		(x,	1);
	create_insn	(x=0X43E1FE7E);
	op_hex		(x,	1);
	create_insn	(x=0X43E1FE81);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1FEC6);
	set_cmt	(0X43E1FED1,	"index",	0);
	set_cmt	(0X43E1FED6,	"interface",	0);
	set_cmt	(0X43E1FEE3,	"this",	0);
	set_cmt	(0X43E1FEFA,	"propHash",	0);
	set_cmt	(0X43E1FEFF,	"classHash",	0);
	create_insn	(x=0X43E1FF5C);
	op_hex		(x,	1);
	create_insn	(x=0X43E1FF61);
	op_hex		(x,	1);
	create_insn	(x=0X43E1FF6E);
	op_hex		(x,	1);
	create_insn	(x=0X43E1FF71);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E1FF77);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E1FF8B);
	create_insn	(x=0X43E20005);
	op_hex		(x,	1);
	create_insn	(0X43E2000E);
	set_cmt	(0X43E20044,	"interface",	0);
	set_cmt	(0X43E2004A,	"index",	0);
	create_insn	(0X43E2006D);
	create_insn	(0X43E200E6);
	set_cmt	(0X43E200F1,	"index",	0);
	set_cmt	(0X43E200F6,	"interface",	0);
	set_cmt	(0X43E20103,	"this",	0);
	set_cmt	(0X43E20147,	"propHash",	0);
	set_cmt	(0X43E2014C,	"classHash",	0);
	set_cmt	(0X43E2016E,	"propHash",	0);
	set_cmt	(0X43E20173,	"classHash",	0);
	create_insn	(0X43E20198);
	set_cmt	(0X43E2019C,	"propHash",	0);
	set_cmt	(0X43E201A1,	"classHash",	0);
	set_cmt	(0X43E201C7,	"propHash",	0);
	set_cmt	(0X43E201CC,	"classHash",	0);
	set_cmt	(0X43E20295,	"interface",	0);
	set_cmt	(0X43E2029B,	"index",	0);
	set_cmt	(0X43E202D9,	"this",	0);
	create_insn	(x=0X43E20301);
	op_hex		(x,	1);
	create_insn	(x=0X43E20335);
	op_hex		(x,	1);
	set_cmt	(0X43E20338,	"interface",	0);
	set_cmt	(0X43E2033E,	"index",	0);
	set_cmt	(0X43E2034A,	"this",	0);
	create_insn	(x=0X43E20372);
	op_hex		(x,	1);
	create_insn	(x=0X43E203A0);
	op_hex		(x,	1);
	set_cmt	(0X43E203A9,	"index",	0);
	set_cmt	(0X43E203AE,	"interface",	0);
	set_cmt	(0X43E203BB,	"this",	0);
	create_insn	(x=0X43E203E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E20417);
	op_hex		(x,	1);
	set_cmt	(0X43E2041A,	"interface",	0);
	set_cmt	(0X43E20420,	"index",	0);
	set_cmt	(0X43E2042C,	"this",	0);
	create_insn	(x=0X43E20454);
	op_hex		(x,	1);
	create_insn	(x=0X43E20488);
	op_hex		(x,	1);
	set_cmt	(0X43E2048B,	"interface",	0);
	set_cmt	(0X43E20491,	"index",	0);
	set_cmt	(0X43E2049D,	"this",	0);
	create_insn	(x=0X43E204B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E204C9,	"this",	0);
	set_cmt	(0X43E2051E,	"end",	0);
	set_cmt	(0X43E20523,	"start",	0);
	set_cmt	(0X43E20595,	"instance",	0);
	set_cmt	(0X43E2059C,	"end",	0);
	set_cmt	(0X43E205A4,	"start",	0);
	set_cmt	(0X43E20630,	"instance",	0);
	set_cmt	(0X43E20647,	"end",	0);
	set_cmt	(0X43E20650,	"start",	0);
	set_cmt	(0X43E206E6,	"instance",	0);
	set_cmt	(0X43E206FA,	"end",	0);
	set_cmt	(0X43E20709,	"start",	0);
	set_cmt	(0X43E207FB,	"cmd",	0);
	create_insn	(x=0X43E207FB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2084E,	"cmd",	0);
	create_insn	(x=0X43E2084E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2086D);
	set_cmt	(0X43E208D4,	"index",	0);
	set_cmt	(0X43E208DF,	"interface",	0);
	set_cmt	(0X43E208F7,	"this",	0);
	set_cmt	(0X43E2090E,	"propHash",	0);
	set_cmt	(0X43E20913,	"classHash",	0);
	set_cmt	(0X43E2092F,	"cmd",	0);
	create_insn	(x=0X43E2092F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E209BC);
	set_cmt	(0X43E209DA,	"index",	0);
	set_cmt	(0X43E209DF,	"interface",	0);
	set_cmt	(0X43E20A31,	"this",	0);
	set_cmt	(0X43E20A48,	"propHash",	0);
	set_cmt	(0X43E20A4D,	"classHash",	0);
	create_insn	(x=0X43E20A6E);
	op_hex		(x,	1);
	create_insn	(x=0X43E20A97);
	op_hex		(x,	1);
	set_cmt	(0X43E20AB6,	"index",	0);
	set_cmt	(0X43E20ABB,	"interface",	0);
	set_cmt	(0X43E20AF8,	"this",	0);
	set_cmt	(0X43E20B0F,	"propHash",	0);
	set_cmt	(0X43E20B14,	"classHash",	0);
	create_insn	(x=0X43E20B35);
	op_hex		(x,	1);
	create_insn	(x=0X43E20B5E);
	op_hex		(x,	1);
	create_insn	(0X43E20BD4);
	set_cmt	(0X43E20BDA,	"index",	0);
	set_cmt	(0X43E20BDF,	"interface",	0);
	set_cmt	(0X43E20BEC,	"this",	0);
	set_cmt	(0X43E20C03,	"propHash",	0);
	set_cmt	(0X43E20C08,	"classHash",	0);
	set_cmt	(0X43E20C28,	"srcAngle",	0);
	set_cmt	(0X43E20C54,	"distAngle",	0);
	set_cmt	(0X43E20CB5,	"cmd",	0);
	create_insn	(x=0X43E20CB5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E20CD3);
	make_array	(0X43E20CF5,	0XB);
	create_insn	(0X43E20D00);
	make_array	(0X43E20D12,	0XE);
	create_insn	(0X43E20D20);
	create_insn	(x=0X43E20D23);
	op_hex		(x,	1);
	create_insn	(x=0X43E20D26);
	op_hex		(x,	1);
	create_insn	(0X43E20D4D);
	set_cmt	(0X43E20D8A,	"interface",	0);
	set_cmt	(0X43E20D90,	"index",	0);
	create_insn	(x=0X43E20DB8);
	op_hex		(x,	1);
	create_insn	(x=0X43E20DBC);
	op_hex		(x,	1);
	set_cmt	(0X43E20E39,	"angles",	0);
	set_cmt	(0X43E20EBD,	"a2",	0);
	set_cmt	(0X43E20EC8,	"a1",	0);
	set_cmt	(0X43E20F03,	"angles",	0);
	create_insn	(0X43E20F65);
	create_insn	(0X43E20F71);
	set_cmt	(0X43E20FA6,	"interface",	0);
	set_cmt	(0X43E20FAC,	"index",	0);
	create_insn	(0X43E20FF2);
	create_insn	(0X43E20FFE);
	set_cmt	(0X43E2102C,	"interface",	0);
	set_cmt	(0X43E21032,	"index",	0);
	create_insn	(0X43E21078);
	create_insn	(0X43E21084);
	set_cmt	(0X43E210B2,	"interface",	0);
	set_cmt	(0X43E210B8,	"index",	0);
	create_insn	(0X43E21106);
	create_insn	(0X43E21113);
	set_cmt	(0X43E21128,	"this",	0);
	create_insn	(0X43E211C2);
	set_cmt	(0X43E211C6,	"a2",	0);
	create_insn	(0X43E21229);
	create_insn	(x=0X43E2131E);
	op_hex		(x,	1);
	create_insn	(x=0X43E21324);
	op_hex		(x,	1);
	create_insn	(x=0X43E21332);
	op_hex		(x,	1);
	create_insn	(x=0X43E2133A);
	op_hex		(x,	1);
	create_insn	(0X43E21363);
	create_insn	(0X43E21386);
	create_insn	(x=0X43E2139E);
	op_hex		(x,	1);
	create_insn	(x=0X43E213A4);
	op_hex		(x,	1);
	create_insn	(x=0X43E213B2);
	op_hex		(x,	1);
	create_insn	(x=0X43E213BD);
	op_hex		(x,	1);
	make_array	(0X43E213FE,	0X2);
	create_insn	(0X43E21400);
	create_insn	(0X43E21413);
	make_array	(0X43E21463,	0XD);
	create_insn	(0X43E21470);
	create_insn	(0X43E21563);
	create_insn	(0X43E215A7);
	create_insn	(0X43E215F0);
	create_insn	(0X43E21619);
	create_insn	(0X43E21658);
	create_insn	(0X43E216AE);
	make_array	(0X43E21774,	0XC);
	create_insn	(0X43E21780);
	make_array	(0X43E2179D,	0X3);
	create_insn	(0X43E217A0);
	create_insn	(x=0X43E217A3);
	op_hex		(x,	1);
	set_cmt	(0X43E217A6,	"interface",	0);
	create_insn	(x=0X43E217AC);
	op_hex		(x,	1);
	set_cmt	(0X43E217AF,	"index",	0);
	set_cmt	(0X43E217C2,	"this",	0);
	create_insn	(x=0X43E217D6);
	op_hex		(x,	1);
	set_cmt	(0X43E217DB,	"propHash",	0);
	create_insn	(x=0X43E217E0);
	op_hex		(x,	1);
	set_cmt	(0X43E217E3,	"classHash",	0);
	create_insn	(0X43E217FA);
	create_insn	(0X43E21836);
	create_insn	(0X43E21855);
	create_insn	(x=0X43E21873);
	op_hex		(x,	1);
	create_insn	(x=0X43E21878);
	op_hex		(x,	1);
	create_insn	(x=0X43E21885);
	op_hex		(x,	1);
	create_insn	(x=0X43E21888);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E218CA);
	create_insn	(x=0X43E218F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E218F8);
	op_hex		(x,	1);
	create_insn	(0X43E218FD);
	create_insn	(x=0X43E21906);
	op_hex		(x,	1);
	create_insn	(x=0X43E21909);
	op_hex		(x,	1);
	create_insn	(0X43E2190E);
	create_insn	(x=0X43E21913);
	op_hex		(x,	1);
	create_insn	(0X43E2193C);
	create_insn	(0X43E2197E);
	create_insn	(x=0X43E2198B);
	op_hex		(x,	1);
	create_insn	(x=0X43E21990);
	op_hex		(x,	1);
	create_insn	(x=0X43E2199D);
	op_hex		(x,	1);
	create_insn	(x=0X43E219A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E219BD,	0X3);
	set_cmt	(0X43E219C0,	"interface",	0);
	create_insn	(0X43E219C0);
	set_cmt	(0X43E219C6,	"index",	0);
	set_cmt	(0X43E219D9,	"this",	0);
	create_insn	(x=0X43E219ED);
	op_hex		(x,	1);
	set_cmt	(0X43E219F2,	"propHash",	0);
	create_insn	(x=0X43E219F7);
	op_hex		(x,	1);
	set_cmt	(0X43E219FA,	"classHash",	0);
	create_insn	(0X43E21A11);
	set_cmt	(0X43E21A3D,	"switch 6 cases ",	0);
	set_cmt	(0X43E21A43,	"switch jump",	0);
	create_insn	(x=0X43E21A43);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E21A4A,	"jumptable 43E21A43 case 2",	1);
	create_insn	(0X43E21A4A);
	set_cmt	(0X43E21A53,	"jumptable 43E21A43 case 3",	1);
	create_insn	(0X43E21A53);
	set_cmt	(0X43E21A57,	"jumptable 43E21A43 case 4",	1);
	create_insn	(0X43E21A57);
	set_cmt	(0X43E21A60,	"jumptable 43E21A43 case 5",	1);
	create_insn	(0X43E21A60);
	set_cmt	(0X43E21A69,	"jumptable 43E21A43 case 6",	1);
	create_insn	(0X43E21A69);
	set_cmt	(0X43E21A72,	"jumptable 43E21A43 default case",	1);
	create_insn	(0X43E21A72);
	set_name	(0X43E21A72,	"def_43E21A43");
	create_insn	(x=0X43E21A7F);
	op_hex		(x,	1);
	create_insn	(x=0X43E21A84);
	op_hex		(x,	1);
	create_insn	(x=0X43E21A91);
	op_hex		(x,	1);
	create_insn	(x=0X43E21A94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E21AAF,	"jumptable 43E21A43 case 1",	1);
	create_insn	(0X43E21AAF);
	set_cmt	(0X43E21AB8,	"jump table for switch statement",	0);
	create_dword	(x=0X43E21AB8);
	make_array	(x,	0X6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E21AB8,	"jpt_43E21A43");
	create_insn	(0X43E21AD0);
	create_insn	(x=0X43E21AD3);
	op_hex		(x,	1);
	set_cmt	(0X43E21AD6,	"interface",	0);
	create_insn	(x=0X43E21ADC);
	op_hex		(x,	1);
	set_cmt	(0X43E21AE2,	"index",	0);
	set_cmt	(0X43E21AF5,	"arg",	0);
	set_cmt	(0X43E21AFD,	"this",	0);
	set_cmt	(0X43E21B20,	"index",	0);
	set_cmt	(0X43E21B25,	"interface",	0);
	set_cmt	(0X43E21B32,	"this",	0);
	create_insn	(0X43E21B4D);
	set_cmt	(0X43E21B5E,	"this",	0);
	set_cmt	(0X43E21B7E,	"index",	0);
	set_cmt	(0X43E21B83,	"interface",	0);
	set_cmt	(0X43E21B90,	"this",	0);
	create_insn	(x=0X43E21BC3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E21BCA);
	create_insn	(0X43E21BD1);
	set_cmt	(0X43E21BDA,	"propHash",	0);
	set_cmt	(0X43E21BDF,	"classHash",	0);
	create_insn	(x=0X43E21CF8);
	op_hex		(x,	1);
	create_insn	(x=0X43E21CFC);
	op_hex		(x,	1);
	create_insn	(0X43E21D19);
	create_insn	(x=0X43E21D41);
	op_hex		(x,	1);
	create_insn	(x=0X43E21D67);
	op_hex		(x,	1);
	create_insn	(x=0X43E21D7D);
	op_hex		(x,	1);
	create_insn	(x=0X43E21F22);
	op_hex		(x,	1);
	create_insn	(x=0X43E21F2B);
	op_hex		(x,	1);
	create_insn	(x=0X43E21F38);
	op_hex		(x,	1);
	create_insn	(x=0X43E21F59);
	op_hex		(x,	1);
	create_insn	(x=0X43E22075);
	op_hex		(x,	1);
	create_insn	(x=0X43E2207E);
	op_hex		(x,	1);
	create_insn	(x=0X43E2208B);
	op_hex		(x,	1);
	create_insn	(x=0X43E220AC);
	op_hex		(x,	1);
	create_insn	(0X43E2212F);
	create_insn	(0X43E22191);
	create_insn	(0X43E221D7);
	create_insn	(0X43E22231);
	create_insn	(0X43E2226E);
	create_insn	(0X43E222D1);
	make_array	(0X43E2230E,	0X2);
	create_insn	(0X43E22310);
	set_cmt	(0X43E22318,	"switch 6 cases ",	0);
	set_cmt	(0X43E2231E,	"switch jump",	0);
	create_insn	(x=0X43E2231E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E22325,	"jumptable 43E2231E case 1",	1);
	create_insn	(0X43E22325);
	set_cmt	(0X43E22331,	"jumptable 43E2231E case 2",	1);
	create_insn	(0X43E22331);
	set_cmt	(0X43E2233D,	"jumptable 43E2231E case 3",	1);
	create_insn	(0X43E2233D);
	set_cmt	(0X43E22344,	"jumptable 43E2231E case 4",	1);
	create_insn	(0X43E22344);
	set_cmt	(0X43E22350,	"jumptable 43E2231E case 5",	1);
	create_insn	(0X43E22350);
	set_cmt	(0X43E2235C,	"jumptable 43E2231E case 6",	1);
	create_insn	(0X43E2235C);
	set_cmt	(0X43E22368,	"jumptable 43E2231E default case",	1);
	create_insn	(0X43E22368);
	set_name	(0X43E22368,	"def_43E2231E");
	create_insn	(x=0X43E22375);
	op_hex		(x,	1);
	create_insn	(x=0X43E2237A);
	op_hex		(x,	1);
	create_insn	(x=0X43E22387);
	op_hex		(x,	1);
	create_insn	(x=0X43E2238A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E223A8,	"jump table for switch statement",	0);
	create_dword	(x=0X43E223A8);
	make_array	(x,	0X6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E223A8,	"jpt_43E2231E");
	create_insn	(0X43E223C0);
	set_cmt	(0X43E223E1,	"index",	0);
	set_cmt	(0X43E223E6,	"interface",	0);
	set_cmt	(0X43E223F3,	"this",	0);
	set_cmt	(0X43E2240D,	"index",	0);
	set_cmt	(0X43E22412,	"interface",	0);
	set_cmt	(0X43E2241F,	"this",	0);
	set_cmt	(0X43E2242B,	"m_pPlayer",	0);
	set_cmt	(0X43E22440,	"index",	0);
	set_cmt	(0X43E22445,	"interface",	0);
	set_cmt	(0X43E22452,	"this",	0);
	create_insn	(x=0X43E22466);
	op_hex		(x,	1);
	set_cmt	(0X43E2246B,	"propHash",	0);
	create_insn	(x=0X43E22470);
	op_hex		(x,	1);
	set_cmt	(0X43E22473,	"classHash",	0);
	create_insn	(0X43E2248A);
	set_cmt	(0X43E224A0,	"index",	0);
	set_cmt	(0X43E224A5,	"interface",	0);
	set_cmt	(0X43E224B2,	"this",	0);
	set_cmt	(0X43E224C9,	"propHash",	0);
	set_cmt	(0X43E224CE,	"classHash",	0);
	create_insn	(x=0X43E224DD);
	op_hex		(x,	1);
	set_cmt	(0X43E224E7,	"cmd",	0);
	create_insn	(x=0X43E224E7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E224F3);
	op_hex		(x,	1);
	set_cmt	(0X43E22503,	"index",	0);
	set_cmt	(0X43E22508,	"interface",	0);
	set_cmt	(0X43E22515,	"this",	0);
	set_cmt	(0X43E22521,	"player",	0);
	set_cmt	(0X43E22536,	"index",	0);
	set_cmt	(0X43E2253B,	"interface",	0);
	set_cmt	(0X43E22548,	"this",	0);
	set_cmt	(0X43E22554,	"player",	0);
	set_cmt	(0X43E22566,	"propHash",	0);
	set_cmt	(0X43E2256B,	"classHash",	0);
	set_cmt	(0X43E22587,	"switch 84 cases ",	0);
	create_insn	(x=0X43E2258D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E22594,	"switch jump",	0);
	create_insn	(x=0X43E22594);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E2259B,	"jumptable 43E22594 cases 43-48,84",	1);
	create_insn	(0X43E2259B);
	set_cmt	(0X43E225A1,	"index",	0);
	set_cmt	(0X43E225A6,	"interface",	0);
	set_cmt	(0X43E225B3,	"this",	0);
	set_cmt	(0X43E225BF,	"player",	0);
	set_cmt	(0X43E225D1,	"propHash",	0);
	set_cmt	(0X43E225D6,	"classHash",	0);
	set_cmt	(0X43E225F7,	"jumptable 43E22594 default case, cases 1-42,49-83",	1);
	set_name	(0X43E225F7,	"def_43E22594");
	set_cmt	(0X43E225FD,	"index",	0);
	set_cmt	(0X43E22602,	"interface",	0);
	set_cmt	(0X43E2260F,	"this",	0);
	set_cmt	(0X43E2261B,	"player",	0);
	set_cmt	(0X43E2262D,	"propHash",	0);
	set_cmt	(0X43E22632,	"classHash",	0);
	set_cmt	(0X43E22648,	"cmd",	0);
	create_insn	(x=0X43E22648);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E22654);
	op_hex		(x,	1);
	set_cmt	(0X43E2267C,	"index",	0);
	set_cmt	(0X43E22681,	"interface",	0);
	set_cmt	(0X43E2268E,	"this",	0);
	set_cmt	(0X43E2269A,	"player",	0);
	set_cmt	(0X43E226AC,	"propHash",	0);
	set_cmt	(0X43E226B1,	"classHash",	0);
	set_cmt	(0X43E226CD,	"switch 84 cases ",	0);
	create_insn	(x=0X43E226D3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E226DA,	"switch jump",	0);
	create_insn	(x=0X43E226DA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E226E1,	"switch 19 cases ",	0);
	create_insn	(x=0X43E226E1);
	op_hex		(x,	1);
	create_insn	(x=0X43E226EB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E226F2,	"switch jump",	0);
	create_insn	(x=0X43E226F2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E226F9,	"jumptable 43E226DA cases 41,42,59\njumptable 43E226F2 cases 505-509,512,514-516,519,520,522,523",	1);
	create_insn	(x=0X43E226F9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E22705);
	op_hex		(x,	1);
	set_cmt	(0X43E22714,	"index",	0);
	set_cmt	(0X43E22719,	"interface",	0);
	set_cmt	(0X43E22726,	"this",	0);
	set_cmt	(0X43E22732,	"a3",	0);
	set_cmt	(0X43E22734,	"a2",	0);
	set_cmt	(0X43E22736,	"m_player",	0);
	set_cmt	(0X43E22745,	"jumptable 43E226DA default case, cases 1-40,43-58,60-84\njumptable 43E226F2 default case, cases 510,511,513,517,518,521",	1);
	set_name	(0X43E22745,	"def_43E226DA");
	set_cmt	(0X43E2274B,	"index",	0);
	set_cmt	(0X43E22750,	"interface",	0);
	set_cmt	(0X43E2275D,	"this",	0);
	set_cmt	(0X43E22769,	"player",	0);
	set_cmt	(0X43E2277B,	"propHash",	0);
	set_cmt	(0X43E22780,	"classHash",	0);
	set_cmt	(0X43E22796,	"cmd",	0);
	create_insn	(x=0X43E22796);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E227A2);
	op_hex		(x,	1);
	set_cmt	(0X43E227B1,	"index",	0);
	set_cmt	(0X43E227B6,	"interface",	0);
	set_cmt	(0X43E227C3,	"this",	0);
	set_cmt	(0X43E227CF,	"a3",	0);
	set_cmt	(0X43E227D1,	"a2",	0);
	set_cmt	(0X43E227D3,	"m_player",	0);
	create_insn	(x=0X43E227E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E227E6);
	op_hex		(x,	1);
	set_cmt	(0X43E22800,	"index",	0);
	set_cmt	(0X43E22805,	"interface",	0);
	set_cmt	(0X43E22812,	"this",	0);
	set_cmt	(0X43E22829,	"propHash",	0);
	set_cmt	(0X43E2282E,	"classHash",	0);
	create_insn	(x=0X43E2283D);
	op_hex		(x,	1);
	create_insn	(0X43E2284E);
	make_array	(0X43E22859,	0X3);
	set_cmt	(0X43E2285C,	"jump table for switch statement",	0);
	create_dword	(x=0X43E2285C);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E2285C,	"jpt_43E22594");
	set_cmt	(0X43E22868,	"indirect table for switch statement",	0);
	create_byte	(0X43E22868);
	make_array	(0X43E22868,	0X54);
	set_cmt	(0X43E228BC,	"jump table for switch statement",	0);
	create_dword	(x=0X43E228BC);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E228BC,	"jpt_43E226DA");
	set_cmt	(0X43E228C8,	"indirect table for switch statement",	0);
	create_byte	(0X43E228C8);
	make_array	(0X43E228C8,	0X54);
	set_cmt	(0X43E2291C,	"jump table for switch statement",	0);
	create_dword	(x=0X43E2291C);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E2291C,	"jpt_43E226F2");
	set_cmt	(0X43E22924,	"indirect table for switch statement",	0);
	create_byte	(0X43E22924);
	make_array	(0X43E22924,	0X13);
	make_array	(0X43E22937,	0X9);
	create_insn	(0X43E22940);
	make_array	(0X43E2294D,	0X3);
	create_insn	(0X43E22950);
	make_array	(0X43E2295D,	0X3);
	create_insn	(x=0X43E22960);
	op_hex		(x,	1);
	make_array	(0X43E22964,	0XC);
	create_insn	(0X43E22970);
	create_insn	(x=0X43E2297F);
	op_hex		(x,	1);
	create_insn	(x=0X43E22983);
	op_hex		(x,	1);
	set_cmt	(0X43E22986,	"hash",	0);
	create_insn	(0X43E229A8);
	create_insn	(0X43E229D3);
	make_array	(0X43E229DB,	0X5);
	create_insn	(0X43E229E0);
	create_insn	(x=0X43E229E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E229F2);
	op_hex		(x,	1);
	create_insn	(x=0X43E229F6);
	op_hex		(x,	1);
	set_cmt	(0X43E229F9,	"hash",	0);
	create_insn	(0X43E22A1B);
	create_insn	(0X43E22A4B);
	make_array	(0X43E22A51,	0XF);
	create_insn	(0X43E22A60);
	create_insn	(x=0X43E22A63);
	op_hex		(x,	1);
	create_insn	(x=0X43E22A75);
	op_hex		(x,	1);
	create_insn	(x=0X43E22A79);
	op_hex		(x,	1);
	set_cmt	(0X43E22A7C,	"hash",	0);
	create_insn	(0X43E22A9E);
	create_insn	(0X43E22AAB);
	make_array	(0X43E22AC5,	0XB);
	create_insn	(0X43E22AD0);
	create_insn	(x=0X43E22AD3);
	op_hex		(x,	1);
	create_insn	(x=0X43E22ADB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22ADE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22AE1);
	op_hex		(x,	1);
	create_insn	(x=0X43E22AE5);
	op_hex		(x,	1);
	set_cmt	(0X43E22AE8,	"hash",	0);
	create_insn	(0X43E22B0A);
	create_insn	(x=0X43E22B17);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22B1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22B1D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22B21);
	op_stkvar	(x,	1);
	make_array	(0X43E22B32,	0XE);
	create_insn	(0X43E22B40);
	create_insn	(x=0X43E22B48);
	op_hex		(x,	1);
	create_insn	(x=0X43E22B4C);
	op_hex		(x,	1);
	set_cmt	(0X43E22B4F,	"hash",	0);
	create_insn	(0X43E22B71);
	create_insn	(0X43E22B7C);
	make_array	(0X43E22B81,	0XF);
	create_insn	(0X43E22B90);
	create_insn	(x=0X43E22B9F);
	op_hex		(x,	1);
	create_insn	(x=0X43E22BA3);
	op_hex		(x,	1);
	set_cmt	(0X43E22BA6,	"hash",	0);
	create_insn	(0X43E22BC8);
	create_insn	(0X43E22BD6);
	make_array	(0X43E22BE2,	0XE);
	create_insn	(0X43E22BF0);
	set_name	(0X43E22BF0,	"C_SDK::Security::FNV1A::GetFunctionPointer");
	create_insn	(x=0X43E22BF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E22BF6);
	op_hex		(x,	1);
	create_insn	(x=0X43E22BF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22BFD);
	op_stkvar	(x,	0);
	set_cmt	(0X43E22C02,	"int *",	0);
	set_cmt	(0X43E22C03,	"char",	0);
	create_insn	(x=0X43E22C1D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22C2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22C31);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22C45);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22C49);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22C57);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22C5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22C66);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22C70);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22C78);
	op_stkvar	(x,	0);
	set_cmt	(0X43E22C89,	"a3",	0);
	set_cmt	(0X43E22C8A,	"a2",	0);
	set_cmt	(0X43E22C8B,	"this",	0);
	create_insn	(x=0X43E22C8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22C94);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22C99);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22C9D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22CA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22CA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22CA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22CB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22CB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22CDD);
	op_hex		(x,	1);
	create_insn	(x=0X43E22CE5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22CE9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22CEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22CF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22CF7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22CFB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22D0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22D16);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22D1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22D51);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22D55);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22D88);
	op_hex		(x,	1);
	create_insn	(x=0X43E22D8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22D8F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22D94);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22DA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22DA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22DBB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22DBF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22DCB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22DD7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22DDF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22DEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22DF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22DFE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22E06);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22E11);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22E16);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22E1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22E27);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22E3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22E43);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22E49);
	op_stkvar	(x,	1);
	set_cmt	(0X43E22E4D,	"char *",	0);
	create_insn	(x=0X43E22E53);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22E5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22E70);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22E78);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22E8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22E97);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22EBD);
	op_hex		(x,	1);
	create_insn	(x=0X43E22EC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22EC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22ECE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22ED2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22ED6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22EDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22EDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22EEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22F0D);
	op_hex		(x,	1);
	create_insn	(x=0X43E22F15);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22F19);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22F1D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22F30);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22F61);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22F65);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E22F6D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22F7B);
	op_stkvar	(x,	1);
	set_cmt	(0X43E22FA4,	"hash",	0);
	create_insn	(x=0X43E22FAB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22FC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22FE9);
	op_hex		(x,	1);
	create_insn	(x=0X43E22FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E22FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23020);
	op_hex		(x,	1);
	create_insn	(x=0X43E23023);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23056);
	op_hex		(x,	1);
	create_insn	(x=0X43E23062);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23073);
	op_stkvar	(x,	1);
	create_insn	(0X43E23080);
	set_name	(0X43E23080,	"C_SDK::Security::FNV1A::GetModulePointer");
	create_insn	(x=0X43E23083);
	op_hex		(x,	1);
	create_insn	(x=0X43E2308C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2309E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E230A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E230B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E230BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E230C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E230DD);
	op_hex		(x,	1);
	create_insn	(x=0X43E230E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E230E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E230ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E230F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E230F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E230F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E230FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E230FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23105);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2310F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23115);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2311A);
	op_hex		(x,	1);
	create_insn	(x=0X43E23122);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23125);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2312F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23132);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23135);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23138);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2313B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2313E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2316D);
	op_hex		(x,	1);
	create_insn	(x=0X43E23175);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23178);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2317B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23191);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23194);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2319E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E231A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E231A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E231E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E231E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2321A);
	op_hex		(x,	1);
	create_insn	(x=0X43E2321D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23225);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23250);
	op_hex		(x,	1);
	create_insn	(x=0X43E23253);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23258);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2325B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2326D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E232A2);
	op_hex		(x,	1);
	create_insn	(x=0X43E232A5);
	op_stkvar	(x,	1);
	create_insn	(0X43E232B6);
	make_array	(0X43E232BB,	0X5);
	create_insn	(0X43E232C0);
	set_name	(0X43E232C0,	"OneTap::Features::AutoWall::TraceToExit");
	create_insn	(x=0X43E232C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E232C6);
	op_hex		(x,	1);
	create_insn	(x=0X43E232C9);
	op_hex		(x,	1);
	create_insn	(x=0X43E232D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E232D6);
	op_hex		(x,	1);
	set_cmt	(0X43E232DB,	"this",	0);
	create_insn	(x=0X43E23364);
	op_hex		(x,	1);
	create_insn	(x=0X43E2336B);
	op_hex		(x,	1);
	create_insn	(x=0X43E23408);
	op_hex		(x,	1);
	create_insn	(x=0X43E234E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E23515);
	op_hex		(x,	1);
	set_cmt	(0X43E23599,	"this",	0);
	create_insn	(0X43E235D0);
	create_insn	(0X43E2362B);
	create_insn	(0X43E23666);
	set_cmt	(0X43E23678,	"this",	0);
	set_cmt	(0X43E236A8,	"interface",	0);
	set_cmt	(0X43E236AB,	"index",	0);
	set_cmt	(0X43E236E9,	"interface",	0);
	set_cmt	(0X43E236EC,	"index",	0);
	create_insn	(x=0X43E23717);
	op_hex		(x,	1);
	create_insn	(x=0X43E2371D);
	op_hex		(x,	1);
	create_insn	(0X43E237BE);
	set_cmt	(0X43E237CF,	"instance",	0);
	set_cmt	(0X43E23800,	"interface",	0);
	set_cmt	(0X43E23803,	"index",	0);
	set_cmt	(0X43E2384D,	"from",	0);
	create_insn	(0X43E2384D);
	set_cmt	(0X43E23850,	"to",	0);
	set_cmt	(0X43E23890,	"from",	0);
	create_insn	(0X43E23890);
	set_cmt	(0X43E23893,	"to",	0);
	make_array	(0X43E238D6,	0XA);
	create_insn	(0X43E238E0);
	set_name	(0X43E238E0,	"OneTap::Features::AutoWall::HandleBulletPenetration");
	create_insn	(x=0X43E238E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E238E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E238EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23915);
	op_hex		(x,	1);
	create_insn	(x=0X43E23918);
	op_hex		(x,	1);
	create_insn	(x=0X43E2391A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23922);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23926);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2392A,	"exitTrace",	0);
	create_insn	(x=0X43E2392E);
	op_stkvar	(x,	0);
	set_cmt	(0X43E23936,	"enterTrace",	0);
	create_insn	(x=0X43E23937);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2393B);
	op_stkvar	(x,	0);
	set_cmt	(0X43E23943,	"end",	0);
	create_insn	(x=0X43E23947);
	op_hex		(x,	1);
	create_insn	(x=0X43E2394C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23954);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2395C);
	op_hex		(x,	1);
	create_insn	(x=0X43E2395F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23967);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2396F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23977);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2397F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23987);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2398F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E239AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E239AD);
	op_hex		(x,	1);
	create_insn	(x=0X43E239CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E239DD);
	op_hex		(x,	1);
	create_insn	(x=0X43E239F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23A01);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23A11);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23A37);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23A3B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23A4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23A6C);
	op_stkvar	(x,	0);
	create_insn	(0X43E23A7C);
	create_insn	(x=0X43E23A8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23A92);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23A98);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23AB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23AC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23AD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23B5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23B7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23B8D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23B98);
	op_stkvar	(x,	1);
	create_insn	(0X43E23BAC);
	make_array	(0X43E23BB7,	0X9);
	create_insn	(0X43E23BC0);
	set_name	(0X43E23BC0,	"OneTap::Features::AutoWall::SimulateFireBullet");
	create_insn	(x=0X43E23BC3);
	op_hex		(x,	1);
	create_insn	(x=0X43E23BC6);
	op_hex		(x,	1);
	set_cmt	(0X43E23BCD,	"a1",	0);
	create_insn	(x=0X43E23BCE);
	op_stkvar	(x,	1);
	set_cmt	(0X43E23BD1,	"this",	0);
	create_insn	(x=0X43E23BD1);
	op_stkvar	(x,	1);
	set_cmt	(0X43E23BFD,	"index",	0);
	set_cmt	(0X43E23C02,	"interface",	0);
	set_cmt	(0X43E23C0F,	"this",	0);
	create_insn	(x=0X43E23C1B);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E23C26);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23C2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23C32);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23C61);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23CA6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23CB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23CBD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23CC3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23CD6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23CE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23CF8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23D09);
	op_hex		(x,	1);
	create_insn	(x=0X43E23D0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23D16);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23D1C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23D25);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23D33);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23D3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23D46);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23D4D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23D5C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23D67);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23D72);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23D7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23D85);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23D90);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23D9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23DA6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23DAC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23DB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23DBB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23E1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23E25);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23E2B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23E45);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23E4B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23E51);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23E5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23E69);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23E6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23E75);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23E7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23E89);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23E9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23EA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23EB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23EC9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23EDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23EE6);
	op_stkvar	(x,	1);
	set_cmt	(0X43E23EF0,	"m_player",	0);
	create_insn	(x=0X43E23F09);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23F22);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23F88);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23F91);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23F99);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23FA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23FD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23FD9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23FDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23FE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E23FEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23FF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E23FFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E24007);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E24048);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2404E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E24054);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2405A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E24060);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E24066);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E24099);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E240B1);
	op_hex		(x,	1);
	set_cmt	(0X43E2410B,	"a1",	0);
	create_insn	(0X43E2411E);
	set_cmt	(0X43E24134,	"currentDamageOverride",	0);
	create_insn	(x=0X43E24135);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2413D);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2414A,	"player",	0);
	set_cmt	(0X43E2414B,	"hitGroup",	0);
	create_insn	(0X43E24161);
	set_cmt	(0X43E24174,	"currentDamageOverride",	0);
	set_cmt	(0X43E24175,	"player",	0);
	set_cmt	(0X43E24180,	"hitGroup",	0);
	make_array	(0X43E24191,	0XF);
	create_insn	(0X43E241A0);
	set_cmt	(0X43E241B7,	"interface",	0);
	set_cmt	(0X43E241BA,	"index",	0);
	create_insn	(0X43E241E3);
	create_insn	(0X43E241E8);
	make_array	(0X43E241ED,	0X3);
	create_insn	(0X43E241F0);
	create_insn	(x=0X43E241F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E241F6);
	op_hex		(x,	1);
	set_cmt	(0X43E24261,	"propHash",	0);
	set_cmt	(0X43E24266,	"classHash",	0);
	set_cmt	(0X43E24284,	"propHash",	0);
	set_cmt	(0X43E24289,	"classHash",	0);
	set_cmt	(0X43E242D7,	"propHash",	0);
	set_cmt	(0X43E242DC,	"classHash",	0);
	create_insn	(0X43E243A1);
	create_insn	(0X43E243E3);
	set_cmt	(0X43E24456,	"this",	0);
	set_cmt	(0X43E244AA,	"end",	0);
	set_cmt	(0X43E244AB,	"start",	0);
	set_cmt	(0X43E244DE,	"this",	0);
	set_cmt	(0X43E244E5,	"a2",	0);
	make_array	(0X43E244F3,	0XD);
	create_insn	(0X43E24500);
	create_insn	(x=0X43E24503);
	op_hex		(x,	1);
	create_insn	(x=0X43E24506);
	op_hex		(x,	1);
	create_insn	(x=0X43E24509);
	op_hex		(x,	1);
	create_insn	(x=0X43E24516);
	op_hex		(x,	1);
	create_insn	(x=0X43E24522);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E24529,	"this",	0);
	set_cmt	(0X43E2457D,	"end",	0);
	set_cmt	(0X43E2457E,	"start",	0);
	create_insn	(0X43E245C7);
	make_array	(0X43E245D1,	0XF);
	create_insn	(0X43E245E0);
	create_insn	(x=0X43E245E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E245E6);
	op_hex		(x,	1);
	set_cmt	(0X43E24625,	"this",	0);
	create_insn	(x=0X43E2462C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2464C,	"end",	0);
	set_cmt	(0X43E2464D,	"start",	0);
	set_cmt	(0X43E24673,	"a7",	0);
	create_insn	(x=0X43E24688);
	op_hex		(x,	1);
	create_insn	(0X43E24697);
	set_cmt	(0X43E2469E,	"a2",	0);
	set_cmt	(0X43E246A6,	"a1",	0);
	create_insn	(x=0X43E246B4);
	op_hex		(x,	1);
	create_insn	(x=0X43E246B7);
	op_hex		(x,	1);
	create_insn	(x=0X43E246CF);
	op_hex		(x,	1);
	create_insn	(x=0X43E246D2);
	op_hex		(x,	1);
	set_cmt	(0X43E247DA,	"a10",	0);
	set_cmt	(0X43E247DF,	"a9",	0);
	set_cmt	(0X43E247E4,	"a8",	0);
	create_insn	(x=0X43E247E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E247EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E24853);
	op_hex		(x,	1);
	create_insn	(0X43E248F5);
	create_insn	(0X43E248FF);
	create_insn	(0X43E24941);
	create_insn	(0X43E24A1E);
	make_array	(0X43E24A28,	0X8);
	create_insn	(0X43E24A30);
	create_insn	(x=0X43E24A33);
	op_hex		(x,	1);
	set_cmt	(0X43E24A36,	"interface",	0);
	create_insn	(x=0X43E24A3C);
	op_hex		(x,	1);
	set_cmt	(0X43E24A3F,	"index",	0);
	set_cmt	(0X43E24A53,	"this",	0);
	set_cmt	(0X43E24A5F,	"player",	0);
	set_cmt	(0X43E24A74,	"index",	0);
	set_cmt	(0X43E24A79,	"interface",	0);
	set_cmt	(0X43E24A86,	"this",	0);
	set_cmt	(0X43E24A92,	"player",	0);
	set_cmt	(0X43E24ABA,	"propHash",	0);
	set_cmt	(0X43E24ABF,	"classHash",	0);
	make_array	(0X43E24BFD,	0X3);
	create_insn	(0X43E24C00);
	create_insn	(x=0X43E24C03);
	op_hex		(x,	1);
	create_insn	(x=0X43E24C06);
	op_hex		(x,	1);
	set_cmt	(0X43E24CBF,	"arg",	0);
	set_cmt	(0X43E24D49,	"arg",	0);
	create_insn	(0X43E24DF0);
	create_insn	(x=0X43E24DF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E24DF6);
	op_hex		(x,	1);
	set_cmt	(0X43E24DFD,	"arg",	0);
	set_cmt	(0X43E24E01,	"player",	0);
	set_cmt	(0X43E24E10,	"player",	0);
	set_cmt	(0X43E24E3B,	"propHash",	0);
	set_cmt	(0X43E24E40,	"classHash",	0);
	set_cmt	(0X43E24E73,	"index",	0);
	set_cmt	(0X43E24E78,	"interface",	0);
	set_cmt	(0X43E24E85,	"this",	0);
	set_cmt	(0X43E24ECF,	"propHash",	0);
	set_cmt	(0X43E24ED4,	"classHash",	0);
	set_cmt	(0X43E24EF6,	"propHash",	0);
	set_cmt	(0X43E24EFB,	"classHash",	0);
	create_insn	(0X43E24F35);
	set_cmt	(0X43E24F39,	"propHash",	0);
	set_cmt	(0X43E24F3E,	"classHash",	0);
	set_cmt	(0X43E24F64,	"propHash",	0);
	set_cmt	(0X43E24F69,	"classHash",	0);
	create_insn	(0X43E24F9C);
	create_insn	(0X43E24FB0);
	set_cmt	(0X43E24FB9,	"propHash",	0);
	set_cmt	(0X43E24FBE,	"classHash",	0);
	set_cmt	(0X43E2502E,	"player",	0);
	create_insn	(0X43E2502E);
	set_cmt	(0X43E2505B,	"propHash",	0);
	set_cmt	(0X43E25060,	"classHash",	0);
	set_cmt	(0X43E25093,	"player",	0);
	set_cmt	(0X43E250A5,	"propHash",	0);
	set_cmt	(0X43E250AA,	"classHash",	0);
	create_insn	(0X43E2533A);
	create_insn	(0X43E25364);
	make_array	(0X43E25383,	0XD);
	create_insn	(0X43E25390);
	set_name	(0X43E25390,	"C_SDK::Security::Base64::EncodeGlobalBuffer");
	create_insn	(x=0X43E25393);
	op_hex		(x,	1);
	create_insn	(x=0X43E25397);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E253C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E253C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E253CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E253CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E253D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E253D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E253D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E253DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E253E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E253E8);
	op_hex		(x,	1);
	create_insn	(x=0X43E253EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E253F0);
	op_hex		(x,	1);
	create_insn	(x=0X43E253F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E253FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E253FF);
	op_hex		(x,	1);
	create_insn	(x=0X43E25402);
	op_hex		(x,	1);
	create_insn	(x=0X43E25405);
	op_hex		(x,	1);
	create_insn	(x=0X43E2540C);
	op_hex		(x,	1);
	create_insn	(x=0X43E2540E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E25411);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E25427);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2542C);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2543E,	"char *",	0);
	create_insn	(x=0X43E2544A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2544F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E25452);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E25455);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E25460);
	op_stkvar	(x,	0);
	set_cmt	(0X43E25478,	"num",	0);
	create_insn	(x=0X43E25479);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2547E,	"value",	0);
	set_cmt	(0X43E25480,	"pointer",	0);
	create_insn	(x=0X43E25486);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E25489);
	op_hex		(x,	1);
	create_insn	(x=0X43E2548C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2548F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E25494);
	op_hex		(x,	1);
	create_insn	(x=0X43E25497);
	op_hex		(x,	1);
	create_insn	(x=0X43E2549C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E254A1);
	op_hex		(x,	1);
	create_insn	(x=0X43E254A4);
	op_hex		(x,	1);
	create_insn	(x=0X43E254A7);
	op_hex		(x,	1);
	create_insn	(x=0X43E254AC);
	op_hex		(x,	1);
	create_insn	(x=0X43E254B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E254B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E254BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E254D7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E254DC);
	op_stkvar	(x,	1);
	set_cmt	(0X43E254EE,	"char *",	0);
	create_insn	(x=0X43E254F9);
	op_stkvar	(x,	1);
	set_cmt	(0X43E25510,	"char *",	0);
	make_array	(0X43E25527,	0X9);
	create_insn	(0X43E25530);
	create_insn	(x=0X43E25538);
	op_hex		(x,	1);
	create_insn	(x=0X43E255D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E255E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E25628);
	op_hex		(x,	1);
	create_insn	(x=0X43E2562E);
	op_hex		(x,	1);
	create_insn	(x=0X43E25784);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E25790);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E257A3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E257AF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E257FE);
	op_hex		(x,	1);
	create_insn	(x=0X43E25804);
	op_hex		(x,	1);
	create_insn	(x=0X43E25891);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E258A2,	0XE);
	create_insn	(0X43E258B0);
	create_insn	(x=0X43E258C7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E258FC,	"Size",	0);
	create_insn	(x=0X43E25909);
	op_hex		(x,	1);
	make_array	(0X43E2596E,	0X2);
	create_insn	(0X43E25970);
	set_cmt	(0X43E259B7,	"Size",	0);
	create_insn	(x=0X43E259C4);
	op_hex		(x,	1);
	make_array	(0X43E25A29,	0X7);
	create_insn	(0X43E25A30);
	create_insn	(x=0X43E25A33);
	op_hex		(x,	1);
	create_insn	(x=0X43E25A54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E25A60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E25A70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E25A7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43E25B56,	0XA);
	create_insn	(0X43E25B60);
	create_insn	(x=0X43E25B63);
	op_hex		(x,	1);
	create_insn	(x=0X43E25B84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E25B90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43E25C58,	0X8);
	create_insn	(0X43E25C60);
	create_insn	(x=0X43E25C6B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E25C74,	"this",	0);
	set_cmt	(0X43E25C92,	"index",	0);
	set_cmt	(0X43E25C97,	"interface",	0);
	set_cmt	(0X43E25CA4,	"this",	0);
	set_cmt	(0X43E25CCE,	"propHash",	0);
	set_cmt	(0X43E25CD3,	"classHash",	0);
	set_cmt	(0X43E25CF5,	"propHash",	0);
	set_cmt	(0X43E25CFA,	"classHash",	0);
	create_insn	(x=0X43E25D33);
	op_hex		(x,	1);
	create_insn	(0X43E25D3A);
	create_insn	(x=0X43E25D56);
	op_hex		(x,	1);
	create_insn	(x=0X43E25D6C);
	op_hex		(x,	1);
	create_insn	(x=0X43E25D7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E25D91,	0XF);
	create_insn	(0X43E25DA0);
	create_insn	(x=0X43E25DA3);
	op_hex		(x,	1);
	set_cmt	(0X43E25DA6,	"interface",	0);
	set_cmt	(0X43E25DAC,	"index",	0);
	set_cmt	(0X43E25DC5,	"this",	0);
	set_cmt	(0X43E25DDC,	"propHash",	0);
	set_cmt	(0X43E25DE1,	"classHash",	0);
	set_cmt	(0X43E25E03,	"propHash",	0);
	set_cmt	(0X43E25E08,	"classHash",	0);
	set_cmt	(0X43E25E27,	"index",	0);
	set_cmt	(0X43E25E2C,	"interface",	0);
	set_cmt	(0X43E25E39,	"this",	0);
	set_cmt	(0X43E25E70,	"index",	0);
	set_cmt	(0X43E25E75,	"interface",	0);
	set_cmt	(0X43E25E89,	"this",	0);
	set_cmt	(0X43E25EA0,	"propHash",	0);
	set_cmt	(0X43E25EA5,	"classHash",	0);
	set_cmt	(0X43E25EBA,	"index",	0);
	set_cmt	(0X43E25EC5,	"interface",	0);
	set_cmt	(0X43E25ED7,	"this",	0);
	set_cmt	(0X43E25EEE,	"propHash",	0);
	set_cmt	(0X43E25EF3,	"classHash",	0);
	set_cmt	(0X43E25F0A,	"index",	0);
	set_cmt	(0X43E25F15,	"interface",	0);
	set_cmt	(0X43E25F22,	"this",	0);
	set_cmt	(0X43E25F34,	"modelBoneCounter",	0);
	set_cmt	(0X43E25F36,	"m_player",	0);
	set_cmt	(0X43E25F43,	"index",	0);
	set_cmt	(0X43E25F48,	"interface",	0);
	set_cmt	(0X43E25F55,	"this",	0);
	set_cmt	(0X43E25F67,	"index",	0);
	set_cmt	(0X43E25F6C,	"interface",	0);
	set_cmt	(0X43E25F7B,	"this",	0);
	set_cmt	(0X43E25F92,	"propHash",	0);
	set_cmt	(0X43E25F97,	"classHash",	0);
	create_insn	(x=0X43E25FAB);
	op_hex		(x,	1);
	set_cmt	(0X43E25FC3,	"index",	0);
	set_cmt	(0X43E25FC8,	"interface",	0);
	set_cmt	(0X43E25FD5,	"this",	0);
	set_cmt	(0X43E25FE7,	"index",	0);
	set_cmt	(0X43E25FEC,	"interface",	0);
	set_cmt	(0X43E25FF9,	"this",	0);
	set_cmt	(0X43E26010,	"propHash",	0);
	set_cmt	(0X43E26015,	"classHash",	0);
	make_array	(0X43E2603C,	0X4);
	create_insn	(0X43E26040);
	create_insn	(x=0X43E26043);
	op_hex		(x,	1);
	set_cmt	(0X43E26046,	"interface",	0);
	set_cmt	(0X43E2604C,	"index",	0);
	set_cmt	(0X43E26065,	"this",	0);
	set_cmt	(0X43E2607F,	"index",	0);
	set_cmt	(0X43E26084,	"interface",	0);
	set_cmt	(0X43E26091,	"this",	0);
	set_cmt	(0X43E2609D,	"m_pPlayer",	0);
	set_cmt	(0X43E260B2,	"index",	0);
	set_cmt	(0X43E260B7,	"interface",	0);
	set_cmt	(0X43E260C4,	"this",	0);
	set_cmt	(0X43E260FB,	"index",	0);
	set_cmt	(0X43E26100,	"interface",	0);
	set_cmt	(0X43E26114,	"this",	0);
	set_cmt	(0X43E26126,	"modelBoneCounter",	0);
	set_cmt	(0X43E26128,	"m_player",	0);
	set_cmt	(0X43E26135,	"index",	0);
	set_cmt	(0X43E2613A,	"interface",	0);
	set_cmt	(0X43E26147,	"this",	0);
	set_cmt	(0X43E26159,	"index",	0);
	set_cmt	(0X43E2615E,	"interface",	0);
	set_cmt	(0X43E2616D,	"this",	0);
	set_cmt	(0X43E26184,	"propHash",	0);
	set_cmt	(0X43E26189,	"classHash",	0);
	create_insn	(x=0X43E2619D);
	op_hex		(x,	1);
	create_insn	(0X43E261BF);
	make_array	(0X43E261C9,	0X7);
	create_insn	(0X43E261D0);
	create_insn	(x=0X43E261D3);
	op_hex		(x,	1);
	set_cmt	(0X43E261DE,	"index",	0);
	set_cmt	(0X43E261E7,	"interface",	0);
	set_cmt	(0X43E261FE,	"this",	0);
	set_cmt	(0X43E26215,	"propHash",	0);
	set_cmt	(0X43E2621A,	"classHash",	0);
	set_cmt	(0X43E2623C,	"propHash",	0);
	set_cmt	(0X43E26241,	"classHash",	0);
	set_cmt	(0X43E26260,	"index",	0);
	set_cmt	(0X43E26265,	"interface",	0);
	set_cmt	(0X43E26272,	"this",	0);
	set_cmt	(0X43E262A9,	"index",	0);
	set_cmt	(0X43E262AE,	"interface",	0);
	set_cmt	(0X43E262BB,	"this",	0);
	set_cmt	(0X43E262CD,	"index",	0);
	set_cmt	(0X43E262D2,	"interface",	0);
	set_cmt	(0X43E262FF,	"this",	0);
	set_cmt	(0X43E26316,	"propHash",	0);
	set_cmt	(0X43E2631B,	"classHash",	0);
	create_insn	(x=0X43E2632A);
	op_hex		(x,	1);
	set_cmt	(0X43E26344,	"index",	0);
	set_cmt	(0X43E26349,	"interface",	0);
	set_cmt	(0X43E26356,	"this",	0);
	set_cmt	(0X43E26362,	"_DWORD",	0);
	set_cmt	(0X43E2636D,	"int",	0);
	set_cmt	(0X43E26392,	"index",	0);
	set_cmt	(0X43E26397,	"interface",	0);
	set_cmt	(0X43E263AB,	"this",	0);
	set_cmt	(0X43E263C2,	"propHash",	0);
	set_cmt	(0X43E263C7,	"classHash",	0);
	set_cmt	(0X43E263F1,	"index",	0);
	set_cmt	(0X43E263F6,	"interface",	0);
	set_cmt	(0X43E26403,	"this",	0);
	set_cmt	(0X43E26435,	"index",	0);
	set_cmt	(0X43E2643A,	"interface",	0);
	set_cmt	(0X43E26447,	"this",	0);
	set_cmt	(0X43E26459,	"modelBoneCounter",	0);
	set_cmt	(0X43E2645B,	"m_player",	0);
	set_cmt	(0X43E26468,	"index",	0);
	set_cmt	(0X43E2646D,	"interface",	0);
	set_cmt	(0X43E2647A,	"this",	0);
	set_cmt	(0X43E2648C,	"index",	0);
	set_cmt	(0X43E26491,	"interface",	0);
	set_cmt	(0X43E264A0,	"this",	0);
	set_cmt	(0X43E264B7,	"propHash",	0);
	set_cmt	(0X43E264BC,	"classHash",	0);
	create_insn	(x=0X43E264D0);
	op_hex		(x,	1);
	set_cmt	(0X43E264E6,	"index",	0);
	set_cmt	(0X43E264F3,	"interface",	0);
	set_cmt	(0X43E26500,	"this",	0);
	set_cmt	(0X43E26537,	"index",	0);
	set_cmt	(0X43E2653C,	"interface",	0);
	set_cmt	(0X43E26549,	"this",	0);
	set_cmt	(0X43E26560,	"propHash",	0);
	set_cmt	(0X43E26565,	"classHash",	0);
	set_cmt	(0X43E26579,	"index",	0);
	set_cmt	(0X43E2658A,	"interface",	0);
	set_cmt	(0X43E26597,	"this",	0);
	set_cmt	(0X43E265A9,	"modelBoneCounter",	0);
	set_cmt	(0X43E265AB,	"m_player",	0);
	set_cmt	(0X43E265B8,	"index",	0);
	set_cmt	(0X43E265BD,	"interface",	0);
	set_cmt	(0X43E265CA,	"this",	0);
	set_cmt	(0X43E265DC,	"index",	0);
	set_cmt	(0X43E265E1,	"interface",	0);
	set_cmt	(0X43E265F0,	"this",	0);
	set_cmt	(0X43E26607,	"propHash",	0);
	set_cmt	(0X43E2660C,	"classHash",	0);
	create_insn	(x=0X43E26620);
	op_hex		(x,	1);
	make_array	(0X43E26662,	0XE);
	create_insn	(0X43E26670);
	create_insn	(0X43E266B8);
	set_cmt	(0X43E266C2,	"modelBoneCounter",	0);
	set_cmt	(0X43E266C5,	"m_player",	0);
	set_cmt	(0X43E266D5,	"propHash",	0);
	set_cmt	(0X43E266DA,	"classHash",	0);
	set_cmt	(0X43E266F0,	"propHash",	0);
	set_cmt	(0X43E266F5,	"classHash",	0);
	set_cmt	(0X43E26711,	"propHash",	0);
	set_cmt	(0X43E26716,	"classHash",	0);
	set_cmt	(0X43E2672D,	"propHash",	0);
	set_cmt	(0X43E26732,	"classHash",	0);
	create_insn	(x=0X43E26741);
	op_hex		(x,	1);
	set_cmt	(0X43E26745,	"edx_",	0);
	set_cmt	(0X43E26750,	"currentTime",	0);
	set_cmt	(0X43E26755,	"boneMask",	0);
	set_cmt	(0X43E2675A,	"maxBones",	0);
	set_cmt	(0X43E2675F,	"matrixPointer",	0);
	set_cmt	(0X43E26765,	"ecx_",	0);
	set_cmt	(0X43E26780,	"propHash",	0);
	set_cmt	(0X43E26785,	"classHash",	0);
	set_cmt	(0X43E267AC,	"propHash",	0);
	set_cmt	(0X43E267B1,	"classHash",	0);
	create_insn	(0X43E267E5);
	make_array	(0X43E267EE,	0X2);
	create_insn	(0X43E267F0);
	set_cmt	(0X43E267FD,	"interface",	0);
	set_cmt	(0X43E26803,	"index",	0);
	set_cmt	(0X43E26816,	"this",	0);
	create_insn	(0X43E26834);
	create_insn	(x=0X43E2684B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E268A0);
	create_insn	(x=0X43E268A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E268A6);
	op_hex		(x,	1);
	set_cmt	(0X43E268C6,	"index",	0);
	set_cmt	(0X43E268CB,	"interface",	0);
	set_cmt	(0X43E268D8,	"this",	0);
	create_insn	(0X43E26B57);
	set_cmt	(0X43E26B5D,	"_DWORD",	0);
	set_cmt	(0X43E26B61,	"_DWORD",	0);
	set_cmt	(0X43E26B65,	"_DWORD",	0);
	set_cmt	(0X43E26B66,	"_DWORD",	0);
	set_cmt	(0X43E26B67,	"_DWORD",	0);
	make_array	(0X43E26B76,	0XA);
	create_insn	(0X43E26B80);
	create_insn	(x=0X43E26BA0);
	op_hex		(x,	1);
	create_insn	(x=0X43E26BC3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E26BC6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E26BD9);
	op_hex		(x,	1);
	create_insn	(x=0X43E26BF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E26BFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E26C06);
	op_hex		(x,	1);
	create_insn	(x=0X43E26C10);
	op_hex		(x,	1);
	make_array	(0X43E26C14,	0XC);
	create_byte	(0X43E26C21);
	make_array	(0X43E26C21,	0X3);
	create_dword	(0X43E26C24);
	make_array	(0X43E26C24,	0X1B);
	create_insn	(0X43E26C90);
	create_insn	(x=0X43E26C93);
	op_hex		(x,	1);
	create_insn	(x=0X43E26CE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E26D46);
	op_hex		(x,	1);
	create_insn	(x=0X43E26D9D);
	op_hex		(x,	1);
	set_cmt	(0X43E26DE9,	"a3",	0);
	set_cmt	(0X43E26DEA,	"a2",	0);
	set_cmt	(0X43E26DEB,	"this",	0);
	create_insn	(x=0X43E26E38);
	op_hex		(x,	1);
	set_cmt	(0X43E26E80,	"a3",	0);
	set_cmt	(0X43E26E81,	"a2",	0);
	set_cmt	(0X43E26E82,	"this",	0);
	set_cmt	(0X43E26ECF,	"a3",	0);
	set_cmt	(0X43E26ED0,	"a2",	0);
	set_cmt	(0X43E26ED1,	"this",	0);
	create_insn	(x=0X43E26F10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E26F95);
	op_hex		(x,	1);
	create_insn	(x=0X43E26FA7);
	op_hex		(x,	1);
	create_insn	(x=0X43E26FAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E26FB8);
	op_hex		(x,	1);
	create_insn	(x=0X43E26FED);
	op_hex		(x,	1);
	create_insn	(x=0X43E27022);
	op_hex		(x,	1);
	create_insn	(x=0X43E27037);
	op_hex		(x,	1);
	create_insn	(x=0X43E2703E);
	op_hex		(x,	1);
	create_insn	(x=0X43E27075);
	op_hex		(x,	1);
	create_insn	(x=0X43E270C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E27105);
	op_hex		(x,	1);
	create_insn	(x=0X43E27111);
	op_hex		(x,	1);
	set_cmt	(0X43E2713C,	"a3",	0);
	set_cmt	(0X43E27141,	"a2",	0);
	set_cmt	(0X43E27142,	"this",	0);
	create_insn	(x=0X43E27174);
	op_hex		(x,	1);
	set_cmt	(0X43E27188,	"a3",	0);
	set_cmt	(0X43E2718C,	"this",	0);
	set_cmt	(0X43E27192,	"a2",	0);
	create_insn	(0X43E271C0);
	create_insn	(x=0X43E27204);
	op_hex		(x,	1);
	create_insn	(x=0X43E27238);
	op_hex		(x,	1);
	create_insn	(x=0X43E2726C);
	op_hex		(x,	1);
	create_insn	(0X43E272B3);
	create_insn	(x=0X43E272E7);
	op_hex		(x,	1);
	create_insn	(x=0X43E2732A);
	op_hex		(x,	1);
	create_insn	(0X43E2734A);
	create_insn	(0X43E2736E);
	make_array	(0X43E27373,	0XD);
	create_insn	(0X43E27380);
	create_insn	(x=0X43E27383);
	op_hex		(x,	1);
	set_cmt	(0X43E27392,	"object",	0);
	create_insn	(x=0X43E27392);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2739F,	"object",	0);
	create_insn	(x=0X43E2739F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E273A9,	"localPlayerInstance",	0);
	set_cmt	(0X43E273B7,	"instance",	0);
	set_cmt	(0X43E273CB,	"m_pPlayer",	0);
	create_insn	(0X43E273CB);
	set_cmt	(0X43E273E1,	"m_player",	0);
	create_insn	(0X43E273E1);
	create_insn	(0X43E273F7);
	set_cmt	(0X43E27405,	"modelBoneCounter",	0);
	set_cmt	(0X43E27406,	"m_player",	0);
	set_cmt	(0X43E27430,	"propHash",	0);
	set_cmt	(0X43E27434,	"classHash",	0);
	create_insn	(x=0X43E27435);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E27486,	"obj",	0);
	set_cmt	(0X43E27498,	"obj",	0);
	create_insn	(0X43E27498);
	set_cmt	(0X43E274A0,	"index",	0);
	set_cmt	(0X43E274A5,	"interface",	0);
	set_cmt	(0X43E274AF,	"obj",	0);
	create_insn	(0X43E274E9);
	create_insn	(x=0X43E274EF);
	op_hex		(x,	1);
	create_insn	(x=0X43E274F9);
	op_hex		(x,	1);
	set_cmt	(0X43E2751A,	"propHash",	0);
	set_cmt	(0X43E2751E,	"classHash",	0);
	create_insn	(x=0X43E2751F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E2754A,	0X2);
	create_word	(0X43E2754E);
	create_dword	(0X43E27550);
	make_array	(0X43E27550,	0X14);
	create_byte	(0X43E275A1);
	create_word	(0X43E275A2);
	create_dword	(0X43E275A4);
	make_array	(0X43E275A4,	0XD);
	create_dword	(0X43E275D8);
	make_array	(0X43E275D8,	0XD4);
	create_insn	(0X43E27928);
	make_array	(0X43E2792C,	0X4);
	create_insn	(0X43E27930);
	set_name	(0X43E27930,	"OneTap::Startup::Engine");
	create_insn	(x=0X43E27933);
	op_hex		(x,	1);
	create_insn	(x=0X43E2793B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E27941);
	op_stkvar	(x,	0);
	set_cmt	(0X43E27945,	"currentModule",	0);
	set_cmt	(0X43E27952,	"a3",	0);
	create_insn	(x=0X43E27952);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E27958);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2796E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2797D);
	op_stkvar	(x,	1);
	set_cmt	(0X43E27990,	"a4",	0);
	create_insn	(x=0X43E27990);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2799F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E279AC);
	op_stkvar	(x,	1);
	make_array	(0X43E279BD,	0X3);
	create_insn	(0X43E279C0);
	set_name	(0X43E279C0,	"OneTap::Configuration::Instance");
	create_insn	(x=0X43E279C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E279C6);
	op_hex		(x,	1);
	create_insn	(x=0X43E279C9);
	op_hex		(x,	1);
	create_insn	(x=0X43E279D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E279D6);
	op_hex		(x,	1);
	create_insn	(0X43E27A13);
	create_insn	(x=0X43E27A67);
	op_hex		(x,	1);
	set_cmt	(0X43E27A91,	"_DWORD",	0);
	set_cmt	(0X43E27A93,	"_DWORD",	0);
	set_cmt	(0X43E27A98,	"_DWORD",	0);
	set_cmt	(0X43E27A9A,	"_DWORD",	0);
	set_cmt	(0X43E27A9C,	"_DWORD",	0);
	set_cmt	(0X43E27A9E,	"_DWORD",	0);
	set_cmt	(0X43E27AA3,	"_DWORD",	0);
	create_insn	(x=0X43E27AB3);
	op_hex		(x,	1);
	create_insn	(x=0X43E27AB8);
	op_hex		(x,	1);
	set_cmt	(0X43E27AC1,	"hash",	0);
	create_insn	(0X43E27ADE);
	create_insn	(x=0X43E27B1D);
	op_hex		(x,	1);
	create_insn	(x=0X43E27B5B);
	op_hex		(x,	1);
	set_cmt	(0X43E27B7B,	"_DWORD",	0);
	set_cmt	(0X43E27B81,	"_DWORD",	0);
	set_cmt	(0X43E27B86,	"_DWORD",	0);
	set_cmt	(0X43E27B88,	"_DWORD",	0);
	set_cmt	(0X43E27B8A,	"_DWORD",	0);
	set_cmt	(0X43E27B8C,	"_DWORD",	0);
	set_cmt	(0X43E27B91,	"_DWORD",	0);
	create_insn	(x=0X43E27BA0);
	op_hex		(x,	1);
	create_insn	(x=0X43E27BA4);
	op_hex		(x,	1);
	set_cmt	(0X43E27BA7,	"hash",	0);
	create_insn	(0X43E27BC9);
	create_insn	(x=0X43E27C08);
	op_hex		(x,	1);
	create_insn	(x=0X43E27C47);
	op_hex		(x,	1);
	create_insn	(x=0X43E27C62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E27CAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E27D0A);
	op_hex		(x,	1);
	set_cmt	(0X43E27D59,	"a3",	0);
	set_cmt	(0X43E27D5A,	"a2",	0);
	set_cmt	(0X43E27D5B,	"this",	0);
	create_insn	(x=0X43E27DAA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E27E29);
	op_hex		(x,	1);
	create_insn	(x=0X43E27E89);
	op_hex		(x,	1);
	set_cmt	(0X43E27ED1,	"a3",	0);
	set_cmt	(0X43E27ED2,	"a2",	0);
	set_cmt	(0X43E27ED3,	"this",	0);
	create_insn	(x=0X43E27F27);
	op_hex		(x,	1);
	set_cmt	(0X43E27F6F,	"a3",	0);
	set_cmt	(0X43E27F70,	"a2",	0);
	set_cmt	(0X43E27F71,	"this",	0);
	set_cmt	(0X43E27FBF,	"a3",	0);
	set_cmt	(0X43E27FC0,	"a2",	0);
	set_cmt	(0X43E27FC1,	"this",	0);
	create_insn	(x=0X43E28001);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E28086);
	op_hex		(x,	1);
	create_insn	(x=0X43E28095);
	op_hex		(x,	1);
	create_insn	(x=0X43E28098);
	op_hex		(x,	1);
	create_insn	(x=0X43E280B2);
	op_hex		(x,	1);
	create_insn	(x=0X43E280E7);
	op_hex		(x,	1);
	create_insn	(x=0X43E2811C);
	op_hex		(x,	1);
	create_insn	(x=0X43E28131);
	op_hex		(x,	1);
	create_insn	(x=0X43E28138);
	op_hex		(x,	1);
	create_insn	(x=0X43E2816F);
	op_hex		(x,	1);
	create_insn	(x=0X43E281C4);
	op_hex		(x,	1);
	create_insn	(x=0X43E2820F);
	op_hex		(x,	1);
	create_insn	(x=0X43E2821B);
	op_hex		(x,	1);
	set_cmt	(0X43E28246,	"a3",	0);
	set_cmt	(0X43E2824B,	"a2",	0);
	set_cmt	(0X43E2824C,	"this",	0);
	create_insn	(x=0X43E2827E);
	op_hex		(x,	1);
	set_cmt	(0X43E28292,	"a3",	0);
	set_cmt	(0X43E28296,	"this",	0);
	set_cmt	(0X43E2829C,	"a2",	0);
	create_insn	(0X43E282CF);
	create_insn	(x=0X43E282D7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E28318);
	op_hex		(x,	1);
	create_insn	(x=0X43E2834C);
	op_hex		(x,	1);
	create_insn	(x=0X43E28380);
	op_hex		(x,	1);
	create_insn	(0X43E283C7);
	create_insn	(x=0X43E283FB);
	op_hex		(x,	1);
	create_insn	(x=0X43E2843E);
	op_hex		(x,	1);
	create_insn	(x=0X43E284B0);
	op_hex		(x,	1);
	create_insn	(0X43E284CE);
	create_insn	(x=0X43E284D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2853A);
	op_hex		(x,	1);
	create_insn	(x=0X43E28572);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E285A8);
	make_array	(0X43E285AD,	0X3);
	create_insn	(0X43E285B0);
	create_insn	(x=0X43E285B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E285B6);
	op_hex		(x,	1);
	create_insn	(x=0X43E285B9);
	op_hex		(x,	1);
	create_insn	(x=0X43E285C6);
	op_hex		(x,	1);
	create_insn	(0X43E285FD);
	create_insn	(0X43E28671);
	create_insn	(0X43E28683);
	create_insn	(0X43E286F7);
	create_insn	(x=0X43E28710);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E28717);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E28726,	"Size",	0);
	create_insn	(x=0X43E2872D);
	op_hex		(x,	1);
	create_insn	(x=0X43E28733);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2873D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E28746);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E28753);
	op_hex		(x,	1);
	create_insn	(0X43E2876D);
	create_insn	(x=0X43E28770);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E287BB);
	make_array	(0X43E287CA,	0X6);
	create_insn	(0X43E287D0);
	set_name	(0X43E287D0,	"OneTap::Startup::Engine::SetupInterfaces");
	create_insn	(x=0X43E287D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E287DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E287ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E287F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E28809);
	op_stkvar	(x,	1);
	set_cmt	(0X43E28813,	"hash",	0);
	create_insn	(x=0X43E28818);
	op_stkvar	(x,	0);
	set_cmt	(0X43E28830,	"hash",	0);
	create_insn	(x=0X43E28850);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E28857);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2885A);
	op_hex		(x,	1);
	create_insn	(x=0X43E2885F);
	op_hex		(x,	1);
	set_cmt	(0X43E28868,	"hash",	0);
	create_insn	(0X43E2888B);
	create_insn	(x=0X43E28894);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2889A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2889E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E288B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E288B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E288BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E288C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E288C4);
	op_hex		(x,	1);
	create_insn	(x=0X43E288C9);
	op_hex		(x,	1);
	set_cmt	(0X43E288D2,	"hash",	0);
	create_insn	(x=0X43E288EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E288FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E288FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E28903);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E28916);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2891D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E28920);
	op_hex		(x,	1);
	create_insn	(x=0X43E28925);
	op_hex		(x,	1);
	set_cmt	(0X43E2892E,	"hash",	0);
	create_insn	(x=0X43E28953);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E28959);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2895D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E28973);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E28976);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2897D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E28980);
	op_hex		(x,	1);
	create_insn	(x=0X43E28985);
	op_hex		(x,	1);
	set_cmt	(0X43E2898E,	"hash",	0);
	create_insn	(x=0X43E289AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E289B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E289B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E289BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E289CB);
	op_stkvar	(x,	1);
	make_array	(0X43E289DC,	0X4);
	create_insn	(0X43E289E0);
	create_insn	(x=0X43E289E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E289E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E289E9);
	op_hex		(x,	1);
	create_insn	(x=0X43E289F6);
	op_hex		(x,	1);
	create_insn	(0X43E28A2A);
	set_cmt	(0X43E28A34,	"Size",	0);
	create_insn	(x=0X43E28A3D);
	op_hex		(x,	1);
	set_cmt	(0X43E28AA4,	"num",	0);
	set_cmt	(0X43E28AAD,	"value",	0);
	set_cmt	(0X43E28AD1,	"pointer",	0);
	create_insn	(x=0X43E28AE1);
	op_hex		(x,	1);
	make_array	(0X43E28B03,	0XD);
	create_insn	(0X43E28B10);
	set_name	(0X43E28B10,	"OneTap::Features::Hooks::Wrapper::CreateMove");
	create_insn	(x=0X43E28B12);
	op_stkvar	(x,	0);
	set_cmt	(0X43E28B16,	"cmd",	0);
	create_insn	(x=0X43E28B16);
	op_stkvar	(x,	0);
	set_cmt	(0X43E28B1A,	"inputSampleTime",	0);
	create_insn	(x=0X43E28B1A);
	op_stkvar	(x,	0);
	make_array	(0X43E28B27,	0X9);
	create_insn	(0X43E28B30);
	set_name	(0X43E28B30,	"OneTap::Features::Hooks::CreateMove");
	create_insn	(x=0X43E28B33);
	op_hex		(x,	1);
	create_insn	(x=0X43E28B36);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E28B39);
	op_hex		(x,	1);
	set_cmt	(0X43E28B59,	"this",	0);
	create_insn	(x=0X43E28B64);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E28B67);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E28B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E28B70);
	op_stkvar	(x,	0);
	set_cmt	(0X43E28B75,	"cmd",	0);
	set_cmt	(0X43E28B7D,	"index",	0);
	set_cmt	(0X43E28B82,	"interface",	0);
	set_cmt	(0X43E28BA0,	"this",	0);
	create_insn	(x=0X43E28BC3);
	op_hex		(x,	1);
	create_insn	(x=0X43E28BC8);
	op_hex		(x,	1);
	create_insn	(x=0X43E28BE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E28C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E28C15);
	op_hex		(x,	1);
	create_insn	(x=0X43E28C18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E28C50,	"cmd",	0);
	create_insn	(x=0X43E28C50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E28C77);
	op_hex		(x,	1);
	create_insn	(x=0X43E28C7C);
	op_hex		(x,	1);
	create_insn	(x=0X43E28C8E);
	op_hex		(x,	1);
	create_insn	(x=0X43E28C91);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E28C97);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E28CAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E28CB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E28CC7);
	op_stkvar	(x,	1);
	create_insn	(0X43E28CD5);
	create_insn	(x=0X43E28CE2);
	op_hex		(x,	1);
	create_insn	(x=0X43E28CE7);
	op_hex		(x,	1);
	create_insn	(x=0X43E28CF4);
	op_hex		(x,	1);
	create_insn	(x=0X43E28CF7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E28D2E);
	op_hex		(x,	1);
	create_insn	(x=0X43E28D33);
	op_hex		(x,	1);
	create_insn	(x=0X43E28D40);
	op_hex		(x,	1);
	create_insn	(x=0X43E28D43);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E28D58);
	op_hex		(x,	1);
	create_insn	(x=0X43E28D66);
	op_hex		(x,	1);
	create_insn	(x=0X43E28D6A);
	op_hex		(x,	1);
	create_insn	(0X43E28D7E);
	create_insn	(x=0X43E28D83);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E28D87);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E28D90);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E28D98);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E28DA2);
	op_hex		(x,	1);
	create_insn	(x=0X43E28DAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E28DBF,	"index",	0);
	set_cmt	(0X43E28DC4,	"interface",	0);
	set_cmt	(0X43E28DD1,	"this",	0);
	set_cmt	(0X43E28DDD,	"m_pPlayer",	0);
	set_cmt	(0X43E28DF2,	"index",	0);
	set_cmt	(0X43E28DF7,	"interface",	0);
	set_cmt	(0X43E28E0B,	"this",	0);
	set_cmt	(0X43E28E33,	"cmd",	0);
	create_insn	(x=0X43E28E33);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E28E60);
	op_hex		(x,	1);
	create_insn	(x=0X43E28E65);
	op_hex		(x,	1);
	create_insn	(x=0X43E28E72);
	op_hex		(x,	1);
	create_insn	(x=0X43E28E75);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E28E90,	"cmd",	0);
	create_insn	(x=0X43E28E90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E28E9C);
	op_hex		(x,	1);
	set_cmt	(0X43E28EB3,	"index",	0);
	set_cmt	(0X43E28EB8,	"interface",	0);
	set_cmt	(0X43E28EC5,	"this",	0);
	set_cmt	(0X43E28EDC,	"propHash",	0);
	set_cmt	(0X43E28EE1,	"classHash",	0);
	create_insn	(x=0X43E28EF0);
	op_hex		(x,	1);
	set_cmt	(0X43E28EFC,	"index",	0);
	set_cmt	(0X43E28F01,	"interface",	0);
	set_cmt	(0X43E28F0E,	"this",	0);
	create_insn	(x=0X43E28F22);
	op_hex		(x,	1);
	set_cmt	(0X43E28F27,	"propHash",	0);
	create_insn	(x=0X43E28F2C);
	op_hex		(x,	1);
	set_cmt	(0X43E28F2F,	"classHash",	0);
	create_insn	(0X43E28F46);
	set_cmt	(0X43E28F52,	"cmd",	0);
	create_insn	(x=0X43E28F52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E28F5E);
	op_hex		(x,	1);
	set_cmt	(0X43E28F6D,	"index",	0);
	set_cmt	(0X43E28F72,	"interface",	0);
	set_cmt	(0X43E28F7F,	"this",	0);
	create_insn	(x=0X43E28F93);
	op_hex		(x,	1);
	set_cmt	(0X43E28F98,	"propHash",	0);
	create_insn	(x=0X43E28F9D);
	op_hex		(x,	1);
	set_cmt	(0X43E28FA0,	"classHash",	0);
	create_insn	(0X43E28FB7);
	set_cmt	(0X43E28FCD,	"index",	0);
	set_cmt	(0X43E28FD2,	"interface",	0);
	set_cmt	(0X43E28FDF,	"this",	0);
	create_insn	(x=0X43E28FF3);
	op_hex		(x,	1);
	set_cmt	(0X43E28FF8,	"propHash",	0);
	create_insn	(x=0X43E28FFD);
	op_hex		(x,	1);
	set_cmt	(0X43E29000,	"classHash",	0);
	create_insn	(0X43E29017);
	set_cmt	(0X43E29031,	"switch 4 cases ",	0);
	set_cmt	(0X43E29036,	"switch jump",	0);
	create_insn	(x=0X43E29036);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E2903D,	"jumptable 43E29036 case 0",	1);
	create_insn	(0X43E2903D);
	set_cmt	(0X43E29044,	"jumptable 43E29036 case 1",	1);
	create_insn	(0X43E29044);
	set_cmt	(0X43E2904B,	"jumptable 43E29036 case 2",	1);
	create_insn	(0X43E2904B);
	set_cmt	(0X43E29052,	"jumptable 43E29036 case 3",	1);
	create_insn	(0X43E29052);
	set_cmt	(0X43E29057,	"jumptable 43E29036 default case",	1);
	set_name	(0X43E29057,	"def_43E29036");
	create_insn	(x=0X43E29071);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2907D);
	set_cmt	(0X43E29088,	"index",	0);
	set_cmt	(0X43E2908D,	"interface",	0);
	set_cmt	(0X43E2909A,	"this",	0);
	create_insn	(0X43E290C2);
	set_cmt	(0X43E290D0,	"index",	0);
	set_cmt	(0X43E290D5,	"interface",	0);
	create_insn	(x=0X43E290DB);
	op_stkvar	(x,	0);
	set_cmt	(0X43E290E8,	"this",	0);
	set_cmt	(0X43E29102,	"index",	0);
	set_cmt	(0X43E29107,	"interface",	0);
	set_cmt	(0X43E29114,	"this",	0);
	set_cmt	(0X43E29120,	"m_pPlayer",	0);
	set_cmt	(0X43E29135,	"index",	0);
	set_cmt	(0X43E2913A,	"interface",	0);
	set_cmt	(0X43E29147,	"this",	0);
	create_insn	(x=0X43E29153);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E29159);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E29163);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2916D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E29173);
	op_stkvar	(x,	0);
	set_cmt	(0X43E29183,	"index",	0);
	set_cmt	(0X43E29188,	"interface",	0);
	set_cmt	(0X43E2919C,	"this",	0);
	set_cmt	(0X43E291B3,	"propHash",	0);
	set_cmt	(0X43E291B8,	"classHash",	0);
	set_cmt	(0X43E291CD,	"index",	0);
	set_cmt	(0X43E291D8,	"interface",	0);
	create_insn	(x=0X43E291DE);
	op_stkvar	(x,	0);
	set_cmt	(0X43E291EB,	"this",	0);
	set_cmt	(0X43E29202,	"propHash",	0);
	set_cmt	(0X43E29207,	"classHash",	0);
	set_cmt	(0X43E2921E,	"index",	0);
	set_cmt	(0X43E29229,	"interface",	0);
	set_cmt	(0X43E29236,	"this",	0);
	set_cmt	(0X43E29248,	"modelBoneCounter",	0);
	set_cmt	(0X43E2924A,	"m_player",	0);
	set_cmt	(0X43E29257,	"index",	0);
	set_cmt	(0X43E2925C,	"interface",	0);
	set_cmt	(0X43E29269,	"this",	0);
	set_cmt	(0X43E2927B,	"index",	0);
	set_cmt	(0X43E29280,	"interface",	0);
	set_cmt	(0X43E2928F,	"this",	0);
	set_cmt	(0X43E292A6,	"propHash",	0);
	set_cmt	(0X43E292AB,	"classHash",	0);
	create_insn	(x=0X43E292BF);
	op_hex		(x,	1);
	create_insn	(x=0X43E292C4);
	op_stkvar	(x,	0);
	set_cmt	(0X43E292CA,	"a3",	0);
	set_cmt	(0X43E292D7,	"index",	0);
	set_cmt	(0X43E292DC,	"interface",	0);
	set_cmt	(0X43E292E9,	"this",	0);
	set_cmt	(0X43E292FB,	"index",	0);
	set_cmt	(0X43E29300,	"interface",	0);
	set_cmt	(0X43E2930D,	"this",	0);
	set_cmt	(0X43E29324,	"propHash",	0);
	set_cmt	(0X43E29329,	"classHash",	0);
	create_insn	(x=0X43E29338);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2934B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2938B);
	set_cmt	(0X43E2938E,	"index",	0);
	set_cmt	(0X43E29399,	"interface",	0);
	set_cmt	(0X43E293A6,	"this",	0);
	set_cmt	(0X43E293BD,	"propHash",	0);
	set_cmt	(0X43E293C2,	"classHash",	0);
	create_insn	(x=0X43E293E9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E293F3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2943F,	"index",	0);
	set_cmt	(0X43E29444,	"interface",	0);
	set_cmt	(0X43E29451,	"this",	0);
	create_insn	(x=0X43E2945D);
	op_hex		(x,	1);
	set_cmt	(0X43E29475,	"propHash",	0);
	set_cmt	(0X43E2947A,	"classHash",	0);
	create_insn	(x=0X43E29489);
	op_hex		(x,	1);
	set_cmt	(0X43E29498,	"cmd",	0);
	set_cmt	(0X43E2949E,	"a3",	0);
	set_cmt	(0X43E294BF,	"cmd",	0);
	create_insn	(x=0X43E294BF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E294CB);
	op_hex		(x,	1);
	create_insn	(x=0X43E294DC);
	op_hex		(x,	1);
	create_insn	(x=0X43E294E1);
	op_hex		(x,	1);
	create_insn	(x=0X43E294EE);
	op_hex		(x,	1);
	create_insn	(x=0X43E294F1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E29506);
	op_hex		(x,	1);
	create_insn	(x=0X43E29524);
	op_hex		(x,	1);
	create_insn	(x=0X43E29529);
	op_hex		(x,	1);
	create_insn	(x=0X43E29536);
	op_hex		(x,	1);
	create_insn	(x=0X43E29539);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E29559);
	op_hex		(x,	1);
	create_insn	(x=0X43E2955E);
	op_hex		(x,	1);
	create_insn	(x=0X43E2956B);
	op_hex		(x,	1);
	create_insn	(x=0X43E2956E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E295A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E295B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E295BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E295C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E295CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E295D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E295E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E295EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E295F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E295FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2962B);
	op_stkvar	(x,	1);
	set_cmt	(0X43E29631,	"cmd",	0);
	create_insn	(x=0X43E29631);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E29636);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2963C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E29665);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E29670);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2967F);
	op_stkvar	(x,	0);
	set_cmt	(0X43E296A2,	"angles",	0);
	create_insn	(x=0X43E296AF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E296C6);
	op_hex		(x,	1);
	create_insn	(x=0X43E296CB);
	op_hex		(x,	1);
	create_insn	(x=0X43E296D8);
	op_hex		(x,	1);
	create_insn	(x=0X43E296DB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E296F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E29700,	"index",	0);
	set_cmt	(0X43E29705,	"interface",	0);
	set_cmt	(0X43E29712,	"this",	0);
	set_cmt	(0X43E2971B,	"a5",	0);
	create_insn	(x=0X43E2972D);
	op_hex		(x,	1);
	create_insn	(x=0X43E29732);
	op_hex		(x,	1);
	create_insn	(x=0X43E2973F);
	op_hex		(x,	1);
	create_insn	(x=0X43E29742);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E29757);
	op_hex		(x,	1);
	create_insn	(x=0X43E2975C);
	op_hex		(x,	1);
	create_insn	(x=0X43E29788);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E29790);
	op_stkvar	(x,	1);
	set_cmt	(0X43E297A0,	"propHash",	0);
	set_cmt	(0X43E297A5,	"classHash",	0);
	set_cmt	(0X43E297C7,	"propHash",	0);
	set_cmt	(0X43E297CC,	"classHash",	0);
	create_insn	(0X43E297F0);
	set_cmt	(0X43E297F4,	"propHash",	0);
	set_cmt	(0X43E297F9,	"classHash",	0);
	set_cmt	(0X43E2981F,	"propHash",	0);
	set_cmt	(0X43E29824,	"classHash",	0);
	create_insn	(x=0X43E29847);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2985A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E29866);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E298C7,	"cmd",	0);
	create_insn	(x=0X43E298C7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E298D3);
	op_hex		(x,	1);
	set_cmt	(0X43E298DF,	"index",	0);
	set_cmt	(0X43E298E4,	"interface",	0);
	set_cmt	(0X43E298F1,	"this",	0);
	set_cmt	(0X43E298FD,	"a3",	0);
	set_cmt	(0X43E298FF,	"a2",	0);
	set_cmt	(0X43E29901,	"m_player",	0);
	create_insn	(0X43E29915);
	set_cmt	(0X43E2992D,	"index",	0);
	set_cmt	(0X43E29932,	"interface",	0);
	set_cmt	(0X43E2993F,	"this",	0);
	set_cmt	(0X43E2994B,	"player",	0);
	set_cmt	(0X43E29960,	"index",	0);
	set_cmt	(0X43E29965,	"interface",	0);
	set_cmt	(0X43E29972,	"this",	0);
	set_cmt	(0X43E2997E,	"player",	0);
	set_cmt	(0X43E29991,	"propHash",	0);
	set_cmt	(0X43E29996,	"classHash",	0);
	set_cmt	(0X43E299B6,	"switch 84 cases ",	0);
	create_insn	(x=0X43E299BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E299C3,	"switch jump",	0);
	create_insn	(x=0X43E299C3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E299CA,	"jumptable 43E299C3 cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-40,60,61,63,64",	1);
	create_insn	(0X43E299CA);
	set_cmt	(0X43E299CE,	"propHash",	0);
	set_cmt	(0X43E299D3,	"classHash",	0);
	set_cmt	(0X43E299E9,	"switch 64 cases ",	0);
	create_insn	(x=0X43E299F3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E299FA,	"switch jump",	0);
	create_insn	(x=0X43E299FA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E29A01,	"jumptable 43E299C3 default case, cases 5,6,12,15,18,20-22,31,37,41-59,62,65-84\njumptable 43E299FA cases 1-4,9,27,29,30,32,35,36,40,61,64",	1);
	create_insn	(0X43E29A01);
	set_name	(0X43E29A01,	"def_43E299C3");
	set_cmt	(0X43E29A07,	"index",	0);
	set_cmt	(0X43E29A0C,	"interface",	0);
	set_cmt	(0X43E29A19,	"this",	0);
	set_cmt	(0X43E29A25,	"player",	0);
	set_cmt	(0X43E29A37,	"propHash",	0);
	set_cmt	(0X43E29A3C,	"classHash",	0);
	set_cmt	(0X43E29A5C,	"switch 84 cases ",	0);
	create_insn	(x=0X43E29A62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E29A69,	"switch jump",	0);
	create_insn	(x=0X43E29A69);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E29A70,	"switch 19 cases ",	0);
	create_insn	(x=0X43E29A70);
	op_hex		(x,	1);
	create_insn	(x=0X43E29A7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E29A81,	"switch jump",	0);
	create_insn	(x=0X43E29A81);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E29A88,	"jumptable 43E29A69 default case, cases 1-40,43-58,60-84\njumptable 43E29A81 default case, cases 510,511,513,517,518,521",	1);
	create_insn	(0X43E29A88);
	set_name	(0X43E29A88,	"def_43E29A69");
	set_cmt	(0X43E29A8E,	"index",	0);
	set_cmt	(0X43E29A93,	"interface",	0);
	set_cmt	(0X43E29AA0,	"this",	0);
	set_cmt	(0X43E29AAC,	"player",	0);
	set_cmt	(0X43E29ABE,	"propHash",	0);
	set_cmt	(0X43E29AC3,	"classHash",	0);
	set_cmt	(0X43E29AD7,	"cmd",	0);
	create_insn	(x=0X43E29AD7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E29AE5);
	op_hex		(x,	1);
	set_cmt	(0X43E29AF4,	"index",	0);
	set_cmt	(0X43E29AF9,	"interface",	0);
	set_cmt	(0X43E29B06,	"this",	0);
	create_insn	(0X43E29B18);
	create_insn	(x=0X43E29B1F);
	op_hex		(x,	1);
	set_cmt	(0X43E29B2B,	"index",	0);
	set_cmt	(0X43E29B30,	"interface",	0);
	set_cmt	(0X43E29B3D,	"this",	0);
	set_cmt	(0X43E29B49,	"a3",	0);
	set_cmt	(0X43E29B4B,	"a2",	0);
	set_cmt	(0X43E29B4D,	"m_player",	0);
	set_cmt	(0X43E29B61,	"jumptable 43E299FA default case, cases 5-8,10-26,28,31,33,34,37-39,41-60,62,63\njumptable 43E29A69 cases 41,42,59\njumptable 43E29A81 cases 505-509,512,514-516,519,520,522,523",	1);
	create_insn	(0X43E29B61);
	set_name	(0X43E29B61,	"def_43E299FA");
	set_cmt	(0X43E29B91,	"index",	0);
	set_cmt	(0X43E29B96,	"interface",	0);
	set_cmt	(0X43E29BA3,	"this",	0);
	set_cmt	(0X43E29BB9,	"index",	0);
	set_cmt	(0X43E29BBE,	"interface",	0);
	set_cmt	(0X43E29BCB,	"this",	0);
	set_cmt	(0X43E29BD7,	"m_pPlayer",	0);
	create_insn	(0X43E29BF4);
	set_cmt	(0X43E29C04,	"index",	0);
	set_cmt	(0X43E29C09,	"interface",	0);
	set_cmt	(0X43E29C16,	"this",	0);
	set_cmt	(0X43E29C2C,	"index",	0);
	set_cmt	(0X43E29C31,	"interface",	0);
	set_cmt	(0X43E29C3E,	"this",	0);
	set_cmt	(0X43E29C4A,	"m_pPlayer",	0);
	create_insn	(0X43E29C67);
	create_insn	(0X43E29C83);
	create_insn	(x=0X43E29C9F);
	op_hex		(x,	1);
	create_insn	(x=0X43E29CA4);
	op_hex		(x,	1);
	create_insn	(x=0X43E29CB1);
	op_hex		(x,	1);
	create_insn	(x=0X43E29CB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E29CF2,	0X2);
	set_cmt	(0X43E29CF4,	"jump table for switch statement",	0);
	create_dword	(x=0X43E29CF4);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E29CF4,	"jpt_43E29036");
	set_cmt	(0X43E29D04,	"jump table for switch statement",	0);
	create_dword	(x=0X43E29D04);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E29D04,	"jpt_43E299C3");
	set_cmt	(0X43E29D10,	"indirect table for switch statement",	0);
	create_byte	(0X43E29D10);
	make_array	(0X43E29D10,	0X54);
	set_cmt	(0X43E29D64,	"jump table for switch statement",	0);
	create_dword	(x=0X43E29D64);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E29D64,	"jpt_43E299FA");
	set_cmt	(0X43E29D6C,	"indirect table for switch statement",	0);
	create_byte	(0X43E29D6C);
	make_array	(0X43E29D6C,	0X40);
	set_cmt	(0X43E29DAC,	"jump table for switch statement",	0);
	create_dword	(x=0X43E29DAC);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E29DAC,	"jpt_43E29A69");
	set_cmt	(0X43E29DB8,	"indirect table for switch statement",	0);
	create_byte	(0X43E29DB8);
	make_array	(0X43E29DB8,	0X54);
	set_cmt	(0X43E29E0C,	"jump table for switch statement",	0);
	create_dword	(x=0X43E29E0C);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E29E0C,	"jpt_43E29A81");
	set_cmt	(0X43E29E14,	"indirect table for switch statement",	0);
	create_byte	(0X43E29E14);
	make_array	(0X43E29E14,	0X13);
	make_array	(0X43E29E27,	0X9);
	create_insn	(0X43E29E30);
	make_array	(0X43E29E4B,	0X5);
	create_insn	(0X43E29E50);
	make_array	(0X43E29E5B,	0X5);
	create_insn	(0X43E29E60);
	create_insn	(x=0X43E29E68);
	op_hex		(x,	1);
	create_insn	(x=0X43E29E6C);
	op_hex		(x,	1);
	create_insn	(0X43E29E80);
	make_array	(0X43E29E88,	0X8);
	create_insn	(0X43E29E90);
	create_insn	(x=0X43E29E93);
	op_hex		(x,	1);
	create_insn	(x=0X43E29E96);
	op_hex		(x,	1);
	set_cmt	(0X43E29F1B,	"angles",	0);
	make_array	(0X43E29FC5,	0XB);
	create_insn	(0X43E29FD0);
	create_insn	(x=0X43E29FD3);
	op_hex		(x,	1);
	create_insn	(x=0X43E2A010);
	op_hex		(x,	1);
	set_cmt	(0X43E2A035,	"angles",	0);
	create_insn	(x=0X43E2A05F);
	op_hex		(x,	1);
	create_insn	(x=0X43E2A09B);
	op_hex		(x,	1);
	create_insn	(x=0X43E2A0D7);
	op_hex		(x,	1);
	create_insn	(0X43E2A0F3);
	set_cmt	(0X43E2A0F5,	"angles",	0);
	create_insn	(x=0X43E2A116);
	op_hex		(x,	1);
	create_insn	(x=0X43E2A152);
	op_hex		(x,	1);
	create_insn	(x=0X43E2A18E);
	op_hex		(x,	1);
	create_insn	(0X43E2A1DD);
	make_array	(0X43E2A255,	0XB);
	create_insn	(0X43E2A260);
	set_cmt	(0X43E2A274,	"index",	0);
	set_cmt	(0X43E2A279,	"interface",	0);
	set_cmt	(0X43E2A286,	"this",	0);
	create_insn	(x=0X43E2A29A);
	op_hex		(x,	1);
	set_cmt	(0X43E2A29F,	"propHash",	0);
	create_insn	(x=0X43E2A2A4);
	op_hex		(x,	1);
	set_cmt	(0X43E2A2A7,	"classHash",	0);
	create_insn	(0X43E2A2BE);
	create_insn	(0X43E2A2D7);
	create_insn	(x=0X43E2A2E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E2A2F3);
	op_hex		(x,	1);
	create_insn	(0X43E2A306);
	create_insn	(x=0X43E2A323);
	op_hex		(x,	1);
	create_insn	(0X43E2A345);
	make_array	(0X43E2A35E,	0X2);
	create_insn	(0X43E2A360);
	create_insn	(x=0X43E2A363);
	op_hex		(x,	1);
	create_insn	(x=0X43E2A366);
	op_hex		(x,	1);
	set_cmt	(0X43E2A369,	"index",	0);
	set_cmt	(0X43E2A378,	"interface",	0);
	set_cmt	(0X43E2A385,	"this",	0);
	create_insn	(x=0X43E2A399);
	op_hex		(x,	1);
	set_cmt	(0X43E2A39E,	"propHash",	0);
	create_insn	(x=0X43E2A3A3);
	op_hex		(x,	1);
	set_cmt	(0X43E2A3A6,	"classHash",	0);
	create_insn	(0X43E2A3BD);
	set_cmt	(0X43E2A3D3,	"index",	0);
	set_cmt	(0X43E2A3D8,	"interface",	0);
	set_cmt	(0X43E2A3E5,	"this",	0);
	create_insn	(x=0X43E2A3F9);
	op_hex		(x,	1);
	set_cmt	(0X43E2A3FE,	"propHash",	0);
	create_insn	(x=0X43E2A403);
	op_hex		(x,	1);
	set_cmt	(0X43E2A406,	"classHash",	0);
	create_insn	(0X43E2A41D);
	create_insn	(x=0X43E2A822);
	op_hex		(x,	1);
	create_insn	(x=0X43E2A82D);
	op_hex		(x,	1);
	create_insn	(0X43E2A967);
	make_array	(0X43E2A9B2,	0XE);
	create_insn	(0X43E2A9C0);
	set_cmt	(0X43E2A9C7,	"index",	0);
	set_cmt	(0X43E2A9DC,	"interface",	0);
	set_cmt	(0X43E2A9E9,	"this",	0);
	create_insn	(x=0X43E2AA06);
	op_hex		(x,	1);
	create_insn	(x=0X43E2AA0B);
	op_hex		(x,	1);
	create_insn	(x=0X43E2AA50);
	op_hex		(x,	1);
	set_cmt	(0X43E2AA8E,	"cmd",	0);
	create_insn	(x=0X43E2AAB6);
	op_hex		(x,	1);
	create_insn	(0X43E2AAD8);
	create_insn	(0X43E2AAEA);
	make_array	(0X43E2AAF2,	0XE);
	create_insn	(0X43E2AB00);
	create_insn	(x=0X43E2AB03);
	op_hex		(x,	1);
	create_insn	(x=0X43E2AB08);
	op_hex		(x,	1);
	create_insn	(x=0X43E2AB16);
	op_hex		(x,	1);
	create_insn	(0X43E2AB68);
	set_cmt	(0X43E2AB8F,	"index",	0);
	set_cmt	(0X43E2AB94,	"interface",	0);
	set_cmt	(0X43E2ABA1,	"this",	0);
	set_cmt	(0X43E2ABAD,	"player",	0);
	set_cmt	(0X43E2ABBE,	"index",	0);
	set_cmt	(0X43E2ABC3,	"interface",	0);
	set_cmt	(0X43E2ABD0,	"this",	0);
	set_cmt	(0X43E2ABDC,	"player",	0);
	set_cmt	(0X43E2ABEE,	"propHash",	0);
	set_cmt	(0X43E2ABF3,	"classHash",	0);
	set_cmt	(0X43E2AC0F,	"switch 84 cases ",	0);
	create_insn	(x=0X43E2AC15);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2AC1C,	"switch jump",	0);
	create_insn	(x=0X43E2AC1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E2AC23,	"jumptable 43E2AC1C default case, cases 1-42,49-83",	1);
	create_insn	(0X43E2AC23);
	set_name	(0X43E2AC23,	"def_43E2AC1C");
	create_insn	(x=0X43E2AC26);
	op_hex		(x,	1);
	create_insn	(x=0X43E2AC2D);
	op_hex		(x,	1);
	set_cmt	(0X43E2AC34,	"jumptable 43E2AC1C cases 43-48,84",	1);
	set_cmt	(0X43E2AC67,	"index",	0);
	set_cmt	(0X43E2AC6C,	"interface",	0);
	set_cmt	(0X43E2AC79,	"this",	0);
	create_insn	(x=0X43E2AC8D);
	op_hex		(x,	1);
	set_cmt	(0X43E2AC92,	"propHash",	0);
	create_insn	(x=0X43E2AC97);
	op_hex		(x,	1);
	set_cmt	(0X43E2AC9A,	"classHash",	0);
	create_insn	(0X43E2ACB1);
	create_insn	(0X43E2ACCA);
	create_insn	(x=0X43E2ACDE);
	op_hex		(x,	1);
	create_insn	(x=0X43E2ACEB);
	op_hex		(x,	1);
	create_insn	(0X43E2ACFE);
	create_insn	(x=0X43E2AD1D);
	op_hex		(x,	1);
	create_insn	(0X43E2AD35);
	set_cmt	(0X43E2ADCF,	"angles",	0);
	make_array	(0X43E2AE7E,	0X2);
	set_cmt	(0X43E2AE80,	"jump table for switch statement",	0);
	create_dword	(x=0X43E2AE80);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E2AE80,	"jpt_43E2AC1C");
	set_cmt	(0X43E2AE8C,	"indirect table for switch statement",	0);
	create_byte	(0X43E2AE8C);
	make_array	(0X43E2AE8C,	0X54);
	create_insn	(0X43E2AEE0);
	make_array	(0X43E2AEE1,	0XF);
	create_insn	(x=0X43E2AEF0);
	op_hex		(x,	1);
	make_array	(0X43E2AEF4,	0XC);
	create_insn	(0X43E2AF00);
	create_insn	(x=0X43E2AF06);
	op_hex		(x,	1);
	create_insn	(0X43E2AF74);
	create_insn	(0X43E2AFB4);
	create_insn	(0X43E2AFFC);
	create_insn	(x=0X43E2B02A);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B035);
	op_hex		(x,	1);
	make_array	(0X43E2B045,	0XB);
	create_insn	(0X43E2B050);
	set_name	(0X43E2B050,	"OneTap::Features::HooksManager::Install");
	create_insn	(x=0X43E2B053);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B05B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B06D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B074);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B078);
	op_hex		(x,	1);
	set_cmt	(0X43E2B07B,	"hash",	0);
	create_insn	(0X43E2B09D);
	create_insn	(0X43E2B0AA);
	create_insn	(x=0X43E2B0B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B0B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B0BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B0C6);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2B0D0,	"num",	0);
	set_cmt	(0X43E2B0D2,	"value",	0);
	set_cmt	(0X43E2B0D4,	"pointer",	0);
	create_insn	(x=0X43E2B0DD);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B0EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B0F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B0FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B0FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B106);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B10C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B113);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B116);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B119);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B11F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B124);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B12A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B138);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B13D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B145);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B154);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B158);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B15F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B163);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B16B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B16E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B173);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B176);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B17E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B186);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B18E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B194);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B197);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B19A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B19F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B1A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B1A5);
	op_stkvar	(x,	0);
	create_insn	(0X43E2B1AD);
	create_insn	(x=0X43E2B1AF);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B1B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B1C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B1CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B1DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B1E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B1EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B1F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B1F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B1FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B1FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B207);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B20F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B214);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B21E);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B226);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B22C);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B239);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B23E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B24B);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B251);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B256);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B25C);
	op_stkvar	(x,	1);
	create_insn	(0X43E2B276);
	create_insn	(x=0X43E2B278);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B290);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B293);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B296);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B299);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B29C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B2A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B2A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B2A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B2AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B2AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B2BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B2CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B2DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B2E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B2EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B2F1);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B2F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B2FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B2FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B313);
	op_stkvar	(x,	1);
	create_insn	(0X43E2B353);
	create_insn	(0X43E2B3B9);
	make_array	(0X43E2B3C2,	0XE);
	create_insn	(0X43E2B3D0);
	create_insn	(0X43E2B3FE);
	make_array	(0X43E2B402,	0XE);
	create_insn	(0X43E2B410);
	set_name	(0X43E2B410,	"nullsub_2");
	make_array	(0X43E2B413,	0XD);
	create_insn	(0X43E2B420);
	set_cmt	(0X43E2B423,	"_DWORD",	0);
	create_insn	(x=0X43E2B44B);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B459);
	op_hex		(x,	1);
	set_cmt	(0X43E2B4F0,	"index",	0);
	set_cmt	(0X43E2B4F5,	"interface",	0);
	set_cmt	(0X43E2B502,	"this",	0);
	set_cmt	(0X43E2B51A,	"propHash",	0);
	set_cmt	(0X43E2B51F,	"classHash",	0);
	set_cmt	(0X43E2B531,	"interface",	0);
	set_cmt	(0X43E2B537,	"index",	0);
	create_insn	(x=0X43E2B551);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B554);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B57A);
	op_hex		(x,	1);
	create_insn	(0X43E2B5BB);
	make_array	(0X43E2B5C3,	0XD);
	create_insn	(0X43E2B5D0);
	set_cmt	(0X43E2B5D3,	"_DWORD",	0);
	create_insn	(x=0X43E2B5FB);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B609);
	op_hex		(x,	1);
	set_cmt	(0X43E2B6A0,	"index",	0);
	set_cmt	(0X43E2B6A5,	"interface",	0);
	set_cmt	(0X43E2B6B2,	"this",	0);
	set_cmt	(0X43E2B6CA,	"propHash",	0);
	set_cmt	(0X43E2B6CF,	"classHash",	0);
	set_cmt	(0X43E2B6E1,	"interface",	0);
	set_cmt	(0X43E2B6E7,	"index",	0);
	create_insn	(x=0X43E2B70F);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B712);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B73C);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B75B);
	op_hex		(x,	1);
	create_insn	(0X43E2B78B);
	make_array	(0X43E2B793,	0XD);
	create_insn	(0X43E2B7A0);
	create_insn	(x=0X43E2B7A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B7C7);
	op_hex		(x,	1);
	set_cmt	(0X43E2B7E7,	"m_player",	0);
	set_cmt	(0X43E2B7F2,	"interface",	0);
	set_cmt	(0X43E2B7F8,	"index",	0);
	set_cmt	(0X43E2B814,	"_DWORD",	0);
	create_insn	(0X43E2B814);
	create_insn	(0X43E2B82A);
	set_cmt	(0X43E2B82E,	"_DWORD",	0);
	set_cmt	(0X43E2B836,	"_DWORD",	0);
	set_cmt	(0X43E2B838,	"_DWORD",	0);
	set_cmt	(0X43E2B88A,	"interface",	0);
	set_cmt	(0X43E2B890,	"index",	0);
	set_cmt	(0X43E2B89F,	"m_player",	0);
	create_insn	(x=0X43E2B8AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2B8B5);
	create_insn	(x=0X43E2B8B7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2B8BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2B8F3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E2B964,	0XC);
	create_insn	(0X43E2B970);
	make_array	(0X43E2B978,	0X8);
	create_insn	(0X43E2B980);
	set_name	(0X43E2B980,	"OneTap::Features::Hooks::DrawModelExecute");
	create_insn	(x=0X43E2B983);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B986);
	op_hex		(x,	1);
	create_insn	(x=0X43E2B989);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B990);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B994);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B999);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B99D);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2B9A1,	"a7",	0);
	create_insn	(x=0X43E2B9A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B9E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2B9ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B9F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2B9FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BA05);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BA0C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BA10);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BA18);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BA23);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BA27);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BA2B);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BA2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BA33);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BA41);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BA46);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BA52);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2BA5A,	"_DWORD",	0);
	set_cmt	(0X43E2BA5B,	"_DWORD",	0);
	create_insn	(x=0X43E2BA5E);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BA61);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BA69);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BA6E);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BA73);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BA77);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BA7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BA97);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2BAA7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2BAD7,	"a6",	0);
	set_cmt	(0X43E2BAD9,	"a5",	0);
	create_insn	(x=0X43E2BADB);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BAEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BAEE);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2BAF2,	"_DWORD",	0);
	create_insn	(x=0X43E2BAF2);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2BAF6,	"_DWORD",	0);
	set_cmt	(0X43E2BAF7,	"_DWORD",	0);
	set_cmt	(0X43E2BAF8,	"_DWORD",	0);
	create_insn	(x=0X43E2BAF8);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2BAFB,	"_DWORD",	0);
	create_insn	(x=0X43E2BAFB);
	op_stkvar	(x,	0);
	create_insn	(0X43E2BB13);
	create_insn	(x=0X43E2BB2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BB38);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BB3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2BB50);
	set_cmt	(0X43E2BB5F,	"this",	0);
	set_cmt	(0X43E2BB77,	"m_pPlayer",	0);
	create_insn	(x=0X43E2BB89);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BB8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BB95);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BB9D);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BBA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BBA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BBAF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BBB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BBBC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BBC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BBD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BBD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BBD8);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BBDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BBE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BBEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BBF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BBFA);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2BC02,	"_DWORD",	0);
	set_cmt	(0X43E2BC03,	"_DWORD",	0);
	create_insn	(x=0X43E2BC0B);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BC0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BC17);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BC1C);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BC21);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BC25);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BC2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BC37);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BC3B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BC42);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BC45);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BC50);
	op_hex		(x,	1);
	create_insn	(0X43E2BC68);
	create_insn	(x=0X43E2BC7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BC82);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BC8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BC91);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BC94);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BC99);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BCA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BCA9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BCB5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BCB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BCBD);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BCC0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BCC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BCD3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BCD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BCDF);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2BCE7,	"_DWORD",	0);
	set_cmt	(0X43E2BCE8,	"_DWORD",	0);
	create_insn	(x=0X43E2BCEB);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BCEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BCF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BCFC);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BD01);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BD0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BD18);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BD1C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BD24);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BD29);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BD31);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BD39);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BD45);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BD49);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BD4D);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BD50);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BD55);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BD63);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BD68);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BD6F);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2BD77,	"_DWORD",	0);
	set_cmt	(0X43E2BD78,	"_DWORD",	0);
	create_insn	(x=0X43E2BD7B);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BD7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BDB1);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BDB5);
	op_hex		(x,	1);
	set_cmt	(0X43E2BDCD,	"index",	0);
	set_cmt	(0X43E2BDD2,	"interface",	0);
	set_cmt	(0X43E2BDDF,	"this",	0);
	set_cmt	(0X43E2BDF6,	"propHash",	0);
	set_cmt	(0X43E2BDFB,	"classHash",	0);
	create_insn	(x=0X43E2BE2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BE2F);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BE72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2BE89);
	create_insn	(x=0X43E2BE8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BE90);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BE98);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BEA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BEA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BEAC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BEB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BEBC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BED8);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BEDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BEE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BEEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2BEF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2BEFA);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2BF02,	"_DWORD",	0);
	set_cmt	(0X43E2BF03,	"_DWORD",	0);
	create_insn	(x=0X43E2BF0B);
	op_hex		(x,	1);
	create_insn	(x=0X43E2BF0E);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2BF34,	"index",	0);
	set_cmt	(0X43E2BF39,	"interface",	0);
	set_cmt	(0X43E2BF46,	"this",	0);
	set_cmt	(0X43E2BF60,	"index",	0);
	set_cmt	(0X43E2BF65,	"interface",	0);
	set_cmt	(0X43E2BF72,	"this",	0);
	set_cmt	(0X43E2BF7E,	"player",	0);
	set_cmt	(0X43E2BF93,	"index",	0);
	set_cmt	(0X43E2BF98,	"interface",	0);
	set_cmt	(0X43E2BFA5,	"this",	0);
	set_cmt	(0X43E2BFB1,	"player",	0);
	set_cmt	(0X43E2BFC3,	"propHash",	0);
	set_cmt	(0X43E2BFC8,	"classHash",	0);
	set_cmt	(0X43E2BFED,	"index",	0);
	set_cmt	(0X43E2BFF2,	"interface",	0);
	set_cmt	(0X43E2BFFF,	"this",	0);
	set_cmt	(0X43E2C016,	"propHash",	0);
	set_cmt	(0X43E2C01B,	"classHash",	0);
	set_cmt	(0X43E2C03C,	"a6",	0);
	set_cmt	(0X43E2C046,	"a5",	0);
	create_insn	(x=0X43E2C048);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C058);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C05B);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2C05F,	"_DWORD",	0);
	create_insn	(x=0X43E2C05F);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2C063,	"_DWORD",	0);
	set_cmt	(0X43E2C064,	"_DWORD",	0);
	set_cmt	(0X43E2C065,	"_DWORD",	0);
	create_insn	(x=0X43E2C065);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C068,	"_DWORD",	0);
	create_insn	(x=0X43E2C068);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C080,	"_DWORD",	0);
	create_insn	(0X43E2C080);
	set_cmt	(0X43E2C081,	"_DWORD",	0);
	set_cmt	(0X43E2C082,	"_DWORD",	0);
	create_insn	(x=0X43E2C082);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C085,	"_DWORD",	0);
	set_cmt	(0X43E2C087,	"_DWORD",	0);
	make_array	(0X43E2C097,	0X9);
	create_insn	(0X43E2C0A0);
	create_insn	(x=0X43E2C0A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C0A6);
	op_hex		(x,	1);
	set_cmt	(0X43E2C0A9,	"a7",	0);
	set_cmt	(0X43E2C0AA,	"a7",	0);
	create_insn	(x=0X43E2C0AD);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C0B1,	"interface",	0);
	set_cmt	(0X43E2C0B7,	"index",	0);
	create_insn	(x=0X43E2C0BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C0C7);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2C0CA,	"m_player",	0);
	create_insn	(x=0X43E2C0CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C0E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C0E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C110);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2C118);
	create_insn	(x=0X43E2C131);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2C139);
	create_insn	(x=0X43E2C157);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C15E);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C172,	"a6",	0);
	set_cmt	(0X43E2C174,	"a5",	0);
	create_insn	(x=0X43E2C174);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C178);
	op_hex		(x,	1);
	set_cmt	(0X43E2C188,	"_DWORD",	0);
	create_insn	(x=0X43E2C188);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2C18E,	"_DWORD",	0);
	set_cmt	(0X43E2C18F,	"_DWORD",	0);
	create_insn	(x=0X43E2C18F);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C192,	"_DWORD",	0);
	create_insn	(x=0X43E2C192);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C195,	"a4",	0);
	create_insn	(x=0X43E2C195);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C19E,	"a7",	0);
	create_insn	(x=0X43E2C1A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C1A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C1AB);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2C1CA,	"propHash",	0);
	set_cmt	(0X43E2C1CF,	"classHash",	0);
	create_insn	(x=0X43E2C216);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C21E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C225);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C229);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C22F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C236);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C23A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C23E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2C243);
	op_stkvar	(x,	1);
	create_insn	(0X43E2C249);
	create_insn	(x=0X43E2C24B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2C250);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2C25F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C262);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C26A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C279);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2C27E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2C290,	"a6",	0);
	create_insn	(x=0X43E2C292);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2C298,	"a5",	0);
	create_insn	(x=0X43E2C29A);
	op_hex		(x,	1);
	set_cmt	(0X43E2C2AA,	"_DWORD",	0);
	create_insn	(x=0X43E2C2AA);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2C2B0,	"_DWORD",	0);
	set_cmt	(0X43E2C2B1,	"_DWORD",	0);
	create_insn	(x=0X43E2C2B1);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C2B4,	"a4",	0);
	create_insn	(x=0X43E2C2B4);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C2B7,	"a3",	0);
	create_insn	(x=0X43E2C2B7);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C2D5,	"a6",	0);
	set_cmt	(0X43E2C2D7,	"a5",	0);
	create_insn	(x=0X43E2C2D9);
	op_hex		(x,	1);
	set_cmt	(0X43E2C2F6,	"_DWORD",	0);
	set_cmt	(0X43E2C2F7,	"_DWORD",	0);
	create_insn	(x=0X43E2C2F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C2FA);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2C300,	"_DWORD",	0);
	create_insn	(x=0X43E2C300);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C303,	"_DWORD",	0);
	set_cmt	(0X43E2C305,	"_DWORD",	0);
	create_insn	(x=0X43E2C305);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C31A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C358);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2C363);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2C36B,	"index",	0);
	set_cmt	(0X43E2C370,	"interface",	0);
	create_insn	(x=0X43E2C37A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C385);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C390);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C39D,	"this",	0);
	set_cmt	(0X43E2C3A6,	"a7",	0);
	set_cmt	(0X43E2C3B4,	"propHash",	0);
	set_cmt	(0X43E2C3B9,	"classHash",	0);
	set_cmt	(0X43E2C3CD,	"index",	0);
	set_cmt	(0X43E2C3D2,	"interface",	0);
	create_insn	(x=0X43E2C3D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C3E4);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C403,	"this",	0);
	set_cmt	(0X43E2C40C,	"a7",	0);
	create_insn	(x=0X43E2C41F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C425);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C433);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C455);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C45B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C461);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C467);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C475);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C481);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C4AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C4B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2C4BE);
	create_insn	(x=0X43E2C4C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C4D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C4EE);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2C4F4,	"a6",	0);
	set_cmt	(0X43E2C4F6,	"a5",	0);
	create_insn	(x=0X43E2C4F8);
	op_hex		(x,	1);
	set_cmt	(0X43E2C508,	"_DWORD",	0);
	set_cmt	(0X43E2C509,	"_DWORD",	0);
	create_insn	(x=0X43E2C509);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C50C);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2C512,	"_DWORD",	0);
	create_insn	(x=0X43E2C512);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C515,	"_DWORD",	0);
	set_cmt	(0X43E2C517,	"_DWORD",	0);
	create_insn	(x=0X43E2C517);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2C528);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2C553);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2C559,	"a6",	0);
	set_cmt	(0X43E2C55B,	"a5",	0);
	create_insn	(x=0X43E2C55D);
	op_hex		(x,	1);
	set_cmt	(0X43E2C56D,	"_DWORD",	0);
	create_insn	(x=0X43E2C56D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E2C572,	"_DWORD",	0);
	create_insn	(x=0X43E2C572);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C577,	"_DWORD",	0);
	set_cmt	(0X43E2C579,	"_DWORD",	0);
	create_insn	(x=0X43E2C579);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2C57C,	"_DWORD",	0);
	create_insn	(x=0X43E2C57C);
	op_stkvar	(x,	0);
	make_array	(0X43E2C591,	0XF);
	create_insn	(0X43E2C5A0);
	create_insn	(x=0X43E2C5A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C5A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C61B);
	op_hex		(x,	1);
	set_cmt	(0X43E2C65C,	"_DWORD",	0);
	set_cmt	(0X43E2C65D,	"_DWORD",	0);
	create_insn	(x=0X43E2C664);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C6AD);
	op_hex		(x,	1);
	set_cmt	(0X43E2C6DC,	"_DWORD",	0);
	set_cmt	(0X43E2C6DD,	"_DWORD",	0);
	create_insn	(x=0X43E2C6E4);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C728);
	op_hex		(x,	1);
	set_cmt	(0X43E2C751,	"_DWORD",	0);
	set_cmt	(0X43E2C752,	"_DWORD",	0);
	create_insn	(x=0X43E2C759);
	op_hex		(x,	1);
	create_insn	(0X43E2C767);
	create_insn	(x=0X43E2C770);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C774);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C788);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C78C);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C7A0);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C822);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C88B);
	op_hex		(x,	1);
	set_cmt	(0X43E2C8BE,	"_DWORD",	0);
	set_cmt	(0X43E2C8BF,	"_DWORD",	0);
	create_insn	(x=0X43E2C8C2);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C8CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C92B);
	op_hex		(x,	1);
	set_cmt	(0X43E2C95E,	"_DWORD",	0);
	set_cmt	(0X43E2C95F,	"_DWORD",	0);
	create_insn	(x=0X43E2C962);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C977);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C97B);
	op_hex		(x,	1);
	create_insn	(x=0X43E2C992);
	op_hex		(x,	1);
	create_insn	(0X43E2C9CC);
	create_insn	(x=0X43E2CA4B);
	op_hex		(x,	1);
	set_cmt	(0X43E2CA7E,	"_DWORD",	0);
	set_cmt	(0X43E2CA7F,	"_DWORD",	0);
	create_insn	(x=0X43E2CA82);
	op_hex		(x,	1);
	create_insn	(x=0X43E2CAD1);
	op_hex		(x,	1);
	create_insn	(x=0X43E2CB3B);
	op_hex		(x,	1);
	set_cmt	(0X43E2CB74,	"_DWORD",	0);
	set_cmt	(0X43E2CB75,	"_DWORD",	0);
	create_insn	(x=0X43E2CB78);
	op_hex		(x,	1);
	create_insn	(x=0X43E2CB83);
	op_hex		(x,	1);
	create_insn	(x=0X43E2CBCB);
	op_hex		(x,	1);
	set_cmt	(0X43E2CBFE,	"_DWORD",	0);
	set_cmt	(0X43E2CBFF,	"_DWORD",	0);
	create_insn	(x=0X43E2CC02);
	op_hex		(x,	1);
	create_insn	(x=0X43E2CC17);
	op_hex		(x,	1);
	create_insn	(x=0X43E2CC1B);
	op_hex		(x,	1);
	create_insn	(x=0X43E2CC32);
	op_hex		(x,	1);
	create_insn	(0X43E2CC73);
	set_cmt	(0X43E2CC86,	"interface",	0);
	set_cmt	(0X43E2CC8C,	"index",	0);
	create_insn	(x=0X43E2CCA7);
	op_hex		(x,	1);
	create_insn	(x=0X43E2CCFE);
	op_hex		(x,	1);
	set_cmt	(0X43E2CD31,	"_DWORD",	0);
	set_cmt	(0X43E2CD32,	"_DWORD",	0);
	create_insn	(x=0X43E2CD37);
	op_hex		(x,	1);
	set_cmt	(0X43E2CD7E,	"_DWORD",	0);
	set_cmt	(0X43E2CD86,	"_DWORD",	0);
	set_cmt	(0X43E2CD89,	"_DWORD",	0);
	set_cmt	(0X43E2CD8E,	"_DWORD",	0);
	set_cmt	(0X43E2CD93,	"_DWORD",	0);
	set_cmt	(0X43E2CD9B,	"_DWORD",	0);
	set_cmt	(0X43E2CD9E,	"_DWORD",	0);
	set_cmt	(0X43E2CDA2,	"_DWORD",	0);
	set_cmt	(0X43E2CDA5,	"_DWORD",	0);
	set_cmt	(0X43E2CDA8,	"_DWORD",	0);
	set_cmt	(0X43E2CDAB,	"_DWORD",	0);
	set_cmt	(0X43E2CDAE,	"_DWORD",	0);
	create_insn	(x=0X43E2CDB1);
	op_hex		(x,	1);
	set_cmt	(0X43E2CDB4,	"_DWORD",	0);
	set_cmt	(0X43E2CDC0,	"_DWORD",	0);
	set_cmt	(0X43E2CDC5,	"_DWORD",	0);
	set_cmt	(0X43E2CDC6,	"_DWORD",	0);
	set_cmt	(0X43E2CDC9,	"_DWORD",	0);
	set_cmt	(0X43E2CDCC,	"_DWORD",	0);
	set_cmt	(0X43E2CDCF,	"_DWORD",	0);
	set_cmt	(0X43E2CDD2,	"_DWORD",	0);
	make_array	(0X43E2CDE3,	0XD);
	create_insn	(0X43E2CDF0);
	set_cmt	(0X43E2CDF4,	"interface",	0);
	set_cmt	(0X43E2CDFA,	"index",	0);
	set_cmt	(0X43E2CE0A,	"interface",	0);
	set_cmt	(0X43E2CE10,	"index",	0);
	set_cmt	(0X43E2CE23,	"this",	0);
	create_insn	(x=0X43E2CE44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2CE50,	"this",	0);
	make_array	(0X43E2CE8D,	0X3);
	create_insn	(0X43E2CE90);
	create_insn	(x=0X43E2CE93);
	op_hex		(x,	1);
	create_insn	(x=0X43E2CE96);
	op_hex		(x,	1);
	create_insn	(x=0X43E2CE99);
	op_hex		(x,	1);
	create_insn	(x=0X43E2CEA6);
	op_hex		(x,	1);
	set_cmt	(0X43E2CECD,	"interface",	0);
	set_cmt	(0X43E2CED0,	"index",	0);
	create_insn	(0X43E2CEE6);
	set_cmt	(0X43E2CEFA,	"propHash",	0);
	set_cmt	(0X43E2CEFF,	"classHash",	0);
	create_insn	(0X43E2CF36);
	create_insn	(x=0X43E2CF3B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2CF4E);
	create_insn	(x=0X43E2CFC7);
	op_hex		(x,	1);
	set_cmt	(0X43E2CFE9,	"_DWORD",	0);
	set_cmt	(0X43E2CFEA,	"_DWORD",	0);
	create_insn	(x=0X43E2CFED);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D037);
	op_hex		(x,	1);
	set_cmt	(0X43E2D056,	"_DWORD",	0);
	set_cmt	(0X43E2D057,	"_DWORD",	0);
	create_insn	(x=0X43E2D05A);
	op_hex		(x,	1);
	create_insn	(0X43E2D09F);
	create_insn	(x=0X43E2D0A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D0AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D0BB);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D0BF);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D107);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D134);
	op_hex		(x,	1);
	create_insn	(0X43E2D151);
	create_insn	(x=0X43E2D187);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D1AE);
	op_hex		(x,	1);
	create_insn	(0X43E2D1CB);
	create_insn	(x=0X43E2D1FC);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D223);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D240);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D277);
	op_hex		(x,	1);
	set_cmt	(0X43E2D29C,	"_DWORD",	0);
	set_cmt	(0X43E2D29D,	"_DWORD",	0);
	create_insn	(x=0X43E2D2A0);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D2A7);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D2D7);
	op_hex		(x,	1);
	set_cmt	(0X43E2D2F6,	"_DWORD",	0);
	set_cmt	(0X43E2D2F7,	"_DWORD",	0);
	create_insn	(x=0X43E2D2FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D30C);
	op_hex		(x,	1);
	create_insn	(0X43E2D32F);
	create_insn	(x=0X43E2D367);
	op_hex		(x,	1);
	set_cmt	(0X43E2D386,	"_DWORD",	0);
	set_cmt	(0X43E2D387,	"_DWORD",	0);
	create_insn	(x=0X43E2D38A);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D3A9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2D3C1);
	set_cmt	(0X43E2D3C4,	"index",	0);
	set_cmt	(0X43E2D3C9,	"interface",	0);
	set_cmt	(0X43E2D3DE,	"index",	0);
	set_cmt	(0X43E2D3E3,	"interface",	0);
	set_cmt	(0X43E2D3F0,	"switch 87 cases ",	0);
	create_insn	(x=0X43E2D3F0);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D3F3);
	create_insn	(x=0X43E2D3FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2D403,	"switch jump",	0);
	create_insn	(x=0X43E2D403);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E2D40A,	"jumptable 43E2D403 case 128",	1);
	create_insn	(0X43E2D40A);
	set_cmt	(0X43E2D41B,	"jumptable 43E2D403 case 42",	1);
	create_insn	(0X43E2D41B);
	create_insn	(x=0X43E2D41E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2D432,	"jumptable 43E2D403 case 97",	1);
	create_insn	(0X43E2D432);
	create_insn	(x=0X43E2D435);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2D449,	"jumptable 43E2D403 case 78",	1);
	create_insn	(0X43E2D449);
	set_cmt	(0X43E2D463,	"propHash",	0);
	set_cmt	(0X43E2D468,	"classHash",	0);
	set_cmt	(0X43E2D47D,	"jumptable 43E2D403 default case, cases 43-77,79-96,98-127",	1);
	set_name	(0X43E2D47D,	"def_43E2D403");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_6(void) {
        auto x;
#define id x

	make_array	(0X43E2D486,	0X2);
	set_cmt	(0X43E2D488,	"jump table for switch statement",	0);
	create_dword	(x=0X43E2D488);
	make_array	(x,	0X5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E2D488,	"jpt_43E2D403");
	set_cmt	(0X43E2D49C,	"indirect table for switch statement",	0);
	create_byte	(0X43E2D49C);
	make_array	(0X43E2D49C,	0X57);
	make_array	(0X43E2D4F3,	0XD);
	create_insn	(0X43E2D500);
	create_insn	(x=0X43E2D503);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D506);
	op_hex		(x,	1);
	set_cmt	(0X43E2D51D,	"m_pPlayer",	0);
	create_insn	(x=0X43E2D53A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D546);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2D54C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D553);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D55D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D567);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D56E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D578);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D582);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D58C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D596);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D5A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D5AF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2D5BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2D5C9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D5CF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D5D9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D5E3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D5EA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D5F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D5FE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D608);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D612);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D61F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D625);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D62B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E2D64C);
	create_insn	(x=0X43E2D64E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D658);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2D660);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D66B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E2D67B,	"propHash",	0);
	set_cmt	(0X43E2D680,	"classHash",	0);
	create_insn	(x=0X43E2D68A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2D6A3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D6B8);
	op_hex		(x,	1);
	create_insn	(0X43E2D6C1);
	create_insn	(x=0X43E2D6CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E2D6E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D6F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D6FD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E2D70D,	"propHash",	0);
	set_cmt	(0X43E2D712,	"classHash",	0);
	create_insn	(x=0X43E2D72E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D738);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D746);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D74C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D753);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2D759);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D764);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D771);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2D77D,	"propHash",	0);
	set_cmt	(0X43E2D782,	"classHash",	0);
	set_cmt	(0X43E2D791,	"srcAngle",	0);
	create_insn	(x=0X43E2D7B5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D7C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2D7D7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D7DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2D7E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2D822);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2D837);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D83F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2D85A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2D86E,	"propHash",	0);
	set_cmt	(0X43E2D873,	"classHash",	0);
	set_cmt	(0X43E2D8B2,	"propHash",	0);
	set_cmt	(0X43E2D8B7,	"classHash",	0);
	set_cmt	(0X43E2D8F5,	"propHash",	0);
	set_cmt	(0X43E2D8FA,	"classHash",	0);
	create_insn	(x=0X43E2D90D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2D934);
	op_hex		(x,	1);
	create_insn	(0X43E2D93D);
	create_insn	(x=0X43E2D956);
	op_hex		(x,	1);
	set_cmt	(0X43E2D95B,	"propHash",	0);
	create_insn	(x=0X43E2D960);
	op_hex		(x,	1);
	set_cmt	(0X43E2D963,	"classHash",	0);
	create_insn	(0X43E2D983);
	create_insn	(x=0X43E2D99C);
	op_hex		(x,	1);
	set_cmt	(0X43E2D9A1,	"propHash",	0);
	create_insn	(x=0X43E2D9A6);
	op_hex		(x,	1);
	set_cmt	(0X43E2D9A9,	"classHash",	0);
	set_cmt	(0X43E2D9DD,	"propHash",	0);
	set_cmt	(0X43E2D9E2,	"classHash",	0);
	set_cmt	(0X43E2DA03,	"propHash",	0);
	set_cmt	(0X43E2DA08,	"classHash",	0);
	create_insn	(x=0X43E2DA21);
	op_hex		(x,	1);
	create_insn	(x=0X43E2DA2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2DA32);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2DA49);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2DA5C,	"propHash",	0);
	set_cmt	(0X43E2DA61,	"classHash",	0);
	create_insn	(x=0X43E2DA7D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2DA83);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2DA89);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2DA9B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2DADD);
	op_hex		(x,	1);
	create_insn	(0X43E2DAFF);
	create_insn	(x=0X43E2DB03);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2DB09);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2DB0F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2DB17);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2DB6D);
	create_insn	(x=0X43E2DBA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2DBA7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E2DC07,	"propHash",	0);
	set_cmt	(0X43E2DC0C,	"classHash",	0);
	create_insn	(x=0X43E2DCB4);
	op_hex		(x,	1);
	create_insn	(x=0X43E2DCF2);
	op_hex		(x,	1);
	create_insn	(x=0X43E2DD06);
	op_hex		(x,	1);
	create_insn	(x=0X43E2DD1A);
	op_hex		(x,	1);
	set_cmt	(0X43E2DD3B,	"player",	0);
	set_cmt	(0X43E2DD58,	"propHash",	0);
	set_cmt	(0X43E2DD5D,	"classHash",	0);
	set_cmt	(0X43E2DD7D,	"switch 84 cases ",	0);
	create_insn	(x=0X43E2DD83);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2DD8A,	"switch jump",	0);
	create_insn	(x=0X43E2DD8A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E2DD91);
	set_cmt	(0X43E2DDA1,	"jumptable 43E2DD8A cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-40,60,61,63,64",	1);
	create_insn	(0X43E2DDA1);
	set_cmt	(0X43E2DDAA,	"propHash",	0);
	set_cmt	(0X43E2DDAF,	"classHash",	0);
	set_cmt	(0X43E2DDE1,	"jumptable 43E2DD8A default case, cases 5,6,12,15,18,20-22,31,37,41-59,62,65-84",	1);
	set_name	(0X43E2DDE1,	"def_43E2DD8A");
	create_insn	(0X43E2DE0A);
	create_insn	(x=0X43E2DECD);
	op_hex		(x,	1);
	create_insn	(x=0X43E2DED3);
	op_hex		(x,	1);
	create_insn	(x=0X43E2DF0C);
	op_hex		(x,	1);
	create_insn	(x=0X43E2DF9B);
	op_hex		(x,	1);
	create_insn	(0X43E2DF9F);
	create_insn	(x=0X43E2DFA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2DFE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2DFF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E2E01B);
	create_insn	(x=0X43E2E021);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2E06B);
	create_insn	(x=0X43E2E070);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2E07F);
	op_hex		(x,	1);
	create_insn	(0X43E2E0E1);
	set_cmt	(0X43E2E107,	"propHash",	0);
	set_cmt	(0X43E2E10C,	"classHash",	0);
	create_insn	(x=0X43E2E12E);
	op_hex		(x,	1);
	create_insn	(0X43E2E151);
	create_insn	(x=0X43E2E15D);
	op_hex		(x,	1);
	create_insn	(x=0X43E2E16E);
	op_hex		(x,	1);
	create_insn	(x=0X43E2E17F);
	op_hex		(x,	1);
	set_cmt	(0X43E2E1B7,	"propHash",	0);
	set_cmt	(0X43E2E1BC,	"classHash",	0);
	create_insn	(0X43E2E2B1);
	create_insn	(x=0X43E2E327);
	op_hex		(x,	1);
	create_insn	(0X43E2E339);
	set_cmt	(0X43E2E363,	"player",	0);
	set_cmt	(0X43E2E385,	"propHash",	0);
	set_cmt	(0X43E2E38A,	"classHash",	0);
	set_cmt	(0X43E2E3AA,	"switch 84 cases ",	0);
	create_insn	(x=0X43E2E3B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2E3B7,	"switch jump",	0);
	create_insn	(x=0X43E2E3B7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E2E3BE,	"jumptable 43E2E3B7 cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-40,60,61,63,64",	1);
	create_insn	(0X43E2E3BE);
	set_cmt	(0X43E2E3C7,	"propHash",	0);
	set_cmt	(0X43E2E3CC,	"classHash",	0);
	create_insn	(x=0X43E2E3FD);
	op_hex		(x,	1);
	create_insn	(0X43E2E409);
	set_cmt	(0X43E2E413,	"jumptable 43E2E3B7 default case, cases 5,6,12,15,18,20-22,31,37,41-59,62,65-84",	1);
	set_name	(0X43E2E413,	"def_43E2E3B7");
	create_insn	(x=0X43E2E47B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E495);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E2E4B0);
	create_insn	(x=0X43E2E4C6);
	op_hex		(x,	1);
	create_insn	(x=0X43E2E4CB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E4E1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E4F6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E4FE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E50F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2E525);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E53E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E5A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E633);
	op_hex		(x,	1);
	create_insn	(x=0X43E2E676);
	op_hex		(x,	1);
	create_insn	(x=0X43E2E679);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2E683,	"a5",	0);
	set_cmt	(0X43E2E68E,	"a4",	0);
	set_cmt	(0X43E2E693,	"a3",	0);
	create_insn	(x=0X43E2E694);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2E69A,	"a2",	0);
	create_insn	(x=0X43E2E69B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2E6A1,	"a1",	0);
	create_insn	(0X43E2E6AC);
	set_cmt	(0X43E2E6CE,	"propHash",	0);
	set_cmt	(0X43E2E6D3,	"classHash",	0);
	create_insn	(x=0X43E2E728);
	op_hex		(x,	1);
	create_insn	(x=0X43E2E73C);
	op_hex		(x,	1);
	create_insn	(x=0X43E2E750);
	op_hex		(x,	1);
	create_insn	(x=0X43E2E792);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2E7F0);
	set_cmt	(0X43E2E80D,	"propHash",	0);
	set_cmt	(0X43E2E812,	"classHash",	0);
	create_insn	(x=0X43E2E828);
	op_hex		(x,	1);
	set_cmt	(0X43E2E846,	"propHash",	0);
	set_cmt	(0X43E2E84B,	"classHash",	0);
	set_cmt	(0X43E2E8AF,	"propHash",	0);
	set_cmt	(0X43E2E8B4,	"classHash",	0);
	create_insn	(x=0X43E2E8E3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E90B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2E918);
	op_hex		(x,	1);
	create_insn	(x=0X43E2E923);
	op_hex		(x,	1);
	create_insn	(x=0X43E2E931);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2E937);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2E940);
	op_hex		(x,	1);
	create_insn	(x=0X43E2E950);
	op_hex		(x,	1);
	create_insn	(x=0X43E2E95A);
	op_hex		(x,	1);
	set_cmt	(0X43E2E969,	"Size",	0);
	create_insn	(x=0X43E2E976);
	op_hex		(x,	1);
	create_insn	(x=0X43E2E98C);
	op_hex		(x,	1);
	create_insn	(x=0X43E2E99B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E9A1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E9A7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2E9AD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2E9C3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E9CB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E9D5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2E9DF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E9EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2E9F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E9F7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2E9FE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2EA05);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2EA0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2EA18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2EA1F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2EA50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E2EA7B);
	create_insn	(x=0X43E2EA80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E2EA92,	0X2);
	set_cmt	(0X43E2EA94,	"jump table for switch statement",	0);
	create_dword	(x=0X43E2EA94);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E2EA94,	"jpt_43E2DD8A");
	set_cmt	(0X43E2EAA0,	"indirect table for switch statement",	0);
	create_byte	(0X43E2EAA0);
	make_array	(0X43E2EAA0,	0X54);
	set_cmt	(0X43E2EAF4,	"jump table for switch statement",	0);
	create_dword	(x=0X43E2EAF4);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E2EAF4,	"jpt_43E2E3B7");
	set_cmt	(0X43E2EB00,	"indirect table for switch statement",	0);
	create_byte	(0X43E2EB00);
	make_array	(0X43E2EB00,	0X54);
	make_array	(0X43E2EB54,	0XC);
	create_insn	(0X43E2EB60);
	set_cmt	(0X43E2EB65,	"index",	0);
	set_cmt	(0X43E2EB6A,	"interface",	0);
	set_cmt	(0X43E2EB98,	"player",	0);
	set_cmt	(0X43E2EBC7,	"index",	0);
	set_cmt	(0X43E2EBCC,	"interface",	0);
	set_cmt	(0X43E2EBD9,	"this",	0);
	set_cmt	(0X43E2EBED,	"this",	0);
	set_cmt	(0X43E2EC20,	"this",	0);
	create_insn	(x=0X43E2EC30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E2EC48,	"index",	0);
	set_cmt	(0X43E2EC4D,	"interface",	0);
	set_cmt	(0X43E2EC60,	"this",	0);
	set_cmt	(0X43E2EC72,	"player",	0);
	set_cmt	(0X43E2EC79,	"interface",	0);
	set_cmt	(0X43E2EC7F,	"index",	0);
	make_array	(0X43E2EC92,	0XE);
	create_insn	(0X43E2ECA0);
	make_array	(0X43E2ECBB,	0X5);
	create_insn	(0X43E2ECC0);
	make_array	(0X43E2ECCB,	0X5);
	create_insn	(0X43E2ECD0);
	create_insn	(x=0X43E2ECDA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E2ECE9);
	create_insn	(x=0X43E2ECF8);
	op_hex		(x,	1);
	create_insn	(x=0X43E2ECFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2ED0B);
	op_hex		(x,	1);
	make_array	(0X43E2ED14,	0XC);
	create_insn	(0X43E2ED20);
	create_insn	(x=0X43E2ED2A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E2ED39);
	create_insn	(x=0X43E2ED48);
	op_hex		(x,	1);
	create_insn	(x=0X43E2ED4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E2ED5B);
	op_hex		(x,	1);
	make_array	(0X43E2ED64,	0X1C);
	create_insn	(0X43E2ED80);
	create_insn	(x=0X43E2EDB1);
	op_hex		(x,	1);
	make_array	(0X43E2EDD3,	0XD);
	create_insn	(0X43E2EDE0);
	set_name	(0X43E2EDE0,	"C_SDK::EventProcessor::Handle::BombPlanted");
	create_insn	(x=0X43E2EDE3);
	op_hex		(x,	1);
	create_insn	(x=0X43E2EDEB);
	op_hex		(x,	1);
	create_insn	(x=0X43E2EDF4);
	op_hex		(x,	1);
	create_insn	(x=0X43E2EE02);
	op_hex		(x,	1);
	create_insn	(x=0X43E2EE37);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EEA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2EEAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EEB6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EEBD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EEC2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EECD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EED8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2EEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2EEF8);
	op_hex		(x,	1);
	create_insn	(x=0X43E2EEFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EF03);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2EF11);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EF19);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2EF1D);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2EF20,	"this",	0);
	create_insn	(x=0X43E2EF22);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2EF3D,	"this",	0);
	create_insn	(x=0X43E2EF49);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2EF50);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EF59);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2EF7E);
	op_stkvar	(x,	1);
	create_insn	(0X43E2EF87);
	create_insn	(x=0X43E2EF8E);
	op_hex		(x,	1);
	create_insn	(x=0X43E2EF9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2EF9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EFA9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EFB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EFBC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EFC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EFC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EFD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EFD9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EFE5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2EFE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2EFED);
	op_hex		(x,	1);
	create_insn	(x=0X43E2EFF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2EFF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F003);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F008);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2F00C,	"this",	0);
	create_insn	(x=0X43E2F00E);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2F01D,	"this",	0);
	create_insn	(x=0X43E2F029);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F02F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F038);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F064);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F067);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F06F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F077);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2F084,	"interface",	0);
	create_insn	(x=0X43E2F08F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F09A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F0A5);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2F0AD,	"index",	0);
	set_cmt	(0X43E2F0C0,	"this",	0);
	set_cmt	(0X43E2F0D4,	"index",	0);
	set_cmt	(0X43E2F0D9,	"interface",	0);
	set_cmt	(0X43E2F0EA,	"index",	0);
	set_cmt	(0X43E2F0EF,	"interface",	0);
	set_cmt	(0X43E2F102,	"interface",	0);
	set_cmt	(0X43E2F108,	"index",	0);
	create_insn	(0X43E2F11E);
	set_cmt	(0X43E2F128,	"propHash",	0);
	set_cmt	(0X43E2F12D,	"classHash",	0);
	create_insn	(x=0X43E2F13F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F14B);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2F153,	"propHash",	0);
	set_cmt	(0X43E2F158,	"classHash",	0);
	set_cmt	(0X43E2F16E,	"propHash",	0);
	set_cmt	(0X43E2F173,	"classHash",	0);
	set_cmt	(0X43E2F18E,	"propHash",	0);
	set_cmt	(0X43E2F193,	"classHash",	0);
	create_insn	(x=0X43E2F1A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F1B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F1C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F1D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F1EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F21C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F22A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F230);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F241);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F25E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F268);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F26C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F273);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F27B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F283);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F290);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F294);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F298);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F29B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F2AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F2B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F2BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F2C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F2C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F2D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F2D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F2E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F2F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F2F8);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F2FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F300);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F30E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F313);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F317);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2F32F,	"a3",	0);
	set_cmt	(0X43E2F330,	"a2",	0);
	set_cmt	(0X43E2F331,	"this",	0);
	create_insn	(x=0X43E2F331);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F341);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F34E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F357);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F365);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2F369,	"index",	0);
	set_cmt	(0X43E2F36E,	"interface",	0);
	create_insn	(x=0X43E2F381);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F385);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F390);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F39A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F3B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F3C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F3CB);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F3CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F3D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F3DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F3E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F3F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F3F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F3FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F402);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2F40A,	"esi0",	0);
	create_insn	(x=0X43E2F40A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F416);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F41F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F427);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F42B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F43C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F444);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F44F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F459);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F461);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F469);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F471);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F480);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F487);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F48B);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F48E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F493);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F4A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F4A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F4AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F4B4);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F4B7);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F4C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F4CC);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F4CF);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2F4D6,	"a3",	0);
	set_cmt	(0X43E2F4D7,	"a2",	0);
	set_cmt	(0X43E2F4D8,	"a1",	0);
	create_insn	(x=0X43E2F4D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2F4E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F4E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F4EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F514);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F517);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F51B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F523);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F52B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F535);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F561);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F564);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F56B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F573);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F57B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F58A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F58E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F599);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F5A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F5A8);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2F5B0,	"esi0",	0);
	create_insn	(x=0X43E2F5B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F5C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F5C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F5CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F5DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F5E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F5E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F5F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F5F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F610);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F617);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F61B);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F61E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F623);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F631);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F636);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F63F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F644);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F647);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F656);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F65C);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F65F);
	op_stkvar	(x,	0);
	set_cmt	(0X43E2F665,	"a3",	0);
	set_cmt	(0X43E2F666,	"a2",	0);
	set_cmt	(0X43E2F667,	"a1",	0);
	create_insn	(x=0X43E2F667);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2F671);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F678);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F680);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F6AC);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F6AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F6BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F6EA);
	op_hex		(x,	1);
	make_array	(0X43E2F6F6,	0XA);
	create_insn	(0X43E2F700);
	create_insn	(x=0X43E2F703);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F718);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F71B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F722);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F728);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F72C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F733);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F73A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F745);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F749);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F74C);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F74F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F753);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F760);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F764);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F767);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2F76A,	"this",	0);
	create_insn	(x=0X43E2F76C);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2F786,	"this",	0);
	create_insn	(x=0X43E2F792);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F79C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F7C7);
	op_hex		(x,	1);
	set_cmt	(0X43E2F7CA,	"esi0",	0);
	create_insn	(x=0X43E2F7D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F7D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F7DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F7E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F7E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F7EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F7F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F7FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F804);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F810);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F814);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F817);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F81A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F81E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F82B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F82F);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2F832,	"this",	0);
	create_insn	(x=0X43E2F834);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2F842,	"this",	0);
	create_insn	(x=0X43E2F84E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F856);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F881);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F893);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F8B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F8BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F8C4);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F8C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F8CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F8D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F8D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F8E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F8E4);
	op_stkvar	(x,	1);
	set_cmt	(0X43E2F8EE,	"esi0",	0);
	create_insn	(x=0X43E2F8EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F8F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F8F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F8FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F903);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F90A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F911);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F920);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F924);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F927);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F92A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F92E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F93B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F93F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F947);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F94B);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F94E);
	op_hex		(x,	1);
	set_cmt	(0X43E2F95E,	"a3",	0);
	set_cmt	(0X43E2F95F,	"a2",	0);
	set_cmt	(0X43E2F960,	"a1",	0);
	create_insn	(x=0X43E2F960);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2F96A);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F96D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F975);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F97D);
	op_stkvar	(x,	1);
	create_insn	(0X43E2F98E);
	create_insn	(x=0X43E2F990);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F993);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F99A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F9A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F9A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F9AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F9B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F9BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F9D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F9D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F9D7);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F9DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F9DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F9EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2F9EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F9F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E2F9FB);
	op_hex		(x,	1);
	create_insn	(x=0X43E2F9FE);
	op_hex		(x,	1);
	set_cmt	(0X43E2FA0D,	"a3",	0);
	set_cmt	(0X43E2FA0E,	"a2",	0);
	set_cmt	(0X43E2FA0F,	"a1",	0);
	create_insn	(x=0X43E2FA0F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2FA19);
	op_hex		(x,	1);
	create_insn	(x=0X43E2FA1C);
	op_stkvar	(x,	1);
	make_array	(0X43E2FA2D,	0X3);
	create_insn	(0X43E2FA30);
	create_insn	(x=0X43E2FA42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2FA4A);
	set_cmt	(0X43E2FA4F,	"this",	0);
	create_insn	(x=0X43E2FA59);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43E2FA67,	0X9);
	create_insn	(0X43E2FA70);
	create_insn	(x=0X43E2FA73);
	op_hex		(x,	1);
	set_cmt	(0X43E2FA85,	"this",	0);
	create_insn	(x=0X43E2FAAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2FAC9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2FAE6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2FAF1);
	op_hex		(x,	1);
	make_array	(0X43E2FB23,	0XD);
	create_insn	(0X43E2FB30);
	create_insn	(x=0X43E2FB33);
	op_hex		(x,	1);
	set_cmt	(0X43E2FB45,	"this",	0);
	create_insn	(x=0X43E2FB6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2FB89);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2FBA6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E2FBB1);
	op_hex		(x,	1);
	make_array	(0X43E2FBE3,	0XD);
	create_insn	(0X43E2FBF0);
	make_array	(0X43E2FBF3,	0XD);
	create_insn	(0X43E2FC00);
	set_name	(0X43E2FC00,	"C_SDK::EventProcessor::Handle::CsWinPanelRound");
	create_insn	(x=0X43E2FC05);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E2FC60);
	create_insn	(x=0X43E2FC77);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E2FD58,	0X8);
	create_insn	(0X43E2FD60);
	create_insn	(x=0X43E2FD63);
	op_hex		(x,	1);
	create_insn	(x=0X43E2FD66);
	op_hex		(x,	1);
	create_insn	(x=0X43E2FD69);
	op_hex		(x,	1);
	create_insn	(x=0X43E2FD70);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E2FD76);
	op_hex		(x,	1);
	create_insn	(x=0X43E2FD8D);
	op_hex		(x,	1);
	create_insn	(x=0X43E2FD9B);
	op_hex		(x,	1);
	create_insn	(x=0X43E2FE43);
	op_hex		(x,	1);
	create_insn	(x=0X43E2FE46);
	op_hex		(x,	1);
	create_insn	(x=0X43E2FE4B);
	op_hex		(x,	1);
	set_cmt	(0X43E2FE59,	"this",	0);
	set_cmt	(0X43E2FE71,	"interface",	0);
	set_cmt	(0X43E2FE77,	"index",	0);
	set_cmt	(0X43E2FE89,	"this",	0);
	set_cmt	(0X43E2FEAB,	"index",	0);
	set_cmt	(0X43E2FEB0,	"interface",	0);
	set_cmt	(0X43E2FEBD,	"this",	0);
	set_cmt	(0X43E2FED1,	"m_player",	0);
	set_cmt	(0X43E2FEDC,	"interface",	0);
	set_cmt	(0X43E2FEE2,	"index",	0);
	create_insn	(x=0X43E2FF3C);
	op_hex		(x,	1);
	create_insn	(x=0X43E2FFBB);
	op_hex		(x,	1);
	set_cmt	(0X43E2FFDF,	"_DWORD",	0);
	set_cmt	(0X43E2FFE0,	"_DWORD",	0);
	create_insn	(x=0X43E2FFEC);
	op_hex		(x,	1);
	create_insn	(x=0X43E30027);
	op_hex		(x,	1);
	set_cmt	(0X43E3004B,	"_DWORD",	0);
	set_cmt	(0X43E30052,	"_DWORD",	0);
	create_insn	(x=0X43E30055);
	op_hex		(x,	1);
	create_insn	(x=0X43E30097);
	op_hex		(x,	1);
	set_cmt	(0X43E300BB,	"_DWORD",	0);
	set_cmt	(0X43E300BC,	"_DWORD",	0);
	create_insn	(x=0X43E300C4);
	op_hex		(x,	1);
	create_insn	(x=0X43E300F9);
	op_hex		(x,	1);
	set_cmt	(0X43E3011D,	"_DWORD",	0);
	set_cmt	(0X43E3011E,	"_DWORD",	0);
	create_insn	(x=0X43E30126);
	op_hex		(x,	1);
	create_insn	(0X43E30137);
	create_insn	(0X43E3013F);
	create_insn	(x=0X43E30149);
	op_hex		(x,	1);
	create_insn	(x=0X43E3014D);
	op_hex		(x,	1);
	create_insn	(x=0X43E3015E);
	op_hex		(x,	1);
	create_insn	(x=0X43E30162);
	op_hex		(x,	1);
	create_insn	(x=0X43E30173);
	op_hex		(x,	1);
	create_insn	(x=0X43E30177);
	op_hex		(x,	1);
	create_insn	(x=0X43E30188);
	op_hex		(x,	1);
	create_insn	(0X43E301A6);
	create_insn	(x=0X43E301AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E301FA);
	op_hex		(x,	1);
	set_cmt	(0X43E30222,	"_DWORD",	0);
	set_cmt	(0X43E30223,	"_DWORD",	0);
	create_insn	(x=0X43E30228);
	op_hex		(x,	1);
	create_insn	(x=0X43E30234);
	op_hex		(x,	1);
	create_insn	(x=0X43E3027A);
	op_hex		(x,	1);
	set_cmt	(0X43E302A8,	"_DWORD",	0);
	set_cmt	(0X43E302A9,	"_DWORD",	0);
	create_insn	(x=0X43E302AE);
	op_hex		(x,	1);
	create_insn	(x=0X43E302BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E302EB);
	op_hex		(x,	1);
	set_cmt	(0X43E3030A,	"_DWORD",	0);
	set_cmt	(0X43E3030B,	"_DWORD",	0);
	create_insn	(x=0X43E30310);
	op_hex		(x,	1);
	create_insn	(x=0X43E3031C);
	op_hex		(x,	1);
	create_insn	(x=0X43E30357);
	op_hex		(x,	1);
	set_cmt	(0X43E30376,	"_DWORD",	0);
	set_cmt	(0X43E30377,	"_DWORD",	0);
	create_insn	(x=0X43E3037C);
	op_hex		(x,	1);
	create_insn	(x=0X43E30388);
	op_hex		(x,	1);
	create_insn	(x=0X43E303C7);
	op_hex		(x,	1);
	set_cmt	(0X43E303E6,	"_DWORD",	0);
	set_cmt	(0X43E303E7,	"_DWORD",	0);
	create_insn	(x=0X43E303EC);
	op_hex		(x,	1);
	create_insn	(x=0X43E303F4);
	op_hex		(x,	1);
	create_insn	(x=0X43E3042B);
	op_hex		(x,	1);
	set_cmt	(0X43E3044A,	"_DWORD",	0);
	set_cmt	(0X43E3044B,	"_DWORD",	0);
	create_insn	(x=0X43E30450);
	op_hex		(x,	1);
	create_insn	(x=0X43E30462);
	op_hex		(x,	1);
	create_insn	(x=0X43E30469);
	op_hex		(x,	1);
	create_insn	(x=0X43E3047C);
	op_hex		(x,	1);
	create_insn	(x=0X43E30483);
	op_hex		(x,	1);
	create_insn	(x=0X43E3049A);
	op_hex		(x,	1);
	create_insn	(x=0X43E304AD);
	op_hex		(x,	1);
	create_insn	(x=0X43E304BC);
	op_hex		(x,	1);
	set_cmt	(0X43E304E0,	"esi0",	0);
	set_cmt	(0X43E3051E,	"switch 83 cases ",	0);
	create_insn	(x=0X43E3051E);
	op_hex		(x,	1);
	create_insn	(x=0X43E30526);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E3052D,	"switch jump",	0);
	create_insn	(x=0X43E3052D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E30534,	"jumptable 43E3052D cases 10,34,59,92",	1);
	create_insn	(0X43E30534);
	set_cmt	(0X43E30536,	"jumptable 43E3052D default case, cases 11-33,35-58,60-91",	1);
	set_name	(0X43E30536,	"def_43E3052D");
	create_insn	(x=0X43E30554);
	op_hex		(x,	1);
	create_insn	(x=0X43E30559);
	op_hex		(x,	1);
	create_insn	(0X43E30569);
	create_insn	(x=0X43E30577);
	op_hex		(x,	1);
	create_insn	(x=0X43E3057A);
	op_hex		(x,	1);
	create_insn	(x=0X43E305DA);
	op_hex		(x,	1);
	set_cmt	(0X43E3060A,	"a3",	0);
	set_cmt	(0X43E3060B,	"a2",	0);
	set_cmt	(0X43E3060D,	"a1",	0);
	create_insn	(x=0X43E3060D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E30617);
	op_hex		(x,	1);
	set_cmt	(0X43E30630,	"jump table for switch statement",	0);
	create_dword	(x=0X43E30630);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E30630,	"jpt_43E3052D");
	set_cmt	(0X43E30638,	"indirect table for switch statement",	0);
	create_byte	(0X43E30638);
	make_array	(0X43E30638,	0X53);
	make_array	(0X43E3068B,	0X5);
	create_insn	(0X43E30690);
	set_name	(0X43E30690,	"C_SDK::EventProcessor::Handle::Player::Death");
	create_insn	(x=0X43E30693);
	op_hex		(x,	1);
	create_insn	(x=0X43E30696);
	op_hex		(x,	1);
	create_insn	(x=0X43E30699);
	op_hex		(x,	1);
	create_insn	(x=0X43E306A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E306A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E306F7);
	op_hex		(x,	1);
	set_cmt	(0X43E30715,	"this",	0);
	set_cmt	(0X43E30732,	"this",	0);
	create_insn	(x=0X43E30774);
	op_hex		(x,	1);
	set_cmt	(0X43E30777,	"this",	0);
	set_cmt	(0X43E3078D,	"index",	0);
	set_cmt	(0X43E30792,	"interface",	0);
	set_cmt	(0X43E307A2,	"this",	0);
	set_cmt	(0X43E307C2,	"index",	0);
	set_cmt	(0X43E307CD,	"interface",	0);
	set_cmt	(0X43E307DA,	"this",	0);
	set_cmt	(0X43E307F5,	"index",	0);
	set_cmt	(0X43E307FA,	"interface",	0);
	set_cmt	(0X43E30807,	"this",	0);
	create_insn	(x=0X43E30857);
	op_hex		(x,	1);
	set_cmt	(0X43E30872,	"this",	0);
	create_insn	(x=0X43E30884);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E308BF,	"switch 4 cases ",	0);
	set_cmt	(0X43E308D9,	"switch jump",	0);
	create_insn	(x=0X43E308D9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E308E0,	"jumptable 43E308D9 case 1",	1);
	create_insn	(0X43E308E0);
	create_insn	(x=0X43E3092A);
	op_hex		(x,	1);
	set_cmt	(0X43E30960,	"jumptable 43E308D9 case 2",	1);
	create_insn	(0X43E30960);
	create_insn	(x=0X43E30997);
	op_hex		(x,	1);
	create_insn	(x=0X43E309BB);
	op_hex		(x,	1);
	create_insn	(x=0X43E309BF);
	op_hex		(x,	1);
	create_insn	(0X43E309E0);
	create_insn	(x=0X43E309EF);
	op_hex		(x,	1);
	create_insn	(0X43E309F4);
	create_insn	(x=0X43E30A37);
	op_hex		(x,	1);
	create_insn	(x=0X43E30A64);
	op_hex		(x,	1);
	create_insn	(x=0X43E30A75);
	op_hex		(x,	1);
	set_cmt	(0X43E30ABF,	"jumptable 43E308D9 case 3",	1);
	create_insn	(0X43E30ABF);
	create_insn	(x=0X43E30B0B);
	op_hex		(x,	1);
	set_cmt	(0X43E30B3E,	"jumptable 43E308D9 case 4",	1);
	create_insn	(0X43E30B3E);
	create_insn	(x=0X43E30B41);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E30B4B,	"jumptable 43E308D9 default case",	1);
	set_name	(0X43E30B4B,	"def_43E308D9");
	set_cmt	(0X43E30B5E,	"index",	0);
	set_cmt	(0X43E30B63,	"interface",	0);
	set_cmt	(0X43E30B70,	"this",	0);
	create_insn	(x=0X43E30BBC);
	op_hex		(x,	1);
	create_insn	(x=0X43E30C6D);
	op_hex		(x,	1);
	create_insn	(x=0X43E30CC7);
	op_hex		(x,	1);
	set_cmt	(0X43E30CE2,	"index",	0);
	set_cmt	(0X43E30CE7,	"interface",	0);
	create_insn	(0X43E30CFD);
	create_insn	(x=0X43E30D3D);
	op_hex		(x,	1);
	create_insn	(x=0X43E30D97);
	op_hex		(x,	1);
	create_insn	(0X43E30DB0);
	create_insn	(x=0X43E30DF8);
	op_hex		(x,	1);
	create_insn	(x=0X43E30E57);
	op_hex		(x,	1);
	create_insn	(0X43E30E70);
	create_insn	(x=0X43E30EBA);
	op_hex		(x,	1);
	create_insn	(x=0X43E30F17);
	op_hex		(x,	1);
	create_insn	(0X43E30F30);
	create_insn	(x=0X43E30F87);
	op_hex		(x,	1);
	create_insn	(x=0X43E30FE7);
	op_hex		(x,	1);
	create_insn	(0X43E31000);
	create_insn	(x=0X43E3103D);
	op_hex		(x,	1);
	create_insn	(x=0X43E31097);
	op_hex		(x,	1);
	create_insn	(0X43E310B0);
	create_insn	(x=0X43E31107);
	op_hex		(x,	1);
	create_insn	(x=0X43E31167);
	op_hex		(x,	1);
	create_insn	(0X43E31180);
	create_insn	(x=0X43E31192);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E311D7);
	op_hex		(x,	1);
	create_insn	(x=0X43E3122D);
	op_hex		(x,	1);
	create_insn	(0X43E31251);
	create_insn	(x=0X43E31264);
	op_hex		(x,	1);
	create_insn	(x=0X43E31277);
	op_hex		(x,	1);
	create_insn	(x=0X43E3128A);
	op_hex		(x,	1);
	create_insn	(x=0X43E3129A);
	op_hex		(x,	1);
	create_insn	(x=0X43E312A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E312B2);
	op_hex		(x,	1);
	create_insn	(x=0X43E312BE);
	op_hex		(x,	1);
	create_insn	(x=0X43E312CB);
	op_hex		(x,	1);
	create_insn	(x=0X43E312E7);
	op_hex		(x,	1);
	create_insn	(x=0X43E3133D);
	op_hex		(x,	1);
	create_insn	(0X43E31361);
	create_insn	(x=0X43E313A7);
	op_hex		(x,	1);
	create_insn	(x=0X43E313FD);
	op_hex		(x,	1);
	create_insn	(0X43E31421);
	create_insn	(x=0X43E3146B);
	op_hex		(x,	1);
	create_insn	(x=0X43E314C7);
	op_hex		(x,	1);
	create_insn	(0X43E314EB);
	create_insn	(x=0X43E31537);
	op_hex		(x,	1);
	create_insn	(x=0X43E3158D);
	op_hex		(x,	1);
	create_insn	(0X43E315B1);
	create_insn	(x=0X43E315F8);
	op_hex		(x,	1);
	create_insn	(x=0X43E31657);
	op_hex		(x,	1);
	create_insn	(0X43E3167B);
	create_insn	(x=0X43E316C7);
	op_hex		(x,	1);
	create_insn	(x=0X43E3171D);
	op_hex		(x,	1);
	create_insn	(0X43E31741);
	create_insn	(x=0X43E31797);
	op_hex		(x,	1);
	create_insn	(x=0X43E317EC);
	op_hex		(x,	1);
	create_insn	(0X43E31805);
	create_insn	(x=0X43E31847);
	op_hex		(x,	1);
	create_insn	(x=0X43E3189C);
	op_hex		(x,	1);
	set_cmt	(0X43E318DC,	"jump table for switch statement",	0);
	create_dword	(x=0X43E318DC);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E318DC,	"jpt_43E308D9");
	make_array	(0X43E318EC,	0X4);
	create_insn	(0X43E318F0);
	set_name	(0X43E318F0,	"C_SDK::EventProcessor::Handle::Player::Hurt");
	create_insn	(x=0X43E318F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E318F6);
	op_hex		(x,	1);
	create_insn	(x=0X43E318F9);
	op_hex		(x,	1);
	create_insn	(x=0X43E31900);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E31906);
	op_hex		(x,	1);
	create_insn	(x=0X43E3194C);
	op_hex		(x,	1);
	set_cmt	(0X43E3196A,	"this",	0);
	create_insn	(x=0X43E319BE);
	op_hex		(x,	1);
	set_cmt	(0X43E319C1,	"this",	0);
	set_cmt	(0X43E319CF,	"this",	0);
	create_insn	(x=0X43E31A1C);
	op_hex		(x,	1);
	set_cmt	(0X43E31A37,	"this",	0);
	create_insn	(x=0X43E31A7D);
	op_hex		(x,	1);
	create_insn	(x=0X43E31AB8);
	op_hex		(x,	1);
	set_cmt	(0X43E31AD3,	"this",	0);
	create_insn	(x=0X43E31B19);
	op_hex		(x,	1);
	create_insn	(x=0X43E31B5A);
	op_hex		(x,	1);
	set_cmt	(0X43E31B75,	"this",	0);
	create_insn	(x=0X43E31BBB);
	op_hex		(x,	1);
	create_insn	(x=0X43E31BF7);
	op_hex		(x,	1);
	create_insn	(x=0X43E31C55);
	op_hex		(x,	1);
	create_insn	(x=0X43E31C6B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E31C8F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E31C96);
	set_cmt	(0X43E31CA6,	"index",	0);
	set_cmt	(0X43E31CAB,	"interface",	0);
	set_cmt	(0X43E31CB8,	"this",	0);
	set_cmt	(0X43E31CD6,	"index",	0);
	set_cmt	(0X43E31CDB,	"interface",	0);
	set_cmt	(0X43E31CE8,	"this",	0);
	create_insn	(x=0X43E31D54);
	op_hex		(x,	1);
	set_cmt	(0X43E31D7E,	"esi0",	0);
	create_insn	(x=0X43E31DCA);
	op_hex		(x,	1);
	create_insn	(x=0X43E31DEE);
	op_hex		(x,	1);
	create_insn	(x=0X43E31DF1);
	op_hex		(x,	1);
	set_cmt	(0X43E31E07,	"a3",	0);
	set_cmt	(0X43E31E08,	"a2",	0);
	set_cmt	(0X43E31E09,	"a1",	0);
	create_insn	(x=0X43E31E09);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E31E13);
	op_hex		(x,	1);
	set_cmt	(0X43E31E3F,	"index",	0);
	set_cmt	(0X43E31E44,	"interface",	0);
	set_cmt	(0X43E31E51,	"this",	0);
	set_cmt	(0X43E31E6B,	"index",	0);
	set_cmt	(0X43E31E70,	"interface",	0);
	set_cmt	(0X43E31E7D,	"this",	0);
	set_cmt	(0X43E31E9B,	"index",	0);
	set_cmt	(0X43E31EA0,	"interface",	0);
	set_cmt	(0X43E31EAD,	"this",	0);
	create_insn	(x=0X43E31F2E);
	op_hex		(x,	1);
	set_cmt	(0X43E31F58,	"esi0",	0);
	create_insn	(x=0X43E31F97);
	op_hex		(x,	1);
	create_insn	(x=0X43E31FBB);
	op_hex		(x,	1);
	create_insn	(x=0X43E31FBE);
	op_hex		(x,	1);
	set_cmt	(0X43E31FD5,	"a3",	0);
	set_cmt	(0X43E31FD6,	"a2",	0);
	set_cmt	(0X43E31FD7,	"a1",	0);
	create_insn	(x=0X43E31FD7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E31FE1);
	op_hex		(x,	1);
	create_insn	(0X43E3207F);
	create_insn	(0X43E320C5);
	set_cmt	(0X43E320E3,	"switch 4 cases ",	0);
	set_cmt	(0X43E320FD,	"switch jump",	0);
	create_insn	(x=0X43E320FD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E32104,	"jumptable 43E320FD case 1",	1);
	create_insn	(0X43E32104);
	create_insn	(x=0X43E3214C);
	op_hex		(x,	1);
	set_cmt	(0X43E32182,	"jumptable 43E320FD case 2",	1);
	create_insn	(0X43E32182);
	create_insn	(x=0X43E321B7);
	op_hex		(x,	1);
	create_insn	(x=0X43E321DB);
	op_hex		(x,	1);
	create_insn	(x=0X43E321DF);
	op_hex		(x,	1);
	create_insn	(0X43E32200);
	create_insn	(x=0X43E3220F);
	op_hex		(x,	1);
	create_insn	(0X43E32214);
	create_insn	(x=0X43E32259);
	op_hex		(x,	1);
	create_insn	(x=0X43E32284);
	op_hex		(x,	1);
	create_insn	(x=0X43E32295);
	op_hex		(x,	1);
	set_cmt	(0X43E322E2,	"jumptable 43E320FD case 3",	1);
	create_insn	(0X43E322E2);
	create_insn	(x=0X43E3233A);
	op_hex		(x,	1);
	set_cmt	(0X43E3236D,	"jumptable 43E320FD case 4",	1);
	create_insn	(0X43E3236D);
	create_insn	(x=0X43E32370);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E3237A,	"jumptable 43E320FD default case",	1);
	set_name	(0X43E3237A,	"def_43E320FD");
	set_cmt	(0X43E32380,	"index",	0);
	set_cmt	(0X43E32385,	"interface",	0);
	set_cmt	(0X43E32392,	"this",	0);
	make_array	(0X43E323C5,	0X3);
	set_cmt	(0X43E323C8,	"jump table for switch statement",	0);
	create_dword	(x=0X43E323C8);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E323C8,	"jpt_43E320FD");
	make_array	(0X43E323D8,	0X8);
	create_insn	(0X43E323E0);
	set_name	(0X43E323E0,	"C_SDK::EventProcessor::Handle::BulletImpact");
	create_insn	(x=0X43E323E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E323E6);
	op_hex		(x,	1);
	set_cmt	(0X43E323E9,	"this",	0);
	create_insn	(x=0X43E323F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E323FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32408);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3240F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32413);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E32418);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3241E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32428);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3242F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32433);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E32438);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3243E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32448);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3244F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32453);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E32458);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3245C);
	op_stkvar	(x,	1);
	set_cmt	(0X43E32462,	"index",	0);
	set_cmt	(0X43E3246D,	"interface",	0);
	create_insn	(x=0X43E32473);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32479);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3247F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32483);
	op_stkvar	(x,	0);
	set_cmt	(0X43E32490,	"this",	0);
	set_cmt	(0X43E324AA,	"index",	0);
	set_cmt	(0X43E324AF,	"interface",	0);
	set_cmt	(0X43E324BC,	"this",	0);
	create_insn	(x=0X43E324C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E324F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32516);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32528);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32532);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3253D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32550);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3256F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32578);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32580);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32588);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E325B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E325B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E325C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E325C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E325CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E325D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E325DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E325DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E325E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E325F2);
	op_stkvar	(x,	0);
	set_cmt	(0X43E32605,	"index",	0);
	set_cmt	(0X43E3260A,	"interface",	0);
	set_cmt	(0X43E32617,	"this",	0);
	set_cmt	(0X43E32631,	"index",	0);
	set_cmt	(0X43E32636,	"interface",	0);
	set_cmt	(0X43E32643,	"this",	0);
	create_insn	(x=0X43E3264F);
	op_stkvar	(x,	1);
	set_cmt	(0X43E3267C,	"m_player",	0);
	create_insn	(x=0X43E326BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E326C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E326D5);
	op_stkvar	(x,	0);
	set_cmt	(0X43E326DF,	"propHash",	0);
	set_cmt	(0X43E326E4,	"classHash",	0);
	set_cmt	(0X43E326F8,	"index",	0);
	set_cmt	(0X43E32713,	"interface",	0);
	create_insn	(x=0X43E32721);
	op_stkvar	(x,	0);
	set_cmt	(0X43E3272E,	"this",	0);
	create_insn	(x=0X43E3273C);
	op_stkvar	(x,	0);
	set_cmt	(0X43E32744,	"a2",	0);
	create_insn	(x=0X43E32744);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32748);
	op_stkvar	(x,	0);
	set_cmt	(0X43E32750,	"a1",	0);
	create_insn	(x=0X43E32750);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32764);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3276A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32770);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32776);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3277C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32782);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32788);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3278E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32794);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3279A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E327A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E327A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E327AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E327B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E327C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E327D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E327DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E327EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E327FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32803);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32809);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32818);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3281E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32824);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32845);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3284B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32855);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3285F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32873);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32879);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32886);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32890);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3289E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E328AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E328D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E328E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E328E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E328F7);
	op_stkvar	(x,	1);
	set_cmt	(0X43E32977,	"Size",	0);
	create_insn	(x=0X43E32984);
	op_hex		(x,	1);
	create_insn	(x=0X43E32992);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32996);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3299C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E329A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E329AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E329B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E329C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E329CD);
	op_stkvar	(x,	1);
	make_array	(0X43E329FE,	0X2);
	create_insn	(0X43E32A00);
	set_name	(0X43E32A00,	"C_SDK::EventProcessor::Handle::WeaponFire");
	create_insn	(x=0X43E32A03);
	op_hex		(x,	1);
	create_insn	(x=0X43E32A06);
	op_hex		(x,	1);
	create_insn	(x=0X43E32A09);
	op_hex		(x,	1);
	create_insn	(x=0X43E32A10);
	op_stkvar	(x,	0);
	set_cmt	(0X43E32A16,	"this",	0);
	set_cmt	(0X43E32A2F,	"index",	0);
	set_cmt	(0X43E32A34,	"interface",	0);
	set_cmt	(0X43E32A41,	"this",	0);
	set_cmt	(0X43E32A5B,	"index",	0);
	set_cmt	(0X43E32A60,	"interface",	0);
	set_cmt	(0X43E32A6D,	"this",	0);
	set_cmt	(0X43E32A88,	"index",	0);
	set_cmt	(0X43E32A8D,	"interface",	0);
	set_cmt	(0X43E32A9A,	"this",	0);
	set_cmt	(0X43E32AA6,	"player",	0);
	set_cmt	(0X43E32ABB,	"index",	0);
	set_cmt	(0X43E32AC0,	"interface",	0);
	set_cmt	(0X43E32ACD,	"this",	0);
	set_cmt	(0X43E32AD9,	"player",	0);
	set_cmt	(0X43E32AEB,	"propHash",	0);
	set_cmt	(0X43E32AF0,	"classHash",	0);
	set_cmt	(0X43E32B14,	"switch 84 cases ",	0);
	create_insn	(x=0X43E32B1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E32B25,	"switch jump",	0);
	create_insn	(x=0X43E32B25);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E32B2C,	"jumptable 43E32B25 cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-40,60,61,63,64",	1);
	create_insn	(0X43E32B2C);
	create_insn	(x=0X43E32B46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E32B7A,	"Size",	0);
	create_insn	(x=0X43E32B87);
	op_hex		(x,	1);
	set_cmt	(0X43E32C00,	"jumptable 43E32B25 default case, cases 5,6,12,15,18,20-22,31,37,41-59,62,65-84",	1);
	set_name	(0X43E32C00,	"def_43E32B25");
	set_cmt	(0X43E32C0C,	"jump table for switch statement",	0);
	create_dword	(x=0X43E32C0C);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E32C0C,	"jpt_43E32B25");
	set_cmt	(0X43E32C18,	"indirect table for switch statement",	0);
	create_byte	(0X43E32C18);
	make_array	(0X43E32C18,	0X54);
	make_array	(0X43E32C6C,	0X4);
	create_insn	(0X43E32C70);
	create_insn	(x=0X43E32C73);
	op_hex		(x,	1);
	set_cmt	(0X43E32C81,	"int *",	0);
	set_cmt	(0X43E32C82,	"char",	0);
	set_cmt	(0X43E32C83,	"char",	0);
	create_insn	(x=0X43E32C87);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32C8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32C9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32CF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32D05);
	op_hex		(x,	1);
	create_insn	(x=0X43E32D08);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32D0D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E32D17);
	op_hex		(x,	1);
	set_cmt	(0X43E32D1A,	"to",	0);
	create_insn	(x=0X43E32D1A);
	op_stkvar	(x,	1);
	set_cmt	(0X43E32D1F,	"size",	0);
	set_cmt	(0X43E32D20,	"from",	0);
	create_insn	(x=0X43E32D26);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32D2B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32D2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32D3C);
	op_hex		(x,	1);
	create_insn	(x=0X43E32D3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32D44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E32D53);
	op_hex		(x,	1);
	create_insn	(x=0X43E32D58);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32D5B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32D62);
	op_stkvar	(x,	0);
	set_cmt	(0X43E32D71,	"a3",	0);
	set_cmt	(0X43E32D72,	"a2",	0);
	set_cmt	(0X43E32D73,	"this",	0);
	create_insn	(x=0X43E32D73);
	op_stkvar	(x,	1);
	set_cmt	(0X43E32D7B,	"char *",	0);
	create_insn	(x=0X43E32D7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32D85);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32D89);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32D8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32D92);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32D9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32DAB);
	op_stkvar	(x,	1);
	set_cmt	(0X43E32DB3,	"char *",	0);
	create_insn	(x=0X43E32DB5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32DBB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32DC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32DDF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32DE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32DE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32DEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32DEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32DF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32DF9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32E05);
	op_hex		(x,	1);
	create_insn	(x=0X43E32E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32E2D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32E42);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32E48);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32E52);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32E58);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32E70);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32E7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32E82);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32E89);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32E8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32E96);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32EB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32EC9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32ECC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32ED7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32F03);
	op_hex		(x,	1);
	create_insn	(x=0X43E32F06);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32F09);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32F10);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32F17);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32F23);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32F4C);
	op_hex		(x,	1);
	create_insn	(x=0X43E32F4F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32F52);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32F59);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32F60);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32F69);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32F8E);
	op_hex		(x,	1);
	create_insn	(x=0X43E32F91);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32F94);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32F9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32FA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E32FAB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32FD6);
	op_hex		(x,	1);
	create_insn	(x=0X43E32FD9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E32FE5);
	op_hex		(x,	1);
	create_insn	(0X43E32FF0);
	set_name	(0X43E32FF0,	"C_SDK::EventProcessor::Instance");
	create_insn	(x=0X43E32FF3);
	op_hex		(x,	1);
	set_cmt	(0X43E32FF6,	"interface",	0);
	create_insn	(x=0X43E32FFC);
	op_hex		(x,	1);
	set_cmt	(0X43E32FFF,	"index",	0);
	set_cmt	(0X43E33014,	"instance",	0);
	create_insn	(x=0X43E33028);
	op_stkvar	(x,	1);
	set_cmt	(0X43E3302B,	"index",	0);
	set_cmt	(0X43E33030,	"interface",	0);
	create_insn	(x=0X43E33044);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E33048);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E33050);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E33057);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3305C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E33064);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3306C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E33080);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E33084);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E33088);
	op_hex		(x,	1);
	create_insn	(x=0X43E3308B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E33090);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3309E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E330A3);
	op_stkvar	(x,	1);
	set_cmt	(0X43E330A7,	"this",	0);
	create_insn	(x=0X43E330A9);
	op_stkvar	(x,	1);
	set_cmt	(0X43E330C1,	"dontBroadcast",	0);
	create_insn	(x=0X43E330C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E330C8);
	op_stkvar	(x,	0);
	set_cmt	(0X43E33109,	"name",	0);
	set_cmt	(0X43E3310A,	"instance",	0);
	create_insn	(x=0X43E3310A);
	op_stkvar	(x,	0);
	create_insn	(0X43E3311C);
	create_insn	(x=0X43E33159);
	op_stkvar	(x,	1);
	set_cmt	(0X43E3315C,	"a3",	0);
	set_cmt	(0X43E3315D,	"a2",	0);
	create_insn	(x=0X43E3315D);
	op_stkvar	(x,	0);
	create_insn	(0X43E3316F);
	create_insn	(x=0X43E331A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E331AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E331B1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E331C4);
	create_insn	(x=0X43E331F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E331FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E33201);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E33214);
	create_insn	(x=0X43E33241);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E33249);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3324D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E33251);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E33264);
	create_insn	(x=0X43E332B7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E3339E);
	create_insn	(x=0X43E333D9);
	op_hex		(x,	1);
	create_insn	(0X43E333EA);
	set_cmt	(0X43E334AB,	"instance",	0);
	create_insn	(x=0X43E334B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E334BC);
	op_stkvar	(x,	1);
	set_cmt	(0X43E334C1,	"instance",	0);
	create_insn	(x=0X43E334C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E334D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E334D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E334D9);
	op_stkvar	(x,	0);
	set_cmt	(0X43E334DD,	"instance",	0);
	create_insn	(x=0X43E334DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E334E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E334F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E334F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E334F9);
	op_stkvar	(x,	0);
	set_cmt	(0X43E334FD,	"instance",	0);
	create_insn	(x=0X43E334FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E33509);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E33510);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E33514);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E33519);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E33520);
	op_hex		(x,	1);
	create_insn	(x=0X43E33525);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E33529);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E33533);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3353E);
	op_stkvar	(x,	1);
	create_insn	(0X43E33557);
	set_cmt	(0X43E335A0,	"instance",	0);
	create_insn	(x=0X43E335AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E335B1);
	op_stkvar	(x,	1);
	set_cmt	(0X43E335B6,	"instance",	0);
	create_insn	(x=0X43E335BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E335C5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E335CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E335CE);
	op_stkvar	(x,	0);
	set_cmt	(0X43E335D2,	"instance",	0);
	create_insn	(x=0X43E335D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E335DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E335E5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E335EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E335EE);
	op_stkvar	(x,	0);
	set_cmt	(0X43E335F2,	"instance",	0);
	create_insn	(x=0X43E335F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E335FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E33605);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3360A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3360E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E33615);
	op_hex		(x,	1);
	create_insn	(x=0X43E3361A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3361E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E33628);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E33633);
	op_stkvar	(x,	1);
	create_insn	(0X43E3364C);
	create_insn	(x=0X43E33689);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E33698);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E336A0);
	set_cmt	(0X43E336A5,	"this",	0);
	create_insn	(x=0X43E336A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E336AF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E336C1);
	create_insn	(x=0X43E336F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E336FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E33701);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E33714);
	set_cmt	(0X43E33734,	"a2",	0);
	create_insn	(x=0X43E33749);
	op_stkvar	(x,	1);
	set_cmt	(0X43E3374C,	"a4",	0);
	set_cmt	(0X43E3374D,	"a3",	0);
	create_insn	(x=0X43E3374D);
	op_stkvar	(x,	0);
	set_cmt	(0X43E33751,	"a1",	0);
	create_insn	(x=0X43E33751);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E33764,	0XC);
	create_insn	(0X43E33770);
	create_insn	(x=0X43E33774);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E33785);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E3378D,	0X3);
	create_insn	(x=0X43E33790);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E33799,	0X7);
	create_insn	(0X43E337A0);
	set_cmt	(0X43E337F4,	"index",	0);
	set_cmt	(0X43E337F9,	"interface",	0);
	set_cmt	(0X43E33806,	"this",	0);
	set_cmt	(0X43E3381D,	"propHash",	0);
	set_cmt	(0X43E33822,	"classHash",	0);
	create_insn	(0X43E3384C);
	make_array	(0X43E33863,	0XD);
	create_insn	(0X43E33870);
	create_insn	(x=0X43E3388F);
	op_hex		(x,	1);
	create_insn	(x=0X43E33894);
	op_hex		(x,	1);
	create_insn	(x=0X43E338A1);
	op_hex		(x,	1);
	create_insn	(x=0X43E338A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E338B9,	"index",	0);
	set_cmt	(0X43E338CA,	"interface",	0);
	set_cmt	(0X43E338D7,	"this",	0);
	set_cmt	(0X43E338EE,	"propHash",	0);
	set_cmt	(0X43E338F3,	"classHash",	0);
	make_array	(0X43E33911,	0XF);
	create_insn	(0X43E33920);
	set_cmt	(0X43E3396F,	"interface",	0);
	set_cmt	(0X43E33975,	"index",	0);
	create_insn	(0X43E3399A);
	set_cmt	(0X43E339C5,	"interface",	0);
	set_cmt	(0X43E339CB,	"index",	0);
	create_insn	(0X43E339EE);
	create_insn	(0X43E33A01);
	create_insn	(0X43E33A19);
	create_insn	(0X43E33A33);
	set_cmt	(0X43E33A35,	"interface",	0);
	create_insn	(x=0X43E33A43);
	op_hex		(x,	1);
	set_cmt	(0X43E33A4B,	"index",	0);
	set_cmt	(0X43E33A55,	"this",	0);
	set_cmt	(0X43E33A61,	"player",	0);
	set_cmt	(0X43E33A76,	"index",	0);
	set_cmt	(0X43E33A79,	"interface",	0);
	set_cmt	(0X43E33A86,	"this",	0);
	set_cmt	(0X43E33A92,	"player",	0);
	set_cmt	(0X43E33AA4,	"propHash",	0);
	set_cmt	(0X43E33AA9,	"classHash",	0);
	set_cmt	(0X43E33AC5,	"switch 84 cases ",	0);
	create_insn	(x=0X43E33ACB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E33AD2,	"switch jump",	0);
	create_insn	(x=0X43E33AD2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E33AD9,	"jumptable 43E33AD2 cases 1-4,30,32,36,61,63,64",	1);
	create_insn	(0X43E33AD9);
	set_cmt	(0X43E33AE0,	"jumptable 43E33AD2 cases 7,8,10,13,16,39,60",	1);
	create_insn	(0X43E33AE0);
	set_cmt	(0X43E33AE4,	"jumptable 43E33AD2 cases 17,19,23,24,26,33,34",	1);
	create_insn	(0X43E33AE4);
	set_cmt	(0X43E33AEB,	"jumptable 43E33AD2 cases 9,11,38,40",	1);
	create_insn	(0X43E33AEB);
	set_cmt	(0X43E33AF2,	"jumptable 43E33AD2 cases 14,25,27-29,35",	1);
	create_insn	(0X43E33AF2);
	set_cmt	(0X43E33AF9,	"jumptable 43E33AD2 cases 43-48,84",	1);
	create_insn	(0X43E33AF9);
	set_cmt	(0X43E33B00,	"switch 19 cases ",	0);
	create_insn	(x=0X43E33B00);
	op_hex		(x,	1);
	create_insn	(x=0X43E33B0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E33B11,	"switch jump",	0);
	create_insn	(x=0X43E33B11);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E33B18,	"jumptable 43E33AD2 cases 41,42,59\njumptable 43E33B11 cases 505-509,512,514-516,519,520,522,523",	1);
	create_insn	(0X43E33B18);
	set_cmt	(0X43E33B1F,	"jumptable 43E33AD2 default case, cases 5,6,12,15,18,20-22,31,37,49-58,62,65-83\njumptable 43E33B11 default case, cases 510,511,513,517,518,521",	1);
	create_insn	(0X43E33B1F);
	set_name	(0X43E33B1F,	"def_43E33AD2");
	set_cmt	(0X43E33B2A,	"index",	0);
	set_cmt	(0X43E33B2F,	"interface",	0);
	set_cmt	(0X43E33B3C,	"this",	0);
	set_cmt	(0X43E33B48,	"player",	0);
	set_cmt	(0X43E33B5A,	"propHash",	0);
	set_cmt	(0X43E33B5F,	"classHash",	0);
	create_insn	(x=0X43E33B74);
	op_hex		(x,	1);
	set_cmt	(0X43E33C1F,	"index",	0);
	set_cmt	(0X43E33C24,	"interface",	0);
	set_cmt	(0X43E33C31,	"this",	0);
	set_cmt	(0X43E33C3D,	"a3",	0);
	set_cmt	(0X43E33C3F,	"a2",	0);
	set_cmt	(0X43E33C41,	"m_player",	0);
	set_cmt	(0X43E33C4E,	"index",	0);
	set_cmt	(0X43E33C53,	"interface",	0);
	set_cmt	(0X43E33C63,	"this",	0);
	set_cmt	(0X43E33C6F,	"a3",	0);
	set_cmt	(0X43E33C71,	"a2",	0);
	set_cmt	(0X43E33C73,	"m_player",	0);
	create_insn	(0X43E33CAD);
	create_insn	(x=0X43E33CDC);
	op_hex		(x,	1);
	create_insn	(x=0X43E33CE1);
	op_hex		(x,	1);
	create_insn	(x=0X43E33CEE);
	op_hex		(x,	1);
	create_insn	(x=0X43E33CF1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E33D35);
	op_hex		(x,	1);
	create_insn	(x=0X43E33D4D);
	op_hex		(x,	1);
	create_insn	(x=0X43E33D52);
	op_hex		(x,	1);
	create_insn	(x=0X43E33D5F);
	op_hex		(x,	1);
	create_insn	(x=0X43E33D62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E33D82);
	create_insn	(0X43E33D8E);
	create_insn	(0X43E33DCC);
	set_cmt	(0X43E33DE8,	"jump table for switch statement",	0);
	create_dword	(x=0X43E33DE8);
	make_array	(x,	0X8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E33DE8,	"jpt_43E33AD2");
	set_cmt	(0X43E33E08,	"indirect table for switch statement",	0);
	create_byte	(0X43E33E08);
	make_array	(0X43E33E08,	0X54);
	set_cmt	(0X43E33E5C,	"jump table for switch statement",	0);
	create_dword	(x=0X43E33E5C);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E33E5C,	"jpt_43E33B11");
	set_cmt	(0X43E33E64,	"indirect table for switch statement",	0);
	create_byte	(0X43E33E64);
	make_array	(0X43E33E64,	0X13);
	make_array	(0X43E33E77,	0X9);
	create_insn	(0X43E33E80);
	create_insn	(0X43E33EB8);
	create_insn	(x=0X43E33ECE);
	op_hex		(x,	1);
	create_insn	(x=0X43E33ED3);
	op_hex		(x,	1);
	create_insn	(x=0X43E33EE0);
	op_hex		(x,	1);
	create_insn	(x=0X43E33EE3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E33EF8);
	op_hex		(x,	1);
	set_cmt	(0X43E33F04,	"index",	0);
	set_cmt	(0X43E33F09,	"interface",	0);
	set_cmt	(0X43E33F16,	"this",	0);
	set_cmt	(0X43E33F22,	"a3",	0);
	set_cmt	(0X43E33F24,	"a2",	0);
	set_cmt	(0X43E33F26,	"m_player",	0);
	create_insn	(x=0X43E33F87);
	op_hex		(x,	1);
	create_insn	(x=0X43E33F8C);
	op_hex		(x,	1);
	create_insn	(x=0X43E33FA1);
	op_hex		(x,	1);
	create_insn	(x=0X43E33FA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E33FE5);
	create_insn	(0X43E3400A);
	set_cmt	(0X43E34010,	"index",	0);
	set_cmt	(0X43E34015,	"interface",	0);
	set_cmt	(0X43E34022,	"this",	0);
	set_cmt	(0X43E3402E,	"player",	0);
	set_cmt	(0X43E3403F,	"index",	0);
	set_cmt	(0X43E34044,	"interface",	0);
	set_cmt	(0X43E34051,	"this",	0);
	set_cmt	(0X43E3405D,	"player",	0);
	set_cmt	(0X43E3406F,	"propHash",	0);
	set_cmt	(0X43E34074,	"classHash",	0);
	set_cmt	(0X43E34090,	"switch 84 cases ",	0);
	create_insn	(x=0X43E34096);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E3409D,	"switch jump",	0);
	create_insn	(x=0X43E3409D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E340A4,	"jumptable 43E3409D default case, cases 1-42,49-83",	1);
	create_insn	(0X43E340A4);
	set_name	(0X43E340A4,	"def_43E3409D");
	create_insn	(x=0X43E340C9);
	op_hex		(x,	1);
	create_insn	(x=0X43E340CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E340D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E340F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E340FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E34107);
	op_hex		(x,	1);
	create_insn	(x=0X43E3410A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E34127,	"jumptable 43E3409D cases 43-48,84",	1);
	make_array	(0X43E34146,	0X2);
	set_cmt	(0X43E34148,	"jump table for switch statement",	0);
	create_dword	(x=0X43E34148);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E34148,	"jpt_43E3409D");
	set_cmt	(0X43E34154,	"indirect table for switch statement",	0);
	create_byte	(0X43E34154);
	make_array	(0X43E34154,	0X54);
	make_array	(0X43E341A8,	0X8);
	set_cmt	(0X43E341B0,	"interface",	0);
	create_insn	(0X43E341B0);
	set_cmt	(0X43E341B6,	"index",	0);
	set_cmt	(0X43E341CA,	"this",	0);
	set_cmt	(0X43E341E0,	"index",	0);
	set_cmt	(0X43E341E5,	"interface",	0);
	set_cmt	(0X43E341F2,	"this",	0);
	set_cmt	(0X43E341FE,	"m_pPlayer",	0);
	make_array	(0X43E34236,	0XA);
	create_insn	(0X43E34240);
	create_insn	(x=0X43E34252);
	op_hex		(x,	1);
	make_array	(0X43E3427A,	0X6);
	create_insn	(0X43E34280);
	create_insn	(x=0X43E34283);
	op_hex		(x,	1);
	create_insn	(x=0X43E34286);
	op_hex		(x,	1);
	create_insn	(x=0X43E342A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E342DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E34333);
	op_hex		(x,	1);
	create_insn	(x=0X43E34336);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E34349);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E34361);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E34378);
	op_hex		(x,	1);
	create_insn	(x=0X43E343B9);
	op_hex		(x,	1);
	create_insn	(x=0X43E343BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E343F1);
	op_hex		(x,	1);
	create_insn	(0X43E343FB);
	create_insn	(0X43E34416);
	create_insn	(x=0X43E3441E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E34455);
	op_hex		(x,	1);
	create_insn	(x=0X43E34468);
	op_hex		(x,	1);
	make_array	(0X43E34472,	0XE);
	create_insn	(0X43E34480);
	create_insn	(x=0X43E34483);
	op_hex		(x,	1);
	create_insn	(x=0X43E34486);
	op_hex		(x,	1);
	create_insn	(x=0X43E344AD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E34552);
	op_hex		(x,	1);
	create_insn	(x=0X43E3455F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3458C);
	op_hex		(x,	1);
	create_insn	(x=0X43E345D1);
	op_hex		(x,	1);
	create_insn	(x=0X43E345D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E345E9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E34601);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E34618);
	op_hex		(x,	1);
	create_insn	(x=0X43E34653);
	op_hex		(x,	1);
	create_insn	(x=0X43E34656);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3468B);
	op_hex		(x,	1);
	create_insn	(x=0X43E3469C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E346A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E346E2);
	op_hex		(x,	1);
	create_insn	(0X43E346EC);
	create_insn	(x=0X43E346F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3472B);
	op_hex		(x,	1);
	create_insn	(x=0X43E3473C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3477C);
	op_hex		(x,	1);
	create_insn	(x=0X43E3478F);
	op_hex		(x,	1);
	make_array	(0X43E34799,	0X7);
	create_insn	(0X43E347A0);
	create_insn	(0X43E347C0);
	create_insn	(0X43E347E1);
	create_insn	(0X43E3480F);
	make_array	(0X43E34851,	0XF);
	create_insn	(0X43E34860);
	create_insn	(x=0X43E34863);
	op_hex		(x,	1);
	create_insn	(x=0X43E34893);
	op_hex		(x,	1);
	create_insn	(x=0X43E34899);
	op_hex		(x,	1);
	create_insn	(x=0X43E3489C);
	op_hex		(x,	1);
	create_insn	(x=0X43E348A7);
	op_hex		(x,	1);
	create_insn	(0X43E348BD);
	create_insn	(x=0X43E348D6);
	op_hex		(x,	1);
	create_insn	(0X43E3490B);
	create_insn	(x=0X43E34942);
	op_hex		(x,	1);
	create_insn	(x=0X43E34961);
	op_hex		(x,	1);
	create_insn	(x=0X43E3496C);
	op_hex		(x,	1);
	create_insn	(0X43E3498A);
	create_insn	(x=0X43E34998);
	op_hex		(x,	1);
	create_insn	(x=0X43E3499C);
	op_hex		(x,	1);
	create_insn	(x=0X43E349AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E349EF);
	op_hex		(x,	1);
	create_insn	(x=0X43E349F8);
	op_hex		(x,	1);
	create_insn	(x=0X43E349FD);
	op_hex		(x,	1);
	create_insn	(x=0X43E34A0F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E34A22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E34A30);
	op_hex		(x,	1);
	create_insn	(x=0X43E34A40);
	op_hex		(x,	1);
	create_insn	(x=0X43E34A4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E34A58);
	op_hex		(x,	1);
	create_insn	(x=0X43E34A60);
	op_hex		(x,	1);
	create_insn	(x=0X43E34A78);
	op_hex		(x,	1);
	create_insn	(x=0X43E34A80);
	op_hex		(x,	1);
	create_insn	(x=0X43E34AC8);
	op_hex		(x,	1);
	create_insn	(0X43E34AD0);
	set_cmt	(0X43E34AF3,	"switch 104 cases ",	0);
	create_insn	(x=0X43E34AF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E34B02,	"switch jump",	0);
	create_insn	(x=0X43E34B02);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E34B09,	"jumptable 43E34B02 case 71",	1);
	create_insn	(0X43E34B09);
	set_cmt	(0X43E34B0D,	"jumptable 43E34B02 cases 0,103",	1);
	create_insn	(x=0X43E34B2A);
	op_hex		(x,	1);
	set_cmt	(0X43E34B54,	"jumptable 43E34B02 default case, cases 1-68,72-100",	1);
	set_name	(0X43E34B54,	"def_43E34B02");
	set_cmt	(0X43E34B87,	"num",	0);
	set_cmt	(0X43E34B8A,	"value",	0);
	set_cmt	(0X43E34B8C,	"pointer",	0);
	create_insn	(x=0X43E34B95);
	op_hex		(x,	1);
	set_cmt	(0X43E34B9F,	"num",	0);
	set_cmt	(0X43E34BA4,	"value",	0);
	set_cmt	(0X43E34BA6,	"pointer",	0);
	create_insn	(x=0X43E34BAC);
	op_hex		(x,	1);
	set_cmt	(0X43E34BBF,	"jumptable 43E34B02 case 70",	1);
	create_insn	(0X43E34BBF);
	set_cmt	(0X43E34BC3,	"jumptable 43E34B02 case 102",	1);
	create_insn	(x=0X43E34BFD);
	op_hex		(x,	1);
	set_cmt	(0X43E34C0F,	"jumptable 43E34B02 cases 69,101",	1);
	create_insn	(0X43E34C0F);
	create_insn	(x=0X43E34C23);
	op_hex		(x,	1);
	create_insn	(0X43E34C2D);
	create_insn	(x=0X43E34C48);
	op_hex		(x,	1);
	set_cmt	(0X43E34C57,	"num",	0);
	set_cmt	(0X43E34C5D,	"value",	0);
	set_cmt	(0X43E34C5F,	"pointer",	0);
	create_insn	(x=0X43E34C65);
	op_hex		(x,	1);
	create_insn	(0X43E34C79);
	create_insn	(x=0X43E34C99);
	op_hex		(x,	1);
	set_cmt	(0X43E34CA7,	"num",	0);
	set_cmt	(0X43E34CAB,	"value",	0);
	set_cmt	(0X43E34CAD,	"pointer",	0);
	create_insn	(x=0X43E34CB3);
	op_hex		(x,	1);
	create_insn	(0X43E34CC5);
	create_insn	(x=0X43E34CD1);
	op_hex		(x,	1);
	set_cmt	(0X43E34CDC,	"jump table for switch statement",	0);
	create_dword	(x=0X43E34CDC);
	make_array	(x,	0X6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E34CDC,	"jpt_43E34B02");
	set_cmt	(0X43E34CF4,	"indirect table for switch statement",	0);
	create_byte	(0X43E34CF4);
	make_array	(0X43E34CF4,	0X68);
	make_array	(0X43E34D5C,	0X4);
	create_insn	(0X43E34D60);
	set_cmt	(0X43E34D81,	"num",	0);
	set_cmt	(0X43E34D85,	"value",	0);
	set_cmt	(0X43E34D87,	"pointer",	0);
	create_insn	(x=0X43E34D8D);
	op_hex		(x,	1);
	set_cmt	(0X43E34D99,	"num",	0);
	set_cmt	(0X43E34D9E,	"value",	0);
	set_cmt	(0X43E34DA0,	"pointer",	0);
	create_insn	(x=0X43E34DA6);
	op_hex		(x,	1);
	create_insn	(0X43E34DB9);
	create_insn	(x=0X43E34DD6);
	op_hex		(x,	1);
	set_cmt	(0X43E34DE3,	"num",	0);
	set_cmt	(0X43E34DE9,	"value",	0);
	set_cmt	(0X43E34DEB,	"pointer",	0);
	create_insn	(x=0X43E34DF1);
	op_hex		(x,	1);
	create_insn	(0X43E34E05);
	create_insn	(x=0X43E34E28);
	op_hex		(x,	1);
	set_cmt	(0X43E34E2F,	"num",	0);
	set_cmt	(0X43E34E33,	"value",	0);
	set_cmt	(0X43E34E35,	"pointer",	0);
	create_insn	(x=0X43E34E3B);
	op_hex		(x,	1);
	create_insn	(0X43E34E4F);
	create_insn	(x=0X43E34E5D);
	op_hex		(x,	1);
	make_array	(0X43E34E67,	0X9);
	create_insn	(0X43E34E70);
	create_insn	(x=0X43E34E94);
	op_hex		(x,	1);
	set_cmt	(0X43E34EAA,	"num",	0);
	set_cmt	(0X43E34EB0,	"value",	0);
	set_cmt	(0X43E34EB2,	"pointer",	0);
	create_insn	(x=0X43E34EBB);
	op_hex		(x,	1);
	create_insn	(0X43E34EC2);
	create_insn	(x=0X43E34ED7);
	op_hex		(x,	1);
	create_insn	(x=0X43E34EEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E34EEC);
	op_hex		(x,	1);
	create_insn	(x=0X43E34F1D);
	op_hex		(x,	1);
	create_insn	(x=0X43E34F22);
	op_hex		(x,	1);
	create_insn	(0X43E34F42);
	make_array	(0X43E34F69,	0X7);
	create_insn	(0X43E34F70);
	create_insn	(x=0X43E34F9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E34F9F);
	op_hex		(x,	1);
	create_insn	(0X43E34FCC);
	make_array	(0X43E34FE9,	0X7);
	create_insn	(0X43E34FF0);
	create_insn	(x=0X43E3500D);
	op_hex		(x,	1);
	make_array	(0X43E3501B,	0X5);
	create_insn	(0X43E35020);
	create_insn	(x=0X43E35023);
	op_hex		(x,	1);
	create_insn	(x=0X43E3503C);
	op_hex		(x,	1);
	create_insn	(x=0X43E3503F);
	op_hex		(x,	1);
	create_insn	(x=0X43E35045);
	op_hex		(x,	1);
	create_insn	(x=0X43E35053);
	op_hex		(x,	1);
	create_insn	(0X43E35066);
	create_insn	(x=0X43E3507F);
	op_hex		(x,	1);
	create_insn	(0X43E350AD);
	create_insn	(x=0X43E350DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E35100);
	op_hex		(x,	1);
	create_insn	(x=0X43E3510B);
	op_hex		(x,	1);
	create_insn	(0X43E35120);
	create_insn	(x=0X43E35130);
	op_hex		(x,	1);
	create_insn	(x=0X43E35134);
	op_hex		(x,	1);
	create_insn	(x=0X43E3513A);
	op_hex		(x,	1);
	create_insn	(x=0X43E3517D);
	op_hex		(x,	1);
	create_insn	(x=0X43E3518E);
	op_hex		(x,	1);
	create_insn	(x=0X43E35193);
	op_hex		(x,	1);
	create_insn	(x=0X43E351A5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E351B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E351C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E351D1);
	op_hex		(x,	1);
	create_insn	(x=0X43E351DB);
	op_hex		(x,	1);
	create_insn	(x=0X43E351E9);
	op_hex		(x,	1);
	create_insn	(x=0X43E351F1);
	op_hex		(x,	1);
	create_insn	(x=0X43E35209);
	op_hex		(x,	1);
	create_insn	(x=0X43E35211);
	op_hex		(x,	1);
	create_insn	(x=0X43E35254);
	op_hex		(x,	1);
	make_array	(0X43E3525E,	0X2);
	create_insn	(0X43E35260);
	create_insn	(x=0X43E35263);
	op_hex		(x,	1);
	create_insn	(x=0X43E352B9);
	op_hex		(x,	1);
	create_insn	(x=0X43E352D2);
	op_hex		(x,	1);
	set_cmt	(0X43E352F7,	"switch 10 cases ",	0);
	set_cmt	(0X43E35303,	"switch jump",	0);
	create_insn	(x=0X43E35303);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E3530A,	"jumptable 43E35303 case 10",	1);
	create_insn	(0X43E3530A);
	create_insn	(x=0X43E35315);
	op_hex		(x,	1);
	create_insn	(x=0X43E3531C);
	op_hex		(x,	1);
	set_cmt	(0X43E3532C,	"jumptable 43E35303 case 9",	1);
	create_insn	(0X43E3532C);
	create_insn	(x=0X43E35338);
	op_hex		(x,	1);
	set_cmt	(0X43E35348,	"jumptable 43E35303 case 8",	1);
	create_insn	(0X43E35348);
	create_insn	(x=0X43E35354);
	op_hex		(x,	1);
	set_cmt	(0X43E35364,	"jumptable 43E35303 case 7",	1);
	create_insn	(0X43E35364);
	create_insn	(x=0X43E35370);
	op_hex		(x,	1);
	set_cmt	(0X43E35380,	"jumptable 43E35303 case 6",	1);
	create_insn	(0X43E35380);
	create_insn	(x=0X43E3538B);
	op_hex		(x,	1);
	create_insn	(x=0X43E35392);
	op_hex		(x,	1);
	set_cmt	(0X43E3539F,	"jumptable 43E35303 case 5",	1);
	create_insn	(0X43E3539F);
	create_insn	(x=0X43E353AB);
	op_hex		(x,	1);
	set_cmt	(0X43E353B8,	"jumptable 43E35303 case 4",	1);
	create_insn	(0X43E353B8);
	create_insn	(x=0X43E353C4);
	op_hex		(x,	1);
	set_cmt	(0X43E353D1,	"jumptable 43E35303 case 3",	1);
	create_insn	(0X43E353D1);
	create_insn	(x=0X43E353DD);
	op_hex		(x,	1);
	set_cmt	(0X43E353E7,	"jumptable 43E35303 case 2",	1);
	create_insn	(0X43E353E7);
	create_insn	(x=0X43E353F3);
	op_hex		(x,	1);
	set_cmt	(0X43E353FD,	"jumptable 43E35303 case 1",	1);
	create_insn	(0X43E353FD);
	set_cmt	(0X43E35405,	"jumptable 43E35303 default case",	1);
	set_name	(0X43E35405,	"def_43E35303");
	create_insn	(x=0X43E35455);
	op_hex		(x,	1);
	create_insn	(x=0X43E35459);
	op_hex		(x,	1);
	create_insn	(x=0X43E3546C);
	op_hex		(x,	1);
	create_insn	(x=0X43E35470);
	op_hex		(x,	1);
	create_insn	(x=0X43E35474);
	op_hex		(x,	1);
	create_insn	(x=0X43E35485);
	op_hex		(x,	1);
	set_cmt	(0X43E354D4,	"jump table for switch statement",	0);
	create_dword	(x=0X43E354D4);
	make_array	(x,	0XA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E354D4,	"jpt_43E35303");
	make_array	(0X43E354FC,	0X4);
	create_insn	(0X43E35500);
	create_insn	(x=0X43E35503);
	op_hex		(x,	1);
	create_insn	(x=0X43E35513);
	op_hex		(x,	1);
	create_insn	(x=0X43E35533);
	op_hex		(x,	1);
	create_insn	(x=0X43E35544);
	op_hex		(x,	1);
	create_insn	(x=0X43E3554A);
	op_hex		(x,	1);
	make_array	(0X43E3557C,	0X4);
	create_insn	(0X43E35580);
	create_insn	(x=0X43E35583);
	op_hex		(x,	1);
	make_array	(0X43E35612,	0XE);
	create_insn	(0X43E35620);
	create_insn	(x=0X43E35623);
	op_hex		(x,	1);
	create_insn	(x=0X43E3565B);
	op_hex		(x,	1);
	create_insn	(x=0X43E35668);
	op_hex		(x,	1);
	create_insn	(x=0X43E35679);
	op_hex		(x,	1);
	create_insn	(x=0X43E3567E);
	op_hex		(x,	1);
	create_insn	(x=0X43E356A7);
	op_hex		(x,	1);
	create_insn	(x=0X43E356AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E356B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E356CF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E356E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E356E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E356F9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3570F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E35722);
	op_hex		(x,	1);
	make_array	(0X43E35737,	0X9);
	create_insn	(0X43E35740);
	create_insn	(x=0X43E35756);
	op_hex		(x,	1);
	make_array	(0X43E3577D,	0X3);
	create_insn	(0X43E35780);
	create_insn	(x=0X43E35783);
	op_hex		(x,	1);
	create_insn	(x=0X43E35795);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E357D1);
	op_hex		(x,	1);
	create_insn	(x=0X43E357D6);
	op_hex		(x,	1);
	create_insn	(x=0X43E357DE);
	op_hex		(x,	1);
	create_insn	(x=0X43E357E1);
	op_hex		(x,	1);
	create_insn	(x=0X43E357E7);
	op_hex		(x,	1);
	create_insn	(x=0X43E357E9);
	op_hex		(x,	1);
	create_insn	(x=0X43E357EC);
	op_hex		(x,	1);
	create_insn	(x=0X43E3580B);
	op_stkvar	(x,	0);
	set_cmt	(0X43E3581C,	"_DWORD",	0);
	set_cmt	(0X43E3581D,	"_DWORD",	0);
	create_insn	(x=0X43E3581E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E35828);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E35879);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E35890);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3589A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E358A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E358A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E358AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E358AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E358B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E358B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E358C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E358C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E358CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E358DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E358E6);
	op_stkvar	(x,	0);
	set_cmt	(0X43E358F0,	"_DWORD",	0);
	set_cmt	(0X43E358F1,	"_DWORD",	0);
	create_insn	(x=0X43E358FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3592A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3593A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3593F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E35952);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E35961);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E35968);
	op_hex		(x,	1);
	create_insn	(x=0X43E3596B);
	op_hex		(x,	1);
	create_insn	(0X43E35972);
	create_insn	(x=0X43E3597A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E35981);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E35984);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E35988);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E35990);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3599D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E359A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E359A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E359A9);
	op_stkvar	(x,	0);
	set_cmt	(0X43E359AF,	"_DWORD",	0);
	create_insn	(x=0X43E359AF);
	op_stkvar	(x,	0);
	set_cmt	(0X43E359BA,	"_DWORD",	0);
	create_insn	(x=0X43E359BA);
	op_stkvar	(x,	0);
	make_array	(0X43E359CD,	0X3);
	create_insn	(0X43E359D0);
	create_insn	(x=0X43E359D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E359D6);
	op_hex		(x,	1);
	create_insn	(x=0X43E359D9);
	op_hex		(x,	1);
	create_insn	(x=0X43E359E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E359EC);
	op_hex		(x,	1);
	create_insn	(x=0X43E35A18);
	op_hex		(x,	1);
	create_insn	(0X43E35A36);
	create_insn	(x=0X43E35A3C);
	op_hex		(x,	1);
	create_insn	(0X43E35A5C);
	create_insn	(x=0X43E35A62);
	op_hex		(x,	1);
	create_insn	(0X43E35A78);
	create_insn	(0X43E35A83);
	create_insn	(0X43E35AA9);
	create_insn	(0X43E35AFD);
	create_insn	(x=0X43E35B10);
	op_hex		(x,	1);
	create_insn	(x=0X43E35B5C);
	op_hex		(x,	1);
	create_insn	(x=0X43E35B67);
	op_hex		(x,	1);
	create_insn	(x=0X43E35B73);
	op_hex		(x,	1);
	create_insn	(x=0X43E35B78);
	op_hex		(x,	1);
	create_insn	(0X43E35D62);
	create_insn	(0X43E35DB4);
	create_insn	(0X43E35E0A);
	create_insn	(x=0X43E35E34);
	op_hex		(x,	1);
	create_insn	(x=0X43E35E3F);
	op_hex		(x,	1);
	create_insn	(x=0X43E35E48);
	op_hex		(x,	1);
	create_insn	(0X43E35EBE);
	create_insn	(0X43E35F0B);
	create_insn	(0X43E35F61);
	make_array	(0X43E35FC7,	0X9);
	create_insn	(0X43E35FD0);
	create_insn	(0X43E36060);
	create_insn	(0X43E360B1);
	make_array	(0X43E36113,	0XD);
	create_insn	(0X43E36120);
	create_insn	(x=0X43E36123);
	op_hex		(x,	1);
	create_insn	(x=0X43E36126);
	op_hex		(x,	1);
	create_insn	(x=0X43E36133);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E36138);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3613F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E36143);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E36148);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E36159);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3615F);
	op_hex		(x,	1);
	create_insn	(x=0X43E36170);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E36176);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3617A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E36182);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E36185);
	op_hex		(x,	1);
	create_insn	(x=0X43E36188);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3618C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E361A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E361B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E361B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E361BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E361C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E361D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E361D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E361D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E361EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E361EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E361F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E36200);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E36204);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3620B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E36226);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E36231);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E36242);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3624E);
	op_hex		(x,	1);
	create_insn	(x=0X43E36288);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E362AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E362D5);
	op_stkvar	(x,	1);
	create_insn	(0X43E362ED);
	create_insn	(0X43E362FB);
	create_insn	(x=0X43E362FD);
	op_hex		(x,	1);
	make_array	(0X43E36307,	0X9);
	create_insn	(0X43E36310);
	create_insn	(x=0X43E3633F);
	op_hex		(x,	1);
	create_insn	(x=0X43E36344);
	op_hex		(x,	1);
	create_insn	(x=0X43E3634C);
	op_hex		(x,	1);
	create_insn	(x=0X43E3634F);
	op_hex		(x,	1);
	create_insn	(x=0X43E36355);
	op_hex		(x,	1);
	create_insn	(x=0X43E36357);
	op_hex		(x,	1);
	create_insn	(x=0X43E3635A);
	op_hex		(x,	1);
	make_array	(0X43E36384,	0XC);
	create_insn	(0X43E36390);
	create_insn	(x=0X43E36430);
	op_hex		(x,	1);
	make_array	(0X43E3643A,	0X6);
	create_insn	(0X43E36440);
	create_insn	(x=0X43E36443);
	op_hex		(x,	1);
	create_insn	(x=0X43E36497);
	op_hex		(x,	1);
	create_insn	(x=0X43E364C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E364DD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E36529);
	op_hex		(x,	1);
	create_insn	(x=0X43E3655A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3656F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43E3658D,	0X3);
	create_insn	(0X43E36590);
	create_insn	(x=0X43E36593);
	op_hex		(x,	1);
	set_cmt	(0X43E3659B,	"num",	0);
	set_cmt	(0X43E365A8,	"value",	0);
	set_cmt	(0X43E365AA,	"pointer",	0);
	create_insn	(x=0X43E365B0);
	op_hex		(x,	1);
	set_cmt	(0X43E365EF,	"a3",	0);
	set_cmt	(0X43E365F0,	"a2",	0);
	set_cmt	(0X43E365F1,	"this",	0);
	create_insn	(x=0X43E36637);
	op_hex		(x,	1);
	create_insn	(x=0X43E366A4);
	op_hex		(x,	1);
	create_insn	(x=0X43E36707);
	op_hex		(x,	1);
	create_insn	(x=0X43E3673C);
	op_hex		(x,	1);
	create_insn	(x=0X43E36771);
	op_hex		(x,	1);
	create_insn	(x=0X43E3679E);
	op_hex		(x,	1);
	create_insn	(x=0X43E367CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E36803);
	op_hex		(x,	1);
	make_array	(0X43E3680E,	0X2);
	create_insn	(0X43E36810);
	set_name	(0X43E36810,	"OneTap::Features::Hooks::FrameStageNotify");
	create_insn	(x=0X43E36813);
	op_hex		(x,	1);
	set_cmt	(0X43E36818,	"stage",	0);
	create_insn	(x=0X43E3681D);
	op_stkvar	(x,	0);
	set_cmt	(0X43E36825,	"interface",	0);
	set_cmt	(0X43E3682B,	"index",	0);
	create_insn	(x=0X43E36837);
	op_stkvar	(x,	1);
	set_cmt	(0X43E36850,	"a1",	0);
	create_insn	(x=0X43E36879);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E36899);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3689E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E368A5,	"a1",	0);
	set_cmt	(0X43E368C5,	"_DWORD",	0);
	set_cmt	(0X43E368C6,	"_DWORD",	0);
	set_cmt	(0X43E368C8,	"_DWORD",	0);
	create_insn	(x=0X43E368E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E368F3);
	make_array	(0X43E3695C,	0X4);
	create_insn	(0X43E36960);
	set_cmt	(0X43E3696F,	"interface",	0);
	set_cmt	(0X43E36975,	"index",	0);
	create_insn	(0X43E369A1);
	create_insn	(x=0X43E369C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E369CA);
	op_hex		(x,	1);
	make_array	(0X43E369D5,	0XB);
	create_insn	(0X43E369E0);
	set_name	(0X43E369E0,	"OneTap::Features::Hooks::FrameStageNofity::Post");
	create_insn	(x=0X43E369E3);
	op_hex		(x,	1);
	set_cmt	(0X43E36A0C,	"index",	0);
	set_cmt	(0X43E36A0F,	"interface",	0);
	set_cmt	(0X43E36A1C,	"this",	0);
	set_cmt	(0X43E36A36,	"index",	0);
	set_cmt	(0X43E36A3B,	"interface",	0);
	set_cmt	(0X43E36A48,	"this",	0);
	set_cmt	(0X43E36A54,	"m_pPlayer",	0);
	set_cmt	(0X43E36A6A,	"interface",	0);
	create_insn	(x=0X43E36A72);
	op_stkvar	(x,	1);
	set_cmt	(0X43E36A75,	"a2",	0);
	create_insn	(0X43E36A7F);
	set_cmt	(0X43E36A85,	"index",	0);
	set_cmt	(0X43E36A91,	"this",	0);
	set_cmt	(0X43E36AA8,	"propHash",	0);
	set_cmt	(0X43E36AAD,	"classHash",	0);
	create_insn	(x=0X43E36AC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E36AC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E36ACB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E36AD0);
	op_stkvar	(x,	0);
	set_cmt	(0X43E36ADD,	"index",	0);
	set_cmt	(0X43E36AE2,	"interface",	0);
	set_cmt	(0X43E36AEF,	"this",	0);
	create_insn	(x=0X43E36B03);
	op_hex		(x,	1);
	set_cmt	(0X43E36B08,	"propHash",	0);
	create_insn	(x=0X43E36B0D);
	op_hex		(x,	1);
	set_cmt	(0X43E36B10,	"classHash",	0);
	create_insn	(0X43E36B2A);
	set_cmt	(0X43E36B4A,	"interface",	0);
	create_insn	(0X43E36B4A);
	set_cmt	(0X43E36B50,	"index",	0);
	set_cmt	(0X43E36B66,	"index",	0);
	set_cmt	(0X43E36B6B,	"interface",	0);
	set_cmt	(0X43E36B78,	"this",	0);
	create_insn	(x=0X43E36B98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E36B9D);
	op_stkvar	(x,	0);
	set_cmt	(0X43E36BA0,	"this",	0);
	create_insn	(x=0X43E36BBF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E36BCE);
	op_stkvar	(x,	0);
	make_array	(0X43E36BDD,	0X3);
	create_insn	(0X43E36BE0);
	set_name	(0X43E36BE0,	"OneTap::Features::Hooks::FrameStageNofity::Pre");
	create_insn	(x=0X43E36BE3);
	op_hex		(x,	1);
	create_insn	(x=0X43E36BE6);
	op_hex		(x,	1);
	set_cmt	(0X43E36BEA,	"player",	0);
	set_cmt	(0X43E36BF7,	"interface",	0);
	set_cmt	(0X43E36BFD,	"index",	0);
	create_insn	(x=0X43E36C13);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E36C1B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E36C43,	"index",	0);
	set_cmt	(0X43E36C48,	"interface",	0);
	set_cmt	(0X43E36C55,	"this",	0);
	create_insn	(x=0X43E36C9E);
	op_stkvar	(x,	0);
	set_cmt	(0X43E36CC9,	"index",	0);
	set_cmt	(0X43E36CCE,	"interface",	0);
	set_cmt	(0X43E36CDB,	"this",	0);
	set_cmt	(0X43E36CF5,	"index",	0);
	set_cmt	(0X43E36CFA,	"interface",	0);
	set_cmt	(0X43E36D07,	"this",	0);
	create_insn	(0X43E36D21);
	create_insn	(x=0X43E36D26);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E36D31);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E36D35);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E36D3B);
	op_stkvar	(x,	1);
	create_insn	(0X43E36D4D);
	create_insn	(x=0X43E36D51);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E36D55);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E36D5B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E36D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E36D78);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E36D7E);
	op_stkvar	(x,	1);
	set_cmt	(0X43E36D92,	"index",	0);
	set_cmt	(0X43E36D97,	"interface",	0);
	set_cmt	(0X43E36DA4,	"this",	0);
	set_cmt	(0X43E36DC0,	"this",	0);
	create_insn	(0X43E36E28);
	set_cmt	(0X43E36E2D,	"index",	0);
	set_cmt	(0X43E36E32,	"interface",	0);
	set_cmt	(0X43E36E8E,	"index",	0);
	set_cmt	(0X43E36E93,	"interface",	0);
	set_cmt	(0X43E36EA0,	"this",	0);
	set_cmt	(0X43E36EB4,	"this",	0);
	set_cmt	(0X43E36EE0,	"this",	0);
	create_insn	(x=0X43E36EF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E36F08,	"index",	0);
	set_cmt	(0X43E36F0D,	"interface",	0);
	set_cmt	(0X43E36F20,	"this",	0);
	set_cmt	(0X43E36F32,	"player",	0);
	set_cmt	(0X43E36F39,	"interface",	0);
	set_cmt	(0X43E36F3F,	"index",	0);
	set_cmt	(0X43E36F68,	"index",	0);
	set_cmt	(0X43E36F6D,	"interface",	0);
	set_cmt	(0X43E36F7A,	"this",	0);
	create_insn	(x=0X43E36FA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E36FA5);
	op_stkvar	(x,	0);
	set_cmt	(0X43E36FB0,	"this",	0);
	create_insn	(x=0X43E36FC0);
	op_stkvar	(x,	0);
	set_cmt	(0X43E36FD2,	"index",	0);
	set_cmt	(0X43E36FD7,	"interface",	0);
	set_cmt	(0X43E36FE4,	"this",	0);
	create_insn	(x=0X43E36FF0);
	op_stkvar	(x,	1);
	set_cmt	(0X43E36FFC,	"m_player",	0);
	set_cmt	(0X43E37010,	"propHash",	0);
	set_cmt	(0X43E37015,	"classHash",	0);
	set_cmt	(0X43E37033,	"propHash",	0);
	set_cmt	(0X43E37038,	"classHash",	0);
	create_insn	(0X43E37064);
	create_insn	(x=0X43E37071);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E37079);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3707D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3708B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E37095);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E370AA,	"index",	0);
	set_cmt	(0X43E370AF,	"interface",	0);
	set_cmt	(0X43E370BC,	"this",	0);
	create_insn	(x=0X43E370D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E370E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E370F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3711B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3715C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3717E);
	op_stkvar	(x,	1);
	set_cmt	(0X43E3718A,	"interface",	0);
	create_insn	(0X43E3718A);
	create_insn	(x=0X43E371AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E371AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E371B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E371B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E371BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E371C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E371CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E371E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E371E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E371E8);
	op_hex		(x,	1);
	create_insn	(x=0X43E371EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E371F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E371FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E37203);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E37209);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E37211);
	op_stkvar	(x,	1);
	create_insn	(0X43E37224);
	create_insn	(0X43E37237);
	set_cmt	(0X43E3723F,	"index",	0);
	create_insn	(x=0X43E37244);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3724F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E37253);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E37257);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3725D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E37261);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3726B);
	op_hex		(x,	1);
	create_insn	(x=0X43E3727C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3729B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3729F);
	op_stkvar	(x,	0);
	set_cmt	(0X43E372C6,	"propHash",	0);
	set_cmt	(0X43E372CB,	"classHash",	0);
	create_insn	(x=0X43E372D5);
	op_stkvar	(x,	1);
	set_cmt	(0X43E37312,	"propHash",	0);
	set_cmt	(0X43E37317,	"classHash",	0);
	create_insn	(x=0X43E37321);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E37336);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3735F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3736F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E3738C,	"index",	0);
	set_cmt	(0X43E37391,	"interface",	0);
	set_cmt	(0X43E3739E,	"this",	0);
	set_cmt	(0X43E373B2,	"interface",	0);
	set_cmt	(0X43E373B8,	"index",	0);
	set_cmt	(0X43E373D1,	"this",	0);
	set_cmt	(0X43E373F7,	"propHash",	0);
	set_cmt	(0X43E373FC,	"classHash",	0);
	set_cmt	(0X43E3741A,	"propHash",	0);
	set_cmt	(0X43E3741F,	"classHash",	0);
	set_cmt	(0X43E37434,	"m_player",	0);
	set_cmt	(0X43E37448,	"propHash",	0);
	set_cmt	(0X43E3744D,	"classHash",	0);
	create_insn	(0X43E37470);
	set_cmt	(0X43E37476,	"index",	0);
	set_cmt	(0X43E3747B,	"interface",	0);
	set_cmt	(0X43E37488,	"this",	0);
	create_insn	(x=0X43E374B5);
	op_stkvar	(x,	0);
	set_cmt	(0X43E374CF,	"index",	0);
	set_cmt	(0X43E374D4,	"interface",	0);
	set_cmt	(0X43E374E1,	"this",	0);
	set_cmt	(0X43E374F8,	"propHash",	0);
	set_cmt	(0X43E374FD,	"classHash",	0);
	create_insn	(x=0X43E3751D);
	op_hex		(x,	1);
	create_insn	(x=0X43E37533);
	op_stkvar	(x,	1);
	make_array	(0X43E37548,	0X8);
	create_insn	(0X43E37550);
	create_insn	(x=0X43E37559);
	op_hex		(x,	1);
	create_insn	(x=0X43E3755D);
	op_hex		(x,	1);
	create_insn	(x=0X43E37583);
	op_hex		(x,	1);
	create_insn	(x=0X43E37587);
	op_hex		(x,	1);
	create_insn	(x=0X43E375C7);
	op_hex		(x,	1);
	create_insn	(x=0X43E375CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E375CF);
	op_hex		(x,	1);
	set_cmt	(0X43E375E0,	"index",	0);
	set_cmt	(0X43E375E5,	"interface",	0);
	set_cmt	(0X43E375F2,	"this",	0);
	set_cmt	(0X43E3760C,	"index",	0);
	set_cmt	(0X43E37611,	"interface",	0);
	set_cmt	(0X43E3761E,	"this",	0);
	set_cmt	(0X43E37635,	"propHash",	0);
	set_cmt	(0X43E3763A,	"classHash",	0);
	set_cmt	(0X43E3764E,	"index",	0);
	set_cmt	(0X43E37653,	"interface",	0);
	set_cmt	(0X43E3768A,	"this",	0);
	set_cmt	(0X43E376A1,	"propHash",	0);
	set_cmt	(0X43E376A6,	"classHash",	0);
	create_insn	(x=0X43E376DE);
	op_hex		(x,	1);
	create_insn	(x=0X43E376E9);
	op_hex		(x,	1);
	set_cmt	(0X43E376F4,	"index",	0);
	set_cmt	(0X43E376F9,	"interface",	0);
	set_cmt	(0X43E37706,	"this",	0);
	set_cmt	(0X43E3771D,	"propHash",	0);
	set_cmt	(0X43E37722,	"classHash",	0);
	create_insn	(x=0X43E3774E);
	op_hex		(x,	1);
	create_insn	(x=0X43E37751);
	op_hex		(x,	1);
	set_cmt	(0X43E3775C,	"index",	0);
	set_cmt	(0X43E37761,	"interface",	0);
	set_cmt	(0X43E3776E,	"this",	0);
	set_cmt	(0X43E37785,	"propHash",	0);
	set_cmt	(0X43E3778A,	"classHash",	0);
	set_cmt	(0X43E377BD,	"index",	0);
	set_cmt	(0X43E377C2,	"interface",	0);
	set_cmt	(0X43E377CF,	"this",	0);
	set_cmt	(0X43E377E9,	"index",	0);
	set_cmt	(0X43E377EE,	"interface",	0);
	set_cmt	(0X43E377FB,	"this",	0);
	set_cmt	(0X43E37807,	"m_pPlayer",	0);
	set_cmt	(0X43E37818,	"index",	0);
	set_cmt	(0X43E3781D,	"interface",	0);
	set_cmt	(0X43E3782A,	"this",	0);
	set_cmt	(0X43E37841,	"propHash",	0);
	set_cmt	(0X43E37846,	"classHash",	0);
	create_insn	(0X43E37868);
	create_insn	(0X43E37878);
	set_cmt	(0X43E37887,	"index",	0);
	set_cmt	(0X43E3788A,	"interface",	0);
	set_cmt	(0X43E37897,	"this",	0);
	set_cmt	(0X43E378B1,	"index",	0);
	set_cmt	(0X43E378B6,	"interface",	0);
	set_cmt	(0X43E378C3,	"this",	0);
	set_cmt	(0X43E378CF,	"m_pPlayer",	0);
	set_cmt	(0X43E378E2,	"index",	0);
	set_cmt	(0X43E378ED,	"interface",	0);
	set_cmt	(0X43E378FF,	"this",	0);
	set_cmt	(0X43E37916,	"propHash",	0);
	set_cmt	(0X43E3791B,	"classHash",	0);
	set_cmt	(0X43E37948,	"index",	0);
	set_cmt	(0X43E3794D,	"interface",	0);
	set_cmt	(0X43E3795A,	"this",	0);
	set_cmt	(0X43E37971,	"propHash",	0);
	set_cmt	(0X43E37976,	"classHash",	0);
	set_cmt	(0X43E3798D,	"index",	0);
	set_cmt	(0X43E379B9,	"interface",	0);
	set_cmt	(0X43E379C6,	"this",	0);
	set_cmt	(0X43E379DD,	"propHash",	0);
	set_cmt	(0X43E379E2,	"classHash",	0);
	make_array	(0X43E37A26,	0XA);
	set_cmt	(0X43E37A30,	"interface",	0);
	create_insn	(0X43E37A30);
	set_cmt	(0X43E37A36,	"index",	0);
	set_cmt	(0X43E37A49,	"this",	0);
	set_cmt	(0X43E37A8E,	"index",	0);
	set_cmt	(0X43E37A93,	"interface",	0);
	set_cmt	(0X43E37AA0,	"this",	0);
	set_cmt	(0X43E37AB7,	"propHash",	0);
	set_cmt	(0X43E37ABC,	"classHash",	0);
	create_insn	(x=0X43E37ADC);
	op_hex		(x,	1);
	make_array	(0X43E37B02,	0XE);
	create_insn	(0X43E37B10);
	create_insn	(x=0X43E37B13);
	op_hex		(x,	1);
	create_insn	(x=0X43E37B16);
	op_hex		(x,	1);
	create_insn	(x=0X43E37B19);
	op_hex		(x,	1);
	create_insn	(x=0X43E37B2B);
	op_hex		(x,	1);
	create_insn	(x=0X43E37B31);
	op_hex		(x,	1);
	create_insn	(x=0X43E37B34);
	op_hex		(x,	1);
	create_insn	(x=0X43E37B40);
	op_hex		(x,	1);
	set_cmt	(0X43E37B44,	"propHash",	0);
	create_insn	(x=0X43E37B49);
	op_hex		(x,	1);
	set_cmt	(0X43E37B4C,	"classHash",	0);
	set_cmt	(0X43E37B66,	"index",	0);
	set_cmt	(0X43E37B6B,	"interface",	0);
	set_cmt	(0X43E37B78,	"this",	0);
	create_insn	(x=0X43E37BEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E37C67);
	op_hex		(x,	1);
	create_insn	(x=0X43E37CEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E37D69);
	op_hex		(x,	1);
	set_cmt	(0X43E37D84,	"Size",	0);
	create_insn	(x=0X43E37DA4);
	op_hex		(x,	1);
	create_insn	(x=0X43E37DD5);
	op_hex		(x,	1);
	create_insn	(x=0X43E37E21);
	op_hex		(x,	1);
	create_insn	(x=0X43E37E6C);
	op_hex		(x,	1);
	create_insn	(x=0X43E37EBA);
	op_hex		(x,	1);
	set_cmt	(0X43E37EC3,	"index",	0);
	set_cmt	(0X43E37EC8,	"interface",	0);
	set_cmt	(0X43E37ED9,	"this",	0);
	set_cmt	(0X43E37EF3,	"index",	0);
	set_cmt	(0X43E37EF8,	"interface",	0);
	set_cmt	(0X43E37F05,	"this",	0);
	create_insn	(x=0X43E37F22);
	op_hex		(x,	1);
	create_insn	(x=0X43E37F8C);
	op_hex		(x,	1);
	create_insn	(x=0X43E37FF4);
	op_hex		(x,	1);
	create_insn	(x=0X43E3809C);
	op_hex		(x,	1);
	create_insn	(x=0X43E38104);
	op_hex		(x,	1);
	create_insn	(x=0X43E38165);
	op_hex		(x,	1);
	make_array	(0X43E38171,	0XF);
	create_insn	(0X43E38180);
	create_insn	(x=0X43E38183);
	op_hex		(x,	1);
	create_insn	(x=0X43E38186);
	op_hex		(x,	1);
	create_insn	(x=0X43E38189);
	op_hex		(x,	1);
	create_insn	(x=0X43E38196);
	op_hex		(x,	1);
	create_insn	(0X43E38228);
	create_insn	(0X43E38250);
	make_array	(0X43E3828D,	0X3);
	create_insn	(0X43E38290);
	create_insn	(x=0X43E38293);
	op_hex		(x,	1);
	create_insn	(x=0X43E38296);
	op_hex		(x,	1);
	create_insn	(x=0X43E38299);
	op_hex		(x,	1);
	create_insn	(x=0X43E382AB);
	op_hex		(x,	1);
	create_insn	(0X43E382BF);
	set_cmt	(0X43E382D4,	"index",	0);
	set_cmt	(0X43E382D9,	"interface",	0);
	set_cmt	(0X43E382EB,	"this",	0);
	set_cmt	(0X43E38305,	"index",	0);
	set_cmt	(0X43E3830A,	"interface",	0);
	set_cmt	(0X43E38317,	"this",	0);
	create_insn	(0X43E3833A);
	create_insn	(x=0X43E3834B);
	op_hex		(x,	1);
	set_cmt	(0X43E38354,	"interface",	0);
	set_cmt	(0X43E3835A,	"index",	0);
	set_cmt	(0X43E3836E,	"interface",	0);
	set_cmt	(0X43E38374,	"index",	0);
	create_insn	(x=0X43E383F7);
	op_hex		(x,	1);
	create_insn	(x=0X43E38421);
	op_hex		(x,	1);
	create_insn	(x=0X43E38450);
	op_hex		(x,	1);
	set_cmt	(0X43E38479,	"interface",	0);
	set_cmt	(0X43E3847F,	"index",	0);
	create_insn	(0X43E384A3);
	make_array	(0X43E384A9,	0X7);
	create_insn	(0X43E384B0);
	create_insn	(x=0X43E384B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E384B6);
	op_hex		(x,	1);
	create_insn	(x=0X43E384B9);
	op_hex		(x,	1);
	create_insn	(x=0X43E384C6);
	op_hex		(x,	1);
	create_insn	(0X43E384E9);
	set_cmt	(0X43E384FE,	"index",	0);
	set_cmt	(0X43E38503,	"interface",	0);
	set_cmt	(0X43E38515,	"this",	0);
	set_cmt	(0X43E3852F,	"index",	0);
	set_cmt	(0X43E38534,	"interface",	0);
	set_cmt	(0X43E38541,	"this",	0);
	create_insn	(0X43E38564);
	create_insn	(x=0X43E38575);
	op_hex		(x,	1);
	set_cmt	(0X43E3857E,	"interface",	0);
	set_cmt	(0X43E38584,	"index",	0);
	set_cmt	(0X43E38598,	"interface",	0);
	set_cmt	(0X43E385A4,	"index",	0);
	set_cmt	(0X43E385E3,	"interface",	0);
	set_cmt	(0X43E385E9,	"index",	0);
	create_insn	(x=0X43E3864A);
	op_hex		(x,	1);
	set_cmt	(0X43E38669,	"_DWORD",	0);
	set_cmt	(0X43E3866A,	"_DWORD",	0);
	create_insn	(x=0X43E38670);
	op_hex		(x,	1);
	create_insn	(x=0X43E386A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E386E7);
	op_hex		(x,	1);
	create_insn	(x=0X43E38711);
	op_hex		(x,	1);
	create_insn	(x=0X43E38744);
	op_hex		(x,	1);
	create_insn	(x=0X43E38789);
	op_hex		(x,	1);
	create_insn	(x=0X43E387C7);
	op_hex		(x,	1);
	set_cmt	(0X43E387EC,	"_DWORD",	0);
	set_cmt	(0X43E387ED,	"_DWORD",	0);
	create_insn	(x=0X43E387F0);
	op_hex		(x,	1);
	create_insn	(0X43E387FC);
	create_insn	(x=0X43E38809);
	op_hex		(x,	1);
	create_insn	(x=0X43E38810);
	op_hex		(x,	1);
	create_insn	(x=0X43E38844);
	op_hex		(x,	1);
	create_insn	(x=0X43E3888D);
	op_hex		(x,	1);
	create_insn	(x=0X43E388C7);
	op_hex		(x,	1);
	set_cmt	(0X43E388EC,	"_DWORD",	0);
	set_cmt	(0X43E388ED,	"_DWORD",	0);
	create_insn	(x=0X43E388F0);
	op_hex		(x,	1);
	create_insn	(0X43E388FC);
	create_insn	(x=0X43E38909);
	op_hex		(x,	1);
	create_insn	(x=0X43E38910);
	op_hex		(x,	1);
	create_insn	(x=0X43E38944);
	op_hex		(x,	1);
	create_insn	(x=0X43E38987);
	op_hex		(x,	1);
	set_cmt	(0X43E389A6,	"_DWORD",	0);
	set_cmt	(0X43E389A7,	"_DWORD",	0);
	create_insn	(x=0X43E389AD);
	op_hex		(x,	1);
	create_insn	(x=0X43E389E0);
	op_hex		(x,	1);
	create_insn	(x=0X43E389F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E38A4A);
	op_hex		(x,	1);
	set_cmt	(0X43E38A69,	"_DWORD",	0);
	set_cmt	(0X43E38A6A,	"_DWORD",	0);
	create_insn	(x=0X43E38A73);
	op_hex		(x,	1);
	create_insn	(x=0X43E38A7B);
	op_hex		(x,	1);
	create_insn	(x=0X43E38AB7);
	op_hex		(x,	1);
	set_cmt	(0X43E38AD6,	"_DWORD",	0);
	set_cmt	(0X43E38AD7,	"_DWORD",	0);
	create_insn	(x=0X43E38ADF);
	op_hex		(x,	1);
	create_insn	(x=0X43E38AF1);
	op_hex		(x,	1);
	create_insn	(x=0X43E38AF8);
	op_hex		(x,	1);
	create_insn	(x=0X43E38B2F);
	op_hex		(x,	1);
	create_insn	(x=0X43E38B47);
	op_hex		(x,	1);
	create_insn	(x=0X43E38B7B);
	op_hex		(x,	1);
	create_insn	(x=0X43E38BD7);
	op_hex		(x,	1);
	set_cmt	(0X43E38BF6,	"_DWORD",	0);
	set_cmt	(0X43E38BFA,	"_DWORD",	0);
	create_insn	(x=0X43E38C00);
	op_hex		(x,	1);
	create_insn	(x=0X43E38C2F);
	op_hex		(x,	1);
	set_cmt	(0X43E38C60,	"interface",	0);
	set_cmt	(0X43E38C66,	"index",	0);
	create_insn	(0X43E38C8D);
	make_array	(0X43E38C93,	0XD);
	create_insn	(0X43E38CA0);
	set_cmt	(0X43E38CB7,	"interface",	0);
	set_cmt	(0X43E38CBD,	"index",	0);
	set_cmt	(0X43E38CD0,	"this",	0);
	set_cmt	(0X43E38CEA,	"index",	0);
	set_cmt	(0X43E38CEF,	"interface",	0);
	set_cmt	(0X43E38CFC,	"this",	0);
	set_cmt	(0X43E38D08,	"m_pPlayer",	0);
	set_cmt	(0X43E38D1D,	"index",	0);
	set_cmt	(0X43E38D22,	"interface",	0);
	set_cmt	(0X43E38D2F,	"this",	0);
	set_cmt	(0X43E38D3B,	"player",	0);
	set_cmt	(0X43E38D50,	"index",	0);
	set_cmt	(0X43E38D55,	"interface",	0);
	set_cmt	(0X43E38D62,	"this",	0);
	set_cmt	(0X43E38D6E,	"player",	0);
	set_cmt	(0X43E38D80,	"propHash",	0);
	set_cmt	(0X43E38D85,	"classHash",	0);
	set_cmt	(0X43E38DA1,	"switch 84 cases ",	0);
	create_insn	(x=0X43E38DA7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E38DAE,	"switch jump",	0);
	create_insn	(x=0X43E38DAE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E38DB5,	"switch 19 cases ",	0);
	create_insn	(x=0X43E38DB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E38DBF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E38DC6,	"switch jump",	0);
	create_insn	(x=0X43E38DC6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E38DCD,	"jumptable 43E38DAE cases 41,42,59\njumptable 43E38DC6 cases 505-509,512,514-516,519,520,522,523",	1);
	create_insn	(0X43E38DCD);
	set_cmt	(0X43E38DD6,	"jumptable 43E38DAE default case, cases 1-40,43-58,60-84\njumptable 43E38DC6 default case, cases 510,511,513,517,518,521",	1);
	set_name	(0X43E38DD6,	"def_43E38DAE");
	set_cmt	(0X43E38DDC,	"jump table for switch statement",	0);
	create_dword	(x=0X43E38DDC);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E38DDC,	"jpt_43E38DAE");
	set_cmt	(0X43E38DE8,	"indirect table for switch statement",	0);
	create_byte	(0X43E38DE8);
	make_array	(0X43E38DE8,	0X54);
	set_cmt	(0X43E38E3C,	"jump table for switch statement",	0);
	create_dword	(x=0X43E38E3C);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43E38E3C,	"jpt_43E38DC6");
	set_cmt	(0X43E38E44,	"indirect table for switch statement",	0);
	create_byte	(0X43E38E44);
	make_array	(0X43E38E44,	0X13);
	make_array	(0X43E38E57,	0X9);
	create_insn	(0X43E38E60);
	create_insn	(0X43E38E6C);
	make_array	(0X43E38E73,	0XD);
	create_insn	(0X43E38E80);
	set_name	(0X43E38E80,	"OneTap::Features::Hooks::GetLocalViewAngles");
	create_insn	(x=0X43E38E83);
	op_hex		(x,	1);
	set_cmt	(0X43E38E90,	"interface",	0);
	set_cmt	(0X43E38E99,	"index",	0);
	set_cmt	(0X43E38EA5,	"this",	0);
	set_cmt	(0X43E38EB1,	"_DWORD",	0);
	set_cmt	(0X43E38EB3,	"_DWORD",	0);
	set_cmt	(0X43E38EB9,	"_DWORD",	0);
	create_insn	(x=0X43E38EB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E38ECB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E38ECE);
	op_stkvar	(x,	0);
	set_cmt	(0X43E38ED5,	"_DWORD",	0);
	create_insn	(x=0X43E38ED6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E38EDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E38EEA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E38EFD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E38F04);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E38F0B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E38F17);
	op_stkvar	(x,	1);
	set_cmt	(0X43E38F23,	"index",	0);
	set_cmt	(0X43E38F28,	"interface",	0);
	set_cmt	(0X43E38F35,	"this",	0);
	create_insn	(x=0X43E38F49);
	op_hex		(x,	1);
	set_cmt	(0X43E38F4E,	"propHash",	0);
	create_insn	(x=0X43E38F53);
	op_hex		(x,	1);
	set_cmt	(0X43E38F56,	"classHash",	0);
	create_insn	(0X43E38F6D);
	create_insn	(x=0X43E38F72);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E38F7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E38F88);
	op_stkvar	(x,	1);
	set_cmt	(0X43E38F93,	"_DWORD",	0);
	create_insn	(x=0X43E38F93);
	op_stkvar	(x,	0);
	set_cmt	(0X43E38F96,	"_DWORD",	0);
	set_cmt	(0X43E38F98,	"_DWORD",	0);
	set_cmt	(0X43E38FA6,	"index",	0);
	set_cmt	(0X43E38FAB,	"interface",	0);
	set_cmt	(0X43E38FB8,	"this",	0);
	create_insn	(x=0X43E38FCC);
	op_hex		(x,	1);
	set_cmt	(0X43E38FD1,	"propHash",	0);
	create_insn	(x=0X43E38FD6);
	op_hex		(x,	1);
	set_cmt	(0X43E38FD9,	"classHash",	0);
	create_insn	(0X43E38FF0);
	create_insn	(x=0X43E38FF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E39000);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E3900B);
	op_stkvar	(x,	1);
	create_insn	(0X43E39020);
	set_name	(0X43E39020,	"OneTap::Features::Hooks::GetViewmodelFov");
	create_insn	(x=0X43E39029);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E3902C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E39036);
	op_stkvar	(x,	1);
	set_cmt	(0X43E3903F,	"interface",	0);
	set_cmt	(0X43E39045,	"index",	0);
	set_cmt	(0X43E39058,	"this",	0);
	set_cmt	(0X43E39072,	"index",	0);
	set_cmt	(0X43E39077,	"interface",	0);
	set_cmt	(0X43E39084,	"this",	0);
	set_cmt	(0X43E39090,	"player",	0);
	set_cmt	(0X43E390A5,	"index",	0);
	set_cmt	(0X43E390AA,	"interface",	0);
	set_cmt	(0X43E390B7,	"this",	0);
	set_cmt	(0X43E390C3,	"player",	0);
	set_cmt	(0X43E390D5,	"propHash",	0);
	set_cmt	(0X43E390DA,	"classHash",	0);
	set_cmt	(0X43E390FA,	"index",	0);
	set_cmt	(0X43E390FF,	"interface",	0);
	set_cmt	(0X43E3910C,	"this",	0);
	set_cmt	(0X43E39118,	"player",	0);
	set_cmt	(0X43E3912A,	"propHash",	0);
	set_cmt	(0X43E3912F,	"classHash",	0);
	set_cmt	(0X43E39154,	"index",	0);
	set_cmt	(0X43E39159,	"interface",	0);
	set_cmt	(0X43E39166,	"this",	0);
	set_cmt	(0X43E3917D,	"propHash",	0);
	set_cmt	(0X43E39182,	"classHash",	0);
	create_insn	(x=0X43E391A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E391A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E391AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43E391B4);
	op_stkvar	(x,	1);
	make_array	(0X43E391BB,	0X5);
	create_insn	(0X43E391C0);
	create_insn	(x=0X43E391C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E391C6);
	op_hex		(x,	1);
	set_cmt	(0X43E391D5,	"toArray",	0);
	set_cmt	(0X43E391D6,	"fromArray",	0);
	create_insn	(x=0X43E391FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E39262);
	op_hex		(x,	1);
	create_insn	(0X43E39270);
	create_insn	(x=0X43E39273);
	op_hex		(x,	1);
	create_insn	(x=0X43E39276);
	op_hex		(x,	1);
	set_cmt	(0X43E39285,	"toArray",	0);
	set_cmt	(0X43E39286,	"fromArray",	0);
	create_insn	(x=0X43E392AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E39312);
	op_hex		(x,	1);
	create_insn	(0X43E39320);
	create_insn	(x=0X43E39323);
	op_hex		(x,	1);
	create_insn	(x=0X43E3932B);
	op_hex		(x,	1);
	set_cmt	(0X43E39349,	"fromArray",	0);
	set_cmt	(0X43E3934C,	"toArray",	0);
	create_insn	(0X43E39387);
	make_array	(0X43E393B9,	0X7);
	create_insn	(0X43E393C0);
	create_insn	(x=0X43E393C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E393C6);
	op_hex		(x,	1);
	create_insn	(x=0X43E39420);
	op_hex		(x,	1);
	set_cmt	(0X43E39493,	"fromArray",	0);
	set_cmt	(0X43E394B1,	"toArray",	0);
	create_insn	(x=0X43E394C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E39535);
	op_hex		(x,	1);
	create_insn	(x=0X43E3954D);
	op_hex		(x,	1);
	make_array	(0X43E395A5,	0XB);
	create_insn	(0X43E395B0);
	create_insn	(x=0X43E395BB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E395CE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E395EA);
	make_array	(0X43E395EE,	0X2);
	create_insn	(0X43E395F0);
	create_insn	(x=0X43E395F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E39604);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E39609);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3960E);
	op_hex		(x,	1);
	make_array	(0X43E3961C,	0X4);
	create_insn	(0X43E39620);
	create_insn	(x=0X43E39623);
	op_hex		(x,	1);
	create_insn	(x=0X43E39626);
	op_hex		(x,	1);
	set_cmt	(0X43E3962D,	"int *",	0);
	set_cmt	(0X43E3962E,	"char",	0);
	set_cmt	(0X43E3965E,	"fromArray",	0);
	set_cmt	(0X43E39683,	"toArray",	0);
	create_insn	(x=0X43E39693);
	op_hex		(x,	1);
	create_insn	(x=0X43E39700);
	op_hex		(x,	1);
	create_insn	(x=0X43E3973F);
	op_hex		(x,	1);
	create_insn	(x=0X43E3978B);
	op_hex		(x,	1);
	set_cmt	(0X43E397E0,	"a3",	0);
	set_cmt	(0X43E397E1,	"a2",	0);
	set_cmt	(0X43E397E2,	"this",	0);
	set_cmt	(0X43E39840,	"a3",	0);
	set_cmt	(0X43E39841,	"a2",	0);
	set_cmt	(0X43E39842,	"this",	0);
	set_cmt	(0X43E39869,	"a3",	0);
	set_cmt	(0X43E3986F,	"this",	0);
	set_cmt	(0X43E39873,	"a2",	0);
	set_cmt	(0X43E398BA,	"a3",	0);
	set_cmt	(0X43E398C3,	"this",	0);
	set_cmt	(0X43E398C7,	"a2",	0);
	set_cmt	(0X43E398ED,	"char *",	0);
	create_insn	(x=0X43E39900);
	op_hex		(x,	1);
	create_insn	(x=0X43E39986);
	op_hex		(x,	1);
	make_array	(0X43E39995,	0XB);
	create_insn	(0X43E399A0);
	set_cmt	(0X43E399B6,	"a9",	0);
	set_cmt	(0X43E399B7,	"a8",	0);
	set_cmt	(0X43E399B8,	"a7",	0);
	set_cmt	(0X43E399C1,	"a6",	0);
	create_insn	(x=0X43E399C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E399CB);
	op_hex		(x,	1);
	set_cmt	(0X43E399D4,	"a5",	0);
	create_insn	(x=0X43E399F1);
	op_hex		(x,	1);
	create_insn	(x=0X43E399F3);
	op_hex		(x,	1);
	set_cmt	(0X43E39A0D,	"a2",	0);
	set_cmt	(0X43E39A10,	"a1",	0);
	set_cmt	(0X43E39A13,	"a4",	0);
	set_cmt	(0X43E39A18,	"a3",	0);
	make_array	(0X43E39A29,	0X7);
	create_insn	(0X43E39A30);
	create_insn	(x=0X43E39A33);
	op_hex		(x,	1);
	create_insn	(x=0X43E39A36);
	op_hex		(x,	1);
	create_insn	(x=0X43E39A89);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E39AEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E39B42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E39BBA);
	op_hex		(x,	1);
	create_insn	(x=0X43E39BE8);
	op_hex		(x,	1);
	create_insn	(x=0X43E39C2F);
	op_hex		(x,	1);
	create_insn	(x=0X43E39C67);
	op_hex		(x,	1);
	set_cmt	(0X43E39CBB,	"a9",	0);
	set_cmt	(0X43E39CC3,	"a8",	0);
	set_cmt	(0X43E39CCB,	"a7",	0);
	set_cmt	(0X43E39CD6,	"a6",	0);
	create_insn	(x=0X43E39CDC);
	op_hex		(x,	1);
	set_cmt	(0X43E39CE9,	"a5",	0);
	set_cmt	(0X43E39CF3,	"a4",	0);
	set_cmt	(0X43E39CFA,	"a2",	0);
	set_cmt	(0X43E39CFD,	"a3",	0);
	set_cmt	(0X43E39D02,	"a1",	0);
	set_cmt	(0X43E39D2A,	"a9",	0);
	set_cmt	(0X43E39D2B,	"a8",	0);
	set_cmt	(0X43E39D2C,	"a7",	0);
	set_cmt	(0X43E39D2D,	"a6",	0);
	create_insn	(x=0X43E39D2E);
	op_hex		(x,	1);
	set_cmt	(0X43E39D39,	"a2",	0);
	set_cmt	(0X43E39D3C,	"a5",	0);
	set_cmt	(0X43E39D44,	"a4",	0);
	set_cmt	(0X43E39D4B,	"a3",	0);
	set_cmt	(0X43E39D4F,	"a1",	0);
	set_cmt	(0X43E39D57,	"a9",	0);
	set_cmt	(0X43E39D5F,	"a8",	0);
	set_cmt	(0X43E39D60,	"a7",	0);
	set_cmt	(0X43E39D61,	"a6",	0);
	create_insn	(x=0X43E39D62);
	op_hex		(x,	1);
	set_cmt	(0X43E39D71,	"a1",	0);
	set_cmt	(0X43E39D74,	"a5",	0);
	set_cmt	(0X43E39D7C,	"a4",	0);
	set_cmt	(0X43E39D83,	"a2",	0);
	set_cmt	(0X43E39D8B,	"a3",	0);
	set_cmt	(0X43E39D94,	"a9",	0);
	set_cmt	(0X43E39D95,	"a8",	0);
	set_cmt	(0X43E39D96,	"a7",	0);
	set_cmt	(0X43E39D97,	"a6",	0);
	create_insn	(x=0X43E39D9C);
	op_hex		(x,	1);
	set_cmt	(0X43E39D9F,	"a2",	0);
	set_cmt	(0X43E39DA2,	"a5",	0);
	set_cmt	(0X43E39DAA,	"a4",	0);
	set_cmt	(0X43E39DB1,	"a3",	0);
	set_cmt	(0X43E39DB9,	"a1",	0);
	set_cmt	(0X43E39DC1,	"a9",	0);
	set_cmt	(0X43E39DC6,	"a8",	0);
	set_cmt	(0X43E39DCA,	"a7",	0);
	set_cmt	(0X43E39DCB,	"a6",	0);
	create_insn	(x=0X43E39DD0);
	op_hex		(x,	1);
	set_cmt	(0X43E39DDF,	"a2",	0);
	set_cmt	(0X43E39DE2,	"a5",	0);
	set_cmt	(0X43E39DEA,	"a4",	0);
	set_cmt	(0X43E39DF1,	"a3",	0);
	set_cmt	(0X43E39DF2,	"a1",	0);
	set_cmt	(0X43E39E44,	"a2",	0);
	set_cmt	(0X43E39E47,	"a9",	0);
	set_cmt	(0X43E39E4F,	"a8",	0);
	set_cmt	(0X43E39E53,	"a1",	0);
	set_cmt	(0X43E39E56,	"a7",	0);
	set_cmt	(0X43E39E5A,	"a6",	0);
	create_insn	(x=0X43E39E5E);
	op_hex		(x,	1);
	set_cmt	(0X43E39E61,	"a5",	0);
	set_cmt	(0X43E39E69,	"a4",	0);
	set_cmt	(0X43E39E70,	"a3",	0);
	set_cmt	(0X43E39E82,	"a9",	0);
	set_cmt	(0X43E39E83,	"a8",	0);
	set_cmt	(0X43E39E84,	"a7",	0);
	set_cmt	(0X43E39E85,	"a6",	0);
	create_insn	(x=0X43E39E86);
	op_hex		(x,	1);
	set_cmt	(0X43E39E91,	"a2",	0);
	set_cmt	(0X43E39E94,	"a5",	0);
	set_cmt	(0X43E39E9C,	"a4",	0);
	set_cmt	(0X43E39EA3,	"a3",	0);
	set_cmt	(0X43E39EA7,	"a1",	0);
	set_cmt	(0X43E39EAF,	"a9",	0);
	set_cmt	(0X43E39EB7,	"a8",	0);
	set_cmt	(0X43E39EB8,	"a7",	0);
	set_cmt	(0X43E39EB9,	"a6",	0);
	create_insn	(x=0X43E39EBA);
	op_hex		(x,	1);
	set_cmt	(0X43E39EC9,	"a1",	0);
	set_cmt	(0X43E39ECC,	"a5",	0);
	set_cmt	(0X43E39ED4,	"a4",	0);
	set_cmt	(0X43E39EDB,	"a2",	0);
	set_cmt	(0X43E39EE3,	"a3",	0);
	set_cmt	(0X43E39EEC,	"a9",	0);
	set_cmt	(0X43E39EED,	"a8",	0);
	set_cmt	(0X43E39EEE,	"a7",	0);
	set_cmt	(0X43E39EEF,	"a6",	0);
	create_insn	(x=0X43E39EF4);
	op_hex		(x,	1);
	set_cmt	(0X43E39EF7,	"a2",	0);
	set_cmt	(0X43E39EFA,	"a5",	0);
	set_cmt	(0X43E39F02,	"a4",	0);
	set_cmt	(0X43E39F09,	"a3",	0);
	set_cmt	(0X43E39F11,	"a1",	0);
	set_cmt	(0X43E39F19,	"a9",	0);
	set_cmt	(0X43E39F1E,	"a8",	0);
	set_cmt	(0X43E39F22,	"a7",	0);
	set_cmt	(0X43E39F23,	"a6",	0);
	create_insn	(x=0X43E39F24);
	op_hex		(x,	1);
	set_cmt	(0X43E39F33,	"a5",	0);
	set_cmt	(0X43E39F3B,	"a2",	0);
	set_cmt	(0X43E39F3E,	"a4",	0);
	set_cmt	(0X43E39F45,	"a1",	0);
	set_cmt	(0X43E39F4D,	"a3",	0);
	set_cmt	(0X43E39FC2,	"a9",	0);
	set_cmt	(0X43E39FC3,	"a8",	0);
	set_cmt	(0X43E39FC4,	"a7",	0);
	set_cmt	(0X43E39FC5,	"a6",	0);
	create_insn	(x=0X43E39FD5);
	op_hex		(x,	1);
	set_cmt	(0X43E39FE4,	"a5",	0);
	set_cmt	(0X43E39FEC,	"a4",	0);
	set_cmt	(0X43E39FF3,	"a3",	0);
	set_cmt	(0X43E39FF8,	"a1",	0);
	set_cmt	(0X43E39FFB,	"a2",	0);
	create_insn	(x=0X43E3A019);
	op_hex		(x,	1);
	create_insn	(x=0X43E3A070);
	op_hex		(x,	1);
	set_cmt	(0X43E3A0A4,	"a9",	0);
	set_cmt	(0X43E3A0B0,	"a8",	0);
	set_cmt	(0X43E3A0BC,	"a7",	0);
	set_cmt	(0X43E3A0C8,	"a6",	0);
	create_insn	(x=0X43E3A0D0);
	op_hex		(x,	1);
	set_cmt	(0X43E3A0D3,	"a2",	0);
	set_cmt	(0X43E3A0D6,	"a5",	0);
	set_cmt	(0X43E3A0DE,	"a4",	0);
	set_cmt	(0X43E3A0E5,	"a1",	0);
	set_cmt	(0X43E3A0E8,	"a3",	0);
	set_cmt	(0X43E3A100,	"a9",	0);
	set_cmt	(0X43E3A101,	"a8",	0);
	set_cmt	(0X43E3A102,	"a7",	0);
	set_cmt	(0X43E3A103,	"a6",	0);
	create_insn	(x=0X43E3A104);
	op_hex		(x,	1);
	set_cmt	(0X43E3A107,	"a2",	0);
	set_cmt	(0X43E3A10A,	"a5",	0);
	set_cmt	(0X43E3A112,	"a4",	0);
	set_cmt	(0X43E3A11D,	"a1",	0);
	set_cmt	(0X43E3A120,	"a3",	0);
	set_cmt	(0X43E3A12C,	"a9",	0);
	set_cmt	(0X43E3A130,	"a8",	0);
	set_cmt	(0X43E3A131,	"a7",	0);
	set_cmt	(0X43E3A132,	"a6",	0);
	create_insn	(x=0X43E3A133);
	op_hex		(x,	1);
	set_cmt	(0X43E3A142,	"a1",	0);
	set_cmt	(0X43E3A145,	"a5",	0);
	set_cmt	(0X43E3A14D,	"a4",	0);
	set_cmt	(0X43E3A154,	"a3",	0);
	set_cmt	(0X43E3A155,	"a2",	0);
	set_cmt	(0X43E3A162,	"a9",	0);
	set_cmt	(0X43E3A163,	"a8",	0);
	set_cmt	(0X43E3A164,	"a7",	0);
	set_cmt	(0X43E3A165,	"a6",	0);
	create_insn	(x=0X43E3A166);
	op_hex		(x,	1);
	set_cmt	(0X43E3A169,	"a5",	0);
	set_cmt	(0X43E3A177,	"a2",	0);
	set_cmt	(0X43E3A17A,	"a4",	0);
	set_cmt	(0X43E3A181,	"a3",	0);
	set_cmt	(0X43E3A186,	"a1",	0);
	set_cmt	(0X43E3A194,	"a9",	0);
	set_cmt	(0X43E3A19C,	"a8",	0);
	set_cmt	(0X43E3A19D,	"a7",	0);
	set_cmt	(0X43E3A19E,	"a6",	0);
	create_insn	(x=0X43E3A19F);
	op_hex		(x,	1);
	set_cmt	(0X43E3A1A2,	"a2",	0);
	set_cmt	(0X43E3A1A5,	"a5",	0);
	set_cmt	(0X43E3A1AD,	"a4",	0);
	set_cmt	(0X43E3A1BC,	"a3",	0);
	set_cmt	(0X43E3A1BD,	"a1",	0);
	create_insn	(0X43E3A1E5);
	set_cmt	(0X43E3A252,	"a9",	0);
	set_cmt	(0X43E3A253,	"a8",	0);
	set_cmt	(0X43E3A254,	"a7",	0);
	set_cmt	(0X43E3A255,	"a6",	0);
	create_insn	(x=0X43E3A25A);
	op_hex		(x,	1);
	set_cmt	(0X43E3A261,	"a5",	0);
	set_cmt	(0X43E3A269,	"a4",	0);
	set_cmt	(0X43E3A270,	"a3",	0);
	set_cmt	(0X43E3A2A1,	"a1",	0);
	set_cmt	(0X43E3A2A4,	"a2",	0);
	make_array	(0X43E3A2B4,	0XC);
	create_insn	(0X43E3A2C0);
	create_insn	(x=0X43E3A2CB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3A2EA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3A302);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3A327);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3A33E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3A353);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3A373);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3A38A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3A39F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E3A3B7);
	make_array	(0X43E3A3BE,	0X2);
	create_insn	(0X43E3A3C0);
	create_insn	(x=0X43E3A3C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E3A3C6);
	op_hex		(x,	1);
	create_insn	(x=0X43E3A48C);
	op_hex		(x,	1);
	create_insn	(x=0X43E3A4EB);
	op_hex		(x,	1);
	create_insn	(x=0X43E3A4EF);
	op_hex		(x,	1);
	create_insn	(x=0X43E3A53D);
	op_hex		(x,	1);
	create_insn	(0X43E3A569);
	set_cmt	(0X43E3A57E,	"fromArray",	0);
	set_cmt	(0X43E3A581,	"toArray",	0);
	create_insn	(x=0X43E3A597);
	op_hex		(x,	1);
	create_insn	(0X43E3A5C3);
	create_insn	(x=0X43E3A5D6);
	op_hex		(x,	1);
	create_insn	(x=0X43E3A671);
	op_hex		(x,	1);
	create_insn	(x=0X43E3A682);
	op_hex		(x,	1);
	create_insn	(x=0X43E3A6C8);
	op_hex		(x,	1);
	create_insn	(x=0X43E3A704);
	op_hex		(x,	1);
	set_cmt	(0X43E3A70F,	"num",	0);
	set_cmt	(0X43E3A71A,	"value",	0);
	set_cmt	(0X43E3A71C,	"pointer",	0);
	create_insn	(x=0X43E3A722);
	op_hex		(x,	1);
	create_insn	(x=0X43E3A73D);
	op_hex		(x,	1);
	set_cmt	(0X43E3A879,	"a3",	0);
	set_cmt	(0X43E3A87A,	"a2",	0);
	set_cmt	(0X43E3A87B,	"this",	0);
	create_insn	(x=0X43E3A8BB);
	op_hex		(x,	1);
	set_cmt	(0X43E3A909,	"a3",	0);
	set_cmt	(0X43E3A90A,	"a2",	0);
	set_cmt	(0X43E3A90B,	"this",	0);
	create_insn	(x=0X43E3A92D);
	op_hex		(x,	1);
	create_insn	(x=0X43E3A95F);
	op_hex		(x,	1);
	create_insn	(x=0X43E3A9A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E3A9E1);
	op_hex		(x,	1);
	create_insn	(x=0X43E3AA08);
	op_hex		(x,	1);
	create_insn	(x=0X43E3AA17);
	op_hex		(x,	1);
	create_insn	(x=0X43E3AA24);
	op_hex		(x,	1);
	create_insn	(x=0X43E3AA75);
	op_hex		(x,	1);
	create_insn	(0X43E3AA80);
	create_insn	(x=0X43E3AA98);
	op_hex		(x,	1);
	create_insn	(x=0X43E3AAAC);
	op_hex		(x,	1);
	create_insn	(x=0X43E3AADA);
	op_hex		(x,	1);
	create_insn	(x=0X43E3AB2C);
	op_hex		(x,	1);
	set_cmt	(0X43E3AB52,	"num",	0);
	set_cmt	(0X43E3AB57,	"value",	0);
	set_cmt	(0X43E3AB68,	"pointer",	0);
	create_insn	(x=0X43E3AB6E);
	op_hex		(x,	1);
	create_insn	(x=0X43E3AB89);
	op_hex		(x,	1);
	create_insn	(0X43E3ABB8);
	create_insn	(x=0X43E3ABD0);
	op_hex		(x,	1);
	create_insn	(x=0X43E3AC10);
	op_hex		(x,	1);
	create_insn	(0X43E3AC54);
	create_insn	(0X43E3AC72);
	create_insn	(0X43E3AC8C);
	create_insn	(0X43E3ACA6);
	set_cmt	(0X43E3ACE4,	"a9",	0);
	set_cmt	(0X43E3ACE5,	"a8",	0);
	set_cmt	(0X43E3ACE6,	"a7",	0);
	set_cmt	(0X43E3ACE7,	"a6",	0);
	create_insn	(x=0X43E3ACE8);
	op_hex		(x,	1);
	set_cmt	(0X43E3ACEB,	"a2",	0);
	set_cmt	(0X43E3ACEE,	"a5",	0);
	set_cmt	(0X43E3ACF6,	"a4",	0);
	set_cmt	(0X43E3ACFD,	"a3",	0);
	set_cmt	(0X43E3AD00,	"a1",	0);
	set_cmt	(0X43E3AD1D,	"a9",	0);
	set_cmt	(0X43E3AD1E,	"a8",	0);
	set_cmt	(0X43E3AD1F,	"a7",	0);
	set_cmt	(0X43E3AD20,	"a6",	0);
	create_insn	(x=0X43E3AD21);
	op_hex		(x,	1);
	set_cmt	(0X43E3AD28,	"a2",	0);
	set_cmt	(0X43E3AD2F,	"a5",	0);
	set_cmt	(0X43E3AD37,	"a4",	0);
	set_cmt	(0X43E3AD3E,	"a1",	0);
	set_cmt	(0X43E3AD41,	"a3",	0);
	set_cmt	(0X43E3AD47,	"a9",	0);
	set_cmt	(0X43E3AD4F,	"a8",	0);
	set_cmt	(0X43E3AD50,	"a7",	0);
	set_cmt	(0X43E3AD51,	"a6",	0);
	create_insn	(x=0X43E3AD52);
	op_hex		(x,	1);
	set_cmt	(0X43E3AD63,	"a1",	0);
	set_cmt	(0X43E3AD66,	"a5",	0);
	set_cmt	(0X43E3AD6E,	"a4",	0);
	set_cmt	(0X43E3AD75,	"a2",	0);
	set_cmt	(0X43E3AD7D,	"a3",	0);
	set_cmt	(0X43E3AD86,	"a9",	0);
	set_cmt	(0X43E3AD87,	"a8",	0);
	set_cmt	(0X43E3AD88,	"a7",	0);
	set_cmt	(0X43E3AD89,	"a6",	0);
	create_insn	(x=0X43E3AD8E);
	op_hex		(x,	1);
	set_cmt	(0X43E3AD91,	"a2",	0);
	set_cmt	(0X43E3AD94,	"a5",	0);
	set_cmt	(0X43E3AD9C,	"a4",	0);
	set_cmt	(0X43E3ADA9,	"a3",	0);
	set_cmt	(0X43E3ADAD,	"a1",	0);
	set_cmt	(0X43E3ADBB,	"a9",	0);
	set_cmt	(0X43E3ADBC,	"a8",	0);
	set_cmt	(0X43E3ADBD,	"a7",	0);
	set_cmt	(0X43E3ADBE,	"a6",	0);
	create_insn	(x=0X43E3ADBF);
	op_hex		(x,	1);
	set_cmt	(0X43E3ADC5,	"a5",	0);
	set_cmt	(0X43E3ADCD,	"a4",	0);
	set_cmt	(0X43E3ADDC,	"a3",	0);
	set_cmt	(0X43E3ADE4,	"a2",	0);
	set_cmt	(0X43E3ADE7,	"a1",	0);
	create_insn	(0X43E3AE00);
	create_insn	(x=0X43E3AE03);
	op_hex		(x,	1);
	create_insn	(x=0X43E3AE06);
	op_hex		(x,	1);
	create_insn	(x=0X43E3AE7F);
	op_hex		(x,	1);
	create_insn	(x=0X43E3AEC9);
	op_hex		(x,	1);
	create_insn	(x=0X43E3AECD);
	op_hex		(x,	1);
	create_insn	(0X43E3AF07);
	create_insn	(x=0X43E3AF2D);
	op_hex		(x,	1);
	create_insn	(0X43E3AF51);
	set_cmt	(0X43E3AF59,	"toArray",	0);
	set_cmt	(0X43E3AF5A,	"fromArray",	0);
	create_insn	(x=0X43E3AF97);
	op_hex		(x,	1);
	set_cmt	(0X43E3AFA6,	"toArray",	0);
	set_cmt	(0X43E3AFA7,	"fromArray",	0);
	create_insn	(x=0X43E3AFB7);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B029);
	op_hex		(x,	1);
	make_array	(0X43E3B038,	0X8);
	create_insn	(0X43E3B040);
	create_insn	(x=0X43E3B043);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B046);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B0C1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3B104);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3B15B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3B1D6);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B288);
	op_hex		(x,	1);
	create_insn	(0X43E3B2C5);
	create_insn	(x=0X43E3B308);
	op_hex		(x,	1);
	create_insn	(0X43E3B342);
	create_insn	(x=0X43E3B37A);
	op_hex		(x,	1);
	set_cmt	(0X43E3B3B2,	"a3",	0);
	set_cmt	(0X43E3B3B3,	"a2",	0);
	set_cmt	(0X43E3B3B4,	"this",	0);
	create_insn	(x=0X43E3B3F0);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B419);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B41E);
	op_hex		(x,	1);
	set_cmt	(0X43E3B4BB,	"a3",	0);
	set_cmt	(0X43E3B4BC,	"a2",	0);
	set_cmt	(0X43E3B4BD,	"this",	0);
	create_insn	(x=0X43E3B4D2);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B4EE);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B555);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B58A);
	op_hex		(x,	1);
	create_insn	(0X43E3B59C);
	make_array	(0X43E3B5A9,	0X7);
	create_insn	(0X43E3B5B0);
	create_insn	(x=0X43E3B5B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B5B6);
	op_hex		(x,	1);
	set_cmt	(0X43E3B608,	"fromArray",	0);
	set_cmt	(0X43E3B62D,	"toArray",	0);
	create_insn	(x=0X43E3B63D);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B6AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B6BD);
	op_hex		(x,	1);
	create_insn	(0X43E3B6ED);
	create_insn	(0X43E3B6FD);
	create_insn	(x=0X43E3B73A);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B791);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B808);
	op_hex		(x,	1);
	create_insn	(0X43E3B836);
	set_cmt	(0X43E3B86B,	"a3",	0);
	set_cmt	(0X43E3B86C,	"a2",	0);
	set_cmt	(0X43E3B86D,	"this",	0);
	create_insn	(x=0X43E3B876);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B88E);
	op_hex		(x,	1);
	create_insn	(x=0X43E3B95D);
	op_hex		(x,	1);
	create_insn	(0X43E3B992);
	create_insn	(x=0X43E3B9D8);
	op_hex		(x,	1);
	create_insn	(0X43E3BA0A);
	create_insn	(x=0X43E3BA48);
	op_hex		(x,	1);
	set_cmt	(0X43E3BA7A,	"a3",	0);
	set_cmt	(0X43E3BA7B,	"a2",	0);
	set_cmt	(0X43E3BA7C,	"this",	0);
	set_cmt	(0X43E3BAC9,	"a3",	0);
	set_cmt	(0X43E3BACA,	"a2",	0);
	set_cmt	(0X43E3BACB,	"this",	0);
	create_insn	(x=0X43E3BADC);
	op_hex		(x,	1);
	create_insn	(0X43E3BB36);
	create_insn	(x=0X43E3BB6E);
	op_hex		(x,	1);
	make_array	(0X43E3BB7D,	0X3);
	create_insn	(0X43E3BB80);
	create_insn	(x=0X43E3BB8B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3BBA5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3BBBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3BBD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3BBE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E3BBFB);
	create_insn	(0X43E3BC00);
	create_insn	(x=0X43E3BC0B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3BC2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3BC49);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3BC64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3BC7F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3BC9A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E3BCB0);
	make_array	(0X43E3BCB7,	0X9);
	create_insn	(0X43E3BCC0);
	create_insn	(x=0X43E3BCC3);
	op_hex		(x,	1);
	create_insn	(x=0X43E3BCC6);
	op_hex		(x,	1);
	set_cmt	(0X43E3BD45,	"fromArray",	0);
	set_cmt	(0X43E3BD50,	"toArray",	0);
	create_insn	(x=0X43E3BD66);
	op_hex		(x,	1);
	create_insn	(x=0X43E3BDD6);
	op_hex		(x,	1);
	create_insn	(x=0X43E3BDFD);
	op_hex		(x,	1);
	create_insn	(0X43E3BE5C);
	create_insn	(0X43E3BE8F);
	create_insn	(0X43E3BEA7);
	create_insn	(x=0X43E3BF1E);
	op_hex		(x,	1);
	create_insn	(x=0X43E3BF69);
	op_hex		(x,	1);
	create_insn	(x=0X43E3BFCB);
	op_hex		(x,	1);
	create_insn	(x=0X43E3BFE7);
	op_hex		(x,	1);
	create_insn	(0X43E3C045);
	create_insn	(0X43E3C054);
	create_insn	(0X43E3C069);
	set_cmt	(0X43E3C07D,	"toArray",	0);
	set_cmt	(0X43E3C07E,	"fromArray",	0);
	create_insn	(x=0X43E3C0C1);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C0D6);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C10C);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C134);
	op_hex		(x,	1);
	create_insn	(0X43E3C190);
	create_insn	(0X43E3C1D5);
	create_insn	(0X43E3C1E8);
	create_insn	(0X43E3C1FB);
	create_insn	(0X43E3C248);
	make_array	(0X43E3C257,	0X9);
	create_insn	(0X43E3C260);
	create_insn	(x=0X43E3C263);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C266);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C302);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C30B);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C314);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3C378);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3C3CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3C428);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3C484);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3C4DD);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C535);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C584);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C5A6);
	op_hex		(x,	1);
	set_cmt	(0X43E3C634,	"a9",	0);
	set_cmt	(0X43E3C635,	"a8",	0);
	set_cmt	(0X43E3C636,	"a7",	0);
	set_cmt	(0X43E3C637,	"a6",	0);
	create_insn	(x=0X43E3C63B);
	op_hex		(x,	1);
	set_cmt	(0X43E3C641,	"a5",	0);
	set_cmt	(0X43E3C663,	"a4",	0);
	set_cmt	(0X43E3C668,	"a3",	0);
	set_cmt	(0X43E3C66C,	"a2",	0);
	set_cmt	(0X43E3C673,	"a1",	0);
	create_insn	(0X43E3C6A0);
	set_cmt	(0X43E3C6B0,	"to",	0);
	set_cmt	(0X43E3C6B8,	"size",	0);
	set_cmt	(0X43E3C6BA,	"from",	0);
	create_insn	(x=0X43E3C6D7);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C704);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C78D);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C7B8);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C7ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C7FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E3C805);
	op_hex		(x,	1);
	set_cmt	(0X43E3C8B7,	"a9",	0);
	create_insn	(x=0X43E3C8B8);
	op_hex		(x,	1);
	set_cmt	(0X43E3C8BA,	"a8",	0);
	set_cmt	(0X43E3C8C4,	"a7",	0);
	set_cmt	(0X43E3C8CC,	"a6",	0);
	create_insn	(x=0X43E3C8D1);
	op_hex		(x,	1);
	set_cmt	(0X43E3C8E3,	"a5",	0);
	set_cmt	(0X43E3C8E9,	"a2",	0);
	set_cmt	(0X43E3C8EC,	"a4",	0);
	set_cmt	(0X43E3C8F3,	"a3",	0);
	set_cmt	(0X43E3C8F7,	"a1",	0);
	set_cmt	(0X43E3C8FF,	"a9",	0);
	set_cmt	(0X43E3C90E,	"a8",	0);
	set_cmt	(0X43E3C90F,	"a7",	0);
	set_cmt	(0X43E3C910,	"a6",	0);
	create_insn	(x=0X43E3C914);
	op_hex		(x,	1);
	set_cmt	(0X43E3C938,	"a5",	0);
	set_cmt	(0X43E3C93E,	"a2",	0);
	set_cmt	(0X43E3C941,	"a4",	0);
	set_cmt	(0X43E3C948,	"a3",	0);
	set_cmt	(0X43E3C950,	"a1",	0);
	create_insn	(0X43E3C9C4);
	create_insn	(x=0X43E3C9EE);
	op_hex		(x,	1);
	create_insn	(x=0X43E3CA16);
	op_hex		(x,	1);
	make_array	(0X43E3CA5E,	0X2);
	create_insn	(0X43E3CA60);
	create_insn	(x=0X43E3CA6B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3CA7E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E3CA9A);
	make_array	(0X43E3CA9E,	0X2);
	create_insn	(0X43E3CAA0);
	create_insn	(x=0X43E3CAA3);
	op_hex		(x,	1);
	create_insn	(x=0X43E3CAA6);
	op_hex		(x,	1);
	create_insn	(x=0X43E3CB2A);
	op_hex		(x,	1);
	set_cmt	(0X43E3CB72,	"to",	0);
	set_cmt	(0X43E3CB7C,	"size",	0);
	set_cmt	(0X43E3CB7E,	"from",	0);
	create_insn	(x=0X43E3CB9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E3CBFF);
	op_hex		(x,	1);
	set_cmt	(0X43E3CC2D,	"to",	0);
	set_cmt	(0X43E3CC39,	"size",	0);
	set_cmt	(0X43E3CC3B,	"from",	0);
	create_insn	(x=0X43E3CC5B);
	op_hex		(x,	1);
	create_insn	(x=0X43E3CCC3);
	op_hex		(x,	1);
	create_insn	(x=0X43E3CCFD);
	op_hex		(x,	1);
	create_insn	(x=0X43E3CD6D);
	op_hex		(x,	1);
	create_insn	(x=0X43E3CD89);
	op_hex		(x,	1);
	create_insn	(0X43E3CDA3);
	create_insn	(x=0X43E3CDDD);
	op_hex		(x,	1);
	create_insn	(x=0X43E3CE4D);
	op_hex		(x,	1);
	set_cmt	(0X43E3CE7A,	"a3",	0);
	set_cmt	(0X43E3CE80,	"this",	0);
	set_cmt	(0X43E3CE84,	"a2",	0);
	create_insn	(x=0X43E3CECB);
	op_hex		(x,	1);
	create_insn	(x=0X43E3CF18);
	op_hex		(x,	1);
	set_cmt	(0X43E3CF4A,	"a3",	0);
	set_cmt	(0X43E3CF4B,	"a2",	0);
	set_cmt	(0X43E3CF4C,	"this",	0);
	create_insn	(x=0X43E3CF88);
	op_hex		(x,	1);
	set_cmt	(0X43E3CF97,	"toArray",	0);
	set_cmt	(0X43E3CF98,	"fromArray",	0);
	create_insn	(x=0X43E3CFAC);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D019);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D044);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D091);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D0BE);
	op_hex		(x,	1);
	create_insn	(0X43E3D14B);
	create_insn	(x=0X43E3D167);
	op_hex		(x,	1);
	create_insn	(0X43E3D1A7);
	create_insn	(x=0X43E3D1EF);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D207);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D23B);
	op_hex		(x,	1);
	make_array	(0X43E3D24A,	0X6);
	create_insn	(0X43E3D250);
	create_insn	(x=0X43E3D253);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D256);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D2D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D2D9);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D316);
	op_hex		(x,	1);
	create_insn	(0X43E3D31B);
	create_insn	(x=0X43E3D321);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D329);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D32C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3D38C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3D3E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3D440);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3D497);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_7(void) {
        auto x;
#define id x

	create_insn	(x=0X43E3D516);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D569);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D5BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D5CC);
	op_hex		(x,	1);
	set_cmt	(0X43E3D65F,	"a9",	0);
	set_cmt	(0X43E3D660,	"a8",	0);
	set_cmt	(0X43E3D661,	"a7",	0);
	set_cmt	(0X43E3D662,	"a6",	0);
	create_insn	(x=0X43E3D666);
	op_hex		(x,	1);
	set_cmt	(0X43E3D66C,	"a5",	0);
	set_cmt	(0X43E3D68E,	"a4",	0);
	set_cmt	(0X43E3D693,	"a3",	0);
	set_cmt	(0X43E3D697,	"a2",	0);
	set_cmt	(0X43E3D69E,	"a1",	0);
	set_cmt	(0X43E3D6AA,	"size",	0);
	set_cmt	(0X43E3D6AC,	"from",	0);
	set_cmt	(0X43E3D6B2,	"to",	0);
	create_insn	(x=0X43E3D6D7);
	op_hex		(x,	1);
	set_cmt	(0X43E3D733,	"a3",	0);
	set_cmt	(0X43E3D739,	"this",	0);
	set_cmt	(0X43E3D740,	"a2",	0);
	create_insn	(x=0X43E3D78C);
	op_hex		(x,	1);
	create_insn	(0X43E3D7C0);
	create_insn	(x=0X43E3D7D8);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D865);
	op_hex		(x,	1);
	create_insn	(0X43E3D88C);
	create_insn	(x=0X43E3D8BE);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D8CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E3D985);
	op_hex		(x,	1);
	set_cmt	(0X43E3D98B,	"a9",	0);
	set_cmt	(0X43E3D98C,	"a8",	0);
	set_cmt	(0X43E3D99A,	"a7",	0);
	set_cmt	(0X43E3D99E,	"a6",	0);
	create_insn	(x=0X43E3D9A3);
	op_hex		(x,	1);
	set_cmt	(0X43E3D9B5,	"a5",	0);
	set_cmt	(0X43E3D9BB,	"a2",	0);
	set_cmt	(0X43E3D9BE,	"a4",	0);
	set_cmt	(0X43E3D9C5,	"a3",	0);
	set_cmt	(0X43E3D9C9,	"a1",	0);
	set_cmt	(0X43E3D9D9,	"a9",	0);
	set_cmt	(0X43E3D9DA,	"a8",	0);
	set_cmt	(0X43E3D9E5,	"a7",	0);
	set_cmt	(0X43E3D9E6,	"a6",	0);
	create_insn	(x=0X43E3D9EA);
	op_hex		(x,	1);
	set_cmt	(0X43E3DA0E,	"a5",	0);
	set_cmt	(0X43E3DA14,	"a2",	0);
	set_cmt	(0X43E3DA17,	"a4",	0);
	set_cmt	(0X43E3DA1E,	"a3",	0);
	set_cmt	(0X43E3DA26,	"a1",	0);
	create_insn	(x=0X43E3DA92);
	op_hex		(x,	1);
	create_insn	(x=0X43E3DB07);
	op_hex		(x,	1);
	create_insn	(x=0X43E3DB2F);
	op_hex		(x,	1);
	make_array	(0X43E3DB38,	0X8);
	create_insn	(0X43E3DB40);
	create_insn	(x=0X43E3DB4B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3DB5E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E3DB7A);
	make_array	(0X43E3DB7E,	0X2);
	create_insn	(0X43E3DB80);
	create_insn	(x=0X43E3DB83);
	op_hex		(x,	1);
	create_insn	(x=0X43E3DB86);
	op_hex		(x,	1);
	set_cmt	(0X43E3DBDC,	"toArray",	0);
	set_cmt	(0X43E3DBDD,	"fromArray",	0);
	create_insn	(x=0X43E3DC03);
	op_hex		(x,	1);
	create_insn	(x=0X43E3DC70);
	op_hex		(x,	1);
	create_insn	(x=0X43E3DC9B);
	op_hex		(x,	1);
	create_insn	(x=0X43E3DCE8);
	op_hex		(x,	1);
	create_insn	(x=0X43E3DD28);
	op_hex		(x,	1);
	create_insn	(0X43E3DD43);
	create_insn	(0X43E3DD71);
	create_insn	(0X43E3DDA0);
	set_cmt	(0X43E3DDAA,	"toArray",	0);
	set_cmt	(0X43E3DDB1,	"fromArray",	0);
	set_cmt	(0X43E3DDEA,	"a3",	0);
	set_cmt	(0X43E3DDF0,	"this",	0);
	set_cmt	(0X43E3DDF4,	"a2",	0);
	create_insn	(x=0X43E3DE26);
	op_hex		(x,	1);
	create_insn	(0X43E3DEAD);
	create_insn	(x=0X43E3DEC7);
	op_hex		(x,	1);
	create_insn	(0X43E3DF0B);
	create_insn	(x=0X43E3DF5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E3DF72);
	op_hex		(x,	1);
	create_insn	(x=0X43E3DFA6);
	op_hex		(x,	1);
	make_array	(0X43E3DFB5,	0XB);
	create_insn	(0X43E3DFC0);
	create_insn	(x=0X43E3DFCB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3DFE5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3DFF9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3E00D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E3E024);
	make_array	(0X43E3E028,	0X8);
	create_insn	(0X43E3E030);
	create_insn	(x=0X43E3E033);
	op_hex		(x,	1);
	create_insn	(x=0X43E3E036);
	op_hex		(x,	1);
	create_insn	(x=0X43E3E0A0);
	op_hex		(x,	1);
	create_insn	(x=0X43E3E0A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E3E0E2);
	op_hex		(x,	1);
	create_insn	(x=0X43E3E11B);
	op_hex		(x,	1);
	create_insn	(x=0X43E3E155);
	op_hex		(x,	1);
	set_cmt	(0X43E3E18F,	"toArray",	0);
	set_cmt	(0X43E3E190,	"fromArray",	0);
	create_insn	(x=0X43E3E1A2);
	op_hex		(x,	1);
	create_insn	(x=0X43E3E215);
	op_hex		(x,	1);
	make_array	(0X43E3E224,	0XC);
	create_insn	(0X43E3E230);
	create_insn	(0X43E3E262);
	create_insn	(x=0X43E3E269);
	op_hex		(x,	1);
	make_array	(0X43E3E27D,	0X3);
	create_insn	(0X43E3E280);
	create_insn	(x=0X43E3E283);
	op_hex		(x,	1);
	create_insn	(0X43E3E2C7);
	create_insn	(x=0X43E3E2D2);
	op_hex		(x,	1);
	create_insn	(0X43E3E353);
	make_array	(0X43E3E3CD,	0X3);
	create_insn	(0X43E3E3D0);
	create_insn	(x=0X43E3E3D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E3E3D6);
	op_hex		(x,	1);
	set_cmt	(0X43E3E41A,	"toArray",	0);
	set_cmt	(0X43E3E41B,	"fromArray",	0);
	create_insn	(x=0X43E3E433);
	op_hex		(x,	1);
	create_insn	(x=0X43E3E4A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E3E4BA);
	op_hex		(x,	1);
	set_cmt	(0X43E3E4FE,	"a9",	0);
	set_cmt	(0X43E3E4FF,	"a8",	0);
	set_cmt	(0X43E3E500,	"a7",	0);
	set_cmt	(0X43E3E501,	"a6",	0);
	create_insn	(x=0X43E3E502);
	op_hex		(x,	1);
	set_cmt	(0X43E3E510,	"a5",	0);
	set_cmt	(0X43E3E518,	"a2",	0);
	set_cmt	(0X43E3E51B,	"a1",	0);
	set_cmt	(0X43E3E51E,	"a4",	0);
	set_cmt	(0X43E3E523,	"a3",	0);
	create_insn	(x=0X43E3E53B);
	op_hex		(x,	1);
	set_cmt	(0X43E3E56C,	"a9",	0);
	set_cmt	(0X43E3E56D,	"a8",	0);
	set_cmt	(0X43E3E56E,	"a7",	0);
	set_cmt	(0X43E3E56F,	"a6",	0);
	create_insn	(x=0X43E3E570);
	op_hex		(x,	1);
	set_cmt	(0X43E3E576,	"a5",	0);
	set_cmt	(0X43E3E57E,	"a4",	0);
	set_cmt	(0X43E3E585,	"a3",	0);
	set_cmt	(0X43E3E597,	"a2",	0);
	set_cmt	(0X43E3E59E,	"a1",	0);
	set_cmt	(0X43E3E5A9,	"a9",	0);
	set_cmt	(0X43E3E5AA,	"a8",	0);
	set_cmt	(0X43E3E5AB,	"a7",	0);
	set_cmt	(0X43E3E5AC,	"a6",	0);
	create_insn	(x=0X43E3E5AD);
	op_hex		(x,	1);
	set_cmt	(0X43E3E5B3,	"a5",	0);
	set_cmt	(0X43E3E5D0,	"a4",	0);
	set_cmt	(0X43E3E5D9,	"a1",	0);
	set_cmt	(0X43E3E5DC,	"a3",	0);
	set_cmt	(0X43E3E5DF,	"a2",	0);
	create_insn	(x=0X43E3E5F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E3E626);
	create_insn	(x=0X43E3E62D);
	op_hex		(x,	1);
	create_insn	(0X43E3E641);
	create_insn	(x=0X43E3E665);
	op_hex		(x,	1);
	create_insn	(0X43E3E6B7);
	make_array	(0X43E3E6BD,	0X3);
	create_insn	(0X43E3E6C0);
	create_insn	(0X43E3E71F);
	make_array	(0X43E3E72D,	0X3);
	create_insn	(0X43E3E730);
	create_insn	(x=0X43E3E733);
	op_hex		(x,	1);
	create_insn	(0X43E3E8CA);
	create_insn	(x=0X43E3E931);
	op_hex		(x,	1);
	create_insn	(0X43E3E991);
	create_insn	(0X43E3E999);
	create_insn	(x=0X43E3E9AA);
	op_hex		(x,	1);
	create_insn	(0X43E3E9D6);
	create_insn	(x=0X43E3E9DB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E3E9E8);
	create_insn	(0X43E3EA56);
	create_insn	(x=0X43E3EA86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E3EB53);
	create_insn	(0X43E3EBEA);
	create_insn	(x=0X43E3EBFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E3EC0F);
	create_insn	(0X43E3EC19);
	create_insn	(x=0X43E3EC2D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43E3EC40);
	create_insn	(0X43E3EC50);
	create_insn	(x=0X43E3EC53);
	op_hex		(x,	1);
	create_insn	(x=0X43E3EC56);
	op_hex		(x,	1);
	create_insn	(x=0X43E3ED42);
	op_hex		(x,	1);
	create_insn	(x=0X43E3EE4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E3EE8B);
	op_hex		(x,	1);
	set_cmt	(0X43E3EF0E,	"a9",	0);
	create_insn	(x=0X43E3EF18);
	op_hex		(x,	1);
	set_cmt	(0X43E3EF1A,	"a8",	0);
	set_cmt	(0X43E3EF1B,	"a7",	0);
	set_cmt	(0X43E3EF28,	"a6",	0);
	create_insn	(x=0X43E3EF29);
	op_hex		(x,	1);
	set_cmt	(0X43E3EF39,	"a5",	0);
	set_cmt	(0X43E3EF3F,	"a4",	0);
	set_cmt	(0X43E3EF46,	"a2",	0);
	set_cmt	(0X43E3EF49,	"a3",	0);
	set_cmt	(0X43E3EF5B,	"a1",	0);
	set_cmt	(0X43E3EF6B,	"a9",	0);
	set_cmt	(0X43E3EF6C,	"a8",	0);
	set_cmt	(0X43E3EF79,	"a7",	0);
	set_cmt	(0X43E3EF7A,	"a6",	0);
	create_insn	(x=0X43E3EF7E);
	op_hex		(x,	1);
	set_cmt	(0X43E3EF8E,	"a5",	0);
	set_cmt	(0X43E3EF94,	"a4",	0);
	set_cmt	(0X43E3EF9B,	"a2",	0);
	set_cmt	(0X43E3EF9E,	"a3",	0);
	set_cmt	(0X43E3EFAD,	"a1",	0);
	create_insn	(0X43E3EFFC);
	create_insn	(0X43E3F02A);
	create_insn	(0X43E3F07D);
	make_array	(0X43E3F08D,	0X3);
	create_insn	(0X43E3F090);
	create_insn	(x=0X43E3F09B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E3F0B5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3F0C9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3F0DD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43E3F0F4);
	make_array	(0X43E3F0F8,	0X8);
	create_insn	(0X43E3F100);
	create_insn	(x=0X43E3F103);
	op_hex		(x,	1);
	set_cmt	(0X43E3F123,	"toArray",	0);
	set_cmt	(0X43E3F124,	"fromArray",	0);
	create_insn	(x=0X43E3F17A);
	op_hex		(x,	1);
	create_insn	(0X43E3F1BA);
	create_insn	(x=0X43E3F1DB);
	op_hex		(x,	1);
	set_cmt	(0X43E3F200,	"fromArray",	0);
	set_cmt	(0X43E3F206,	"toArray",	0);
	create_insn	(x=0X43E3F21B);
	op_hex		(x,	1);
	create_insn	(x=0X43E3F23A);
	op_hex		(x,	1);
	create_insn	(x=0X43E3F291);
	op_hex		(x,	1);
	make_array	(0X43E3F29D,	0X3);
	create_insn	(0X43E3F2A0);
	create_insn	(x=0X43E3F2A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E3F2CC);
	op_hex		(x,	1);
	create_insn	(x=0X43E3F38A);
	op_hex		(x,	1);
	create_insn	(x=0X43E3F463);
	op_hex		(x,	1);
	create_insn	(x=0X43E3F49A);
	op_hex		(x,	1);
	set_cmt	(0X43E3F4DA,	"a9",	0);
	set_cmt	(0X43E3F4DB,	"a8",	0);
	set_cmt	(0X43E3F4DC,	"a7",	0);
	set_cmt	(0X43E3F4E7,	"a6",	0);
	create_insn	(x=0X43E3F4E8);
	op_hex		(x,	1);
	set_cmt	(0X43E3F4EE,	"a5",	0);
	set_cmt	(0X43E3F4FA,	"a2",	0);
	set_cmt	(0X43E3F4FD,	"a1",	0);
	set_cmt	(0X43E3F500,	"a4",	0);
	set_cmt	(0X43E3F505,	"a3",	0);
	create_insn	(x=0X43E3F51B);
	op_hex		(x,	1);
	set_cmt	(0X43E3F556,	"a9",	0);
	set_cmt	(0X43E3F557,	"a8",	0);
	set_cmt	(0X43E3F562,	"a7",	0);
	set_cmt	(0X43E3F568,	"a6",	0);
	create_insn	(x=0X43E3F569);
	op_hex		(x,	1);
	set_cmt	(0X43E3F56C,	"a2",	0);
	set_cmt	(0X43E3F56F,	"a5",	0);
	set_cmt	(0X43E3F577,	"a4",	0);
	set_cmt	(0X43E3F57E,	"a3",	0);
	set_cmt	(0X43E3F585,	"a1",	0);
	create_insn	(0X43E3F5A4);
	set_cmt	(0X43E3F5BD,	"a9",	0);
	set_cmt	(0X43E3F5BE,	"a8",	0);
	set_cmt	(0X43E3F5BF,	"a7",	0);
	set_cmt	(0X43E3F5CA,	"a6",	0);
	create_insn	(x=0X43E3F5CB);
	op_hex		(x,	1);
	set_cmt	(0X43E3F5D1,	"a5",	0);
	set_cmt	(0X43E3F5DD,	"a2",	0);
	set_cmt	(0X43E3F5E0,	"a1",	0);
	set_cmt	(0X43E3F5E3,	"a4",	0);
	set_cmt	(0X43E3F5E8,	"a3",	0);
	create_insn	(x=0X43E3F604);
	op_hex		(x,	1);
	set_cmt	(0X43E3F636,	"a9",	0);
	set_cmt	(0X43E3F637,	"a8",	0);
	set_cmt	(0X43E3F642,	"a7",	0);
	set_cmt	(0X43E3F648,	"a6",	0);
	create_insn	(x=0X43E3F649);
	op_hex		(x,	1);
	set_cmt	(0X43E3F64C,	"a2",	0);
	set_cmt	(0X43E3F64F,	"a5",	0);
	set_cmt	(0X43E3F657,	"a4",	0);
	set_cmt	(0X43E3F65E,	"a3",	0);
	set_cmt	(0X43E3F665,	"a1",	0);
	set_cmt	(0X43E3F67F,	"a9",	0);
	set_cmt	(0X43E3F680,	"a8",	0);
	set_cmt	(0X43E3F681,	"a7",	0);
	set_cmt	(0X43E3F682,	"a6",	0);
	create_insn	(x=0X43E3F689);
	op_hex		(x,	1);
	set_cmt	(0X43E3F68F,	"a5",	0);
	set_cmt	(0X43E3F69B,	"a2",	0);
	set_cmt	(0X43E3F69E,	"a1",	0);
	set_cmt	(0X43E3F6A1,	"a4",	0);
	set_cmt	(0X43E3F6A6,	"a3",	0);
	create_insn	(x=0X43E3F6CF);
	op_hex		(x,	1);
	set_cmt	(0X43E3F6FA,	"fromArray",	0);
	set_cmt	(0X43E3F704,	"toArray",	0);
	create_insn	(x=0X43E3F715);
	op_hex		(x,	1);
	create_insn	(x=0X43E3F743);
	op_hex		(x,	1);
	create_insn	(0X43E3F74A);
	create_insn	(x=0X43E3F758);
	op_hex		(x,	1);
	set_cmt	(0X43E3F7D1,	"a9",	0);
	set_cmt	(0X43E3F7D2,	"a8",	0);
	set_cmt	(0X43E3F7D3,	"a7",	0);
	set_cmt	(0X43E3F7D4,	"a6",	0);
	create_insn	(x=0X43E3F7D8);
	op_hex		(x,	1);
	set_cmt	(0X43E3F7DE,	"a5",	0);
	set_cmt	(0X43E3F7F0,	"a4",	0);
	set_cmt	(0X43E3F7F7,	"a3",	0);
	set_cmt	(0X43E3F7FA,	"a2",	0);
	set_cmt	(0X43E3F801,	"a1",	0);
	create_insn	(x=0X43E3F829);
	op_hex		(x,	1);
	set_cmt	(0X43E3F8B2,	"to",	0);
	set_cmt	(0X43E3F8B8,	"size",	0);
	set_cmt	(0X43E3F8BD,	"from",	0);
	create_insn	(x=0X43E3F8D9);
	op_hex		(x,	1);
	create_insn	(x=0X43E3F93C);
	op_hex		(x,	1);
	create_insn	(x=0X43E3F966);
	op_hex		(x,	1);
	create_insn	(0X43E3F996);
	create_insn	(x=0X43E3F9D7);
	op_hex		(x,	1);
	create_insn	(x=0X43E3FA23);
	op_hex		(x,	1);
	create_insn	(x=0X43E3FA98);
	op_hex		(x,	1);
	create_insn	(x=0X43E3FACD);
	op_hex		(x,	1);
	make_array	(0X43E3FAF3,	0XD);
	create_insn	(0X43E3FB00);
	set_name	(0X43E3FB00,	"OneTap::GUI::Render::Menu");
	create_insn	(x=0X43E3FB03);
	op_hex		(x,	1);
	set_cmt	(0X43E3FC07,	"fromArray",	0);
	set_cmt	(0X43E3FC18,	"toArray",	0);
	create_insn	(x=0X43E3FC61);
	op_hex		(x,	1);
	create_insn	(x=0X43E3FCCE);
	op_hex		(x,	1);
	create_insn	(x=0X43E3FD3D);
	op_hex		(x,	1);
	make_array	(0X43E3FD59,	0X7);
	create_insn	(0X43E3FD60);
	create_insn	(x=0X43E3FD6B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43E3FD89,	0X17);
	create_insn	(0X43E3FDA0);
	create_insn	(x=0X43E3FDB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3FDC1);
	op_hex		(x,	1);
	create_insn	(x=0X43E3FDD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3FDE5);
	op_hex		(x,	1);
	create_insn	(x=0X43E3FDFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3FE09);
	op_hex		(x,	1);
	create_insn	(x=0X43E3FE20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3FE2D);
	op_hex		(x,	1);
	create_insn	(x=0X43E3FE44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3FE51);
	op_hex		(x,	1);
	create_insn	(x=0X43E3FE68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3FE75);
	op_hex		(x,	1);
	create_insn	(x=0X43E3FE88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3FE95);
	op_hex		(x,	1);
	create_insn	(x=0X43E3FEA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3FEB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E3FEC6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E3FED5);
	op_hex		(x,	1);
	create_insn	(0X43E3FEE3);
	make_array	(0X43E3FEE9,	0X7);
	create_byte	(0X43E3FEF1);
	make_array	(0X43E3FEF1,	0X3);
	create_dword	(0X43E3FEF4);
	make_array	(0X43E3FEF4,	0X1B);
	create_insn	(0X43E3FF60);
	create_insn	(x=0X43E3FF63);
	op_hex		(x,	1);
	create_insn	(x=0X43E3FFB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E40016);
	op_hex		(x,	1);
	create_insn	(x=0X43E4006D);
	op_hex		(x,	1);
	set_cmt	(0X43E400B9,	"a3",	0);
	set_cmt	(0X43E400BA,	"a2",	0);
	set_cmt	(0X43E400BB,	"this",	0);
	create_insn	(x=0X43E40108);
	op_hex		(x,	1);
	set_cmt	(0X43E40150,	"a3",	0);
	set_cmt	(0X43E40151,	"a2",	0);
	set_cmt	(0X43E40152,	"this",	0);
	set_cmt	(0X43E4019F,	"a3",	0);
	set_cmt	(0X43E401A0,	"a2",	0);
	set_cmt	(0X43E401A1,	"this",	0);
	create_insn	(x=0X43E401E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E40265);
	op_hex		(x,	1);
	create_insn	(x=0X43E40277);
	op_hex		(x,	1);
	create_insn	(x=0X43E4027A);
	op_hex		(x,	1);
	create_insn	(x=0X43E40288);
	op_hex		(x,	1);
	create_insn	(x=0X43E402BD);
	op_hex		(x,	1);
	create_insn	(x=0X43E402F2);
	op_hex		(x,	1);
	create_insn	(x=0X43E40307);
	op_hex		(x,	1);
	create_insn	(x=0X43E4030E);
	op_hex		(x,	1);
	create_insn	(x=0X43E40345);
	op_hex		(x,	1);
	create_insn	(x=0X43E40393);
	op_hex		(x,	1);
	create_insn	(x=0X43E403D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E403E1);
	op_hex		(x,	1);
	set_cmt	(0X43E4040C,	"a3",	0);
	set_cmt	(0X43E40411,	"a2",	0);
	set_cmt	(0X43E40412,	"this",	0);
	create_insn	(x=0X43E40444);
	op_hex		(x,	1);
	set_cmt	(0X43E40458,	"a3",	0);
	set_cmt	(0X43E4045C,	"this",	0);
	set_cmt	(0X43E40462,	"a2",	0);
	create_insn	(0X43E40490);
	create_insn	(x=0X43E404D4);
	op_hex		(x,	1);
	create_insn	(x=0X43E40508);
	op_hex		(x,	1);
	create_insn	(x=0X43E4053C);
	op_hex		(x,	1);
	create_insn	(0X43E40583);
	create_insn	(x=0X43E405B7);
	op_hex		(x,	1);
	create_insn	(x=0X43E405FA);
	op_hex		(x,	1);
	create_insn	(0X43E4061A);
	create_insn	(0X43E4063E);
	make_array	(0X43E40643,	0XD);
	create_insn	(0X43E40650);
	set_name	(0X43E40650,	"OneTap::GUI::Render::Tabs::Config");
	create_insn	(x=0X43E40653);
	op_hex		(x,	1);
	create_insn	(x=0X43E40656);
	op_hex		(x,	1);
	create_insn	(x=0X43E40659);
	op_hex		(x,	1);
	set_cmt	(0X43E4065C,	"size",	0);
	create_insn	(x=0X43E40677);
	op_hex		(x,	1);
	create_insn	(x=0X43E4067B);
	op_hex		(x,	1);
	create_insn	(x=0X43E4067E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E4068F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E40699);
	op_hex		(x,	1);
	create_insn	(x=0X43E406AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E406B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E406CE,	"Size",	0);
	create_insn	(x=0X43E406D8);
	op_hex		(x,	1);
	create_insn	(x=0X43E4071A);
	op_hex		(x,	1);
	create_insn	(x=0X43E40730);
	op_hex		(x,	1);
	create_insn	(x=0X43E40779);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E40782);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E40795);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E407B6);
	op_hex		(x,	1);
	create_insn	(x=0X43E407BE);
	op_hex		(x,	1);
	set_cmt	(0X43E407C1,	"Size",	0);
	create_insn	(x=0X43E407D0);
	op_hex		(x,	1);
	create_insn	(x=0X43E4082D);
	op_hex		(x,	1);
	create_insn	(x=0X43E40843);
	op_hex		(x,	1);
	create_insn	(x=0X43E4088E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E40897);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E4089E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E408B3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E408DD,	"Size",	0);
	create_insn	(x=0X43E408E7);
	op_hex		(x,	1);
	create_insn	(x=0X43E4093D);
	op_hex		(x,	1);
	create_insn	(x=0X43E40953);
	op_hex		(x,	1);
	create_insn	(x=0X43E4097E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E40983);
	op_hex		(x,	1);
	set_cmt	(0X43E409C9,	"Size",	0);
	create_insn	(x=0X43E409D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E40A2D);
	op_hex		(x,	1);
	create_insn	(x=0X43E40A43);
	op_hex		(x,	1);
	create_insn	(x=0X43E40A6A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E40A6F);
	op_hex		(x,	1);
	set_cmt	(0X43E40AB5,	"Size",	0);
	create_insn	(x=0X43E40ACC);
	op_hex		(x,	1);
	create_insn	(x=0X43E40B1D);
	op_hex		(x,	1);
	create_insn	(x=0X43E40B33);
	op_hex		(x,	1);
	create_insn	(x=0X43E40B5A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E40B5F);
	op_hex		(x,	1);
	set_cmt	(0X43E40BA5,	"Size",	0);
	create_insn	(x=0X43E40BAF);
	op_hex		(x,	1);
	create_insn	(x=0X43E40BC5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E40BFD);
	op_hex		(x,	1);
	create_insn	(x=0X43E40C13);
	op_hex		(x,	1);
	create_insn	(x=0X43E40C3E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E40C43);
	op_hex		(x,	1);
	create_insn	(x=0X43E40C86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E40C92,	"Size",	0);
	create_insn	(x=0X43E40CB0);
	op_hex		(x,	1);
	create_insn	(x=0X43E40D0D);
	op_hex		(x,	1);
	create_insn	(x=0X43E40D23);
	op_hex		(x,	1);
	set_cmt	(0X43E40D65,	"Size",	0);
	create_insn	(x=0X43E40D6F);
	op_hex		(x,	1);
	create_insn	(x=0X43E40DCD);
	op_hex		(x,	1);
	create_insn	(x=0X43E40DE3);
	op_hex		(x,	1);
	create_insn	(x=0X43E40E0A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E40E0F);
	op_hex		(x,	1);
	set_cmt	(0X43E40E5F,	"Size",	0);
	create_insn	(x=0X43E40E76);
	op_hex		(x,	1);
	create_insn	(x=0X43E40ECD);
	op_hex		(x,	1);
	create_insn	(x=0X43E40EE3);
	op_hex		(x,	1);
	set_cmt	(0X43E40F25,	"Size",	0);
	create_insn	(x=0X43E40F2F);
	op_hex		(x,	1);
	create_insn	(x=0X43E40F8D);
	op_hex		(x,	1);
	create_insn	(x=0X43E40FA3);
	op_hex		(x,	1);
	create_insn	(x=0X43E40FCA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E40FCF);
	op_hex		(x,	1);
	set_cmt	(0X43E4101F,	"Size",	0);
	create_insn	(x=0X43E4103D);
	op_hex		(x,	1);
	create_insn	(x=0X43E4108D);
	op_hex		(x,	1);
	create_insn	(x=0X43E410A3);
	op_hex		(x,	1);
	set_cmt	(0X43E410E5,	"Size",	0);
	create_insn	(x=0X43E410FC);
	op_hex		(x,	1);
	create_insn	(x=0X43E4113D);
	op_hex		(x,	1);
	create_insn	(x=0X43E41153);
	op_hex		(x,	1);
	create_insn	(x=0X43E4117A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4117F);
	op_hex		(x,	1);
	set_cmt	(0X43E411CF,	"Size",	0);
	create_insn	(x=0X43E411ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E4128D);
	op_hex		(x,	1);
	create_insn	(x=0X43E412A6);
	op_hex		(x,	1);
	set_cmt	(0X43E412E8,	"Size",	0);
	create_insn	(x=0X43E412F2);
	op_hex		(x,	1);
	create_insn	(x=0X43E4132A);
	op_hex		(x,	1);
	create_insn	(x=0X43E41340);
	op_hex		(x,	1);
	create_insn	(x=0X43E413BD);
	op_hex		(x,	1);
	create_insn	(x=0X43E413D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E4143D);
	op_hex		(x,	1);
	create_insn	(x=0X43E41453);
	op_hex		(x,	1);
	create_insn	(x=0X43E414CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E414E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E4150E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4151B);
	op_hex		(x,	1);
	create_insn	(x=0X43E41541);
	op_hex		(x,	1);
	set_cmt	(0X43E415BB,	"Size",	0);
	create_insn	(x=0X43E415D2);
	op_hex		(x,	1);
	create_insn	(x=0X43E4162D);
	op_hex		(x,	1);
	create_insn	(x=0X43E41643);
	op_hex		(x,	1);
	set_cmt	(0X43E41685,	"Size",	0);
	create_insn	(x=0X43E4168F);
	op_hex		(x,	1);
	create_insn	(x=0X43E416DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E416F0);
	op_hex		(x,	1);
	create_insn	(x=0X43E4174A);
	op_hex		(x,	1);
	create_insn	(x=0X43E41760);
	op_hex		(x,	1);
	create_insn	(x=0X43E417DD);
	op_hex		(x,	1);
	create_insn	(x=0X43E417F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E4181C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E41829);
	op_hex		(x,	1);
	create_insn	(x=0X43E4184F);
	op_hex		(x,	1);
	set_cmt	(0X43E418BE,	"Size",	0);
	create_insn	(x=0X43E418D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4192D);
	op_hex		(x,	1);
	create_insn	(x=0X43E41943);
	op_hex		(x,	1);
	set_cmt	(0X43E41985,	"Size",	0);
	create_insn	(x=0X43E4198F);
	op_hex		(x,	1);
	create_insn	(x=0X43E419ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E41A03);
	op_hex		(x,	1);
	create_insn	(x=0X43E41A5D);
	op_hex		(x,	1);
	create_insn	(x=0X43E41A73);
	op_hex		(x,	1);
	create_insn	(x=0X43E41AED);
	op_hex		(x,	1);
	create_insn	(x=0X43E41B03);
	op_hex		(x,	1);
	create_insn	(x=0X43E41B6D);
	op_hex		(x,	1);
	create_insn	(x=0X43E41B83);
	op_hex		(x,	1);
	create_insn	(x=0X43E41BFD);
	op_hex		(x,	1);
	create_insn	(x=0X43E41C13);
	op_hex		(x,	1);
	create_insn	(x=0X43E41D05);
	op_hex		(x,	1);
	create_insn	(x=0X43E41D1A);
	op_hex		(x,	1);
	create_insn	(x=0X43E41E55);
	op_hex		(x,	1);
	create_insn	(x=0X43E41E6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E41FA8);
	op_hex		(x,	1);
	create_insn	(x=0X43E41FBD);
	op_hex		(x,	1);
	create_insn	(x=0X43E420C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E420DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E42103);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E42108);
	op_hex		(x,	1);
	create_insn	(x=0X43E4212E);
	op_hex		(x,	1);
	set_cmt	(0X43E421D0,	"Size",	0);
	create_insn	(x=0X43E421DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E42345);
	op_hex		(x,	1);
	create_insn	(x=0X43E4235A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4237D);
	op_hex		(x,	1);
	set_cmt	(0X43E42396,	"Size",	0);
	create_insn	(x=0X43E423A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E42442);
	op_hex		(x,	1);
	create_insn	(x=0X43E42457);
	op_hex		(x,	1);
	create_insn	(x=0X43E4247A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4247F);
	op_hex		(x,	1);
	create_insn	(x=0X43E424C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E424CF);
	op_hex		(x,	1);
	create_insn	(x=0X43E424D7);
	op_hex		(x,	1);
	set_cmt	(0X43E424DA,	"Size",	0);
	create_insn	(x=0X43E424E9);
	op_hex		(x,	1);
	create_insn	(x=0X43E425B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E425CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E425ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E42609);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E42628);
	op_hex		(x,	1);
	create_insn	(x=0X43E4262C);
	op_hex		(x,	1);
	create_insn	(x=0X43E4262F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E4263E,	"Size",	0);
	create_insn	(x=0X43E42648);
	op_hex		(x,	1);
	create_insn	(x=0X43E42855);
	op_hex		(x,	1);
	create_insn	(x=0X43E4286A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4288D);
	op_hex		(x,	1);
	set_cmt	(0X43E428A6,	"Size",	0);
	create_insn	(x=0X43E428B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E42919);
	op_hex		(x,	1);
	create_insn	(x=0X43E4292E);
	op_hex		(x,	1);
	create_insn	(x=0X43E42953);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E42958);
	op_hex		(x,	1);
	set_cmt	(0X43E4299E,	"Size",	0);
	create_insn	(x=0X43E429A8);
	op_hex		(x,	1);
	create_insn	(x=0X43E42C95);
	op_hex		(x,	1);
	create_insn	(x=0X43E42CAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E42CCD);
	op_hex		(x,	1);
	set_cmt	(0X43E42CE6,	"Size",	0);
	create_insn	(x=0X43E42CF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E42D72);
	op_hex		(x,	1);
	create_insn	(x=0X43E42D87);
	op_hex		(x,	1);
	create_insn	(x=0X43E42DAA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E42DAF);
	op_hex		(x,	1);
	set_cmt	(0X43E42DF0,	"Size",	0);
	create_insn	(x=0X43E42DFA);
	op_hex		(x,	1);
	create_insn	(x=0X43E42F05);
	op_hex		(x,	1);
	create_insn	(x=0X43E42F1A);
	op_hex		(x,	1);
	create_insn	(x=0X43E42F3D);
	op_hex		(x,	1);
	create_insn	(x=0X43E42F59);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E42F73,	"Size",	0);
	create_insn	(x=0X43E42F7D);
	op_hex		(x,	1);
	create_insn	(x=0X43E43195);
	op_hex		(x,	1);
	create_insn	(x=0X43E431AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E431CD);
	op_hex		(x,	1);
	set_cmt	(0X43E431E6,	"Size",	0);
	create_insn	(x=0X43E431F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E43259);
	op_hex		(x,	1);
	create_insn	(x=0X43E4326E);
	op_hex		(x,	1);
	create_insn	(x=0X43E43291);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E43296);
	op_hex		(x,	1);
	set_cmt	(0X43E432D7,	"Size",	0);
	create_insn	(x=0X43E432E1);
	op_hex		(x,	1);
	create_insn	(x=0X43E43525);
	op_hex		(x,	1);
	create_insn	(x=0X43E4353A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4355D);
	op_hex		(x,	1);
	set_cmt	(0X43E43576,	"Size",	0);
	create_insn	(x=0X43E43583);
	op_hex		(x,	1);
	create_insn	(x=0X43E43607);
	op_hex		(x,	1);
	create_insn	(x=0X43E4361C);
	op_hex		(x,	1);
	create_insn	(x=0X43E4363F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E43644);
	op_hex		(x,	1);
	set_cmt	(0X43E43685,	"Size",	0);
	create_insn	(x=0X43E4368F);
	op_hex		(x,	1);
	create_insn	(x=0X43E438C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E438DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E438FD);
	op_hex		(x,	1);
	set_cmt	(0X43E43916,	"Size",	0);
	create_insn	(x=0X43E43929);
	op_hex		(x,	1);
	create_insn	(x=0X43E439B9);
	op_hex		(x,	1);
	create_insn	(x=0X43E439CE);
	op_hex		(x,	1);
	create_insn	(x=0X43E439F1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E439F6);
	op_hex		(x,	1);
	create_insn	(x=0X43E43A3C);
	op_hex		(x,	1);
	create_insn	(x=0X43E43A44);
	op_hex		(x,	1);
	set_cmt	(0X43E43A47,	"Size",	0);
	create_insn	(x=0X43E43A56);
	op_hex		(x,	1);
	create_insn	(x=0X43E43B45);
	op_hex		(x,	1);
	create_insn	(x=0X43E43B5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E43B7D);
	op_hex		(x,	1);
	create_insn	(x=0X43E43B99);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E43BB3,	"Size",	0);
	create_insn	(x=0X43E43BBD);
	op_hex		(x,	1);
	set_cmt	(0X43E43BC3,	"symbol",	0);
	set_cmt	(0X43E43BCA,	"symbol",	0);
	set_cmt	(0X43E43BD7,	"symbol",	0);
	set_cmt	(0X43E43BE4,	"symbol",	0);
	set_cmt	(0X43E43BF1,	"symbol",	0);
	set_cmt	(0X43E43BFE,	"symbol",	0);
	set_cmt	(0X43E43C0B,	"symbol",	0);
	set_cmt	(0X43E43C18,	"symbol",	0);
	set_cmt	(0X43E43C25,	"symbol",	0);
	set_cmt	(0X43E43C32,	"symbol",	0);
	set_cmt	(0X43E43C3F,	"symbol",	0);
	set_cmt	(0X43E43C4C,	"symbol",	0);
	set_cmt	(0X43E43C59,	"symbol",	0);
	set_cmt	(0X43E43C66,	"symbol",	0);
	set_cmt	(0X43E43C73,	"symbol",	0);
	set_cmt	(0X43E43C80,	"symbol",	0);
	set_cmt	(0X43E43C8D,	"symbol",	0);
	set_cmt	(0X43E43C9A,	"symbol",	0);
	set_cmt	(0X43E43CA7,	"symbol",	0);
	set_cmt	(0X43E43CB4,	"symbol",	0);
	set_cmt	(0X43E43CC1,	"symbol",	0);
	set_cmt	(0X43E43CCE,	"symbol",	0);
	set_cmt	(0X43E43CDB,	"symbol",	0);
	set_cmt	(0X43E43CE8,	"symbol",	0);
	set_cmt	(0X43E43CF5,	"symbol",	0);
	set_cmt	(0X43E43D02,	"symbol",	0);
	set_cmt	(0X43E43D0F,	"symbol",	0);
	set_cmt	(0X43E43D1C,	"symbol",	0);
	set_cmt	(0X43E43D29,	"symbol",	0);
	set_cmt	(0X43E43D36,	"symbol",	0);
	set_cmt	(0X43E43D43,	"symbol",	0);
	set_cmt	(0X43E43D50,	"symbol",	0);
	create_insn	(x=0X43E43D95);
	op_hex		(x,	1);
	create_insn	(x=0X43E43DAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E43DCD);
	op_hex		(x,	1);
	set_cmt	(0X43E43DE6,	"Size",	0);
	create_insn	(x=0X43E43DF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E43E72);
	op_hex		(x,	1);
	create_insn	(x=0X43E43E87);
	op_hex		(x,	1);
	create_insn	(x=0X43E43EAE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E43EB5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E43EC7);
	op_hex		(x,	1);
	create_insn	(x=0X43E43ED3);
	op_hex		(x,	1);
	set_cmt	(0X43E43F1D,	"Size",	0);
	create_insn	(x=0X43E43F27);
	op_hex		(x,	1);
	create_insn	(x=0X43E441E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E441FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E4421D);
	op_hex		(x,	1);
	set_cmt	(0X43E44236,	"Size",	0);
	create_insn	(x=0X43E44243);
	op_hex		(x,	1);
	create_insn	(x=0X43E442A9);
	op_hex		(x,	1);
	create_insn	(x=0X43E442BE);
	op_hex		(x,	1);
	create_insn	(x=0X43E442E1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E442E6);
	op_hex		(x,	1);
	set_cmt	(0X43E44327,	"Size",	0);
	create_insn	(x=0X43E44331);
	op_hex		(x,	1);
	create_insn	(x=0X43E44556);
	op_hex		(x,	1);
	create_insn	(x=0X43E4456B);
	op_hex		(x,	1);
	create_insn	(x=0X43E4458E);
	op_hex		(x,	1);
	set_cmt	(0X43E445A7,	"Size",	0);
	create_insn	(x=0X43E445B4);
	op_hex		(x,	1);
	set_cmt	(0X43E445BA,	"symbol",	0);
	set_cmt	(0X43E445C1,	"symbol",	0);
	set_cmt	(0X43E445CB,	"symbol",	0);
	set_cmt	(0X43E445D5,	"symbol",	0);
	set_cmt	(0X43E445DF,	"symbol",	0);
	set_cmt	(0X43E445E9,	"symbol",	0);
	set_cmt	(0X43E445F3,	"symbol",	0);
	set_cmt	(0X43E445FD,	"symbol",	0);
	create_insn	(x=0X43E44638);
	op_hex		(x,	1);
	create_insn	(x=0X43E4464D);
	op_hex		(x,	1);
	create_insn	(x=0X43E44670);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E44675);
	op_hex		(x,	1);
	make_array	(0X43E446C1,	0XF);
	create_insn	(0X43E446D0);
	set_name	(0X43E446D0,	"OneTap::GUI::Render::Tabs::Misc");
	create_insn	(x=0X43E446D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E446D6);
	op_hex		(x,	1);
	create_insn	(x=0X43E446D9);
	op_hex		(x,	1);
	set_cmt	(0X43E446DC,	"size",	0);
	create_insn	(x=0X43E446F7);
	op_hex		(x,	1);
	create_insn	(x=0X43E446FB);
	op_hex		(x,	1);
	create_insn	(x=0X43E446FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E4470F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E44719);
	op_hex		(x,	1);
	create_insn	(x=0X43E4472B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E44738);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E4474E,	"Size",	0);
	create_insn	(x=0X43E44758);
	op_hex		(x,	1);
	create_insn	(x=0X43E4479A);
	op_hex		(x,	1);
	create_insn	(x=0X43E447B0);
	op_hex		(x,	1);
	create_insn	(x=0X43E447F9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E44802);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E44815);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E44836);
	op_hex		(x,	1);
	create_insn	(x=0X43E4483E);
	op_hex		(x,	1);
	set_cmt	(0X43E44841,	"Size",	0);
	create_insn	(x=0X43E44850);
	op_hex		(x,	1);
	create_insn	(x=0X43E4489D);
	op_hex		(x,	1);
	create_insn	(x=0X43E448B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E448FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E44907);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E4490E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E44923);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E4494D,	"Size",	0);
	create_insn	(x=0X43E44964);
	op_hex		(x,	1);
	create_insn	(x=0X43E449BD);
	op_hex		(x,	1);
	create_insn	(x=0X43E449D3);
	op_hex		(x,	1);
	set_cmt	(0X43E44A15,	"Size",	0);
	create_insn	(x=0X43E44A1F);
	op_hex		(x,	1);
	create_insn	(x=0X43E44A5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E44A70);
	op_hex		(x,	1);
	create_insn	(x=0X43E44ADD);
	op_hex		(x,	1);
	create_insn	(x=0X43E44AF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E44B5D);
	op_hex		(x,	1);
	create_insn	(x=0X43E44B73);
	op_hex		(x,	1);
	create_insn	(x=0X43E44BDD);
	op_hex		(x,	1);
	create_insn	(x=0X43E44BF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E44C5D);
	op_hex		(x,	1);
	create_insn	(x=0X43E44C73);
	op_hex		(x,	1);
	create_insn	(x=0X43E44CDD);
	op_hex		(x,	1);
	create_insn	(x=0X43E44CF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E44D5D);
	op_hex		(x,	1);
	create_insn	(x=0X43E44D73);
	op_hex		(x,	1);
	create_insn	(x=0X43E44DDD);
	op_hex		(x,	1);
	create_insn	(x=0X43E44DF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E44EC9);
	op_hex		(x,	1);
	create_insn	(x=0X43E44EDE);
	op_hex		(x,	1);
	create_insn	(x=0X43E45005);
	op_hex		(x,	1);
	create_insn	(x=0X43E4501A);
	op_hex		(x,	1);
	create_insn	(x=0X43E45135);
	op_hex		(x,	1);
	create_insn	(x=0X43E4514A);
	op_hex		(x,	1);
	create_insn	(x=0X43E451F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4520A);
	op_hex		(x,	1);
	create_insn	(x=0X43E452F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4530A);
	op_hex		(x,	1);
	create_insn	(x=0X43E45405);
	op_hex		(x,	1);
	create_insn	(x=0X43E4541A);
	op_hex		(x,	1);
	create_insn	(x=0X43E454A2);
	op_hex		(x,	1);
	create_insn	(x=0X43E454B7);
	op_hex		(x,	1);
	create_insn	(x=0X43E455A7);
	op_hex		(x,	1);
	create_insn	(x=0X43E455BC);
	op_hex		(x,	1);
	create_insn	(x=0X43E45675);
	op_hex		(x,	1);
	create_insn	(x=0X43E4568A);
	op_hex		(x,	1);
	create_insn	(x=0X43E45765);
	op_hex		(x,	1);
	create_insn	(x=0X43E4577A);
	op_hex		(x,	1);
	create_insn	(x=0X43E45877);
	op_hex		(x,	1);
	create_insn	(x=0X43E4588C);
	op_hex		(x,	1);
	create_insn	(x=0X43E45935);
	op_hex		(x,	1);
	create_insn	(x=0X43E4594A);
	op_hex		(x,	1);
	create_insn	(x=0X43E459F9);
	op_hex		(x,	1);
	create_insn	(x=0X43E45A0E);
	op_hex		(x,	1);
	create_insn	(x=0X43E45B25);
	op_hex		(x,	1);
	create_insn	(x=0X43E45B3A);
	op_hex		(x,	1);
	create_insn	(x=0X43E45C45);
	op_hex		(x,	1);
	create_insn	(x=0X43E45C5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E45D75);
	op_hex		(x,	1);
	create_insn	(x=0X43E45D8A);
	op_hex		(x,	1);
	create_insn	(x=0X43E45E87);
	op_hex		(x,	1);
	create_insn	(x=0X43E45E9C);
	op_hex		(x,	1);
	create_insn	(x=0X43E45FE5);
	op_hex		(x,	1);
	create_insn	(x=0X43E45FFA);
	op_hex		(x,	1);
	create_insn	(x=0X43E46135);
	op_hex		(x,	1);
	create_insn	(x=0X43E4614A);
	op_hex		(x,	1);
	create_insn	(x=0X43E46265);
	op_hex		(x,	1);
	create_insn	(x=0X43E4627A);
	op_hex		(x,	1);
	create_insn	(x=0X43E46385);
	op_hex		(x,	1);
	create_insn	(x=0X43E4639A);
	op_hex		(x,	1);
	create_insn	(x=0X43E464F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4650A);
	op_hex		(x,	1);
	create_insn	(x=0X43E46638);
	op_hex		(x,	1);
	create_insn	(x=0X43E4664D);
	op_hex		(x,	1);
	create_insn	(x=0X43E46678);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4667D);
	op_hex		(x,	1);
	create_insn	(x=0X43E466A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E466D9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E46846,	"Size",	0);
	create_insn	(x=0X43E46850);
	op_hex		(x,	1);
	create_insn	(x=0X43E46AA9);
	op_hex		(x,	1);
	create_insn	(x=0X43E46ABE);
	op_hex		(x,	1);
	create_insn	(x=0X43E46AE1);
	op_hex		(x,	1);
	set_cmt	(0X43E46AFA,	"Size",	0);
	create_insn	(x=0X43E46B07);
	op_hex		(x,	1);
	create_insn	(x=0X43E46BE5);
	op_hex		(x,	1);
	create_insn	(x=0X43E46BFA);
	op_hex		(x,	1);
	create_insn	(x=0X43E46C21);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E46C26);
	op_hex		(x,	1);
	set_cmt	(0X43E46C67,	"Size",	0);
	create_insn	(x=0X43E46C71);
	op_hex		(x,	1);
	create_insn	(x=0X43E46F59);
	op_hex		(x,	1);
	create_insn	(x=0X43E46F6E);
	op_hex		(x,	1);
	create_insn	(x=0X43E46F91);
	op_hex		(x,	1);
	set_cmt	(0X43E46FAA,	"Size",	0);
	create_insn	(x=0X43E46FB7);
	op_hex		(x,	1);
	create_insn	(x=0X43E470A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E470BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E470E1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E470E6);
	op_hex		(x,	1);
	set_cmt	(0X43E47127,	"Size",	0);
	create_insn	(x=0X43E47131);
	op_hex		(x,	1);
	create_insn	(x=0X43E47345);
	op_hex		(x,	1);
	create_insn	(x=0X43E4735A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4737D);
	op_hex		(x,	1);
	set_cmt	(0X43E47396,	"Size",	0);
	create_insn	(x=0X43E473A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E47515);
	op_hex		(x,	1);
	create_insn	(x=0X43E4752A);
	op_hex		(x,	1);
	create_insn	(x=0X43E47551);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E47556);
	op_hex		(x,	1);
	set_cmt	(0X43E47597,	"Size",	0);
	create_insn	(x=0X43E475A1);
	op_hex		(x,	1);
	create_insn	(x=0X43E47835);
	op_hex		(x,	1);
	create_insn	(x=0X43E4784A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4786D);
	op_hex		(x,	1);
	set_cmt	(0X43E47886,	"Size",	0);
	create_insn	(x=0X43E47893);
	op_hex		(x,	1);
	create_insn	(x=0X43E47995);
	op_hex		(x,	1);
	create_insn	(x=0X43E479AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E479D1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E479D6);
	op_hex		(x,	1);
	create_insn	(x=0X43E47A1C);
	op_hex		(x,	1);
	create_insn	(x=0X43E47A24);
	op_hex		(x,	1);
	set_cmt	(0X43E47A27,	"Size",	0);
	create_insn	(x=0X43E47A36);
	op_hex		(x,	1);
	create_insn	(x=0X43E47AE5);
	op_hex		(x,	1);
	create_insn	(x=0X43E47AFA);
	op_hex		(x,	1);
	create_insn	(x=0X43E47B1D);
	op_hex		(x,	1);
	create_insn	(x=0X43E47B39);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E47B53,	"Size",	0);
	create_insn	(x=0X43E47B5D);
	op_hex		(x,	1);
	create_insn	(x=0X43E47EB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E47ECA);
	op_hex		(x,	1);
	create_insn	(x=0X43E47EED);
	op_hex		(x,	1);
	set_cmt	(0X43E47F06,	"Size",	0);
	create_insn	(x=0X43E47F13);
	op_hex		(x,	1);
	create_insn	(x=0X43E47FD9);
	op_hex		(x,	1);
	create_insn	(x=0X43E47FEE);
	op_hex		(x,	1);
	create_insn	(x=0X43E48015);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4801A);
	op_hex		(x,	1);
	set_cmt	(0X43E4805B,	"Size",	0);
	create_insn	(x=0X43E48065);
	op_hex		(x,	1);
	create_insn	(x=0X43E481B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E481CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E481ED);
	op_hex		(x,	1);
	set_cmt	(0X43E48206,	"Size",	0);
	create_insn	(x=0X43E48213);
	op_hex		(x,	1);
	create_insn	(x=0X43E482E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E482FB);
	op_hex		(x,	1);
	create_insn	(x=0X43E48322);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E48327);
	op_hex		(x,	1);
	create_insn	(x=0X43E48352);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E48374,	"Size",	0);
	create_insn	(x=0X43E4837E);
	op_hex		(x,	1);
	create_insn	(x=0X43E484F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4850A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4852D);
	op_hex		(x,	1);
	set_cmt	(0X43E48546,	"Size",	0);
	create_insn	(x=0X43E48553);
	op_hex		(x,	1);
	create_insn	(x=0X43E48615);
	op_hex		(x,	1);
	create_insn	(x=0X43E4862A);
	op_hex		(x,	1);
	create_insn	(x=0X43E48651);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E48656);
	op_hex		(x,	1);
	set_cmt	(0X43E48697,	"Size",	0);
	create_insn	(x=0X43E486A1);
	op_hex		(x,	1);
	create_insn	(x=0X43E48907);
	op_hex		(x,	1);
	create_insn	(x=0X43E4891C);
	op_hex		(x,	1);
	create_insn	(x=0X43E4893F);
	op_hex		(x,	1);
	set_cmt	(0X43E48958,	"Size",	0);
	create_insn	(x=0X43E48965);
	op_hex		(x,	1);
	create_insn	(x=0X43E48A55);
	op_hex		(x,	1);
	create_insn	(x=0X43E48A6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E48A91);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E48A96);
	op_hex		(x,	1);
	set_cmt	(0X43E48AD7,	"Size",	0);
	create_insn	(x=0X43E48AE1);
	op_hex		(x,	1);
	create_insn	(x=0X43E48DB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E48DCA);
	op_hex		(x,	1);
	create_insn	(x=0X43E48DED);
	op_hex		(x,	1);
	set_cmt	(0X43E48E06,	"Size",	0);
	create_insn	(x=0X43E48E13);
	op_hex		(x,	1);
	create_insn	(x=0X43E48F15);
	op_hex		(x,	1);
	create_insn	(x=0X43E48F2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E48F51);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E48F56);
	op_hex		(x,	1);
	set_cmt	(0X43E48F97,	"Size",	0);
	create_insn	(x=0X43E48FA1);
	op_hex		(x,	1);
	create_insn	(x=0X43E49178);
	op_hex		(x,	1);
	create_insn	(x=0X43E4918D);
	op_hex		(x,	1);
	create_insn	(x=0X43E491B0);
	op_hex		(x,	1);
	set_cmt	(0X43E491C9,	"Size",	0);
	create_insn	(x=0X43E491D6);
	op_hex		(x,	1);
	create_insn	(x=0X43E49305);
	op_hex		(x,	1);
	create_insn	(x=0X43E4931A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4933F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E49344);
	op_hex		(x,	1);
	create_insn	(x=0X43E4936F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E49391,	"Size",	0);
	create_insn	(x=0X43E4939B);
	op_hex		(x,	1);
	create_insn	(x=0X43E49775);
	op_hex		(x,	1);
	create_insn	(x=0X43E4978A);
	op_hex		(x,	1);
	create_insn	(x=0X43E497AD);
	op_hex		(x,	1);
	set_cmt	(0X43E497C6,	"Size",	0);
	create_insn	(x=0X43E497D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E498E7);
	op_hex		(x,	1);
	create_insn	(x=0X43E498FC);
	op_hex		(x,	1);
	create_insn	(x=0X43E49923);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E49928);
	op_hex		(x,	1);
	create_insn	(x=0X43E49953);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E49975,	"Size",	0);
	create_insn	(x=0X43E4997F);
	op_hex		(x,	1);
	create_insn	(x=0X43E49B75);
	op_hex		(x,	1);
	create_insn	(x=0X43E49B8A);
	op_hex		(x,	1);
	create_insn	(x=0X43E49BAD);
	op_hex		(x,	1);
	set_cmt	(0X43E49BC6,	"Size",	0);
	create_insn	(x=0X43E49BD3);
	op_hex		(x,	1);
	create_insn	(x=0X43E49D25);
	op_hex		(x,	1);
	create_insn	(x=0X43E49D3A);
	op_hex		(x,	1);
	create_insn	(x=0X43E49D5F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E49D64);
	op_hex		(x,	1);
	create_insn	(x=0X43E49D8F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E49DB1,	"Size",	0);
	create_insn	(x=0X43E49DBB);
	op_hex		(x,	1);
	create_insn	(x=0X43E49FF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A00A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A02D);
	op_hex		(x,	1);
	set_cmt	(0X43E4A046,	"Size",	0);
	create_insn	(x=0X43E4A053);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A115);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A12A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A151);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4A156);
	op_hex		(x,	1);
	set_cmt	(0X43E4A197,	"Size",	0);
	create_insn	(x=0X43E4A1A1);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A3D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A3EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A40D);
	op_hex		(x,	1);
	set_cmt	(0X43E4A426,	"Size",	0);
	create_insn	(x=0X43E4A433);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A525);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A53A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A55F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4A564);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A58F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E4A5B1,	"Size",	0);
	create_insn	(x=0X43E4A5BB);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A785);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A79A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A7BD);
	op_hex		(x,	1);
	set_cmt	(0X43E4A7D6,	"Size",	0);
	create_insn	(x=0X43E4A7E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A8A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A8BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E4A8E1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4A8E6);
	op_hex		(x,	1);
	set_cmt	(0X43E4A927,	"Size",	0);
	create_insn	(x=0X43E4A931);
	op_hex		(x,	1);
	create_insn	(x=0X43E4AAC7);
	op_hex		(x,	1);
	create_insn	(x=0X43E4AADC);
	op_hex		(x,	1);
	create_insn	(x=0X43E4AAFF);
	op_hex		(x,	1);
	set_cmt	(0X43E4AB18,	"Size",	0);
	create_insn	(x=0X43E4AB25);
	op_hex		(x,	1);
	create_insn	(x=0X43E4ABF8);
	op_hex		(x,	1);
	create_insn	(x=0X43E4AC0D);
	op_hex		(x,	1);
	create_insn	(x=0X43E4AC34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4AC39);
	op_hex		(x,	1);
	set_cmt	(0X43E4AC7A,	"Size",	0);
	create_insn	(x=0X43E4AC84);
	op_hex		(x,	1);
	create_insn	(x=0X43E4AE25);
	op_hex		(x,	1);
	create_insn	(x=0X43E4AE3A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4AE5D);
	op_hex		(x,	1);
	set_cmt	(0X43E4AE76,	"Size",	0);
	create_insn	(x=0X43E4AE83);
	op_hex		(x,	1);
	create_insn	(x=0X43E4AF08);
	op_hex		(x,	1);
	create_insn	(x=0X43E4AF1D);
	op_hex		(x,	1);
	create_insn	(x=0X43E4AFD5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4AFEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B0E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B0FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B182);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B197);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B2E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B2FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B325);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4B32A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B350);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B384);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E4B3D2,	"Size",	0);
	create_insn	(x=0X43E4B3DC);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B635);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B64A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B66D);
	op_hex		(x,	1);
	set_cmt	(0X43E4B686,	"Size",	0);
	create_insn	(x=0X43E4B693);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B6F2);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B707);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B7F9);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B80E);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B837);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B857);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4B85C);
	op_hex		(x,	1);
	create_insn	(x=0X43E4B885);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E4B8B2,	"Size",	0);
	create_insn	(x=0X43E4B8BC);
	op_hex		(x,	1);
	create_insn	(x=0X43E4BA15);
	op_hex		(x,	1);
	create_insn	(x=0X43E4BA2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4BA4D);
	op_hex		(x,	1);
	set_cmt	(0X43E4BA66,	"Size",	0);
	create_insn	(x=0X43E4BA73);
	op_hex		(x,	1);
	create_insn	(x=0X43E4BAD2);
	op_hex		(x,	1);
	create_insn	(x=0X43E4BAE7);
	op_hex		(x,	1);
	create_insn	(x=0X43E4BC25);
	op_hex		(x,	1);
	create_insn	(x=0X43E4BC3A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4BC63);
	op_hex		(x,	1);
	create_insn	(x=0X43E4BC83);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4BC88);
	op_hex		(x,	1);
	create_insn	(x=0X43E4BCB1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E4BCDE,	"Size",	0);
	create_insn	(x=0X43E4BCE8);
	op_hex		(x,	1);
	create_insn	(x=0X43E4BF68);
	op_hex		(x,	1);
	create_insn	(x=0X43E4BF7D);
	op_hex		(x,	1);
	create_insn	(x=0X43E4BFA0);
	op_hex		(x,	1);
	set_cmt	(0X43E4BFB9,	"Size",	0);
	create_insn	(x=0X43E4BFC6);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C022);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C037);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C155);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C16A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C193);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C1B3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4C1B8);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C1E1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E4C20E,	"Size",	0);
	create_insn	(x=0X43E4C218);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C3C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C3DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C3FD);
	op_hex		(x,	1);
	set_cmt	(0X43E4C416,	"Size",	0);
	create_insn	(x=0X43E4C423);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C515);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C52A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C551);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4C556);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C59C);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C5A4);
	op_hex		(x,	1);
	set_cmt	(0X43E4C5A7,	"Size",	0);
	create_insn	(x=0X43E4C5B6);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C655);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C66A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C68D);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C6A9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E4C6C3,	"Size",	0);
	create_insn	(x=0X43E4C6CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C885);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C89A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C8BD);
	op_hex		(x,	1);
	set_cmt	(0X43E4C8D6,	"Size",	0);
	create_insn	(x=0X43E4C8E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C975);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C98A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4C9B1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4C9B6);
	op_hex		(x,	1);
	set_cmt	(0X43E4C9F7,	"Size",	0);
	create_insn	(x=0X43E4CA01);
	op_hex		(x,	1);
	create_insn	(x=0X43E4CC35);
	op_hex		(x,	1);
	create_insn	(x=0X43E4CC4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4CC6D);
	op_hex		(x,	1);
	set_cmt	(0X43E4CC86,	"Size",	0);
	create_insn	(x=0X43E4CC93);
	op_hex		(x,	1);
	create_insn	(x=0X43E4CCF2);
	op_hex		(x,	1);
	create_insn	(x=0X43E4CD07);
	op_hex		(x,	1);
	create_insn	(x=0X43E4CD2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4CD31);
	op_hex		(x,	1);
	set_cmt	(0X43E4CD72,	"Size",	0);
	create_insn	(x=0X43E4CD7C);
	op_hex		(x,	1);
	create_insn	(x=0X43E4CF39);
	op_hex		(x,	1);
	create_insn	(x=0X43E4CF4E);
	op_hex		(x,	1);
	create_insn	(x=0X43E4CF71);
	op_hex		(x,	1);
	set_cmt	(0X43E4CF8A,	"Size",	0);
	create_insn	(x=0X43E4CF97);
	op_hex		(x,	1);
	create_insn	(x=0X43E4CFF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D008);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D0B9);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D0CE);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D0F7);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D117);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4D11C);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D16B);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D173);
	op_hex		(x,	1);
	set_cmt	(0X43E4D176,	"Size",	0);
	create_insn	(x=0X43E4D185);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D215);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D22A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D24D);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D269);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E4D283,	"Size",	0);
	create_insn	(x=0X43E4D28D);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D435);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D44A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D46D);
	op_hex		(x,	1);
	set_cmt	(0X43E4D486,	"Size",	0);
	create_insn	(x=0X43E4D493);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D4F9);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D50E);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D627);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D63C);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D665);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D685);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4D68A);
	op_hex		(x,	1);
	set_cmt	(0X43E4D6D4,	"Size",	0);
	create_insn	(x=0X43E4D6DE);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D8A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D8BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D8DD);
	op_hex		(x,	1);
	set_cmt	(0X43E4D8F6,	"Size",	0);
	create_insn	(x=0X43E4D903);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D969);
	op_hex		(x,	1);
	create_insn	(x=0X43E4D97E);
	op_hex		(x,	1);
	create_insn	(x=0X43E4DAB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4DACA);
	op_hex		(x,	1);
	create_insn	(x=0X43E4DAF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E4DB13);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4DB18);
	op_hex		(x,	1);
	set_cmt	(0X43E4DB62,	"Size",	0);
	create_insn	(x=0X43E4DB6C);
	op_hex		(x,	1);
	create_insn	(x=0X43E4DF05);
	op_hex		(x,	1);
	create_insn	(x=0X43E4DF1A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4DF3D);
	op_hex		(x,	1);
	set_cmt	(0X43E4DF56,	"Size",	0);
	create_insn	(x=0X43E4DF63);
	op_hex		(x,	1);
	create_insn	(x=0X43E4DFC9);
	op_hex		(x,	1);
	create_insn	(x=0X43E4DFDE);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E0F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E10A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E133);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E153);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4E158);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E1A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E4E1B1);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E1B9);
	op_hex		(x,	1);
	set_cmt	(0X43E4E1BC,	"Size",	0);
	create_insn	(x=0X43E4E1CB);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E232);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E247);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E26A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E286);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E4E2A0,	"Size",	0);
	create_insn	(x=0X43E4E2AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E475);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E48A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E4AD);
	op_hex		(x,	1);
	set_cmt	(0X43E4E4C6,	"Size",	0);
	create_insn	(x=0X43E4E4D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E5A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E5BB);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E5E2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4E5E7);
	op_hex		(x,	1);
	set_cmt	(0X43E4E628,	"Size",	0);
	create_insn	(x=0X43E4E632);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E915);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E92A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4E94D);
	op_hex		(x,	1);
	set_cmt	(0X43E4E966,	"Size",	0);
	create_insn	(x=0X43E4E973);
	op_hex		(x,	1);
	create_insn	(x=0X43E4EA46);
	op_hex		(x,	1);
	create_insn	(x=0X43E4EA5B);
	op_hex		(x,	1);
	create_insn	(x=0X43E4EA82);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4EA87);
	op_hex		(x,	1);
	create_insn	(x=0X43E4EAB2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E4EAD4,	"Size",	0);
	create_insn	(x=0X43E4EADE);
	op_hex		(x,	1);
	create_insn	(x=0X43E4ECD5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4ECEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E4ED0D);
	op_hex		(x,	1);
	set_cmt	(0X43E4ED26,	"Size",	0);
	create_insn	(x=0X43E4ED33);
	op_hex		(x,	1);
	create_insn	(x=0X43E4EE25);
	op_hex		(x,	1);
	create_insn	(x=0X43E4EE3A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4EE61);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4EE66);
	op_hex		(x,	1);
	set_cmt	(0X43E4EEA7,	"Size",	0);
	create_insn	(x=0X43E4EEB1);
	op_hex		(x,	1);
	create_insn	(x=0X43E4F0C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E4F0DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E4F0FD);
	op_hex		(x,	1);
	set_cmt	(0X43E4F116,	"Size",	0);
	create_insn	(x=0X43E4F123);
	op_hex		(x,	1);
	create_insn	(x=0X43E4F235);
	op_hex		(x,	1);
	create_insn	(x=0X43E4F24A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4F271);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4F276);
	op_hex		(x,	1);
	set_cmt	(0X43E4F2B7,	"Size",	0);
	create_insn	(x=0X43E4F2C1);
	op_hex		(x,	1);
	create_insn	(x=0X43E4F795);
	op_hex		(x,	1);
	create_insn	(x=0X43E4F7AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E4F7CD);
	op_hex		(x,	1);
	set_cmt	(0X43E4F7E6,	"Size",	0);
	create_insn	(x=0X43E4F7F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E4F915);
	op_hex		(x,	1);
	create_insn	(x=0X43E4F92A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4F951);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4F956);
	op_hex		(x,	1);
	set_cmt	(0X43E4F997,	"Size",	0);
	create_insn	(x=0X43E4F9A1);
	op_hex		(x,	1);
	create_insn	(x=0X43E4FC45);
	op_hex		(x,	1);
	create_insn	(x=0X43E4FC5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E4FC7D);
	op_hex		(x,	1);
	set_cmt	(0X43E4FC96,	"Size",	0);
	create_insn	(x=0X43E4FCA3);
	op_hex		(x,	1);
	create_insn	(x=0X43E4FD09);
	op_hex		(x,	1);
	create_insn	(x=0X43E4FD1E);
	op_hex		(x,	1);
	create_insn	(x=0X43E4FDB2);
	op_hex		(x,	1);
	create_insn	(x=0X43E4FDC7);
	op_hex		(x,	1);
	create_insn	(x=0X43E4FDF0);
	op_hex		(x,	1);
	create_insn	(x=0X43E4FE13);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E4FE18);
	op_hex		(x,	1);
	create_insn	(x=0X43E4FE41);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E4FE6E,	"Size",	0);
	create_insn	(x=0X43E4FE78);
	op_hex		(x,	1);
	create_insn	(x=0X43E50055);
	op_hex		(x,	1);
	create_insn	(x=0X43E5006A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5008D);
	op_hex		(x,	1);
	set_cmt	(0X43E500A6,	"Size",	0);
	create_insn	(x=0X43E500B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E50208);
	op_hex		(x,	1);
	create_insn	(x=0X43E5021D);
	op_hex		(x,	1);
	create_insn	(x=0X43E50244);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E50249);
	op_hex		(x,	1);
	set_cmt	(0X43E5028A,	"Size",	0);
	create_insn	(x=0X43E50294);
	op_hex		(x,	1);
	create_insn	(x=0X43E505A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E505BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E505DD);
	op_hex		(x,	1);
	set_cmt	(0X43E505F6,	"Size",	0);
	create_insn	(x=0X43E50603);
	op_hex		(x,	1);
	create_insn	(x=0X43E506C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E506DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E50701);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E50706);
	op_hex		(x,	1);
	set_cmt	(0X43E50747,	"Size",	0);
	create_insn	(x=0X43E50751);
	op_hex		(x,	1);
	create_insn	(x=0X43E50885);
	op_hex		(x,	1);
	create_insn	(x=0X43E5089A);
	op_hex		(x,	1);
	create_insn	(x=0X43E508BD);
	op_hex		(x,	1);
	set_cmt	(0X43E508D6,	"Size",	0);
	create_insn	(x=0X43E508E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E50968);
	op_hex		(x,	1);
	create_insn	(x=0X43E5097D);
	op_hex		(x,	1);
	create_insn	(x=0X43E50A35);
	op_hex		(x,	1);
	create_insn	(x=0X43E50A4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E50A73);
	op_hex		(x,	1);
	create_insn	(x=0X43E50A96);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E50A9B);
	op_hex		(x,	1);
	create_insn	(x=0X43E50AC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E50AF1,	"Size",	0);
	create_insn	(x=0X43E50AFB);
	op_hex		(x,	1);
	create_insn	(x=0X43E50D85);
	op_hex		(x,	1);
	create_insn	(x=0X43E50D9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E50DBD);
	op_hex		(x,	1);
	set_cmt	(0X43E50DD6,	"Size",	0);
	create_insn	(x=0X43E50DE3);
	op_hex		(x,	1);
	create_insn	(x=0X43E50F25);
	op_hex		(x,	1);
	create_insn	(x=0X43E50F3A);
	op_hex		(x,	1);
	create_insn	(x=0X43E50F5D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E50F62);
	op_hex		(x,	1);
	create_insn	(x=0X43E50FA8);
	op_hex		(x,	1);
	create_insn	(x=0X43E50FB0);
	op_hex		(x,	1);
	set_cmt	(0X43E50FB3,	"Size",	0);
	create_insn	(x=0X43E50FC2);
	op_hex		(x,	1);
	create_insn	(x=0X43E51075);
	op_hex		(x,	1);
	create_insn	(x=0X43E5108A);
	op_hex		(x,	1);
	create_insn	(x=0X43E510AD);
	op_hex		(x,	1);
	create_insn	(x=0X43E510C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E510E3,	"Size",	0);
	create_insn	(x=0X43E510ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E51295);
	op_hex		(x,	1);
	create_insn	(x=0X43E512AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E512CD);
	op_hex		(x,	1);
	set_cmt	(0X43E512E6,	"Size",	0);
	create_insn	(x=0X43E512F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E51395);
	op_hex		(x,	1);
	create_insn	(x=0X43E513AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E513D1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E513D6);
	op_hex		(x,	1);
	set_cmt	(0X43E51417,	"Size",	0);
	create_insn	(x=0X43E51421);
	op_hex		(x,	1);
	create_insn	(x=0X43E515C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E515DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E515FD);
	op_hex		(x,	1);
	set_cmt	(0X43E51616,	"Size",	0);
	create_insn	(x=0X43E51623);
	op_hex		(x,	1);
	create_insn	(x=0X43E516B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E516CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E51779);
	op_hex		(x,	1);
	create_insn	(x=0X43E5178E);
	op_hex		(x,	1);
	create_insn	(x=0X43E51865);
	op_hex		(x,	1);
	create_insn	(x=0X43E5187A);
	op_hex		(x,	1);
	create_insn	(x=0X43E51922);
	op_hex		(x,	1);
	create_insn	(x=0X43E51937);
	op_hex		(x,	1);
	create_insn	(x=0X43E51962);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E51967);
	op_hex		(x,	1);
	create_insn	(x=0X43E5198D);
	op_hex		(x,	1);
	set_cmt	(0X43E519F8,	"Size",	0);
	create_insn	(x=0X43E51A02);
	op_hex		(x,	1);
	create_insn	(x=0X43E51C15);
	op_hex		(x,	1);
	create_insn	(x=0X43E51C2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E51C4D);
	op_hex		(x,	1);
	set_cmt	(0X43E51C66,	"Size",	0);
	create_insn	(x=0X43E51C73);
	op_hex		(x,	1);
	create_insn	(x=0X43E51D05);
	op_hex		(x,	1);
	create_insn	(x=0X43E51D1A);
	op_hex		(x,	1);
	create_insn	(x=0X43E51D3F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E51D44);
	op_hex		(x,	1);
	create_insn	(x=0X43E51D74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E51D96,	"Size",	0);
	create_insn	(x=0X43E51DA0);
	op_hex		(x,	1);
	create_insn	(x=0X43E51F25);
	op_hex		(x,	1);
	create_insn	(x=0X43E51F3A);
	op_hex		(x,	1);
	create_insn	(x=0X43E51F5D);
	op_hex		(x,	1);
	set_cmt	(0X43E51F76,	"Size",	0);
	create_insn	(x=0X43E51F83);
	op_hex		(x,	1);
	create_insn	(x=0X43E52035);
	op_hex		(x,	1);
	create_insn	(x=0X43E5204A);
	op_hex		(x,	1);
	create_insn	(x=0X43E52071);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E52076);
	op_hex		(x,	1);
	create_insn	(x=0X43E520A1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E520C3,	"Size",	0);
	create_insn	(x=0X43E520CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E52235);
	op_hex		(x,	1);
	create_insn	(x=0X43E5224A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5226D);
	op_hex		(x,	1);
	set_cmt	(0X43E52286,	"Size",	0);
	create_insn	(x=0X43E52293);
	op_hex		(x,	1);
	create_insn	(x=0X43E522F2);
	op_hex		(x,	1);
	create_insn	(x=0X43E52307);
	op_hex		(x,	1);
	create_insn	(x=0X43E523B8);
	op_hex		(x,	1);
	create_insn	(x=0X43E523CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E523F6);
	op_hex		(x,	1);
	create_insn	(x=0X43E52416);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5241B);
	op_hex		(x,	1);
	create_insn	(x=0X43E52444);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5247E);
	op_hex		(x,	1);
	set_cmt	(0X43E52483,	"Size",	0);
	create_insn	(x=0X43E52492);
	op_hex		(x,	1);
	create_insn	(x=0X43E52525);
	op_hex		(x,	1);
	create_insn	(x=0X43E5253A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5255D);
	op_hex		(x,	1);
	create_insn	(x=0X43E52579);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E52593,	"Size",	0);
	create_insn	(x=0X43E5259D);
	op_hex		(x,	1);
	create_insn	(x=0X43E52837);
	op_hex		(x,	1);
	create_insn	(x=0X43E5284C);
	op_hex		(x,	1);
	create_insn	(x=0X43E5286F);
	op_hex		(x,	1);
	set_cmt	(0X43E52888,	"Size",	0);
	create_insn	(x=0X43E52895);
	op_hex		(x,	1);
	create_insn	(x=0X43E52927);
	op_hex		(x,	1);
	create_insn	(x=0X43E5293C);
	op_hex		(x,	1);
	create_insn	(x=0X43E52963);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E52968);
	op_hex		(x,	1);
	set_cmt	(0X43E529A9,	"Size",	0);
	create_insn	(x=0X43E529B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E52C15);
	op_hex		(x,	1);
	create_insn	(x=0X43E52C2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E52C4D);
	op_hex		(x,	1);
	set_cmt	(0X43E52C66,	"Size",	0);
	create_insn	(x=0X43E52C73);
	op_hex		(x,	1);
	create_insn	(x=0X43E52CE5);
	op_hex		(x,	1);
	create_insn	(x=0X43E52CFA);
	op_hex		(x,	1);
	create_insn	(x=0X43E52E45);
	op_hex		(x,	1);
	create_insn	(x=0X43E52E5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E52EE3);
	op_hex		(x,	1);
	create_insn	(x=0X43E52EF8);
	op_hex		(x,	1);
	create_insn	(x=0X43E52FF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E5300A);
	op_hex		(x,	1);
	create_insn	(x=0X43E53115);
	op_hex		(x,	1);
	create_insn	(x=0X43E5312A);
	op_hex		(x,	1);
	create_insn	(x=0X43E531D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E531EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E532D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E532EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E533D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E533EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E534B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E534CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E53553);
	op_hex		(x,	1);
	create_insn	(x=0X43E53568);
	op_hex		(x,	1);
	create_insn	(x=0X43E53635);
	op_hex		(x,	1);
	create_insn	(x=0X43E5364A);
	op_hex		(x,	1);
	create_insn	(x=0X43E536C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E536D8);
	op_hex		(x,	1);
	create_insn	(x=0X43E53785);
	op_hex		(x,	1);
	create_insn	(x=0X43E5379A);
	op_hex		(x,	1);
	create_insn	(x=0X43E53845);
	op_hex		(x,	1);
	create_insn	(x=0X43E5385A);
	op_hex		(x,	1);
	create_insn	(x=0X43E53915);
	op_hex		(x,	1);
	create_insn	(x=0X43E5392A);
	op_hex		(x,	1);
	create_insn	(x=0X43E53A55);
	op_hex		(x,	1);
	create_insn	(x=0X43E53A6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E53B35);
	op_hex		(x,	1);
	create_insn	(x=0X43E53B4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E53C35);
	op_hex		(x,	1);
	create_insn	(x=0X43E53C4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E53C75);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E53C7A);
	op_hex		(x,	1);
	create_insn	(x=0X43E53CA0);
	op_hex		(x,	1);
	set_cmt	(0X43E53DA5,	"Size",	0);
	create_insn	(x=0X43E53DAF);
	op_hex		(x,	1);
	create_insn	(x=0X43E54025);
	op_hex		(x,	1);
	create_insn	(x=0X43E5403A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5405D);
	op_hex		(x,	1);
	set_cmt	(0X43E54076,	"Size",	0);
	create_insn	(x=0X43E54083);
	op_hex		(x,	1);
	create_insn	(x=0X43E54105);
	op_hex		(x,	1);
	create_insn	(x=0X43E5411A);
	op_hex		(x,	1);
	create_insn	(x=0X43E54299);
	op_hex		(x,	1);
	create_insn	(x=0X43E542AE);
	op_hex		(x,	1);
	create_insn	(x=0X43E543B8);
	op_hex		(x,	1);
	create_insn	(x=0X43E543CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E54555);
	op_hex		(x,	1);
	create_insn	(x=0X43E5456A);
	op_hex		(x,	1);
	create_insn	(x=0X43E54655);
	op_hex		(x,	1);
	create_insn	(x=0X43E5466A);
	op_hex		(x,	1);
	create_insn	(x=0X43E54715);
	op_hex		(x,	1);
	create_insn	(x=0X43E5472A);
	op_hex		(x,	1);
	create_insn	(x=0X43E54825);
	op_hex		(x,	1);
	create_insn	(x=0X43E5483A);
	op_hex		(x,	1);
	create_insn	(x=0X43E54865);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5486A);
	op_hex		(x,	1);
	create_insn	(x=0X43E54890);
	op_hex		(x,	1);
	set_cmt	(0X43E5491C,	"Size",	0);
	create_insn	(x=0X43E54926);
	op_hex		(x,	1);
	create_insn	(x=0X43E54B75);
	op_hex		(x,	1);
	create_insn	(x=0X43E54B8A);
	op_hex		(x,	1);
	create_insn	(x=0X43E54BAD);
	op_hex		(x,	1);
	set_cmt	(0X43E54BC6,	"Size",	0);
	create_insn	(x=0X43E54BD3);
	op_hex		(x,	1);
	create_insn	(x=0X43E54C99);
	op_hex		(x,	1);
	create_insn	(x=0X43E54CAE);
	op_hex		(x,	1);
	create_insn	(x=0X43E54D95);
	op_hex		(x,	1);
	create_insn	(x=0X43E54DAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E54EB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E54ECA);
	op_hex		(x,	1);
	create_insn	(x=0X43E54FA5);
	op_hex		(x,	1);
	create_insn	(x=0X43E54FBA);
	op_hex		(x,	1);
	create_insn	(x=0X43E550A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E550BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E55176);
	op_hex		(x,	1);
	create_insn	(x=0X43E5518B);
	op_hex		(x,	1);
	create_insn	(x=0X43E55295);
	op_hex		(x,	1);
	create_insn	(x=0X43E552AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E55345);
	op_hex		(x,	1);
	create_insn	(x=0X43E5535A);
	op_hex		(x,	1);
	create_insn	(x=0X43E55445);
	op_hex		(x,	1);
	create_insn	(x=0X43E5545A);
	op_hex		(x,	1);
	create_insn	(x=0X43E55545);
	op_hex		(x,	1);
	create_insn	(x=0X43E5555A);
	op_hex		(x,	1);
	create_insn	(x=0X43E55583);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E55588);
	op_hex		(x,	1);
	create_insn	(x=0X43E555AE);
	op_hex		(x,	1);
	set_cmt	(0X43E5565B,	"Size",	0);
	create_insn	(x=0X43E55665);
	op_hex		(x,	1);
	create_insn	(x=0X43E55A85);
	op_hex		(x,	1);
	create_insn	(x=0X43E55A9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E55ABD);
	op_hex		(x,	1);
	set_cmt	(0X43E55AD6,	"Size",	0);
	create_insn	(x=0X43E55AE3);
	op_hex		(x,	1);
	create_insn	(x=0X43E55C25);
	op_hex		(x,	1);
	create_insn	(x=0X43E55C3A);
	op_hex		(x,	1);
	create_insn	(x=0X43E55C61);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E55C66);
	op_hex		(x,	1);
	set_cmt	(0X43E55CA7,	"Size",	0);
	create_insn	(x=0X43E55CB1);
	op_hex		(x,	1);
	create_insn	(x=0X43E55FA6);
	op_hex		(x,	1);
	create_insn	(x=0X43E55FBB);
	op_hex		(x,	1);
	create_insn	(x=0X43E55FDE);
	op_hex		(x,	1);
	set_cmt	(0X43E55FF7,	"Size",	0);
	create_insn	(x=0X43E56004);
	op_hex		(x,	1);
	create_insn	(x=0X43E560C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E560DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E560FF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E56104);
	op_hex		(x,	1);
	create_insn	(x=0X43E5612F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E56151,	"Size",	0);
	create_insn	(x=0X43E5615B);
	op_hex		(x,	1);
	create_insn	(x=0X43E56429);
	op_hex		(x,	1);
	create_insn	(x=0X43E5643E);
	op_hex		(x,	1);
	create_insn	(x=0X43E56461);
	op_hex		(x,	1);
	set_cmt	(0X43E5647A,	"Size",	0);
	create_insn	(x=0X43E56487);
	op_hex		(x,	1);
	create_insn	(x=0X43E56545);
	op_hex		(x,	1);
	create_insn	(x=0X43E5655A);
	op_hex		(x,	1);
	create_insn	(x=0X43E56666);
	op_hex		(x,	1);
	create_insn	(x=0X43E5667B);
	op_hex		(x,	1);
	create_insn	(x=0X43E566A2);
	op_hex		(x,	1);
	create_insn	(x=0X43E566C0);
	op_hex		(x,	1);
	create_insn	(x=0X43E566DB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E566E0);
	op_hex		(x,	1);
	create_insn	(x=0X43E56709);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E56736,	"Size",	0);
	create_insn	(x=0X43E56740);
	op_hex		(x,	1);
	create_insn	(x=0X43E56A35);
	op_hex		(x,	1);
	create_insn	(x=0X43E56A4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E56A6D);
	op_hex		(x,	1);
	set_cmt	(0X43E56A86,	"Size",	0);
	create_insn	(x=0X43E56A93);
	op_hex		(x,	1);
	create_insn	(x=0X43E56B15);
	op_hex		(x,	1);
	create_insn	(x=0X43E56B2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E56C75);
	op_hex		(x,	1);
	create_insn	(x=0X43E56C8A);
	op_hex		(x,	1);
	create_insn	(x=0X43E56D13);
	op_hex		(x,	1);
	create_insn	(x=0X43E56D28);
	op_hex		(x,	1);
	create_insn	(x=0X43E56E25);
	op_hex		(x,	1);
	create_insn	(x=0X43E56E3A);
	op_hex		(x,	1);
	create_insn	(x=0X43E56F45);
	op_hex		(x,	1);
	create_insn	(x=0X43E56F5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E57005);
	op_hex		(x,	1);
	create_insn	(x=0X43E5701A);
	op_hex		(x,	1);
	create_insn	(x=0X43E57105);
	op_hex		(x,	1);
	create_insn	(x=0X43E5711A);
	op_hex		(x,	1);
	create_insn	(x=0X43E57205);
	op_hex		(x,	1);
	create_insn	(x=0X43E5721A);
	op_hex		(x,	1);
	create_insn	(x=0X43E572E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E572FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E57383);
	op_hex		(x,	1);
	create_insn	(x=0X43E57398);
	op_hex		(x,	1);
	create_insn	(x=0X43E57465);
	op_hex		(x,	1);
	create_insn	(x=0X43E5747A);
	op_hex		(x,	1);
	create_insn	(x=0X43E574F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E57508);
	op_hex		(x,	1);
	create_insn	(x=0X43E575B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E575CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E57675);
	op_hex		(x,	1);
	create_insn	(x=0X43E5768A);
	op_hex		(x,	1);
	create_insn	(x=0X43E57745);
	op_hex		(x,	1);
	create_insn	(x=0X43E5775A);
	op_hex		(x,	1);
	create_insn	(x=0X43E57885);
	op_hex		(x,	1);
	create_insn	(x=0X43E5789A);
	op_hex		(x,	1);
	create_insn	(x=0X43E57965);
	op_hex		(x,	1);
	create_insn	(x=0X43E5797A);
	op_hex		(x,	1);
	set_cmt	(0X43E579BE,	"symbol",	0);
	set_cmt	(0X43E579C8,	"symbol",	0);
	set_cmt	(0X43E579D5,	"symbol",	0);
	set_cmt	(0X43E579E2,	"symbol",	0);
	set_cmt	(0X43E579EF,	"symbol",	0);
	set_cmt	(0X43E579FC,	"symbol",	0);
	set_cmt	(0X43E57A09,	"symbol",	0);
	set_cmt	(0X43E57A16,	"symbol",	0);
	set_cmt	(0X43E57A23,	"symbol",	0);
	set_cmt	(0X43E57A30,	"symbol",	0);
	set_cmt	(0X43E57A3D,	"symbol",	0);
	set_cmt	(0X43E57A4A,	"symbol",	0);
	set_cmt	(0X43E57A57,	"symbol",	0);
	set_cmt	(0X43E57A64,	"symbol",	0);
	set_cmt	(0X43E57A71,	"symbol",	0);
	set_cmt	(0X43E57A7E,	"symbol",	0);
	set_cmt	(0X43E57A8B,	"symbol",	0);
	set_cmt	(0X43E57A98,	"symbol",	0);
	set_cmt	(0X43E57AA5,	"symbol",	0);
	set_cmt	(0X43E57AB2,	"symbol",	0);
	create_insn	(x=0X43E57AF6);
	op_hex		(x,	1);
	create_insn	(x=0X43E57B0B);
	op_hex		(x,	1);
	create_insn	(x=0X43E57B36);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E57B3B);
	op_hex		(x,	1);
	create_insn	(x=0X43E57B61);
	op_hex		(x,	1);
	create_insn	(x=0X43E57B95);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E57C72,	"Size",	0);
	create_insn	(x=0X43E57C7C);
	op_hex		(x,	1);
	create_insn	(x=0X43E57F95);
	op_hex		(x,	1);
	create_insn	(x=0X43E57FAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E57FCD);
	op_hex		(x,	1);
	set_cmt	(0X43E57FE6,	"Size",	0);
	create_insn	(x=0X43E57FF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E58075);
	op_hex		(x,	1);
	create_insn	(x=0X43E5808A);
	op_hex		(x,	1);
	create_insn	(x=0X43E58209);
	op_hex		(x,	1);
	create_insn	(x=0X43E5821E);
	op_hex		(x,	1);
	create_insn	(x=0X43E58328);
	op_hex		(x,	1);
	create_insn	(x=0X43E5833D);
	op_hex		(x,	1);
	create_insn	(x=0X43E584C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E584DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E585C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E585DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E58685);
	op_hex		(x,	1);
	create_insn	(x=0X43E5869A);
	op_hex		(x,	1);
	create_insn	(x=0X43E58835);
	op_hex		(x,	1);
	create_insn	(x=0X43E5884A);
	op_hex		(x,	1);
	create_insn	(x=0X43E58875);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5887A);
	op_hex		(x,	1);
	create_insn	(x=0X43E588A0);
	op_hex		(x,	1);
	create_insn	(x=0X43E588D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E58938,	"Size",	0);
	create_insn	(x=0X43E58942);
	op_hex		(x,	1);
	create_insn	(x=0X43E58C35);
	op_hex		(x,	1);
	create_insn	(x=0X43E58C4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E58C6D);
	op_hex		(x,	1);
	set_cmt	(0X43E58C86,	"Size",	0);
	create_insn	(x=0X43E58C93);
	op_hex		(x,	1);
	create_insn	(x=0X43E58D59);
	op_hex		(x,	1);
	create_insn	(x=0X43E58D6E);
	op_hex		(x,	1);
	create_insn	(x=0X43E58E55);
	op_hex		(x,	1);
	create_insn	(x=0X43E58E6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E58F75);
	op_hex		(x,	1);
	create_insn	(x=0X43E58F8A);
	op_hex		(x,	1);
	create_insn	(x=0X43E59065);
	op_hex		(x,	1);
	create_insn	(x=0X43E5907A);
	op_hex		(x,	1);
	create_insn	(x=0X43E59165);
	op_hex		(x,	1);
	create_insn	(x=0X43E5917A);
	op_hex		(x,	1);
	create_insn	(x=0X43E59236);
	op_hex		(x,	1);
	create_insn	(x=0X43E5924B);
	op_hex		(x,	1);
	create_insn	(x=0X43E59355);
	op_hex		(x,	1);
	create_insn	(x=0X43E5936A);
	op_hex		(x,	1);
	create_insn	(x=0X43E59405);
	op_hex		(x,	1);
	create_insn	(x=0X43E5941A);
	op_hex		(x,	1);
	create_insn	(x=0X43E59505);
	op_hex		(x,	1);
	create_insn	(x=0X43E5951A);
	op_hex		(x,	1);
	create_insn	(x=0X43E59696);
	op_hex		(x,	1);
	create_insn	(x=0X43E596AB);
	op_hex		(x,	1);
	create_insn	(x=0X43E596D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E596D9);
	op_hex		(x,	1);
	create_insn	(x=0X43E596FF);
	op_hex		(x,	1);
	create_insn	(x=0X43E59733);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E597BD);
	op_hex		(x,	1);
	create_insn	(x=0X43E597C8);
	op_hex		(x,	1);
	set_cmt	(0X43E597CD,	"Size",	0);
	create_insn	(x=0X43E597DC);
	op_hex		(x,	1);
	create_insn	(x=0X43E598B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E598CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E598ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E59909);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E59923,	"Size",	0);
	create_insn	(x=0X43E5992D);
	op_hex		(x,	1);
	create_insn	(x=0X43E59B55);
	op_hex		(x,	1);
	create_insn	(x=0X43E59B6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E59B8D);
	op_hex		(x,	1);
	set_cmt	(0X43E59BA6,	"Size",	0);
	create_insn	(x=0X43E59BB3);
	op_hex		(x,	1);
	create_insn	(x=0X43E59CE5);
	op_hex		(x,	1);
	create_insn	(x=0X43E59CFA);
	op_hex		(x,	1);
	create_insn	(x=0X43E59D21);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E59D26);
	op_hex		(x,	1);
	set_cmt	(0X43E59D67,	"Size",	0);
	create_insn	(x=0X43E59D71);
	op_hex		(x,	1);
	create_insn	(x=0X43E59EA5);
	op_hex		(x,	1);
	create_insn	(x=0X43E59EBA);
	op_hex		(x,	1);
	create_insn	(x=0X43E59EDD);
	op_hex		(x,	1);
	set_cmt	(0X43E59EF6,	"Size",	0);
	create_insn	(x=0X43E59F03);
	op_hex		(x,	1);
	create_insn	(x=0X43E59F95);
	op_hex		(x,	1);
	create_insn	(x=0X43E59FAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E59FD1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E59FD6);
	op_hex		(x,	1);
	set_cmt	(0X43E5A017,	"Size",	0);
	create_insn	(x=0X43E5A021);
	op_hex		(x,	1);
	create_insn	(x=0X43E5A135);
	op_hex		(x,	1);
	create_insn	(x=0X43E5A14A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5A16D);
	op_hex		(x,	1);
	set_cmt	(0X43E5A186,	"Size",	0);
	create_insn	(x=0X43E5A193);
	op_hex		(x,	1);
	create_insn	(x=0X43E5A259);
	op_hex		(x,	1);
	create_insn	(x=0X43E5A26E);
	op_hex		(x,	1);
	create_insn	(x=0X43E5A295);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5A29A);
	op_hex		(x,	1);
	set_cmt	(0X43E5A2DB,	"Size",	0);
	create_insn	(x=0X43E5A2E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E5A517);
	op_hex		(x,	1);
	create_insn	(x=0X43E5A52C);
	op_hex		(x,	1);
	create_insn	(x=0X43E5A54F);
	op_hex		(x,	1);
	set_cmt	(0X43E5A568,	"Size",	0);
	create_insn	(x=0X43E5A575);
	op_hex		(x,	1);
	create_insn	(x=0X43E5A685);
	op_hex		(x,	1);
	create_insn	(x=0X43E5A69A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5A6C1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5A6C6);
	op_hex		(x,	1);
	set_cmt	(0X43E5A707,	"Size",	0);
	create_insn	(x=0X43E5A711);
	op_hex		(x,	1);
	create_insn	(x=0X43E5A977);
	op_hex		(x,	1);
	create_insn	(x=0X43E5A98C);
	op_hex		(x,	1);
	create_insn	(x=0X43E5A9AF);
	op_hex		(x,	1);
	set_cmt	(0X43E5A9C8,	"Size",	0);
	create_insn	(x=0X43E5A9D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AAB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AACA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AAF1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5AAF6);
	op_hex		(x,	1);
	make_array	(0X43E5AB42,	0XE);
	create_insn	(0X43E5AB50);
	set_name	(0X43E5AB50,	"OneTap::GUI::Render::Tabs::Skins");
	create_insn	(x=0X43E5AB53);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AB56);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AB59);
	op_hex		(x,	1);
	set_cmt	(0X43E5AB5C,	"size",	0);
	create_insn	(x=0X43E5AB60);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E5AB77);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AB7B);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AB7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5AB8F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5AB99);
	op_hex		(x,	1);
	create_insn	(x=0X43E5ABAB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5ABB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E5ABCE,	"Size",	0);
	create_insn	(x=0X43E5ABD8);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AC1D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AC33);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AC7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5AC85);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5AC98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5ACC3);
	op_hex		(x,	1);
	create_insn	(x=0X43E5ACC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5ACDF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5ACFF);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AD08);
	op_hex		(x,	1);
	set_cmt	(0X43E5AD1B,	"fromArray",	0);
	set_cmt	(0X43E5AD23,	"toArray",	0);
	create_insn	(x=0X43E5AD62);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5AD67);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5AD7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5AD8C);
	op_hex		(x,	1);
	create_insn	(x=0X43E5ADAB);
	op_hex		(x,	1);
	create_insn	(x=0X43E5ADC0);
	op_hex		(x,	1);
	create_insn	(x=0X43E5ADDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5ADFA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AE0D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AE16);
	op_hex		(x,	1);
	set_cmt	(0X43E5AE19,	"Size",	0);
	create_insn	(x=0X43E5AE29);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AE6D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AE83);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AECE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5AED7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5AEDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5AEF3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E5AF1D,	"Size",	0);
	create_insn	(x=0X43E5AF3B);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AF9D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5AFB3);
	op_hex		(x,	1);
	set_cmt	(0X43E5AFF5,	"Size",	0);
	create_insn	(x=0X43E5AFFF);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B05D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B073);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B09E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5B0A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B0B7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5B0C1);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B113);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5B14B);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B153);
	op_hex		(x,	1);
	set_cmt	(0X43E5B156,	"Size",	0);
	create_insn	(x=0X43E5B172);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B1BD);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B1D3);
	op_hex		(x,	1);
	set_cmt	(0X43E5B215,	"Size",	0);
	create_insn	(x=0X43E5B21F);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B26D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B283);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B2D7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5B2E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5B2F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5B34B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5B35B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5B381);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B389);
	op_hex		(x,	1);
	set_cmt	(0X43E5B38C,	"Size",	0);
	create_insn	(x=0X43E5B3AF);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B3E5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5B41D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B433);
	op_hex		(x,	1);
	set_cmt	(0X43E5B475,	"Size",	0);
	create_insn	(x=0X43E5B47F);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B4BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B4D0);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B4F7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5B4FE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5B510);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B51C);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B58F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5B5B1);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B5B9);
	op_hex		(x,	1);
	set_cmt	(0X43E5B5BC,	"Size",	0);
	create_insn	(x=0X43E5B5D8);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B62D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B643);
	op_hex		(x,	1);
	set_cmt	(0X43E5B685,	"Size",	0);
	create_insn	(x=0X43E5B68F);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B6CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B6E0);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B74A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B760);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B7B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5B7BD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5B7CD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5B89A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5B8BC);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B8C4);
	op_hex		(x,	1);
	set_cmt	(0X43E5B8C7,	"Size",	0);
	create_insn	(x=0X43E5B8EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B93D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B953);
	op_hex		(x,	1);
	set_cmt	(0X43E5B995,	"Size",	0);
	create_insn	(x=0X43E5B99F);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B9DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5B9F0);
	op_hex		(x,	1);
	create_insn	(x=0X43E5BA44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5BA4D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5BA63);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5BAC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5BAF0);
	op_hex		(x,	1);
	set_cmt	(0X43E5BAF5,	"Size",	0);
	create_insn	(x=0X43E5BB18);
	op_hex		(x,	1);
	create_insn	(x=0X43E5BB8D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5BBA3);
	op_hex		(x,	1);
	set_cmt	(0X43E5BBE5,	"Size",	0);
	create_insn	(x=0X43E5BBEF);
	op_hex		(x,	1);
	create_insn	(x=0X43E5BC4D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5BC63);
	op_hex		(x,	1);
	create_insn	(x=0X43E5BCB7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5BCC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5BCD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5BD39);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5BD5B);
	op_hex		(x,	1);
	create_insn	(x=0X43E5BD66);
	op_hex		(x,	1);
	set_cmt	(0X43E5BD6B,	"Size",	0);
	create_insn	(x=0X43E5BD87);
	op_hex		(x,	1);
	create_insn	(x=0X43E5BDBE);
	op_hex		(x,	1);
	create_insn	(x=0X43E5BDD4);
	op_hex		(x,	1);
	create_insn	(x=0X43E5BE1F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5BE28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5BE2F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5BE44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E5BE6E,	"Size",	0);
	create_insn	(x=0X43E5BE85);
	op_hex		(x,	1);
	create_insn	(x=0X43E5BECD);
	op_hex		(x,	1);
	create_insn	(x=0X43E5BEE3);
	op_hex		(x,	1);
	set_cmt	(0X43E5BF25,	"Size",	0);
	create_insn	(x=0X43E5BF3C);
	op_hex		(x,	1);
	create_insn	(x=0X43E5BF6D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5BF83);
	op_hex		(x,	1);
	create_insn	(x=0X43E5BFAA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5BFAF);
	op_hex		(x,	1);
	set_cmt	(0X43E5BFFF,	"Size",	0);
	create_insn	(x=0X43E5C01D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C07D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C093);
	op_hex		(x,	1);
	set_cmt	(0X43E5C0D5,	"Size",	0);
	create_insn	(x=0X43E5C0DF);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C11A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C130);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C168);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5C1BD);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C1D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C229);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5C232);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5C242);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E5C2F2,	"Size",	0);
	create_insn	(x=0X43E5C309);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C36D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C383);
	op_hex		(x,	1);
	set_cmt	(0X43E5C3C5,	"Size",	0);
	create_insn	(x=0X43E5C3CF);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C40A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C420);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C535);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C54A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C573);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C593);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5C598);
	op_hex		(x,	1);
	set_cmt	(0X43E5C5E2,	"Size",	0);
	create_insn	(x=0X43E5C5EC);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C7B6);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C7CB);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C7EE);
	op_hex		(x,	1);
	set_cmt	(0X43E5C807,	"Size",	0);
	create_insn	(x=0X43E5C814);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C872);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C887);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C995);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C9AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C9D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E5C9F3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5C9F8);
	op_hex		(x,	1);
	set_cmt	(0X43E5CA42,	"Size",	0);
	create_insn	(x=0X43E5CA4C);
	op_hex		(x,	1);
	create_insn	(x=0X43E5CC16);
	op_hex		(x,	1);
	create_insn	(x=0X43E5CC2B);
	op_hex		(x,	1);
	create_insn	(x=0X43E5CC4E);
	op_hex		(x,	1);
	set_cmt	(0X43E5CC67,	"Size",	0);
	create_insn	(x=0X43E5CC74);
	op_hex		(x,	1);
	create_insn	(x=0X43E5CCD2);
	op_hex		(x,	1);
	create_insn	(x=0X43E5CCE7);
	op_hex		(x,	1);
	create_insn	(x=0X43E5CDF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E5CE0A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5CE33);
	op_hex		(x,	1);
	create_insn	(x=0X43E5CE53);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5CE58);
	op_hex		(x,	1);
	set_cmt	(0X43E5CEA2,	"Size",	0);
	create_insn	(x=0X43E5CEAC);
	op_hex		(x,	1);
	create_insn	(x=0X43E5CFE5);
	op_hex		(x,	1);
	create_insn	(x=0X43E5CFFA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D01D);
	op_hex		(x,	1);
	set_cmt	(0X43E5D036,	"Size",	0);
	create_insn	(x=0X43E5D043);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D0A9);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D0BE);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D152);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D167);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D190);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D1B6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5D1BB);
	op_hex		(x,	1);
	set_cmt	(0X43E5D205,	"Size",	0);
	create_insn	(x=0X43E5D20F);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D595);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D5AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D5CD);
	op_hex		(x,	1);
	set_cmt	(0X43E5D5E6,	"Size",	0);
	create_insn	(x=0X43E5D5F9);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D6A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D6BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D7D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D7EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D8D7);
	op_hex		(x,	1);
	create_insn	(x=0X43E5D8EC);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DA35);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DA4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DA73);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5DA78);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DA9E);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DB09);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E5DB18);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DB23);
	op_hex		(x,	1);
	set_cmt	(0X43E5DB28,	"Size",	0);
	create_insn	(x=0X43E5DB37);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DBC9);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DBDE);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DC01);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DC1D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E5DC37,	"Size",	0);
	create_insn	(x=0X43E5DC41);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DDD7);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DDEC);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DE0F);
	op_hex		(x,	1);
	set_cmt	(0X43E5DE28,	"Size",	0);
	create_insn	(x=0X43E5DE35);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DED5);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DEEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DFC6);
	op_hex		(x,	1);
	create_insn	(x=0X43E5DFDB);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E072);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E087);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E112);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E127);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E215);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E22A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E339);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E34E);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E455);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E46A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E557);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E56C);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E637);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E64C);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E7A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E7BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E8A7);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E8BC);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E976);
	op_hex		(x,	1);
	create_insn	(x=0X43E5E98B);
	op_hex		(x,	1);
	create_insn	(x=0X43E5EA78);
	op_hex		(x,	1);
	create_insn	(x=0X43E5EA8D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5EB47);
	op_hex		(x,	1);
	create_insn	(x=0X43E5EB5C);
	op_hex		(x,	1);
	create_insn	(x=0X43E5EC02);
	op_hex		(x,	1);
	create_insn	(x=0X43E5EC17);
	op_hex		(x,	1);
	create_insn	(x=0X43E5ECC8);
	op_hex		(x,	1);
	create_insn	(x=0X43E5ECDD);
	op_hex		(x,	1);
	create_insn	(x=0X43E5ED08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5ED0D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5ED33);
	op_hex		(x,	1);
	set_cmt	(0X43E5EE22,	"Size",	0);
	create_insn	(x=0X43E5EE2C);
	op_hex		(x,	1);
	create_insn	(x=0X43E5EFD5);
	op_hex		(x,	1);
	create_insn	(x=0X43E5EFEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F00D);
	op_hex		(x,	1);
	set_cmt	(0X43E5F026,	"Size",	0);
	create_insn	(x=0X43E5F033);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F099);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F0AE);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F195);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F1AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F237);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F24C);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F305);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F31A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F405);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F41A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F505);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F51A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F605);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F61A);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F6A7);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F6BC);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F7B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F7CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F7F5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5F7FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F820);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F8C7);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F8D2);
	op_hex		(x,	1);
	set_cmt	(0X43E5F8D7,	"Size",	0);
	create_insn	(x=0X43E5F8E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F978);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F98D);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F9B0);
	op_hex		(x,	1);
	create_insn	(x=0X43E5F9CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E5F9E6,	"Size",	0);
	create_insn	(x=0X43E5F9F0);
	op_hex		(x,	1);
	create_insn	(x=0X43E5FBB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E5FBCA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5FBED);
	op_hex		(x,	1);
	set_cmt	(0X43E5FC06,	"Size",	0);
	create_insn	(x=0X43E5FC13);
	op_hex		(x,	1);
	create_insn	(x=0X43E5FC79);
	op_hex		(x,	1);
	create_insn	(x=0X43E5FC8E);
	op_hex		(x,	1);
	create_insn	(x=0X43E5FCB1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5FCB6);
	op_hex		(x,	1);
	set_cmt	(0X43E5FCF7,	"Size",	0);
	create_insn	(x=0X43E5FD01);
	op_hex		(x,	1);
	create_insn	(x=0X43E5FEC5);
	op_hex		(x,	1);
	create_insn	(x=0X43E5FEDA);
	op_hex		(x,	1);
	create_insn	(x=0X43E5FEFD);
	op_hex		(x,	1);
	set_cmt	(0X43E5FF16,	"Size",	0);
	create_insn	(x=0X43E5FF23);
	op_hex		(x,	1);
	create_insn	(x=0X43E5FF89);
	op_hex		(x,	1);
	create_insn	(x=0X43E5FF9E);
	op_hex		(x,	1);
	create_insn	(x=0X43E5FFC1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E5FFC6);
	op_hex		(x,	1);
	set_cmt	(0X43E60007,	"Size",	0);
	create_insn	(x=0X43E60011);
	op_hex		(x,	1);
	create_insn	(x=0X43E601E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E601FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E6021D);
	op_hex		(x,	1);
	set_cmt	(0X43E60236,	"Size",	0);
	create_insn	(x=0X43E60243);
	op_hex		(x,	1);
	create_insn	(x=0X43E60305);
	op_hex		(x,	1);
	create_insn	(x=0X43E6031A);
	op_hex		(x,	1);
	create_insn	(x=0X43E60341);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E60346);
	op_hex		(x,	1);
	make_array	(0X43E60392,	0XE);
	create_insn	(0X43E603A0);
	set_name	(0X43E603A0,	"OneTap::GUI::Render::Tabs::Visuals");
	create_insn	(x=0X43E603A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E603A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E603A9);
	op_hex		(x,	1);
	set_cmt	(0X43E603AC,	"size",	0);
	create_insn	(x=0X43E603B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E603C7);
	op_hex		(x,	1);
	create_insn	(x=0X43E603CB);
	op_hex		(x,	1);
	create_insn	(x=0X43E603CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E603DF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E603E9);
	op_hex		(x,	1);
	create_insn	(x=0X43E603FB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E60408);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E6041E,	"Size",	0);
	create_insn	(x=0X43E60428);
	op_hex		(x,	1);
	create_insn	(x=0X43E6043E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E6046D);
	op_hex		(x,	1);
	create_insn	(x=0X43E60483);
	op_hex		(x,	1);
	create_insn	(x=0X43E604CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E604D5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E604E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E60504,	"Size",	0);
	create_insn	(x=0X43E6051B);
	op_hex		(x,	1);
	create_insn	(x=0X43E6054D);
	op_hex		(x,	1);
	create_insn	(x=0X43E60563);
	op_hex		(x,	1);
	create_insn	(x=0X43E605CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E605E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E6063A);
	op_hex		(x,	1);
	create_insn	(x=0X43E60650);
	op_hex		(x,	1);
	create_insn	(x=0X43E606BD);
	op_hex		(x,	1);
	create_insn	(x=0X43E606D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E6074D);
	op_hex		(x,	1);
	create_insn	(x=0X43E60763);
	op_hex		(x,	1);
	create_insn	(x=0X43E6078E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6079B);
	op_hex		(x,	1);
	create_insn	(x=0X43E607C1);
	op_hex		(x,	1);
	create_insn	(x=0X43E607E9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E6083D);
	op_hex		(x,	1);
	create_insn	(x=0X43E60845);
	op_hex		(x,	1);
	set_cmt	(0X43E60848,	"Size",	0);
	create_insn	(x=0X43E60864);
	op_hex		(x,	1);
	create_insn	(x=0X43E6089D);
	op_hex		(x,	1);
	create_insn	(x=0X43E608B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E608FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E60907);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E6090E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E60923);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E60952,	"Size",	0);
	create_insn	(x=0X43E60957);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E60977);
	op_hex		(x,	1);
	create_insn	(x=0X43E609DD);
	op_hex		(x,	1);
	create_insn	(x=0X43E609F3);
	op_hex		(x,	1);
	set_cmt	(0X43E60A35,	"Size",	0);
	create_insn	(x=0X43E60A4C);
	op_hex		(x,	1);
	create_insn	(x=0X43E60A8D);
	op_hex		(x,	1);
	create_insn	(x=0X43E60AA3);
	op_hex		(x,	1);
	create_insn	(x=0X43E60ACC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E60AD1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E60AD6);
	op_hex		(x,	1);
	set_cmt	(0X43E60B26,	"Size",	0);
	create_insn	(x=0X43E60B44);
	op_hex		(x,	1);
	create_insn	(x=0X43E60B9D);
	op_hex		(x,	1);
	create_insn	(x=0X43E60BB3);
	op_hex		(x,	1);
	set_cmt	(0X43E60BF5,	"Size",	0);
	create_insn	(x=0X43E60C0C);
	op_hex		(x,	1);
	create_insn	(x=0X43E60C4D);
	op_hex		(x,	1);
	create_insn	(x=0X43E60C63);
	op_hex		(x,	1);
	create_insn	(x=0X43E60C8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E60C91);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E60C96);
	op_hex		(x,	1);
	set_cmt	(0X43E60CD7,	"Size",	0);
	create_insn	(x=0X43E60CE1);
	op_hex		(x,	1);
	create_insn	(x=0X43E60F15);
	op_hex		(x,	1);
	create_insn	(x=0X43E60F2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E60F4D);
	op_hex		(x,	1);
	set_cmt	(0X43E60F66,	"Size",	0);
	create_insn	(x=0X43E60F73);
	op_hex		(x,	1);
	create_insn	(x=0X43E610B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E610CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E610F3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E610F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E610FD);
	op_hex		(x,	1);
	set_cmt	(0X43E6113E,	"Size",	0);
	create_insn	(x=0X43E61148);
	op_hex		(x,	1);
	create_insn	(x=0X43E61527);
	op_hex		(x,	1);
	create_insn	(x=0X43E6153C);
	op_hex		(x,	1);
	create_insn	(x=0X43E6155F);
	op_hex		(x,	1);
	set_cmt	(0X43E61578,	"Size",	0);
	create_insn	(x=0X43E61585);
	op_hex		(x,	1);
	create_insn	(x=0X43E616C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E616DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E61703);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E61708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6170D);
	op_hex		(x,	1);
	set_cmt	(0X43E6174E,	"Size",	0);
	create_insn	(x=0X43E61758);
	op_hex		(x,	1);
	create_insn	(x=0X43E61945);
	op_hex		(x,	1);
	create_insn	(x=0X43E6195A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6197D);
	op_hex		(x,	1);
	set_cmt	(0X43E61996,	"Size",	0);
	create_insn	(x=0X43E619A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E61B15);
	op_hex		(x,	1);
	create_insn	(x=0X43E61B2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E61B51);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E61B56);
	op_hex		(x,	1);
	create_insn	(x=0X43E61B9C);
	op_hex		(x,	1);
	create_insn	(x=0X43E61BA4);
	op_hex		(x,	1);
	set_cmt	(0X43E61BA7,	"Size",	0);
	create_insn	(x=0X43E61BB6);
	op_hex		(x,	1);
	create_insn	(x=0X43E61C65);
	op_hex		(x,	1);
	create_insn	(x=0X43E61C7A);
	op_hex		(x,	1);
	create_insn	(x=0X43E61C9D);
	op_hex		(x,	1);
	create_insn	(x=0X43E61CB9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E61CD9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E61CE3,	"Size",	0);
	create_insn	(x=0X43E61CED);
	op_hex		(x,	1);
	create_insn	(x=0X43E61E69);
	op_hex		(x,	1);
	create_insn	(x=0X43E61E7E);
	op_hex		(x,	1);
	create_insn	(x=0X43E61EA1);
	op_hex		(x,	1);
	set_cmt	(0X43E61EBA,	"Size",	0);
	create_insn	(x=0X43E61EC7);
	op_hex		(x,	1);
	create_insn	(x=0X43E61FA7);
	op_hex		(x,	1);
	create_insn	(x=0X43E61FBC);
	op_hex		(x,	1);
	create_insn	(x=0X43E61FE3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E61FE8);
	op_hex		(x,	1);
	set_cmt	(0X43E62029,	"Size",	0);
	create_insn	(x=0X43E62033);
	op_hex		(x,	1);
	create_insn	(x=0X43E621B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E621CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E621ED);
	op_hex		(x,	1);
	set_cmt	(0X43E62206,	"Size",	0);
	create_insn	(x=0X43E62213);
	op_hex		(x,	1);
	create_insn	(x=0X43E622F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6230A);
	op_hex		(x,	1);
	create_insn	(x=0X43E62331);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E62336);
	op_hex		(x,	1);
	set_cmt	(0X43E62377,	"Size",	0);
	create_insn	(x=0X43E62381);
	op_hex		(x,	1);
	create_insn	(x=0X43E62525);
	op_hex		(x,	1);
	create_insn	(x=0X43E6253A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6255D);
	op_hex		(x,	1);
	set_cmt	(0X43E62576,	"Size",	0);
	create_insn	(x=0X43E62583);
	op_hex		(x,	1);
	create_insn	(x=0X43E62665);
	op_hex		(x,	1);
	create_insn	(x=0X43E6267A);
	op_hex		(x,	1);
	create_insn	(x=0X43E626A1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E626A6);
	op_hex		(x,	1);
	set_cmt	(0X43E626E7,	"Size",	0);
	create_insn	(x=0X43E626F1);
	op_hex		(x,	1);
	create_insn	(x=0X43E62A45);
	op_hex		(x,	1);
	create_insn	(x=0X43E62A5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E62A7D);
	op_hex		(x,	1);
	set_cmt	(0X43E62A96,	"Size",	0);
	create_insn	(x=0X43E62AA3);
	op_hex		(x,	1);
	create_insn	(x=0X43E62B69);
	op_hex		(x,	1);
	create_insn	(x=0X43E62B7E);
	op_hex		(x,	1);
	create_insn	(x=0X43E62BA5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E62BAA);
	op_hex		(x,	1);
	set_cmt	(0X43E62BEB,	"Size",	0);
	create_insn	(x=0X43E62BF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E62E75);
	op_hex		(x,	1);
	create_insn	(x=0X43E62E8A);
	op_hex		(x,	1);
	create_insn	(x=0X43E62EAD);
	op_hex		(x,	1);
	set_cmt	(0X43E62EC6,	"Size",	0);
	create_insn	(x=0X43E62ED3);
	op_hex		(x,	1);
	create_insn	(x=0X43E62FA6);
	op_hex		(x,	1);
	create_insn	(x=0X43E62FBB);
	op_hex		(x,	1);
	create_insn	(x=0X43E62FE2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E62FE7);
	op_hex		(x,	1);
	set_cmt	(0X43E63028,	"Size",	0);
	create_insn	(x=0X43E63032);
	op_hex		(x,	1);
	create_insn	(x=0X43E634A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E634BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E634DD);
	op_hex		(x,	1);
	set_cmt	(0X43E634F6,	"Size",	0);
	create_insn	(x=0X43E63503);
	op_hex		(x,	1);
	create_insn	(x=0X43E63595);
	op_hex		(x,	1);
	create_insn	(x=0X43E635AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E635D1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E635D6);
	op_hex		(x,	1);
	set_cmt	(0X43E63617,	"Size",	0);
	create_insn	(x=0X43E63621);
	op_hex		(x,	1);
	create_insn	(x=0X43E638C8);
	op_hex		(x,	1);
	create_insn	(x=0X43E638DD);
	op_hex		(x,	1);
	create_insn	(x=0X43E63900);
	op_hex		(x,	1);
	set_cmt	(0X43E63919,	"Size",	0);
	create_insn	(x=0X43E63926);
	op_hex		(x,	1);
	create_insn	(x=0X43E639E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E639FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E63A21);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E63A26);
	op_hex		(x,	1);
	set_cmt	(0X43E63A67,	"Size",	0);
	create_insn	(x=0X43E63A71);
	op_hex		(x,	1);
	create_insn	(x=0X43E63B85);
	op_hex		(x,	1);
	create_insn	(x=0X43E63B9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E63BBD);
	op_hex		(x,	1);
	set_cmt	(0X43E63BD6,	"Size",	0);
	create_insn	(x=0X43E63BE3);
	op_hex		(x,	1);
	set_cmt	(0X43E63BE9,	"symbol",	0);
	set_cmt	(0X43E63BF0,	"symbol",	0);
	set_cmt	(0X43E63BFD,	"symbol",	0);
	set_cmt	(0X43E63C0A,	"symbol",	0);
	set_cmt	(0X43E63C17,	"symbol",	0);
	set_cmt	(0X43E63C24,	"symbol",	0);
	create_insn	(x=0X43E63C68);
	op_hex		(x,	1);
	create_insn	(x=0X43E63C7D);
	op_hex		(x,	1);
	create_insn	(x=0X43E63CA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E63CAD);
	op_hex		(x,	1);
	create_insn	(x=0X43E63CF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E63CFB);
	op_hex		(x,	1);
	set_cmt	(0X43E63CFE,	"Size",	0);
	create_insn	(x=0X43E63D0D);
	op_hex		(x,	1);
	create_insn	(x=0X43E63D73);
	op_hex		(x,	1);
	create_insn	(x=0X43E63D88);
	op_hex		(x,	1);
	create_insn	(x=0X43E63DAB);
	op_hex		(x,	1);
	create_insn	(x=0X43E63DC7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E63DE7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E63DF1,	"Size",	0);
	create_insn	(x=0X43E63DFB);
	op_hex		(x,	1);
	create_insn	(x=0X43E64045);
	op_hex		(x,	1);
	create_insn	(x=0X43E6405A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6407D);
	op_hex		(x,	1);
	set_cmt	(0X43E64096,	"Size",	0);
	create_insn	(x=0X43E640A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E641C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E641DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E64201);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E64206);
	op_hex		(x,	1);
	set_cmt	(0X43E64247,	"Size",	0);
	create_insn	(x=0X43E64251);
	op_hex		(x,	1);
	create_insn	(x=0X43E644B7);
	op_hex		(x,	1);
	create_insn	(x=0X43E644CC);
	op_hex		(x,	1);
	create_insn	(x=0X43E644EF);
	op_hex		(x,	1);
	set_cmt	(0X43E64508,	"Size",	0);
	create_insn	(x=0X43E64515);
	op_hex		(x,	1);
	create_insn	(x=0X43E64636);
	op_hex		(x,	1);
	create_insn	(x=0X43E6464B);
	op_hex		(x,	1);
	create_insn	(x=0X43E64672);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E64677);
	op_hex		(x,	1);
	set_cmt	(0X43E646B8,	"Size",	0);
	create_insn	(x=0X43E646C2);
	op_hex		(x,	1);
	create_insn	(x=0X43E64976);
	op_hex		(x,	1);
	create_insn	(x=0X43E6498B);
	op_hex		(x,	1);
	create_insn	(x=0X43E649AE);
	op_hex		(x,	1);
	set_cmt	(0X43E649C7,	"Size",	0);
	create_insn	(x=0X43E649D4);
	op_hex		(x,	1);
	create_insn	(x=0X43E64AF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E64B0A);
	op_hex		(x,	1);
	create_insn	(x=0X43E64B31);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E64B36);
	op_hex		(x,	1);
	set_cmt	(0X43E64B77,	"Size",	0);
	create_insn	(x=0X43E64B81);
	op_hex		(x,	1);
	create_insn	(x=0X43E64ED5);
	op_hex		(x,	1);
	create_insn	(x=0X43E64EEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E64F0D);
	op_hex		(x,	1);
	set_cmt	(0X43E64F26,	"Size",	0);
	create_insn	(x=0X43E64F33);
	op_hex		(x,	1);
	create_insn	(x=0X43E65088);
	op_hex		(x,	1);
	create_insn	(x=0X43E6509D);
	op_hex		(x,	1);
	create_insn	(x=0X43E650C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E650C9);
	op_hex		(x,	1);
	set_cmt	(0X43E6510A,	"Size",	0);
	create_insn	(x=0X43E65114);
	op_hex		(x,	1);
	create_insn	(x=0X43E651F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6520A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6522D);
	op_hex		(x,	1);
	set_cmt	(0X43E65246,	"Size",	0);
	create_insn	(x=0X43E65253);
	op_hex		(x,	1);
	create_insn	(x=0X43E652D8);
	op_hex		(x,	1);
	create_insn	(x=0X43E652ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E65318);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6531D);
	op_hex		(x,	1);
	create_insn	(x=0X43E65363);
	op_hex		(x,	1);
	create_insn	(x=0X43E6536B);
	op_hex		(x,	1);
	set_cmt	(0X43E6536E,	"Size",	0);
	create_insn	(x=0X43E6537D);
	op_hex		(x,	1);
	create_insn	(x=0X43E65429);
	op_hex		(x,	1);
	create_insn	(x=0X43E6543E);
	op_hex		(x,	1);
	create_insn	(x=0X43E65461);
	op_hex		(x,	1);
	create_insn	(x=0X43E6547D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E6549D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E654A7,	"Size",	0);
	create_insn	(x=0X43E654B1);
	op_hex		(x,	1);
	create_insn	(x=0X43E65717);
	op_hex		(x,	1);
	create_insn	(x=0X43E6572C);
	op_hex		(x,	1);
	create_insn	(x=0X43E6574F);
	op_hex		(x,	1);
	set_cmt	(0X43E65768,	"Size",	0);
	create_insn	(x=0X43E65775);
	op_hex		(x,	1);
	create_insn	(x=0X43E65855);
	op_hex		(x,	1);
	create_insn	(x=0X43E6586A);
	op_hex		(x,	1);
	create_insn	(x=0X43E65891);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E65896);
	op_hex		(x,	1);
	set_cmt	(0X43E658D7,	"Size",	0);
	create_insn	(x=0X43E658E1);
	op_hex		(x,	1);
	create_insn	(x=0X43E659D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E659EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E65A0D);
	op_hex		(x,	1);
	set_cmt	(0X43E65A26,	"Size",	0);
	create_insn	(x=0X43E65A33);
	op_hex		(x,	1);
	create_insn	(x=0X43E65AB8);
	op_hex		(x,	1);
	create_insn	(x=0X43E65ACD);
	op_hex		(x,	1);
	create_insn	(x=0X43E65AF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E65AFD);
	op_hex		(x,	1);
	create_insn	(x=0X43E65B43);
	op_hex		(x,	1);
	create_insn	(x=0X43E65B4B);
	op_hex		(x,	1);
	set_cmt	(0X43E65B4E,	"Size",	0);
	create_insn	(x=0X43E65B5D);
	op_hex		(x,	1);
	create_insn	(x=0X43E65C57);
	op_hex		(x,	1);
	create_insn	(x=0X43E65C6C);
	op_hex		(x,	1);
	create_insn	(x=0X43E65C8F);
	op_hex		(x,	1);
	create_insn	(x=0X43E65CAB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E65CC5,	"Size",	0);
	create_insn	(x=0X43E65CCF);
	op_hex		(x,	1);
	create_insn	(x=0X43E660C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E660DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E660FD);
	op_hex		(x,	1);
	set_cmt	(0X43E66116,	"Size",	0);
	create_insn	(x=0X43E66123);
	op_hex		(x,	1);
	create_insn	(x=0X43E66237);
	op_hex		(x,	1);
	create_insn	(x=0X43E6624C);
	op_hex		(x,	1);
	create_insn	(x=0X43E66273);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E66278);
	op_hex		(x,	1);
	set_cmt	(0X43E662B9,	"Size",	0);
	create_insn	(x=0X43E662C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E66529);
	op_hex		(x,	1);
	create_insn	(x=0X43E6653E);
	op_hex		(x,	1);
	create_insn	(x=0X43E66561);
	op_hex		(x,	1);
	set_cmt	(0X43E6657A,	"Size",	0);
	create_insn	(x=0X43E66587);
	op_hex		(x,	1);
	create_insn	(x=0X43E66635);
	op_hex		(x,	1);
	create_insn	(x=0X43E6664A);
	op_hex		(x,	1);
	create_insn	(x=0X43E66671);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E66676);
	op_hex		(x,	1);
	set_cmt	(0X43E666B7,	"Size",	0);
	create_insn	(x=0X43E666C1);
	op_hex		(x,	1);
	create_insn	(x=0X43E669E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E669FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E66A1D);
	op_hex		(x,	1);
	set_cmt	(0X43E66A36,	"Size",	0);
	create_insn	(x=0X43E66A43);
	op_hex		(x,	1);
	create_insn	(x=0X43E66AA9);
	op_hex		(x,	1);
	create_insn	(x=0X43E66ABE);
	op_hex		(x,	1);
	create_insn	(x=0X43E66BC5);
	op_hex		(x,	1);
	create_insn	(x=0X43E66BDA);
	op_hex		(x,	1);
	create_insn	(x=0X43E66CA5);
	op_hex		(x,	1);
	create_insn	(x=0X43E66CBA);
	op_hex		(x,	1);
	create_insn	(x=0X43E66D33);
	op_hex		(x,	1);
	create_insn	(x=0X43E66D48);
	op_hex		(x,	1);
	create_insn	(x=0X43E66DF7);
	op_hex		(x,	1);
	create_insn	(x=0X43E66E0C);
	op_hex		(x,	1);
	set_cmt	(0X43E66E50,	"symbol",	0);
	set_cmt	(0X43E66E5A,	"symbol",	0);
	set_cmt	(0X43E66E67,	"symbol",	0);
	set_cmt	(0X43E66E74,	"symbol",	0);
	set_cmt	(0X43E66E81,	"symbol",	0);
	set_cmt	(0X43E66E8E,	"symbol",	0);
	create_insn	(x=0X43E66ED5);
	op_hex		(x,	1);
	create_insn	(x=0X43E66EEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E66F15);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E66F1A);
	op_hex		(x,	1);
	create_insn	(x=0X43E66F40);
	op_hex		(x,	1);
	create_insn	(x=0X43E66F74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E66FCD,	"Size",	0);
	create_insn	(x=0X43E66FD7);
	op_hex		(x,	1);
	create_insn	(x=0X43E671C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E671DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E671FD);
	op_hex		(x,	1);
	set_cmt	(0X43E67216,	"Size",	0);
	create_insn	(x=0X43E67223);
	op_hex		(x,	1);
	create_insn	(x=0X43E67305);
	op_hex		(x,	1);
	create_insn	(x=0X43E6731A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6733F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E67344);
	op_hex		(x,	1);
	create_insn	(x=0X43E67374);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E67396,	"Size",	0);
	create_insn	(x=0X43E673A0);
	op_hex		(x,	1);
	create_insn	(x=0X43E67606);
	op_hex		(x,	1);
	create_insn	(x=0X43E6761B);
	op_hex		(x,	1);
	create_insn	(x=0X43E6763E);
	op_hex		(x,	1);
	set_cmt	(0X43E67657,	"Size",	0);
	create_insn	(x=0X43E67664);
	op_hex		(x,	1);
	create_insn	(x=0X43E676D2);
	op_hex		(x,	1);
	create_insn	(x=0X43E676E7);
	op_hex		(x,	1);
	create_insn	(x=0X43E67825);
	op_hex		(x,	1);
	create_insn	(x=0X43E6783A);
	op_hex		(x,	1);
	create_insn	(x=0X43E67863);
	op_hex		(x,	1);
	create_insn	(x=0X43E67883);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E67888);
	op_hex		(x,	1);
	create_insn	(x=0X43E678B1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E678DE,	"Size",	0);
	create_insn	(x=0X43E678E8);
	op_hex		(x,	1);
	create_insn	(x=0X43E67B35);
	op_hex		(x,	1);
	create_insn	(x=0X43E67B4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E67B6D);
	op_hex		(x,	1);
	set_cmt	(0X43E67B86,	"Size",	0);
	create_insn	(x=0X43E67B93);
	op_hex		(x,	1);
	set_cmt	(0X43E67B99,	"symbol",	0);
	set_cmt	(0X43E67BA0,	"symbol",	0);
	set_cmt	(0X43E67BAD,	"symbol",	0);
	set_cmt	(0X43E67BBA,	"symbol",	0);
	set_cmt	(0X43E67BC7,	"symbol",	0);
	set_cmt	(0X43E67BD4,	"symbol",	0);
	set_cmt	(0X43E67BE1,	"symbol",	0);
	set_cmt	(0X43E67BEE,	"symbol",	0);
	set_cmt	(0X43E67BFB,	"symbol",	0);
	set_cmt	(0X43E67C08,	"symbol",	0);
	create_insn	(x=0X43E67C55);
	op_hex		(x,	1);
	create_insn	(x=0X43E67C6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E67C91);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E67C96);
	op_hex		(x,	1);
	set_cmt	(0X43E67CD7,	"Size",	0);
	create_insn	(x=0X43E67CE1);
	op_hex		(x,	1);
	create_insn	(x=0X43E67FE5);
	op_hex		(x,	1);
	create_insn	(x=0X43E67FFA);
	op_hex		(x,	1);
	create_insn	(x=0X43E6801D);
	op_hex		(x,	1);
	set_cmt	(0X43E68036,	"Size",	0);
	create_insn	(x=0X43E68043);
	op_hex		(x,	1);
	create_insn	(x=0X43E680C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E680DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E681D7);
	op_hex		(x,	1);
	create_insn	(x=0X43E681EC);
	op_hex		(x,	1);
	create_insn	(x=0X43E682B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E682CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E68343);
	op_hex		(x,	1);
	create_insn	(x=0X43E68358);
	op_hex		(x,	1);
	create_insn	(x=0X43E68407);
	op_hex		(x,	1);
	create_insn	(x=0X43E6841C);
	op_hex		(x,	1);
	create_insn	(x=0X43E684E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E684FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E68525);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6852A);
	op_hex		(x,	1);
	create_insn	(x=0X43E68550);
	op_hex		(x,	1);
	create_insn	(x=0X43E68584);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E685DD,	"Size",	0);
	create_insn	(x=0X43E685E7);
	op_hex		(x,	1);
	create_insn	(x=0X43E687D8);
	op_hex		(x,	1);
	create_insn	(x=0X43E687ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E68810);
	op_hex		(x,	1);
	set_cmt	(0X43E68829,	"Size",	0);
	create_insn	(x=0X43E68836);
	op_hex		(x,	1);
	create_insn	(x=0X43E68916);
	op_hex		(x,	1);
	create_insn	(x=0X43E6892B);
	op_hex		(x,	1);
	create_insn	(x=0X43E68950);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E68955);
	op_hex		(x,	1);
	create_insn	(x=0X43E68985);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E689A7,	"Size",	0);
	create_insn	(x=0X43E689B1);
	op_hex		(x,	1);
	create_insn	(x=0X43E68C25);
	op_hex		(x,	1);
	create_insn	(x=0X43E68C3A);
	op_hex		(x,	1);
	create_insn	(x=0X43E68C5D);
	op_hex		(x,	1);
	set_cmt	(0X43E68C76,	"Size",	0);
	create_insn	(x=0X43E68C83);
	op_hex		(x,	1);
	create_insn	(x=0X43E68CE9);
	op_hex		(x,	1);
	create_insn	(x=0X43E68CFE);
	op_hex		(x,	1);
	create_insn	(x=0X43E68E45);
	op_hex		(x,	1);
	create_insn	(x=0X43E68E5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E68E83);
	op_hex		(x,	1);
	create_insn	(x=0X43E68EA3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E68EA8);
	op_hex		(x,	1);
	create_insn	(x=0X43E68ED1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E68EFE,	"Size",	0);
	create_insn	(x=0X43E68F08);
	op_hex		(x,	1);
	create_insn	(x=0X43E69055);
	op_hex		(x,	1);
	create_insn	(x=0X43E6906A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6908D);
	op_hex		(x,	1);
	set_cmt	(0X43E690A6,	"Size",	0);
	create_insn	(x=0X43E690B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E691B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E691CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E691F1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E691F6);
	op_hex		(x,	1);
	set_cmt	(0X43E69237,	"Size",	0);
	create_insn	(x=0X43E69241);
	op_hex		(x,	1);
	create_insn	(x=0X43E695B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E695CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E695ED);
	op_hex		(x,	1);
	set_cmt	(0X43E69606,	"Size",	0);
	create_insn	(x=0X43E69613);
	op_hex		(x,	1);
	create_insn	(x=0X43E696E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E696FB);
	op_hex		(x,	1);
	create_insn	(x=0X43E69805);
	op_hex		(x,	1);
	create_insn	(x=0X43E6981A);
	op_hex		(x,	1);
	create_insn	(x=0X43E698C2);
	op_hex		(x,	1);
	create_insn	(x=0X43E698D7);
	op_hex		(x,	1);
	create_insn	(x=0X43E69900);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E69905);
	op_hex		(x,	1);
	create_insn	(x=0X43E6992B);
	op_hex		(x,	1);
	create_insn	(x=0X43E69990);
	op_hex		(x,	1);
	create_insn	(x=0X43E69998);
	op_hex		(x,	1);
	set_cmt	(0X43E6999B,	"Size",	0);
	create_insn	(x=0X43E699AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E69AC5);
	op_hex		(x,	1);
	create_insn	(x=0X43E69ADA);
	op_hex		(x,	1);
	create_insn	(x=0X43E69AFD);
	op_hex		(x,	1);
	create_insn	(x=0X43E69B19);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E69B33,	"Size",	0);
	create_insn	(x=0X43E69B3D);
	op_hex		(x,	1);
	create_insn	(x=0X43E69EB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E69ECA);
	op_hex		(x,	1);
	create_insn	(x=0X43E69EED);
	op_hex		(x,	1);
	set_cmt	(0X43E69F06,	"Size",	0);
	create_insn	(x=0X43E69F13);
	op_hex		(x,	1);
	create_insn	(x=0X43E6A068);
	op_hex		(x,	1);
	create_insn	(x=0X43E6A07D);
	op_hex		(x,	1);
	create_insn	(x=0X43E6A0A6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6A0AB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6A0B0);
	op_hex		(x,	1);
	set_cmt	(0X43E6A0F1,	"Size",	0);
	create_insn	(x=0X43E6A0FB);
	op_hex		(x,	1);
	create_insn	(x=0X43E6A417);
	op_hex		(x,	1);
	create_insn	(x=0X43E6A42C);
	op_hex		(x,	1);
	create_insn	(x=0X43E6A44F);
	op_hex		(x,	1);
	set_cmt	(0X43E6A468,	"Size",	0);
	create_insn	(x=0X43E6A475);
	op_hex		(x,	1);
	create_insn	(x=0X43E6A5D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6A5EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E6A613);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6A618);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6A61D);
	op_hex		(x,	1);
	set_cmt	(0X43E6A65E,	"Size",	0);
	create_insn	(x=0X43E6A668);
	op_hex		(x,	1);
	set_cmt	(0X43E6A66E,	"symbol",	0);
	set_cmt	(0X43E6A675,	"symbol",	0);
	set_cmt	(0X43E6A682,	"symbol",	0);
	set_cmt	(0X43E6A68F,	"symbol",	0);
	set_cmt	(0X43E6A69C,	"symbol",	0);
	set_cmt	(0X43E6A6A9,	"symbol",	0);
	set_cmt	(0X43E6A6B6,	"symbol",	0);
	set_cmt	(0X43E6A6C3,	"symbol",	0);
	set_cmt	(0X43E6A6D0,	"symbol",	0);
	set_cmt	(0X43E6A6DD,	"symbol",	0);
	set_cmt	(0X43E6A6EA,	"symbol",	0);
	set_cmt	(0X43E6A6F7,	"symbol",	0);
	set_cmt	(0X43E6A704,	"symbol",	0);
	set_cmt	(0X43E6A711,	"symbol",	0);
	set_cmt	(0X43E6A71E,	"symbol",	0);
	set_cmt	(0X43E6A72B,	"symbol",	0);
	set_cmt	(0X43E6A738,	"symbol",	0);
	set_cmt	(0X43E6A745,	"symbol",	0);
	set_cmt	(0X43E6A752,	"symbol",	0);
	set_cmt	(0X43E6A75F,	"symbol",	0);
	set_cmt	(0X43E6A76C,	"symbol",	0);
	set_cmt	(0X43E6A779,	"symbol",	0);
	set_cmt	(0X43E6A786,	"symbol",	0);
	set_cmt	(0X43E6A793,	"symbol",	0);
	set_cmt	(0X43E6A7A0,	"symbol",	0);
	set_cmt	(0X43E6A7AD,	"symbol",	0);
	set_cmt	(0X43E6A7BA,	"symbol",	0);
	set_cmt	(0X43E6A7C7,	"symbol",	0);
	set_cmt	(0X43E6A7D4,	"symbol",	0);
	set_cmt	(0X43E6A7E1,	"symbol",	0);
	set_cmt	(0X43E6A7EE,	"symbol",	0);
	set_cmt	(0X43E6A7FB,	"symbol",	0);
	set_cmt	(0X43E6A808,	"symbol",	0);
	set_cmt	(0X43E6A815,	"symbol",	0);
	set_cmt	(0X43E6A822,	"symbol",	0);
	set_cmt	(0X43E6A82F,	"symbol",	0);
	set_cmt	(0X43E6A83C,	"symbol",	0);
	set_cmt	(0X43E6A849,	"symbol",	0);
	set_cmt	(0X43E6A856,	"symbol",	0);
	set_cmt	(0X43E6A863,	"symbol",	0);
	set_cmt	(0X43E6A870,	"symbol",	0);
	set_cmt	(0X43E6A87D,	"symbol",	0);
	set_cmt	(0X43E6A88A,	"symbol",	0);
	set_cmt	(0X43E6A897,	"symbol",	0);
	set_cmt	(0X43E6A8A4,	"symbol",	0);
	set_cmt	(0X43E6A8B1,	"symbol",	0);
	set_cmt	(0X43E6A8BE,	"symbol",	0);
	set_cmt	(0X43E6A8CB,	"symbol",	0);
	set_cmt	(0X43E6A8D8,	"symbol",	0);
	set_cmt	(0X43E6A8E5,	"symbol",	0);
	set_cmt	(0X43E6A8F2,	"symbol",	0);
	set_cmt	(0X43E6A8FF,	"symbol",	0);
	set_cmt	(0X43E6A90C,	"symbol",	0);
	set_cmt	(0X43E6A919,	"symbol",	0);
	set_cmt	(0X43E6A926,	"symbol",	0);
	set_cmt	(0X43E6A933,	"symbol",	0);
	set_cmt	(0X43E6A940,	"symbol",	0);
	set_cmt	(0X43E6A94D,	"symbol",	0);
	set_cmt	(0X43E6A95A,	"symbol",	0);
	set_cmt	(0X43E6A967,	"symbol",	0);
	set_cmt	(0X43E6A974,	"symbol",	0);
	set_cmt	(0X43E6A981,	"symbol",	0);
	set_cmt	(0X43E6A98E,	"symbol",	0);
	set_cmt	(0X43E6A99B,	"symbol",	0);
	set_cmt	(0X43E6A9A8,	"symbol",	0);
	set_cmt	(0X43E6A9B5,	"symbol",	0);
	set_cmt	(0X43E6A9C2,	"symbol",	0);
	set_cmt	(0X43E6A9CF,	"symbol",	0);
	set_cmt	(0X43E6A9DC,	"symbol",	0);
	set_cmt	(0X43E6A9E9,	"symbol",	0);
	set_cmt	(0X43E6A9F6,	"symbol",	0);
	set_cmt	(0X43E6AA03,	"symbol",	0);
	set_cmt	(0X43E6AA10,	"symbol",	0);
	set_cmt	(0X43E6AA1D,	"symbol",	0);
	set_cmt	(0X43E6AA2A,	"symbol",	0);
	set_cmt	(0X43E6AA37,	"symbol",	0);
	set_cmt	(0X43E6AA44,	"symbol",	0);
	set_cmt	(0X43E6AA51,	"symbol",	0);
	set_cmt	(0X43E6AA5E,	"symbol",	0);
	set_cmt	(0X43E6AA6B,	"symbol",	0);
	create_insn	(x=0X43E6AAB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6AACA);
	op_hex		(x,	1);
	create_insn	(x=0X43E6AAED);
	op_hex		(x,	1);
	set_cmt	(0X43E6AB06,	"Size",	0);
	create_insn	(x=0X43E6AB13);
	op_hex		(x,	1);
	create_insn	(x=0X43E6AC68);
	op_hex		(x,	1);
	create_insn	(x=0X43E6AC7D);
	op_hex		(x,	1);
	create_insn	(x=0X43E6ACA6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6ACAB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6ACB0);
	op_hex		(x,	1);
	set_cmt	(0X43E6ACF1,	"Size",	0);
	create_insn	(x=0X43E6ACFB);
	op_hex		(x,	1);
	create_insn	(x=0X43E6AEE5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6AEFA);
	op_hex		(x,	1);
	create_insn	(x=0X43E6AF1D);
	op_hex		(x,	1);
	set_cmt	(0X43E6AF36,	"Size",	0);
	create_insn	(x=0X43E6AF43);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B045);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B05A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B083);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6B088);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6B08D);
	op_hex		(x,	1);
	set_cmt	(0X43E6B0CE,	"Size",	0);
	create_insn	(x=0X43E6B0D8);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B4B7);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B4CC);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B4EF);
	op_hex		(x,	1);
	set_cmt	(0X43E6B508,	"Size",	0);
	create_insn	(x=0X43E6B515);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B572);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B587);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B636);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B64B);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B715);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B72A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B8C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B8DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B905);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6B90A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B930);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B99B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E6B9A5,	"Size",	0);
	create_insn	(x=0X43E6B9AC);
	op_hex		(x,	1);
	create_insn	(x=0X43E6B9BB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E6B9D2);
	op_hex		(x,	1);
	set_cmt	(0X43E6B9D7,	"Size",	0);
	create_insn	(x=0X43E6B9E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E6BA75);
	op_hex		(x,	1);
	create_insn	(x=0X43E6BA8A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6BAAD);
	op_hex		(x,	1);
	create_insn	(x=0X43E6BAC9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E6BAE3,	"Size",	0);
	create_insn	(x=0X43E6BAED);
	op_hex		(x,	1);
	create_insn	(x=0X43E6BDC5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6BDDA);
	op_hex		(x,	1);
	create_insn	(x=0X43E6BDFD);
	op_hex		(x,	1);
	set_cmt	(0X43E6BE16,	"Size",	0);
	create_insn	(x=0X43E6BE23);
	op_hex		(x,	1);
	create_insn	(x=0X43E6BEE9);
	op_hex		(x,	1);
	create_insn	(x=0X43E6BEFE);
	op_hex		(x,	1);
	create_insn	(x=0X43E6BF25);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6BF2A);
	op_hex		(x,	1);
	set_cmt	(0X43E6BF6B,	"Size",	0);
	create_insn	(x=0X43E6BF75);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C1F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C20A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C22D);
	op_hex		(x,	1);
	set_cmt	(0X43E6C246,	"Size",	0);
	create_insn	(x=0X43E6C253);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C315);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C32A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C351);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6C356);
	op_hex		(x,	1);
	set_cmt	(0X43E6C397,	"Size",	0);
	create_insn	(x=0X43E6C3A1);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C407);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C41C);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C555);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C56A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C593);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C5B3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6C5B8);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C5E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E6C602,	"Size",	0);
	create_insn	(x=0X43E6C60C);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C825);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C83A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C85D);
	op_hex		(x,	1);
	set_cmt	(0X43E6C876,	"Size",	0);
	create_insn	(x=0X43E6C883);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C8E2);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C8F7);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C9C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6C9DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E6CA85);
	op_hex		(x,	1);
	create_insn	(x=0X43E6CA9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6CB65);
	op_hex		(x,	1);
	create_insn	(x=0X43E6CB7A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6CC65);
	op_hex		(x,	1);
	create_insn	(x=0X43E6CC7A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6CD02);
	op_hex		(x,	1);
	create_insn	(x=0X43E6CD17);
	op_hex		(x,	1);
	create_insn	(x=0X43E6CDC6);
	op_hex		(x,	1);
	create_insn	(x=0X43E6CDDB);
	op_hex		(x,	1);
	create_insn	(x=0X43E6CED8);
	op_hex		(x,	1);
	create_insn	(x=0X43E6CEED);
	op_hex		(x,	1);
	create_insn	(x=0X43E6CFF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D00A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D0F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D10A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D1E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D1FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D2A9);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D2BE);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D375);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D38A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D4C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D4DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D505);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6D50A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D530);
	op_hex		(x,	1);
	set_cmt	(0X43E6D609,	"Size",	0);
	create_insn	(x=0X43E6D613);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D765);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D77A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D79D);
	op_hex		(x,	1);
	set_cmt	(0X43E6D7B6,	"Size",	0);
	create_insn	(x=0X43E6D7C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D8B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D8CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D8EF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6D8F4);
	op_hex		(x,	1);
	create_insn	(x=0X43E6D924);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E6D946,	"Size",	0);
	create_insn	(x=0X43E6D950);
	op_hex		(x,	1);
	create_insn	(x=0X43E6DBB6);
	op_hex		(x,	1);
	create_insn	(x=0X43E6DBCB);
	op_hex		(x,	1);
	create_insn	(x=0X43E6DBEE);
	op_hex		(x,	1);
	set_cmt	(0X43E6DC07,	"Size",	0);
	create_insn	(x=0X43E6DC14);
	op_hex		(x,	1);
	create_insn	(x=0X43E6DC82);
	op_hex		(x,	1);
	create_insn	(x=0X43E6DC97);
	op_hex		(x,	1);
	create_insn	(x=0X43E6DD89);
	op_hex		(x,	1);
	create_insn	(x=0X43E6DD9E);
	op_hex		(x,	1);
	create_insn	(x=0X43E6DDC7);
	op_hex		(x,	1);
	create_insn	(x=0X43E6DDE7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6DDEC);
	op_hex		(x,	1);
	set_cmt	(0X43E6DE36,	"Size",	0);
	create_insn	(x=0X43E6DE40);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E045);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E05A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E07D);
	op_hex		(x,	1);
	set_cmt	(0X43E6E096,	"Size",	0);
	create_insn	(x=0X43E6E0A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E109);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E11E);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E215);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E22A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E253);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E273);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6E278);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E2C7);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E2D2);
	op_hex		(x,	1);
	set_cmt	(0X43E6E2D7,	"Size",	0);
	create_insn	(x=0X43E6E2E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E375);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E38A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E3AD);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E3C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E6E3E3,	"Size",	0);
	create_insn	(x=0X43E6E3ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E6C8);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E6DD);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E700);
	op_hex		(x,	1);
	set_cmt	(0X43E6E719,	"Size",	0);
	create_insn	(x=0X43E6E726);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E7B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E7CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E875);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E88A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E935);
	op_hex		(x,	1);
	create_insn	(x=0X43E6E94A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6EA45);
	op_hex		(x,	1);
	create_insn	(x=0X43E6EA5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6EB57);
	op_hex		(x,	1);
	create_insn	(x=0X43E6EB6C);
	op_hex		(x,	1);
	create_insn	(x=0X43E6ECB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6ECCA);
	op_hex		(x,	1);
	create_insn	(x=0X43E6ECF3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6ECF8);
	op_hex		(x,	1);
	create_insn	(x=0X43E6ED1E);
	op_hex		(x,	1);
	set_cmt	(0X43E6ED9F,	"Size",	0);
	create_insn	(x=0X43E6EDA9);
	op_hex		(x,	1);
	create_insn	(x=0X43E6EFE8);
	op_hex		(x,	1);
	create_insn	(x=0X43E6EFFD);
	op_hex		(x,	1);
	create_insn	(x=0X43E6F020);
	op_hex		(x,	1);
	set_cmt	(0X43E6F039,	"Size",	0);
	create_insn	(x=0X43E6F046);
	op_hex		(x,	1);
	create_insn	(x=0X43E6F145);
	op_hex		(x,	1);
	create_insn	(x=0X43E6F15A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6F181);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6F186);
	op_hex		(x,	1);
	set_cmt	(0X43E6F1C7,	"Size",	0);
	create_insn	(x=0X43E6F1D1);
	op_hex		(x,	1);
	create_insn	(x=0X43E6F5A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E6F5BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E6F5DD);
	op_hex		(x,	1);
	set_cmt	(0X43E6F5F6,	"Size",	0);
	create_insn	(x=0X43E6F603);
	op_hex		(x,	1);
	create_insn	(x=0X43E6F717);
	op_hex		(x,	1);
	create_insn	(x=0X43E6F72C);
	op_hex		(x,	1);
	create_insn	(x=0X43E6F753);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E6F758);
	op_hex		(x,	1);
	set_cmt	(0X43E6F799,	"Size",	0);
	create_insn	(x=0X43E6F7A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E6FB35);
	op_hex		(x,	1);
	create_insn	(x=0X43E6FB4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6FB6D);
	op_hex		(x,	1);
	set_cmt	(0X43E6FB86,	"Size",	0);
	create_insn	(x=0X43E6FB93);
	op_hex		(x,	1);
	create_insn	(x=0X43E6FBF9);
	op_hex		(x,	1);
	create_insn	(x=0X43E6FC0E);
	op_hex		(x,	1);
	create_insn	(x=0X43E6FD35);
	op_hex		(x,	1);
	create_insn	(x=0X43E6FD4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E6FE06);
	op_hex		(x,	1);
	create_insn	(x=0X43E6FE1B);
	op_hex		(x,	1);
	create_insn	(x=0X43E6FF55);
	op_hex		(x,	1);
	create_insn	(x=0X43E6FF6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E70095);
	op_hex		(x,	1);
	create_insn	(x=0X43E700AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E701A7);
	op_hex		(x,	1);
	create_insn	(x=0X43E701BC);
	op_hex		(x,	1);
	create_insn	(x=0X43E70325);
	op_hex		(x,	1);
	create_insn	(x=0X43E7033A);
	op_hex		(x,	1);
	create_insn	(x=0X43E70363);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E70368);
	op_hex		(x,	1);
	create_insn	(x=0X43E7038E);
	op_hex		(x,	1);
	set_cmt	(0X43E7041A,	"Size",	0);
	create_insn	(x=0X43E70424);
	op_hex		(x,	1);
	create_insn	(x=0X43E706B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E706CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E706ED);
	op_hex		(x,	1);
	set_cmt	(0X43E70706,	"Size",	0);
	create_insn	(x=0X43E70713);
	op_hex		(x,	1);
	create_insn	(x=0X43E70845);
	op_hex		(x,	1);
	create_insn	(x=0X43E7085A);
	op_hex		(x,	1);
	create_insn	(x=0X43E70881);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E70886);
	op_hex		(x,	1);
	set_cmt	(0X43E708C7,	"Size",	0);
	create_insn	(x=0X43E708D1);
	op_hex		(x,	1);
	create_insn	(x=0X43E70BC6);
	op_hex		(x,	1);
	create_insn	(x=0X43E70BDB);
	op_hex		(x,	1);
	create_insn	(x=0X43E70BFE);
	op_hex		(x,	1);
	set_cmt	(0X43E70C17,	"Size",	0);
	create_insn	(x=0X43E70C24);
	op_hex		(x,	1);
	create_insn	(x=0X43E70CF7);
	op_hex		(x,	1);
	create_insn	(x=0X43E70D0C);
	op_hex		(x,	1);
	create_insn	(x=0X43E70D33);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E70D38);
	op_hex		(x,	1);
	set_cmt	(0X43E70D79,	"Size",	0);
	create_insn	(x=0X43E70D83);
	op_hex		(x,	1);
	create_insn	(x=0X43E710B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E710CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E710ED);
	op_hex		(x,	1);
	set_cmt	(0X43E71106,	"Size",	0);
	create_insn	(x=0X43E71113);
	op_hex		(x,	1);
	create_insn	(x=0X43E711E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E711FB);
	op_hex		(x,	1);
	create_insn	(x=0X43E71222);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E71227);
	op_hex		(x,	1);
	set_cmt	(0X43E71268,	"Size",	0);
	create_insn	(x=0X43E71272);
	op_hex		(x,	1);
	create_insn	(x=0X43E715D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E715EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7160D);
	op_hex		(x,	1);
	set_cmt	(0X43E71626,	"Size",	0);
	create_insn	(x=0X43E71633);
	op_hex		(x,	1);
	create_insn	(x=0X43E717A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E717BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E717E3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E717E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E717ED);
	op_hex		(x,	1);
	set_cmt	(0X43E7182E,	"Size",	0);
	create_insn	(x=0X43E71838);
	op_hex		(x,	1);
	create_insn	(x=0X43E71B35);
	op_hex		(x,	1);
	create_insn	(x=0X43E71B4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E71B6D);
	op_hex		(x,	1);
	set_cmt	(0X43E71B86,	"Size",	0);
	create_insn	(x=0X43E71B93);
	op_hex		(x,	1);
	create_insn	(x=0X43E71D75);
	op_hex		(x,	1);
	create_insn	(x=0X43E71D8A);
	op_hex		(x,	1);
	create_insn	(x=0X43E71DB1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E71DB6);
	op_hex		(x,	1);
	create_insn	(x=0X43E71DE1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E71E03,	"Size",	0);
	create_insn	(x=0X43E71E0D);
	op_hex		(x,	1);
	create_insn	(x=0X43E720F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7210A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7212D);
	op_hex		(x,	1);
	set_cmt	(0X43E72146,	"Size",	0);
	create_insn	(x=0X43E72153);
	op_hex		(x,	1);
	create_insn	(x=0X43E722C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E722DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E72301);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E72306);
	op_hex		(x,	1);
	set_cmt	(0X43E72347,	"Size",	0);
	create_insn	(x=0X43E72351);
	op_hex		(x,	1);
	create_insn	(x=0X43E72745);
	op_hex		(x,	1);
	create_insn	(x=0X43E7275A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7277D);
	op_hex		(x,	1);
	set_cmt	(0X43E72796,	"Size",	0);
	create_insn	(x=0X43E727A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E728B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E728CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E728F1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E728F6);
	op_hex		(x,	1);
	create_insn	(x=0X43E7293C);
	op_hex		(x,	1);
	create_insn	(x=0X43E72947);
	op_hex		(x,	1);
	set_cmt	(0X43E7294C,	"Size",	0);
	create_insn	(x=0X43E7295B);
	op_hex		(x,	1);
	create_insn	(x=0X43E729C2);
	op_hex		(x,	1);
	create_insn	(x=0X43E729D7);
	op_hex		(x,	1);
	create_insn	(x=0X43E729FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E72A16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E72A30,	"Size",	0);
	create_insn	(x=0X43E72A3A);
	op_hex		(x,	1);
	create_insn	(x=0X43E72C86);
	op_hex		(x,	1);
	create_insn	(x=0X43E72C9B);
	op_hex		(x,	1);
	create_insn	(x=0X43E72CBE);
	op_hex		(x,	1);
	set_cmt	(0X43E72CD7,	"Size",	0);
	create_insn	(x=0X43E72CE4);
	op_hex		(x,	1);
	create_insn	(x=0X43E72D52);
	op_hex		(x,	1);
	create_insn	(x=0X43E72D67);
	op_hex		(x,	1);
	create_insn	(x=0X43E72E85);
	op_hex		(x,	1);
	create_insn	(x=0X43E72E9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E72EC3);
	op_hex		(x,	1);
	create_insn	(x=0X43E72EE3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E72EE8);
	op_hex		(x,	1);
	set_cmt	(0X43E72F32,	"Size",	0);
	create_insn	(x=0X43E72F3C);
	op_hex		(x,	1);
	create_insn	(x=0X43E73275);
	op_hex		(x,	1);
	create_insn	(x=0X43E7328A);
	op_hex		(x,	1);
	create_insn	(x=0X43E732AD);
	op_hex		(x,	1);
	set_cmt	(0X43E732C6,	"Size",	0);
	create_insn	(x=0X43E732D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E733B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E733CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E733F1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E733F6);
	op_hex		(x,	1);
	set_cmt	(0X43E73437,	"Size",	0);
	create_insn	(x=0X43E73441);
	op_hex		(x,	1);
	create_insn	(x=0X43E736E8);
	op_hex		(x,	1);
	create_insn	(x=0X43E736FD);
	op_hex		(x,	1);
	create_insn	(x=0X43E73720);
	op_hex		(x,	1);
	set_cmt	(0X43E73739,	"Size",	0);
	create_insn	(x=0X43E73746);
	op_hex		(x,	1);
	create_insn	(x=0X43E737B2);
	op_hex		(x,	1);
	create_insn	(x=0X43E737C7);
	op_hex		(x,	1);
	create_insn	(x=0X43E737EE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E737F3);
	op_hex		(x,	1);
	set_cmt	(0X43E73834,	"Size",	0);
	create_insn	(x=0X43E7383E);
	op_hex		(x,	1);
	create_insn	(x=0X43E73A08);
	op_hex		(x,	1);
	create_insn	(x=0X43E73A1D);
	op_hex		(x,	1);
	create_insn	(x=0X43E73A40);
	op_hex		(x,	1);
	set_cmt	(0X43E73A59,	"Size",	0);
	create_insn	(x=0X43E73A66);
	op_hex		(x,	1);
	create_insn	(x=0X43E73B15);
	op_hex		(x,	1);
	create_insn	(x=0X43E73B2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E73B4F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E73B54);
	op_hex		(x,	1);
	create_insn	(x=0X43E73B7F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E73BA1,	"Size",	0);
	create_insn	(x=0X43E73BAB);
	op_hex		(x,	1);
	create_insn	(x=0X43E73F08);
	op_hex		(x,	1);
	create_insn	(x=0X43E73F1D);
	op_hex		(x,	1);
	create_insn	(x=0X43E73F40);
	op_hex		(x,	1);
	set_cmt	(0X43E73F59,	"Size",	0);
	create_insn	(x=0X43E73F66);
	op_hex		(x,	1);
	create_insn	(x=0X43E73FD2);
	op_hex		(x,	1);
	create_insn	(x=0X43E73FE7);
	op_hex		(x,	1);
	create_insn	(x=0X43E740E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E740FB);
	op_hex		(x,	1);
	create_insn	(x=0X43E74124);
	op_hex		(x,	1);
	create_insn	(x=0X43E74144);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E74149);
	op_hex		(x,	1);
	create_insn	(x=0X43E74172);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E7419F,	"Size",	0);
	create_insn	(x=0X43E741A9);
	op_hex		(x,	1);
	create_insn	(x=0X43E74565);
	op_hex		(x,	1);
	create_insn	(x=0X43E7457A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7459D);
	op_hex		(x,	1);
	set_cmt	(0X43E745B6,	"Size",	0);
	create_insn	(x=0X43E745C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E746D7);
	op_hex		(x,	1);
	create_insn	(x=0X43E746EC);
	op_hex		(x,	1);
	create_insn	(x=0X43E74711);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E74716);
	op_hex		(x,	1);
	set_cmt	(0X43E74757,	"Size",	0);
	create_insn	(x=0X43E74761);
	op_hex		(x,	1);
	create_insn	(x=0X43E74B35);
	op_hex		(x,	1);
	create_insn	(x=0X43E74B4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E74B6D);
	op_hex		(x,	1);
	set_cmt	(0X43E74B86,	"Size",	0);
	create_insn	(x=0X43E74B93);
	op_hex		(x,	1);
	create_insn	(x=0X43E74BF9);
	op_hex		(x,	1);
	create_insn	(x=0X43E74C0E);
	op_hex		(x,	1);
	create_insn	(x=0X43E74D55);
	op_hex		(x,	1);
	create_insn	(x=0X43E74D6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E74D93);
	op_hex		(x,	1);
	create_insn	(x=0X43E74DB6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E74DBB);
	op_hex		(x,	1);
	set_cmt	(0X43E74E05,	"Size",	0);
	create_insn	(x=0X43E74E0F);
	op_hex		(x,	1);
	create_insn	(x=0X43E75165);
	op_hex		(x,	1);
	create_insn	(x=0X43E7517A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7519D);
	op_hex		(x,	1);
	set_cmt	(0X43E751B6,	"Size",	0);
	create_insn	(x=0X43E751C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E75325);
	op_hex		(x,	1);
	create_insn	(x=0X43E7533A);
	op_hex		(x,	1);
	create_insn	(x=0X43E75361);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E75366);
	op_hex		(x,	1);
	set_cmt	(0X43E753A7,	"Size",	0);
	create_insn	(x=0X43E753B1);
	op_hex		(x,	1);
	create_insn	(x=0X43E75835);
	op_hex		(x,	1);
	create_insn	(x=0X43E7584A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7586D);
	op_hex		(x,	1);
	set_cmt	(0X43E75886,	"Size",	0);
	create_insn	(x=0X43E75893);
	op_hex		(x,	1);
	create_insn	(x=0X43E759F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E75A0A);
	op_hex		(x,	1);
	create_insn	(x=0X43E75A31);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E75A36);
	op_hex		(x,	1);
	make_array	(0X43E75A82,	0XE);
	create_insn	(0X43E75A90);
	set_name	(0X43E75A90,	"OneTap::GUI::Render::Tabs::Players");
	create_insn	(x=0X43E75A93);
	op_hex		(x,	1);
	create_insn	(x=0X43E75A96);
	op_hex		(x,	1);
	create_insn	(x=0X43E75A99);
	op_hex		(x,	1);
	set_cmt	(0X43E75A9C,	"size",	0);
	create_insn	(x=0X43E75AA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E75AB7);
	op_hex		(x,	1);
	create_insn	(x=0X43E75ABB);
	op_hex		(x,	1);
	create_insn	(x=0X43E75ABE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E75ACF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E75AD9);
	op_hex		(x,	1);
	create_insn	(x=0X43E75ADC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E75AE1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E75AEB,	"Size",	0);
	create_insn	(x=0X43E75AF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E75B95);
	op_hex		(x,	1);
	create_insn	(x=0X43E75BAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E75BCD);
	op_hex		(x,	1);
	create_insn	(x=0X43E75BE7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E75BFC,	"Size",	0);
	create_insn	(x=0X43E75C06);
	op_hex		(x,	1);
	create_insn	(x=0X43E75F65);
	op_hex		(x,	1);
	create_insn	(x=0X43E75F7A);
	op_hex		(x,	1);
	create_insn	(x=0X43E75F9D);
	op_hex		(x,	1);
	set_cmt	(0X43E75FB6,	"Size",	0);
	create_insn	(x=0X43E75FC3);
	op_hex		(x,	1);
	create_insn	(x=0X43E76065);
	op_hex		(x,	1);
	create_insn	(x=0X43E7607A);
	op_hex		(x,	1);
	create_insn	(x=0X43E76155);
	op_hex		(x,	1);
	create_insn	(x=0X43E7616A);
	op_hex		(x,	1);
	create_insn	(x=0X43E76235);
	op_hex		(x,	1);
	create_insn	(x=0X43E7624A);
	op_hex		(x,	1);
	create_insn	(x=0X43E76365);
	op_hex		(x,	1);
	create_insn	(x=0X43E7637A);
	op_hex		(x,	1);
	create_insn	(x=0X43E763A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E763AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E763D0);
	op_hex		(x,	1);
	create_insn	(x=0X43E763F5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E7643C);
	op_hex		(x,	1);
	create_insn	(x=0X43E76444);
	op_hex		(x,	1);
	set_cmt	(0X43E76447,	"Size",	0);
	create_insn	(x=0X43E76456);
	op_hex		(x,	1);
	create_insn	(x=0X43E764B2);
	op_hex		(x,	1);
	create_insn	(x=0X43E764C7);
	op_hex		(x,	1);
	create_insn	(x=0X43E764EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E76506);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E76526);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E76530,	"Size",	0);
	create_insn	(x=0X43E7653A);
	op_hex		(x,	1);
	create_insn	(x=0X43E76745);
	op_hex		(x,	1);
	create_insn	(x=0X43E7675A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7677D);
	op_hex		(x,	1);
	set_cmt	(0X43E76796,	"Size",	0);
	create_insn	(x=0X43E767A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E76885);
	op_hex		(x,	1);
	create_insn	(x=0X43E7689A);
	op_hex		(x,	1);
	create_insn	(x=0X43E768C3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E768C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E768CD);
	op_hex		(x,	1);
	set_cmt	(0X43E7690E,	"Size",	0);
	create_insn	(x=0X43E76918);
	op_hex		(x,	1);
	create_insn	(x=0X43E76B98);
	op_hex		(x,	1);
	create_insn	(x=0X43E76BAD);
	op_hex		(x,	1);
	create_insn	(x=0X43E76BD0);
	op_hex		(x,	1);
	set_cmt	(0X43E76BE9,	"Size",	0);
	create_insn	(x=0X43E76BF6);
	op_hex		(x,	1);
	create_insn	(x=0X43E76CF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E76D0A);
	op_hex		(x,	1);
	create_insn	(x=0X43E76D31);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E76D36);
	op_hex		(x,	1);
	create_insn	(x=0X43E76D61);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E76D83,	"Size",	0);
	create_insn	(x=0X43E76D8D);
	op_hex		(x,	1);
	create_insn	(x=0X43E76F95);
	op_hex		(x,	1);
	create_insn	(x=0X43E76FAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E76FCD);
	op_hex		(x,	1);
	set_cmt	(0X43E76FE6,	"Size",	0);
	create_insn	(x=0X43E76FF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E77059);
	op_hex		(x,	1);
	create_insn	(x=0X43E7706E);
	op_hex		(x,	1);
	create_insn	(x=0X43E77097);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7709C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E770A1);
	op_hex		(x,	1);
	set_cmt	(0X43E770E2,	"Size",	0);
	create_insn	(x=0X43E770EC);
	op_hex		(x,	1);
	create_insn	(x=0X43E77365);
	op_hex		(x,	1);
	create_insn	(x=0X43E7737A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7739D);
	op_hex		(x,	1);
	set_cmt	(0X43E773B6,	"Size",	0);
	create_insn	(x=0X43E773C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E77429);
	op_hex		(x,	1);
	create_insn	(x=0X43E7743E);
	op_hex		(x,	1);
	create_insn	(x=0X43E77467);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7746C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E77471);
	op_hex		(x,	1);
	set_cmt	(0X43E774B2,	"Size",	0);
	create_insn	(x=0X43E774BC);
	op_hex		(x,	1);
	create_insn	(x=0X43E778F6);
	op_hex		(x,	1);
	create_insn	(x=0X43E7790B);
	op_hex		(x,	1);
	create_insn	(x=0X43E7792E);
	op_hex		(x,	1);
	set_cmt	(0X43E77947,	"Size",	0);
	create_insn	(x=0X43E77954);
	op_hex		(x,	1);
	create_insn	(x=0X43E779E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E779FB);
	op_hex		(x,	1);
	create_insn	(x=0X43E77A22);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E77A27);
	op_hex		(x,	1);
	set_cmt	(0X43E77A68,	"Size",	0);
	create_insn	(x=0X43E77A72);
	op_hex		(x,	1);
	create_insn	(x=0X43E77D65);
	op_hex		(x,	1);
	create_insn	(x=0X43E77D7A);
	op_hex		(x,	1);
	create_insn	(x=0X43E77D9D);
	op_hex		(x,	1);
	set_cmt	(0X43E77DB6,	"Size",	0);
	create_insn	(x=0X43E77DC3);
	op_hex		(x,	1);
	create_insn	(x=0X43E77E55);
	op_hex		(x,	1);
	create_insn	(x=0X43E77E6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E77E91);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E77E96);
	op_hex		(x,	1);
	set_cmt	(0X43E77ED7,	"Size",	0);
	create_insn	(x=0X43E77EE1);
	op_hex		(x,	1);
	create_insn	(x=0X43E78045);
	op_hex		(x,	1);
	create_insn	(x=0X43E7805A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7807D);
	op_hex		(x,	1);
	set_cmt	(0X43E78096,	"Size",	0);
	create_insn	(x=0X43E780A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E78109);
	op_hex		(x,	1);
	create_insn	(x=0X43E7811E);
	op_hex		(x,	1);
	create_insn	(x=0X43E781A2);
	op_hex		(x,	1);
	create_insn	(x=0X43E781B7);
	op_hex		(x,	1);
	create_insn	(x=0X43E78295);
	op_hex		(x,	1);
	create_insn	(x=0X43E782AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E783C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E783DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E78403);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E78408);
	op_hex		(x,	1);
	create_insn	(x=0X43E7842E);
	op_hex		(x,	1);
	create_insn	(x=0X43E78462);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E784A5,	"Size",	0);
	create_insn	(x=0X43E784AF);
	op_hex		(x,	1);
	create_insn	(x=0X43E78865);
	op_hex		(x,	1);
	create_insn	(x=0X43E7887A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7889D);
	op_hex		(x,	1);
	set_cmt	(0X43E788B6,	"Size",	0);
	create_insn	(x=0X43E788C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E78938);
	op_hex		(x,	1);
	create_insn	(x=0X43E7894D);
	op_hex		(x,	1);
	create_insn	(x=0X43E78976);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7897B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E78980);
	op_hex		(x,	1);
	set_cmt	(0X43E789C1,	"Size",	0);
	create_insn	(x=0X43E789CB);
	op_hex		(x,	1);
	create_insn	(x=0X43E78BD6);
	op_hex		(x,	1);
	create_insn	(x=0X43E78BEB);
	op_hex		(x,	1);
	create_insn	(x=0X43E78C0E);
	op_hex		(x,	1);
	set_cmt	(0X43E78C27,	"Size",	0);
	create_insn	(x=0X43E78C34);
	op_hex		(x,	1);
	create_insn	(x=0X43E78CE5);
	op_hex		(x,	1);
	create_insn	(x=0X43E78CFA);
	op_hex		(x,	1);
	create_insn	(x=0X43E78D23);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E78D28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E78D2D);
	op_hex		(x,	1);
	set_cmt	(0X43E78D6E,	"Size",	0);
	create_insn	(x=0X43E78D78);
	op_hex		(x,	1);
	create_insn	(x=0X43E793C7);
	op_hex		(x,	1);
	create_insn	(x=0X43E793DC);
	op_hex		(x,	1);
	create_insn	(x=0X43E793FF);
	op_hex		(x,	1);
	set_cmt	(0X43E79418,	"Size",	0);
	create_insn	(x=0X43E79425);
	op_hex		(x,	1);
	create_insn	(x=0X43E794C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E794DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E79501);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E79506);
	op_hex		(x,	1);
	set_cmt	(0X43E79547,	"Size",	0);
	create_insn	(x=0X43E79551);
	op_hex		(x,	1);
	create_insn	(x=0X43E79745);
	op_hex		(x,	1);
	create_insn	(x=0X43E7975A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7977D);
	op_hex		(x,	1);
	set_cmt	(0X43E79796,	"Size",	0);
	create_insn	(x=0X43E797A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E79825);
	op_hex		(x,	1);
	create_insn	(x=0X43E7983A);
	op_hex		(x,	1);
	create_insn	(x=0X43E79861);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E79866);
	op_hex		(x,	1);
	create_insn	(x=0X43E79891);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E798B3,	"Size",	0);
	create_insn	(x=0X43E798BD);
	op_hex		(x,	1);
	create_insn	(x=0X43E79BA5);
	op_hex		(x,	1);
	create_insn	(x=0X43E79BBA);
	op_hex		(x,	1);
	create_insn	(x=0X43E79BDD);
	op_hex		(x,	1);
	set_cmt	(0X43E79BF6,	"Size",	0);
	create_insn	(x=0X43E79C03);
	op_hex		(x,	1);
	create_insn	(x=0X43E79C85);
	op_hex		(x,	1);
	create_insn	(x=0X43E79C9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E79D85);
	op_hex		(x,	1);
	create_insn	(x=0X43E79D9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E79DC3);
	op_hex		(x,	1);
	create_insn	(x=0X43E79DE3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E79DE8);
	op_hex		(x,	1);
	create_insn	(x=0X43E79E11);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E79E3E,	"Size",	0);
	create_insn	(x=0X43E79E48);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A198);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A1AD);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A1D0);
	op_hex		(x,	1);
	set_cmt	(0X43E7A1E9,	"Size",	0);
	create_insn	(x=0X43E7A1F6);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A295);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A2AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A355);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A36A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A415);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A42A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A4E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A4FB);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A5B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A5CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A665);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A67A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A745);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A75A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A825);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A83A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A925);
	op_hex		(x,	1);
	create_insn	(x=0X43E7A93A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7AA05);
	op_hex		(x,	1);
	create_insn	(x=0X43E7AA1A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7AAE5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7AAFA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7AB23);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7AB28);
	op_hex		(x,	1);
	create_insn	(x=0X43E7AB4E);
	op_hex		(x,	1);
	create_insn	(x=0X43E7AC0B);
	op_hex		(x,	1);
	create_insn	(x=0X43E7AC13);
	op_hex		(x,	1);
	set_cmt	(0X43E7AC16,	"Size",	0);
	create_insn	(x=0X43E7AC25);
	op_hex		(x,	1);
	create_insn	(x=0X43E7AC82);
	op_hex		(x,	1);
	create_insn	(x=0X43E7AC97);
	op_hex		(x,	1);
	create_insn	(x=0X43E7ACBA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7ACD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E7ACF6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E7AD00,	"Size",	0);
	create_insn	(x=0X43E7AD0A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7AF15);
	op_hex		(x,	1);
	create_insn	(x=0X43E7AF2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7AF4D);
	op_hex		(x,	1);
	set_cmt	(0X43E7AF66,	"Size",	0);
	create_insn	(x=0X43E7AF73);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B055);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B06A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B093);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7B098);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7B09D);
	op_hex		(x,	1);
	set_cmt	(0X43E7B0DE,	"Size",	0);
	create_insn	(x=0X43E7B0E8);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B368);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B37D);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B3A0);
	op_hex		(x,	1);
	set_cmt	(0X43E7B3B9,	"Size",	0);
	create_insn	(x=0X43E7B3C6);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B4C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B4DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B501);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7B506);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B531);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E7B553,	"Size",	0);
	create_insn	(x=0X43E7B55D);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B765);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B77A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B79D);
	op_hex		(x,	1);
	set_cmt	(0X43E7B7B6,	"Size",	0);
	create_insn	(x=0X43E7B7C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B845);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B85A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7B883);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7B888);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7B88D);
	op_hex		(x,	1);
	set_cmt	(0X43E7B8CE,	"Size",	0);
	create_insn	(x=0X43E7B8D8);
	op_hex		(x,	1);
	create_insn	(x=0X43E7BB55);
	op_hex		(x,	1);
	create_insn	(x=0X43E7BB6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7BB8D);
	op_hex		(x,	1);
	set_cmt	(0X43E7BBA6,	"Size",	0);
	create_insn	(x=0X43E7BBB3);
	op_hex		(x,	1);
	create_insn	(x=0X43E7BC35);
	op_hex		(x,	1);
	create_insn	(x=0X43E7BC4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7BC73);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7BC78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7BC7D);
	op_hex		(x,	1);
	set_cmt	(0X43E7BCBE,	"Size",	0);
	create_insn	(x=0X43E7BCC8);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C105);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C11A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C13D);
	op_hex		(x,	1);
	set_cmt	(0X43E7C156,	"Size",	0);
	create_insn	(x=0X43E7C163);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C1F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C20A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C231);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7C236);
	op_hex		(x,	1);
	set_cmt	(0X43E7C277,	"Size",	0);
	create_insn	(x=0X43E7C281);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C569);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C57E);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C5A1);
	op_hex		(x,	1);
	set_cmt	(0X43E7C5BA,	"Size",	0);
	create_insn	(x=0X43E7C5C7);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C659);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C66E);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C695);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7C69A);
	op_hex		(x,	1);
	set_cmt	(0X43E7C6DB,	"Size",	0);
	create_insn	(x=0X43E7C6E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C847);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C85C);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C87F);
	op_hex		(x,	1);
	set_cmt	(0X43E7C898,	"Size",	0);
	create_insn	(x=0X43E7C8A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C925);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C93A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C9D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7C9EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7CAC5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7CADA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7CBF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7CC0A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7CC33);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7CC38);
	op_hex		(x,	1);
	create_insn	(x=0X43E7CC5E);
	op_hex		(x,	1);
	create_insn	(x=0X43E7CC92);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E7CCD5,	"Size",	0);
	create_insn	(x=0X43E7CCDF);
	op_hex		(x,	1);
	create_insn	(x=0X43E7D095);
	op_hex		(x,	1);
	create_insn	(x=0X43E7D0AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7D0CD);
	op_hex		(x,	1);
	set_cmt	(0X43E7D0E6,	"Size",	0);
	create_insn	(x=0X43E7D0F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E7D175);
	op_hex		(x,	1);
	create_insn	(x=0X43E7D18A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7D1B3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7D1B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7D1BD);
	op_hex		(x,	1);
	set_cmt	(0X43E7D1FE,	"Size",	0);
	create_insn	(x=0X43E7D208);
	op_hex		(x,	1);
	create_insn	(x=0X43E7D415);
	op_hex		(x,	1);
	create_insn	(x=0X43E7D42A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7D44D);
	op_hex		(x,	1);
	set_cmt	(0X43E7D466,	"Size",	0);
	create_insn	(x=0X43E7D473);
	op_hex		(x,	1);
	create_insn	(x=0X43E7D525);
	op_hex		(x,	1);
	create_insn	(x=0X43E7D53A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7D563);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7D568);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7D56D);
	op_hex		(x,	1);
	set_cmt	(0X43E7D5AE,	"Size",	0);
	create_insn	(x=0X43E7D5B8);
	op_hex		(x,	1);
	create_insn	(x=0X43E7D908);
	op_hex		(x,	1);
	create_insn	(x=0X43E7D91D);
	op_hex		(x,	1);
	create_insn	(x=0X43E7D940);
	op_hex		(x,	1);
	set_cmt	(0X43E7D959,	"Size",	0);
	create_insn	(x=0X43E7D966);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DA05);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DA1A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DAC5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DADA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DB85);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DB9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DC56);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DC6B);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DD25);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DD3A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DDD5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DDEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DEB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DECA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DF95);
	op_hex		(x,	1);
	create_insn	(x=0X43E7DFAA);
	op_hex		(x,	1);
	set_cmt	(0X43E7DFCD,	"symbol",	0);
	set_cmt	(0X43E7DFD4,	"symbol",	0);
	set_cmt	(0X43E7DFE1,	"symbol",	0);
	set_cmt	(0X43E7DFEE,	"symbol",	0);
	set_cmt	(0X43E7DFFB,	"symbol",	0);
	set_cmt	(0X43E7E008,	"symbol",	0);
	set_cmt	(0X43E7E015,	"symbol",	0);
	set_cmt	(0X43E7E022,	"symbol",	0);
	set_cmt	(0X43E7E02F,	"symbol",	0);
	set_cmt	(0X43E7E03C,	"symbol",	0);
	set_cmt	(0X43E7E049,	"symbol",	0);
	create_insn	(x=0X43E7E095);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E0AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E175);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E18A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E255);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E26A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E293);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7E298);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E2BE);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E37B);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E383);
	op_hex		(x,	1);
	set_cmt	(0X43E7E386,	"Size",	0);
	create_insn	(x=0X43E7E395);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E3F2);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E407);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E42A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E446);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E7E466);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E7E470,	"Size",	0);
	create_insn	(x=0X43E7E47A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E685);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E69A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E6BD);
	op_hex		(x,	1);
	set_cmt	(0X43E7E6D6,	"Size",	0);
	create_insn	(x=0X43E7E6E3);
	op_hex		(x,	1);
	set_cmt	(0X43E7E6E9,	"symbol",	0);
	set_cmt	(0X43E7E6F0,	"symbol",	0);
	set_cmt	(0X43E7E6FD,	"symbol",	0);
	set_cmt	(0X43E7E70A,	"symbol",	0);
	set_cmt	(0X43E7E717,	"symbol",	0);
	set_cmt	(0X43E7E724,	"symbol",	0);
	set_cmt	(0X43E7E731,	"symbol",	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_8(void) {
        auto x;
#define id x

	set_cmt	(0X43E7E73E,	"symbol",	0);
	set_cmt	(0X43E7E74B,	"symbol",	0);
	set_cmt	(0X43E7E758,	"symbol",	0);
	set_cmt	(0X43E7E765,	"symbol",	0);
	set_cmt	(0X43E7E772,	"symbol",	0);
	set_cmt	(0X43E7E77F,	"symbol",	0);
	create_insn	(x=0X43E7E7C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E7DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7E803);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7E808);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7E80D);
	op_hex		(x,	1);
	set_cmt	(0X43E7E84E,	"Size",	0);
	create_insn	(x=0X43E7E858);
	op_hex		(x,	1);
	create_insn	(x=0X43E7EAD8);
	op_hex		(x,	1);
	create_insn	(x=0X43E7EAED);
	op_hex		(x,	1);
	create_insn	(x=0X43E7EB10);
	op_hex		(x,	1);
	set_cmt	(0X43E7EB29,	"Size",	0);
	create_insn	(x=0X43E7EB36);
	op_hex		(x,	1);
	create_insn	(x=0X43E7EC35);
	op_hex		(x,	1);
	create_insn	(x=0X43E7EC4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7EC71);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7EC76);
	op_hex		(x,	1);
	create_insn	(x=0X43E7ECA1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E7ECC3,	"Size",	0);
	create_insn	(x=0X43E7ECCD);
	op_hex		(x,	1);
	create_insn	(x=0X43E7EED5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7EEEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7EF0D);
	op_hex		(x,	1);
	set_cmt	(0X43E7EF26,	"Size",	0);
	create_insn	(x=0X43E7EF33);
	op_hex		(x,	1);
	create_insn	(x=0X43E7EFB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7EFCA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7EFF3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7EFF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7EFFD);
	op_hex		(x,	1);
	set_cmt	(0X43E7F03E,	"Size",	0);
	create_insn	(x=0X43E7F048);
	op_hex		(x,	1);
	set_cmt	(0X43E7F04E,	"symbol",	0);
	set_cmt	(0X43E7F055,	"symbol",	0);
	set_cmt	(0X43E7F062,	"symbol",	0);
	set_cmt	(0X43E7F06F,	"symbol",	0);
	set_cmt	(0X43E7F07C,	"symbol",	0);
	set_cmt	(0X43E7F089,	"symbol",	0);
	set_cmt	(0X43E7F096,	"symbol",	0);
	set_cmt	(0X43E7F0A3,	"symbol",	0);
	set_cmt	(0X43E7F0B0,	"symbol",	0);
	set_cmt	(0X43E7F0BD,	"symbol",	0);
	set_cmt	(0X43E7F0CA,	"symbol",	0);
	set_cmt	(0X43E7F0D7,	"symbol",	0);
	set_cmt	(0X43E7F0E4,	"symbol",	0);
	set_cmt	(0X43E7F0F1,	"symbol",	0);
	set_cmt	(0X43E7F0FE,	"symbol",	0);
	set_cmt	(0X43E7F10B,	"symbol",	0);
	set_cmt	(0X43E7F118,	"symbol",	0);
	set_cmt	(0X43E7F125,	"symbol",	0);
	set_cmt	(0X43E7F132,	"symbol",	0);
	set_cmt	(0X43E7F13F,	"symbol",	0);
	set_cmt	(0X43E7F14C,	"symbol",	0);
	set_cmt	(0X43E7F159,	"symbol",	0);
	set_cmt	(0X43E7F166,	"symbol",	0);
	set_cmt	(0X43E7F173,	"symbol",	0);
	set_cmt	(0X43E7F180,	"symbol",	0);
	set_cmt	(0X43E7F18D,	"symbol",	0);
	set_cmt	(0X43E7F19A,	"symbol",	0);
	set_cmt	(0X43E7F1A7,	"symbol",	0);
	set_cmt	(0X43E7F1B4,	"symbol",	0);
	set_cmt	(0X43E7F1C1,	"symbol",	0);
	set_cmt	(0X43E7F1CE,	"symbol",	0);
	set_cmt	(0X43E7F1DB,	"symbol",	0);
	set_cmt	(0X43E7F1E8,	"symbol",	0);
	set_cmt	(0X43E7F1F5,	"symbol",	0);
	set_cmt	(0X43E7F202,	"symbol",	0);
	set_cmt	(0X43E7F20F,	"symbol",	0);
	set_cmt	(0X43E7F21C,	"symbol",	0);
	set_cmt	(0X43E7F229,	"symbol",	0);
	set_cmt	(0X43E7F236,	"symbol",	0);
	set_cmt	(0X43E7F243,	"symbol",	0);
	set_cmt	(0X43E7F250,	"symbol",	0);
	set_cmt	(0X43E7F25D,	"symbol",	0);
	set_cmt	(0X43E7F26A,	"symbol",	0);
	set_cmt	(0X43E7F277,	"symbol",	0);
	create_insn	(x=0X43E7F2C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7F2DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7F2FD);
	op_hex		(x,	1);
	set_cmt	(0X43E7F316,	"Size",	0);
	create_insn	(x=0X43E7F323);
	op_hex		(x,	1);
	create_insn	(x=0X43E7F3A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E7F3BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E7F3E3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7F3E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7F3ED);
	op_hex		(x,	1);
	set_cmt	(0X43E7F42E,	"Size",	0);
	create_insn	(x=0X43E7F438);
	op_hex		(x,	1);
	create_insn	(x=0X43E7F875);
	op_hex		(x,	1);
	create_insn	(x=0X43E7F88A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7F8AD);
	op_hex		(x,	1);
	set_cmt	(0X43E7F8C6,	"Size",	0);
	create_insn	(x=0X43E7F8D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E7F965);
	op_hex		(x,	1);
	create_insn	(x=0X43E7F97A);
	op_hex		(x,	1);
	create_insn	(x=0X43E7F9A1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7F9A6);
	op_hex		(x,	1);
	set_cmt	(0X43E7F9E7,	"Size",	0);
	create_insn	(x=0X43E7F9F1);
	op_hex		(x,	1);
	create_insn	(x=0X43E7FCD9);
	op_hex		(x,	1);
	create_insn	(x=0X43E7FCEE);
	op_hex		(x,	1);
	create_insn	(x=0X43E7FD11);
	op_hex		(x,	1);
	set_cmt	(0X43E7FD2A,	"Size",	0);
	create_insn	(x=0X43E7FD37);
	op_hex		(x,	1);
	create_insn	(x=0X43E7FDC9);
	op_hex		(x,	1);
	create_insn	(x=0X43E7FDDE);
	op_hex		(x,	1);
	create_insn	(x=0X43E7FE05);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E7FE0A);
	op_hex		(x,	1);
	set_cmt	(0X43E7FE4B,	"Size",	0);
	create_insn	(x=0X43E7FE55);
	op_hex		(x,	1);
	create_insn	(x=0X43E7FFB7);
	op_hex		(x,	1);
	create_insn	(x=0X43E7FFCC);
	op_hex		(x,	1);
	create_insn	(x=0X43E7FFEF);
	op_hex		(x,	1);
	set_cmt	(0X43E80008,	"Size",	0);
	create_insn	(x=0X43E80015);
	op_hex		(x,	1);
	create_insn	(x=0X43E80095);
	op_hex		(x,	1);
	create_insn	(x=0X43E800AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E80145);
	op_hex		(x,	1);
	create_insn	(x=0X43E8015A);
	op_hex		(x,	1);
	create_insn	(x=0X43E80235);
	op_hex		(x,	1);
	create_insn	(x=0X43E8024A);
	op_hex		(x,	1);
	create_insn	(x=0X43E80365);
	op_hex		(x,	1);
	create_insn	(x=0X43E8037A);
	op_hex		(x,	1);
	create_insn	(x=0X43E803A3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E803A8);
	op_hex		(x,	1);
	create_insn	(x=0X43E803CE);
	op_hex		(x,	1);
	create_insn	(x=0X43E80402);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E80445,	"Size",	0);
	create_insn	(x=0X43E8044F);
	op_hex		(x,	1);
	create_insn	(x=0X43E80805);
	op_hex		(x,	1);
	create_insn	(x=0X43E8081A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8083D);
	op_hex		(x,	1);
	set_cmt	(0X43E80856,	"Size",	0);
	create_insn	(x=0X43E80863);
	op_hex		(x,	1);
	create_insn	(x=0X43E808E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E808FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E80923);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E80928);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8092D);
	op_hex		(x,	1);
	set_cmt	(0X43E8096E,	"Size",	0);
	create_insn	(x=0X43E80978);
	op_hex		(x,	1);
	create_insn	(x=0X43E80CB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E80CCA);
	op_hex		(x,	1);
	create_insn	(x=0X43E80CED);
	op_hex		(x,	1);
	set_cmt	(0X43E80D06,	"Size",	0);
	create_insn	(x=0X43E80D13);
	op_hex		(x,	1);
	create_insn	(x=0X43E80DD9);
	op_hex		(x,	1);
	create_insn	(x=0X43E80DEE);
	op_hex		(x,	1);
	create_insn	(x=0X43E80E17);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E80E1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E80E21);
	op_hex		(x,	1);
	set_cmt	(0X43E80E62,	"Size",	0);
	create_insn	(x=0X43E80E6C);
	op_hex		(x,	1);
	create_insn	(x=0X43E811C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E811DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E811FD);
	op_hex		(x,	1);
	set_cmt	(0X43E81216,	"Size",	0);
	create_insn	(x=0X43E81223);
	op_hex		(x,	1);
	create_insn	(x=0X43E812C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E812DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E81385);
	op_hex		(x,	1);
	create_insn	(x=0X43E8139A);
	op_hex		(x,	1);
	create_insn	(x=0X43E81445);
	op_hex		(x,	1);
	create_insn	(x=0X43E8145A);
	op_hex		(x,	1);
	create_insn	(x=0X43E81516);
	op_hex		(x,	1);
	create_insn	(x=0X43E8152B);
	op_hex		(x,	1);
	create_insn	(x=0X43E815E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E815FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E81695);
	op_hex		(x,	1);
	create_insn	(x=0X43E816AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E81775);
	op_hex		(x,	1);
	create_insn	(x=0X43E8178A);
	op_hex		(x,	1);
	create_insn	(x=0X43E81855);
	op_hex		(x,	1);
	create_insn	(x=0X43E8186A);
	op_hex		(x,	1);
	create_insn	(x=0X43E81955);
	op_hex		(x,	1);
	create_insn	(x=0X43E8196A);
	op_hex		(x,	1);
	create_insn	(x=0X43E81A35);
	op_hex		(x,	1);
	create_insn	(x=0X43E81A4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E81B15);
	op_hex		(x,	1);
	create_insn	(x=0X43E81B2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E81B53);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E81B58);
	op_hex		(x,	1);
	create_insn	(x=0X43E81B7E);
	op_hex		(x,	1);
	create_insn	(x=0X43E81C36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E81C40,	"Size",	0);
	create_insn	(x=0X43E81C47);
	op_hex		(x,	1);
	create_insn	(x=0X43E81C56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E81C65);
	op_hex		(x,	1);
	create_insn	(x=0X43E81C6D);
	op_hex		(x,	1);
	set_cmt	(0X43E81C70,	"Size",	0);
	create_insn	(x=0X43E81C7F);
	op_hex		(x,	1);
	create_insn	(x=0X43E81CF7);
	op_hex		(x,	1);
	create_insn	(x=0X43E81D0C);
	op_hex		(x,	1);
	create_insn	(x=0X43E81D2F);
	op_hex		(x,	1);
	create_insn	(x=0X43E81D4B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E81D6B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E81D75,	"Size",	0);
	create_insn	(x=0X43E81D7F);
	op_hex		(x,	1);
	create_insn	(x=0X43E81F97);
	op_hex		(x,	1);
	create_insn	(x=0X43E81FAC);
	op_hex		(x,	1);
	create_insn	(x=0X43E81FCF);
	op_hex		(x,	1);
	set_cmt	(0X43E81FE8,	"Size",	0);
	create_insn	(x=0X43E81FF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E82105);
	op_hex		(x,	1);
	create_insn	(x=0X43E8211A);
	op_hex		(x,	1);
	create_insn	(x=0X43E82141);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E82146);
	op_hex		(x,	1);
	set_cmt	(0X43E82187,	"Size",	0);
	create_insn	(x=0X43E82191);
	op_hex		(x,	1);
	create_insn	(x=0X43E825D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E825EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8260D);
	op_hex		(x,	1);
	set_cmt	(0X43E82626,	"Size",	0);
	create_insn	(x=0X43E82633);
	op_hex		(x,	1);
	create_insn	(x=0X43E82785);
	op_hex		(x,	1);
	create_insn	(x=0X43E8279A);
	op_hex		(x,	1);
	create_insn	(x=0X43E827C3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E827C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E827CD);
	op_hex		(x,	1);
	set_cmt	(0X43E8280E,	"Size",	0);
	create_insn	(x=0X43E82818);
	op_hex		(x,	1);
	create_insn	(x=0X43E82CC5);
	op_hex		(x,	1);
	create_insn	(x=0X43E82CDA);
	op_hex		(x,	1);
	create_insn	(x=0X43E82CFD);
	op_hex		(x,	1);
	set_cmt	(0X43E82D16,	"Size",	0);
	create_insn	(x=0X43E82D23);
	op_hex		(x,	1);
	create_insn	(x=0X43E82EB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E82ECA);
	op_hex		(x,	1);
	create_insn	(x=0X43E82EF3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E82EF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E82EFD);
	op_hex		(x,	1);
	create_insn	(x=0X43E82F28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E82F4A,	"Size",	0);
	create_insn	(x=0X43E82F54);
	op_hex		(x,	1);
	create_insn	(x=0X43E833C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E833DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E833FD);
	op_hex		(x,	1);
	set_cmt	(0X43E83416,	"Size",	0);
	create_insn	(x=0X43E83423);
	op_hex		(x,	1);
	create_insn	(x=0X43E834A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E834BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E83625);
	op_hex		(x,	1);
	create_insn	(x=0X43E8363A);
	op_hex		(x,	1);
	create_insn	(x=0X43E83663);
	op_hex		(x,	1);
	create_insn	(x=0X43E83683);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E83688);
	op_hex		(x,	1);
	create_insn	(x=0X43E836B1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E836DE,	"Size",	0);
	create_insn	(x=0X43E836E8);
	op_hex		(x,	1);
	create_insn	(x=0X43E83905);
	op_hex		(x,	1);
	create_insn	(x=0X43E8391A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8393D);
	op_hex		(x,	1);
	set_cmt	(0X43E83956,	"Size",	0);
	create_insn	(x=0X43E83963);
	op_hex		(x,	1);
	create_insn	(x=0X43E83AA5);
	op_hex		(x,	1);
	create_insn	(x=0X43E83ABA);
	op_hex		(x,	1);
	create_insn	(x=0X43E83AE1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E83AE6);
	op_hex		(x,	1);
	create_insn	(x=0X43E83B11);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E83B33,	"Size",	0);
	create_insn	(x=0X43E83B3D);
	op_hex		(x,	1);
	create_insn	(x=0X43E83D45);
	op_hex		(x,	1);
	create_insn	(x=0X43E83D5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E83D7D);
	op_hex		(x,	1);
	set_cmt	(0X43E83D96,	"Size",	0);
	create_insn	(x=0X43E83DA3);
	op_hex		(x,	1);
	create_insn	(x=0X43E83E65);
	op_hex		(x,	1);
	create_insn	(x=0X43E83E7A);
	op_hex		(x,	1);
	create_insn	(x=0X43E83EA3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E83EA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E83EAD);
	op_hex		(x,	1);
	create_insn	(x=0X43E83EF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E83EFB);
	op_hex		(x,	1);
	set_cmt	(0X43E83EFE,	"Size",	0);
	create_insn	(x=0X43E83F0D);
	op_hex		(x,	1);
	create_insn	(x=0X43E83F85);
	op_hex		(x,	1);
	create_insn	(x=0X43E83F9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E83FBD);
	op_hex		(x,	1);
	create_insn	(x=0X43E83FD9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E83FF9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E84003,	"Size",	0);
	create_insn	(x=0X43E8400D);
	op_hex		(x,	1);
	create_insn	(x=0X43E84447);
	op_hex		(x,	1);
	create_insn	(x=0X43E8445C);
	op_hex		(x,	1);
	create_insn	(x=0X43E8447F);
	op_hex		(x,	1);
	set_cmt	(0X43E84498,	"Size",	0);
	create_insn	(x=0X43E844A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E845F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8460A);
	op_hex		(x,	1);
	create_insn	(x=0X43E84633);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E84638);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8463D);
	op_hex		(x,	1);
	set_cmt	(0X43E8467E,	"Size",	0);
	create_insn	(x=0X43E84688);
	op_hex		(x,	1);
	set_cmt	(0X43E8468E,	"symbol",	0);
	set_cmt	(0X43E84695,	"symbol",	0);
	set_cmt	(0X43E846A2,	"symbol",	0);
	set_cmt	(0X43E846AF,	"symbol",	0);
	set_cmt	(0X43E846BC,	"symbol",	0);
	set_cmt	(0X43E846C9,	"symbol",	0);
	set_cmt	(0X43E846D6,	"symbol",	0);
	set_cmt	(0X43E846E3,	"symbol",	0);
	set_cmt	(0X43E846F0,	"symbol",	0);
	set_cmt	(0X43E846FD,	"symbol",	0);
	set_cmt	(0X43E8470A,	"symbol",	0);
	set_cmt	(0X43E84717,	"symbol",	0);
	set_cmt	(0X43E84724,	"symbol",	0);
	set_cmt	(0X43E84731,	"symbol",	0);
	set_cmt	(0X43E8473E,	"symbol",	0);
	set_cmt	(0X43E8474B,	"symbol",	0);
	set_cmt	(0X43E84758,	"symbol",	0);
	set_cmt	(0X43E84765,	"symbol",	0);
	set_cmt	(0X43E84772,	"symbol",	0);
	set_cmt	(0X43E8477F,	"symbol",	0);
	set_cmt	(0X43E8478C,	"symbol",	0);
	set_cmt	(0X43E84799,	"symbol",	0);
	set_cmt	(0X43E847A6,	"symbol",	0);
	set_cmt	(0X43E847B3,	"symbol",	0);
	set_cmt	(0X43E847C0,	"symbol",	0);
	set_cmt	(0X43E847CD,	"symbol",	0);
	set_cmt	(0X43E847DA,	"symbol",	0);
	set_cmt	(0X43E847E7,	"symbol",	0);
	set_cmt	(0X43E847F4,	"symbol",	0);
	set_cmt	(0X43E84801,	"symbol",	0);
	set_cmt	(0X43E8480E,	"symbol",	0);
	set_cmt	(0X43E8481B,	"symbol",	0);
	set_cmt	(0X43E84828,	"symbol",	0);
	set_cmt	(0X43E84835,	"symbol",	0);
	set_cmt	(0X43E84842,	"symbol",	0);
	set_cmt	(0X43E8484F,	"symbol",	0);
	set_cmt	(0X43E8485C,	"symbol",	0);
	set_cmt	(0X43E84869,	"symbol",	0);
	set_cmt	(0X43E84876,	"symbol",	0);
	set_cmt	(0X43E84883,	"symbol",	0);
	set_cmt	(0X43E84890,	"symbol",	0);
	set_cmt	(0X43E8489D,	"symbol",	0);
	set_cmt	(0X43E848AA,	"symbol",	0);
	set_cmt	(0X43E848B7,	"symbol",	0);
	set_cmt	(0X43E848C4,	"symbol",	0);
	set_cmt	(0X43E848D1,	"symbol",	0);
	set_cmt	(0X43E848DE,	"symbol",	0);
	set_cmt	(0X43E848EB,	"symbol",	0);
	set_cmt	(0X43E848F8,	"symbol",	0);
	set_cmt	(0X43E84905,	"symbol",	0);
	set_cmt	(0X43E84912,	"symbol",	0);
	set_cmt	(0X43E8491F,	"symbol",	0);
	set_cmt	(0X43E8492C,	"symbol",	0);
	set_cmt	(0X43E84939,	"symbol",	0);
	set_cmt	(0X43E84946,	"symbol",	0);
	set_cmt	(0X43E84953,	"symbol",	0);
	set_cmt	(0X43E84960,	"symbol",	0);
	set_cmt	(0X43E8496D,	"symbol",	0);
	set_cmt	(0X43E8497A,	"symbol",	0);
	set_cmt	(0X43E84987,	"symbol",	0);
	set_cmt	(0X43E84994,	"symbol",	0);
	set_cmt	(0X43E849A1,	"symbol",	0);
	set_cmt	(0X43E849AE,	"symbol",	0);
	set_cmt	(0X43E849BB,	"symbol",	0);
	set_cmt	(0X43E849C8,	"symbol",	0);
	set_cmt	(0X43E849D5,	"symbol",	0);
	set_cmt	(0X43E849E2,	"symbol",	0);
	set_cmt	(0X43E849EF,	"symbol",	0);
	set_cmt	(0X43E849FC,	"symbol",	0);
	set_cmt	(0X43E84A09,	"symbol",	0);
	set_cmt	(0X43E84A16,	"symbol",	0);
	set_cmt	(0X43E84A23,	"symbol",	0);
	set_cmt	(0X43E84A30,	"symbol",	0);
	set_cmt	(0X43E84A3D,	"symbol",	0);
	set_cmt	(0X43E84A4A,	"symbol",	0);
	set_cmt	(0X43E84A57,	"symbol",	0);
	set_cmt	(0X43E84A64,	"symbol",	0);
	set_cmt	(0X43E84A71,	"symbol",	0);
	set_cmt	(0X43E84A7E,	"symbol",	0);
	set_cmt	(0X43E84A8B,	"symbol",	0);
	set_cmt	(0X43E84A98,	"symbol",	0);
	set_cmt	(0X43E84AA5,	"symbol",	0);
	set_cmt	(0X43E84AB2,	"symbol",	0);
	create_insn	(x=0X43E84AF6);
	op_hex		(x,	1);
	create_insn	(x=0X43E84B0B);
	op_hex		(x,	1);
	create_insn	(x=0X43E84B2E);
	op_hex		(x,	1);
	set_cmt	(0X43E84B47,	"Size",	0);
	create_insn	(x=0X43E84B54);
	op_hex		(x,	1);
	create_insn	(x=0X43E84BD5);
	op_hex		(x,	1);
	create_insn	(x=0X43E84BEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E84D55);
	op_hex		(x,	1);
	create_insn	(x=0X43E84D6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E84D93);
	op_hex		(x,	1);
	create_insn	(x=0X43E84DB3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E84DB8);
	op_hex		(x,	1);
	create_insn	(x=0X43E84DE1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E84E0E,	"Size",	0);
	create_insn	(x=0X43E84E18);
	op_hex		(x,	1);
	create_insn	(x=0X43E85035);
	op_hex		(x,	1);
	create_insn	(x=0X43E8504A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8506D);
	op_hex		(x,	1);
	set_cmt	(0X43E85086,	"Size",	0);
	create_insn	(x=0X43E85093);
	op_hex		(x,	1);
	create_insn	(x=0X43E851D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E851EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E85211);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E85216);
	op_hex		(x,	1);
	create_insn	(x=0X43E85241);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E85263,	"Size",	0);
	create_insn	(x=0X43E8526D);
	op_hex		(x,	1);
	create_insn	(x=0X43E854E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E854FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8551D);
	op_hex		(x,	1);
	set_cmt	(0X43E85536,	"Size",	0);
	create_insn	(x=0X43E85543);
	op_hex		(x,	1);
	create_insn	(x=0X43E85605);
	op_hex		(x,	1);
	create_insn	(x=0X43E8561A);
	op_hex		(x,	1);
	create_insn	(x=0X43E85643);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E85648);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8564D);
	op_hex		(x,	1);
	create_insn	(x=0X43E85693);
	op_hex		(x,	1);
	create_insn	(x=0X43E8569B);
	op_hex		(x,	1);
	create_insn	(x=0X43E85735);
	op_hex		(x,	1);
	create_insn	(x=0X43E8574A);
	op_hex		(x,	1);
	create_insn	(x=0X43E857E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E857FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E858A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E858BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E85995);
	op_hex		(x,	1);
	create_insn	(x=0X43E859AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E85A45);
	op_hex		(x,	1);
	create_insn	(x=0X43E85A5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E85B95);
	op_hex		(x,	1);
	create_insn	(x=0X43E85BAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E85BED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E85C3E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E85C4D);
	op_hex		(x,	1);
	create_insn	(x=0X43E85C58);
	op_hex		(x,	1);
	set_cmt	(0X43E85C5D,	"Size",	0);
	create_insn	(x=0X43E85C6C);
	op_hex		(x,	1);
	create_insn	(x=0X43E85D18);
	op_hex		(x,	1);
	create_insn	(x=0X43E85D2D);
	op_hex		(x,	1);
	create_insn	(x=0X43E85D50);
	op_hex		(x,	1);
	create_insn	(x=0X43E85D6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E85D8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E85D96,	"Size",	0);
	create_insn	(x=0X43E85DA0);
	op_hex		(x,	1);
	create_insn	(x=0X43E85FF9);
	op_hex		(x,	1);
	create_insn	(x=0X43E8600E);
	op_hex		(x,	1);
	create_insn	(x=0X43E86031);
	op_hex		(x,	1);
	set_cmt	(0X43E8604A,	"Size",	0);
	create_insn	(x=0X43E86057);
	op_hex		(x,	1);
	create_insn	(x=0X43E860F6);
	op_hex		(x,	1);
	create_insn	(x=0X43E8610B);
	op_hex		(x,	1);
	create_insn	(x=0X43E86184);
	op_hex		(x,	1);
	create_insn	(x=0X43E86199);
	op_hex		(x,	1);
	create_insn	(x=0X43E86289);
	op_hex		(x,	1);
	create_insn	(x=0X43E8629E);
	op_hex		(x,	1);
	create_insn	(x=0X43E86365);
	op_hex		(x,	1);
	create_insn	(x=0X43E8637A);
	op_hex		(x,	1);
	create_insn	(x=0X43E86475);
	op_hex		(x,	1);
	create_insn	(x=0X43E8648A);
	op_hex		(x,	1);
	create_insn	(x=0X43E864B5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E864BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E864E0);
	op_hex		(x,	1);
	set_cmt	(0X43E86556,	"Size",	0);
	create_insn	(x=0X43E86560);
	op_hex		(x,	1);
	create_insn	(x=0X43E86685);
	op_hex		(x,	1);
	create_insn	(x=0X43E8669A);
	op_hex		(x,	1);
	create_insn	(x=0X43E866BD);
	op_hex		(x,	1);
	set_cmt	(0X43E866D6,	"Size",	0);
	create_insn	(x=0X43E866E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E86795);
	op_hex		(x,	1);
	create_insn	(x=0X43E867AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E867D1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E867D6);
	op_hex		(x,	1);
	create_insn	(x=0X43E86801);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E86823,	"Size",	0);
	create_insn	(x=0X43E8682D);
	op_hex		(x,	1);
	create_insn	(x=0X43E86A38);
	op_hex		(x,	1);
	create_insn	(x=0X43E86A4D);
	op_hex		(x,	1);
	create_insn	(x=0X43E86A70);
	op_hex		(x,	1);
	set_cmt	(0X43E86A89,	"Size",	0);
	create_insn	(x=0X43E86A96);
	op_hex		(x,	1);
	create_insn	(x=0X43E86B15);
	op_hex		(x,	1);
	create_insn	(x=0X43E86B2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E86B55);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E86B5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E86B6E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E86B78);
	op_hex		(x,	1);
	create_insn	(x=0X43E86BAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E86BCE,	"Size",	0);
	create_insn	(x=0X43E86BD8);
	op_hex		(x,	1);
	create_insn	(x=0X43E86D95);
	op_hex		(x,	1);
	create_insn	(x=0X43E86DAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E86DCD);
	op_hex		(x,	1);
	set_cmt	(0X43E86DE6,	"Size",	0);
	create_insn	(x=0X43E86DF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E86E78);
	op_hex		(x,	1);
	create_insn	(x=0X43E86E8D);
	op_hex		(x,	1);
	create_insn	(x=0X43E86EB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E86EBD);
	op_hex		(x,	1);
	create_insn	(x=0X43E86EE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E86F0A,	"Size",	0);
	create_insn	(x=0X43E86F14);
	op_hex		(x,	1);
	create_insn	(x=0X43E87155);
	op_hex		(x,	1);
	create_insn	(x=0X43E8716A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8718D);
	op_hex		(x,	1);
	set_cmt	(0X43E871A6,	"Size",	0);
	create_insn	(x=0X43E871B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E872D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E872EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E87315);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8731A);
	op_hex		(x,	1);
	create_insn	(x=0X43E87345);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E87367,	"Size",	0);
	create_insn	(x=0X43E87371);
	op_hex		(x,	1);
	create_insn	(x=0X43E875C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E875DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E875FD);
	op_hex		(x,	1);
	set_cmt	(0X43E87616,	"Size",	0);
	create_insn	(x=0X43E87623);
	op_hex		(x,	1);
	create_insn	(x=0X43E876A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E876BA);
	op_hex		(x,	1);
	set_cmt	(0X43E876EC,	"symbol",	0);
	set_cmt	(0X43E876F3,	"symbol",	0);
	set_cmt	(0X43E87700,	"symbol",	0);
	set_cmt	(0X43E8770D,	"symbol",	0);
	set_cmt	(0X43E8771A,	"symbol",	0);
	set_cmt	(0X43E87727,	"symbol",	0);
	set_cmt	(0X43E87734,	"symbol",	0);
	set_cmt	(0X43E87741,	"symbol",	0);
	set_cmt	(0X43E8774E,	"symbol",	0);
	set_cmt	(0X43E8775B,	"symbol",	0);
	set_cmt	(0X43E87768,	"symbol",	0);
	set_cmt	(0X43E87775,	"symbol",	0);
	set_cmt	(0X43E87782,	"symbol",	0);
	create_insn	(x=0X43E877C6);
	op_hex		(x,	1);
	create_insn	(x=0X43E877DB);
	op_hex		(x,	1);
	create_insn	(x=0X43E87804);
	op_hex		(x,	1);
	create_insn	(x=0X43E87824);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E87829);
	op_hex		(x,	1);
	create_insn	(x=0X43E87852);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8787F,	"Size",	0);
	create_insn	(x=0X43E87889);
	op_hex		(x,	1);
	create_insn	(x=0X43E879B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E879CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E879ED);
	op_hex		(x,	1);
	set_cmt	(0X43E87A06,	"Size",	0);
	create_insn	(x=0X43E87A13);
	op_hex		(x,	1);
	create_insn	(x=0X43E87AC5);
	op_hex		(x,	1);
	create_insn	(x=0X43E87ADA);
	op_hex		(x,	1);
	create_insn	(x=0X43E87B01);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E87B06);
	op_hex		(x,	1);
	create_insn	(x=0X43E87B31);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E87B53,	"Size",	0);
	create_insn	(x=0X43E87B5D);
	op_hex		(x,	1);
	create_insn	(x=0X43E87D68);
	op_hex		(x,	1);
	create_insn	(x=0X43E87D7D);
	op_hex		(x,	1);
	create_insn	(x=0X43E87DA0);
	op_hex		(x,	1);
	set_cmt	(0X43E87DB9,	"Size",	0);
	create_insn	(x=0X43E87DC6);
	op_hex		(x,	1);
	create_insn	(x=0X43E87E45);
	op_hex		(x,	1);
	create_insn	(x=0X43E87E5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E87E85);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E87E8A);
	op_hex		(x,	1);
	create_insn	(x=0X43E87E9E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E87EA8);
	op_hex		(x,	1);
	create_insn	(x=0X43E87EDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E87EFE,	"Size",	0);
	create_insn	(x=0X43E87F08);
	op_hex		(x,	1);
	create_insn	(x=0X43E880C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E880DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E880FD);
	op_hex		(x,	1);
	set_cmt	(0X43E88116,	"Size",	0);
	create_insn	(x=0X43E88123);
	op_hex		(x,	1);
	create_insn	(x=0X43E881A8);
	op_hex		(x,	1);
	create_insn	(x=0X43E881BD);
	op_hex		(x,	1);
	create_insn	(x=0X43E881E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E881ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E88218);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8823A,	"Size",	0);
	create_insn	(x=0X43E88244);
	op_hex		(x,	1);
	create_insn	(x=0X43E88485);
	op_hex		(x,	1);
	create_insn	(x=0X43E8849A);
	op_hex		(x,	1);
	create_insn	(x=0X43E884BD);
	op_hex		(x,	1);
	set_cmt	(0X43E884D6,	"Size",	0);
	create_insn	(x=0X43E884E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E88605);
	op_hex		(x,	1);
	create_insn	(x=0X43E8861A);
	op_hex		(x,	1);
	create_insn	(x=0X43E88645);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8864A);
	op_hex		(x,	1);
	create_insn	(x=0X43E88675);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E88697,	"Size",	0);
	create_insn	(x=0X43E886A1);
	op_hex		(x,	1);
	create_insn	(x=0X43E888F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8890A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8892D);
	op_hex		(x,	1);
	set_cmt	(0X43E88946,	"Size",	0);
	create_insn	(x=0X43E88953);
	op_hex		(x,	1);
	create_insn	(x=0X43E889D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E889EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E88AF6);
	op_hex		(x,	1);
	create_insn	(x=0X43E88B0B);
	op_hex		(x,	1);
	create_insn	(x=0X43E88B34);
	op_hex		(x,	1);
	create_insn	(x=0X43E88B54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E88B59);
	op_hex		(x,	1);
	create_insn	(x=0X43E88B82);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E88BAF,	"Size",	0);
	create_insn	(x=0X43E88BB9);
	op_hex		(x,	1);
	create_insn	(x=0X43E88CE5);
	op_hex		(x,	1);
	create_insn	(x=0X43E88CFA);
	op_hex		(x,	1);
	create_insn	(x=0X43E88D1D);
	op_hex		(x,	1);
	set_cmt	(0X43E88D36,	"Size",	0);
	create_insn	(x=0X43E88D43);
	op_hex		(x,	1);
	create_insn	(x=0X43E88DF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E88E0A);
	op_hex		(x,	1);
	create_insn	(x=0X43E88E31);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E88E36);
	op_hex		(x,	1);
	create_insn	(x=0X43E88E61);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E88E83,	"Size",	0);
	create_insn	(x=0X43E88E8D);
	op_hex		(x,	1);
	create_insn	(x=0X43E89098);
	op_hex		(x,	1);
	create_insn	(x=0X43E890AD);
	op_hex		(x,	1);
	create_insn	(x=0X43E890D0);
	op_hex		(x,	1);
	set_cmt	(0X43E890E9,	"Size",	0);
	create_insn	(x=0X43E890F6);
	op_hex		(x,	1);
	create_insn	(x=0X43E89175);
	op_hex		(x,	1);
	create_insn	(x=0X43E8918A);
	op_hex		(x,	1);
	create_insn	(x=0X43E891B5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E891BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E891CE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E891D8);
	op_hex		(x,	1);
	create_insn	(x=0X43E8920C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8922E,	"Size",	0);
	create_insn	(x=0X43E89238);
	op_hex		(x,	1);
	create_insn	(x=0X43E893F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8940A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8942D);
	op_hex		(x,	1);
	set_cmt	(0X43E89446,	"Size",	0);
	create_insn	(x=0X43E89453);
	op_hex		(x,	1);
	create_insn	(x=0X43E894D8);
	op_hex		(x,	1);
	create_insn	(x=0X43E894ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E89518);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8951D);
	op_hex		(x,	1);
	create_insn	(x=0X43E89548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8956A,	"Size",	0);
	create_insn	(x=0X43E89574);
	op_hex		(x,	1);
	set_cmt	(0X43E8957A,	"symbol",	0);
	set_cmt	(0X43E89581,	"symbol",	0);
	set_cmt	(0X43E8958E,	"symbol",	0);
	set_cmt	(0X43E8959B,	"symbol",	0);
	set_cmt	(0X43E895A8,	"symbol",	0);
	set_cmt	(0X43E895B5,	"symbol",	0);
	set_cmt	(0X43E895C2,	"symbol",	0);
	set_cmt	(0X43E895CF,	"symbol",	0);
	set_cmt	(0X43E895DC,	"symbol",	0);
	set_cmt	(0X43E895E9,	"symbol",	0);
	set_cmt	(0X43E895F6,	"symbol",	0);
	set_cmt	(0X43E89603,	"symbol",	0);
	set_cmt	(0X43E89610,	"symbol",	0);
	set_cmt	(0X43E8961D,	"symbol",	0);
	set_cmt	(0X43E8962A,	"symbol",	0);
	set_cmt	(0X43E89637,	"symbol",	0);
	set_cmt	(0X43E89644,	"symbol",	0);
	set_cmt	(0X43E89651,	"symbol",	0);
	set_cmt	(0X43E8965E,	"symbol",	0);
	set_cmt	(0X43E8966B,	"symbol",	0);
	set_cmt	(0X43E89678,	"symbol",	0);
	set_cmt	(0X43E89685,	"symbol",	0);
	set_cmt	(0X43E89692,	"symbol",	0);
	set_cmt	(0X43E8969F,	"symbol",	0);
	set_cmt	(0X43E896AC,	"symbol",	0);
	set_cmt	(0X43E896B9,	"symbol",	0);
	set_cmt	(0X43E896C6,	"symbol",	0);
	set_cmt	(0X43E896D3,	"symbol",	0);
	set_cmt	(0X43E896E0,	"symbol",	0);
	set_cmt	(0X43E896ED,	"symbol",	0);
	set_cmt	(0X43E896FA,	"symbol",	0);
	set_cmt	(0X43E89707,	"symbol",	0);
	set_cmt	(0X43E89714,	"symbol",	0);
	set_cmt	(0X43E89721,	"symbol",	0);
	set_cmt	(0X43E8972E,	"symbol",	0);
	set_cmt	(0X43E8973B,	"symbol",	0);
	set_cmt	(0X43E89748,	"symbol",	0);
	set_cmt	(0X43E89755,	"symbol",	0);
	set_cmt	(0X43E89762,	"symbol",	0);
	set_cmt	(0X43E8976F,	"symbol",	0);
	create_insn	(x=0X43E897B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E897CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E897ED);
	op_hex		(x,	1);
	set_cmt	(0X43E89806,	"Size",	0);
	create_insn	(x=0X43E89813);
	op_hex		(x,	1);
	create_insn	(x=0X43E89935);
	op_hex		(x,	1);
	create_insn	(x=0X43E8994A);
	op_hex		(x,	1);
	create_insn	(x=0X43E89975);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8997A);
	op_hex		(x,	1);
	create_insn	(x=0X43E899A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E899C7,	"Size",	0);
	create_insn	(x=0X43E899D1);
	op_hex		(x,	1);
	create_insn	(x=0X43E89AF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E89B0A);
	op_hex		(x,	1);
	create_insn	(x=0X43E89B2D);
	op_hex		(x,	1);
	set_cmt	(0X43E89B46,	"Size",	0);
	create_insn	(x=0X43E89B53);
	op_hex		(x,	1);
	create_insn	(x=0X43E89C05);
	op_hex		(x,	1);
	create_insn	(x=0X43E89C1A);
	op_hex		(x,	1);
	create_insn	(x=0X43E89C41);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E89C46);
	op_hex		(x,	1);
	create_insn	(x=0X43E89C71);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E89C93,	"Size",	0);
	create_insn	(x=0X43E89C9D);
	op_hex		(x,	1);
	create_insn	(x=0X43E89EA8);
	op_hex		(x,	1);
	create_insn	(x=0X43E89EBD);
	op_hex		(x,	1);
	create_insn	(x=0X43E89EE0);
	op_hex		(x,	1);
	set_cmt	(0X43E89EF9,	"Size",	0);
	create_insn	(x=0X43E89F06);
	op_hex		(x,	1);
	create_insn	(x=0X43E89F85);
	op_hex		(x,	1);
	create_insn	(x=0X43E89F9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E89FCA);
	op_hex		(x,	1);
	create_insn	(x=0X43E89FDE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E89FE8);
	op_hex		(x,	1);
	create_insn	(x=0X43E8A01C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8A03E,	"Size",	0);
	create_insn	(x=0X43E8A048);
	op_hex		(x,	1);
	create_insn	(x=0X43E8A205);
	op_hex		(x,	1);
	create_insn	(x=0X43E8A21A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8A23D);
	op_hex		(x,	1);
	set_cmt	(0X43E8A256,	"Size",	0);
	create_insn	(x=0X43E8A263);
	op_hex		(x,	1);
	create_insn	(x=0X43E8A2E8);
	op_hex		(x,	1);
	create_insn	(x=0X43E8A2FD);
	op_hex		(x,	1);
	create_insn	(x=0X43E8A32D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8A358);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8A37A,	"Size",	0);
	create_insn	(x=0X43E8A384);
	op_hex		(x,	1);
	create_insn	(x=0X43E8A5C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8A5DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8A5FD);
	op_hex		(x,	1);
	set_cmt	(0X43E8A616,	"Size",	0);
	create_insn	(x=0X43E8A623);
	op_hex		(x,	1);
	create_insn	(x=0X43E8A745);
	op_hex		(x,	1);
	create_insn	(x=0X43E8A75A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8A785);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8A78A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8A7B5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8A7D7,	"Size",	0);
	create_insn	(x=0X43E8A7E1);
	op_hex		(x,	1);
	create_insn	(x=0X43E8AA35);
	op_hex		(x,	1);
	create_insn	(x=0X43E8AA4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8AA6D);
	op_hex		(x,	1);
	set_cmt	(0X43E8AA86,	"Size",	0);
	create_insn	(x=0X43E8AA93);
	op_hex		(x,	1);
	create_insn	(x=0X43E8AB15);
	op_hex		(x,	1);
	create_insn	(x=0X43E8AB2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8AC36);
	op_hex		(x,	1);
	create_insn	(x=0X43E8AC4B);
	op_hex		(x,	1);
	create_insn	(x=0X43E8AC74);
	op_hex		(x,	1);
	create_insn	(x=0X43E8AC99);
	op_hex		(x,	1);
	create_insn	(x=0X43E8ACC2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8ACF4);
	op_hex		(x,	1);
	create_insn	(x=0X43E8ACFF);
	op_hex		(x,	1);
	set_cmt	(0X43E8AD04,	"Size",	0);
	create_insn	(x=0X43E8AD13);
	op_hex		(x,	1);
	create_insn	(x=0X43E8ADC5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8ADDA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8ADFD);
	op_hex		(x,	1);
	create_insn	(x=0X43E8AE19);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E8AE39);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8AE43,	"Size",	0);
	create_insn	(x=0X43E8AE4D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B0A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B0BB);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B0DE);
	op_hex		(x,	1);
	set_cmt	(0X43E8B0F7,	"Size",	0);
	create_insn	(x=0X43E8B104);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B1A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B1BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B233);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B248);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B338);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B34D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B447);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B45C);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B487);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8B48C);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B4B2);
	op_hex		(x,	1);
	set_cmt	(0X43E8B51D,	"Size",	0);
	create_insn	(x=0X43E8B527);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B648);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B65D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B680);
	op_hex		(x,	1);
	set_cmt	(0X43E8B699,	"Size",	0);
	create_insn	(x=0X43E8B6A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B755);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B76A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B791);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8B796);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B7C1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8B7E3,	"Size",	0);
	create_insn	(x=0X43E8B7ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E8B9F8);
	op_hex		(x,	1);
	create_insn	(x=0X43E8BA0D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8BA30);
	op_hex		(x,	1);
	set_cmt	(0X43E8BA49,	"Size",	0);
	create_insn	(x=0X43E8BA56);
	op_hex		(x,	1);
	create_insn	(x=0X43E8BAD5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8BAEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8BB15);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8BB1A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8BB2E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8BB38);
	op_hex		(x,	1);
	create_insn	(x=0X43E8BB6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8BB8E,	"Size",	0);
	create_insn	(x=0X43E8BB98);
	op_hex		(x,	1);
	create_insn	(x=0X43E8BD55);
	op_hex		(x,	1);
	create_insn	(x=0X43E8BD6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8BD8D);
	op_hex		(x,	1);
	set_cmt	(0X43E8BDA6,	"Size",	0);
	create_insn	(x=0X43E8BDB3);
	op_hex		(x,	1);
	create_insn	(x=0X43E8BE38);
	op_hex		(x,	1);
	create_insn	(x=0X43E8BE4D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8BE78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8BE7D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8BEA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8BECA,	"Size",	0);
	create_insn	(x=0X43E8BED4);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C115);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C12A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C14D);
	op_hex		(x,	1);
	set_cmt	(0X43E8C166,	"Size",	0);
	create_insn	(x=0X43E8C173);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C295);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C2AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C2D5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8C2DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C305);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8C327,	"Size",	0);
	create_insn	(x=0X43E8C331);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C585);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C59A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C5BD);
	op_hex		(x,	1);
	set_cmt	(0X43E8C5D6,	"Size",	0);
	create_insn	(x=0X43E8C5E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C665);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C67A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C786);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C79B);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C7C4);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C7E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8C7E9);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C812);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8C83F,	"Size",	0);
	create_insn	(x=0X43E8C849);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C975);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C98A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8C9AD);
	op_hex		(x,	1);
	set_cmt	(0X43E8C9C6,	"Size",	0);
	create_insn	(x=0X43E8C9D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E8CA85);
	op_hex		(x,	1);
	create_insn	(x=0X43E8CA9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8CAC1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8CAC6);
	op_hex		(x,	1);
	create_insn	(x=0X43E8CAF1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8CB13,	"Size",	0);
	create_insn	(x=0X43E8CB1D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8CD28);
	op_hex		(x,	1);
	create_insn	(x=0X43E8CD3D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8CD60);
	op_hex		(x,	1);
	set_cmt	(0X43E8CD79,	"Size",	0);
	create_insn	(x=0X43E8CD86);
	op_hex		(x,	1);
	create_insn	(x=0X43E8CE05);
	op_hex		(x,	1);
	create_insn	(x=0X43E8CE1A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8CE45);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8CE4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8CE5E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8CE68);
	op_hex		(x,	1);
	create_insn	(x=0X43E8CE9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8CEBE,	"Size",	0);
	create_insn	(x=0X43E8CEC8);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D085);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D09A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D0BD);
	op_hex		(x,	1);
	set_cmt	(0X43E8D0D6,	"Size",	0);
	create_insn	(x=0X43E8D0E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D168);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D17D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D1A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8D1AD);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D1D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8D1FA,	"Size",	0);
	create_insn	(x=0X43E8D204);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D445);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D45A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D47D);
	op_hex		(x,	1);
	set_cmt	(0X43E8D496,	"Size",	0);
	create_insn	(x=0X43E8D4A3);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D5C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D5DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D605);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8D60A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D635);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8D657,	"Size",	0);
	create_insn	(x=0X43E8D661);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D8B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D8CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D8ED);
	op_hex		(x,	1);
	set_cmt	(0X43E8D906,	"Size",	0);
	create_insn	(x=0X43E8D913);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D995);
	op_hex		(x,	1);
	create_insn	(x=0X43E8D9AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8DAB6);
	op_hex		(x,	1);
	create_insn	(x=0X43E8DACB);
	op_hex		(x,	1);
	create_insn	(x=0X43E8DAF4);
	op_hex		(x,	1);
	create_insn	(x=0X43E8DB14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8DB19);
	op_hex		(x,	1);
	create_insn	(x=0X43E8DB42);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8DB6F,	"Size",	0);
	create_insn	(x=0X43E8DB79);
	op_hex		(x,	1);
	create_insn	(x=0X43E8DCA5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8DCBA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8DCDD);
	op_hex		(x,	1);
	set_cmt	(0X43E8DCF6,	"Size",	0);
	create_insn	(x=0X43E8DD03);
	op_hex		(x,	1);
	create_insn	(x=0X43E8DDB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8DDCA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8DDF1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8DDF6);
	op_hex		(x,	1);
	create_insn	(x=0X43E8DE21);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8DE43,	"Size",	0);
	create_insn	(x=0X43E8DE4D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E058);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E06D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E090);
	op_hex		(x,	1);
	set_cmt	(0X43E8E0A9,	"Size",	0);
	create_insn	(x=0X43E8E0B6);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E135);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E14A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E175);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8E17A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E18E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8E198);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E1CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8E1EE,	"Size",	0);
	create_insn	(x=0X43E8E1F8);
	op_hex		(x,	1);
	set_cmt	(0X43E8E1FE,	"symbol",	0);
	set_cmt	(0X43E8E205,	"symbol",	0);
	set_cmt	(0X43E8E212,	"symbol",	0);
	set_cmt	(0X43E8E21F,	"symbol",	0);
	set_cmt	(0X43E8E22C,	"symbol",	0);
	set_cmt	(0X43E8E239,	"symbol",	0);
	set_cmt	(0X43E8E246,	"symbol",	0);
	set_cmt	(0X43E8E253,	"symbol",	0);
	set_cmt	(0X43E8E260,	"symbol",	0);
	set_cmt	(0X43E8E26D,	"symbol",	0);
	set_cmt	(0X43E8E27A,	"symbol",	0);
	set_cmt	(0X43E8E287,	"symbol",	0);
	set_cmt	(0X43E8E294,	"symbol",	0);
	set_cmt	(0X43E8E2A1,	"symbol",	0);
	set_cmt	(0X43E8E2AE,	"symbol",	0);
	set_cmt	(0X43E8E2BB,	"symbol",	0);
	set_cmt	(0X43E8E2C8,	"symbol",	0);
	set_cmt	(0X43E8E2D5,	"symbol",	0);
	set_cmt	(0X43E8E2E2,	"symbol",	0);
	set_cmt	(0X43E8E2EF,	"symbol",	0);
	set_cmt	(0X43E8E2FC,	"symbol",	0);
	set_cmt	(0X43E8E309,	"symbol",	0);
	set_cmt	(0X43E8E316,	"symbol",	0);
	set_cmt	(0X43E8E323,	"symbol",	0);
	set_cmt	(0X43E8E330,	"symbol",	0);
	set_cmt	(0X43E8E33D,	"symbol",	0);
	set_cmt	(0X43E8E34A,	"symbol",	0);
	set_cmt	(0X43E8E357,	"symbol",	0);
	set_cmt	(0X43E8E364,	"symbol",	0);
	set_cmt	(0X43E8E371,	"symbol",	0);
	create_insn	(x=0X43E8E3B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E3CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E3ED);
	op_hex		(x,	1);
	set_cmt	(0X43E8E406,	"Size",	0);
	create_insn	(x=0X43E8E413);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E498);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E4AD);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E4D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8E4DD);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E508);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8E52A,	"Size",	0);
	create_insn	(x=0X43E8E534);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E775);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E78A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E7AD);
	op_hex		(x,	1);
	set_cmt	(0X43E8E7C6,	"Size",	0);
	create_insn	(x=0X43E8E7D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E8F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E90A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E935);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8E93A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E965);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8E98C);
	op_hex		(x,	1);
	create_insn	(x=0X43E8E997);
	op_hex		(x,	1);
	set_cmt	(0X43E8E99C,	"Size",	0);
	create_insn	(x=0X43E8E9AB);
	op_hex		(x,	1);
	create_insn	(x=0X43E8EA57);
	op_hex		(x,	1);
	create_insn	(x=0X43E8EA6C);
	op_hex		(x,	1);
	create_insn	(x=0X43E8EA8F);
	op_hex		(x,	1);
	create_insn	(x=0X43E8EAAB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E8EACB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8EAD5,	"Size",	0);
	create_insn	(x=0X43E8EADF);
	op_hex		(x,	1);
	create_insn	(x=0X43E8ED38);
	op_hex		(x,	1);
	create_insn	(x=0X43E8ED4D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8ED70);
	op_hex		(x,	1);
	set_cmt	(0X43E8ED89,	"Size",	0);
	create_insn	(x=0X43E8ED96);
	op_hex		(x,	1);
	create_insn	(x=0X43E8EE35);
	op_hex		(x,	1);
	create_insn	(x=0X43E8EE4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8EF45);
	op_hex		(x,	1);
	create_insn	(x=0X43E8EF5A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F009);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F01E);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F0E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F0FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F195);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F1AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F259);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F26E);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F368);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F37D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F3A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8F3AD);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F3D3);
	op_hex		(x,	1);
	set_cmt	(0X43E8F45F,	"Size",	0);
	create_insn	(x=0X43E8F469);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F595);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F5AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F5CD);
	op_hex		(x,	1);
	set_cmt	(0X43E8F5E6,	"Size",	0);
	create_insn	(x=0X43E8F5F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F6A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F6BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F6E1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8F6E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F711);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8F733,	"Size",	0);
	create_insn	(x=0X43E8F73D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F948);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F95D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8F980);
	op_hex		(x,	1);
	set_cmt	(0X43E8F999,	"Size",	0);
	create_insn	(x=0X43E8F9A6);
	op_hex		(x,	1);
	create_insn	(x=0X43E8FA25);
	op_hex		(x,	1);
	create_insn	(x=0X43E8FA3A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8FA65);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8FA6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E8FA7E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8FA88);
	op_hex		(x,	1);
	create_insn	(x=0X43E8FABC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8FADE,	"Size",	0);
	create_insn	(x=0X43E8FAE8);
	op_hex		(x,	1);
	create_insn	(x=0X43E8FCA5);
	op_hex		(x,	1);
	create_insn	(x=0X43E8FCBA);
	op_hex		(x,	1);
	create_insn	(x=0X43E8FCDD);
	op_hex		(x,	1);
	set_cmt	(0X43E8FCF6,	"Size",	0);
	create_insn	(x=0X43E8FD03);
	op_hex		(x,	1);
	create_insn	(x=0X43E8FD88);
	op_hex		(x,	1);
	create_insn	(x=0X43E8FD9D);
	op_hex		(x,	1);
	create_insn	(x=0X43E8FDC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E8FDCD);
	op_hex		(x,	1);
	create_insn	(x=0X43E8FDF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E8FE1A,	"Size",	0);
	create_insn	(x=0X43E8FE24);
	op_hex		(x,	1);
	create_insn	(x=0X43E90065);
	op_hex		(x,	1);
	create_insn	(x=0X43E9007A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9009D);
	op_hex		(x,	1);
	set_cmt	(0X43E900B6,	"Size",	0);
	create_insn	(x=0X43E900C3);
	op_hex		(x,	1);
	create_insn	(x=0X43E901E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E901FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E90225);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9022A);
	op_hex		(x,	1);
	create_insn	(x=0X43E90255);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E90277,	"Size",	0);
	create_insn	(x=0X43E90281);
	op_hex		(x,	1);
	create_insn	(x=0X43E904D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E904EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9050D);
	op_hex		(x,	1);
	set_cmt	(0X43E90526,	"Size",	0);
	create_insn	(x=0X43E90533);
	op_hex		(x,	1);
	create_insn	(x=0X43E905B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E905CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E906D6);
	op_hex		(x,	1);
	create_insn	(x=0X43E906EB);
	op_hex		(x,	1);
	create_insn	(x=0X43E90714);
	op_hex		(x,	1);
	create_insn	(x=0X43E90734);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E90739);
	op_hex		(x,	1);
	create_insn	(x=0X43E90762);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9078F,	"Size",	0);
	create_insn	(x=0X43E90799);
	op_hex		(x,	1);
	create_insn	(x=0X43E908C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E908DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E908FD);
	op_hex		(x,	1);
	set_cmt	(0X43E90916,	"Size",	0);
	create_insn	(x=0X43E90923);
	op_hex		(x,	1);
	create_insn	(x=0X43E909D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E909EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E90A11);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E90A16);
	op_hex		(x,	1);
	create_insn	(x=0X43E90A41);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E90A63,	"Size",	0);
	create_insn	(x=0X43E90A6D);
	op_hex		(x,	1);
	create_insn	(x=0X43E90C78);
	op_hex		(x,	1);
	create_insn	(x=0X43E90C8D);
	op_hex		(x,	1);
	create_insn	(x=0X43E90CB0);
	op_hex		(x,	1);
	set_cmt	(0X43E90CC9,	"Size",	0);
	create_insn	(x=0X43E90CD6);
	op_hex		(x,	1);
	create_insn	(x=0X43E90D55);
	op_hex		(x,	1);
	create_insn	(x=0X43E90D6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E90D95);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E90D9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E90DAE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E90DB8);
	op_hex		(x,	1);
	create_insn	(x=0X43E90DEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E90E0E,	"Size",	0);
	create_insn	(x=0X43E90E18);
	op_hex		(x,	1);
	create_insn	(x=0X43E90FD5);
	op_hex		(x,	1);
	create_insn	(x=0X43E90FEA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9100D);
	op_hex		(x,	1);
	set_cmt	(0X43E91026,	"Size",	0);
	create_insn	(x=0X43E91033);
	op_hex		(x,	1);
	set_cmt	(0X43E91039,	"symbol",	0);
	set_cmt	(0X43E91040,	"symbol",	0);
	set_cmt	(0X43E9104D,	"symbol",	0);
	set_cmt	(0X43E9105A,	"symbol",	0);
	set_cmt	(0X43E91067,	"symbol",	0);
	set_cmt	(0X43E91074,	"symbol",	0);
	create_insn	(x=0X43E910B8);
	op_hex		(x,	1);
	create_insn	(x=0X43E910CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E910F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E910FD);
	op_hex		(x,	1);
	create_insn	(x=0X43E91128);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9114A,	"Size",	0);
	create_insn	(x=0X43E91154);
	op_hex		(x,	1);
	create_insn	(x=0X43E91395);
	op_hex		(x,	1);
	create_insn	(x=0X43E913AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E913CD);
	op_hex		(x,	1);
	set_cmt	(0X43E913E6,	"Size",	0);
	create_insn	(x=0X43E913F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E91515);
	op_hex		(x,	1);
	create_insn	(x=0X43E9152A);
	op_hex		(x,	1);
	create_insn	(x=0X43E91555);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9155A);
	op_hex		(x,	1);
	create_insn	(x=0X43E91585);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E915A7,	"Size",	0);
	create_insn	(x=0X43E915B1);
	op_hex		(x,	1);
	create_insn	(x=0X43E916D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E916EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9170D);
	op_hex		(x,	1);
	set_cmt	(0X43E91726,	"Size",	0);
	create_insn	(x=0X43E91733);
	op_hex		(x,	1);
	create_insn	(x=0X43E917E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E917FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E91821);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E91826);
	op_hex		(x,	1);
	create_insn	(x=0X43E91851);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E91873,	"Size",	0);
	create_insn	(x=0X43E9187D);
	op_hex		(x,	1);
	create_insn	(x=0X43E91A88);
	op_hex		(x,	1);
	create_insn	(x=0X43E91A9D);
	op_hex		(x,	1);
	create_insn	(x=0X43E91AC0);
	op_hex		(x,	1);
	set_cmt	(0X43E91AD9,	"Size",	0);
	create_insn	(x=0X43E91AE6);
	op_hex		(x,	1);
	create_insn	(x=0X43E91B65);
	op_hex		(x,	1);
	create_insn	(x=0X43E91B7A);
	op_hex		(x,	1);
	create_insn	(x=0X43E91BAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E91BBE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E91BC8);
	op_hex		(x,	1);
	create_insn	(x=0X43E91BFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E91C1E,	"Size",	0);
	create_insn	(x=0X43E91C28);
	op_hex		(x,	1);
	create_insn	(x=0X43E91DE5);
	op_hex		(x,	1);
	create_insn	(x=0X43E91DFA);
	op_hex		(x,	1);
	create_insn	(x=0X43E91E1D);
	op_hex		(x,	1);
	set_cmt	(0X43E91E36,	"Size",	0);
	create_insn	(x=0X43E91E43);
	op_hex		(x,	1);
	create_insn	(x=0X43E91EC8);
	op_hex		(x,	1);
	create_insn	(x=0X43E91EDD);
	op_hex		(x,	1);
	create_insn	(x=0X43E91F0D);
	op_hex		(x,	1);
	create_insn	(x=0X43E91F38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E91F5A,	"Size",	0);
	create_insn	(x=0X43E91F64);
	op_hex		(x,	1);
	create_insn	(x=0X43E921A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E921BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E921DD);
	op_hex		(x,	1);
	set_cmt	(0X43E921F6,	"Size",	0);
	create_insn	(x=0X43E92203);
	op_hex		(x,	1);
	create_insn	(x=0X43E92325);
	op_hex		(x,	1);
	create_insn	(x=0X43E9233A);
	op_hex		(x,	1);
	create_insn	(x=0X43E92365);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9236A);
	op_hex		(x,	1);
	create_insn	(x=0X43E92395);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E923B7,	"Size",	0);
	create_insn	(x=0X43E923C1);
	op_hex		(x,	1);
	create_insn	(x=0X43E92615);
	op_hex		(x,	1);
	create_insn	(x=0X43E9262A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9264D);
	op_hex		(x,	1);
	set_cmt	(0X43E92666,	"Size",	0);
	create_insn	(x=0X43E92673);
	op_hex		(x,	1);
	create_insn	(x=0X43E926D9);
	op_hex		(x,	1);
	create_insn	(x=0X43E926EE);
	op_hex		(x,	1);
	create_insn	(x=0X43E92805);
	op_hex		(x,	1);
	create_insn	(x=0X43E9281A);
	op_hex		(x,	1);
	create_insn	(x=0X43E92843);
	op_hex		(x,	1);
	create_insn	(x=0X43E92868);
	op_hex		(x,	1);
	create_insn	(x=0X43E92891);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E928BE,	"Size",	0);
	create_insn	(x=0X43E928C8);
	op_hex		(x,	1);
	create_insn	(x=0X43E929E9);
	op_hex		(x,	1);
	create_insn	(x=0X43E929FE);
	op_hex		(x,	1);
	create_insn	(x=0X43E92A21);
	op_hex		(x,	1);
	set_cmt	(0X43E92A3A,	"Size",	0);
	create_insn	(x=0X43E92A47);
	op_hex		(x,	1);
	create_insn	(x=0X43E92AF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E92B0A);
	op_hex		(x,	1);
	create_insn	(x=0X43E92B31);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E92B36);
	op_hex		(x,	1);
	create_insn	(x=0X43E92B61);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E92B83,	"Size",	0);
	create_insn	(x=0X43E92B8D);
	op_hex		(x,	1);
	create_insn	(x=0X43E92D98);
	op_hex		(x,	1);
	create_insn	(x=0X43E92DAD);
	op_hex		(x,	1);
	create_insn	(x=0X43E92DD0);
	op_hex		(x,	1);
	set_cmt	(0X43E92DE9,	"Size",	0);
	create_insn	(x=0X43E92DF6);
	op_hex		(x,	1);
	create_insn	(x=0X43E92E62);
	op_hex		(x,	1);
	create_insn	(x=0X43E92E77);
	op_hex		(x,	1);
	create_insn	(x=0X43E92EA7);
	op_hex		(x,	1);
	create_insn	(x=0X43E92EBB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E92EC5);
	op_hex		(x,	1);
	create_insn	(x=0X43E92EF9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E92F1B,	"Size",	0);
	create_insn	(x=0X43E92F25);
	op_hex		(x,	1);
	create_insn	(x=0X43E930E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E930FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9311D);
	op_hex		(x,	1);
	set_cmt	(0X43E93136,	"Size",	0);
	create_insn	(x=0X43E93143);
	op_hex		(x,	1);
	create_insn	(x=0X43E931C8);
	op_hex		(x,	1);
	create_insn	(x=0X43E931DD);
	op_hex		(x,	1);
	create_insn	(x=0X43E9320D);
	op_hex		(x,	1);
	create_insn	(x=0X43E93238);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9325A,	"Size",	0);
	create_insn	(x=0X43E93264);
	op_hex		(x,	1);
	create_insn	(x=0X43E934A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E934BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E934DD);
	op_hex		(x,	1);
	set_cmt	(0X43E934F6,	"Size",	0);
	create_insn	(x=0X43E93503);
	op_hex		(x,	1);
	create_insn	(x=0X43E93625);
	op_hex		(x,	1);
	create_insn	(x=0X43E9363A);
	op_hex		(x,	1);
	create_insn	(x=0X43E93665);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9366A);
	op_hex		(x,	1);
	create_insn	(x=0X43E93695);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E936B7,	"Size",	0);
	create_insn	(x=0X43E936C1);
	op_hex		(x,	1);
	create_insn	(x=0X43E93915);
	op_hex		(x,	1);
	create_insn	(x=0X43E9392A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9394D);
	op_hex		(x,	1);
	set_cmt	(0X43E93966,	"Size",	0);
	create_insn	(x=0X43E93973);
	op_hex		(x,	1);
	create_insn	(x=0X43E939D9);
	op_hex		(x,	1);
	create_insn	(x=0X43E939EE);
	op_hex		(x,	1);
	create_insn	(x=0X43E93B05);
	op_hex		(x,	1);
	create_insn	(x=0X43E93B1A);
	op_hex		(x,	1);
	create_insn	(x=0X43E93B43);
	op_hex		(x,	1);
	create_insn	(x=0X43E93B68);
	op_hex		(x,	1);
	create_insn	(x=0X43E93B91);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E93BBE,	"Size",	0);
	create_insn	(x=0X43E93BC8);
	op_hex		(x,	1);
	create_insn	(x=0X43E93CE9);
	op_hex		(x,	1);
	create_insn	(x=0X43E93CFE);
	op_hex		(x,	1);
	create_insn	(x=0X43E93D21);
	op_hex		(x,	1);
	set_cmt	(0X43E93D3A,	"Size",	0);
	create_insn	(x=0X43E93D47);
	op_hex		(x,	1);
	create_insn	(x=0X43E93DF5);
	op_hex		(x,	1);
	create_insn	(x=0X43E93E0A);
	op_hex		(x,	1);
	create_insn	(x=0X43E93E31);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E93E36);
	op_hex		(x,	1);
	create_insn	(x=0X43E93E61);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E93E83,	"Size",	0);
	create_insn	(x=0X43E93E8D);
	op_hex		(x,	1);
	create_insn	(x=0X43E94098);
	op_hex		(x,	1);
	create_insn	(x=0X43E940AD);
	op_hex		(x,	1);
	create_insn	(x=0X43E940D0);
	op_hex		(x,	1);
	set_cmt	(0X43E940E9,	"Size",	0);
	create_insn	(x=0X43E940F6);
	op_hex		(x,	1);
	create_insn	(x=0X43E94162);
	op_hex		(x,	1);
	create_insn	(x=0X43E94177);
	op_hex		(x,	1);
	create_insn	(x=0X43E941A7);
	op_hex		(x,	1);
	create_insn	(x=0X43E941BB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E941C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E941F9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9421B,	"Size",	0);
	create_insn	(x=0X43E94225);
	op_hex		(x,	1);
	create_insn	(x=0X43E943E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E943FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9441D);
	op_hex		(x,	1);
	set_cmt	(0X43E94436,	"Size",	0);
	create_insn	(x=0X43E94443);
	op_hex		(x,	1);
	create_insn	(x=0X43E944C8);
	op_hex		(x,	1);
	create_insn	(x=0X43E944DD);
	op_hex		(x,	1);
	create_insn	(x=0X43E9450D);
	op_hex		(x,	1);
	create_insn	(x=0X43E94538);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9455A,	"Size",	0);
	create_insn	(x=0X43E94564);
	op_hex		(x,	1);
	create_insn	(x=0X43E947A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E947BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E947DD);
	op_hex		(x,	1);
	set_cmt	(0X43E947F6,	"Size",	0);
	create_insn	(x=0X43E94803);
	op_hex		(x,	1);
	create_insn	(x=0X43E94925);
	op_hex		(x,	1);
	create_insn	(x=0X43E9493A);
	op_hex		(x,	1);
	create_insn	(x=0X43E94965);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9496A);
	op_hex		(x,	1);
	create_insn	(x=0X43E94995);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E949B7,	"Size",	0);
	create_insn	(x=0X43E949C1);
	op_hex		(x,	1);
	create_insn	(x=0X43E94C15);
	op_hex		(x,	1);
	create_insn	(x=0X43E94C2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E94C4D);
	op_hex		(x,	1);
	set_cmt	(0X43E94C66,	"Size",	0);
	create_insn	(x=0X43E94C73);
	op_hex		(x,	1);
	create_insn	(x=0X43E94CD9);
	op_hex		(x,	1);
	create_insn	(x=0X43E94CEE);
	op_hex		(x,	1);
	create_insn	(x=0X43E94E05);
	op_hex		(x,	1);
	create_insn	(x=0X43E94E1A);
	op_hex		(x,	1);
	create_insn	(x=0X43E94E43);
	op_hex		(x,	1);
	create_insn	(x=0X43E94E68);
	op_hex		(x,	1);
	create_insn	(x=0X43E94E91);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E94EBE,	"Size",	0);
	create_insn	(x=0X43E94EC8);
	op_hex		(x,	1);
	create_insn	(x=0X43E95095);
	op_hex		(x,	1);
	create_insn	(x=0X43E950AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E950CD);
	op_hex		(x,	1);
	set_cmt	(0X43E950E6,	"Size",	0);
	create_insn	(x=0X43E950F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E95225);
	op_hex		(x,	1);
	create_insn	(x=0X43E9523A);
	op_hex		(x,	1);
	create_insn	(x=0X43E95261);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E95266);
	op_hex		(x,	1);
	create_insn	(x=0X43E95291);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E952B3,	"Size",	0);
	create_insn	(x=0X43E952BD);
	op_hex		(x,	1);
	create_insn	(x=0X43E953B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E953CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E953ED);
	op_hex		(x,	1);
	set_cmt	(0X43E95406,	"Size",	0);
	create_insn	(x=0X43E95413);
	op_hex		(x,	1);
	create_insn	(x=0X43E954D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E954EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E95511);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E95516);
	op_hex		(x,	1);
	create_insn	(x=0X43E95541);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E95563,	"Size",	0);
	create_insn	(x=0X43E9556D);
	op_hex		(x,	1);
	create_insn	(x=0X43E95695);
	op_hex		(x,	1);
	create_insn	(x=0X43E956AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E956CD);
	op_hex		(x,	1);
	set_cmt	(0X43E956E6,	"Size",	0);
	create_insn	(x=0X43E956F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E957A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E957BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E957E1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E957E6);
	op_hex		(x,	1);
	create_insn	(x=0X43E95811);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E95833,	"Size",	0);
	create_insn	(x=0X43E9583D);
	op_hex		(x,	1);
	create_insn	(x=0X43E95A48);
	op_hex		(x,	1);
	create_insn	(x=0X43E95A5D);
	op_hex		(x,	1);
	create_insn	(x=0X43E95A80);
	op_hex		(x,	1);
	set_cmt	(0X43E95A99,	"Size",	0);
	create_insn	(x=0X43E95AA6);
	op_hex		(x,	1);
	create_insn	(x=0X43E95B12);
	op_hex		(x,	1);
	create_insn	(x=0X43E95B27);
	op_hex		(x,	1);
	create_insn	(x=0X43E95B57);
	op_hex		(x,	1);
	create_insn	(x=0X43E95B6B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E95B75);
	op_hex		(x,	1);
	create_insn	(x=0X43E95BA9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E95BCB,	"Size",	0);
	create_insn	(x=0X43E95BD5);
	op_hex		(x,	1);
	create_insn	(x=0X43E95D95);
	op_hex		(x,	1);
	create_insn	(x=0X43E95DAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E95DCD);
	op_hex		(x,	1);
	set_cmt	(0X43E95DE6,	"Size",	0);
	create_insn	(x=0X43E95DF3);
	op_hex		(x,	1);
	create_insn	(x=0X43E95E78);
	op_hex		(x,	1);
	create_insn	(x=0X43E95E8D);
	op_hex		(x,	1);
	create_insn	(x=0X43E95EBD);
	op_hex		(x,	1);
	create_insn	(x=0X43E95EE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E95F0A,	"Size",	0);
	create_insn	(x=0X43E95F14);
	op_hex		(x,	1);
	create_insn	(x=0X43E96155);
	op_hex		(x,	1);
	create_insn	(x=0X43E9616A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9618D);
	op_hex		(x,	1);
	set_cmt	(0X43E961A6,	"Size",	0);
	create_insn	(x=0X43E961B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E962D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E962EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E96315);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9631A);
	op_hex		(x,	1);
	create_insn	(x=0X43E96345);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E96367,	"Size",	0);
	create_insn	(x=0X43E96371);
	op_hex		(x,	1);
	create_insn	(x=0X43E965C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E965DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E965FD);
	op_hex		(x,	1);
	set_cmt	(0X43E96616,	"Size",	0);
	create_insn	(x=0X43E96623);
	op_hex		(x,	1);
	create_insn	(x=0X43E96689);
	op_hex		(x,	1);
	create_insn	(x=0X43E9669E);
	op_hex		(x,	1);
	create_insn	(x=0X43E967B5);
	op_hex		(x,	1);
	create_insn	(x=0X43E967CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E967F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E96818);
	op_hex		(x,	1);
	create_insn	(x=0X43E96841);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9686E,	"Size",	0);
	create_insn	(x=0X43E96878);
	op_hex		(x,	1);
	create_insn	(x=0X43E96BB5);
	op_hex		(x,	1);
	create_insn	(x=0X43E96BCA);
	op_hex		(x,	1);
	create_insn	(x=0X43E96BED);
	op_hex		(x,	1);
	set_cmt	(0X43E96C06,	"Size",	0);
	create_insn	(x=0X43E96C13);
	op_hex		(x,	1);
	create_insn	(x=0X43E96C79);
	op_hex		(x,	1);
	create_insn	(x=0X43E96C8E);
	op_hex		(x,	1);
	create_insn	(x=0X43E96DA5);
	op_hex		(x,	1);
	create_insn	(x=0X43E96DBA);
	op_hex		(x,	1);
	create_insn	(x=0X43E96DE3);
	op_hex		(x,	1);
	create_insn	(x=0X43E96E03);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E96E08);
	op_hex		(x,	1);
	create_insn	(x=0X43E96E57);
	op_hex		(x,	1);
	create_insn	(x=0X43E96E62);
	op_hex		(x,	1);
	set_cmt	(0X43E96E67,	"Size",	0);
	create_insn	(x=0X43E96E76);
	op_hex		(x,	1);
	create_insn	(x=0X43E96F85);
	op_hex		(x,	1);
	create_insn	(x=0X43E96F9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E96FBD);
	op_hex		(x,	1);
	create_insn	(x=0X43E96FD9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E96FF3,	"Size",	0);
	create_insn	(x=0X43E96FFD);
	op_hex		(x,	1);
	create_insn	(x=0X43E97249);
	op_hex		(x,	1);
	create_insn	(x=0X43E9725E);
	op_hex		(x,	1);
	create_insn	(x=0X43E97281);
	op_hex		(x,	1);
	set_cmt	(0X43E9729A,	"Size",	0);
	create_insn	(x=0X43E972A7);
	op_hex		(x,	1);
	create_insn	(x=0X43E97312);
	op_hex		(x,	1);
	create_insn	(x=0X43E97327);
	op_hex		(x,	1);
	create_insn	(x=0X43E973D8);
	op_hex		(x,	1);
	create_insn	(x=0X43E973ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E97416);
	op_hex		(x,	1);
	create_insn	(x=0X43E97436);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9743B);
	op_hex		(x,	1);
	set_cmt	(0X43E97485,	"Size",	0);
	create_insn	(x=0X43E9748F);
	op_hex		(x,	1);
	create_insn	(x=0X43E97825);
	op_hex		(x,	1);
	create_insn	(x=0X43E9783A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9785D);
	op_hex		(x,	1);
	set_cmt	(0X43E97876,	"Size",	0);
	create_insn	(x=0X43E97883);
	op_hex		(x,	1);
	create_insn	(x=0X43E978E9);
	op_hex		(x,	1);
	create_insn	(x=0X43E978FE);
	op_hex		(x,	1);
	create_insn	(x=0X43E97A15);
	op_hex		(x,	1);
	create_insn	(x=0X43E97A2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E97A53);
	op_hex		(x,	1);
	create_insn	(x=0X43E97A73);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E97A78);
	op_hex		(x,	1);
	set_cmt	(0X43E97AC2,	"Size",	0);
	create_insn	(x=0X43E97ACC);
	op_hex		(x,	1);
	create_insn	(x=0X43E97D75);
	op_hex		(x,	1);
	create_insn	(x=0X43E97D8A);
	op_hex		(x,	1);
	create_insn	(x=0X43E97DAD);
	op_hex		(x,	1);
	set_cmt	(0X43E97DC6,	"Size",	0);
	create_insn	(x=0X43E97DD3);
	op_hex		(x,	1);
	create_insn	(x=0X43E97E39);
	op_hex		(x,	1);
	create_insn	(x=0X43E97E4E);
	op_hex		(x,	1);
	create_insn	(x=0X43E97F05);
	op_hex		(x,	1);
	create_insn	(x=0X43E97F1A);
	op_hex		(x,	1);
	create_insn	(x=0X43E97F43);
	op_hex		(x,	1);
	create_insn	(x=0X43E97F63);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E97F68);
	op_hex		(x,	1);
	make_array	(0X43E97FBD,	0X3);
	create_insn	(0X43E97FC0);
	set_name	(0X43E97FC0,	"OneTap::GUI::Render::Tabs::AntiAim");
	create_insn	(x=0X43E97FC3);
	op_hex		(x,	1);
	create_insn	(x=0X43E97FC6);
	op_hex		(x,	1);
	create_insn	(x=0X43E97FC9);
	op_hex		(x,	1);
	set_cmt	(0X43E97FCC,	"size",	0);
	create_insn	(x=0X43E97FD0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43E97FE7);
	op_hex		(x,	1);
	create_insn	(x=0X43E97FEB);
	op_hex		(x,	1);
	create_insn	(x=0X43E97FEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E97FFF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E98009);
	op_hex		(x,	1);
	create_insn	(x=0X43E9801B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E98028);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E9803E,	"Size",	0);
	create_insn	(x=0X43E98048);
	op_hex		(x,	1);
	create_insn	(x=0X43E9809D);
	op_hex		(x,	1);
	create_insn	(x=0X43E980B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E980FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E98105);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E98118);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E98139);
	op_hex		(x,	1);
	create_insn	(x=0X43E98141);
	op_hex		(x,	1);
	set_cmt	(0X43E98144,	"Size",	0);
	create_insn	(x=0X43E98153);
	op_hex		(x,	1);
	create_insn	(x=0X43E9819D);
	op_hex		(x,	1);
	create_insn	(x=0X43E981B3);
	op_hex		(x,	1);
	create_insn	(x=0X43E981FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E98207);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E9820E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43E98223);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E9824D,	"Size",	0);
	create_insn	(x=0X43E98264);
	op_hex		(x,	1);
	create_insn	(x=0X43E982BD);
	op_hex		(x,	1);
	create_insn	(x=0X43E982D3);
	op_hex		(x,	1);
	set_cmt	(0X43E98315,	"Size",	0);
	create_insn	(x=0X43E9831F);
	op_hex		(x,	1);
	create_insn	(x=0X43E9836D);
	op_hex		(x,	1);
	create_insn	(x=0X43E98383);
	op_hex		(x,	1);
	create_insn	(x=0X43E983AA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E983AF);
	op_hex		(x,	1);
	create_insn	(x=0X43E983F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E9842B,	"Size",	0);
	create_insn	(x=0X43E98442);
	op_hex		(x,	1);
	create_insn	(x=0X43E9849D);
	op_hex		(x,	1);
	create_insn	(x=0X43E984B3);
	op_hex		(x,	1);
	set_cmt	(0X43E984F5,	"Size",	0);
	create_insn	(x=0X43E984FF);
	op_hex		(x,	1);
	create_insn	(x=0X43E9854D);
	op_hex		(x,	1);
	create_insn	(x=0X43E98563);
	op_hex		(x,	1);
	create_insn	(x=0X43E985DD);
	op_hex		(x,	1);
	create_insn	(x=0X43E985F3);
	op_hex		(x,	1);
	create_insn	(x=0X43E9861C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E98629);
	op_hex		(x,	1);
	create_insn	(x=0X43E9864F);
	op_hex		(x,	1);
	set_cmt	(0X43E986B3,	"Size",	0);
	create_insn	(x=0X43E986D1);
	op_hex		(x,	1);
	create_insn	(x=0X43E9872D);
	op_hex		(x,	1);
	create_insn	(x=0X43E98743);
	op_hex		(x,	1);
	set_cmt	(0X43E98785,	"Size",	0);
	create_insn	(x=0X43E9878F);
	op_hex		(x,	1);
	create_insn	(x=0X43E987ED);
	op_hex		(x,	1);
	create_insn	(x=0X43E98803);
	op_hex		(x,	1);
	create_insn	(x=0X43E9882A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9882F);
	op_hex		(x,	1);
	set_cmt	(0X43E9887F,	"Size",	0);
	create_insn	(x=0X43E9889D);
	op_hex		(x,	1);
	create_insn	(x=0X43E9890D);
	op_hex		(x,	1);
	create_insn	(x=0X43E98923);
	op_hex		(x,	1);
	set_cmt	(0X43E98965,	"Size",	0);
	create_insn	(x=0X43E9896F);
	op_hex		(x,	1);
	create_insn	(x=0X43E989CD);
	op_hex		(x,	1);
	create_insn	(x=0X43E989E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E98A0A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E98A0F);
	op_hex		(x,	1);
	set_cmt	(0X43E98A5F,	"Size",	0);
	create_insn	(x=0X43E98A7D);
	op_hex		(x,	1);
	create_insn	(x=0X43E98B5D);
	op_hex		(x,	1);
	create_insn	(x=0X43E98B76);
	op_hex		(x,	1);
	set_cmt	(0X43E98BB8,	"Size",	0);
	create_insn	(x=0X43E98BC2);
	op_hex		(x,	1);
	create_insn	(x=0X43E98C0D);
	op_hex		(x,	1);
	create_insn	(x=0X43E98C23);
	op_hex		(x,	1);
	create_insn	(x=0X43E98C8D);
	op_hex		(x,	1);
	create_insn	(x=0X43E98CA3);
	op_hex		(x,	1);
	create_insn	(x=0X43E98D52);
	op_hex		(x,	1);
	create_insn	(x=0X43E98D67);
	op_hex		(x,	1);
	create_insn	(x=0X43E98D92);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E98D97);
	op_hex		(x,	1);
	create_insn	(x=0X43E98DBD);
	op_hex		(x,	1);
	create_insn	(x=0X43E98DF1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E98E29,	"Size",	0);
	create_insn	(x=0X43E98E33);
	op_hex		(x,	1);
	create_insn	(x=0X43E98FC5);
	op_hex		(x,	1);
	create_insn	(x=0X43E98FDA);
	op_hex		(x,	1);
	create_insn	(x=0X43E98FFD);
	op_hex		(x,	1);
	set_cmt	(0X43E99016,	"Size",	0);
	create_insn	(x=0X43E99023);
	op_hex		(x,	1);
	create_insn	(x=0X43E990D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E990EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E99199);
	op_hex		(x,	1);
	create_insn	(x=0X43E991AE);
	op_hex		(x,	1);
	create_insn	(x=0X43E99265);
	op_hex		(x,	1);
	create_insn	(x=0X43E9927A);
	op_hex		(x,	1);
	create_insn	(x=0X43E99367);
	op_hex		(x,	1);
	create_insn	(x=0X43E9937C);
	op_hex		(x,	1);
	create_insn	(x=0X43E993A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E993AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E993D0);
	op_hex		(x,	1);
	create_insn	(x=0X43E99404);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E99447,	"Size",	0);
	create_insn	(x=0X43E99451);
	op_hex		(x,	1);
	create_insn	(x=0X43E99787);
	op_hex		(x,	1);
	create_insn	(x=0X43E9979C);
	op_hex		(x,	1);
	create_insn	(x=0X43E997BF);
	op_hex		(x,	1);
	set_cmt	(0X43E997D8,	"Size",	0);
	create_insn	(x=0X43E997E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E998C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E998DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E99901);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E99906);
	op_hex		(x,	1);
	create_insn	(x=0X43E99931);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E99953,	"Size",	0);
	create_insn	(x=0X43E9995D);
	op_hex		(x,	1);
	create_insn	(x=0X43E99AA5);
	op_hex		(x,	1);
	create_insn	(x=0X43E99ABA);
	op_hex		(x,	1);
	create_insn	(x=0X43E99ADD);
	op_hex		(x,	1);
	set_cmt	(0X43E99AF6,	"Size",	0);
	create_insn	(x=0X43E99B03);
	op_hex		(x,	1);
	create_insn	(x=0X43E99B69);
	op_hex		(x,	1);
	create_insn	(x=0X43E99B7E);
	op_hex		(x,	1);
	create_insn	(x=0X43E99C65);
	op_hex		(x,	1);
	create_insn	(x=0X43E99C7A);
	op_hex		(x,	1);
	create_insn	(x=0X43E99CA3);
	op_hex		(x,	1);
	create_insn	(x=0X43E99CC3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E99CC8);
	op_hex		(x,	1);
	create_insn	(x=0X43E99CF1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E99D1E,	"Size",	0);
	create_insn	(x=0X43E99D28);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A1D7);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A1EC);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A20F);
	op_hex		(x,	1);
	set_cmt	(0X43E9A228,	"Size",	0);
	create_insn	(x=0X43E9A235);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A2C5);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A2DA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A405);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A41A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A443);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A463);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9A468);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A491);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9A4BE,	"Size",	0);
	create_insn	(x=0X43E9A4C8);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A6B9);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A6CE);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A6F1);
	op_hex		(x,	1);
	set_cmt	(0X43E9A70A,	"Size",	0);
	create_insn	(x=0X43E9A717);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A825);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A83A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9A863);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9A868);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9A86D);
	op_hex		(x,	1);
	set_cmt	(0X43E9A8AE,	"Size",	0);
	create_insn	(x=0X43E9A8B8);
	op_hex		(x,	1);
	create_insn	(x=0X43E9AC85);
	op_hex		(x,	1);
	create_insn	(x=0X43E9AC9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9ACBD);
	op_hex		(x,	1);
	set_cmt	(0X43E9ACD6,	"Size",	0);
	create_insn	(x=0X43E9ACE3);
	op_hex		(x,	1);
	create_insn	(x=0X43E9ADE5);
	op_hex		(x,	1);
	create_insn	(x=0X43E9ADFA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9AE1F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9AE24);
	op_hex		(x,	1);
	create_insn	(x=0X43E9AE4F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9AE71,	"Size",	0);
	create_insn	(x=0X43E9AE7B);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B0D5);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B0EA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B10D);
	op_hex		(x,	1);
	set_cmt	(0X43E9B126,	"Size",	0);
	create_insn	(x=0X43E9B133);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B1E5);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B1FA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B21F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9B224);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B24F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9B271,	"Size",	0);
	create_insn	(x=0X43E9B27B);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B4A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B4BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B4DD);
	op_hex		(x,	1);
	set_cmt	(0X43E9B4F6,	"Size",	0);
	create_insn	(x=0X43E9B503);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B5F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B60A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B62F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9B634);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B65F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9B681,	"Size",	0);
	create_insn	(x=0X43E9B68B);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B8F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B90A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9B92D);
	op_hex		(x,	1);
	set_cmt	(0X43E9B946,	"Size",	0);
	create_insn	(x=0X43E9B953);
	op_hex		(x,	1);
	create_insn	(x=0X43E9BA15);
	op_hex		(x,	1);
	create_insn	(x=0X43E9BA2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9BA4F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9BA54);
	op_hex		(x,	1);
	create_insn	(x=0X43E9BA7F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9BAA6);
	op_hex		(x,	1);
	create_insn	(x=0X43E9BAAE);
	op_hex		(x,	1);
	set_cmt	(0X43E9BAB1,	"Size",	0);
	create_insn	(x=0X43E9BAC0);
	op_hex		(x,	1);
	create_insn	(x=0X43E9BB95);
	op_hex		(x,	1);
	create_insn	(x=0X43E9BBAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9BBCD);
	op_hex		(x,	1);
	create_insn	(x=0X43E9BBE9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E9BC03,	"Size",	0);
	create_insn	(x=0X43E9BC0D);
	op_hex		(x,	1);
	create_insn	(x=0X43E9BF25);
	op_hex		(x,	1);
	create_insn	(x=0X43E9BF3A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9BF5D);
	op_hex		(x,	1);
	set_cmt	(0X43E9BF76,	"Size",	0);
	create_insn	(x=0X43E9BF83);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C025);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C03A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C0E9);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C0FE);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C275);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C28A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C2B5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9C2BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C2E0);
	op_hex		(x,	1);
	set_cmt	(0X43E9C340,	"Size",	0);
	create_insn	(x=0X43E9C34A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C575);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C58A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C5AD);
	op_hex		(x,	1);
	set_cmt	(0X43E9C5C6,	"Size",	0);
	create_insn	(x=0X43E9C5D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C665);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C67A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C6A1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9C6A6);
	op_hex		(x,	1);
	set_cmt	(0X43E9C6E7,	"Size",	0);
	create_insn	(x=0X43E9C6F1);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C925);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C93A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9C95D);
	op_hex		(x,	1);
	set_cmt	(0X43E9C976,	"Size",	0);
	create_insn	(x=0X43E9C983);
	op_hex		(x,	1);
	create_insn	(x=0X43E9CA35);
	op_hex		(x,	1);
	create_insn	(x=0X43E9CA4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9CAF9);
	op_hex		(x,	1);
	create_insn	(x=0X43E9CB0E);
	op_hex		(x,	1);
	create_insn	(x=0X43E9CBC5);
	op_hex		(x,	1);
	create_insn	(x=0X43E9CBDA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9CCA5);
	op_hex		(x,	1);
	create_insn	(x=0X43E9CCBA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9CDA5);
	op_hex		(x,	1);
	create_insn	(x=0X43E9CDBA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9CE95);
	op_hex		(x,	1);
	create_insn	(x=0X43E9CEAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9CFD8);
	op_hex		(x,	1);
	create_insn	(x=0X43E9CFED);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9D01D);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D043);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D079);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9D0DE,	"Size",	0);
	create_insn	(x=0X43E9D0E8);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D235);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D24A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D26D);
	op_hex		(x,	1);
	set_cmt	(0X43E9D286,	"Size",	0);
	create_insn	(x=0X43E9D293);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D325);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D33A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D3E9);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D3FE);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D482);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D497);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D585);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D59A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D5C5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9D5CA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D5F0);
	op_hex		(x,	1);
	set_cmt	(0X43E9D660,	"Size",	0);
	create_insn	(x=0X43E9D66A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D775);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D78A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D7AD);
	op_hex		(x,	1);
	set_cmt	(0X43E9D7C6,	"Size",	0);
	create_insn	(x=0X43E9D7D3);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D839);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D84E);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D935);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D94A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D973);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D993);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9D998);
	op_hex		(x,	1);
	create_insn	(x=0X43E9D9ED);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9D9F7,	"Size",	0);
	create_insn	(x=0X43E9DA01);
	op_hex		(x,	1);
	create_insn	(x=0X43E9DC55);
	op_hex		(x,	1);
	create_insn	(x=0X43E9DC6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9DC8D);
	op_hex		(x,	1);
	set_cmt	(0X43E9DCA6,	"Size",	0);
	create_insn	(x=0X43E9DCB3);
	op_hex		(x,	1);
	create_insn	(x=0X43E9DD19);
	op_hex		(x,	1);
	create_insn	(x=0X43E9DD2E);
	op_hex		(x,	1);
	create_insn	(x=0X43E9DE88);
	op_hex		(x,	1);
	create_insn	(x=0X43E9DE9D);
	op_hex		(x,	1);
	create_insn	(x=0X43E9DEC6);
	op_hex		(x,	1);
	create_insn	(x=0X43E9DEE6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9DEEB);
	op_hex		(x,	1);
	create_insn	(x=0X43E9DF40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9DF4A,	"Size",	0);
	create_insn	(x=0X43E9DF54);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E0B6);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E0CB);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E0EE);
	op_hex		(x,	1);
	set_cmt	(0X43E9E107,	"Size",	0);
	create_insn	(x=0X43E9E114);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E182);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E197);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E2A5);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E2BA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E2E3);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E303);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9E308);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E35D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9E367,	"Size",	0);
	create_insn	(x=0X43E9E371);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E596);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E5AB);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E5CE);
	op_hex		(x,	1);
	set_cmt	(0X43E9E5E7,	"Size",	0);
	create_insn	(x=0X43E9E5F4);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E686);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E69B);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E6C2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9E6C7);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E713);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9E71D,	"Size",	0);
	create_insn	(x=0X43E9E727);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E8F5);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E90A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9E92D);
	op_hex		(x,	1);
	set_cmt	(0X43E9E946,	"Size",	0);
	create_insn	(x=0X43E9E953);
	op_hex		(x,	1);
	create_insn	(x=0X43E9EA35);
	op_hex		(x,	1);
	create_insn	(x=0X43E9EA4A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9EA6F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9EA74);
	op_hex		(x,	1);
	create_insn	(x=0X43E9EABB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9EACA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9EAD2);
	op_hex		(x,	1);
	set_cmt	(0X43E9EAD5,	"Size",	0);
	create_insn	(x=0X43E9EAE4);
	op_hex		(x,	1);
	create_insn	(x=0X43E9EB85);
	op_hex		(x,	1);
	create_insn	(x=0X43E9EB9A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9EBBD);
	op_hex		(x,	1);
	create_insn	(x=0X43E9EBD9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43E9EBF3,	"Size",	0);
	create_insn	(x=0X43E9EBFD);
	op_hex		(x,	1);
	create_insn	(x=0X43E9EF15);
	op_hex		(x,	1);
	create_insn	(x=0X43E9EF2A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9EF4D);
	op_hex		(x,	1);
	set_cmt	(0X43E9EF66,	"Size",	0);
	create_insn	(x=0X43E9EF73);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F015);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F02A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F0D9);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F0EE);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F265);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F27A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F2A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9F2AA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F2D0);
	op_hex		(x,	1);
	set_cmt	(0X43E9F330,	"Size",	0);
	create_insn	(x=0X43E9F33A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F4F7);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F50C);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F52F);
	op_hex		(x,	1);
	set_cmt	(0X43E9F548,	"Size",	0);
	create_insn	(x=0X43E9F555);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F5E7);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F5FC);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F623);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9F628);
	op_hex		(x,	1);
	set_cmt	(0X43E9F669,	"Size",	0);
	create_insn	(x=0X43E9F673);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F6D2);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F6E7);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F805);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F81A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F843);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F866);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9F86B);
	op_hex		(x,	1);
	create_insn	(x=0X43E9F893);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9F8B5,	"Size",	0);
	create_insn	(x=0X43E9F8BF);
	op_hex		(x,	1);
	create_insn	(x=0X43E9FB55);
	op_hex		(x,	1);
	create_insn	(x=0X43E9FB6A);
	op_hex		(x,	1);
	create_insn	(x=0X43E9FB8D);
	op_hex		(x,	1);
	set_cmt	(0X43E9FBA6,	"Size",	0);
	create_insn	(x=0X43E9FBB3);
	op_hex		(x,	1);
	create_insn	(x=0X43E9FC95);
	op_hex		(x,	1);
	create_insn	(x=0X43E9FCAA);
	op_hex		(x,	1);
	create_insn	(x=0X43E9FCD1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43E9FCD6);
	op_hex		(x,	1);
	create_insn	(x=0X43E9FD01);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43E9FD23,	"Size",	0);
	create_insn	(x=0X43E9FD2D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0045);
	op_hex		(x,	1);
	create_insn	(x=0X43EA005A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA007D);
	op_hex		(x,	1);
	set_cmt	(0X43EA0096,	"Size",	0);
	create_insn	(x=0X43EA00A3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0169);
	op_hex		(x,	1);
	create_insn	(x=0X43EA017E);
	op_hex		(x,	1);
	create_insn	(x=0X43EA01A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA01AA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA01D5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EA01F7,	"Size",	0);
	create_insn	(x=0X43EA0201);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0395);
	op_hex		(x,	1);
	create_insn	(x=0X43EA03AA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA03CD);
	op_hex		(x,	1);
	set_cmt	(0X43EA03E6,	"Size",	0);
	create_insn	(x=0X43EA03F3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA04D5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA04EA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA050F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA0514);
	op_hex		(x,	1);
	create_insn	(x=0X43EA053F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA0567);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA0576);
	op_hex		(x,	1);
	create_insn	(x=0X43EA057E);
	op_hex		(x,	1);
	set_cmt	(0X43EA0581,	"Size",	0);
	create_insn	(x=0X43EA0590);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0656);
	op_hex		(x,	1);
	create_insn	(x=0X43EA066B);
	op_hex		(x,	1);
	create_insn	(x=0X43EA068E);
	op_hex		(x,	1);
	create_insn	(x=0X43EA06AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EA06C4,	"Size",	0);
	create_insn	(x=0X43EA06CE);
	op_hex		(x,	1);
	create_insn	(x=0X43EA08A5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA08BA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA08DD);
	op_hex		(x,	1);
	set_cmt	(0X43EA08F6,	"Size",	0);
	create_insn	(x=0X43EA0903);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0995);
	op_hex		(x,	1);
	create_insn	(x=0X43EA09AA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA09D1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA09D6);
	op_hex		(x,	1);
	set_cmt	(0X43EA0A17,	"Size",	0);
	create_insn	(x=0X43EA0A21);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0AE7);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0AFC);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0B23);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA0B28);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0B52);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EA0B69,	"Size",	0);
	create_insn	(x=0X43EA0B73);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0BD9);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0BEE);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0CB5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0CCA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0CF3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0D13);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA0D18);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0D40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EA0D62,	"Size",	0);
	create_insn	(x=0X43EA0D6C);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0DD2);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0DE7);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0E98);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0EAD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0ED6);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0EF6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA0EFB);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0F23);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EA0F45,	"Size",	0);
	create_insn	(x=0X43EA0F55);
	op_hex		(x,	1);
	create_insn	(x=0X43EA0FF5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA100A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1031);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA1036);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1060);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EA1077,	"Size",	0);
	create_insn	(x=0X43EA1081);
	op_hex		(x,	1);
	create_insn	(x=0X43EA10E7);
	op_hex		(x,	1);
	create_insn	(x=0X43EA10FC);
	op_hex		(x,	1);
	create_insn	(x=0X43EA11B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA11CA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA11F3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1213);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA1218);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1240);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EA1262,	"Size",	0);
	create_insn	(x=0X43EA126C);
	op_hex		(x,	1);
	create_insn	(x=0X43EA12D2);
	op_hex		(x,	1);
	create_insn	(x=0X43EA12E7);
	op_hex		(x,	1);
	create_insn	(x=0X43EA13F5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA140A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1433);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1453);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA1458);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1480);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA14A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA14B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EA14C1);
	op_hex		(x,	1);
	create_insn	(x=0X43EA14C9);
	op_hex		(x,	1);
	set_cmt	(0X43EA14CC,	"Size",	0);
	create_insn	(x=0X43EA14DB);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1585);
	op_hex		(x,	1);
	create_insn	(x=0X43EA159A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA15BD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA15D9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EA15F3,	"Size",	0);
	create_insn	(x=0X43EA15FD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1786);
	op_hex		(x,	1);
	create_insn	(x=0X43EA179B);
	op_hex		(x,	1);
	create_insn	(x=0X43EA17BE);
	op_hex		(x,	1);
	set_cmt	(0X43EA17D7,	"Size",	0);
	create_insn	(x=0X43EA17E4);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1876);
	op_hex		(x,	1);
	create_insn	(x=0X43EA188B);
	op_hex		(x,	1);
	create_insn	(x=0X43EA18B2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA18B7);
	op_hex		(x,	1);
	set_cmt	(0X43EA18F8,	"Size",	0);
	create_insn	(x=0X43EA1902);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1A57);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1A6C);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1A8F);
	op_hex		(x,	1);
	set_cmt	(0X43EA1AA8,	"Size",	0);
	create_insn	(x=0X43EA1AB5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1B55);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1B6A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1C35);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1C4A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1CD2);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1CE7);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1D96);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1DAB);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1EA5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1EBA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1F62);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1F77);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1FA2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA1FA7);
	op_hex		(x,	1);
	create_insn	(x=0X43EA1FCD);
	op_hex		(x,	1);
	set_cmt	(0X43EA204E,	"Size",	0);
	create_insn	(x=0X43EA2058);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2225);
	op_hex		(x,	1);
	create_insn	(x=0X43EA223A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA225D);
	op_hex		(x,	1);
	set_cmt	(0X43EA2276,	"Size",	0);
	create_insn	(x=0X43EA2283);
	op_hex		(x,	1);
	create_insn	(x=0X43EA22E9);
	op_hex		(x,	1);
	create_insn	(x=0X43EA22FE);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2415);
	op_hex		(x,	1);
	create_insn	(x=0X43EA242A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2453);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2473);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA2478);
	op_hex		(x,	1);
	create_insn	(x=0X43EA24A1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EA24CE,	"Size",	0);
	create_insn	(x=0X43EA24D8);
	op_hex		(x,	1);
	create_insn	(x=0X43EA26E5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA26FA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA271D);
	op_hex		(x,	1);
	set_cmt	(0X43EA2736,	"Size",	0);
	create_insn	(x=0X43EA2743);
	op_hex		(x,	1);
	create_insn	(x=0X43EA27A9);
	op_hex		(x,	1);
	create_insn	(x=0X43EA27BE);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2889);
	op_hex		(x,	1);
	create_insn	(x=0X43EA289E);
	op_hex		(x,	1);
	create_insn	(x=0X43EA28C7);
	op_hex		(x,	1);
	create_insn	(x=0X43EA28E7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA28EC);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2915);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EA2942,	"Size",	0);
	create_insn	(x=0X43EA294C);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2B55);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2B6A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2B8D);
	op_hex		(x,	1);
	set_cmt	(0X43EA2BA6,	"Size",	0);
	create_insn	(x=0X43EA2BB3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2C65);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2C7A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2D29);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2D3E);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2DF5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2E0A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2EE5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA2EFA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3095);
	op_hex		(x,	1);
	create_insn	(x=0X43EA30AA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA30D3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA30D8);
	op_hex		(x,	1);
	create_insn	(x=0X43EA30FE);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3132);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EA3180,	"Size",	0);
	create_insn	(x=0X43EA318A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3355);
	op_hex		(x,	1);
	create_insn	(x=0X43EA336A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA338D);
	op_hex		(x,	1);
	set_cmt	(0X43EA33A6,	"Size",	0);
	create_insn	(x=0X43EA33B3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3419);
	op_hex		(x,	1);
	create_insn	(x=0X43EA342E);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3525);
	op_hex		(x,	1);
	create_insn	(x=0X43EA353A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3563);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3583);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA3588);
	op_hex		(x,	1);
	create_insn	(x=0X43EA35B1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EA35DE,	"Size",	0);
	create_insn	(x=0X43EA35E8);
	op_hex		(x,	1);
	create_insn	(x=0X43EA37D5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA37EA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA380D);
	op_hex		(x,	1);
	set_cmt	(0X43EA3826,	"Size",	0);
	create_insn	(x=0X43EA3833);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3899);
	op_hex		(x,	1);
	create_insn	(x=0X43EA38AE);
	op_hex		(x,	1);
	create_insn	(x=0X43EA39B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA39CA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA39F3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3A13);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA3A18);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3A41);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EA3A6E,	"Size",	0);
	create_insn	(x=0X43EA3A78);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3CF8);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3D0D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3D30);
	op_hex		(x,	1);
	set_cmt	(0X43EA3D49,	"Size",	0);
	create_insn	(x=0X43EA3D56);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3DE8);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3DFD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3EB9);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3ECE);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3F95);
	op_hex		(x,	1);
	create_insn	(x=0X43EA3FAA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4066);
	op_hex		(x,	1);
	create_insn	(x=0X43EA407B);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4168);
	op_hex		(x,	1);
	create_insn	(x=0X43EA417D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA41A6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA41AB);
	op_hex		(x,	1);
	create_insn	(x=0X43EA41D1);
	op_hex		(x,	1);
	set_cmt	(0X43EA4247,	"Size",	0);
	create_insn	(x=0X43EA4251);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4725);
	op_hex		(x,	1);
	create_insn	(x=0X43EA473A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA475D);
	op_hex		(x,	1);
	set_cmt	(0X43EA4776,	"Size",	0);
	create_insn	(x=0X43EA4783);
	op_hex		(x,	1);
	create_insn	(x=0X43EA47E9);
	op_hex		(x,	1);
	create_insn	(x=0X43EA47FE);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4917);
	op_hex		(x,	1);
	create_insn	(x=0X43EA492C);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4955);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4975);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA497A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA49C9);
	op_hex		(x,	1);
	create_insn	(x=0X43EA49D1);
	op_hex		(x,	1);
	set_cmt	(0X43EA49D4,	"Size",	0);
	create_insn	(x=0X43EA49E3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4A68);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4A7D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4AA0);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4ABC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EA4AD6,	"Size",	0);
	create_insn	(x=0X43EA4AE0);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4C28);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4C3D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4C60);
	op_hex		(x,	1);
	set_cmt	(0X43EA4C79,	"Size",	0);
	create_insn	(x=0X43EA4C86);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4CE2);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4CF7);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4D92);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4DA7);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4E65);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4E7A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4F06);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4F1B);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4F96);
	op_hex		(x,	1);
	create_insn	(x=0X43EA4FAB);
	op_hex		(x,	1);
	create_insn	(x=0X43EA5067);
	op_hex		(x,	1);
	create_insn	(x=0X43EA507C);
	op_hex		(x,	1);
	create_insn	(x=0X43EA5155);
	op_hex		(x,	1);
	create_insn	(x=0X43EA516A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA5235);
	op_hex		(x,	1);
	create_insn	(x=0X43EA524A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA5275);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA527A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA52A0);
	op_hex		(x,	1);
	create_insn	(x=0X43EA52D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EA5343,	"Size",	0);
	create_insn	(x=0X43EA534D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA5895);
	op_hex		(x,	1);
	create_insn	(x=0X43EA58AA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA58CD);
	op_hex		(x,	1);
	set_cmt	(0X43EA58E6,	"Size",	0);
	create_insn	(x=0X43EA58F3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA59B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA59CA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA59EF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA59F4);
	op_hex		(x,	1);
	create_insn	(x=0X43EA5A1F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EA5A41,	"Size",	0);
	create_insn	(x=0X43EA5A4B);
	op_hex		(x,	1);
	create_insn	(x=0X43EA5E35);
	op_hex		(x,	1);
	create_insn	(x=0X43EA5E4A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA5E6D);
	op_hex		(x,	1);
	set_cmt	(0X43EA5E86,	"Size",	0);
	create_insn	(x=0X43EA5E93);
	op_hex		(x,	1);
	create_insn	(x=0X43EA5F55);
	op_hex		(x,	1);
	create_insn	(x=0X43EA5F6A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA5F8F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA5F94);
	op_hex		(x,	1);
	set_cmt	(0X43EA5FD5,	"Size",	0);
	create_insn	(x=0X43EA5FDF);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6185);
	op_hex		(x,	1);
	create_insn	(x=0X43EA619A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA61BD);
	op_hex		(x,	1);
	set_cmt	(0X43EA61D6,	"Size",	0);
	create_insn	(x=0X43EA61E3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6268);
	op_hex		(x,	1);
	create_insn	(x=0X43EA627D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA62A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA62A9);
	op_hex		(x,	1);
	create_insn	(x=0X43EA62D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EA62F6,	"Size",	0);
	create_insn	(x=0X43EA6300);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6485);
	op_hex		(x,	1);
	create_insn	(x=0X43EA649A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA64BD);
	op_hex		(x,	1);
	set_cmt	(0X43EA64D6,	"Size",	0);
	create_insn	(x=0X43EA64E3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6575);
	op_hex		(x,	1);
	create_insn	(x=0X43EA658A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6645);
	op_hex		(x,	1);
	create_insn	(x=0X43EA665A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6683);
	op_hex		(x,	1);
	create_insn	(x=0X43EA66A3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA66A8);
	op_hex		(x,	1);
	create_insn	(x=0X43EA66D1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43EA6709,	0X7);
	create_insn	(0X43EA6710);
	set_name	(0X43EA6710,	"OneTap::GUI::Render::Tabs::RageBot");
	create_insn	(x=0X43EA6713);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6716);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6719);
	op_hex		(x,	1);
	set_cmt	(0X43EA671C,	"size",	0);
	create_insn	(x=0X43EA6720);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EA6737);
	op_hex		(x,	1);
	create_insn	(x=0X43EA673B);
	op_hex		(x,	1);
	create_insn	(x=0X43EA673E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EA674F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA6759);
	op_hex		(x,	1);
	create_insn	(x=0X43EA676B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EA6778);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EA678E,	"Size",	0);
	create_insn	(x=0X43EA6798);
	op_hex		(x,	1);
	create_insn	(x=0X43EA67DD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA67F3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA683C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EA6845);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EA6858);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EA6879);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6881);
	op_hex		(x,	1);
	set_cmt	(0X43EA6884,	"Size",	0);
	create_insn	(x=0X43EA68A0);
	op_hex		(x,	1);
	create_insn	(x=0X43EA68DD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA68F3);
	op_hex		(x,	1);
	set_cmt	(0X43EA6935,	"Size",	0);
	create_insn	(x=0X43EA693F);
	op_hex		(x,	1);
	create_insn	(x=0X43EA698D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA69A3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA69CA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA69CF);
	op_hex		(x,	1);
	create_insn	(x=0X43EA69FB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EA6A35);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EA6A57);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6A5F);
	op_hex		(x,	1);
	set_cmt	(0X43EA6A62,	"Size",	0);
	create_insn	(x=0X43EA6A7E);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6ACD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6AE3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6B2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EA6B37);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EA6B3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EA6B53);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EA6B7D,	"Size",	0);
	create_insn	(x=0X43EA6B94);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6BFD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6C13);
	op_hex		(x,	1);
	set_cmt	(0X43EA6C55,	"Size",	0);
	create_insn	(x=0X43EA6C5F);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6CBD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6CD3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6D01);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6D08);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6D12);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6D1C);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6D4A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6D60);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6DCD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6DE3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6E5D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6E73);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6EDD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6EF3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6F5D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6F73);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6FDD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA6FF3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA704A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7060);
	op_hex		(x,	1);
	create_insn	(x=0X43EA70CD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA70E3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA714D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7163);
	op_hex		(x,	1);
	create_insn	(x=0X43EA718C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA7199);
	op_hex		(x,	1);
	create_insn	(x=0X43EA71BF);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7295);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EA72B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EA72C2,	"Size",	0);
	create_insn	(x=0X43EA72CC);
	op_hex		(x,	1);
	create_insn	(x=0X43EA732D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7343);
	op_hex		(x,	1);
	set_cmt	(0X43EA7385,	"Size",	0);
	create_insn	(x=0X43EA738F);
	op_hex		(x,	1);
	create_insn	(x=0X43EA73DD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA73F3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA746D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7483);
	op_hex		(x,	1);
	create_insn	(x=0X43EA74B1);
	op_hex		(x,	1);
	create_insn	(x=0X43EA74B8);
	op_hex		(x,	1);
	create_insn	(x=0X43EA74C2);
	op_hex		(x,	1);
	create_insn	(x=0X43EA74CC);
	op_hex		(x,	1);
	create_insn	(x=0X43EA74FA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7510);
	op_hex		(x,	1);
	create_insn	(x=0X43EA757D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7593);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7695);
	op_hex		(x,	1);
	create_insn	(x=0X43EA76AA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7759);
	op_hex		(x,	1);
	create_insn	(x=0X43EA776E);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7815);
	op_hex		(x,	1);
	create_insn	(x=0X43EA782A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA78D5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA78EA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7963);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7978);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7A25);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7A3A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7B68);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7B7D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7BA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA7BAD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7BD3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7C96);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA7CA5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7CAD);
	op_hex		(x,	1);
	set_cmt	(0X43EA7CB0,	"Size",	0);
	create_insn	(x=0X43EA7CBF);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7D55);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7D6A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7D8D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7DA9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EA7DC3,	"Size",	0);
	create_insn	(x=0X43EA7DCD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7EA5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7EBA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7EDD);
	op_hex		(x,	1);
	set_cmt	(0X43EA7EF6,	"Size",	0);
	create_insn	(x=0X43EA7F03);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7F62);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7F77);
	op_hex		(x,	1);
	create_insn	(x=0X43EA7F9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA7FA1);
	op_hex		(x,	1);
	set_cmt	(0X43EA7FE2,	"Size",	0);
	create_insn	(x=0X43EA7FEC);
	op_hex		(x,	1);
	create_insn	(x=0X43EA8279);
	op_hex		(x,	1);
	create_insn	(x=0X43EA828E);
	op_hex		(x,	1);
	create_insn	(x=0X43EA82B1);
	op_hex		(x,	1);
	set_cmt	(0X43EA82CA,	"Size",	0);
	create_insn	(x=0X43EA82D7);
	op_hex		(x,	1);
	create_insn	(x=0X43EA83A5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA83BA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA83DD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA83E2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA83E9);
	op_hex		(x,	1);
	set_cmt	(0X43EA842A,	"Size",	0);
	create_insn	(x=0X43EA8434);
	op_hex		(x,	1);
	create_insn	(x=0X43EA8815);
	op_hex		(x,	1);
	create_insn	(x=0X43EA882A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA884D);
	op_hex		(x,	1);
	set_cmt	(0X43EA8866,	"Size",	0);
	create_insn	(x=0X43EA8873);
	op_hex		(x,	1);
	create_insn	(x=0X43EA8975);
	op_hex		(x,	1);
	create_insn	(x=0X43EA898A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA89AD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA89B2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA89B9);
	op_hex		(x,	1);
	set_cmt	(0X43EA89FA,	"Size",	0);
	create_insn	(x=0X43EA8A04);
	op_hex		(x,	1);
	create_insn	(x=0X43EA8C55);
	op_hex		(x,	1);
	create_insn	(x=0X43EA8C6A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA8C8D);
	op_hex		(x,	1);
	set_cmt	(0X43EA8CA6,	"Size",	0);
	create_insn	(x=0X43EA8CB3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA8D79);
	op_hex		(x,	1);
	create_insn	(x=0X43EA8D8E);
	op_hex		(x,	1);
	create_insn	(x=0X43EA8DB5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA8DBA);
	op_hex		(x,	1);
	set_cmt	(0X43EA8DFB,	"Size",	0);
	create_insn	(x=0X43EA8E05);
	op_hex		(x,	1);
	create_insn	(x=0X43EA9085);
	op_hex		(x,	1);
	create_insn	(x=0X43EA909A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA90BD);
	op_hex		(x,	1);
	set_cmt	(0X43EA90D6,	"Size",	0);
	create_insn	(x=0X43EA90E3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA91E5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA91FA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA9221);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA9226);
	op_hex		(x,	1);
	create_insn	(x=0X43EA926C);
	op_hex		(x,	1);
	create_insn	(x=0X43EA9274);
	op_hex		(x,	1);
	set_cmt	(0X43EA9277,	"Size",	0);
	create_insn	(x=0X43EA9286);
	op_hex		(x,	1);
	create_insn	(x=0X43EA9318);
	op_hex		(x,	1);
	create_insn	(x=0X43EA932D);
	op_hex		(x,	1);
	create_insn	(x=0X43EA9350);
	op_hex		(x,	1);
	create_insn	(x=0X43EA936C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EA9386,	"Size",	0);
	create_insn	(x=0X43EA9390);
	op_hex		(x,	1);
	create_insn	(x=0X43EA9615);
	op_hex		(x,	1);
	create_insn	(x=0X43EA962A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA964D);
	op_hex		(x,	1);
	set_cmt	(0X43EA9666,	"Size",	0);
	create_insn	(x=0X43EA9673);
	op_hex		(x,	1);
	create_insn	(x=0X43EA96D2);
	op_hex		(x,	1);
	create_insn	(x=0X43EA96E7);
	op_hex		(x,	1);
	create_insn	(x=0X43EA97B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA97CA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA9879);
	op_hex		(x,	1);
	create_insn	(x=0X43EA988E);
	op_hex		(x,	1);
	create_insn	(x=0X43EA9985);
	op_hex		(x,	1);
	create_insn	(x=0X43EA999A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA99BD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA99C2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA99CD);
	op_hex		(x,	1);
	create_insn	(x=0X43EA99F3);
	op_hex		(x,	1);
	set_cmt	(0X43EA9A5E,	"Size",	0);
	create_insn	(x=0X43EA9A68);
	op_hex		(x,	1);
	create_insn	(x=0X43EA9D55);
	op_hex		(x,	1);
	create_insn	(x=0X43EA9D6A);
	op_hex		(x,	1);
	create_insn	(x=0X43EA9D8D);
	op_hex		(x,	1);
	set_cmt	(0X43EA9DA6,	"Size",	0);
	create_insn	(x=0X43EA9DB3);
	op_hex		(x,	1);
	create_insn	(x=0X43EA9ED5);
	op_hex		(x,	1);
	create_insn	(x=0X43EA9EEA);
	op_hex		(x,	1);
	create_insn	(x=0X43EA9F0F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EA9F14);
	op_hex		(x,	1);
	set_cmt	(0X43EA9F55,	"Size",	0);
	create_insn	(x=0X43EA9F5F);
	op_hex		(x,	1);
	set_cmt	(0X43EA9F65,	"symbol",	0);
	set_cmt	(0X43EA9F6C,	"symbol",	0);
	set_cmt	(0X43EA9F79,	"symbol",	0);
	set_cmt	(0X43EA9F86,	"symbol",	0);
	set_cmt	(0X43EA9F93,	"symbol",	0);
	set_cmt	(0X43EA9FA0,	"symbol",	0);
	set_cmt	(0X43EA9FAD,	"symbol",	0);
	set_cmt	(0X43EA9FBA,	"symbol",	0);
	set_cmt	(0X43EA9FC7,	"symbol",	0);
	set_cmt	(0X43EA9FD4,	"symbol",	0);
	set_cmt	(0X43EA9FE1,	"symbol",	0);
	set_cmt	(0X43EA9FEE,	"symbol",	0);
	set_cmt	(0X43EA9FFB,	"symbol",	0);
	set_cmt	(0X43EAA008,	"symbol",	0);
	set_cmt	(0X43EAA015,	"symbol",	0);
	set_cmt	(0X43EAA022,	"symbol",	0);
	set_cmt	(0X43EAA02F,	"symbol",	0);
	set_cmt	(0X43EAA03C,	"symbol",	0);
	set_cmt	(0X43EAA049,	"symbol",	0);
	set_cmt	(0X43EAA056,	"symbol",	0);
	set_cmt	(0X43EAA063,	"symbol",	0);
	set_cmt	(0X43EAA070,	"symbol",	0);
	set_cmt	(0X43EAA07D,	"symbol",	0);
	set_cmt	(0X43EAA08A,	"symbol",	0);
	set_cmt	(0X43EAA097,	"symbol",	0);
	set_cmt	(0X43EAA0A4,	"symbol",	0);
	set_cmt	(0X43EAA0B1,	"symbol",	0);
	set_cmt	(0X43EAA0BE,	"symbol",	0);
	set_cmt	(0X43EAA0CB,	"symbol",	0);
	set_cmt	(0X43EAA0D8,	"symbol",	0);
	set_cmt	(0X43EAA0E5,	"symbol",	0);
	set_cmt	(0X43EAA0F2,	"symbol",	0);
	set_cmt	(0X43EAA0FF,	"symbol",	0);
	set_cmt	(0X43EAA10C,	"symbol",	0);
	set_cmt	(0X43EAA119,	"symbol",	0);
	set_cmt	(0X43EAA126,	"symbol",	0);
	set_cmt	(0X43EAA133,	"symbol",	0);
	set_cmt	(0X43EAA140,	"symbol",	0);
	set_cmt	(0X43EAA14D,	"symbol",	0);
	set_cmt	(0X43EAA15A,	"symbol",	0);
	set_cmt	(0X43EAA167,	"symbol",	0);
	set_cmt	(0X43EAA174,	"symbol",	0);
	set_cmt	(0X43EAA181,	"symbol",	0);
	set_cmt	(0X43EAA18E,	"symbol",	0);
	set_cmt	(0X43EAA19B,	"symbol",	0);
	set_cmt	(0X43EAA1A8,	"symbol",	0);
	set_cmt	(0X43EAA1B5,	"symbol",	0);
	set_cmt	(0X43EAA1C2,	"symbol",	0);
	set_cmt	(0X43EAA1CF,	"symbol",	0);
	set_cmt	(0X43EAA1DC,	"symbol",	0);
	set_cmt	(0X43EAA1E9,	"symbol",	0);
	set_cmt	(0X43EAA1F6,	"symbol",	0);
	set_cmt	(0X43EAA203,	"symbol",	0);
	set_cmt	(0X43EAA210,	"symbol",	0);
	set_cmt	(0X43EAA21D,	"symbol",	0);
	set_cmt	(0X43EAA22A,	"symbol",	0);
	create_insn	(x=0X43EAA275);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA28A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA2AD);
	op_hex		(x,	1);
	set_cmt	(0X43EAA2C6,	"Size",	0);
	create_insn	(x=0X43EAA2D3);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA3E7);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA3FC);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA425);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAA42A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAA42F);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA476);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAA485);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA48D);
	op_hex		(x,	1);
	set_cmt	(0X43EAA490,	"Size",	0);
	create_insn	(x=0X43EAA49F);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA535);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA54A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA56D);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA589);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EAA5A3,	"Size",	0);
	create_insn	(x=0X43EAA5AD);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA7F9);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA80E);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA831);
	op_hex		(x,	1);
	set_cmt	(0X43EAA84A,	"Size",	0);
	create_insn	(x=0X43EAA857);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA8E9);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA8FE);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA9C7);
	op_hex		(x,	1);
	create_insn	(x=0X43EAA9DC);
	op_hex		(x,	1);
	create_insn	(x=0X43EAAA95);
	op_hex		(x,	1);
	create_insn	(x=0X43EAAAAA);
	op_hex		(x,	1);
	create_insn	(x=0X43EAAB97);
	op_hex		(x,	1);
	create_insn	(x=0X43EAABAC);
	op_hex		(x,	1);
	create_insn	(x=0X43EAABCF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAABD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAABDF);
	op_hex		(x,	1);
	create_insn	(x=0X43EAAC05);
	op_hex		(x,	1);
	set_cmt	(0X43EAAC70,	"Size",	0);
	create_insn	(x=0X43EAAC7A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAAE15);
	op_hex		(x,	1);
	create_insn	(x=0X43EAAE2A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAAE4D);
	op_hex		(x,	1);
	set_cmt	(0X43EAAE66,	"Size",	0);
	create_insn	(x=0X43EAAE73);
	op_hex		(x,	1);
	create_insn	(x=0X43EAAEE8);
	op_hex		(x,	1);
	create_insn	(x=0X43EAAEFD);
	op_hex		(x,	1);
	create_insn	(x=0X43EAAFF5);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB00A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB0B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB0CA);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB165);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB17A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB236);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB24B);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB305);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB31A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB3B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB3CA);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB452);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB467);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB555);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB56A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB58D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAB592);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAB59B);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB5C1);
	op_hex		(x,	1);
	set_cmt	(0X43EAB663,	"Size",	0);
	create_insn	(x=0X43EAB66D);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB915);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB92A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB94D);
	op_hex		(x,	1);
	set_cmt	(0X43EAB966,	"Size",	0);
	create_insn	(x=0X43EAB973);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB9D9);
	op_hex		(x,	1);
	create_insn	(x=0X43EAB9EE);
	op_hex		(x,	1);
	create_insn	(x=0X43EABAE5);
	op_hex		(x,	1);
	create_insn	(x=0X43EABAFA);
	op_hex		(x,	1);
	create_insn	(x=0X43EABBA5);
	op_hex		(x,	1);
	create_insn	(x=0X43EABBBA);
	op_hex		(x,	1);
	create_insn	(x=0X43EABC42);
	op_hex		(x,	1);
	create_insn	(x=0X43EABC57);
	op_hex		(x,	1);
	create_insn	(x=0X43EABD15);
	op_hex		(x,	1);
	create_insn	(x=0X43EABD2A);
	op_hex		(x,	1);
	create_insn	(x=0X43EABDD9);
	op_hex		(x,	1);
	create_insn	(x=0X43EABDEE);
	op_hex		(x,	1);
	create_insn	(x=0X43EABE72);
	op_hex		(x,	1);
	create_insn	(x=0X43EABE87);
	op_hex		(x,	1);
	create_insn	(x=0X43EABF12);
	op_hex		(x,	1);
	create_insn	(x=0X43EABF27);
	op_hex		(x,	1);
	create_insn	(x=0X43EAC035);
	op_hex		(x,	1);
	create_insn	(x=0X43EAC04A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAC06D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAC072);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAC07B);
	op_hex		(x,	1);
	create_insn	(x=0X43EAC0A1);
	op_hex		(x,	1);
	set_cmt	(0X43EAC143,	"Size",	0);
	create_insn	(x=0X43EAC14D);
	op_hex		(x,	1);
	create_insn	(x=0X43EAC476);
	op_hex		(x,	1);
	create_insn	(x=0X43EAC48B);
	op_hex		(x,	1);
	create_insn	(x=0X43EAC4AE);
	op_hex		(x,	1);
	set_cmt	(0X43EAC4C7,	"Size",	0);
	create_insn	(x=0X43EAC4D4);
	op_hex		(x,	1);
	create_insn	(x=0X43EAC5F5);
	op_hex		(x,	1);
	create_insn	(x=0X43EAC60A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAC62D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAC632);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAC639);
	op_hex		(x,	1);
	set_cmt	(0X43EAC67A,	"Size",	0);
	create_insn	(x=0X43EAC684);
	op_hex		(x,	1);
	create_insn	(x=0X43EAC955);
	op_hex		(x,	1);
	create_insn	(x=0X43EAC96A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAC98D);
	op_hex		(x,	1);
	set_cmt	(0X43EAC9A6,	"Size",	0);
	create_insn	(x=0X43EAC9B3);
	op_hex		(x,	1);
	create_insn	(x=0X43EACAF5);
	op_hex		(x,	1);
	create_insn	(x=0X43EACB0A);
	op_hex		(x,	1);
	create_insn	(x=0X43EACB2D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EACB32);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EACB39);
	op_hex		(x,	1);
	create_insn	(x=0X43EACB64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EACB86,	"Size",	0);
	create_insn	(x=0X43EACB90);
	op_hex		(x,	1);
	create_insn	(x=0X43EACBF6);
	op_hex		(x,	1);
	create_insn	(x=0X43EACC0B);
	op_hex		(x,	1);
	create_insn	(x=0X43EACD45);
	op_hex		(x,	1);
	create_insn	(x=0X43EACD5A);
	op_hex		(x,	1);
	create_insn	(x=0X43EACD7D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EACD82);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EACD89);
	op_hex		(x,	1);
	create_insn	(x=0X43EACDAB);
	op_hex		(x,	1);
	create_insn	(x=0X43EACDD3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EACDF5,	"Size",	0);
	create_insn	(x=0X43EACDFF);
	op_hex		(x,	1);
	create_insn	(x=0X43EACE65);
	op_hex		(x,	1);
	create_insn	(x=0X43EACE7A);
	op_hex		(x,	1);
	create_insn	(x=0X43EACFB5);
	op_hex		(x,	1);
	create_insn	(x=0X43EACFCA);
	op_hex		(x,	1);
	create_insn	(x=0X43EACFED);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EACFF2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EACFF9);
	op_hex		(x,	1);
	create_insn	(x=0X43EAD01B);
	op_hex		(x,	1);
	create_insn	(x=0X43EAD043);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EAD065,	"Size",	0);
	create_insn	(x=0X43EAD06F);
	op_hex		(x,	1);
	create_insn	(x=0X43EAD305);
	op_hex		(x,	1);
	create_insn	(x=0X43EAD31A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAD33D);
	op_hex		(x,	1);
	set_cmt	(0X43EAD356,	"Size",	0);
	create_insn	(x=0X43EAD363);
	op_hex		(x,	1);
	create_insn	(x=0X43EAD475);
	op_hex		(x,	1);
	create_insn	(x=0X43EAD48A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAD4B1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAD4B6);
	op_hex		(x,	1);
	set_cmt	(0X43EAD4F7,	"Size",	0);
	create_insn	(x=0X43EAD501);
	op_hex		(x,	1);
	create_insn	(x=0X43EAD645);
	op_hex		(x,	1);
	create_insn	(x=0X43EAD65A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAD67F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAD684);
	op_hex		(x,	1);
	create_insn	(x=0X43EAD6AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EAD6C5,	"Size",	0);
	create_insn	(x=0X43EAD6CF);
	op_hex		(x,	1);
	create_insn	(x=0X43EAD965);
	op_hex		(x,	1);
	create_insn	(x=0X43EAD97A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAD99D);
	op_hex		(x,	1);
	set_cmt	(0X43EAD9B6,	"Size",	0);
	create_insn	(x=0X43EAD9C3);
	op_hex		(x,	1);
	create_insn	(x=0X43EADA29);
	op_hex		(x,	1);
	create_insn	(x=0X43EADA3E);
	op_hex		(x,	1);
	create_insn	(x=0X43EADB35);
	op_hex		(x,	1);
	create_insn	(x=0X43EADB4A);
	op_hex		(x,	1);
	create_insn	(x=0X43EADBF5);
	op_hex		(x,	1);
	create_insn	(x=0X43EADC0A);
	op_hex		(x,	1);
	create_insn	(x=0X43EADC92);
	op_hex		(x,	1);
	create_insn	(x=0X43EADCA7);
	op_hex		(x,	1);
	create_insn	(x=0X43EADD65);
	op_hex		(x,	1);
	create_insn	(x=0X43EADD7A);
	op_hex		(x,	1);
	create_insn	(x=0X43EADE29);
	op_hex		(x,	1);
	create_insn	(x=0X43EADE3E);
	op_hex		(x,	1);
	create_insn	(x=0X43EADEC2);
	op_hex		(x,	1);
	create_insn	(x=0X43EADED7);
	op_hex		(x,	1);
	create_insn	(x=0X43EADF62);
	op_hex		(x,	1);
	create_insn	(x=0X43EADF77);
	op_hex		(x,	1);
	create_insn	(x=0X43EAE0C5);
	op_hex		(x,	1);
	create_insn	(x=0X43EAE0DA);
	op_hex		(x,	1);
	create_insn	(x=0X43EAE0FD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAE102);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAE10B);
	op_hex		(x,	1);
	create_insn	(x=0X43EAE131);
	op_hex		(x,	1);
	create_insn	(x=0X43EAE165);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EAE1DF,	"Size",	0);
	create_insn	(x=0X43EAE1E9);
	op_hex		(x,	1);
	create_insn	(x=0X43EAE445);
	op_hex		(x,	1);
	create_insn	(x=0X43EAE45A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAE47D);
	op_hex		(x,	1);
	set_cmt	(0X43EAE496,	"Size",	0);
	create_insn	(x=0X43EAE4A3);
	op_hex		(x,	1);
	create_insn	(x=0X43EAE569);
	op_hex		(x,	1);
	create_insn	(x=0X43EAE57E);
	op_hex		(x,	1);
	create_insn	(x=0X43EAE5A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAE5AA);
	op_hex		(x,	1);
	set_cmt	(0X43EAE5EB,	"Size",	0);
	create_insn	(x=0X43EAE5F5);
	op_hex		(x,	1);
	create_insn	(x=0X43EAE6F5);
	op_hex		(x,	1);
	create_insn	(x=0X43EAE70A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAE72F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAE734);
	op_hex		(x,	1);
	create_insn	(x=0X43EAE75E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EAE775,	"Size",	0);
	create_insn	(x=0X43EAE77F);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEA55);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEA6A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEA8D);
	op_hex		(x,	1);
	set_cmt	(0X43EAEAA6,	"Size",	0);
	create_insn	(x=0X43EAEAB3);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEB79);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEB8E);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEBB1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAEBB6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAEBBD);
	op_hex		(x,	1);
	set_cmt	(0X43EAEBFE,	"Size",	0);
	create_insn	(x=0X43EAEC08);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEC72);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEC87);
	op_hex		(x,	1);
	create_insn	(x=0X43EAED45);
	op_hex		(x,	1);
	create_insn	(x=0X43EAED5A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAED7D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAED82);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAED89);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEDAB);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEDD3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAEDF5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EAEDFF,	"Size",	0);
	create_insn	(x=0X43EAEE06);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEE15);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EAEE24);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEE2C);
	op_hex		(x,	1);
	set_cmt	(0X43EAEE2F,	"Size",	0);
	create_insn	(x=0X43EAEE3E);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEED5);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEEEA);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEF0D);
	op_hex		(x,	1);
	create_insn	(x=0X43EAEF29);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EAEF43,	"Size",	0);
	create_insn	(x=0X43EAEF4D);
	op_hex		(x,	1);
	create_insn	(x=0X43EAF1E5);
	op_hex		(x,	1);
	create_insn	(x=0X43EAF1FA);
	op_hex		(x,	1);
	create_insn	(x=0X43EAF21D);
	op_hex		(x,	1);
	set_cmt	(0X43EAF236,	"Size",	0);
	create_insn	(x=0X43EAF243);
	op_hex		(x,	1);
	create_insn	(x=0X43EAF2C8);
	op_hex		(x,	1);
	create_insn	(x=0X43EAF2DD);
	op_hex		(x,	1);
	create_insn	(x=0X43EAF455);
	op_hex		(x,	1);
	create_insn	(x=0X43EAF46A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAF48D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAF492);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAF499);
	op_hex		(x,	1);
	create_insn	(x=0X43EAF4BE);
	op_hex		(x,	1);
	set_cmt	(0X43EAF508,	"Size",	0);
	create_insn	(x=0X43EAF512);
	op_hex		(x,	1);
	create_insn	(x=0X43EAF935);
	op_hex		(x,	1);
	create_insn	(x=0X43EAF94A);
	op_hex		(x,	1);
	create_insn	(x=0X43EAF96D);
	op_hex		(x,	1);
	set_cmt	(0X43EAF986,	"Size",	0);
	create_insn	(x=0X43EAF993);
	op_hex		(x,	1);
	create_insn	(x=0X43EAFA18);
	op_hex		(x,	1);
	create_insn	(x=0X43EAFA2D);
	op_hex		(x,	1);
	create_insn	(x=0X43EAFBB5);
	op_hex		(x,	1);
	create_insn	(x=0X43EAFBCA);
	op_hex		(x,	1);
	create_insn	(x=0X43EAFBED);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAFBF2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EAFBF9);
	op_hex		(x,	1);
	create_insn	(x=0X43EAFC1E);
	op_hex		(x,	1);
	set_cmt	(0X43EAFC68,	"Size",	0);
	create_insn	(x=0X43EAFC72);
	op_hex		(x,	1);
	create_insn	(x=0X43EAFFB5);
	op_hex		(x,	1);
	create_insn	(x=0X43EAFFCA);
	op_hex		(x,	1);
	create_insn	(x=0X43EAFFED);
	op_hex		(x,	1);
	set_cmt	(0X43EB0006,	"Size",	0);
	create_insn	(x=0X43EB0013);
	op_hex		(x,	1);
	create_insn	(x=0X43EB0168);
	op_hex		(x,	1);
	create_insn	(x=0X43EB017D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB01A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB01A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB01AC);
	op_hex		(x,	1);
	set_cmt	(0X43EB01ED,	"Size",	0);
	create_insn	(x=0X43EB01F7);
	op_hex		(x,	1);
	create_insn	(x=0X43EB0285);
	op_hex		(x,	1);
	create_insn	(x=0X43EB029A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB0358);
	op_hex		(x,	1);
	create_insn	(x=0X43EB036D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB0390);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB0395);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB039C);
	op_hex		(x,	1);
	create_insn	(x=0X43EB03BE);
	op_hex		(x,	1);
	create_insn	(x=0X43EB03E6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EB0408,	"Size",	0);
	create_insn	(x=0X43EB0412);
	op_hex		(x,	1);
	create_insn	(x=0X43EB0765);
	op_hex		(x,	1);
	create_insn	(x=0X43EB077A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB079D);
	op_hex		(x,	1);
	set_cmt	(0X43EB07B6,	"Size",	0);
	create_insn	(x=0X43EB07C3);
	op_hex		(x,	1);
	create_insn	(x=0X43EB0905);
	op_hex		(x,	1);
	create_insn	(x=0X43EB091A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB093D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB0942);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB0949);
	op_hex		(x,	1);
	set_cmt	(0X43EB098A,	"Size",	0);
	create_insn	(x=0X43EB0994);
	op_hex		(x,	1);
	create_insn	(x=0X43EB09F2);
	op_hex		(x,	1);
	create_insn	(x=0X43EB0A07);
	op_hex		(x,	1);
	create_insn	(x=0X43EB0A2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB0A31);
	op_hex		(x,	1);
	create_insn	(x=0X43EB0A5B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EB0A72,	"Size",	0);
	create_insn	(x=0X43EB0A7C);
	op_hex		(x,	1);
	create_insn	(x=0X43EB0E68);
	op_hex		(x,	1);
	create_insn	(x=0X43EB0E7D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB0EA0);
	op_hex		(x,	1);
	set_cmt	(0X43EB0EB9,	"Size",	0);
	create_insn	(x=0X43EB0EC6);
	op_hex		(x,	1);
	create_insn	(x=0X43EB0F55);
	op_hex		(x,	1);
	create_insn	(x=0X43EB0F6A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1028);
	op_hex		(x,	1);
	create_insn	(x=0X43EB103D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1060);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB1065);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB106C);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1091);
	op_hex		(x,	1);
	create_insn	(x=0X43EB10BA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB10F4);
	op_hex		(x,	1);
	set_cmt	(0X43EB10F9,	"Size",	0);
	create_insn	(x=0X43EB1108);
	op_hex		(x,	1);
	create_insn	(x=0X43EB11B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB11CA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB11ED);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1209);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EB1223,	"Size",	0);
	create_insn	(x=0X43EB122D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1495);
	op_hex		(x,	1);
	create_insn	(x=0X43EB14AA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB14CD);
	op_hex		(x,	1);
	set_cmt	(0X43EB14E6,	"Size",	0);
	create_insn	(x=0X43EB14F3);
	op_hex		(x,	1);
	create_insn	(x=0X43EB15B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB15CA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB15ED);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB15F2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB15F9);
	op_hex		(x,	1);
	set_cmt	(0X43EB163A,	"Size",	0);
	create_insn	(x=0X43EB1644);
	op_hex		(x,	1);
	create_insn	(x=0X43EB16B2);
	op_hex		(x,	1);
	create_insn	(x=0X43EB16C7);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1785);
	op_hex		(x,	1);
	create_insn	(x=0X43EB179A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB17BD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB17C2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB17C9);
	op_hex		(x,	1);
	create_insn	(x=0X43EB17EB);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1813);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EB1835,	"Size",	0);
	create_insn	(x=0X43EB183F);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1D45);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1D5A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1D7D);
	op_hex		(x,	1);
	set_cmt	(0X43EB1D96,	"Size",	0);
	create_insn	(x=0X43EB1DA3);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1EA5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1EBA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1EDD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB1EE2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB1EE9);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1F14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EB1F36,	"Size",	0);
	create_insn	(x=0X43EB1F40);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1FA6);
	op_hex		(x,	1);
	create_insn	(x=0X43EB1FBB);
	op_hex		(x,	1);
	create_insn	(x=0X43EB2079);
	op_hex		(x,	1);
	create_insn	(x=0X43EB208E);
	op_hex		(x,	1);
	create_insn	(x=0X43EB20B1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB20B6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB20BD);
	op_hex		(x,	1);
	create_insn	(x=0X43EB20DF);
	op_hex		(x,	1);
	create_insn	(x=0X43EB2107);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EB2129,	"Size",	0);
	create_insn	(x=0X43EB2133);
	op_hex		(x,	1);
	create_insn	(x=0X43EB24C5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB24DA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB24FD);
	op_hex		(x,	1);
	set_cmt	(0X43EB2516,	"Size",	0);
	create_insn	(x=0X43EB2523);
	op_hex		(x,	1);
	create_insn	(x=0X43EB25E9);
	op_hex		(x,	1);
	create_insn	(x=0X43EB25FE);
	op_hex		(x,	1);
	create_insn	(x=0X43EB2621);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB2626);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB262D);
	op_hex		(x,	1);
	set_cmt	(0X43EB266E,	"Size",	0);
	create_insn	(x=0X43EB2678);
	op_hex		(x,	1);
	create_insn	(x=0X43EB2987);
	op_hex		(x,	1);
	create_insn	(x=0X43EB299C);
	op_hex		(x,	1);
	create_insn	(x=0X43EB29BF);
	op_hex		(x,	1);
	set_cmt	(0X43EB29D8,	"Size",	0);
	create_insn	(x=0X43EB29E5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB2A52);
	op_hex		(x,	1);
	create_insn	(x=0X43EB2A67);
	op_hex		(x,	1);
	create_insn	(x=0X43EB2B25);
	op_hex		(x,	1);
	create_insn	(x=0X43EB2B3A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB2B5D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB2B62);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB2B69);
	op_hex		(x,	1);
	create_insn	(x=0X43EB2B8B);
	op_hex		(x,	1);
	create_insn	(x=0X43EB2BB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EB2BE1,	"Size",	0);
	create_insn	(x=0X43EB2BEB);
	op_hex		(x,	1);
	create_insn	(x=0X43EB2FA5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB2FBA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB2FDD);
	op_hex		(x,	1);
	set_cmt	(0X43EB2FF6,	"Size",	0);
	create_insn	(x=0X43EB3003);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3115);
	op_hex		(x,	1);
	create_insn	(x=0X43EB312A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB314D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB3152);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB3159);
	op_hex		(x,	1);
	set_cmt	(0X43EB319A,	"Size",	0);
	create_insn	(x=0X43EB31A4);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3635);
	op_hex		(x,	1);
	create_insn	(x=0X43EB364A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB366D);
	op_hex		(x,	1);
	set_cmt	(0X43EB3686,	"Size",	0);
	create_insn	(x=0X43EB3693);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3795);
	op_hex		(x,	1);
	create_insn	(x=0X43EB37AA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB37CD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB37D2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB37D9);
	op_hex		(x,	1);
	set_cmt	(0X43EB381A,	"Size",	0);
	create_insn	(x=0X43EB3824);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3A97);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3AAC);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3ACF);
	op_hex		(x,	1);
	set_cmt	(0X43EB3AE8,	"Size",	0);
	create_insn	(x=0X43EB3AF5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3BE5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3BFA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3C1D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB3C22);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB3C29);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3C54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB3C7B);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3C86);
	op_hex		(x,	1);
	set_cmt	(0X43EB3C8B,	"Size",	0);
	create_insn	(x=0X43EB3C9A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3D39);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3D4E);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3D71);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3D8D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EB3DA7,	"Size",	0);
	create_insn	(x=0X43EB3DB1);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3FC9);
	op_hex		(x,	1);
	create_insn	(x=0X43EB3FDE);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4001);
	op_hex		(x,	1);
	set_cmt	(0X43EB401A,	"Size",	0);
	create_insn	(x=0X43EB4027);
	op_hex		(x,	1);
	create_insn	(x=0X43EB40F5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB410A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB412F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB4134);
	op_hex		(x,	1);
	set_cmt	(0X43EB4175,	"Size",	0);
	create_insn	(x=0X43EB417F);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4395);
	op_hex		(x,	1);
	create_insn	(x=0X43EB43AA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB43CD);
	op_hex		(x,	1);
	set_cmt	(0X43EB43E6,	"Size",	0);
	create_insn	(x=0X43EB43F3);
	op_hex		(x,	1);
	create_insn	(x=0X43EB44B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB44CA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB44EF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB44F4);
	op_hex		(x,	1);
	set_cmt	(0X43EB4535,	"Size",	0);
	create_insn	(x=0X43EB453F);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4935);
	op_hex		(x,	1);
	create_insn	(x=0X43EB494A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB496D);
	op_hex		(x,	1);
	set_cmt	(0X43EB4986,	"Size",	0);
	create_insn	(x=0X43EB4993);
	op_hex		(x,	1);
	set_cmt	(0X43EB4999,	"symbol",	0);
	set_cmt	(0X43EB49A0,	"symbol",	0);
	set_cmt	(0X43EB49AD,	"symbol",	0);
	set_cmt	(0X43EB49BA,	"symbol",	0);
	set_cmt	(0X43EB49C7,	"symbol",	0);
	set_cmt	(0X43EB49D4,	"symbol",	0);
	set_cmt	(0X43EB49E1,	"symbol",	0);
	set_cmt	(0X43EB49EE,	"symbol",	0);
	set_cmt	(0X43EB49FB,	"symbol",	0);
	set_cmt	(0X43EB4A08,	"symbol",	0);
	set_cmt	(0X43EB4A15,	"symbol",	0);
	set_cmt	(0X43EB4A22,	"symbol",	0);
	set_cmt	(0X43EB4A2F,	"symbol",	0);
	set_cmt	(0X43EB4A3C,	"symbol",	0);
	set_cmt	(0X43EB4A49,	"symbol",	0);
	set_cmt	(0X43EB4A56,	"symbol",	0);
	set_cmt	(0X43EB4A63,	"symbol",	0);
	set_cmt	(0X43EB4A70,	"symbol",	0);
	set_cmt	(0X43EB4A7D,	"symbol",	0);
	set_cmt	(0X43EB4A8A,	"symbol",	0);
	set_cmt	(0X43EB4A9D,	"symbol",	0);
	set_cmt	(0X43EB4AA4,	"symbol",	0);
	set_cmt	(0X43EB4AB1,	"symbol",	0);
	set_cmt	(0X43EB4ABE,	"symbol",	0);
	create_insn	(x=0X43EB4B05);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4B1A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4B41);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB4B46);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4B8D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43EB4BA2,	0XE);
	create_insn	(0X43EB4BB0);
	set_name	(0X43EB4BB0,	"OneTap::GUI::Render::Tabs::LegitBot");
	create_insn	(x=0X43EB4BB3);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4BB6);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4BB9);
	op_hex		(x,	1);
	set_cmt	(0X43EB4BBC,	"size",	0);
	create_insn	(x=0X43EB4BC0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EB4BD7);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4BDB);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4BDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EB4BEF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB4BF9);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4C0B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EB4C18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EB4C2E,	"Size",	0);
	create_insn	(x=0X43EB4C38);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4C8D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4CA3);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4CEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EB4CF5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EB4D08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EB4D29);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4D31);
	op_hex		(x,	1);
	set_cmt	(0X43EB4D34,	"Size",	0);
	create_insn	(x=0X43EB4D50);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4D8D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4DA3);
	op_hex		(x,	1);
	set_cmt	(0X43EB4DE5,	"Size",	0);
	create_insn	(x=0X43EB4DEF);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4E3D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4E53);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4E7A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB4E7F);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4EAB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EB4EE5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EB4F07);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4F0F);
	op_hex		(x,	1);
	set_cmt	(0X43EB4F12,	"Size",	0);
	create_insn	(x=0X43EB4F2E);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4F7D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4F93);
	op_hex		(x,	1);
	create_insn	(x=0X43EB4FDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EB4FE7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EB4FEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EB5003);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EB502D,	"Size",	0);
	create_insn	(x=0X43EB5044);
	op_hex		(x,	1);
	create_insn	(x=0X43EB50AD);
	op_hex		(x,	1);
	create_insn	(x=0X43EB50C3);
	op_hex		(x,	1);
	set_cmt	(0X43EB5105,	"Size",	0);
	create_insn	(x=0X43EB510F);
	op_hex		(x,	1);
	create_insn	(x=0X43EB516D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5183);
	op_hex		(x,	1);
	create_insn	(x=0X43EB51B1);
	op_hex		(x,	1);
	create_insn	(x=0X43EB51B8);
	op_hex		(x,	1);
	create_insn	(x=0X43EB51C2);
	op_hex		(x,	1);
	create_insn	(x=0X43EB51CC);
	op_hex		(x,	1);
	create_insn	(x=0X43EB51FA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5210);
	op_hex		(x,	1);
	create_insn	(x=0X43EB526A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5280);
	op_hex		(x,	1);
	create_insn	(x=0X43EB52FD);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5313);
	op_hex		(x,	1);
	create_insn	(x=0X43EB537D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5393);
	op_hex		(x,	1);
	create_insn	(x=0X43EB53FD);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5413);
	op_hex		(x,	1);
	create_insn	(x=0X43EB547D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5493);
	op_hex		(x,	1);
	create_insn	(x=0X43EB54EA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5500);
	op_hex		(x,	1);
	create_insn	(x=0X43EB556D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5583);
	op_hex		(x,	1);
	create_insn	(x=0X43EB55AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB55B9);
	op_hex		(x,	1);
	create_insn	(x=0X43EB55DF);
	op_hex		(x,	1);
	create_insn	(x=0X43EB56AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EB56CD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EB56D7,	"Size",	0);
	create_insn	(x=0X43EB56E8);
	op_hex		(x,	1);
	create_insn	(x=0X43EB573D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5753);
	op_hex		(x,	1);
	set_cmt	(0X43EB5795,	"Size",	0);
	create_insn	(x=0X43EB579F);
	op_hex		(x,	1);
	create_insn	(x=0X43EB57ED);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5803);
	op_hex		(x,	1);
	create_insn	(x=0X43EB587D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5893);
	op_hex		(x,	1);
	create_insn	(x=0X43EB58C1);
	op_hex		(x,	1);
	create_insn	(x=0X43EB58C8);
	op_hex		(x,	1);
	create_insn	(x=0X43EB58D2);
	op_hex		(x,	1);
	create_insn	(x=0X43EB58DC);
	op_hex		(x,	1);
	create_insn	(x=0X43EB590A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5920);
	op_hex		(x,	1);
	create_insn	(x=0X43EB598D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB59A3);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5A1D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5A33);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5A9D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5AB3);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5B1D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5B33);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5B9D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5BB3);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5C0A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5C20);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5C9D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5CB3);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5CDE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB5CEB);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5D11);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5DE5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB5DF4);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5DFC);
	op_hex		(x,	1);
	set_cmt	(0X43EB5DFF,	"Size",	0);
	create_insn	(x=0X43EB5E0E);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5EA5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5EBA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5EDD);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5EF9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EB5F13,	"Size",	0);
	create_insn	(x=0X43EB5F1D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5FE5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB5FFA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB601D);
	op_hex		(x,	1);
	set_cmt	(0X43EB6036,	"Size",	0);
	create_insn	(x=0X43EB6043);
	op_hex		(x,	1);
	create_insn	(x=0X43EB60A2);
	op_hex		(x,	1);
	create_insn	(x=0X43EB60B7);
	op_hex		(x,	1);
	create_insn	(x=0X43EB60DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB60E1);
	op_hex		(x,	1);
	set_cmt	(0X43EB6122,	"Size",	0);
	create_insn	(x=0X43EB612C);
	op_hex		(x,	1);
	create_insn	(x=0X43EB63C6);
	op_hex		(x,	1);
	create_insn	(x=0X43EB63DB);
	op_hex		(x,	1);
	create_insn	(x=0X43EB63FE);
	op_hex		(x,	1);
	set_cmt	(0X43EB6417,	"Size",	0);
	create_insn	(x=0X43EB6424);
	op_hex		(x,	1);
	create_insn	(x=0X43EB64F7);
	op_hex		(x,	1);
	create_insn	(x=0X43EB650C);
	op_hex		(x,	1);
	create_insn	(x=0X43EB652F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB6534);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB653B);
	op_hex		(x,	1);
	set_cmt	(0X43EB657C,	"Size",	0);
	create_insn	(x=0X43EB6586);
	op_hex		(x,	1);
	create_insn	(x=0X43EB66E8);
	op_hex		(x,	1);
	create_insn	(x=0X43EB66FD);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6720);
	op_hex		(x,	1);
	set_cmt	(0X43EB6739,	"Size",	0);
	create_insn	(x=0X43EB6746);
	op_hex		(x,	1);
	create_insn	(x=0X43EB67F5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB680A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6831);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB6836);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6861);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EB6883,	"Size",	0);
	create_insn	(x=0X43EB688D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6A57);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6A6C);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6A8F);
	op_hex		(x,	1);
	set_cmt	(0X43EB6AA8,	"Size",	0);
	create_insn	(x=0X43EB6AB5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6B95);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6BAA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6BCF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB6BD4);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6BFF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EB6C21,	"Size",	0);
	create_insn	(x=0X43EB6C2B);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6E05);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6E1A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6E3D);
	op_hex		(x,	1);
	set_cmt	(0X43EB6E56,	"Size",	0);
	create_insn	(x=0X43EB6E63);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6F25);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6F3A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6F63);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB6F68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB6F6D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6F98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB6FBF);
	op_hex		(x,	1);
	create_insn	(x=0X43EB6FC7);
	op_hex		(x,	1);
	set_cmt	(0X43EB6FCA,	"Size",	0);
	create_insn	(x=0X43EB6FD9);
	op_hex		(x,	1);
	set_cmt	(0X43EB6FDF,	"symbol",	0);
	set_cmt	(0X43EB6FE6,	"symbol",	0);
	set_cmt	(0X43EB6FF3,	"symbol",	0);
	set_cmt	(0X43EB7000,	"symbol",	0);
	set_cmt	(0X43EB700D,	"symbol",	0);
	set_cmt	(0X43EB701A,	"symbol",	0);
	set_cmt	(0X43EB7027,	"symbol",	0);
	create_insn	(x=0X43EB7075);
	op_hex		(x,	1);
	create_insn	(x=0X43EB708A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB70AD);
	op_hex		(x,	1);
	create_insn	(x=0X43EB70C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EB70E3,	"Size",	0);
	create_insn	(x=0X43EB70ED);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7153);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7168);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7258);
	op_hex		(x,	1);
	create_insn	(x=0X43EB726D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7315);
	op_hex		(x,	1);
	create_insn	(x=0X43EB732A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB73B2);
	op_hex		(x,	1);
	create_insn	(x=0X43EB73C7);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7476);
	op_hex		(x,	1);
	create_insn	(x=0X43EB748B);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7575);
	op_hex		(x,	1);
	create_insn	(x=0X43EB758A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB75AD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB75B2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB75BB);
	op_hex		(x,	1);
	create_insn	(x=0X43EB75E1);
	op_hex		(x,	1);
	set_cmt	(0X43EB7656,	"Size",	0);
	create_insn	(x=0X43EB7660);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7895);
	op_hex		(x,	1);
	create_insn	(x=0X43EB78AA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB78CD);
	op_hex		(x,	1);
	set_cmt	(0X43EB78E6,	"Size",	0);
	create_insn	(x=0X43EB78F3);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7959);
	op_hex		(x,	1);
	create_insn	(x=0X43EB796E);
	op_hex		(x,	1);
	create_insn	(x=0X43EB79F2);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7A07);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7AF5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7B0A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7B2D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB7B32);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB7B3D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7B63);
	op_hex		(x,	1);
	set_cmt	(0X43EB7BC3,	"Size",	0);
	create_insn	(x=0X43EB7BCD);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7E85);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7E9A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7EBD);
	op_hex		(x,	1);
	set_cmt	(0X43EB7ED6,	"Size",	0);
	create_insn	(x=0X43EB7EE3);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7F95);
	op_hex		(x,	1);
	create_insn	(x=0X43EB7FAA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8032);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8047);
	op_hex		(x,	1);
	create_insn	(x=0X43EB806A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB806F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB8074);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8087);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EB8092);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8097);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EB80A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EB80AF);
	op_hex		(x,	1);
	set_cmt	(0X43EB80F9,	"Size",	0);
	create_insn	(x=0X43EB8103);
	op_hex		(x,	1);
	set_cmt	(0X43EB8109,	"symbol",	0);
	set_cmt	(0X43EB8110,	"symbol",	0);
	set_cmt	(0X43EB811D,	"symbol",	0);
	set_cmt	(0X43EB812A,	"symbol",	0);
	set_cmt	(0X43EB8137,	"symbol",	0);
	set_cmt	(0X43EB8144,	"symbol",	0);
	set_cmt	(0X43EB8151,	"symbol",	0);
	set_cmt	(0X43EB815E,	"symbol",	0);
	set_cmt	(0X43EB816B,	"symbol",	0);
	set_cmt	(0X43EB8178,	"symbol",	0);
	set_cmt	(0X43EB8185,	"symbol",	0);
	set_cmt	(0X43EB8192,	"symbol",	0);
	set_cmt	(0X43EB81A5,	"symbol",	0);
	set_cmt	(0X43EB81AC,	"symbol",	0);
	set_cmt	(0X43EB81B9,	"symbol",	0);
	set_cmt	(0X43EB81C6,	"symbol",	0);
	set_cmt	(0X43EB81D3,	"symbol",	0);
	set_cmt	(0X43EB81E0,	"symbol",	0);
	set_cmt	(0X43EB81ED,	"symbol",	0);
	set_cmt	(0X43EB81FA,	"symbol",	0);
	set_cmt	(0X43EB8207,	"symbol",	0);
	set_cmt	(0X43EB8214,	"symbol",	0);
	set_cmt	(0X43EB8221,	"symbol",	0);
	set_cmt	(0X43EB822E,	"symbol",	0);
	set_cmt	(0X43EB823B,	"symbol",	0);
	set_cmt	(0X43EB8248,	"symbol",	0);
	set_cmt	(0X43EB8255,	"symbol",	0);
	set_cmt	(0X43EB8262,	"symbol",	0);
	set_cmt	(0X43EB826F,	"symbol",	0);
	set_cmt	(0X43EB827C,	"symbol",	0);
	set_cmt	(0X43EB8289,	"symbol",	0);
	set_cmt	(0X43EB8296,	"symbol",	0);
	set_cmt	(0X43EB82A3,	"symbol",	0);
	set_cmt	(0X43EB82B0,	"symbol",	0);
	set_cmt	(0X43EB82BD,	"symbol",	0);
	set_cmt	(0X43EB82CA,	"symbol",	0);
	set_cmt	(0X43EB82D7,	"symbol",	0);
	set_cmt	(0X43EB82E4,	"symbol",	0);
	set_cmt	(0X43EB82F1,	"symbol",	0);
	set_cmt	(0X43EB8304,	"symbol",	0);
	set_cmt	(0X43EB830B,	"symbol",	0);
	set_cmt	(0X43EB8318,	"symbol",	0);
	set_cmt	(0X43EB8325,	"symbol",	0);
	set_cmt	(0X43EB8332,	"symbol",	0);
	set_cmt	(0X43EB833F,	"symbol",	0);
	set_cmt	(0X43EB834C,	"symbol",	0);
	set_cmt	(0X43EB8359,	"symbol",	0);
	set_cmt	(0X43EB8366,	"symbol",	0);
	set_cmt	(0X43EB8373,	"symbol",	0);
	set_cmt	(0X43EB8380,	"symbol",	0);
	set_cmt	(0X43EB838D,	"symbol",	0);
	create_insn	(x=0X43EB83D5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB83EA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB840D);
	op_hex		(x,	1);
	set_cmt	(0X43EB8426,	"Size",	0);
	create_insn	(x=0X43EB8433);
	op_hex		(x,	1);
	create_insn	(x=0X43EB84E5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB84FA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB85D5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB85EA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB860D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB8612);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB8617);
	op_hex		(x,	1);
	create_insn	(x=0X43EB862A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EB8635);
	op_hex		(x,	1);
	create_insn	(x=0X43EB863A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EB8644);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EB8652);
	op_hex		(x,	1);
	create_insn	(x=0X43EB86A1);
	op_hex		(x,	1);
	create_insn	(x=0X43EB86A9);
	op_hex		(x,	1);
	set_cmt	(0X43EB86AC,	"Size",	0);
	create_insn	(x=0X43EB86BB);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8755);
	op_hex		(x,	1);
	create_insn	(x=0X43EB876A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB878D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB87A9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EB87C3,	"Size",	0);
	create_insn	(x=0X43EB87CD);
	op_hex		(x,	1);
	create_insn	(x=0X43EB89D5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB89EA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8A0D);
	op_hex		(x,	1);
	set_cmt	(0X43EB8A26,	"Size",	0);
	create_insn	(x=0X43EB8A33);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8AC5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8ADA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8AFD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB8B02);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB8B09);
	op_hex		(x,	1);
	set_cmt	(0X43EB8B4A,	"Size",	0);
	create_insn	(x=0X43EB8B54);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8DC7);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8DDC);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8DFF);
	op_hex		(x,	1);
	set_cmt	(0X43EB8E18,	"Size",	0);
	create_insn	(x=0X43EB8E25);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8E92);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8EA7);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8F58);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8F6D);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8F90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB8F95);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB8F9C);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8FBE);
	op_hex		(x,	1);
	create_insn	(x=0X43EB8FE7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EB9014,	"Size",	0);
	create_insn	(x=0X43EB901E);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9277);
	op_hex		(x,	1);
	create_insn	(x=0X43EB928C);
	op_hex		(x,	1);
	create_insn	(x=0X43EB92AF);
	op_hex		(x,	1);
	set_cmt	(0X43EB92C8,	"Size",	0);
	create_insn	(x=0X43EB92D5);
	op_hex		(x,	1);
	set_cmt	(0X43EB92DB,	"symbol",	0);
	set_cmt	(0X43EB92E2,	"symbol",	0);
	set_cmt	(0X43EB92EC,	"symbol",	0);
	set_cmt	(0X43EB92F6,	"symbol",	0);
	set_cmt	(0X43EB9300,	"symbol",	0);
	create_insn	(x=0X43EB9342);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9357);
	op_hex		(x,	1);
	create_insn	(x=0X43EB93E2);
	op_hex		(x,	1);
	create_insn	(x=0X43EB93F7);
	op_hex		(x,	1);
	create_insn	(x=0X43EB941A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB941F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB9426);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9448);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9471);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_9(void) {
        auto x;
#define id x

	set_cmt	(0X43EB949E,	"Size",	0);
	create_insn	(x=0X43EB94A8);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9776);
	op_hex		(x,	1);
	create_insn	(x=0X43EB978B);
	op_hex		(x,	1);
	create_insn	(x=0X43EB97AE);
	op_hex		(x,	1);
	set_cmt	(0X43EB97C7,	"Size",	0);
	create_insn	(x=0X43EB97D4);
	op_hex		(x,	1);
	create_insn	(x=0X43EB98F5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB990A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB992D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB9932);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB9939);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9964);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EB9986,	"Size",	0);
	create_insn	(x=0X43EB9990);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9C15);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9C2A);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9C4D);
	op_hex		(x,	1);
	set_cmt	(0X43EB9C66,	"Size",	0);
	create_insn	(x=0X43EB9C73);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9CD9);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9CEE);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9DB5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9DCA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9DED);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB9DF2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB9DF9);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9E1B);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9E44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EB9E71);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EB9E7B,	"Size",	0);
	create_insn	(x=0X43EB9E82);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9E91);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EB9EA0);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9EA8);
	op_hex		(x,	1);
	set_cmt	(0X43EB9EAB,	"Size",	0);
	create_insn	(x=0X43EB9EBA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9FA5);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9FBA);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9FDD);
	op_hex		(x,	1);
	create_insn	(x=0X43EB9FF9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EBA013,	"Size",	0);
	create_insn	(x=0X43EBA01D);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA165);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA17A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA19D);
	op_hex		(x,	1);
	set_cmt	(0X43EBA1B6,	"Size",	0);
	create_insn	(x=0X43EBA1C3);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA255);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA26A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA28D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBA292);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBA299);
	op_hex		(x,	1);
	set_cmt	(0X43EBA2DA,	"Size",	0);
	create_insn	(x=0X43EBA2E4);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA4B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA4CA);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA4ED);
	op_hex		(x,	1);
	set_cmt	(0X43EBA506,	"Size",	0);
	create_insn	(x=0X43EBA513);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA598);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA5AD);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA675);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA68A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA6AD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBA6B2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBA6B9);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA6DE);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA707);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBA73A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBA751);
	op_hex		(x,	1);
	set_cmt	(0X43EBA756,	"Size",	0);
	create_insn	(x=0X43EBA765);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA835);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA84A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA86D);
	op_hex		(x,	1);
	create_insn	(x=0X43EBA889);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EBA8A3,	"Size",	0);
	create_insn	(x=0X43EBA8AD);
	op_hex		(x,	1);
	create_insn	(x=0X43EBAAD5);
	op_hex		(x,	1);
	create_insn	(x=0X43EBAAEA);
	op_hex		(x,	1);
	create_insn	(x=0X43EBAB0D);
	op_hex		(x,	1);
	set_cmt	(0X43EBAB26,	"Size",	0);
	create_insn	(x=0X43EBAB33);
	op_hex		(x,	1);
	create_insn	(x=0X43EBAB92);
	op_hex		(x,	1);
	create_insn	(x=0X43EBABA7);
	op_hex		(x,	1);
	create_insn	(x=0X43EBABCC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBABD1);
	op_hex		(x,	1);
	set_cmt	(0X43EBAC12,	"Size",	0);
	create_insn	(x=0X43EBAC1C);
	op_hex		(x,	1);
	create_insn	(x=0X43EBAE15);
	op_hex		(x,	1);
	create_insn	(x=0X43EBAE2A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBAE4D);
	op_hex		(x,	1);
	set_cmt	(0X43EBAE66,	"Size",	0);
	create_insn	(x=0X43EBAE73);
	op_hex		(x,	1);
	create_insn	(x=0X43EBAF05);
	op_hex		(x,	1);
	create_insn	(x=0X43EBAF1A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBAF3D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBAF42);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBAF49);
	op_hex		(x,	1);
	set_cmt	(0X43EBAF8A,	"Size",	0);
	create_insn	(x=0X43EBAF94);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB205);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB21A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB23D);
	op_hex		(x,	1);
	set_cmt	(0X43EBB256,	"Size",	0);
	create_insn	(x=0X43EBB263);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB2C9);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB2DE);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB3C5);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB3DA);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB3FD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBB402);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBB409);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB42B);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB47A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB485);
	op_hex		(x,	1);
	set_cmt	(0X43EBB48A,	"Size",	0);
	create_insn	(x=0X43EBB499);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB555);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB56A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB58D);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB5A9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EBB5C3,	"Size",	0);
	create_insn	(x=0X43EBB5CD);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB6F5);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB70A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB72D);
	op_hex		(x,	1);
	set_cmt	(0X43EBB746,	"Size",	0);
	create_insn	(x=0X43EBB753);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB7E5);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB7FA);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB81D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBB822);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBB829);
	op_hex		(x,	1);
	set_cmt	(0X43EBB86A,	"Size",	0);
	create_insn	(x=0X43EBB874);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB8E2);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB8F7);
	op_hex		(x,	1);
	create_insn	(x=0X43EBB9F6);
	op_hex		(x,	1);
	create_insn	(x=0X43EBBA0B);
	op_hex		(x,	1);
	create_insn	(x=0X43EBBA2E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBBA33);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBBA3A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBBA5C);
	op_hex		(x,	1);
	create_insn	(x=0X43EBBA84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EBBAA6,	"Size",	0);
	create_insn	(x=0X43EBBAB0);
	op_hex		(x,	1);
	set_cmt	(0X43EBBAB6,	"symbol",	0);
	set_cmt	(0X43EBBABD,	"symbol",	0);
	set_cmt	(0X43EBBAC7,	"symbol",	0);
	set_cmt	(0X43EBBAD1,	"symbol",	0);
	set_cmt	(0X43EBBADB,	"symbol",	0);
	create_insn	(x=0X43EBBB16);
	op_hex		(x,	1);
	create_insn	(x=0X43EBBB2B);
	op_hex		(x,	1);
	create_insn	(x=0X43EBBC15);
	op_hex		(x,	1);
	create_insn	(x=0X43EBBC2A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBBC4D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBBC52);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBBC59);
	op_hex		(x,	1);
	create_insn	(x=0X43EBBC7B);
	op_hex		(x,	1);
	create_insn	(x=0X43EBBCA3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBBCCA);
	op_hex		(x,	1);
	create_insn	(x=0X43EBBCD5);
	op_hex		(x,	1);
	set_cmt	(0X43EBBCDA,	"Size",	0);
	create_insn	(x=0X43EBBCE9);
	op_hex		(x,	1);
	create_insn	(x=0X43EBBE35);
	op_hex		(x,	1);
	create_insn	(x=0X43EBBE4A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBBE6D);
	op_hex		(x,	1);
	create_insn	(x=0X43EBBE89);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EBBEA3,	"Size",	0);
	create_insn	(x=0X43EBBEAD);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC065);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC07A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC09D);
	op_hex		(x,	1);
	set_cmt	(0X43EBC0B6,	"Size",	0);
	create_insn	(x=0X43EBC0C3);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC155);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC16A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC18D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBC192);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBC199);
	op_hex		(x,	1);
	set_cmt	(0X43EBC1DA,	"Size",	0);
	create_insn	(x=0X43EBC1E4);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC465);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC47A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC49D);
	op_hex		(x,	1);
	set_cmt	(0X43EBC4B6,	"Size",	0);
	create_insn	(x=0X43EBC4C3);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC548);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC55D);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC615);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC62A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC64D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBC652);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBC659);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC67E);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC6A7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBC6D9);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC6E4);
	op_hex		(x,	1);
	set_cmt	(0X43EBC6E9,	"Size",	0);
	create_insn	(x=0X43EBC6F8);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC795);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC7AA);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC7CD);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC7E9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EBC803,	"Size",	0);
	create_insn	(x=0X43EBC80D);
	op_hex		(x,	1);
	create_insn	(x=0X43EBC9F5);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCA0A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCA2D);
	op_hex		(x,	1);
	set_cmt	(0X43EBCA46,	"Size",	0);
	create_insn	(x=0X43EBCA53);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCAE5);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCAFA);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCB1D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBCB22);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBCB29);
	op_hex		(x,	1);
	set_cmt	(0X43EBCB6A,	"Size",	0);
	create_insn	(x=0X43EBCB74);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCBE2);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCBF7);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCCD5);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCCEA);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCD0D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBCD12);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBCD19);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCD3B);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCD63);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EBCD90);
	create_insn	(x=0X43EBCD93);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCD96);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCDAB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBCDBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBCDCB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBCDE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EBCE23);
	set_cmt	(0X43EBCE4C,	"a3",	0);
	set_cmt	(0X43EBCE4D,	"a2",	0);
	set_cmt	(0X43EBCE4E,	"this",	0);
	set_cmt	(0X43EBCE5B,	"num",	0);
	set_cmt	(0X43EBCE67,	"value",	0);
	set_cmt	(0X43EBCE6E,	"pointer",	0);
	create_insn	(x=0X43EBCE6E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBCE7E);
	op_hex		(x,	1);
	set_cmt	(0X43EBCE81,	"_DWORD",	0);
	set_cmt	(0X43EBCE86,	"_DWORD",	0);
	set_cmt	(0X43EBCE87,	"_DWORD",	0);
	set_cmt	(0X43EBCE8C,	"_DWORD",	0);
	create_insn	(x=0X43EBCE8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBCE97);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCECB);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCED3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EBCEFF);
	set_cmt	(0X43EBCF28,	"a3",	0);
	set_cmt	(0X43EBCF29,	"a2",	0);
	set_cmt	(0X43EBCF2A,	"this",	0);
	set_cmt	(0X43EBCF37,	"num",	0);
	set_cmt	(0X43EBCF43,	"value",	0);
	set_cmt	(0X43EBCF4A,	"pointer",	0);
	create_insn	(x=0X43EBCF4A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBCF54);
	op_hex		(x,	1);
	set_cmt	(0X43EBCF57,	"_DWORD",	0);
	set_cmt	(0X43EBCF5C,	"_DWORD",	0);
	set_cmt	(0X43EBCF5D,	"_DWORD",	0);
	set_cmt	(0X43EBCF62,	"_DWORD",	0);
	create_insn	(x=0X43EBCF62);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBCF6D);
	op_hex		(x,	1);
	create_insn	(x=0X43EBCFA1);
	op_hex		(x,	1);
	set_cmt	(0X43EBCFA4,	"num",	0);
	set_cmt	(0X43EBCFA9,	"value",	0);
	set_cmt	(0X43EBCFAB,	"pointer",	0);
	create_insn	(x=0X43EBCFAB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBCFBF);
	op_hex		(x,	1);
	set_cmt	(0X43EBCFD0,	"toArray",	0);
	set_cmt	(0X43EBCFD1,	"fromArray",	0);
	create_insn	(x=0X43EBD054);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD061);
	op_hex		(x,	1);
	set_cmt	(0X43EBD0A9,	"a3",	0);
	set_cmt	(0X43EBD0AA,	"a2",	0);
	set_cmt	(0X43EBD0AB,	"this",	0);
	set_cmt	(0X43EBD0B4,	"num",	0);
	set_cmt	(0X43EBD0BD,	"value",	0);
	set_cmt	(0X43EBD0BF,	"pointer",	0);
	create_insn	(x=0X43EBD0C9);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD0F2);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD12F);
	op_hex		(x,	1);
	create_insn	(0X43EBD158);
	create_insn	(x=0X43EBD15E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43EBD191,	0XF);
	create_insn	(0X43EBD1A0);
	create_insn	(x=0X43EBD1A3);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD1A6);
	op_hex		(x,	1);
	create_insn	(0X43EBD1CC);
	create_insn	(x=0X43EBD1D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EBD1E9);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD1F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EBD20A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EBD20E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EBD21C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EBD22D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EBD247);
	op_hex		(x,	1);
	make_array	(0X43EBD25B,	0X5);
	create_insn	(0X43EBD260);
	set_name	(0X43EBD260,	"OneTap::GUI::Instance");
	create_insn	(x=0X43EBD263);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD266);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD269);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD270);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EBD276);
	op_hex		(x,	1);
	set_cmt	(0X43EBD28B,	"Size",	0);
	create_insn	(x=0X43EBD2A1);
	op_hex		(x,	1);
	set_cmt	(0X43EBD311,	"Size",	0);
	create_insn	(x=0X43EBD318);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD358);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD35B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBD361);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBD366);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBD383);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBD452);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBD47A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD582);
	op_hex		(x,	1);
	create_insn	(0X43EBD589);
	create_insn	(x=0X43EBD5A4);
	op_hex		(x,	1);
	create_insn	(0X43EBD5AB);
	set_cmt	(0X43EBD5B2,	"Size",	0);
	create_insn	(x=0X43EBD5FC);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD61B);
	op_hex		(x,	1);
	set_cmt	(0X43EBD63F,	"a3",	0);
	set_cmt	(0X43EBD640,	"a2",	0);
	set_cmt	(0X43EBD641,	"this",	0);
	create_insn	(x=0X43EBD655);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD693);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBD698);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBD6B3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBD6C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EBD6DB);
	set_cmt	(0X43EBD6E9,	"Size",	0);
	create_insn	(x=0X43EBD728);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD747);
	op_hex		(x,	1);
	set_cmt	(0X43EBD76B,	"a3",	0);
	set_cmt	(0X43EBD76C,	"a2",	0);
	set_cmt	(0X43EBD76D,	"this",	0);
	create_insn	(x=0X43EBD781);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD7BF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBD7C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBD7DF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBD7F5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EBD807);
	set_cmt	(0X43EBD815,	"Size",	0);
	create_insn	(x=0X43EBD85C);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD87B);
	op_hex		(x,	1);
	set_cmt	(0X43EBD89F,	"a3",	0);
	set_cmt	(0X43EBD8A0,	"a2",	0);
	set_cmt	(0X43EBD8A1,	"this",	0);
	create_insn	(x=0X43EBD8B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD8F3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBD8F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBD913);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBD929);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EBD93B);
	set_cmt	(0X43EBD949,	"Size",	0);
	create_insn	(x=0X43EBD98D);
	op_hex		(x,	1);
	create_insn	(x=0X43EBD9AC);
	op_hex		(x,	1);
	set_cmt	(0X43EBD9D0,	"a3",	0);
	set_cmt	(0X43EBD9D1,	"a2",	0);
	set_cmt	(0X43EBD9D2,	"this",	0);
	create_insn	(x=0X43EBD9E6);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDA24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBDA29);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBDA44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBDA5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EBDA6C);
	create_insn	(x=0X43EBDA7F);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDA88);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDAC9);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDAEA);
	op_hex		(x,	1);
	set_cmt	(0X43EBDAED,	"this",	0);
	set_cmt	(0X43EBDB0E,	"a3",	0);
	set_cmt	(0X43EBDB0F,	"a2",	0);
	create_insn	(x=0X43EBDB20);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDB3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBDB53);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBDB5D);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDB60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBDB65);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBDB6F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBDB74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBDB7E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBDB83);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBDB8D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBDB92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBDB9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBDBA1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBDBAB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBDBB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBDBBA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBDBBF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBDBC9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBDBCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBDBD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBDBDD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43EBDBF2,	0XE);
	create_insn	(0X43EBDC00);
	create_insn	(x=0X43EBDC03);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDC1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EBDC56,	"switch 206 cases ",	0);
	create_insn	(x=0X43EBDC56);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDC63);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EBDC6A,	"switch jump",	0);
	create_insn	(x=0X43EBDC6A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EBDC71,	"jumptable 43EBDC6A case 243",	1);
	create_insn	(0X43EBDC71);
	set_cmt	(0X43EBDC78,	"jumptable 43EBDC6A case 242",	1);
	create_insn	(0X43EBDC78);
	set_cmt	(0X43EBDC7F,	"jumptable 43EBDC6A case 240",	1);
	create_insn	(0X43EBDC7F);
	set_cmt	(0X43EBDC86,	"jumptable 43EBDC6A cases 38,46,54,62,100,101",	1);
	create_insn	(0X43EBDC86);
	set_cmt	(0X43EBDC8D,	"jumptable 43EBDC6A case 102",	1);
	create_insn	(0X43EBDC8D);
	set_cmt	(0X43EBDC94,	"jumptable 43EBDC6A case 103",	1);
	create_insn	(0X43EBDC94);
	set_cmt	(0X43EBDCA7,	"jumptable 43EBDC6A default case, cases 39-45,47-53,55-61,63-99,104-239,241",	1);
	set_name	(0X43EBDCA7,	"def_43EBDC6A");
	create_insn	(x=0X43EBDCAF);
	op_hex		(x,	1);
	create_insn	(0X43EBDCDF);
	create_insn	(x=0X43EBDCF4);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDCF8);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDCFD);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDD0B);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDD0E);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDD30);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDD36);
	op_hex		(x,	1);
	create_insn	(0X43EBDD4C);
	create_insn	(x=0X43EBDD5D);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDD67);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDD90);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDD9C);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDDA6);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDDAE);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDDBB);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDDBD);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDDC0);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDDE2);
	op_hex		(x,	1);
	create_insn	(0X43EBDE1C);
	create_insn	(x=0X43EBDE35);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDE40);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDE4B);
	op_hex		(x,	1);
	create_insn	(0X43EBDE55);
	create_insn	(x=0X43EBDE64);
	op_hex		(x,	1);
	create_insn	(0X43EBDE95);
	create_insn	(x=0X43EBDEA1);
	op_hex		(x,	1);
	set_cmt	(0X43EBDEB5,	"switch 4 cases ",	0);
	set_cmt	(0X43EBDEBD,	"switch jump",	0);
	create_insn	(x=0X43EBDEBD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EBDEC4,	"jumptable 43EBDEBD cases 32,34",	1);
	create_insn	(0X43EBDEC4);
	create_insn	(x=0X43EBDEDB);
	op_hex		(x,	1);
	set_cmt	(0X43EBDEE7,	"jumptable 43EBDEBD cases 33,35",	1);
	create_insn	(0X43EBDEE7);
	create_insn	(x=0X43EBDEFE);
	op_hex		(x,	1);
	create_insn	(0X43EBDF0A);
	set_cmt	(0X43EBDF20,	"jumptable 43EBDEBD default case",	1);
	set_name	(0X43EBDF20,	"def_43EBDEBD");
	create_insn	(0X43EBDF56);
	create_insn	(0X43EBDF6C);
	set_cmt	(0X43EBDF70,	"switch 168 cases ",	0);
	create_insn	(x=0X43EBDF7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EBDF81,	"switch jump",	0);
	create_insn	(x=0X43EBDF81);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EBDF88,	"jumptable 43EBDF81 cases 80,215,247",	1);
	create_insn	(x=0X43EBDF88);
	op_hex		(x,	1);
	set_cmt	(0X43EBDF8D,	"jumptable 43EBDF81 default case, cases 81-196,198-213,216-246",	1);
	set_name	(0X43EBDF8D,	"def_43EBDF81");
	create_insn	(x=0X43EBDFA4);
	op_hex		(x,	1);
	set_cmt	(0X43EBDFAA,	"jumptable 43EBDF81 case 214",	1);
	create_insn	(x=0X43EBDFAA);
	op_hex		(x,	1);
	create_insn	(0X43EBDFAF);
	create_insn	(0X43EBDFBA);
	set_cmt	(0X43EBDFC0,	"jumptable 43EBDF81 case 197",	1);
	create_insn	(x=0X43EBDFC0);
	op_hex		(x,	1);
	create_insn	(0X43EBDFC9);
	create_insn	(0X43EBDFCE);
	create_insn	(x=0X43EBDFD3);
	op_hex		(x,	1);
	create_insn	(x=0X43EBDFF5);
	op_hex		(x,	1);
	create_insn	(0X43EBE000);
	create_insn	(x=0X43EBE006);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE014);
	op_hex		(x,	1);
	create_insn	(0X43EBE01B);
	create_insn	(x=0X43EBE039);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE03E);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE044);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE04D);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE053);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE055);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE063);
	op_hex		(x,	1);
	create_insn	(0X43EBE071);
	create_insn	(x=0X43EBE08B);
	op_hex		(x,	1);
	create_insn	(0X43EBE09C);
	create_insn	(x=0X43EBE09F);
	op_hex		(x,	1);
	create_insn	(0X43EBE0AE);
	create_insn	(x=0X43EBE0B0);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE0BE);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE0C3);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE0CC);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE0D0);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE0D3);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE0E2);
	op_hex		(x,	1);
	create_insn	(0X43EBE0F5);
	create_insn	(x=0X43EBE0FC);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE10E);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE11F);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE124);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE133);
	op_hex		(x,	1);
	create_insn	(0X43EBE144);
	create_insn	(x=0X43EBE153);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE15A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE162);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE169);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE178);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE17F);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE194);
	op_hex		(x,	1);
	create_insn	(0X43EBE1AA);
	set_cmt	(0X43EBE1B4,	"jump table for switch statement",	0);
	create_dword	(x=0X43EBE1B4);
	make_array	(x,	0X7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EBE1B4,	"jpt_43EBDC6A");
	set_cmt	(0X43EBE1D0,	"indirect table for switch statement",	0);
	create_byte	(0X43EBE1D0);
	make_array	(0X43EBE1D0,	0XCE);
	make_array	(0X43EBE29E,	0X2);
	set_cmt	(0X43EBE2A0,	"jump table for switch statement",	0);
	create_dword	(x=0X43EBE2A0);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EBE2A0,	"jpt_43EBDEBD");
	set_cmt	(0X43EBE2B0,	"jump table for switch statement",	0);
	create_dword	(x=0X43EBE2B0);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EBE2B0,	"jpt_43EBDF81");
	set_cmt	(0X43EBE2C0,	"indirect table for switch statement",	0);
	create_byte	(0X43EBE2C0);
	make_array	(0X43EBE2C0,	0XA8);
	make_array	(0X43EBE368,	0X8);
	create_insn	(0X43EBE370);
	create_insn	(0X43EBE380);
	create_insn	(x=0X43EBE382);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EBE395);
	create_insn	(0X43EBE3AF);
	make_array	(0X43EBE3B2,	0XE);
	create_insn	(0X43EBE3C0);
	create_insn	(x=0X43EBE3C2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43EBE3D6,	0XA);
	create_insn	(0X43EBE3E0);
	create_insn	(x=0X43EBE3F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EBE3FF);
	make_array	(0X43EBE405,	0XB);
	create_insn	(0X43EBE410);
	set_cmt	(0X43EBE427,	"switch 6 cases ",	0);
	set_cmt	(0X43EBE432,	"switch jump",	0);
	create_insn	(x=0X43EBE432);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EBE439,	"jumptable 43EBE432 case 256",	1);
	create_insn	(0X43EBE439);
	create_insn	(x=0X43EBE447);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EBE454,	"jumptable 43EBE432 case 257",	1);
	create_insn	(0X43EBE454);
	create_insn	(x=0X43EBE462);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EBE46F,	"jumptable 43EBE432 case 260",	1);
	create_insn	(0X43EBE46F);
	set_cmt	(0X43EBE47C,	"jumptable 43EBE432 default case, case 259\njumptable 43EBE4D2 default case",	1);
	set_name	(0X43EBE47C,	"def_43EBE432");
	set_cmt	(0X43EBE49E,	"jumptable 43EBE432 case 261",	1);
	create_insn	(0X43EBE49E);
	set_cmt	(0X43EBE4AD,	"jumptable 43EBE432 case 258",	1);
	create_insn	(0X43EBE4AD);
	set_cmt	(0X43EBE4C7,	"switch 12 cases ",	0);
	create_insn	(0X43EBE4C7);
	set_cmt	(0X43EBE4D2,	"switch jump",	0);
	create_insn	(x=0X43EBE4D2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EBE4D9,	"jumptable 43EBE4D2 case 515",	1);
	create_insn	(0X43EBE4D9);
	set_cmt	(0X43EBE4E6,	"jumptable 43EBE4D2 case 514",	1);
	create_insn	(0X43EBE4E6);
	set_cmt	(0X43EBE4F3,	"jumptable 43EBE4D2 cases 516,518",	1);
	create_insn	(0X43EBE4F3);
	set_cmt	(0X43EBE500,	"jumptable 43EBE4D2 case 517",	1);
	create_insn	(0X43EBE500);
	set_cmt	(0X43EBE50D,	"jumptable 43EBE4D2 cases 519,521",	1);
	create_insn	(0X43EBE50D);
	set_cmt	(0X43EBE51A,	"jumptable 43EBE4D2 case 520",	1);
	create_insn	(0X43EBE51A);
	set_cmt	(0X43EBE527,	"jumptable 43EBE4D2 cases 523,525",	1);
	create_insn	(0X43EBE527);
	create_insn	(x=0X43EBE52C);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE53B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EBE546,	"jumptable 43EBE4D2 case 524",	1);
	create_insn	(0X43EBE546);
	create_insn	(x=0X43EBE54B);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE55A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EBE565,	"jumptable 43EBE4D2 case 522",	1);
	create_insn	(0X43EBE565);
	create_insn	(x=0X43EBE56A);
	op_hex		(x,	1);
	make_array	(0X43EBE586,	0X2);
	set_cmt	(0X43EBE588,	"jump table for switch statement",	0);
	create_dword	(x=0X43EBE588);
	make_array	(x,	0X6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EBE588,	"jpt_43EBE432");
	set_cmt	(0X43EBE5A0,	"jump table for switch statement",	0);
	create_dword	(x=0X43EBE5A0);
	make_array	(x,	0XC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EBE5A0,	"jpt_43EBE4D2");
	set_cmt	(0X43EBE5D0,	"num",	0);
	create_insn	(0X43EBE5D0);
	set_cmt	(0X43EBE5D5,	"value",	0);
	set_cmt	(0X43EBE5D7,	"pointer",	0);
	create_insn	(x=0X43EBE5D7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBE5EE);
	op_hex		(x,	1);
	make_array	(0X43EBE5FA,	0X6);
	create_insn	(0X43EBE600);
	create_insn	(x=0X43EBE609);
	op_hex		(x,	1);
	make_array	(0X43EBE61B,	0X5);
	create_insn	(0X43EBE620);
	create_insn	(x=0X43EBE63C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EBE64B);
	create_insn	(x=0X43EBE65E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBE667);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EBE670,	"interface",	0);
	set_cmt	(0X43EBE676,	"index",	0);
	create_insn	(x=0X43EBE686);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBE68C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBE696);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBE6A1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBE6A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EBE6B3);
	make_array	(0X43EBE6B9,	0X7);
	create_insn	(0X43EBE6C0);
	create_insn	(x=0X43EBE6C3);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE737);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE763);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE794);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE7AF);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE7B4);
	op_hex		(x,	1);
	set_cmt	(0X43EBE7E0,	"this",	0);
	set_cmt	(0X43EBE7E3,	"a3",	0);
	set_cmt	(0X43EBE7E4,	"a2",	0);
	create_insn	(x=0X43EBE7FE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBE83C);
	op_hex		(x,	1);
	make_array	(0X43EBE849,	0X7);
	create_insn	(0X43EBE850);
	create_insn	(x=0X43EBE853);
	op_hex		(x,	1);
	set_cmt	(0X43EBE897,	"a3",	0);
	set_cmt	(0X43EBE898,	"a2",	0);
	set_cmt	(0X43EBE899,	"this",	0);
	create_insn	(x=0X43EBE8BA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBE8C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBE8FE);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE947);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE974);
	op_hex		(x,	1);
	create_insn	(x=0X43EBE9A5);
	op_hex		(x,	1);
	make_array	(0X43EBE9C7,	0X9);
	create_insn	(0X43EBE9D0);
	set_name	(0X43EBE9D0,	"OneTap::Startup::DllMain");
	create_insn	(x=0X43EBE9D5);
	op_stkvar	(x,	0);
	create_insn	(0X43EBE9E0);
	set_name	(0X43EBE9E0,	"nullsub_3");
	create_byte	(0X43EBE9E1);
	make_array	(0X43EBE9E1,	0X3F);
	create_insn	(0X43EBEA20);
	create_insn	(x=0X43EBEA51);
	op_hex		(x,	1);
	make_array	(0X43EBEA73,	0XD);
	create_insn	(0X43EBEA80);
	create_insn	(x=0X43EBEA83);
	op_hex		(x,	1);
	create_insn	(x=0X43EBEACE);
	op_hex		(x,	1);
	create_insn	(0X43EBEAE2);
	make_array	(0X43EBEAEB,	0X5);
	create_insn	(0X43EBEAF0);
	create_insn	(0X43EBEB1A);
	create_insn	(0X43EBEB20);
	create_insn	(x=0X43EBEB23);
	op_hex		(x,	1);
	create_insn	(x=0X43EBEB6D);
	op_hex		(x,	1);
	create_insn	(0X43EBEB7F);
	make_array	(0X43EBEB88,	0X8);
	create_insn	(0X43EBEB90);
	create_insn	(x=0X43EBEB93);
	op_hex		(x,	1);
	create_insn	(x=0X43EBEB96);
	op_hex		(x,	1);
	create_insn	(x=0X43EBED5B);
	op_hex		(x,	1);
	create_insn	(x=0X43EBEEDC);
	op_hex		(x,	1);
	set_cmt	(0X43EBEF0E,	"message",	0);
	set_cmt	(0X43EBEF0F,	"a6",	0);
	create_insn	(x=0X43EBEF11);
	op_hex		(x,	1);
	set_cmt	(0X43EBEF1C,	"a5",	0);
	set_cmt	(0X43EBEF28,	"a4",	0);
	set_cmt	(0X43EBEF2D,	"a3",	0);
	set_cmt	(0X43EBEF31,	"a2",	0);
	set_cmt	(0X43EBEF33,	"a1",	0);
	create_insn	(x=0X43EBEF33);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBEF41);
	op_hex		(x,	1);
	create_insn	(x=0X43EBEF73);
	op_hex		(x,	1);
	set_cmt	(0X43EBEFBE,	"propHash",	0);
	set_cmt	(0X43EBEFC3,	"classHash",	0);
	set_cmt	(0X43EBEFF9,	"propHash",	0);
	set_cmt	(0X43EBEFFE,	"classHash",	0);
	set_cmt	(0X43EBF035,	"propHash",	0);
	set_cmt	(0X43EBF03A,	"classHash",	0);
	create_insn	(x=0X43EBF10D);
	op_hex		(x,	1);
	create_insn	(x=0X43EBF13A);
	op_hex		(x,	1);
	set_cmt	(0X43EBF150,	"message",	0);
	set_cmt	(0X43EBF151,	"a6",	0);
	create_insn	(x=0X43EBF153);
	op_hex		(x,	1);
	set_cmt	(0X43EBF156,	"a5",	0);
	set_cmt	(0X43EBF15E,	"a4",	0);
	set_cmt	(0X43EBF163,	"a3",	0);
	set_cmt	(0X43EBF167,	"a2",	0);
	set_cmt	(0X43EBF169,	"a1",	0);
	create_insn	(x=0X43EBF169);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBF173);
	op_hex		(x,	1);
	set_cmt	(0X43EBF18F,	"propHash",	0);
	set_cmt	(0X43EBF194,	"classHash",	0);
	set_cmt	(0X43EBF1C4,	"propHash",	0);
	set_cmt	(0X43EBF1C9,	"classHash",	0);
	set_cmt	(0X43EBF1F6,	"propHash",	0);
	set_cmt	(0X43EBF1FB,	"classHash",	0);
	set_cmt	(0X43EBF218,	"propHash",	0);
	set_cmt	(0X43EBF21D,	"classHash",	0);
	set_cmt	(0X43EBF247,	"propHash",	0);
	set_cmt	(0X43EBF24C,	"classHash",	0);
	set_cmt	(0X43EBF294,	"propHash",	0);
	set_cmt	(0X43EBF299,	"classHash",	0);
	set_cmt	(0X43EBF2B4,	"propHash",	0);
	set_cmt	(0X43EBF2B9,	"classHash",	0);
	create_insn	(x=0X43EBF358);
	op_hex		(x,	1);
	create_insn	(x=0X43EBF385);
	op_hex		(x,	1);
	set_cmt	(0X43EBF39B,	"message",	0);
	set_cmt	(0X43EBF39C,	"a6",	0);
	create_insn	(x=0X43EBF39E);
	op_hex		(x,	1);
	set_cmt	(0X43EBF3A1,	"a5",	0);
	set_cmt	(0X43EBF3A9,	"a4",	0);
	set_cmt	(0X43EBF3AE,	"a3",	0);
	set_cmt	(0X43EBF3B2,	"a2",	0);
	set_cmt	(0X43EBF3B4,	"a1",	0);
	create_insn	(x=0X43EBF3B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBF3BE);
	op_hex		(x,	1);
	create_insn	(x=0X43EBF3DF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EBF46B);
	op_hex		(x,	1);
	set_cmt	(0X43EBF49D,	"message",	0);
	set_cmt	(0X43EBF49E,	"a6",	0);
	create_insn	(x=0X43EBF4A0);
	op_hex		(x,	1);
	set_cmt	(0X43EBF4AB,	"a5",	0);
	set_cmt	(0X43EBF4B7,	"a4",	0);
	set_cmt	(0X43EBF4BC,	"a3",	0);
	set_cmt	(0X43EBF4C0,	"a2",	0);
	set_cmt	(0X43EBF4C2,	"a1",	0);
	create_insn	(x=0X43EBF4C2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBF4CC);
	op_hex		(x,	1);
	create_insn	(x=0X43EBF52B);
	op_hex		(x,	1);
	set_cmt	(0X43EBF55B,	"message",	0);
	set_cmt	(0X43EBF55C,	"a6",	0);
	create_insn	(x=0X43EBF55E);
	op_hex		(x,	1);
	set_cmt	(0X43EBF569,	"a5",	0);
	set_cmt	(0X43EBF575,	"a4",	0);
	set_cmt	(0X43EBF57A,	"a3",	0);
	set_cmt	(0X43EBF57E,	"a2",	0);
	set_cmt	(0X43EBF580,	"a1",	0);
	create_insn	(x=0X43EBF580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBF58A);
	op_hex		(x,	1);
	create_insn	(x=0X43EBF5F8);
	op_hex		(x,	1);
	create_insn	(x=0X43EBF625);
	op_hex		(x,	1);
	set_cmt	(0X43EBF641,	"message",	0);
	set_cmt	(0X43EBF642,	"a6",	0);
	create_insn	(x=0X43EBF644);
	op_hex		(x,	1);
	set_cmt	(0X43EBF647,	"a5",	0);
	set_cmt	(0X43EBF653,	"a4",	0);
	set_cmt	(0X43EBF658,	"a3",	0);
	set_cmt	(0X43EBF65C,	"a2",	0);
	set_cmt	(0X43EBF65E,	"a1",	0);
	create_insn	(x=0X43EBF65E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBF668);
	op_hex		(x,	1);
	create_insn	(x=0X43EBF69B);
	op_hex		(x,	1);
	create_insn	(x=0X43EBF6AE);
	op_hex		(x,	1);
	create_insn	(0X43EBF807);
	set_cmt	(0X43EBF8A5,	"switch 5 cases ",	0);
	set_cmt	(0X43EBF8AE,	"switch jump",	0);
	create_insn	(x=0X43EBF8AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EBF8B5,	"jumptable 43EBF8AE case 0",	1);
	create_insn	(0X43EBF8B5);
	create_insn	(x=0X43EBF8EB);
	op_hex		(x,	1);
	set_cmt	(0X43EBF91D,	"a3",	0);
	set_cmt	(0X43EBF91E,	"a2",	0);
	set_cmt	(0X43EBF91F,	"this",	0);
	create_insn	(x=0X43EBF95E);
	op_hex		(x,	1);
	set_cmt	(0X43EBF96B,	"jumptable 43EBF8AE case 1",	1);
	create_insn	(0X43EBF96B);
	create_insn	(x=0X43EBF9A8);
	op_hex		(x,	1);
	set_cmt	(0X43EBF9DA,	"a3",	0);
	set_cmt	(0X43EBF9DB,	"a2",	0);
	set_cmt	(0X43EBF9DC,	"this",	0);
	create_insn	(x=0X43EBFA1B);
	op_hex		(x,	1);
	set_cmt	(0X43EBFA28,	"jumptable 43EBF8AE case 2",	1);
	create_insn	(0X43EBFA28);
	create_insn	(x=0X43EBFA7B);
	op_hex		(x,	1);
	set_cmt	(0X43EBFAAD,	"a3",	0);
	set_cmt	(0X43EBFAAE,	"a2",	0);
	set_cmt	(0X43EBFAAF,	"this",	0);
	create_insn	(x=0X43EBFAEE);
	op_hex		(x,	1);
	set_cmt	(0X43EBFAFB,	"jumptable 43EBF8AE case 3",	1);
	create_insn	(0X43EBFAFB);
	create_insn	(x=0X43EBFB38);
	op_hex		(x,	1);
	set_cmt	(0X43EBFB6A,	"a3",	0);
	set_cmt	(0X43EBFB6B,	"a2",	0);
	set_cmt	(0X43EBFB6C,	"this",	0);
	create_insn	(x=0X43EBFBAB);
	op_hex		(x,	1);
	set_cmt	(0X43EBFBB8,	"jumptable 43EBF8AE case 4",	1);
	create_insn	(0X43EBFBB8);
	create_insn	(x=0X43EBFBED);
	op_hex		(x,	1);
	set_cmt	(0X43EBFC1F,	"a3",	0);
	set_cmt	(0X43EBFC20,	"a2",	0);
	set_cmt	(0X43EBFC21,	"this",	0);
	create_insn	(x=0X43EBFC60);
	op_hex		(x,	1);
	set_cmt	(0X43EBFCA0,	"message",	0);
	set_cmt	(0X43EBFCA1,	"a6",	0);
	create_insn	(x=0X43EBFCA3);
	op_hex		(x,	1);
	set_cmt	(0X43EBFCA6,	"a5",	0);
	set_cmt	(0X43EBFCB2,	"a4",	0);
	set_cmt	(0X43EBFCB7,	"a3",	0);
	set_cmt	(0X43EBFCBB,	"a2",	0);
	set_cmt	(0X43EBFCBD,	"a1",	0);
	create_insn	(x=0X43EBFCBD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBFCC7);
	op_hex		(x,	1);
	create_insn	(x=0X43EBFD83);
	op_hex		(x,	1);
	create_insn	(x=0X43EBFE2E);
	op_hex		(x,	1);
	set_cmt	(0X43EBFE62,	"message",	0);
	set_cmt	(0X43EBFE63,	"a6",	0);
	create_insn	(x=0X43EBFE65);
	op_hex		(x,	1);
	set_cmt	(0X43EBFE71,	"a5",	0);
	set_cmt	(0X43EBFE7D,	"a4",	0);
	set_cmt	(0X43EBFE82,	"a3",	0);
	set_cmt	(0X43EBFE86,	"a2",	0);
	set_cmt	(0X43EBFE88,	"a1",	0);
	create_insn	(x=0X43EBFE88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EBFE96);
	op_hex		(x,	1);
	create_insn	(x=0X43EBFEC8);
	op_hex		(x,	1);
	create_insn	(x=0X43EBFF05);
	op_hex		(x,	1);
	set_cmt	(0X43EBFF08,	"jumptable 43EBF8AE default case",	1);
	set_name	(0X43EBFF08,	"def_43EBF8AE");
	create_insn	(x=0X43EBFF5B);
	op_hex		(x,	1);
	create_insn	(x=0X43EBFFC3);
	op_hex		(x,	1);
	create_insn	(x=0X43EBFFC5);
	op_hex		(x,	1);
	create_insn	(0X43EC0047);
	set_cmt	(0X43EC009C,	"propHash",	0);
	set_cmt	(0X43EC00A1,	"classHash",	0);
	set_cmt	(0X43EC00CB,	"propHash",	0);
	set_cmt	(0X43EC00D0,	"classHash",	0);
	create_insn	(x=0X43EC0131);
	op_hex		(x,	1);
	set_cmt	(0X43EC01A9,	"index",	0);
	set_cmt	(0X43EC01AE,	"interface",	0);
	set_cmt	(0X43EC01BB,	"this",	0);
	set_cmt	(0X43EC01D2,	"propHash",	0);
	set_cmt	(0X43EC01D7,	"classHash",	0);
	set_cmt	(0X43EC01F9,	"propHash",	0);
	set_cmt	(0X43EC01FE,	"classHash",	0);
	set_cmt	(0X43EC021D,	"index",	0);
	set_cmt	(0X43EC0222,	"interface",	0);
	set_cmt	(0X43EC022F,	"this",	0);
	create_insn	(x=0X43EC02AE);
	op_hex		(x,	1);
	create_insn	(x=0X43EC02B2);
	op_hex		(x,	1);
	create_insn	(x=0X43EC0308);
	op_hex		(x,	1);
	create_insn	(x=0X43EC0345);
	op_hex		(x,	1);
	set_cmt	(0X43EC0356,	"message",	0);
	set_cmt	(0X43EC0357,	"a6",	0);
	create_insn	(x=0X43EC0359);
	op_hex		(x,	1);
	set_cmt	(0X43EC036B,	"a5",	0);
	set_cmt	(0X43EC0371,	"a4",	0);
	set_cmt	(0X43EC0376,	"a3",	0);
	set_cmt	(0X43EC037A,	"a2",	0);
	set_cmt	(0X43EC037C,	"a1",	0);
	create_insn	(x=0X43EC037C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC0386);
	op_hex		(x,	1);
	create_insn	(0X43EC03B4);
	create_insn	(0X43EC03C1);
	set_cmt	(0X43EC03E8,	"message",	0);
	set_cmt	(0X43EC03E9,	"a6",	0);
	create_insn	(x=0X43EC03EB);
	op_hex		(x,	1);
	set_cmt	(0X43EC03F3,	"a5",	0);
	set_cmt	(0X43EC0400,	"a4",	0);
	set_cmt	(0X43EC0405,	"a3",	0);
	set_cmt	(0X43EC0409,	"a2",	0);
	set_cmt	(0X43EC040B,	"a1",	0);
	create_insn	(x=0X43EC040B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC041B);
	op_hex		(x,	1);
	set_cmt	(0X43EC045E,	"msg",	0);
	set_cmt	(0X43EC045F,	"a6",	0);
	create_insn	(x=0X43EC0461);
	op_hex		(x,	1);
	set_cmt	(0X43EC0464,	"a5",	0);
	set_cmt	(0X43EC0471,	"a4",	0);
	set_cmt	(0X43EC0476,	"a3",	0);
	set_cmt	(0X43EC047A,	"a2",	0);
	set_cmt	(0X43EC047E,	"a1",	0);
	create_insn	(x=0X43EC047E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC048E);
	op_hex		(x,	1);
	set_cmt	(0X43EC04B5,	"propHash",	0);
	set_cmt	(0X43EC04BA,	"classHash",	0);
	set_cmt	(0X43EC04E6,	"propHash",	0);
	set_cmt	(0X43EC04EB,	"classHash",	0);
	set_cmt	(0X43EC064E,	"message",	0);
	set_cmt	(0X43EC064F,	"a6",	0);
	create_insn	(x=0X43EC0651);
	op_hex		(x,	1);
	set_cmt	(0X43EC065C,	"a5",	0);
	set_cmt	(0X43EC0670,	"a4",	0);
	set_cmt	(0X43EC0675,	"a3",	0);
	set_cmt	(0X43EC0679,	"a2",	0);
	set_cmt	(0X43EC067B,	"a1",	0);
	create_insn	(x=0X43EC067B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC0685);
	op_hex		(x,	1);
	make_array	(0X43EC06C6,	0X2);
	set_cmt	(0X43EC06C8,	"jump table for switch statement",	0);
	create_dword	(x=0X43EC06C8);
	make_array	(x,	0X5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EC06C8,	"jpt_43EBF8AE");
	make_array	(0X43EC06DC,	0X4);
	create_insn	(0X43EC06E0);
	create_insn	(x=0X43EC06E3);
	op_hex		(x,	1);
	create_insn	(x=0X43EC06E6);
	op_hex		(x,	1);
	create_insn	(x=0X43EC06E9);
	op_hex		(x,	1);
	create_insn	(x=0X43EC06F6);
	op_hex		(x,	1);
	create_insn	(x=0X43EC070C);
	op_hex		(x,	1);
	set_cmt	(0X43EC0735,	"this",	0);
	set_cmt	(0X43EC0876,	"this",	0);
	set_cmt	(0X43EC08E6,	"m_player",	0);
	set_cmt	(0X43EC0900,	"index",	0);
	set_cmt	(0X43EC0905,	"interface",	0);
	set_cmt	(0X43EC0912,	"this",	0);
	create_insn	(0X43EC092A);
	create_insn	(x=0X43EC095A);
	op_hex		(x,	1);
	create_insn	(x=0X43EC0991);
	op_hex		(x,	1);
	create_insn	(x=0X43EC09DA);
	op_hex		(x,	1);
	create_insn	(x=0X43EC0A04);
	op_hex		(x,	1);
	create_insn	(x=0X43EC0A38);
	op_hex		(x,	1);
	set_cmt	(0X43EC0A8A,	"a3",	0);
	set_cmt	(0X43EC0A8B,	"a2",	0);
	set_cmt	(0X43EC0A8C,	"this",	0);
	create_insn	(x=0X43EC0A9A);
	op_hex		(x,	1);
	create_insn	(x=0X43EC0AA1);
	op_hex		(x,	1);
	create_insn	(x=0X43EC0AD8);
	op_hex		(x,	1);
	create_insn	(x=0X43EC0ADB);
	op_hex		(x,	1);
	create_insn	(x=0X43EC0AE2);
	op_hex		(x,	1);
	create_insn	(x=0X43EC0B19);
	op_hex		(x,	1);
	create_insn	(0X43EC0B30);
	create_insn	(0X43EC0B5D);
	create_insn	(0X43EC0C8B);
	set_cmt	(0X43EC0C95,	"message",	0);
	set_cmt	(0X43EC0C96,	"a6",	0);
	create_insn	(x=0X43EC0C98);
	op_hex		(x,	1);
	set_cmt	(0X43EC0C9B,	"a5",	0);
	set_cmt	(0X43EC0CA6,	"a4",	0);
	set_cmt	(0X43EC0CAB,	"a3",	0);
	set_cmt	(0X43EC0CAC,	"a2",	0);
	set_cmt	(0X43EC0CAE,	"a1",	0);
	create_insn	(x=0X43EC0CAE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC0CBE);
	op_hex		(x,	1);
	create_insn	(x=0X43EC0CF6);
	op_hex		(x,	1);
	create_insn	(0X43EC0CFB);
	create_insn	(x=0X43EC0D81);
	op_hex		(x,	1);
	create_insn	(0X43EC0DA2);
	make_array	(0X43EC0DAD,	0X3);
	create_insn	(0X43EC0DB0);
	set_cmt	(0X43EC0DB3,	"interface",	0);
	create_insn	(x=0X43EC0DB9);
	op_hex		(x,	1);
	set_cmt	(0X43EC0DBC,	"index",	0);
	set_cmt	(0X43EC0DD0,	"this",	0);
	set_cmt	(0X43EC0DE7,	"propHash",	0);
	set_cmt	(0X43EC0DEC,	"classHash",	0);
	set_cmt	(0X43EC0E0E,	"propHash",	0);
	set_cmt	(0X43EC0E13,	"classHash",	0);
	create_insn	(x=0X43EC0E67);
	op_hex		(x,	1);
	create_insn	(x=0X43EC0E75);
	op_hex		(x,	1);
	create_insn	(0X43EC0EA6);
	set_cmt	(0X43EC0EAE,	"index",	0);
	set_cmt	(0X43EC0EB9,	"interface",	0);
	set_cmt	(0X43EC0ECB,	"this",	0);
	set_cmt	(0X43EC0EE2,	"propHash",	0);
	set_cmt	(0X43EC0EE7,	"classHash",	0);
	create_insn	(x=0X43EC0F94);
	op_hex		(x,	1);
	create_insn	(x=0X43EC0FCE);
	op_hex		(x,	1);
	make_array	(0X43EC0FF3,	0XD);
	create_insn	(0X43EC1000);
	create_insn	(x=0X43EC1003);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1006);
	op_hex		(x,	1);
	set_cmt	(0X43EC1015,	"arg",	0);
	set_cmt	(0X43EC1023,	"index",	0);
	set_cmt	(0X43EC1028,	"interface",	0);
	set_cmt	(0X43EC1035,	"this",	0);
	set_cmt	(0X43EC104F,	"index",	0);
	set_cmt	(0X43EC1054,	"interface",	0);
	set_cmt	(0X43EC1061,	"this",	0);
	set_cmt	(0X43EC106D,	"m_pPlayer",	0);
	create_insn	(0X43EC10BE);
	set_cmt	(0X43EC10E2,	"index",	0);
	set_cmt	(0X43EC10ED,	"interface",	0);
	set_cmt	(0X43EC10FA,	"this",	0);
	set_cmt	(0X43EC111B,	"m_player",	0);
	set_cmt	(0X43EC113C,	"propHash",	0);
	set_cmt	(0X43EC1141,	"classHash",	0);
	create_insn	(x=0X43EC1168);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC11BC,	"propHash",	0);
	set_cmt	(0X43EC11C1,	"classHash",	0);
	create_insn	(x=0X43EC11D5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC126E,	"index",	0);
	set_cmt	(0X43EC1273,	"interface",	0);
	set_cmt	(0X43EC1280,	"this",	0);
	set_cmt	(0X43EC138F,	"m_player",	0);
	set_cmt	(0X43EC13A9,	"m_player",	0);
	set_cmt	(0X43EC13D0,	"m_player",	0);
	set_cmt	(0X43EC13DB,	"player",	0);
	set_cmt	(0X43EC13E6,	"player",	0);
	set_cmt	(0X43EC13F8,	"propHash",	0);
	set_cmt	(0X43EC13FD,	"classHash",	0);
	create_insn	(x=0X43EC149E);
	op_hex		(x,	1);
	create_insn	(x=0X43EC14B9);
	op_hex		(x,	1);
	create_insn	(x=0X43EC16DF);
	op_hex		(x,	1);
	make_array	(0X43EC1734,	0XC);
	create_insn	(0X43EC1740);
	create_insn	(x=0X43EC1743);
	op_hex		(x,	1);
	set_cmt	(0X43EC1746,	"interface",	0);
	create_insn	(x=0X43EC174C);
	op_hex		(x,	1);
	set_cmt	(0X43EC174F,	"index",	0);
	set_cmt	(0X43EC1764,	"this",	0);
	set_cmt	(0X43EC1778,	"interface",	0);
	set_cmt	(0X43EC177E,	"index",	0);
	create_insn	(x=0X43EC1792);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC17C0,	"this",	0);
	set_cmt	(0X43EC17E0,	"index",	0);
	set_cmt	(0X43EC17E5,	"interface",	0);
	set_cmt	(0X43EC17F2,	"this",	0);
	create_insn	(x=0X43EC1879);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC18C5,	"message",	0);
	create_insn	(x=0X43EC18C5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EC18D6,	"a6",	0);
	create_insn	(x=0X43EC18D8);
	op_hex		(x,	1);
	set_cmt	(0X43EC18F1,	"a5",	0);
	set_cmt	(0X43EC18FD,	"a4",	0);
	set_cmt	(0X43EC1902,	"a3",	0);
	set_cmt	(0X43EC1906,	"a2",	0);
	set_cmt	(0X43EC1908,	"a1",	0);
	create_insn	(x=0X43EC1908);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC1917);
	op_hex		(x,	1);
	create_insn	(0X43EC1937);
	set_cmt	(0X43EC194B,	"propHash",	0);
	set_cmt	(0X43EC1950,	"classHash",	0);
	set_cmt	(0X43EC1972,	"propHash",	0);
	set_cmt	(0X43EC1977,	"classHash",	0);
	set_cmt	(0X43EC1996,	"index",	0);
	set_cmt	(0X43EC199B,	"interface",	0);
	set_cmt	(0X43EC19A8,	"this",	0);
	create_insn	(0X43EC1A3A);
	create_insn	(x=0X43EC1A71);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1A8A);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1AE2);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1AF0);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1B18);
	op_hex		(x,	1);
	make_array	(0X43EC1B22,	0XE);
	create_insn	(0X43EC1B30);
	set_name	(0X43EC1B30,	"OneTap::GUI::Render::Update");
	create_insn	(x=0X43EC1B33);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1B36);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1B39);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1B40);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC1B46);
	op_hex		(x,	1);
	set_cmt	(0X43EC1B6C,	"index",	0);
	set_cmt	(0X43EC1B71,	"interface",	0);
	create_insn	(x=0X43EC1BE5);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1BEF);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1C62);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1C6C);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1D0E);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1D18);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1D95);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1D9F);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1E1F);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1E29);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1E9E);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1EA8);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1ED6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC1F21);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1F2B);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1F9E);
	op_hex		(x,	1);
	create_insn	(x=0X43EC1FA8);
	op_hex		(x,	1);
	create_insn	(x=0X43EC202E);
	op_hex		(x,	1);
	create_insn	(x=0X43EC2038);
	op_hex		(x,	1);
	create_insn	(x=0X43EC20B1);
	op_hex		(x,	1);
	create_insn	(x=0X43EC20BB);
	op_hex		(x,	1);
	create_insn	(x=0X43EC214E);
	op_hex		(x,	1);
	create_insn	(x=0X43EC2158);
	op_hex		(x,	1);
	create_insn	(x=0X43EC21E1);
	op_hex		(x,	1);
	create_insn	(x=0X43EC21EB);
	op_hex		(x,	1);
	create_insn	(x=0X43EC225E);
	op_hex		(x,	1);
	create_insn	(x=0X43EC2268);
	op_hex		(x,	1);
	create_insn	(x=0X43EC22DE);
	op_hex		(x,	1);
	create_insn	(x=0X43EC22E8);
	op_hex		(x,	1);
	create_insn	(x=0X43EC2364);
	op_hex		(x,	1);
	create_insn	(x=0X43EC236E);
	op_hex		(x,	1);
	create_insn	(x=0X43EC23FE);
	op_hex		(x,	1);
	create_insn	(x=0X43EC2408);
	op_hex		(x,	1);
	create_insn	(x=0X43EC2484);
	op_hex		(x,	1);
	create_insn	(x=0X43EC248E);
	op_hex		(x,	1);
	create_insn	(x=0X43EC254F);
	op_hex		(x,	1);
	create_insn	(x=0X43EC2564);
	op_hex		(x,	1);
	create_insn	(x=0X43EC2712);
	op_hex		(x,	1);
	create_insn	(x=0X43EC2727);
	op_hex		(x,	1);
	set_cmt	(0X43EC276F,	"object",	0);
	create_insn	(x=0X43EC276F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC2779);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC2791);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC27CF,	"object",	0);
	create_insn	(x=0X43EC27D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC28D2);
	op_hex		(x,	1);
	create_insn	(x=0X43EC28FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC293D,	"alpha",	0);
	set_cmt	(0X43EC2942,	"blue",	0);
	set_cmt	(0X43EC2949,	"color",	0);
	set_cmt	(0X43EC294E,	"green",	0);
	set_cmt	(0X43EC2953,	"red",	0);
	create_insn	(x=0X43EC2975);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC298F,	"array",	0);
	set_cmt	(0X43EC299A,	"array",	0);
	set_cmt	(0X43EC29B0,	"alpha",	0);
	set_cmt	(0X43EC29B3,	"color",	0);
	set_cmt	(0X43EC29B6,	"blue",	0);
	set_cmt	(0X43EC29B9,	"green",	0);
	set_cmt	(0X43EC29BC,	"red",	0);
	create_insn	(x=0X43EC29D9);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC29F8,	"array",	0);
	set_cmt	(0X43EC2A00,	"array",	0);
	set_cmt	(0X43EC2A16,	"alpha",	0);
	set_cmt	(0X43EC2A19,	"color",	0);
	set_cmt	(0X43EC2A1C,	"blue",	0);
	set_cmt	(0X43EC2A1F,	"green",	0);
	set_cmt	(0X43EC2A22,	"red",	0);
	create_insn	(x=0X43EC2A42);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC2A60,	"array",	0);
	set_cmt	(0X43EC2A6B,	"array",	0);
	set_cmt	(0X43EC2A81,	"alpha",	0);
	set_cmt	(0X43EC2A84,	"color",	0);
	set_cmt	(0X43EC2A87,	"blue",	0);
	set_cmt	(0X43EC2A8A,	"green",	0);
	set_cmt	(0X43EC2A8D,	"red",	0);
	create_insn	(x=0X43EC2AB1);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC2ACC,	"array",	0);
	set_cmt	(0X43EC2AD7,	"array",	0);
	set_cmt	(0X43EC2AED,	"alpha",	0);
	set_cmt	(0X43EC2AF0,	"color",	0);
	set_cmt	(0X43EC2AF3,	"blue",	0);
	set_cmt	(0X43EC2AF6,	"green",	0);
	set_cmt	(0X43EC2AF9,	"red",	0);
	create_insn	(x=0X43EC2B15);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC2B2F,	"array",	0);
	set_cmt	(0X43EC2B3A,	"array",	0);
	set_cmt	(0X43EC2B50,	"alpha",	0);
	set_cmt	(0X43EC2B53,	"color",	0);
	set_cmt	(0X43EC2B56,	"blue",	0);
	set_cmt	(0X43EC2B59,	"green",	0);
	set_cmt	(0X43EC2B5C,	"red",	0);
	set_cmt	(0X43EC2B6F,	"array",	0);
	set_cmt	(0X43EC2B7A,	"array",	0);
	set_cmt	(0X43EC2B90,	"alpha",	0);
	set_cmt	(0X43EC2B93,	"color",	0);
	set_cmt	(0X43EC2B96,	"blue",	0);
	set_cmt	(0X43EC2B99,	"green",	0);
	set_cmt	(0X43EC2B9C,	"red",	0);
	set_cmt	(0X43EC2BAC,	"array",	0);
	set_cmt	(0X43EC2BB7,	"array",	0);
	set_cmt	(0X43EC2BCD,	"alpha",	0);
	set_cmt	(0X43EC2BD0,	"color",	0);
	set_cmt	(0X43EC2BD6,	"blue",	0);
	set_cmt	(0X43EC2BD9,	"green",	0);
	set_cmt	(0X43EC2BDC,	"red",	0);
	set_cmt	(0X43EC2BEC,	"array",	0);
	set_cmt	(0X43EC2BF7,	"array",	0);
	set_cmt	(0X43EC2C0D,	"alpha",	0);
	set_cmt	(0X43EC2C10,	"color",	0);
	set_cmt	(0X43EC2C13,	"blue",	0);
	set_cmt	(0X43EC2C16,	"green",	0);
	set_cmt	(0X43EC2C19,	"red",	0);
	create_insn	(x=0X43EC2C27);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC2C58,	"alpha",	0);
	set_cmt	(0X43EC2C5D,	"blue",	0);
	set_cmt	(0X43EC2C5F,	"green",	0);
	set_cmt	(0X43EC2C61,	"red",	0);
	set_cmt	(0X43EC2C63,	"color",	0);
	create_insn	(x=0X43EC2C81);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC2C94,	"alpha",	0);
	set_cmt	(0X43EC2C99,	"blue",	0);
	set_cmt	(0X43EC2C9E,	"green",	0);
	set_cmt	(0X43EC2CA3,	"red",	0);
	set_cmt	(0X43EC2CA8,	"color",	0);
	create_insn	(x=0X43EC2D31);
	op_hex		(x,	1);
	create_insn	(x=0X43EC2D5F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC2D8D);
	op_hex		(x,	1);
	set_cmt	(0X43EC2DBF,	"alpha",	0);
	set_cmt	(0X43EC2DC4,	"blue",	0);
	set_cmt	(0X43EC2DC8,	"color",	0);
	set_cmt	(0X43EC2DCB,	"green",	0);
	create_insn	(x=0X43EC2DCD);
	op_hex		(x,	1);
	set_cmt	(0X43EC2DD0,	"red",	0);
	create_insn	(x=0X43EC2DEC);
	op_hex		(x,	1);
	create_insn	(x=0X43EC2E16);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC2E23,	"alpha",	0);
	set_cmt	(0X43EC2E28,	"blue",	0);
	set_cmt	(0X43EC2E2A,	"green",	0);
	set_cmt	(0X43EC2E2C,	"red",	0);
	set_cmt	(0X43EC2E2E,	"color",	0);
	create_insn	(x=0X43EC2E48);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC2E90,	"alpha",	0);
	set_cmt	(0X43EC2E95,	"blue",	0);
	set_cmt	(0X43EC2E9A,	"green",	0);
	set_cmt	(0X43EC2E9F,	"red",	0);
	set_cmt	(0X43EC2EA4,	"color",	0);
	set_cmt	(0X43EC2EBC,	"object",	0);
	create_insn	(x=0X43EC2EC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC2EF5,	"alpha",	0);
	set_cmt	(0X43EC2EFA,	"blue",	0);
	set_cmt	(0X43EC2EFF,	"green",	0);
	set_cmt	(0X43EC2F04,	"red",	0);
	set_cmt	(0X43EC2F09,	"color",	0);
	create_insn	(x=0X43EC2F2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC2F9D,	"object",	0);
	create_insn	(x=0X43EC2F9D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC2FB6,	"object",	0);
	create_insn	(x=0X43EC2FB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC2FC0,	"object",	0);
	create_insn	(x=0X43EC2FC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC2FCC,	"localPlayerInstance",	0);
	set_cmt	(0X43EC2FD4,	"instance",	0);
	set_cmt	(0X43EC2FE8,	"object",	0);
	create_insn	(x=0X43EC2FE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC3000,	"object",	0);
	create_insn	(x=0X43EC3000);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC300B,	"instance",	0);
	set_cmt	(0X43EC301F,	"object",	0);
	create_insn	(x=0X43EC301F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC3029,	"object",	0);
	create_insn	(x=0X43EC3029);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC3035,	"localPlayerInstance",	0);
	set_cmt	(0X43EC303D,	"instance",	0);
	set_cmt	(0X43EC307A,	"propHash",	0);
	set_cmt	(0X43EC307B,	"classHash",	0);
	create_insn	(x=0X43EC307C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC309A,	"object",	0);
	create_insn	(x=0X43EC309A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC30A4,	"object",	0);
	create_insn	(x=0X43EC30A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC30B0,	"localPlayerInstance",	0);
	set_cmt	(0X43EC30B8,	"instance",	0);
	set_cmt	(0X43EC30BF,	"m_pPlayer",	0);
	set_cmt	(0X43EC30C6,	"object",	0);
	create_insn	(x=0X43EC30C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC30D4,	"object",	0);
	create_insn	(x=0X43EC30D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC30E0,	"object",	0);
	create_insn	(x=0X43EC30E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC30EC,	"localPlayerInstance",	0);
	set_cmt	(0X43EC30F4,	"instance",	0);
	create_insn	(0X43EC3114);
	set_cmt	(0X43EC3119,	"object",	0);
	create_insn	(x=0X43EC3119);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC3125,	"localPlayerInstance",	0);
	set_cmt	(0X43EC312D,	"instance",	0);
	set_cmt	(0X43EC3158,	"propHash",	0);
	set_cmt	(0X43EC3159,	"classHash",	0);
	create_insn	(x=0X43EC315A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC31C9,	"array",	0);
	set_cmt	(0X43EC31EF,	"object",	0);
	create_insn	(x=0X43EC31EF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC3219,	"object",	0);
	create_insn	(x=0X43EC3219);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC3225);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC323D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC3265,	"alpha",	0);
	set_cmt	(0X43EC326A,	"blue",	0);
	set_cmt	(0X43EC326C,	"green",	0);
	set_cmt	(0X43EC326E,	"red",	0);
	set_cmt	(0X43EC3270,	"color",	0);
	create_insn	(x=0X43EC3293);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC32AA,	"array",	0);
	set_cmt	(0X43EC32B5,	"array",	0);
	set_cmt	(0X43EC32CB,	"alpha",	0);
	set_cmt	(0X43EC32CE,	"color",	0);
	set_cmt	(0X43EC32D1,	"blue",	0);
	set_cmt	(0X43EC32D4,	"green",	0);
	set_cmt	(0X43EC32D7,	"red",	0);
	create_insn	(x=0X43EC32F6);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC330D,	"array",	0);
	set_cmt	(0X43EC3318,	"array",	0);
	set_cmt	(0X43EC332E,	"alpha",	0);
	set_cmt	(0X43EC3331,	"color",	0);
	set_cmt	(0X43EC3334,	"blue",	0);
	set_cmt	(0X43EC3337,	"green",	0);
	set_cmt	(0X43EC333A,	"red",	0);
	create_insn	(x=0X43EC335A);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC3376,	"array",	0);
	set_cmt	(0X43EC3381,	"array",	0);
	set_cmt	(0X43EC3397,	"alpha",	0);
	set_cmt	(0X43EC339A,	"color",	0);
	set_cmt	(0X43EC339D,	"blue",	0);
	set_cmt	(0X43EC33A0,	"green",	0);
	set_cmt	(0X43EC33A3,	"red",	0);
	create_insn	(x=0X43EC33CC);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC33E3,	"array",	0);
	set_cmt	(0X43EC33EE,	"array",	0);
	set_cmt	(0X43EC3404,	"alpha",	0);
	set_cmt	(0X43EC3407,	"color",	0);
	set_cmt	(0X43EC340A,	"blue",	0);
	set_cmt	(0X43EC340D,	"green",	0);
	set_cmt	(0X43EC3410,	"red",	0);
	create_insn	(x=0X43EC342F);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC3446,	"array",	0);
	set_cmt	(0X43EC3451,	"array",	0);
	set_cmt	(0X43EC3467,	"alpha",	0);
	set_cmt	(0X43EC346A,	"color",	0);
	set_cmt	(0X43EC346D,	"blue",	0);
	set_cmt	(0X43EC3470,	"green",	0);
	set_cmt	(0X43EC3473,	"red",	0);
	set_cmt	(0X43EC3486,	"array",	0);
	set_cmt	(0X43EC3491,	"array",	0);
	set_cmt	(0X43EC34A7,	"alpha",	0);
	set_cmt	(0X43EC34AA,	"blue",	0);
	set_cmt	(0X43EC34AD,	"green",	0);
	set_cmt	(0X43EC34B0,	"red",	0);
	set_cmt	(0X43EC34B1,	"color",	0);
	set_cmt	(0X43EC34C3,	"array",	0);
	set_cmt	(0X43EC34CE,	"array",	0);
	set_cmt	(0X43EC34E4,	"alpha",	0);
	set_cmt	(0X43EC34E7,	"color",	0);
	set_cmt	(0X43EC34ED,	"blue",	0);
	set_cmt	(0X43EC34F0,	"green",	0);
	set_cmt	(0X43EC34F3,	"red",	0);
	set_cmt	(0X43EC3503,	"array",	0);
	set_cmt	(0X43EC350E,	"array",	0);
	set_cmt	(0X43EC3524,	"alpha",	0);
	set_cmt	(0X43EC3527,	"color",	0);
	set_cmt	(0X43EC352A,	"blue",	0);
	set_cmt	(0X43EC352D,	"green",	0);
	set_cmt	(0X43EC3530,	"red",	0);
	create_insn	(x=0X43EC3557);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC356C,	"alpha",	0);
	set_cmt	(0X43EC3571,	"blue",	0);
	set_cmt	(0X43EC3573,	"green",	0);
	set_cmt	(0X43EC3575,	"red",	0);
	set_cmt	(0X43EC3577,	"color",	0);
	create_insn	(x=0X43EC359B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC3684);
	op_hex		(x,	1);
	create_insn	(x=0X43EC36B6);
	op_hex		(x,	1);
	set_cmt	(0X43EC36C1,	"alpha",	0);
	set_cmt	(0X43EC36C6,	"blue",	0);
	set_cmt	(0X43EC36CB,	"green",	0);
	set_cmt	(0X43EC36D0,	"red",	0);
	set_cmt	(0X43EC36D5,	"color",	0);
	create_insn	(x=0X43EC36DF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC3732,	"alpha",	0);
	set_cmt	(0X43EC3737,	"blue",	0);
	set_cmt	(0X43EC373B,	"color",	0);
	set_cmt	(0X43EC373E,	"green",	0);
	create_insn	(x=0X43EC3740);
	op_hex		(x,	1);
	set_cmt	(0X43EC3743,	"red",	0);
	create_insn	(x=0X43EC3762);
	op_hex		(x,	1);
	create_insn	(x=0X43EC378C);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC379C,	"alpha",	0);
	set_cmt	(0X43EC37A1,	"blue",	0);
	set_cmt	(0X43EC37A3,	"green",	0);
	set_cmt	(0X43EC37A5,	"red",	0);
	set_cmt	(0X43EC37A7,	"color",	0);
	create_insn	(x=0X43EC37D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC383D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC385C,	"alpha",	0);
	set_cmt	(0X43EC3861,	"blue",	0);
	set_cmt	(0X43EC3866,	"green",	0);
	set_cmt	(0X43EC386B,	"red",	0);
	set_cmt	(0X43EC3870,	"color",	0);
	set_cmt	(0X43EC38EC,	"object",	0);
	create_insn	(x=0X43EC38EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC3901);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC391C,	"object",	0);
	create_insn	(x=0X43EC391C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC3935,	"object",	0);
	create_insn	(x=0X43EC3935);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC393F,	"object",	0);
	create_insn	(x=0X43EC393F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC394B,	"localPlayerInstance",	0);
	set_cmt	(0X43EC3953,	"instance",	0);
	set_cmt	(0X43EC3962,	"object",	0);
	create_insn	(x=0X43EC3962);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC396C,	"object",	0);
	create_insn	(x=0X43EC396C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC3978,	"localPlayerInstance",	0);
	set_cmt	(0X43EC3980,	"instance",	0);
	set_cmt	(0X43EC3987,	"m_pPlayer",	0);
	set_cmt	(0X43EC39AC,	"object",	0);
	create_insn	(x=0X43EC39AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC39B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC39C3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC3A03,	"alpha",	0);
	set_cmt	(0X43EC3A08,	"blue",	0);
	set_cmt	(0X43EC3A0A,	"green",	0);
	set_cmt	(0X43EC3A0C,	"red",	0);
	set_cmt	(0X43EC3A0E,	"color",	0);
	create_insn	(x=0X43EC3A3C);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC3A4E,	"array",	0);
	set_cmt	(0X43EC3A59,	"array",	0);
	set_cmt	(0X43EC3A6F,	"alpha",	0);
	set_cmt	(0X43EC3A72,	"color",	0);
	set_cmt	(0X43EC3A75,	"blue",	0);
	set_cmt	(0X43EC3A78,	"green",	0);
	set_cmt	(0X43EC3A7B,	"red",	0);
	create_insn	(x=0X43EC3A9D);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC3AB8,	"array",	0);
	set_cmt	(0X43EC3AC3,	"array",	0);
	set_cmt	(0X43EC3AD9,	"alpha",	0);
	set_cmt	(0X43EC3ADC,	"color",	0);
	set_cmt	(0X43EC3ADF,	"blue",	0);
	set_cmt	(0X43EC3AE2,	"green",	0);
	set_cmt	(0X43EC3AE5,	"red",	0);
	create_insn	(x=0X43EC3AFF);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC3B27,	"array",	0);
	set_cmt	(0X43EC3B32,	"array",	0);
	set_cmt	(0X43EC3B48,	"alpha",	0);
	set_cmt	(0X43EC3B4B,	"color",	0);
	set_cmt	(0X43EC3B4E,	"blue",	0);
	set_cmt	(0X43EC3B51,	"green",	0);
	set_cmt	(0X43EC3B54,	"red",	0);
	create_insn	(x=0X43EC3B76);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC3B96,	"array",	0);
	set_cmt	(0X43EC3BA1,	"array",	0);
	set_cmt	(0X43EC3BB7,	"alpha",	0);
	set_cmt	(0X43EC3BBA,	"color",	0);
	set_cmt	(0X43EC3BBD,	"blue",	0);
	set_cmt	(0X43EC3BC0,	"green",	0);
	set_cmt	(0X43EC3BC3,	"red",	0);
	create_insn	(x=0X43EC3BE0);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC3C0A,	"array",	0);
	set_cmt	(0X43EC3C15,	"array",	0);
	set_cmt	(0X43EC3C2B,	"alpha",	0);
	set_cmt	(0X43EC3C2E,	"color",	0);
	set_cmt	(0X43EC3C31,	"blue",	0);
	set_cmt	(0X43EC3C34,	"green",	0);
	set_cmt	(0X43EC3C37,	"red",	0);
	set_cmt	(0X43EC3C4A,	"array",	0);
	set_cmt	(0X43EC3C55,	"array",	0);
	set_cmt	(0X43EC3C6B,	"alpha",	0);
	set_cmt	(0X43EC3C6E,	"color",	0);
	set_cmt	(0X43EC3C74,	"blue",	0);
	set_cmt	(0X43EC3C77,	"green",	0);
	set_cmt	(0X43EC3C7A,	"red",	0);
	set_cmt	(0X43EC3C8A,	"array",	0);
	set_cmt	(0X43EC3C95,	"array",	0);
	set_cmt	(0X43EC3CAB,	"alpha",	0);
	set_cmt	(0X43EC3CAE,	"color",	0);
	set_cmt	(0X43EC3CB1,	"blue",	0);
	set_cmt	(0X43EC3CB4,	"green",	0);
	set_cmt	(0X43EC3CB7,	"red",	0);
	set_cmt	(0X43EC3CC7,	"array",	0);
	set_cmt	(0X43EC3CD2,	"array",	0);
	set_cmt	(0X43EC3CE8,	"alpha",	0);
	set_cmt	(0X43EC3CEB,	"color",	0);
	set_cmt	(0X43EC3CEE,	"blue",	0);
	set_cmt	(0X43EC3CF1,	"green",	0);
	set_cmt	(0X43EC3CF4,	"red",	0);
	create_insn	(x=0X43EC3D13);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC3D33,	"alpha",	0);
	set_cmt	(0X43EC3D38,	"blue",	0);
	set_cmt	(0X43EC3D3A,	"green",	0);
	set_cmt	(0X43EC3D3C,	"red",	0);
	set_cmt	(0X43EC3D3E,	"color",	0);
	create_insn	(x=0X43EC3D6C);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC3D76,	"alpha",	0);
	set_cmt	(0X43EC3D7B,	"blue",	0);
	set_cmt	(0X43EC3D80,	"green",	0);
	set_cmt	(0X43EC3D85,	"red",	0);
	set_cmt	(0X43EC3D8A,	"color",	0);
	create_insn	(x=0X43EC3E12);
	op_hex		(x,	1);
	create_insn	(x=0X43EC3E3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC3E4C);
	op_hex		(x,	1);
	create_insn	(x=0X43EC3EA4);
	op_hex		(x,	1);
	set_cmt	(0X43EC3EC4,	"object",	0);
	create_insn	(x=0X43EC3EC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC3F0B);
	op_hex		(x,	1);
	create_insn	(x=0X43EC3F0E);
	op_hex		(x,	1);
	set_cmt	(0X43EC3F17,	"object",	0);
	create_insn	(x=0X43EC3F17);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC3F67);
	op_hex		(x,	1);
	create_insn	(x=0X43EC3F79);
	op_hex		(x,	1);
	create_insn	(x=0X43EC3F7C);
	op_hex		(x,	1);
	create_insn	(x=0X43EC3F81);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC3FB1);
	op_hex		(x,	1);
	create_insn	(x=0X43EC3FB4);
	op_hex		(x,	1);
	create_insn	(x=0X43EC3FBD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC3FCF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC3FD9,	"object",	0);
	create_insn	(x=0X43EC3FD9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC4029);
	op_hex		(x,	1);
	create_insn	(x=0X43EC402C);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4031);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC4049);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC4079);
	op_hex		(x,	1);
	create_insn	(x=0X43EC407C);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4085);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC409A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC40B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC40C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC40D1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC40D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC40E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC4130,	"alpha",	0);
	set_cmt	(0X43EC4135,	"blue",	0);
	set_cmt	(0X43EC4137,	"green",	0);
	set_cmt	(0X43EC4139,	"red",	0);
	set_cmt	(0X43EC413B,	"color",	0);
	create_insn	(x=0X43EC414D);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4178);
	op_stkvar	(x,	0);
	set_cmt	(0X43EC4182,	"alpha",	0);
	set_cmt	(0X43EC4187,	"blue",	0);
	set_cmt	(0X43EC4189,	"green",	0);
	set_cmt	(0X43EC418B,	"red",	0);
	set_cmt	(0X43EC418D,	"color",	0);
	create_insn	(x=0X43EC41C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC425F);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4274);
	op_hex		(x,	1);
	create_insn	(x=0X43EC430F);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4324);
	op_hex		(x,	1);
	create_insn	(x=0X43EC43AF);
	op_hex		(x,	1);
	create_insn	(x=0X43EC43C4);
	op_hex		(x,	1);
	create_insn	(x=0X43EC445F);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4474);
	op_hex		(x,	1);
	create_insn	(x=0X43EC44E4);
	op_hex		(x,	1);
	create_insn	(x=0X43EC44F9);
	op_hex		(x,	1);
	set_cmt	(0X43EC4533,	"object",	0);
	create_insn	(x=0X43EC4533);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC453D,	"object",	0);
	create_insn	(x=0X43EC453D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC4549,	"localPlayerInstance",	0);
	set_cmt	(0X43EC4551,	"instance",	0);
	set_cmt	(0X43EC4560,	"object",	0);
	create_insn	(x=0X43EC4560);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC456A,	"object",	0);
	create_insn	(x=0X43EC456A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC4576,	"localPlayerInstance",	0);
	set_cmt	(0X43EC457E,	"instance",	0);
	set_cmt	(0X43EC4585,	"m_pPlayer",	0);
	create_insn	(x=0X43EC4595);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4598);
	op_hex		(x,	1);
	set_cmt	(0X43EC459D,	"object",	0);
	create_insn	(x=0X43EC459D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC45A7,	"object",	0);
	create_insn	(x=0X43EC45A7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC45B3,	"localPlayerInstance",	0);
	set_cmt	(0X43EC45BB,	"instance",	0);
	make_array	(0X43EC45EA,	0X6);
	set_cmt	(0X43EC45F0,	"size",	0);
	create_insn	(0X43EC45F0);
	create_insn	(x=0X43EC46AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC46B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC46D3);
	op_hex		(x,	1);
	create_insn	(x=0X43EC46FF);
	op_hex		(x,	1);
	create_insn	(x=0X43EC475F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC4780);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43EC47E9,	0X7);
	create_insn	(0X43EC47F0);
	create_insn	(x=0X43EC47F3);
	op_hex		(x,	1);
	make_array	(0X43EC48C3,	0XD);
	create_insn	(0X43EC48D0);
	create_insn	(x=0X43EC48D3);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4920);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4925);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4A9B);
	op_hex		(x,	1);
	set_cmt	(0X43EC4ACB,	"message",	0);
	set_cmt	(0X43EC4ACC,	"a6",	0);
	create_insn	(x=0X43EC4ACE);
	op_hex		(x,	1);
	set_cmt	(0X43EC4ADE,	"a5",	0);
	set_cmt	(0X43EC4AE9,	"a4",	0);
	set_cmt	(0X43EC4AEE,	"a3",	0);
	set_cmt	(0X43EC4AF1,	"a2",	0);
	set_cmt	(0X43EC4AF3,	"a1",	0);
	create_insn	(x=0X43EC4AF3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC4AFD);
	op_hex		(x,	1);
	create_insn	(0X43EC4B10);
	create_insn	(x=0X43EC4B13);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4B16);
	op_hex		(x,	1);
	set_cmt	(0X43EC4B2B,	"m_player",	0);
	set_cmt	(0X43EC4B5E,	"interface",	0);
	set_cmt	(0X43EC4B64,	"index",	0);
	set_cmt	(0X43EC4B75,	"this",	0);
	create_insn	(x=0X43EC4B9F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC4BAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC4BB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC4BBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC4BC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC4BD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EC4BDC);
	create_insn	(x=0X43EC4C77);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4C84);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4C91);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4CA4);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4CD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC4CDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC4CFB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC4D04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC4D22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC4D2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EC4E98);
	create_insn	(x=0X43EC4FA8);
	op_hex		(x,	1);
	create_insn	(x=0X43EC4FD7);
	op_hex		(x,	1);
	create_insn	(0X43EC50AF);
	create_insn	(0X43EC50D7);
	create_insn	(0X43EC56ED);
	create_insn	(0X43EC5733);
	set_cmt	(0X43EC579F,	"msg",	0);
	set_cmt	(0X43EC57B5,	"a6",	0);
	create_insn	(x=0X43EC57B8);
	op_hex		(x,	1);
	create_insn	(x=0X43EC57BD);
	op_hex		(x,	1);
	set_cmt	(0X43EC57C7,	"a5",	0);
	set_cmt	(0X43EC57D4,	"a4",	0);
	set_cmt	(0X43EC57D9,	"a3",	0);
	set_cmt	(0X43EC57DD,	"a2",	0);
	set_cmt	(0X43EC57DE,	"a1",	0);
	create_insn	(x=0X43EC57DE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC57E8);
	op_hex		(x,	1);
	create_insn	(x=0X43EC580C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EC5813);
	set_cmt	(0X43EC582C,	"propHash",	0);
	set_cmt	(0X43EC5831,	"classHash",	0);
	create_insn	(x=0X43EC58B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EC58B8);
	op_hex		(x,	1);
	set_cmt	(0X43EC58CF,	"index",	0);
	set_cmt	(0X43EC58D4,	"interface",	0);
	set_cmt	(0X43EC58E1,	"this",	0);
	set_cmt	(0X43EC58ED,	"m_pPlayer",	0);
	create_insn	(x=0X43EC5918);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC5925);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC592B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC59E8);
	op_hex		(x,	1);
	set_cmt	(0X43EC5A12,	"message",	0);
	set_cmt	(0X43EC5A13,	"a6",	0);
	create_insn	(x=0X43EC5A15);
	op_hex		(x,	1);
	set_cmt	(0X43EC5A18,	"a5",	0);
	set_cmt	(0X43EC5A24,	"a4",	0);
	set_cmt	(0X43EC5A29,	"a3",	0);
	set_cmt	(0X43EC5A2D,	"a2",	0);
	set_cmt	(0X43EC5A2F,	"a1",	0);
	create_insn	(x=0X43EC5A2F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC5A39);
	op_hex		(x,	1);
	create_insn	(x=0X43EC5A51);
	op_hex		(x,	1);
	create_insn	(x=0X43EC5A54);
	op_hex		(x,	1);
	set_cmt	(0X43EC5A6D,	"propHash",	0);
	set_cmt	(0X43EC5A72,	"classHash",	0);
	create_insn	(x=0X43EC5B2D);
	op_hex		(x,	1);
	set_cmt	(0X43EC5B5B,	"message",	0);
	set_cmt	(0X43EC5B5C,	"a6",	0);
	create_insn	(x=0X43EC5B5E);
	op_hex		(x,	1);
	set_cmt	(0X43EC5B61,	"a5",	0);
	set_cmt	(0X43EC5B70,	"a4",	0);
	set_cmt	(0X43EC5B75,	"a3",	0);
	set_cmt	(0X43EC5B79,	"a2",	0);
	set_cmt	(0X43EC5B7B,	"a1",	0);
	create_insn	(x=0X43EC5B7B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC5B85);
	op_hex		(x,	1);
	create_insn	(x=0X43EC5B9D);
	op_hex		(x,	1);
	create_insn	(x=0X43EC5BA0);
	op_hex		(x,	1);
	set_cmt	(0X43EC5BBD,	"propHash",	0);
	set_cmt	(0X43EC5BC2,	"classHash",	0);
	set_cmt	(0X43EC5BEC,	"propHash",	0);
	set_cmt	(0X43EC5BF1,	"classHash",	0);
	create_insn	(x=0X43EC5C57);
	op_hex		(x,	1);
	set_cmt	(0X43EC5C76,	"message",	0);
	set_cmt	(0X43EC5C7A,	"a6",	0);
	create_insn	(x=0X43EC5C7C);
	op_hex		(x,	1);
	set_cmt	(0X43EC5C8F,	"a5",	0);
	set_cmt	(0X43EC5C95,	"a4",	0);
	set_cmt	(0X43EC5C9A,	"a3",	0);
	set_cmt	(0X43EC5C9E,	"a2",	0);
	set_cmt	(0X43EC5CA0,	"a1",	0);
	create_insn	(x=0X43EC5CA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC5CAA);
	op_hex		(x,	1);
	create_insn	(x=0X43EC5CB1);
	op_hex		(x,	1);
	create_insn	(x=0X43EC5CB6);
	op_hex		(x,	1);
	create_insn	(x=0X43EC5CD9);
	op_hex		(x,	1);
	set_cmt	(0X43EC5CDD,	"propHash",	0);
	create_insn	(x=0X43EC5CE2);
	op_hex		(x,	1);
	set_cmt	(0X43EC5CE5,	"classHash",	0);
	create_insn	(0X43EC5CFB);
	create_insn	(0X43EC5D47);
	create_insn	(x=0X43EC5DC4);
	op_hex		(x,	1);
	set_cmt	(0X43EC5E34,	"msg",	0);
	set_cmt	(0X43EC5E3D,	"a6",	0);
	create_insn	(x=0X43EC5E42);
	op_hex		(x,	1);
	set_cmt	(0X43EC5E51,	"a5",	0);
	set_cmt	(0X43EC5E57,	"a4",	0);
	set_cmt	(0X43EC5E5C,	"a3",	0);
	set_cmt	(0X43EC5E60,	"a2",	0);
	set_cmt	(0X43EC5E62,	"a1",	0);
	create_insn	(x=0X43EC5E62);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC5E6C);
	op_hex		(x,	1);
	create_insn	(x=0X43EC5E7C);
	op_hex		(x,	1);
	create_insn	(x=0X43EC5E81);
	op_hex		(x,	1);
	set_cmt	(0X43EC5E90,	"index",	0);
	set_cmt	(0X43EC5E95,	"interface",	0);
	set_cmt	(0X43EC5EA2,	"this",	0);
	set_cmt	(0X43EC5EAE,	"m_pPlayer",	0);
	set_cmt	(0X43EC5EE6,	"index",	0);
	set_cmt	(0X43EC5EEB,	"interface",	0);
	set_cmt	(0X43EC5EF8,	"this",	0);
	create_insn	(x=0X43EC5F79);
	op_hex		(x,	1);
	create_insn	(x=0X43EC5F7D);
	op_hex		(x,	1);
	create_insn	(x=0X43EC6028);
	op_hex		(x,	1);
	create_insn	(x=0X43EC6065);
	op_hex		(x,	1);
	set_cmt	(0X43EC6076,	"message",	0);
	set_cmt	(0X43EC6077,	"a6",	0);
	create_insn	(x=0X43EC6079);
	op_hex		(x,	1);
	set_cmt	(0X43EC607C,	"a5",	0);
	set_cmt	(0X43EC608B,	"a4",	0);
	set_cmt	(0X43EC6090,	"a3",	0);
	set_cmt	(0X43EC6094,	"a2",	0);
	set_cmt	(0X43EC6096,	"a1",	0);
	create_insn	(x=0X43EC6096);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC60A0);
	op_hex		(x,	1);
	create_insn	(0X43EC60BA);
	create_insn	(x=0X43EC60C5);
	op_hex		(x,	1);
	create_insn	(x=0X43EC60C8);
	op_hex		(x,	1);
	create_insn	(0X43EC6128);
	create_insn	(x=0X43EC61E8);
	op_hex		(x,	1);
	set_cmt	(0X43EC6212,	"message",	0);
	set_cmt	(0X43EC6213,	"a6",	0);
	create_insn	(x=0X43EC6215);
	op_hex		(x,	1);
	set_cmt	(0X43EC6218,	"a5",	0);
	set_cmt	(0X43EC6224,	"a4",	0);
	set_cmt	(0X43EC6229,	"a3",	0);
	set_cmt	(0X43EC622D,	"a2",	0);
	set_cmt	(0X43EC622F,	"a1",	0);
	create_insn	(x=0X43EC622F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC6239);
	op_hex		(x,	1);
	create_insn	(x=0X43EC6249);
	op_hex		(x,	1);
	create_insn	(x=0X43EC624E);
	op_hex		(x,	1);
	create_insn	(x=0X43EC6318);
	op_hex		(x,	1);
	set_cmt	(0X43EC6342,	"message",	0);
	set_cmt	(0X43EC6343,	"a6",	0);
	create_insn	(x=0X43EC6345);
	op_hex		(x,	1);
	set_cmt	(0X43EC6348,	"a5",	0);
	set_cmt	(0X43EC6354,	"a4",	0);
	set_cmt	(0X43EC6359,	"a3",	0);
	set_cmt	(0X43EC635D,	"a2",	0);
	set_cmt	(0X43EC635F,	"a1",	0);
	create_insn	(x=0X43EC635F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC6369);
	op_hex		(x,	1);
	create_insn	(x=0X43EC6379);
	op_hex		(x,	1);
	create_insn	(x=0X43EC6383);
	op_hex		(x,	1);
	set_cmt	(0X43EC639C,	"propHash",	0);
	set_cmt	(0X43EC63A1,	"classHash",	0);
	create_insn	(x=0X43EC6458);
	op_hex		(x,	1);
	set_cmt	(0X43EC6482,	"message",	0);
	set_cmt	(0X43EC6483,	"a6",	0);
	create_insn	(x=0X43EC6485);
	op_hex		(x,	1);
	set_cmt	(0X43EC6488,	"a5",	0);
	set_cmt	(0X43EC6494,	"a4",	0);
	set_cmt	(0X43EC6499,	"a3",	0);
	set_cmt	(0X43EC649D,	"a2",	0);
	set_cmt	(0X43EC649F,	"a1",	0);
	create_insn	(x=0X43EC649F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC64A9);
	op_hex		(x,	1);
	set_cmt	(0X43EC64C5,	"propHash",	0);
	set_cmt	(0X43EC64CA,	"classHash",	0);
	create_insn	(x=0X43EC6598);
	op_hex		(x,	1);
	set_cmt	(0X43EC65C2,	"message",	0);
	set_cmt	(0X43EC65C3,	"a6",	0);
	create_insn	(x=0X43EC65C5);
	op_hex		(x,	1);
	set_cmt	(0X43EC65C8,	"a5",	0);
	set_cmt	(0X43EC65D4,	"a4",	0);
	set_cmt	(0X43EC65D9,	"a3",	0);
	set_cmt	(0X43EC65DD,	"a2",	0);
	set_cmt	(0X43EC65DF,	"a1",	0);
	create_insn	(x=0X43EC65DF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC65E9);
	op_hex		(x,	1);
	create_insn	(x=0X43EC65F9);
	op_hex		(x,	1);
	create_insn	(x=0X43EC65FC);
	op_hex		(x,	1);
	create_insn	(x=0X43EC66CB);
	op_hex		(x,	1);
	set_cmt	(0X43EC66F5,	"message",	0);
	set_cmt	(0X43EC66F6,	"a6",	0);
	create_insn	(x=0X43EC66F8);
	op_hex		(x,	1);
	set_cmt	(0X43EC66FB,	"a5",	0);
	set_cmt	(0X43EC6707,	"a4",	0);
	set_cmt	(0X43EC670C,	"a3",	0);
	set_cmt	(0X43EC6710,	"a2",	0);
	set_cmt	(0X43EC6712,	"a1",	0);
	create_insn	(x=0X43EC6712);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC671C);
	op_hex		(x,	1);
	create_insn	(x=0X43EC672C);
	op_hex		(x,	1);
	create_insn	(x=0X43EC672F);
	op_hex		(x,	1);
	set_cmt	(0X43EC6748,	"propHash",	0);
	set_cmt	(0X43EC674D,	"classHash",	0);
	create_insn	(x=0X43EC681B);
	op_hex		(x,	1);
	set_cmt	(0X43EC6845,	"message",	0);
	set_cmt	(0X43EC6846,	"a6",	0);
	create_insn	(x=0X43EC6848);
	op_hex		(x,	1);
	set_cmt	(0X43EC684B,	"a5",	0);
	set_cmt	(0X43EC6857,	"a4",	0);
	set_cmt	(0X43EC685C,	"a3",	0);
	set_cmt	(0X43EC6860,	"a2",	0);
	set_cmt	(0X43EC6862,	"a1",	0);
	create_insn	(x=0X43EC6862);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC686C);
	op_hex		(x,	1);
	set_cmt	(0X43EC68B2,	"player",	0);
	set_cmt	(0X43EC68CF,	"player",	0);
	set_cmt	(0X43EC68E4,	"propHash",	0);
	set_cmt	(0X43EC68E9,	"classHash",	0);
	set_cmt	(0X43EC6906,	"player",	0);
	set_cmt	(0X43EC691B,	"propHash",	0);
	set_cmt	(0X43EC6920,	"classHash",	0);
	set_cmt	(0X43EC6936,	"player",	0);
	create_insn	(0X43EC69AC);
	create_insn	(0X43EC69C9);
	create_insn	(0X43EC6A2D);
	create_insn	(0X43EC6A4B);
	create_insn	(x=0X43EC6A98);
	op_hex		(x,	1);
	create_insn	(x=0X43EC6B88);
	op_hex		(x,	1);
	create_insn	(x=0X43EC6BC7);
	op_hex		(x,	1);
	set_cmt	(0X43EC6BDC,	"message",	0);
	set_cmt	(0X43EC6BDD,	"a6",	0);
	create_insn	(x=0X43EC6BDF);
	op_hex		(x,	1);
	set_cmt	(0X43EC6BF2,	"a5",	0);
	set_cmt	(0X43EC6C06,	"a4",	0);
	set_cmt	(0X43EC6C0B,	"a3",	0);
	set_cmt	(0X43EC6C0F,	"a2",	0);
	set_cmt	(0X43EC6C11,	"a1",	0);
	create_insn	(x=0X43EC6C11);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC6C1B);
	op_hex		(x,	1);
	create_insn	(0X43EC6C30);
	set_cmt	(0X43EC6C56,	"message",	0);
	set_cmt	(0X43EC6C57,	"a6",	0);
	create_insn	(x=0X43EC6C59);
	op_hex		(x,	1);
	set_cmt	(0X43EC6C6C,	"a5",	0);
	set_cmt	(0X43EC6C78,	"a4",	0);
	set_cmt	(0X43EC6C7D,	"a3",	0);
	set_cmt	(0X43EC6C81,	"a2",	0);
	set_cmt	(0X43EC6C83,	"a1",	0);
	create_insn	(x=0X43EC6C83);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC6C8D);
	op_hex		(x,	1);
	set_cmt	(0X43EC6CC2,	"player",	0);
	set_cmt	(0X43EC6CDF,	"player",	0);
	set_cmt	(0X43EC6CF4,	"propHash",	0);
	set_cmt	(0X43EC6CF9,	"classHash",	0);
	set_cmt	(0X43EC6D19,	"switch 84 cases ",	0);
	create_insn	(x=0X43EC6D1F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC6D26,	"switch jump",	0);
	create_insn	(x=0X43EC6D26);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EC6D2D,	"jumptable 43EC6D26 default case, cases 5,6,12,15,18,20-22,31,37,41-59,62,65-84",	1);
	create_insn	(0X43EC6D2D);
	set_name	(0X43EC6D2D,	"def_43EC6D26");
	set_cmt	(0X43EC6D42,	"propHash",	0);
	set_cmt	(0X43EC6D47,	"classHash",	0);
	set_cmt	(0X43EC6D65,	"jumptable 43EC6D26 cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-40,60,61,63,64",	1);
	set_cmt	(0X43EC6D85,	"propHash",	0);
	set_cmt	(0X43EC6D8A,	"classHash",	0);
	set_cmt	(0X43EC6D94,	"player",	0);
	set_cmt	(0X43EC6DBD,	"propHash",	0);
	set_cmt	(0X43EC6DC2,	"classHash",	0);
	create_insn	(x=0X43EC6E0C);
	op_hex		(x,	1);
	create_insn	(0X43EC6E1A);
	create_insn	(x=0X43EC6E40);
	op_hex		(x,	1);
	create_insn	(0X43EC6E4E);
	create_insn	(0X43EC6EAC);
	create_insn	(x=0X43EC6EF7);
	op_hex		(x,	1);
	create_insn	(x=0X43EC6FAD);
	op_hex		(x,	1);
	create_insn	(x=0X43EC701B);
	op_hex		(x,	1);
	create_insn	(x=0X43EC7049);
	op_hex		(x,	1);
	set_cmt	(0X43EC7060,	"message",	0);
	set_cmt	(0X43EC7061,	"a6",	0);
	create_insn	(x=0X43EC7063);
	op_hex		(x,	1);
	set_cmt	(0X43EC7079,	"a5",	0);
	set_cmt	(0X43EC709A,	"a4",	0);
	set_cmt	(0X43EC709F,	"a3",	0);
	set_cmt	(0X43EC70A3,	"a2",	0);
	set_cmt	(0X43EC70A5,	"a1",	0);
	create_insn	(x=0X43EC70A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC70AF);
	op_hex		(x,	1);
	create_insn	(0X43EC70C3);
	create_insn	(x=0X43EC710D);
	op_hex		(x,	1);
	set_cmt	(0X43EC714A,	"message",	0);
	set_cmt	(0X43EC714B,	"a6",	0);
	create_insn	(x=0X43EC714D);
	op_hex		(x,	1);
	set_cmt	(0X43EC7160,	"a5",	0);
	set_cmt	(0X43EC717A,	"a4",	0);
	set_cmt	(0X43EC717F,	"a3",	0);
	set_cmt	(0X43EC7183,	"a2",	0);
	set_cmt	(0X43EC7185,	"a1",	0);
	create_insn	(x=0X43EC7185);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC718F);
	op_hex		(x,	1);
	set_cmt	(0X43EC71D9,	"m_player",	0);
	set_cmt	(0X43EC71F8,	"index",	0);
	set_cmt	(0X43EC71FD,	"interface",	0);
	set_cmt	(0X43EC720A,	"this",	0);
	set_cmt	(0X43EC7236,	"propHash",	0);
	set_cmt	(0X43EC723B,	"classHash",	0);
	create_insn	(x=0X43EC724E);
	op_hex		(x,	1);
	set_cmt	(0X43EC725D,	"index",	0);
	set_cmt	(0X43EC7268,	"interface",	0);
	set_cmt	(0X43EC728A,	"this",	0);
	create_insn	(0X43EC72DC);
	create_insn	(x=0X43EC72EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EC72F2);
	create_insn	(x=0X43EC7303);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC730C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC7312);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EC7328);
	create_insn	(x=0X43EC73D1);
	op_hex		(x,	1);
	create_insn	(0X43EC741A);
	create_insn	(x=0X43EC7427);
	op_hex		(x,	1);
	set_cmt	(0X43EC7440,	"propHash",	0);
	set_cmt	(0X43EC7445,	"classHash",	0);
	set_cmt	(0X43EC748C,	"propHash",	0);
	set_cmt	(0X43EC7491,	"classHash",	0);
	set_cmt	(0X43EC74D0,	"propHash",	0);
	set_cmt	(0X43EC74D5,	"classHash",	0);
	set_cmt	(0X43EC7514,	"propHash",	0);
	set_cmt	(0X43EC7519,	"classHash",	0);
	set_cmt	(0X43EC7543,	"propHash",	0);
	set_cmt	(0X43EC7548,	"classHash",	0);
	set_cmt	(0X43EC75B3,	"propHash",	0);
	set_cmt	(0X43EC75B8,	"classHash",	0);
	set_cmt	(0X43EC75F1,	"propHash",	0);
	set_cmt	(0X43EC75F6,	"classHash",	0);
	create_insn	(x=0X43EC7645);
	op_hex		(x,	1);
	create_insn	(0X43EC767F);
	set_cmt	(0X43EC76AF,	"player",	0);
	set_cmt	(0X43EC76BF,	"player",	0);
	create_insn	(0X43EC76D4);
	create_insn	(0X43EC76E9);
	set_cmt	(0X43EC76FB,	"propHash",	0);
	set_cmt	(0X43EC7700,	"classHash",	0);
	create_insn	(0X43EC7741);
	create_insn	(x=0X43EC7770);
	op_hex		(x,	1);
	create_insn	(x=0X43EC7773);
	op_hex		(x,	1);
	set_cmt	(0X43EC777C,	"player",	0);
	set_cmt	(0X43EC77B6,	"message",	0);
	set_cmt	(0X43EC77BE,	"a6",	0);
	create_insn	(x=0X43EC77C0);
	op_hex		(x,	1);
	set_cmt	(0X43EC77DF,	"a5",	0);
	set_cmt	(0X43EC77F4,	"a4",	0);
	set_cmt	(0X43EC77F9,	"a3",	0);
	set_cmt	(0X43EC77FD,	"a2",	0);
	set_cmt	(0X43EC77FF,	"a1",	0);
	create_insn	(x=0X43EC77FF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC780F);
	op_hex		(x,	1);
	create_insn	(x=0X43EC7826);
	op_hex		(x,	1);
	create_insn	(x=0X43EC7829);
	op_hex		(x,	1);
	create_insn	(x=0X43EC78A9);
	op_hex		(x,	1);
	set_cmt	(0X43EC78E4,	"msg",	0);
	create_insn	(x=0X43EC78EF);
	op_hex		(x,	1);
	set_cmt	(0X43EC78FC,	"a6",	0);
	create_insn	(x=0X43EC7904);
	op_hex		(x,	1);
	set_cmt	(0X43EC7907,	"a5",	0);
	set_cmt	(0X43EC791C,	"a4",	0);
	set_cmt	(0X43EC7921,	"a3",	0);
	set_cmt	(0X43EC7925,	"a2",	0);
	set_cmt	(0X43EC7926,	"a1",	0);
	create_insn	(x=0X43EC7926);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC7945);
	op_hex		(x,	1);
	create_insn	(x=0X43EC795E);
	op_hex		(x,	1);
	create_insn	(x=0X43EC7961);
	op_hex		(x,	1);
	set_cmt	(0X43EC79BF,	"propHash",	0);
	set_cmt	(0X43EC79C4,	"classHash",	0);
	set_cmt	(0X43EC79E5,	"propHash",	0);
	set_cmt	(0X43EC79EA,	"classHash",	0);
	create_insn	(x=0X43EC7A47);
	op_hex		(x,	1);
	set_cmt	(0X43EC7A6C,	"propHash",	0);
	set_cmt	(0X43EC7A71,	"classHash",	0);
	set_cmt	(0X43EC7A92,	"propHash",	0);
	set_cmt	(0X43EC7A97,	"classHash",	0);
	set_cmt	(0X43EC7AC7,	"propHash",	0);
	set_cmt	(0X43EC7ACC,	"classHash",	0);
	set_cmt	(0X43EC7AE5,	"propHash",	0);
	set_cmt	(0X43EC7AEA,	"classHash",	0);
	set_cmt	(0X43EC7B34,	"msg",	0);
	create_insn	(x=0X43EC7B3F);
	op_hex		(x,	1);
	set_cmt	(0X43EC7B4C,	"a6",	0);
	create_insn	(x=0X43EC7B54);
	op_hex		(x,	1);
	set_cmt	(0X43EC7B57,	"a5",	0);
	set_cmt	(0X43EC7B6C,	"a4",	0);
	set_cmt	(0X43EC7B71,	"a3",	0);
	set_cmt	(0X43EC7B78,	"a2",	0);
	set_cmt	(0X43EC7B79,	"a1",	0);
	create_insn	(x=0X43EC7B79);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC7B95);
	op_hex		(x,	1);
	create_insn	(0X43EC7BD9);
	make_array	(0X43EC7C02,	0X2);
	set_cmt	(0X43EC7C04,	"jump table for switch statement",	0);
	create_dword	(x=0X43EC7C04);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EC7C04,	"jpt_43EC6D26");
	set_cmt	(0X43EC7C10,	"indirect table for switch statement",	0);
	create_byte	(0X43EC7C10);
	make_array	(0X43EC7C10,	0X54);
	make_array	(0X43EC7C64,	0XC);
	create_insn	(0X43EC7C70);
	make_array	(0X43EC7C7D,	0X3);
	create_insn	(0X43EC7C80);
	make_array	(0X43EC7C8D,	0X3);
	create_insn	(0X43EC7C90);
	make_array	(0X43EC7C9B,	0X5);
	create_insn	(0X43EC7CA0);
	create_insn	(x=0X43EC7CA3);
	op_hex		(x,	1);
	create_insn	(x=0X43EC7CAB);
	op_hex		(x,	1);
	create_insn	(x=0X43EC7CB9);
	op_hex		(x,	1);
	create_insn	(x=0X43EC7D40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC7D5D);
	op_hex		(x,	1);
	create_insn	(x=0X43EC7D81);
	op_hex		(x,	1);
	set_cmt	(0X43EC7E05,	"this",	0);
	create_insn	(0X43EC7E3F);
	create_insn	(0X43EC7E94);
	create_insn	(x=0X43EC7E9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EC7EAD);
	make_array	(0X43EC7EB2,	0XE);
	create_insn	(0X43EC7EC0);
	create_insn	(x=0X43EC7EF1);
	op_hex		(x,	1);
	make_array	(0X43EC7F13,	0XD);
	create_insn	(0X43EC7F20);
	create_insn	(x=0X43EC7F23);
	op_hex		(x,	1);
	create_insn	(x=0X43EC7F26);
	op_hex		(x,	1);
	create_insn	(x=0X43EC8008);
	op_hex		(x,	1);
	create_insn	(0X43EC8050);
	create_insn	(x=0X43EC8052);
	op_hex		(x,	1);
	create_insn	(x=0X43EC8082);
	op_hex		(x,	1);
	create_insn	(0X43EC80A4);
	set_cmt	(0X43EC8149,	"a3",	0);
	set_cmt	(0X43EC814A,	"a2",	0);
	set_cmt	(0X43EC814B,	"this",	0);
	create_insn	(x=0X43EC81BB);
	op_hex		(x,	1);
	create_insn	(x=0X43EC820B);
	op_hex		(x,	1);
	create_insn	(x=0X43EC826A);
	op_hex		(x,	1);
	create_insn	(x=0X43EC828F);
	op_hex		(x,	1);
	create_insn	(x=0X43EC82F4);
	op_hex		(x,	1);
	create_insn	(x=0X43EC8310);
	op_hex		(x,	1);
	create_insn	(x=0X43EC8346);
	op_hex		(x,	1);
	create_insn	(0X43EC837B);
	create_insn	(x=0X43EC8382);
	op_hex		(x,	1);
	set_cmt	(0X43EC83A6,	"Size",	0);
	create_insn	(x=0X43EC83AC);
	op_hex		(x,	1);
	create_insn	(x=0X43EC83BA);
	op_hex		(x,	1);
	create_insn	(0X43EC83C2);
	set_cmt	(0X43EC83C6,	"Size",	0);
	create_insn	(x=0X43EC83CC);
	op_hex		(x,	1);
	create_insn	(0X43EC83D3);
	create_insn	(x=0X43EC83E4);
	op_hex		(x,	1);
	create_insn	(0X43EC842F);
	create_insn	(x=0X43EC8436);
	op_hex		(x,	1);
	set_cmt	(0X43EC845A,	"Size",	0);
	create_insn	(x=0X43EC8460);
	op_hex		(x,	1);
	create_insn	(x=0X43EC846E);
	op_hex		(x,	1);
	create_insn	(0X43EC8476);
	set_cmt	(0X43EC847A,	"Size",	0);
	create_insn	(x=0X43EC8480);
	op_hex		(x,	1);
	create_insn	(0X43EC8487);
	create_insn	(x=0X43EC84A5);
	op_hex		(x,	1);
	create_insn	(x=0X43EC84E1);
	op_hex		(x,	1);
	create_insn	(0X43EC84ED);
	create_insn	(x=0X43EC852C);
	op_hex		(x,	1);
	create_insn	(x=0X43EC8565);
	op_hex		(x,	1);
	create_insn	(x=0X43EC8591);
	op_hex		(x,	1);
	create_insn	(x=0X43EC85C5);
	op_hex		(x,	1);
	create_insn	(x=0X43EC85F1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EC85FB);
	make_array	(0X43EC8606,	0XA);
	create_insn	(0X43EC8610);
	create_insn	(x=0X43EC8613);
	op_hex		(x,	1);
	create_insn	(x=0X43EC869D);
	op_hex		(x,	1);
	create_insn	(0X43EC86E0);
	create_insn	(x=0X43EC86E2);
	op_hex		(x,	1);
	create_insn	(x=0X43EC870E);
	op_hex		(x,	1);
	create_insn	(0X43EC8729);
	create_insn	(0X43EC8746);
	create_insn	(x=0X43EC8750);
	op_hex		(x,	1);
	create_insn	(x=0X43EC8753);
	op_hex		(x,	1);
	make_array	(0X43EC8759,	0X7);
	create_insn	(0X43EC8760);
	set_name	(0X43EC8760,	"C_SDK::Security::FNV1A::SearchSignature");
	create_insn	(x=0X43EC8763);
	op_hex		(x,	1);
	create_insn	(x=0X43EC8769);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC879B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC87A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC87AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC87B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC87BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC87CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC87D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC87EA);
	op_stkvar	(x,	0);
	create_insn	(0X43EC87F9);
	create_insn	(x=0X43EC87FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8804);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8807);
	op_hex		(x,	1);
	create_insn	(x=0X43EC880A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC8814);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC881C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC8821);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8826);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8829);
	op_stkvar	(x,	1);
	set_cmt	(0X43EC882C,	"hash",	0);
	create_insn	(x=0X43EC884F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8854);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC8870);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC887B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EC888B);
	create_insn	(x=0X43EC888D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8896);
	op_stkvar	(x,	0);
	create_insn	(0X43EC88A6);
	create_insn	(x=0X43EC88AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC88BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC88D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC88D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC88E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC88F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC88FB);
	op_stkvar	(x,	0);
	create_insn	(0X43EC8901);
	create_insn	(x=0X43EC8909);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC890D);
	op_stkvar	(x,	0);
	create_insn	(0X43EC8913);
	create_insn	(x=0X43EC891B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC891F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC8924);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8929);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC8941);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC8950);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8962);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8972);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8975);
	op_stkvar	(x,	1);
	make_array	(0X43EC897E,	0X2);
	create_insn	(0X43EC8980);
	set_name	(0X43EC8980,	"C_SDK::Security::FNV1A::SearchSignature::Engine");
	create_insn	(x=0X43EC8983);
	op_hex		(x,	1);
	create_insn	(x=0X43EC8989);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC89BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC89C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC89CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC89D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC89DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC89EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC89F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC8A0A);
	op_stkvar	(x,	0);
	create_insn	(0X43EC8A19);
	create_insn	(x=0X43EC8A1B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8A27);
	op_hex		(x,	1);
	create_insn	(x=0X43EC8A2A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC8A34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC8A3C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC8A41);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8A46);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8A49);
	op_stkvar	(x,	1);
	set_cmt	(0X43EC8A4C,	"hash",	0);
	create_insn	(x=0X43EC8A6F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8A74);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC8A90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC8A9B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EC8AAB);
	create_insn	(x=0X43EC8AAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8AB6);
	op_stkvar	(x,	0);
	create_insn	(0X43EC8AC6);
	create_insn	(x=0X43EC8ACD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8ADC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC8AF1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8AF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC8B01);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8B17);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8B1B);
	op_stkvar	(x,	0);
	create_insn	(0X43EC8B21);
	create_insn	(x=0X43EC8B29);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8B2D);
	op_stkvar	(x,	0);
	create_insn	(0X43EC8B33);
	create_insn	(x=0X43EC8B3B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8B3F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC8B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8B49);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC8B61);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC8B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8B93);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC8B96);
	op_stkvar	(x,	1);
	create_insn	(0X43EC8BA0);
	create_insn	(x=0X43EC8BA3);
	op_hex		(x,	1);
	create_insn	(0X43EC8C39);
	create_insn	(x=0X43EC8C47);
	op_hex		(x,	1);
	create_insn	(x=0X43EC8C4A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC8C54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EC8C6C,	"hash",	0);
	create_insn	(x=0X43EC8CB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC8CBB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EC8CCB);
	create_insn	(0X43EC8CE6);
	create_insn	(0X43EC8D41);
	create_insn	(0X43EC8D53);
	create_insn	(0X43EC8DC0);
	make_array	(0X43EC8DC8,	0X8);
	create_insn	(0X43EC8DD0);
	create_insn	(x=0X43EC8DD3);
	op_hex		(x,	1);
	create_insn	(0X43EC8E69);
	create_insn	(x=0X43EC8E77);
	op_hex		(x,	1);
	create_insn	(x=0X43EC8E7A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EC8E84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EC8E9C,	"hash",	0);
	create_insn	(x=0X43EC8EE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC8EEB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EC8EFB);
	create_insn	(0X43EC8F16);
	create_insn	(0X43EC8F71);
	create_insn	(0X43EC8F83);
	create_insn	(0X43EC8FF0);
	create_insn	(x=0X43EC8FF3);
	op_hex		(x,	1);
	create_insn	(x=0X43EC8FF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_byte	(0X43EC904A);
	create_insn	(0X43EC904B);
	create_insn	(0X43EC904E);
	create_insn	(x=0X43EC905F);
	op_hex		(x,	1);
	create_insn	(0X43EC9065);
	create_insn	(x=0X43EC9069);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC9080,	"size",	0);
	create_insn	(0X43EC9080);
	set_name	(0X43EC9080,	"OneTap::Startup::Engine::ScanGameTask");
	create_insn	(x=0X43EC9090);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC909D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC90A3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC90A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC90AE);
	op_stkvar	(x,	1);
	set_cmt	(0X43EC90BA,	"buffer",	0);
	create_insn	(x=0X43EC90BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC90CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EC90D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC90D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EC90EA);
	op_stkvar	(x,	1);
	create_insn	(0X43EC9100);
	set_name	(0X43EC9100,	"OneTap::Features::Engine::Instance");
	create_insn	(x=0X43EC911B);
	op_hex		(x,	1);
	create_insn	(0X43EC91AA);
	create_insn	(0X43EC91C2);
	create_insn	(x=0X43EC921F);
	op_hex		(x,	1);
	create_insn	(x=0X43EC9222);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC923A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC9244,	"this",	0);
	set_cmt	(0X43EC924A,	"a3",	0);
	set_cmt	(0X43EC924C,	"a2",	0);
	create_insn	(x=0X43EC9258);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC92C5);
	op_hex		(x,	1);
	create_insn	(0X43EC9354);
	create_insn	(0X43EC936C);
	create_insn	(x=0X43EC93CE);
	op_hex		(x,	1);
	create_insn	(x=0X43EC93D1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC93E9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC93F3,	"this",	0);
	set_cmt	(0X43EC93F9,	"a3",	0);
	set_cmt	(0X43EC93FB,	"a2",	0);
	create_insn	(x=0X43EC9407);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC947B);
	op_hex		(x,	1);
	create_insn	(0X43EC950A);
	create_insn	(0X43EC9522);
	create_insn	(x=0X43EC957F);
	op_hex		(x,	1);
	create_insn	(x=0X43EC9582);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC959A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC95A4,	"this",	0);
	set_cmt	(0X43EC95AA,	"a3",	0);
	set_cmt	(0X43EC95AC,	"a2",	0);
	create_insn	(x=0X43EC95B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC962B);
	op_hex		(x,	1);
	create_insn	(0X43EC96BA);
	create_insn	(0X43EC96D2);
	create_insn	(x=0X43EC972F);
	op_hex		(x,	1);
	create_insn	(x=0X43EC9732);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC974A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC9754,	"this",	0);
	set_cmt	(0X43EC975A,	"a3",	0);
	set_cmt	(0X43EC975C,	"a2",	0);
	create_insn	(x=0X43EC9768);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC97D5);
	op_hex		(x,	1);
	create_insn	(0X43EC9864);
	create_insn	(0X43EC987C);
	create_insn	(x=0X43EC98DE);
	op_hex		(x,	1);
	create_insn	(x=0X43EC98E1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC98F9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC9903,	"this",	0);
	set_cmt	(0X43EC9909,	"a3",	0);
	set_cmt	(0X43EC990B,	"a2",	0);
	create_insn	(x=0X43EC9917);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC998E);
	op_hex		(x,	1);
	create_insn	(0X43EC9A23);
	create_insn	(0X43EC9A3B);
	create_insn	(x=0X43EC9A9E);
	op_hex		(x,	1);
	create_insn	(x=0X43EC9AA1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC9AB9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC9AC3,	"this",	0);
	set_cmt	(0X43EC9AC9,	"a3",	0);
	set_cmt	(0X43EC9ACB,	"a2",	0);
	create_insn	(x=0X43EC9AD7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC9B45);
	op_hex		(x,	1);
	create_insn	(0X43EC9BD4);
	create_insn	(0X43EC9BEC);
	create_insn	(x=0X43EC9C4E);
	op_hex		(x,	1);
	create_insn	(x=0X43EC9C51);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC9C69);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC9C73,	"this",	0);
	set_cmt	(0X43EC9C79,	"a3",	0);
	set_cmt	(0X43EC9C7B,	"a2",	0);
	create_insn	(x=0X43EC9C87);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC9CFB);
	op_hex		(x,	1);
	create_insn	(0X43EC9D8A);
	create_insn	(0X43EC9DA2);
	create_insn	(x=0X43EC9DFF);
	op_hex		(x,	1);
	create_insn	(x=0X43EC9E02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC9E1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC9E24,	"this",	0);
	set_cmt	(0X43EC9E2A,	"a3",	0);
	set_cmt	(0X43EC9E2C,	"a2",	0);
	create_insn	(x=0X43EC9E38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC9EAF);
	op_hex		(x,	1);
	create_insn	(0X43EC9F43);
	create_insn	(0X43EC9F5B);
	create_insn	(x=0X43EC9FBE);
	op_hex		(x,	1);
	create_insn	(x=0X43EC9FC1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EC9FD9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EC9FE3,	"this",	0);
	set_cmt	(0X43EC9FE9,	"a3",	0);
	set_cmt	(0X43EC9FEB,	"a2",	0);
	create_insn	(x=0X43EC9FF7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECA065);
	op_hex		(x,	1);
	create_insn	(0X43ECA0F4);
	create_insn	(0X43ECA10C);
	create_insn	(x=0X43ECA16E);
	op_hex		(x,	1);
	create_insn	(x=0X43ECA171);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECA189);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECA193,	"this",	0);
	set_cmt	(0X43ECA199,	"a3",	0);
	set_cmt	(0X43ECA19B,	"a2",	0);
	create_insn	(x=0X43ECA1A7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECA22B);
	op_hex		(x,	1);
	create_insn	(0X43ECA2BA);
	create_insn	(0X43ECA2D2);
	create_insn	(x=0X43ECA32F);
	op_hex		(x,	1);
	create_insn	(x=0X43ECA332);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECA34A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECA354,	"this",	0);
	set_cmt	(0X43ECA35A,	"a3",	0);
	set_cmt	(0X43ECA35C,	"a2",	0);
	create_insn	(x=0X43ECA368);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECA3C8);
	op_hex		(x,	1);
	create_insn	(0X43ECA457);
	create_insn	(0X43ECA46F);
	create_insn	(x=0X43ECA4CE);
	op_hex		(x,	1);
	create_insn	(x=0X43ECA4D1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECA4E9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECA4F3,	"this",	0);
	set_cmt	(0X43ECA4F9,	"a3",	0);
	set_cmt	(0X43ECA4FB,	"a2",	0);
	create_insn	(x=0X43ECA507);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECA57B);
	op_hex		(x,	1);
	create_insn	(0X43ECA60A);
	create_insn	(0X43ECA622);
	create_insn	(x=0X43ECA67F);
	op_hex		(x,	1);
	create_insn	(x=0X43ECA682);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECA69A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECA6A4,	"this",	0);
	set_cmt	(0X43ECA6AA,	"a3",	0);
	set_cmt	(0X43ECA6AC,	"a2",	0);
	create_insn	(x=0X43ECA6B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECA73B);
	op_hex		(x,	1);
	create_insn	(0X43ECA7CA);
	create_insn	(0X43ECA7E2);
	create_insn	(x=0X43ECA83F);
	op_hex		(x,	1);
	create_insn	(x=0X43ECA842);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECA85A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECA864,	"this",	0);
	set_cmt	(0X43ECA86A,	"a3",	0);
	set_cmt	(0X43ECA86C,	"a2",	0);
	create_insn	(x=0X43ECA878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECA8EE);
	op_hex		(x,	1);
	create_insn	(0X43ECA983);
	create_insn	(0X43ECA99B);
	create_insn	(x=0X43ECA9FE);
	op_hex		(x,	1);
	create_insn	(x=0X43ECAA01);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECAA19);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECAA23,	"this",	0);
	set_cmt	(0X43ECAA29,	"a3",	0);
	set_cmt	(0X43ECAA2B,	"a2",	0);
	create_insn	(x=0X43ECAA37);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECAAAB);
	op_hex		(x,	1);
	create_insn	(0X43ECAB3A);
	create_insn	(0X43ECAB52);
	create_insn	(x=0X43ECABAF);
	op_hex		(x,	1);
	create_insn	(x=0X43ECABB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECABCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECABD4,	"this",	0);
	set_cmt	(0X43ECABDA,	"a3",	0);
	set_cmt	(0X43ECABDC,	"a2",	0);
	create_insn	(x=0X43ECABE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECAC55);
	op_hex		(x,	1);
	create_insn	(0X43ECACE4);
	create_insn	(0X43ECACFC);
	create_insn	(x=0X43ECAD5E);
	op_hex		(x,	1);
	create_insn	(x=0X43ECAD61);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECAD79);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECAD83,	"this",	0);
	set_cmt	(0X43ECAD89,	"a3",	0);
	set_cmt	(0X43ECAD8B,	"a2",	0);
	create_insn	(x=0X43ECAD97);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECAE05);
	op_hex		(x,	1);
	create_insn	(0X43ECAE94);
	create_insn	(0X43ECAEAC);
	create_insn	(x=0X43ECAF0E);
	op_hex		(x,	1);
	create_insn	(x=0X43ECAF11);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECAF29);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECAF33,	"this",	0);
	set_cmt	(0X43ECAF39,	"a3",	0);
	set_cmt	(0X43ECAF3B,	"a2",	0);
	create_insn	(x=0X43ECAF47);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECAFBE);
	op_hex		(x,	1);
	create_insn	(0X43ECB053);
	create_insn	(0X43ECB06B);
	create_insn	(x=0X43ECB0CE);
	op_hex		(x,	1);
	create_insn	(x=0X43ECB0D1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECB0E9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECB0F3,	"this",	0);
	set_cmt	(0X43ECB0F9,	"a3",	0);
	set_cmt	(0X43ECB0FB,	"a2",	0);
	create_insn	(x=0X43ECB107);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECB175);
	op_hex		(x,	1);
	create_insn	(0X43ECB204);
	create_insn	(0X43ECB21C);
	create_insn	(x=0X43ECB27E);
	op_hex		(x,	1);
	create_insn	(x=0X43ECB281);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECB299);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECB2A3,	"this",	0);
	set_cmt	(0X43ECB2A9,	"a3",	0);
	set_cmt	(0X43ECB2AB,	"a2",	0);
	create_insn	(x=0X43ECB2B7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECB31D);
	op_hex		(x,	1);
	create_insn	(0X43ECB3B3);
	create_insn	(0X43ECB3CB);
	create_insn	(x=0X43ECB42E);
	op_hex		(x,	1);
	create_insn	(x=0X43ECB431);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECB446);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECB450,	"this",	0);
	set_cmt	(0X43ECB453,	"a3",	0);
	set_cmt	(0X43ECB455,	"a2",	0);
	create_insn	(x=0X43ECB45E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECB4F3);
	create_insn	(0X43ECB50B);
	set_cmt	(0X43ECB56E,	"a3",	0);
	set_cmt	(0X43ECB570,	"a2",	0);
	set_cmt	(0X43ECB576,	"this",	0);
	create_insn	(x=0X43ECB576);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECB57B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECB590);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECB60B);
	create_insn	(0X43ECB623);
	set_cmt	(0X43ECB68D,	"a3",	0);
	set_cmt	(0X43ECB68F,	"a2",	0);
	set_cmt	(0X43ECB695,	"this",	0);
	create_insn	(x=0X43ECB695);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECB69A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECB6AF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECB72A);
	create_insn	(0X43ECB742);
	set_cmt	(0X43ECB7A2,	"a3",	0);
	set_cmt	(0X43ECB7A4,	"a2",	0);
	set_cmt	(0X43ECB7AA,	"this",	0);
	create_insn	(x=0X43ECB7AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECB7AF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECB7C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECB849);
	create_insn	(0X43ECB861);
	set_cmt	(0X43ECB8C1,	"a3",	0);
	set_cmt	(0X43ECB8C3,	"a2",	0);
	set_cmt	(0X43ECB8C6,	"this",	0);
	create_insn	(x=0X43ECB8C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECB8CB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECB8E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECB96A);
	create_insn	(0X43ECB982);
	set_cmt	(0X43ECB9DF,	"a3",	0);
	set_cmt	(0X43ECB9E1,	"a2",	0);
	set_cmt	(0X43ECB9E4,	"this",	0);
	create_insn	(x=0X43ECB9E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECB9E9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECB9F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECBA83);
	create_insn	(0X43ECBA9B);
	set_cmt	(0X43ECBAFE,	"a3",	0);
	set_cmt	(0X43ECBB00,	"a2",	0);
	set_cmt	(0X43ECBB03,	"this",	0);
	create_insn	(x=0X43ECBB03);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECBB08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECBB17);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECBB22,	"hash",	0);
	create_insn	(0X43ECBBB3);
	create_insn	(0X43ECBBCB);
	set_cmt	(0X43ECBC2E,	"a3",	0);
	set_cmt	(0X43ECBC30,	"a2",	0);
	set_cmt	(0X43ECBC36,	"this",	0);
	create_insn	(x=0X43ECBC36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECBC3B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECBC4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECBCCB);
	op_hex		(x,	1);
	create_insn	(x=0X43ECBD17);
	op_hex		(x,	1);
	create_insn	(0X43ECBD83);
	create_insn	(0X43ECBD9B);
	set_cmt	(0X43ECBDFE,	"a3",	0);
	set_cmt	(0X43ECBE00,	"a2",	0);
	set_cmt	(0X43ECBE03,	"this",	0);
	create_insn	(x=0X43ECBE03);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECBE08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECBE1D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECBEA3);
	create_insn	(0X43ECBEBB);
	set_cmt	(0X43ECBF1E,	"a3",	0);
	set_cmt	(0X43ECBF20,	"a2",	0);
	set_cmt	(0X43ECBF26,	"this",	0);
	create_insn	(x=0X43ECBF26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECBF2B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECBF3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECBFBB);
	op_hex		(x,	1);
	create_insn	(0X43ECC049);
	create_insn	(0X43ECC061);
	set_cmt	(0X43ECC0C1,	"a3",	0);
	set_cmt	(0X43ECC0C3,	"a2",	0);
	set_cmt	(0X43ECC0C6,	"this",	0);
	create_insn	(x=0X43ECC0C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC0CB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC0E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC15D);
	op_hex		(x,	1);
	create_insn	(0X43ECC1E8);
	create_insn	(0X43ECC200);
	set_cmt	(0X43ECC25E,	"a3",	0);
	set_cmt	(0X43ECC260,	"a2",	0);
	set_cmt	(0X43ECC263,	"this",	0);
	create_insn	(x=0X43ECC263);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC268);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC277);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC28D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC297);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC2A1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC2B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC2CD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC2DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECC2EA,	"interface",	0);
	set_cmt	(0X43ECC2F0,	"proxy",	0);
	create_insn	(x=0X43ECC2F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC2FF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC313);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC322);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC336);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC345);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC356);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC365);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECC373,	"a2",	0);
	set_cmt	(0X43ECC376,	"a1",	0);
	create_insn	(x=0X43ECC376);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC385);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC396);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC3A5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC3B6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC3C5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC3D9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC3E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC3FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC40B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC41C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC42B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECC435,	"a3",	0);
	set_cmt	(0X43ECC439,	"interface",	0);
	set_cmt	(0X43ECC43C,	"proxy",	0);
	create_insn	(x=0X43ECC43C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC44B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC45C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC46B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC47C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC48B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECC495,	"a3",	0);
	set_cmt	(0X43ECC499,	"a2",	0);
	set_cmt	(0X43ECC49C,	"a1",	0);
	create_insn	(x=0X43ECC49C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC4AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC4B7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC4C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECC4D0,	"a3",	0);
	set_cmt	(0X43ECC4D4,	"interface",	0);
	set_cmt	(0X43ECC4D7,	"proxy",	0);
	create_insn	(x=0X43ECC4D7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC4E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC4FA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC509);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC51D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC531);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECC536,	"a3",	0);
	set_cmt	(0X43ECC53A,	"interface",	0);
	set_cmt	(0X43ECC540,	"proxy",	0);
	create_insn	(x=0X43ECC540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC54F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC560);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC56F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECC579,	"a3",	0);
	set_cmt	(0X43ECC57D,	"interface",	0);
	set_cmt	(0X43ECC580,	"proxy",	0);
	create_insn	(x=0X43ECC580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC58F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC5A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC5AF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC5C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC5CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC5E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC5EA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC618);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC636);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC66B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC693);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC698);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC6A9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC6AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC6C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC6C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECC6D8,	"a3",	0);
	set_cmt	(0X43ECC6DA,	"interface",	0);
	set_cmt	(0X43ECC6DF,	"proxy",	0);
	create_insn	(x=0X43ECC6DF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC6E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECC6F3,	"a3",	0);
	set_cmt	(0X43ECC6F5,	"interface",	0);
	set_cmt	(0X43ECC6FA,	"proxy",	0);
	create_insn	(x=0X43ECC6FA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC6FF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC715);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC71A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC731);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC73B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC74D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC757);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC769);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC773);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ECC77D,	"a3",	0);
	set_cmt	(0X43ECC77F,	"interface",	0);
	set_cmt	(0X43ECC784,	"proxy",	0);
	create_insn	(x=0X43ECC784);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC789);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC7A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC7AA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC7BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC7C6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ECC7D0,	"a3",	0);
	set_cmt	(0X43ECC7D2,	"interface",	0);
	set_cmt	(0X43ECC7D7,	"proxy",	0);
	create_insn	(x=0X43ECC7D7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC7DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC7FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC802);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ECC80C,	"a3",	0);
	set_cmt	(0X43ECC80E,	"interface",	0);
	set_cmt	(0X43ECC80F,	"proxy",	0);
	create_insn	(x=0X43ECC80F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC814);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC825);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC82A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECC839,	"a3",	0);
	set_cmt	(0X43ECC83B,	"interface",	0);
	set_cmt	(0X43ECC840,	"proxy",	0);
	create_insn	(x=0X43ECC840);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC845);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC85B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC860);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC876);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC87B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECC88C,	"a2",	0);
	create_insn	(x=0X43ECC892);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECC89C,	"a1",	0);
	create_insn	(x=0X43ECC89C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC8AD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC8B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECC8D7,	"a3",	0);
	create_insn	(x=0X43ECC8E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECC8E5,	"interface",	0);
	set_cmt	(0X43ECC8E6,	"proxy",	0);
	create_insn	(x=0X43ECC8E6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ECC8F8,	"a3",	0);
	create_insn	(x=0X43ECC901);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECC906,	"interface",	0);
	set_cmt	(0X43ECC907,	"proxy",	0);
	create_insn	(x=0X43ECC907);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC919);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC923);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECC935);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECC93F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43ECC9BB);
	create_insn	(0X43ECC9D3);
	create_insn	(x=0X43ECCA30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECCA3A,	"hash",	0);
	create_insn	(x=0X43ECCA59);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECCA6D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECCA8F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECCA94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECCAA5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECCABD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECCAD7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECCB66,	"index",	0);
	set_cmt	(0X43ECCB6B,	"interface",	0);
	create_insn	(x=0X43ECCC12);
	op_stkvar	(x,	0);
	set_cmt	(0X43ECCC9F,	"index",	0);
	set_cmt	(0X43ECCCA4,	"interface",	0);
	create_insn	(0X43ECCCD0);
	create_insn	(0X43ECCCD8);
	create_insn	(0X43ECCCE0);
	make_array	(0X43ECCCE5,	0X1B);
	create_insn	(0X43ECCD00);
	create_insn	(x=0X43ECCD22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECCD29);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECCD30);
	op_hex		(x,	1);
	create_insn	(x=0X43ECCD45);
	op_hex		(x,	1);
	create_insn	(x=0X43ECCD5A);
	op_hex		(x,	1);
	create_insn	(0X43ECCD63);
	create_insn	(x=0X43ECCFB4);
	op_hex		(x,	1);
	create_insn	(x=0X43ECCFD7);
	op_hex		(x,	1);
	set_cmt	(0X43ECCFFA,	"m_player",	0);
	create_insn	(x=0X43ECD02B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECD032);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43ECD069,	0X7);
	set_cmt	(0X43ECD070,	"interface",	0);
	create_insn	(0X43ECD070);
	set_cmt	(0X43ECD076,	"index",	0);
	set_cmt	(0X43ECD08A,	"this",	0);
	set_cmt	(0X43ECD0A0,	"this",	0);
	create_insn	(0X43ECD100);
	set_name	(0X43ECD100,	"OneTap::Features::Hooks::InPrediction");
	set_cmt	(0X43ECD10A,	"index",	0);
	set_cmt	(0X43ECD112,	"interface",	0);
	set_cmt	(0X43ECD11F,	"this",	0);
	set_cmt	(0X43ECD12B,	"_DWORD",	0);
	set_cmt	(0X43ECD12D,	"_DWORD",	0);
	create_insn	(x=0X43ECD13D);
	op_stkvar	(x,	1);
	create_insn	(0X43ECD15E);
	make_array	(0X43ECD16C,	0X4);
	create_insn	(0X43ECD170);
	create_insn	(0X43ECD185);
	make_array	(0X43ECD18D,	0X3);
	create_insn	(0X43ECD190);
	create_insn	(0X43ECD1A9);
	make_array	(0X43ECD1B1,	0XF);
	create_insn	(0X43ECD1C0);
	create_insn	(0X43ECD1D4);
	create_insn	(0X43ECD1F7);
	make_array	(0X43ECD1FB,	0X5);
	create_insn	(0X43ECD200);
	create_insn	(x=0X43ECD203);
	op_hex		(x,	1);
	create_insn	(x=0X43ECD206);
	op_hex		(x,	1);
	create_insn	(x=0X43ECD29D);
	op_hex		(x,	1);
	create_insn	(x=0X43ECD308);
	op_hex		(x,	1);
	create_insn	(x=0X43ECD368);
	op_hex		(x,	1);
	create_insn	(x=0X43ECD36B);
	op_hex		(x,	1);
	set_cmt	(0X43ECD399,	"_DWORD",	0);
	set_cmt	(0X43ECD39D,	"_DWORD",	0);
	create_insn	(0X43ECD3AC);
	create_insn	(x=0X43ECD3B0);
	op_hex		(x,	1);
	create_insn	(x=0X43ECD3B3);
	op_hex		(x,	1);
	set_cmt	(0X43ECD3E5,	"_DWORD",	0);
	set_cmt	(0X43ECD3E9,	"_DWORD",	0);
	create_insn	(0X43ECD3F8);
	make_array	(0X43ECD40D,	0X3);
	create_insn	(0X43ECD410);
	create_insn	(0X43ECD43A);
	make_array	(0X43ECD43D,	0X3);
	create_insn	(0X43ECD440);
	create_insn	(x=0X43ECD443);
	op_hex		(x,	1);
	create_insn	(x=0X43ECD446);
	op_hex		(x,	1);
	create_insn	(0X43ECD462);
	create_insn	(0X43ECD687);
	create_insn	(0X43ECD720);
	create_insn	(x=0X43ECD728);
	op_hex		(x,	1);
	set_cmt	(0X43ECD73B,	"propHash",	0);
	set_cmt	(0X43ECD740,	"classHash",	0);
	set_cmt	(0X43ECD760,	"propHash",	0);
	set_cmt	(0X43ECD765,	"classHash",	0);
	set_cmt	(0X43ECD797,	"propHash",	0);
	set_cmt	(0X43ECD79C,	"classHash",	0);
	create_insn	(x=0X43ECD7CC);
	op_hex		(x,	1);
	set_cmt	(0X43ECD7D0,	"propHash",	0);
	create_insn	(x=0X43ECD7D5);
	op_hex		(x,	1);
	set_cmt	(0X43ECD7D8,	"classHash",	0);
	create_insn	(0X43ECD7EE);
	set_cmt	(0X43ECD805,	"propHash",	0);
	set_cmt	(0X43ECD80A,	"classHash",	0);
	set_cmt	(0X43ECD82C,	"propHash",	0);
	set_cmt	(0X43ECD831,	"classHash",	0);
	set_cmt	(0X43ECD851,	"propHash",	0);
	set_cmt	(0X43ECD856,	"classHash",	0);
	set_cmt	(0X43ECD888,	"propHash",	0);
	set_cmt	(0X43ECD88D,	"classHash",	0);
	set_cmt	(0X43ECD8EA,	"propHash",	0);
	set_cmt	(0X43ECD8EF,	"classHash",	0);
	create_insn	(x=0X43ECD964);
	op_hex		(x,	1);
	create_insn	(x=0X43ECD974);
	op_hex		(x,	1);
	create_insn	(0X43ECD980);
	create_insn	(x=0X43ECD983);
	op_hex		(x,	1);
	create_insn	(x=0X43ECD99C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECD9A5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECD9AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECD9B7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECD9BD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECD9C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECD9CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECD9DD);
	create_insn	(x=0X43ECDA19);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECDA22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECDA29);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECDA2F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECDA41);
	create_insn	(x=0X43ECDA57);
	op_hex		(x,	1);
	set_cmt	(0X43ECDA5B,	"propHash",	0);
	create_insn	(x=0X43ECDA60);
	op_hex		(x,	1);
	set_cmt	(0X43ECDA63,	"classHash",	0);
	create_insn	(0X43ECDA79);
	set_cmt	(0X43ECDA8F,	"propHash",	0);
	set_cmt	(0X43ECDA94,	"classHash",	0);
	set_cmt	(0X43ECDAB2,	"propHash",	0);
	set_cmt	(0X43ECDAB7,	"classHash",	0);
	create_insn	(0X43ECDAD7);
	set_cmt	(0X43ECDAEA,	"propHash",	0);
	set_cmt	(0X43ECDAEF,	"classHash",	0);
	create_insn	(0X43ECDB05);
	set_cmt	(0X43ECDB51,	"propHash",	0);
	set_cmt	(0X43ECDB56,	"classHash",	0);
	set_cmt	(0X43ECDB86,	"propHash",	0);
	set_cmt	(0X43ECDB8B,	"classHash",	0);
	set_cmt	(0X43ECDBBB,	"propHash",	0);
	set_cmt	(0X43ECDBC0,	"classHash",	0);
	set_cmt	(0X43ECDBF0,	"propHash",	0);
	set_cmt	(0X43ECDBF5,	"classHash",	0);
	set_cmt	(0X43ECDC25,	"propHash",	0);
	set_cmt	(0X43ECDC2A,	"classHash",	0);
	create_insn	(x=0X43ECDC55);
	op_hex		(x,	1);
	set_cmt	(0X43ECDC59,	"propHash",	0);
	create_insn	(x=0X43ECDC5E);
	op_hex		(x,	1);
	set_cmt	(0X43ECDC61,	"classHash",	0);
	create_insn	(0X43ECDC77);
	create_insn	(0X43ECDCB5);
	create_insn	(x=0X43ECDCB9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECDCD2,	"index",	0);
	set_cmt	(0X43ECDCD7,	"interface",	0);
	set_cmt	(0X43ECDCE4,	"this",	0);
	create_insn	(0X43ECDD0D);
	create_insn	(0X43ECDD31);
	create_insn	(x=0X43ECDD4A);
	op_hex		(x,	1);
	create_insn	(x=0X43ECDD67);
	op_hex		(x,	1);
	create_insn	(x=0X43ECDD7E);
	op_hex		(x,	1);
	create_insn	(x=0X43ECDD9F);
	op_hex		(x,	1);
	create_insn	(x=0X43ECDDBC);
	op_hex		(x,	1);
	create_insn	(x=0X43ECDDD3);
	op_hex		(x,	1);
	create_insn	(0X43ECDDDF);
	create_insn	(x=0X43ECDDF6);
	op_hex		(x,	1);
	create_insn	(x=0X43ECDE0C);
	op_hex		(x,	1);
	make_array	(0X43ECDE18,	0X8);
	create_insn	(0X43ECDE20);
	create_insn	(x=0X43ECDE23);
	op_hex		(x,	1);
	update_extra_cmt		(0X43ECDE2F,	E_PREV + 0,	"\x01\x04; 52:   player_idx = *(player_table + 0x64);");
	update_extra_cmt		(0X43ECDE32,	E_PREV + 0,	"\x01\x04; 53:   v6 = (24 * player_idx + 0x44722300);");
	update_extra_cmt		(0X43ECDE3C,	E_PREV + 0,	"\x01\x04; 54:   v52 = (24 * player_idx + 0x44722300);");
	update_extra_cmt		(0X43ECDE3F,	E_PREV + 0,	"\x01\x04; 55:   if ( 24 * player_idx == 0xBB8DDD00 )");
	update_extra_cmt		(0X43ECDE47,	E_PREV + 0,	"\x01\x04; 57:   if ( std::map::player_table_data[6 * player_idx] != player_table )");
	update_extra_cmt		(0X43ECDE4F,	E_PREV + 0,	"\x01\x04; 59:   m_pPlayer = std::map::player_table_data_0[6 * player_idx];");
	update_extra_cmt		(0X43ECDE52,	E_PREV + 0,	"\x01\x04; 60:   if ( !m_pPlayer )");
	update_extra_cmt		(0X43ECDE5A,	E_PREV + 0,	"\x01\x04; 62:   if ( player_idx > 0x40 )");
	update_extra_cmt		(0X43ECDE5F,	E_PREV + 0,	"\x01\x04; 68:     v8 = (0xC3FC * player_idx + 0x43F46C0D);");
	update_extra_cmt		(0X43ECDE6B,	E_PREV + 0,	"\x01\x04; 69:     v6 = v52;");
	update_extra_cmt		(0X43ECDE70,	E_PREV + 0,	"\x01\x04; 64:     v8 = 1;");
	create_insn	(0X43ECDE70);
	update_extra_cmt		(0X43ECDE75,	E_PREV + 0,	"\x01\x04; 71:   if ( *v8 )");
	update_extra_cmt		(0X43ECDE7E,	E_PREV + 0,	"\x01\x04; 73:   v9 = v6[3];");
	update_extra_cmt		(0X43ECDE81,	E_PREV + 0,	"\x01\x04; 74:   v10 = v6 + 1;");
	update_extra_cmt		(0X43ECDE84,	E_PREV + 0,	"\x01\x04; 75:   v11 = v6[4];");
	update_extra_cmt		(0X43ECDE87,	E_PREV + 0,	"\x01\x04; 76:   v12 = v6[2];");
	update_extra_cmt		(0X43ECDE8A,	E_PREV + 0,	"\x01\x04; 77:   v43 = v6 + 1;");
	update_extra_cmt		(0X43ECDE8D,	E_PREV + 0,	"\x01\x04; 79:   if ( *(*(v12 + 4 * (v11 & (v9 - 1))) + 4) )");
	update_extra_cmt		(0X43ECDE90,	E_PREV + 0,	"\x01\x04; 78:   v44 = v11;");
	update_extra_cmt		(0X43ECDE9E,	E_PREV + 0,	"\x01\x04; 80:     return sub_43ECE760(st7_0, *(v12 + 4 * (v11 & (v9 - 1))));");
	update_extra_cmt		(0X43ECDEAB,	E_PREV + 0,	"\x01\x04; 56:     return 0;");
	update_extra_cmt		(0X43ECDEAB,	E_PREV + 1,	"\x01\x04; 58:     return 0;");
	update_extra_cmt		(0X43ECDEAB,	E_PREV + 2,	"\x01\x04; 61:     return 0;");
	update_extra_cmt		(0X43ECDEAB,	E_PREV + 3,	"\x01\x04; 72:     return 0;");
	update_extra_cmt		(0X43ECDEAB,	E_PREV + 4,	"\x01\x04; 86:     return *(v10[1] + 4 * (v10[3] & (v10[2] - 1)));");
	update_extra_cmt		(0X43ECDEAB,	E_PREV + 5,	"\x01\x04; 115:     return *(v10[1] + 4 * (v10[3] & (v10[2] - 1)));");
	update_extra_cmt		(0X43ECDEAB,	E_PREV + 6,	"\x01\x04; 117:     return v40[0];");
	update_extra_cmt		(0X43ECDEAB,	E_PREV + 7,	"\x01\x04; 122:     return 0;");
	update_extra_cmt		(0X43ECDEAB,	E_PREV + 8,	"\x01\x04; 245:   return 0;");
	set_cmt	(0X43ECDEB4,	"num",	0);
	update_extra_cmt		(0X43ECDEB4,	E_PREV + 0,	"\x01\x04; 81:   sub_43E1A839(v40, 0, 256);");
	create_insn	(0X43ECDEB4);
	set_cmt	(0X43ECDEBF,	"value",	0);
	set_cmt	(0X43ECDEC1,	"pointer",	0);
	update_extra_cmt		(0X43ECDEC7,	E_PREV + 0,	"\x01\x04; 82:   v14 = 0;");
	update_extra_cmt		(0X43ECDEC9,	E_PREV + 0,	"\x01\x04; 83:   v15 = 0;");
	create_insn	(x=0X43ECDEC9);
	op_hex		(x,	1);
	update_extra_cmt		(0X43ECDECE,	E_PREV + 0,	"\x01\x04; 84:   v53 = 0;");
	update_extra_cmt		(0X43ECDED1,	E_PREV + 0,	"\x01\x04; 85:   if ( !m_pPlayer )");
	update_extra_cmt		(0X43ECDED9,	E_PREV + 0,	"\x01\x04; 87:   v16 = a4;");
	update_extra_cmt		(0X43ECDEDE,	E_PREV + 0,	"\x01\x04; 88:   v41 = v10;");
	update_extra_cmt		(0X43ECDEE1,	E_PREV + 0,	"\x01\x04; 92:     v42 = v10[3];");
	update_extra_cmt		(0X43ECDEE4,	E_PREV + 0,	"\x01\x04; 91:     v17 = v10[2];");
	update_extra_cmt		(0X43ECDEEA,	E_PREV + 0,	"\x01\x04; 94:     v18 = *(v10[1] + 4 * ((v15 + v42) & (v17 - 1)));");
	update_extra_cmt		(0X43ECDEEB,	E_PREV + 0,	"\x01\x04; 93:     v45 = v42;");
	update_extra_cmt		(0X43ECDEF8,	E_PREV + 0,	"\x01\x04; 95:     if ( *(v18 + 4) )");
	update_extra_cmt		(0X43ECDEF8,	E_PREV + 1,	"\x01\x04; 96:       break;");
	update_extra_cmt		(0X43ECDF02,	E_PREV + 0,	"\x01\x04; 97:     v19 = sub_43ECE820(((*(v18 + 16) / *(dword_43F45148 + 32)) + *&dword_43F40924));");
	update_extra_cmt		(0X43ECDF2A,	E_PREV + 0,	"\x01\x04; 98:     v16 = a4;");
	update_extra_cmt		(0X43ECDF2F,	E_PREV + 0,	"\x01\x04; 99:     v14 = v53;");
	update_extra_cmt		(0X43ECDF32,	E_PREV + 0,	"\x01\x04; 100:     if ( v19 )");
	update_extra_cmt		(0X43ECDF36,	E_PREV + 0,	"\x01\x04; 102:       if ( *(v18 + 108) != 8");
	update_extra_cmt		(0X43ECDF36,	E_PREV + 1,	"\x01\x04; 103:         && ((dword_44716124 * *(dword_43F45148 + 32)) - (*(v18 + 24) * *(dword_43F45148 + 32))) <= a4 )");
	update_extra_cmt		(0X43ECDF67,	E_PREV + 0,	"\x01\x04; 105:         v40[v53] = v18;");
	update_extra_cmt		(0X43ECDF6E,	E_PREV + 0,	"\x01\x04; 106:         v53 = ++v14;");
	update_extra_cmt		(0X43ECDF72,	E_PREV + 0,	"\x01\x04; 108:           break;");
	update_extra_cmt		(0X43ECDF75,	E_PREV + 0,	"\x01\x04; 107:         if ( v14 >= 0x40 )");
	update_extra_cmt		(0X43ECDF77,	E_PREV + 0,	"\x01\x04; 111:     ++v15;");
	update_extra_cmt		(0X43ECDF7B,	E_PREV + 0,	"\x01\x04; 113:   while ( v15 < v52[5] );");
	update_extra_cmt		(0X43ECDF84,	E_PREV + 0,	"\x01\x04; 114:   if ( !v14 )");
	update_extra_cmt		(0X43ECDF8C,	E_PREV + 0,	"\x01\x04; 116:   if ( v14 == 1 || *(dword_43F45148 + 32) > v16 )");
	update_extra_cmt		(0X43ECDFA8,	E_PREV + 0,	"\x01\x04; 118:   v20 = 0;");
	update_extra_cmt		(0X43ECDFB2,	E_PREV + 0,	"\x01\x04; 119:   v54 = 0;");
	update_extra_cmt		(0X43ECDFB9,	E_PREV + 0,	"\x01\x04; 120:   v52 = dword_43F40B8C;");
	update_extra_cmt		(0X43ECDFBE,	E_PREV + 0,	"\x01\x04; 121:   if ( !v14 )");
	update_extra_cmt		(0X43ECDFC6,	E_PREV + 0,	"\x01\x04; 123:   v21 = v53;");
	update_extra_cmt		(0X43ECDFD0,	E_PREV + 0,	"\x01\x04; 126:     v22 = LocalPlayer;");
	set_cmt	(0X43ECDFD6,	"index",	0);
	update_extra_cmt		(0X43ECDFD6,	E_PREV + 0,	"\x01\x04; 127:     v23 = callvfunc(PlayerInstance, 12);");
	set_cmt	(0X43ECDFDB,	"interface",	0);
	update_extra_cmt		(0X43ECDFE6,	E_PREV + 0,	"\x01\x04; 128:     v23();");
	set_cmt	(0X43ECDFE8,	"this",	0);
	update_extra_cmt		(0X43ECDFE8,	E_PREV + 0,	"\x01\x04; 129:     v24 = GetLocalPlayer(v22);");
	update_extra_cmt		(0X43ECDFF1,	E_PREV + 0,	"\x01\x04; 130:     v26 = v24(v25);");
	update_extra_cmt		(0X43ECDFF6,	E_PREV + 0,	"\x01\x04; 131:     v51 = 0.0;");
	update_extra_cmt		(0X43ECDFFD,	E_PREV + 0,	"\x01\x04; 132:     v50 = 0;");
	update_extra_cmt		(0X43ECE004,	E_PREV + 0,	"\x01\x04; 133:     v49 = 0;");
	update_extra_cmt		(0X43ECE00E,	E_PREV + 0,	"\x01\x04; 135:     MEMORY[0x2FBC9700](v26, &v49);");
	update_extra_cmt		(0X43ECE010,	E_PREV + 0,	"\x01\x04; 134:     v53 = 0x2FBC9700;");
	update_extra_cmt		(0X43ECE01D,	E_PREV + 0,	"\x01\x04; 136:     v27 = m_vecViewOffset;");
	update_extra_cmt		(0X43ECE022,	E_PREV + 0,	"\x01\x04; 137:     if ( !m_vecViewOffset )");
	set_cmt	(0X43ECE026,	"propHash",	0);
	update_extra_cmt		(0X43ECE026,	E_PREV + 0,	"\x01\x04; 139:       v27 = GetClientClassAndPropFNV(0x4E9F1122, 0x4CDD3467);");
	set_cmt	(0X43ECE02B,	"classHash",	0);
	update_extra_cmt		(0X43ECE035,	E_PREV + 0,	"\x01\x04; 140:       m_vecViewOffset = v27;");
	update_extra_cmt		(0X43ECE03A,	E_PREV + 0,	"\x01\x04; 142:     if ( *&dword_43F40A7C > *(v26 + v27 + 8) )");
	update_extra_cmt		(0X43ECE049,	E_PREV + 0,	"\x01\x04; 144:       if ( !v27 )");
	set_cmt	(0X43ECE04D,	"propHash",	0);
	update_extra_cmt		(0X43ECE04D,	E_PREV + 0,	"\x01\x04; 146:         v27 = GetClientClassAndPropFNV(0x4E9F1122, 0x4CDD3467);");
	set_cmt	(0X43ECE052,	"classHash",	0);
	update_extra_cmt		(0X43ECE05C,	E_PREV + 0,	"\x01\x04; 147:         m_vecViewOffset = v27;");
	update_extra_cmt		(0X43ECE061,	E_PREV + 0,	"\x01\x04; 149:       v28 = (v51 - *(v26 + v27 + 8)) + *&dword_43F40A78;");
	update_extra_cmt		(0X43ECE076,	E_PREV + 0,	"\x01\x04; 154:     if ( !v27 )");
	create_insn	(0X43ECE076);
	set_cmt	(0X43ECE07A,	"propHash",	0);
	update_extra_cmt		(0X43ECE07A,	E_PREV + 0,	"\x01\x04; 156:       v27 = GetClientClassAndPropFNV(0x4E9F1122, 0x4CDD3467);");
	set_cmt	(0X43ECE07F,	"classHash",	0);
	update_extra_cmt		(0X43ECE089,	E_PREV + 0,	"\x01\x04; 157:       m_vecViewOffset = v27;");
	update_extra_cmt		(0X43ECE08E,	E_PREV + 0,	"\x01\x04; 159:     v28 = *(v26 + v27 + 8);");
	update_extra_cmt		(0X43ECE094,	E_PREV + 0,	"\x01\x04; 160:     v29 = *&dword_43F40A9C;");
	update_extra_cmt		(0X43ECE09C,	E_PREV + 0,	"\x01\x04; 161:     if ( v28 > *&dword_43F40A9C )");
	update_extra_cmt		(0X43ECE0A1,	E_PREV + 0,	"\x01\x04; 163:       if ( !v27 )");
	set_cmt	(0X43ECE0A5,	"propHash",	0);
	update_extra_cmt		(0X43ECE0A5,	E_PREV + 0,	"\x01\x04; 165:         v27 = GetClientClassAndPropFNV(0x4E9F1122, 0x4CDD3467);");
	set_cmt	(0X43ECE0AA,	"classHash",	0);
	update_extra_cmt		(0X43ECE0B4,	E_PREV + 0,	"\x01\x04; 166:         m_vecViewOffset = v27;");
	update_extra_cmt		(0X43ECE0B9,	E_PREV + 0,	"\x01\x04; 168:       v28 = (v51 - *(v26 + v27 + 8)) + v29;");
	update_extra_cmt		(0X43ECE0C4,	E_PREV + 0,	"\x01\x04; 169:       goto LABEL_35;");
	update_extra_cmt		(0X43ECE0C8,	E_PREV + 0,	"\x01\x04; 151:       v51 = v28;");
	update_extra_cmt		(0X43ECE0C8,	E_PREV + 1,	"\x01\x04; 152:       goto LABEL_36;");
	set_cmt	(0X43ECE0CD,	"a6",	0);
	update_extra_cmt		(0X43ECE0CD,	E_PREV + 0,	"\x01\x04; 172:     sub_43E09850(&v49, a2, a3, player_table, v40[v20], 3);");
	set_cmt	(0X43ECE0CF,	"a5",	0);
	set_cmt	(0X43ECE0D9,	"a4",	0);
	set_cmt	(0X43ECE0DC,	"a3",	0);
	set_cmt	(0X43ECE0DF,	"a2",	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_10(void) {
        auto x;
#define id x

	set_cmt	(0X43ECE0E2,	"a1",	0);
	update_extra_cmt		(0X43ECE0E8,	E_PREV + 0,	"\x01\x04; 173:     v30 = LocalPlayer;");
	set_cmt	(0X43ECE0EE,	"index",	0);
	update_extra_cmt		(0X43ECE0EE,	E_PREV + 0,	"\x01\x04; 175:     v31 = callvfunc(PlayerInstance, 12);");
	set_cmt	(0X43ECE0F3,	"interface",	0);
	update_extra_cmt		(0X43ECE0F9,	E_PREV + 0,	"\x01\x04; 174:     *&v45 = v28;");
	update_extra_cmt		(0X43ECE103,	E_PREV + 0,	"\x01\x04; 176:     v31();");
	set_cmt	(0X43ECE105,	"this",	0);
	update_extra_cmt		(0X43ECE105,	E_PREV + 0,	"\x01\x04; 177:     v32 = GetLocalPlayer(v30);");
	update_extra_cmt		(0X43ECE10E,	E_PREV + 0,	"\x01\x04; 178:     v34 = v32(v33);");
	update_extra_cmt		(0X43ECE113,	E_PREV + 0,	"\x01\x04; 179:     v48 = 0.0;");
	update_extra_cmt		(0X43ECE11A,	E_PREV + 0,	"\x01\x04; 180:     v47 = 0;");
	update_extra_cmt		(0X43ECE121,	E_PREV + 0,	"\x01\x04; 181:     v46 = 0;");
	update_extra_cmt		(0X43ECE12B,	E_PREV + 0,	"\x01\x04; 183:     MEMORY[0x2FBC9700](v34, &v46);");
	update_extra_cmt		(0X43ECE12D,	E_PREV + 0,	"\x01\x04; 182:     v53 = 0x2FBC9700;");
	update_extra_cmt		(0X43ECE13A,	E_PREV + 0,	"\x01\x04; 184:     v35 = m_vecViewOffset;");
	update_extra_cmt		(0X43ECE13F,	E_PREV + 0,	"\x01\x04; 185:     if ( !m_vecViewOffset )");
	set_cmt	(0X43ECE143,	"propHash",	0);
	update_extra_cmt		(0X43ECE143,	E_PREV + 0,	"\x01\x04; 187:       v35 = GetClientClassAndPropFNV(0x4E9F1122, 0x4CDD3467);");
	set_cmt	(0X43ECE148,	"classHash",	0);
	update_extra_cmt		(0X43ECE152,	E_PREV + 0,	"\x01\x04; 188:       m_vecViewOffset = v35;");
	update_extra_cmt		(0X43ECE157,	E_PREV + 0,	"\x01\x04; 190:     if ( *&dword_43F40A7C > *(v34 + v35 + 8) )");
	update_extra_cmt		(0X43ECE166,	E_PREV + 0,	"\x01\x04; 192:       if ( !v35 )");
	set_cmt	(0X43ECE16A,	"propHash",	0);
	update_extra_cmt		(0X43ECE16A,	E_PREV + 0,	"\x01\x04; 194:         v35 = GetClientClassAndPropFNV(0x4E9F1122, 0x4CDD3467);");
	set_cmt	(0X43ECE16F,	"classHash",	0);
	update_extra_cmt		(0X43ECE179,	E_PREV + 0,	"\x01\x04; 195:         m_vecViewOffset = v35;");
	update_extra_cmt		(0X43ECE17E,	E_PREV + 0,	"\x01\x04; 197:       *&v36 = (v48 - *(v34 + v35 + 8)) + *&dword_43F40A78;");
	update_extra_cmt		(0X43ECE193,	E_PREV + 0,	"\x01\x04; 202:     if ( !v35 )");
	create_insn	(0X43ECE193);
	set_cmt	(0X43ECE197,	"propHash",	0);
	update_extra_cmt		(0X43ECE197,	E_PREV + 0,	"\x01\x04; 204:       v35 = GetClientClassAndPropFNV(0x4E9F1122, 0x4CDD3467);");
	set_cmt	(0X43ECE19C,	"classHash",	0);
	update_extra_cmt		(0X43ECE1A6,	E_PREV + 0,	"\x01\x04; 205:       m_vecViewOffset = v35;");
	update_extra_cmt		(0X43ECE1AB,	E_PREV + 0,	"\x01\x04; 207:     v36 = *(v34 + v35 + 8);");
	update_extra_cmt		(0X43ECE1B1,	E_PREV + 0,	"\x01\x04; 208:     v37 = *&dword_43F40A9C;");
	update_extra_cmt		(0X43ECE1B9,	E_PREV + 0,	"\x01\x04; 209:     if ( *&v36 > *&dword_43F40A9C )");
	update_extra_cmt		(0X43ECE1BE,	E_PREV + 0,	"\x01\x04; 211:       if ( !v35 )");
	set_cmt	(0X43ECE1C2,	"propHash",	0);
	update_extra_cmt		(0X43ECE1C2,	E_PREV + 0,	"\x01\x04; 213:         v35 = GetClientClassAndPropFNV(0x4E9F1122, 0x4CDD3467);");
	set_cmt	(0X43ECE1C7,	"classHash",	0);
	update_extra_cmt		(0X43ECE1D1,	E_PREV + 0,	"\x01\x04; 214:         m_vecViewOffset = v35;");
	update_extra_cmt		(0X43ECE1D6,	E_PREV + 0,	"\x01\x04; 216:       *&v36 = (v48 - *(v34 + v35 + 8)) + v37;");
	update_extra_cmt		(0X43ECE1E1,	E_PREV + 0,	"\x01\x04; 217:       goto LABEL_48;");
	update_extra_cmt		(0X43ECE1E5,	E_PREV + 0,	"\x01\x04; 199:       v48 = *&v36;");
	update_extra_cmt		(0X43ECE1E5,	E_PREV + 1,	"\x01\x04; 200:       goto LABEL_49;");
	set_cmt	(0X43ECE1EA,	"a6",	0);
	update_extra_cmt		(0X43ECE1EA,	E_PREV + 0,	"\x01\x04; 220:     sub_43E09850(&v46, a2, a3, player_table, v40[v20], 0);");
	set_cmt	(0X43ECE1EC,	"a5",	0);
	set_cmt	(0X43ECE1F6,	"a4",	0);
	set_cmt	(0X43ECE1F9,	"a3",	0);
	set_cmt	(0X43ECE1FC,	"a2",	0);
	set_cmt	(0X43ECE1FF,	"a1",	0);
	update_extra_cmt		(0X43ECE205,	E_PREV + 0,	"\x01\x04; 221:     v38 = v52;");
	update_extra_cmt		(0X43ECE20A,	E_PREV + 0,	"\x01\x04; 222:     if ( *&v52 <= *&v45 )");
	update_extra_cmt		(0X43ECE214,	E_PREV + 0,	"\x01\x04; 228:       v39 = v20;");
	update_extra_cmt		(0X43ECE216,	E_PREV + 0,	"\x01\x04; 229:       v38 = v45;");
	update_extra_cmt		(0X43ECE219,	E_PREV + 0,	"\x01\x04; 230:       v54 = v20;");
	update_extra_cmt		(0X43ECE21C,	E_PREV + 0,	"\x01\x04; 231:       v52 = v45;");
	update_extra_cmt		(0X43ECE223,	E_PREV + 0,	"\x01\x04; 224:       v39 = v54;");
	create_insn	(0X43ECE223);
	update_extra_cmt		(0X43ECE226,	E_PREV + 0,	"\x01\x04; 233:     if ( *&v38 > *&v36 )");
	update_extra_cmt		(0X43ECE22B,	E_PREV + 0,	"\x01\x04; 235:       v39 = v20;");
	update_extra_cmt		(0X43ECE22D,	E_PREV + 0,	"\x01\x04; 236:       v38 = v36;");
	update_extra_cmt		(0X43ECE230,	E_PREV + 0,	"\x01\x04; 237:       v54 = v20;");
	update_extra_cmt		(0X43ECE233,	E_PREV + 0,	"\x01\x04; 238:       v52 = v36;");
	update_extra_cmt		(0X43ECE238,	E_PREV + 0,	"\x01\x04; 240:     ++v20;");
	update_extra_cmt		(0X43ECE239,	E_PREV + 0,	"\x01\x04; 242:   while ( v20 < v21 );");
	update_extra_cmt		(0X43ECE241,	E_PREV + 0,	"\x01\x04; 243:   if ( *&v38 != *&dword_43F40B8C )");
	create_insn	(x=0X43ECE249);
	op_hex		(x,	1);
	update_extra_cmt		(0X43ECE24E,	E_PREV + 0,	"\x01\x04; 244:     return v40[v39];");
	create_insn	(0X43ECE25E);
	create_insn	(0X43ECE26D);
	create_insn	(0X43ECE283);
	make_array	(0X43ECE28E,	0X2);
	set_cmt	(0X43ECE290,	"size",	0);
	create_insn	(0X43ECE290);
	create_insn	(x=0X43ECE293);
	op_hex		(x,	1);
	create_insn	(0X43ECE2E0);
	set_cmt	(0X43ECE31B,	"num",	0);
	create_insn	(0X43ECE31B);
	set_cmt	(0X43ECE324,	"value",	0);
	set_cmt	(0X43ECE326,	"pointer",	0);
	create_insn	(x=0X43ECE32C);
	op_hex		(x,	1);
	create_insn	(x=0X43ECE366);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECE36E);
	create_insn	(0X43ECE402);
	create_insn	(x=0X43ECE44D);
	op_hex		(x,	1);
	create_insn	(x=0X43ECE451);
	op_hex		(x,	1);
	create_insn	(0X43ECE4C5);
	create_insn	(0X43ECE4E8);
	create_insn	(0X43ECE503);
	set_cmt	(0X43ECE51E,	"propHash",	0);
	set_cmt	(0X43ECE523,	"classHash",	0);
	create_insn	(0X43ECE563);
	create_insn	(0X43ECE5AE);
	create_insn	(x=0X43ECE5CB);
	op_hex		(x,	1);
	create_insn	(x=0X43ECE5CF);
	op_hex		(x,	1);
	create_insn	(0X43ECE636);
	create_insn	(0X43ECE651);
	set_cmt	(0X43ECE66C,	"propHash",	0);
	set_cmt	(0X43ECE671,	"classHash",	0);
	create_insn	(0X43ECE6B1);
	create_insn	(0X43ECE6DC);
	create_insn	(0X43ECE6F9);
	create_insn	(0X43ECE74D);
	make_array	(0X43ECE758,	0X8);
	create_insn	(0X43ECE760);
	create_insn	(x=0X43ECE769);
	op_hex		(x,	1);
	create_insn	(0X43ECE812);
	make_array	(0X43ECE81C,	0X4);
	create_insn	(0X43ECE820);
	create_insn	(x=0X43ECE823);
	op_hex		(x,	1);
	create_insn	(x=0X43ECE835);
	op_hex		(x,	1);
	create_insn	(x=0X43ECE843);
	op_hex		(x,	1);
	set_cmt	(0X43ECE979,	"index",	0);
	set_cmt	(0X43ECE97E,	"interface",	0);
	set_cmt	(0X43ECE98B,	"this",	0);
	set_cmt	(0X43ECE9A2,	"propHash",	0);
	set_cmt	(0X43ECE9A7,	"classHash",	0);
	create_insn	(x=0X43ECEA1B);
	op_hex		(x,	1);
	create_insn	(x=0X43ECEA1E);
	op_hex		(x,	1);
	set_cmt	(0X43ECEA4C,	"index",	0);
	set_cmt	(0X43ECEA51,	"interface",	0);
	set_cmt	(0X43ECEA5E,	"this",	0);
	set_cmt	(0X43ECEA75,	"propHash",	0);
	set_cmt	(0X43ECEA7A,	"classHash",	0);
	create_insn	(0X43ECEB0C);
	make_array	(0X43ECEB14,	0XC);
	create_insn	(0X43ECEB20);
	make_array	(0X43ECEB3B,	0X5);
	create_insn	(0X43ECEB40);
	set_name	(0X43ECEB40,	"C_SDK::Server::GetGlobalTickInterval");
	make_array	(0X43ECEB4B,	0X5);
	create_insn	(0X43ECEB50);
	create_insn	(x=0X43ECEB53);
	op_hex		(x,	1);
	create_insn	(x=0X43ECEB59);
	op_hex		(x,	1);
	create_insn	(x=0X43ECEBBA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECEBC1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECEC17);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECEC1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECEC48);
	create_insn	(0X43ECED6D);
	set_cmt	(0X43ECEDD6,	"propHash",	0);
	set_cmt	(0X43ECEDDB,	"classHash",	0);
	set_cmt	(0X43ECEDF8,	"propHash",	0);
	set_cmt	(0X43ECEDFD,	"classHash",	0);
	create_insn	(x=0X43ECEF3E);
	op_hex		(x,	1);
	create_insn	(0X43ECF107);
	create_insn	(x=0X43ECF182);
	op_hex		(x,	1);
	create_insn	(0X43ECF18F);
	make_array	(0X43ECF199,	0X7);
	create_insn	(0X43ECF1A0);
	create_insn	(x=0X43ECF1A3);
	op_hex		(x,	1);
	create_insn	(x=0X43ECF1A6);
	op_hex		(x,	1);
	create_insn	(x=0X43ECF1A9);
	op_hex		(x,	1);
	set_cmt	(0X43ECF1AC,	"size",	0);
	set_cmt	(0X43ECF1C0,	"interface",	0);
	set_cmt	(0X43ECF1C6,	"index",	0);
	set_cmt	(0X43ECF1DA,	"this",	0);
	set_cmt	(0X43ECF1F4,	"index",	0);
	set_cmt	(0X43ECF1F9,	"interface",	0);
	set_cmt	(0X43ECF206,	"this",	0);
	set_cmt	(0X43ECF212,	"m_pPlayer",	0);
	create_insn	(x=0X43ECF223);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ECF23D,	"this",	0);
	set_cmt	(0X43ECF258,	"index",	0);
	set_cmt	(0X43ECF25D,	"interface",	0);
	set_cmt	(0X43ECF26A,	"this",	0);
	set_cmt	(0X43ECF276,	"m_player",	0);
	set_cmt	(0X43ECF282,	"modelBoneCounter",	0);
	create_insn	(x=0X43ECF29A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECF2AB);
	set_cmt	(0X43ECF2B0,	"this",	0);
	set_cmt	(0X43ECF2F6,	"propHash",	0);
	set_cmt	(0X43ECF2FB,	"classHash",	0);
	set_cmt	(0X43ECF320,	"propHash",	0);
	set_cmt	(0X43ECF325,	"classHash",	0);
	create_insn	(0X43ECF354);
	set_cmt	(0X43ECF36B,	"propHash",	0);
	set_cmt	(0X43ECF370,	"classHash",	0);
	set_cmt	(0X43ECF37A,	"m_player",	0);
	create_insn	(x=0X43ECF3E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECF3EE);
	create_insn	(x=0X43ECF416);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECF41E);
	set_cmt	(0X43ECF437,	"num",	0);
	set_cmt	(0X43ECF442,	"value",	0);
	set_cmt	(0X43ECF444,	"pointer",	0);
	create_insn	(x=0X43ECF44A);
	op_hex		(x,	1);
	set_cmt	(0X43ECF491,	"Size",	0);
	create_insn	(x=0X43ECF49B);
	op_hex		(x,	1);
	create_insn	(x=0X43ECF4AC);
	op_hex		(x,	1);
	create_insn	(x=0X43ECF4CC);
	op_hex		(x,	1);
	create_insn	(x=0X43ECF50F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECF517);
	create_insn	(x=0X43ECF530);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECF537);
	create_insn	(x=0X43ECF5F7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECF600);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECF607);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECF60D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECF618);
	create_insn	(x=0X43ECF648);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECF651);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECF658);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECF65E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECF66C);
	create_insn	(x=0X43ECF691);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECF69A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECF6A1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECF6A7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ECF6B2);
	create_insn	(0X43ECF6D9);
	create_insn	(0X43ECF6F8);
	set_cmt	(0X43ECF6FE,	"Trap to Debugger",	0);
	create_insn	(x=0X43ECF6FE);
	op_hex		(x,	0);
	set_cmt	(0X43ECF6FF,	"Trap to Debugger",	0);
	create_insn	(x=0X43ECF6FF);
	op_hex		(x,	0);
	create_insn	(x=0X43ECF708);
	op_hex		(x,	1);
	create_insn	(x=0X43ECF70E);
	op_hex		(x,	1);
	create_insn	(x=0X43ECF71C);
	op_hex		(x,	1);
	create_insn	(x=0X43ECF7B0);
	op_hex		(x,	1);
	create_insn	(x=0X43ECF7BE);
	op_hex		(x,	1);
	create_insn	(x=0X43ECF852);
	op_hex		(x,	1);
	create_insn	(x=0X43ECF860);
	op_hex		(x,	1);
	create_insn	(x=0X43ECF8FD);
	op_hex		(x,	1);
	create_insn	(x=0X43ECF90B);
	op_hex		(x,	1);
	create_insn	(x=0X43ECF99F);
	op_hex		(x,	1);
	create_insn	(x=0X43ECF9AD);
	op_hex		(x,	1);
	create_insn	(x=0X43ECFA41);
	op_hex		(x,	1);
	create_insn	(x=0X43ECFA4F);
	op_hex		(x,	1);
	create_insn	(x=0X43ECFAED);
	op_hex		(x,	1);
	create_insn	(x=0X43ECFAFB);
	op_hex		(x,	1);
	create_insn	(0X43ECFB97);
	create_insn	(0X43ECFB9F);
	create_insn	(0X43ECFBA7);
	create_insn	(0X43ECFBAF);
	create_insn	(0X43ECFBB7);
	create_insn	(0X43ECFBBF);
	create_insn	(0X43ECFBC7);
	set_cmt	(0X43ECFBD2,	"interface",	0);
	create_insn	(0X43ECFBD2);
	set_cmt	(0X43ECFBD8,	"index",	0);
	set_cmt	(0X43ECFBE8,	"interface",	0);
	set_cmt	(0X43ECFBEE,	"index",	0);
	set_cmt	(0X43ECFC01,	"interface",	0);
	set_cmt	(0X43ECFC07,	"index",	0);
	set_cmt	(0X43ECFC1F,	"index",	0);
	set_cmt	(0X43ECFC24,	"interface",	0);
	set_cmt	(0X43ECFC42,	"interface",	0);
	set_cmt	(0X43ECFC48,	"index",	0);
	set_cmt	(0X43ECFC5B,	"interface",	0);
	set_cmt	(0X43ECFC61,	"index",	0);
	set_cmt	(0X43ECFC79,	"index",	0);
	set_cmt	(0X43ECFC7E,	"interface",	0);
	create_insn	(0X43ECFCD0);
	create_insn	(x=0X43ECFCD3);
	op_hex		(x,	1);
	create_insn	(0X43ECFD69);
	create_insn	(x=0X43ECFD77);
	op_hex		(x,	1);
	create_insn	(x=0X43ECFD7A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ECFD84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ECFD9C,	"hash",	0);
	create_insn	(x=0X43ECFDE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ECFDEB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43ECFDFB);
	create_insn	(0X43ECFE16);
	create_insn	(0X43ECFE71);
	create_insn	(0X43ECFE83);
	make_array	(0X43ECFEEC,	0X4);
	create_insn	(0X43ECFEF0);
	create_insn	(x=0X43ECFEF3);
	op_hex		(x,	1);
	create_insn	(x=0X43ECFEF6);
	op_hex		(x,	1);
	set_cmt	(0X43ECFF0D,	"this",	0);
	set_cmt	(0X43ECFF2B,	"index",	0);
	set_cmt	(0X43ECFF30,	"interface",	0);
	set_cmt	(0X43ECFF3D,	"this",	0);
	set_cmt	(0X43ECFF54,	"propHash",	0);
	set_cmt	(0X43ECFF59,	"classHash",	0);
	set_cmt	(0X43ECFFDA,	"index",	0);
	set_cmt	(0X43ECFFE9,	"interface",	0);
	set_cmt	(0X43ED0020,	"this",	0);
	set_cmt	(0X43ED0037,	"propHash",	0);
	set_cmt	(0X43ED003C,	"classHash",	0);
	set_cmt	(0X43ED0050,	"index",	0);
	set_cmt	(0X43ED0061,	"interface",	0);
	set_cmt	(0X43ED0098,	"this",	0);
	set_cmt	(0X43ED00DC,	"propHash",	0);
	set_cmt	(0X43ED00E1,	"classHash",	0);
	set_cmt	(0X43ED0103,	"propHash",	0);
	set_cmt	(0X43ED0108,	"classHash",	0);
	create_insn	(0X43ED0133);
	set_cmt	(0X43ED0137,	"propHash",	0);
	set_cmt	(0X43ED013C,	"classHash",	0);
	set_cmt	(0X43ED0162,	"propHash",	0);
	set_cmt	(0X43ED0167,	"classHash",	0);
	create_insn	(0X43ED018E);
	set_cmt	(0X43ED01CF,	"index",	0);
	set_cmt	(0X43ED01D4,	"interface",	0);
	set_cmt	(0X43ED01E3,	"this",	0);
	set_cmt	(0X43ED0218,	"index",	0);
	set_cmt	(0X43ED021D,	"interface",	0);
	set_cmt	(0X43ED022C,	"this",	0);
	create_insn	(0X43ED026D);
	make_array	(0X43ED0276,	0XA);
	create_insn	(0X43ED0280);
	create_insn	(x=0X43ED028E);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0291);
	op_hex		(x,	1);
	create_insn	(0X43ED02A2);
	make_array	(0X43ED02A5,	0XB);
	create_insn	(0X43ED02B0);
	create_insn	(x=0X43ED02B3);
	op_hex		(x,	1);
	create_insn	(x=0X43ED02B6);
	op_hex		(x,	1);
	create_insn	(0X43ED02ED);
	create_insn	(0X43ED030F);
	create_insn	(0X43ED0331);
	create_insn	(0X43ED034F);
	set_cmt	(0X43ED035F,	"index",	0);
	set_cmt	(0X43ED0364,	"interface",	0);
	set_cmt	(0X43ED0371,	"this",	0);
	set_cmt	(0X43ED0388,	"propHash",	0);
	set_cmt	(0X43ED038D,	"classHash",	0);
	create_insn	(x=0X43ED03A4);
	op_hex		(x,	1);
	create_insn	(x=0X43ED03A7);
	op_hex		(x,	1);
	create_insn	(x=0X43ED03AE);
	op_hex		(x,	1);
	set_cmt	(0X43ED03BD,	"index",	0);
	set_cmt	(0X43ED03C2,	"interface",	0);
	set_cmt	(0X43ED03CF,	"this",	0);
	create_insn	(x=0X43ED03E3);
	op_hex		(x,	1);
	set_cmt	(0X43ED03E8,	"propHash",	0);
	create_insn	(x=0X43ED03ED);
	op_hex		(x,	1);
	set_cmt	(0X43ED03F0,	"classHash",	0);
	create_insn	(0X43ED040A);
	set_cmt	(0X43ED0428,	"index",	0);
	set_cmt	(0X43ED042D,	"interface",	0);
	set_cmt	(0X43ED043A,	"this",	0);
	set_cmt	(0X43ED0451,	"propHash",	0);
	set_cmt	(0X43ED0456,	"classHash",	0);
	set_cmt	(0X43ED04F9,	"index",	0);
	set_cmt	(0X43ED04FE,	"interface",	0);
	set_cmt	(0X43ED050B,	"this",	0);
	set_cmt	(0X43ED0517,	"player",	0);
	set_cmt	(0X43ED052C,	"index",	0);
	set_cmt	(0X43ED0531,	"interface",	0);
	set_cmt	(0X43ED053E,	"this",	0);
	set_cmt	(0X43ED054A,	"player",	0);
	set_cmt	(0X43ED055C,	"propHash",	0);
	set_cmt	(0X43ED0561,	"classHash",	0);
	create_insn	(0X43ED058F);
	create_insn	(0X43ED05B2);
	create_insn	(0X43ED05CF);
	create_insn	(x=0X43ED0614);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0617);
	op_hex		(x,	1);
	set_cmt	(0X43ED0650,	"index",	0);
	set_cmt	(0X43ED0655,	"interface",	0);
	set_cmt	(0X43ED0662,	"this",	0);
	set_cmt	(0X43ED0679,	"propHash",	0);
	set_cmt	(0X43ED067E,	"classHash",	0);
	create_insn	(0X43ED069A);
	set_cmt	(0X43ED06A2,	"index",	0);
	set_cmt	(0X43ED06B1,	"interface",	0);
	set_cmt	(0X43ED06C6,	"this",	0);
	set_cmt	(0X43ED06DD,	"propHash",	0);
	set_cmt	(0X43ED06E2,	"classHash",	0);
	create_insn	(0X43ED0701);
	set_cmt	(0X43ED0705,	"switch 5 cases ",	0);
	set_cmt	(0X43ED070E,	"switch jump",	0);
	create_insn	(x=0X43ED070E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED0715,	"jumptable 43ED070E case 0",	1);
	create_insn	(0X43ED0715);
	set_cmt	(0X43ED071E,	"jumptable 43ED070E case 1",	1);
	create_insn	(0X43ED071E);
	set_cmt	(0X43ED0724,	"index",	0);
	set_cmt	(0X43ED0729,	"interface",	0);
	set_cmt	(0X43ED0736,	"this",	0);
	set_cmt	(0X43ED074D,	"propHash",	0);
	set_cmt	(0X43ED0752,	"classHash",	0);
	set_cmt	(0X43ED07C3,	"jumptable 43ED070E case 2",	1);
	create_insn	(0X43ED07C3);
	create_insn	(x=0X43ED07C8);
	op_hex		(x,	1);
	create_insn	(x=0X43ED07FC);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0819);
	op_hex		(x,	1);
	create_insn	(x=0X43ED081D);
	op_hex		(x,	1);
	create_insn	(0X43ED0840);
	set_cmt	(0X43ED0860,	"index",	0);
	set_cmt	(0X43ED0865,	"interface",	0);
	set_cmt	(0X43ED0872,	"this",	0);
	set_cmt	(0X43ED0889,	"propHash",	0);
	set_cmt	(0X43ED088E,	"classHash",	0);
	create_insn	(0X43ED08AD);
	set_cmt	(0X43ED08E9,	"jumptable 43ED070E default case",	1);
	set_name	(0X43ED08E9,	"def_43ED070E");
	set_cmt	(0X43ED08EF,	"jumptable 43ED070E case 3",	1);
	create_insn	(0X43ED08EF);
	create_insn	(x=0X43ED08F4);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0928);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0941);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0945);
	op_hex		(x,	1);
	create_insn	(x=0X43ED095B);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0969);
	op_hex		(x,	1);
	create_insn	(0X43ED0982);
	create_insn	(x=0X43ED0994);
	op_hex		(x,	1);
	create_insn	(0X43ED099B);
	create_insn	(0X43ED09A1);
	create_insn	(0X43ED09A5);
	set_cmt	(0X43ED09D0,	"index",	0);
	set_cmt	(0X43ED09D5,	"interface",	0);
	set_cmt	(0X43ED09E2,	"this",	0);
	set_cmt	(0X43ED09F9,	"propHash",	0);
	set_cmt	(0X43ED09FE,	"classHash",	0);
	create_insn	(0X43ED0A1D);
	create_insn	(x=0X43ED0A35);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0A43);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0A65);
	op_hex		(x,	1);
	create_insn	(0X43ED0A73);
	set_cmt	(0X43ED0A82,	"jumptable 43ED070E case 4",	1);
	create_insn	(0X43ED0A82);
	create_insn	(x=0X43ED0AB0);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0AB3);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0AC5);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0AC8);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0AE1);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0AE4);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0AF4);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0AF7);
	op_hex		(x,	1);
	create_insn	(0X43ED0B21);
	create_insn	(0X43ED0B48);
	create_insn	(x=0X43ED0B4F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ED0B7F);
	set_cmt	(0X43ED0B89,	"index",	0);
	set_cmt	(0X43ED0B8E,	"interface",	0);
	set_cmt	(0X43ED0B9B,	"this",	0);
	set_cmt	(0X43ED0BB2,	"propHash",	0);
	set_cmt	(0X43ED0BB7,	"classHash",	0);
	create_insn	(0X43ED0BE5);
	create_insn	(0X43ED0C16);
	create_insn	(0X43ED0C27);
	set_cmt	(0X43ED0C45,	"index",	0);
	set_cmt	(0X43ED0C4A,	"interface",	0);
	set_cmt	(0X43ED0C57,	"this",	0);
	set_cmt	(0X43ED0C6E,	"propHash",	0);
	set_cmt	(0X43ED0C73,	"classHash",	0);
	make_array	(0X43ED0CA5,	0X3);
	set_cmt	(0X43ED0CA8,	"jump table for switch statement",	0);
	create_dword	(x=0X43ED0CA8);
	make_array	(x,	0X5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43ED0CA8,	"jpt_43ED070E");
	make_array	(0X43ED0CBC,	0X4);
	create_insn	(0X43ED0CC0);
	create_insn	(0X43ED0CD0);
	create_insn	(0X43ED0CEB);
	make_array	(0X43ED0CEE,	0X2);
	create_insn	(0X43ED0CF0);
	create_insn	(x=0X43ED0CF3);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0CF6);
	op_hex		(x,	1);
	create_insn	(0X43ED0D2C);
	create_insn	(x=0X43ED0DA8);
	op_hex		(x,	1);
	set_cmt	(0X43ED0DCC,	"hash",	0);
	create_insn	(x=0X43ED0DF9);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0E2F);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0E54);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0E59);
	op_hex		(x,	1);
	set_cmt	(0X43ED0E62,	"hash",	0);
	create_insn	(0X43ED0E85);
	create_insn	(x=0X43ED0EC5);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0ECA);
	op_hex		(x,	1);
	set_cmt	(0X43ED0ED3,	"hash",	0);
	make_array	(0X43ED0F25,	0XB);
	create_insn	(0X43ED0F30);
	set_cmt	(0X43ED0F61,	"index",	0);
	set_cmt	(0X43ED0F66,	"interface",	0);
	set_cmt	(0X43ED0F73,	"this",	0);
	set_cmt	(0X43ED0F8A,	"propHash",	0);
	set_cmt	(0X43ED0F8F,	"classHash",	0);
	create_insn	(x=0X43ED0FD7);
	op_hex		(x,	1);
	create_insn	(x=0X43ED0FDA);
	op_hex		(x,	1);
	create_insn	(x=0X43ED1030);
	op_hex		(x,	1);
	create_insn	(x=0X43ED1033);
	op_hex		(x,	1);
	create_insn	(x=0X43ED1041);
	op_hex		(x,	1);
	create_insn	(x=0X43ED104B);
	op_hex		(x,	1);
	set_cmt	(0X43ED104E,	"interface",	0);
	set_cmt	(0X43ED1054,	"index",	0);
	set_cmt	(0X43ED1065,	"this",	0);
	set_cmt	(0X43ED107C,	"propHash",	0);
	set_cmt	(0X43ED1081,	"classHash",	0);
	create_insn	(x=0X43ED1093);
	op_hex		(x,	1);
	set_cmt	(0X43ED10A0,	"index",	0);
	set_cmt	(0X43ED10A5,	"interface",	0);
	set_cmt	(0X43ED10B2,	"this",	0);
	set_cmt	(0X43ED10C9,	"propHash",	0);
	set_cmt	(0X43ED10CE,	"classHash",	0);
	create_insn	(x=0X43ED10E0);
	op_hex		(x,	1);
	create_insn	(0X43ED1100);
	create_insn	(0X43ED114C);
	set_cmt	(0X43ED116E,	"index",	0);
	set_cmt	(0X43ED1173,	"interface",	0);
	set_cmt	(0X43ED1180,	"this",	0);
	set_cmt	(0X43ED1197,	"propHash",	0);
	set_cmt	(0X43ED119C,	"classHash",	0);
	make_array	(0X43ED11B5,	0XB);
	create_insn	(0X43ED11C0);
	create_insn	(x=0X43ED11C3);
	op_hex		(x,	1);
	create_insn	(x=0X43ED11C6);
	op_hex		(x,	1);
	create_insn	(x=0X43ED11C9);
	op_hex		(x,	1);
	create_insn	(x=0X43ED11D6);
	op_hex		(x,	1);
	set_cmt	(0X43ED11F5,	"interface",	0);
	set_cmt	(0X43ED11FB,	"index",	0);
	create_insn	(x=0X43ED1346);
	op_hex		(x,	1);
	create_insn	(x=0X43ED1397);
	op_hex		(x,	1);
	make_array	(0X43ED13D9,	0X7);
	create_insn	(0X43ED13E0);
	create_insn	(x=0X43ED13E3);
	op_hex		(x,	1);
	set_cmt	(0X43ED13E6,	"interface",	0);
	create_insn	(x=0X43ED13EC);
	op_hex		(x,	1);
	set_cmt	(0X43ED13EF,	"index",	0);
	set_cmt	(0X43ED1403,	"this",	0);
	set_cmt	(0X43ED141A,	"propHash",	0);
	set_cmt	(0X43ED141F,	"classHash",	0);
	set_cmt	(0X43ED1441,	"propHash",	0);
	set_cmt	(0X43ED1446,	"classHash",	0);
	set_cmt	(0X43ED14D1,	"interface",	0);
	set_cmt	(0X43ED14D7,	"index",	0);
	create_insn	(0X43ED14FA);
	create_insn	(x=0X43ED1504);
	op_hex		(x,	1);
	create_insn	(0X43ED1535);
	create_insn	(x=0X43ED1555);
	op_hex		(x,	1);
	create_insn	(x=0X43ED1557);
	op_hex		(x,	1);
	create_insn	(x=0X43ED174D);
	op_hex		(x,	1);
	make_array	(0X43ED1794,	0XC);
	create_insn	(0X43ED17A0);
	set_cmt	(0X43ED17A3,	"interface",	0);
	create_insn	(x=0X43ED17A9);
	op_hex		(x,	1);
	set_cmt	(0X43ED17AC,	"index",	0);
	set_cmt	(0X43ED17C1,	"this",	0);
	set_cmt	(0X43ED17DB,	"index",	0);
	set_cmt	(0X43ED17E0,	"interface",	0);
	set_cmt	(0X43ED17ED,	"this",	0);
	set_cmt	(0X43ED17F9,	"m_pPlayer",	0);
	set_cmt	(0X43ED180E,	"index",	0);
	set_cmt	(0X43ED1813,	"interface",	0);
	set_cmt	(0X43ED1820,	"this",	0);
	create_insn	(x=0X43ED183C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED1843);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ED1884);
	set_cmt	(0X43ED18C3,	"propHash",	0);
	set_cmt	(0X43ED18C8,	"classHash",	0);
	set_cmt	(0X43ED18EF,	"propHash",	0);
	set_cmt	(0X43ED18F4,	"classHash",	0);
	set_cmt	(0X43ED191F,	"m_player",	0);
	set_cmt	(0X43ED1996,	"index",	0);
	set_cmt	(0X43ED1999,	"interface",	0);
	set_cmt	(0X43ED19A6,	"this",	0);
	create_insn	(x=0X43ED19BF);
	op_hex		(x,	1);
	set_cmt	(0X43ED19D0,	"index",	0);
	set_cmt	(0X43ED19D3,	"interface",	0);
	set_cmt	(0X43ED19E0,	"this",	0);
	create_insn	(x=0X43ED19F9);
	op_hex		(x,	1);
	set_cmt	(0X43ED1A06,	"index",	0);
	set_cmt	(0X43ED1A09,	"interface",	0);
	set_cmt	(0X43ED1A16,	"this",	0);
	create_insn	(x=0X43ED1A2F);
	op_hex		(x,	1);
	set_cmt	(0X43ED1A3C,	"index",	0);
	set_cmt	(0X43ED1A3F,	"interface",	0);
	set_cmt	(0X43ED1A4C,	"this",	0);
	create_insn	(x=0X43ED1A65);
	op_hex		(x,	1);
	create_insn	(0X43ED1A70);
	create_insn	(x=0X43ED1A77);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED1A7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED1A8D);
	op_hex		(x,	1);
	create_insn	(x=0X43ED1A92);
	op_hex		(x,	1);
	create_insn	(x=0X43ED1AD8);
	op_hex		(x,	1);
	create_insn	(0X43ED1B26);
	create_insn	(0X43ED1B31);
	create_insn	(x=0X43ED1B6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED1B90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43ED1B9E,	0X2);
	create_insn	(0X43ED1BA0);
	set_name	(0X43ED1BA0,	"OneTap::Features::LegitBot::GetBestTarget");
	create_insn	(x=0X43ED1BA3);
	op_hex		(x,	1);
	create_insn	(x=0X43ED1BA6);
	op_hex		(x,	1);
	set_cmt	(0X43ED1BAC,	"interface",	0);
	update_extra_cmt		(0X43ED1BAC,	E_PREV + 0,	"\x01\x04; 84:   PlayerInstance = ::PlayerInstance;");
	update_extra_cmt		(0X43ED1BB2,	E_PREV + 0,	"\x01\x04; 85:   v5 = a2;");
	update_extra_cmt		(0X43ED1BB6,	E_PREV + 0,	"\x01\x04; 86:   LocalPlayer = ::LocalPlayer;");
	set_cmt	(0X43ED1BBC,	"index",	0);
	update_extra_cmt		(0X43ED1BBC,	E_PREV + 0,	"\x01\x04; 91:   v7(a1, v5, weaponType);");
	update_extra_cmt		(0X43ED1BC2,	E_PREV + 0,	"\x01\x04; 87:   *a3 = 0;");
	create_insn	(x=0X43ED1BC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED1BC5);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1BD1,	E_PREV + 0,	"\x01\x04; 88:   a3[2] = 0;");
	update_extra_cmt		(0X43ED1BD8,	E_PREV + 0,	"\x01\x04; 89:   a3[1] = 0;");
	update_extra_cmt		(0X43ED1BDF,	E_PREV + 0,	"\x01\x04; 90:   v7 = callvfunc(PlayerInstance, 12);");
	set_cmt	(0X43ED1BE6,	"this",	0);
	update_extra_cmt		(0X43ED1BE6,	E_PREV + 0,	"\x01\x04; 92:   v8 = GetLocalPlayer(LocalPlayer);");
	update_extra_cmt		(0X43ED1BEF,	E_PREV + 0,	"\x01\x04; 93:   v10 = v8(v9);");
	update_extra_cmt		(0X43ED1BF2,	E_PREV + 0,	"\x01\x04; 94:   m_vecOrigin = ::m_vecOrigin;");
	update_extra_cmt		(0X43ED1BF8,	E_PREV + 0,	"\x01\x04; 95:   v52 = v10;");
	create_insn	(x=0X43ED1BF8);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1BFC,	E_PREV + 0,	"\x01\x04; 96:   if ( !::m_vecOrigin )");
	set_cmt	(0X43ED1C00,	"propHash",	0);
	update_extra_cmt		(0X43ED1C00,	E_PREV + 0,	"\x01\x04; 98:     m_vecOrigin = GetClientClassAndPropFNV(0x1EEE87CC, 0x559D81AF);");
	set_cmt	(0X43ED1C05,	"classHash",	0);
	update_extra_cmt		(0X43ED1C11,	E_PREV + 0,	"\x01\x04; 99:     ::m_vecOrigin = m_vecOrigin;");
	update_extra_cmt		(0X43ED1C17,	E_PREV + 0,	"\x01\x04; 101:   m_vecViewOffset = ::m_vecViewOffset;");
	update_extra_cmt		(0X43ED1C1C,	E_PREV + 0,	"\x01\x04; 102:   if ( !::m_vecViewOffset )");
	set_cmt	(0X43ED1C20,	"propHash",	0);
	update_extra_cmt		(0X43ED1C20,	E_PREV + 0,	"\x01\x04; 104:     m_vecViewOffset = GetClientClassAndPropFNV(0x4E9F1122, 0x4CDD3467);");
	set_cmt	(0X43ED1C25,	"classHash",	0);
	update_extra_cmt		(0X43ED1C2F,	E_PREV + 0,	"\x01\x04; 105:     ::m_vecViewOffset = m_vecViewOffset;");
	update_extra_cmt		(0X43ED1C34,	E_PREV + 0,	"\x01\x04; 108:   v14 = *(v52 + m_vecViewOffset) + *(v52 + m_vecOrigin);");
	create_insn	(x=0X43ED1C34);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED1C3D,	E_PREV + 0,	"\x01\x04; 109:   v68 = *(v52 + m_vecOrigin + 4) + *(v52 + m_vecViewOffset + 4);");
	update_extra_cmt		(0X43ED1C49,	E_PREV + 0,	"\x01\x04; 107:   v13 = *(v52 + m_vecOrigin + 8) + *(v52 + m_vecViewOffset + 8);");
	update_extra_cmt		(0X43ED1C5A,	E_PREV + 0,	"\x01\x04; 116:   v16 = sub_43DD5700(::PlayerInstance);");
	update_extra_cmt		(0X43ED1C60,	E_PREV + 0,	"\x01\x04; 110:   v15 = v68;");
	create_insn	(x=0X43ED1C60);
	op_stkvar	(x,	0);
	create_insn	(x=0X43ED1C66);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1C6C,	E_PREV + 0,	"\x01\x04; 111:   v67 = v14;");
	create_insn	(x=0X43ED1C6C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43ED1C72);
	op_stkvar	(x,	0);
	create_insn	(x=0X43ED1C78);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1C7E,	E_PREV + 0,	"\x01\x04; 112:   v69 = v13;");
	create_insn	(x=0X43ED1C7E);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1C84,	E_PREV + 0,	"\x01\x04; 113:   v59 = 0;");
	create_insn	(x=0X43ED1C84);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1C8C,	E_PREV + 0,	"\x01\x04; 114:   v58 = 0.0;");
	create_insn	(x=0X43ED1C8C);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1C94,	E_PREV + 0,	"\x01\x04; 115:   v57 = 0.0;");
	create_insn	(x=0X43ED1C94);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1CA1,	E_PREV + 0,	"\x01\x04; 117:   v16(&v57);");
	create_insn	(x=0X43ED1CA1);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED1CA8,	E_PREV + 0,	"\x01\x04; 118:   v17 = *&dword_44732F24 + v57;");
	create_insn	(x=0X43ED1CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED1CB6);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1CBC,	E_PREV + 0,	"\x01\x04; 119:   v18 = (*&dword_44732F28 + v58) * *&dword_43F408B0;");
	create_insn	(x=0X43ED1CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED1CD2);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1CD8,	E_PREV + 0,	"\x01\x04; 120:   sub_43F1CDAB();");
	update_extra_cmt		(0X43ED1CE0,	E_PREV + 0,	"\x01\x04; 121:   sub_43F1CD99();");
	create_insn	(x=0X43ED1CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED1CEA);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1CF8,	E_PREV + 0,	"\x01\x04; 122:   v19 = v17 * *&dword_43F408B0;");
	create_insn	(x=0X43ED1CFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43ED1D02);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED1D10);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1D16,	E_PREV + 0,	"\x01\x04; 123:   sub_43F1CDAB();");
	update_extra_cmt		(0X43ED1D1E,	E_PREV + 0,	"\x01\x04; 124:   sub_43F1CD99();");
	create_insn	(x=0X43ED1D1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED1D28);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1D36,	E_PREV + 0,	"\x01\x04; 126:   v21 = COERCE_FLOAT(LODWORD(v19) ^ xmmword_43F42180) * *&dword_43F40B7C;");
	create_insn	(x=0X43ED1D36);
	op_stkvar	(x,	1);
	set_cmt	(0X43ED1D46,	"index",	0);
	update_extra_cmt		(0X43ED1D46,	E_PREV + 0,	"\x01\x04; 125:   LocalPlayer_1 = ::LocalPlayer;");
	set_cmt	(0X43ED1D55,	"interface",	0);
	update_extra_cmt		(0X43ED1D55,	E_PREV + 0,	"\x01\x04; 133:   PlayerInstance_1 = callvfunc(::PlayerInstance, 12);");
	create_insn	(x=0X43ED1D6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED1D70);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED1D7E,	E_PREV + 0,	"\x01\x04; 127:   v61 = v14 + ((v19 * v18) * *&dword_43F40B7C);");
	create_insn	(x=0X43ED1D7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED1D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED1D92);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED1D9C);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1DA2,	E_PREV + 0,	"\x01\x04; 128:   v62 = v15 + ((v19 * v18) * *&dword_43F40B7C);");
	create_insn	(x=0X43ED1DA2);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1DA8,	E_PREV + 0,	"\x01\x04; 129:   v63 = v13 + v21;");
	create_insn	(x=0X43ED1DA8);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1DAE,	E_PREV + 0,	"\x01\x04; 130:   v64 = v14 + ((v19 * v18) * *&dword_43F40B7C);");
	create_insn	(x=0X43ED1DAE);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1DB4,	E_PREV + 0,	"\x01\x04; 131:   v65 = v15 + ((v19 * v18) * *&dword_43F40B7C);");
	create_insn	(x=0X43ED1DB4);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1DBA,	E_PREV + 0,	"\x01\x04; 132:   v66 = v13 + v21;");
	create_insn	(x=0X43ED1DBA);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1DC5,	E_PREV + 0,	"\x01\x04; 134:   PlayerInstance_1();");
	set_cmt	(0X43ED1DC7,	"this",	0);
	update_extra_cmt		(0X43ED1DC7,	E_PREV + 0,	"\x01\x04; 135:   LocalPlayer_2 = GetLocalPlayer(LocalPlayer_1);");
	update_extra_cmt		(0X43ED1DD0,	E_PREV + 0,	"\x01\x04; 136:   v25 = LocalPlayer_2(v24);");
	update_extra_cmt		(0X43ED1DD3,	E_PREV + 0,	"\x01\x04; 137:   v70 = &off_43F1FB30;");
	create_insn	(x=0X43ED1DD3);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED1DDB,	"this",	0);
	update_extra_cmt		(0X43ED1DDB,	E_PREV + 0,	"\x01\x04; 149:   sub_43DD5870(&v83);");
	create_insn	(x=0X43ED1DDB);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED1DE2,	E_PREV + 0,	"\x01\x04; 138:   v71 = v25;");
	create_insn	(x=0X43ED1DE2);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1DE6,	E_PREV + 0,	"\x01\x04; 139:   v72 = 0;");
	create_insn	(x=0X43ED1DE6);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1DEE,	E_PREV + 0,	"\x01\x04; 140:   v75 = 0;");
	create_insn	(x=0X43ED1DEE);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1DF9,	E_PREV + 0,	"\x01\x04; 141:   v74 = 0;");
	create_insn	(x=0X43ED1DF9);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1E01,	E_PREV + 0,	"\x01\x04; 142:   v73 = 0;");
	create_insn	(x=0X43ED1E01);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1E09,	E_PREV + 0,	"\x01\x04; 143:   v78 = 0;");
	create_insn	(x=0X43ED1E09);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1E14,	E_PREV + 0,	"\x01\x04; 144:   v77 = 0;");
	create_insn	(x=0X43ED1E14);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1E1F,	E_PREV + 0,	"\x01\x04; 145:   v76 = 0;");
	create_insn	(x=0X43ED1E1F);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1E2A,	E_PREV + 0,	"\x01\x04; 146:   v81 = 0;");
	create_insn	(x=0X43ED1E2A);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1E35,	E_PREV + 0,	"\x01\x04; 147:   v80 = 0;");
	create_insn	(x=0X43ED1E35);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1E40,	E_PREV + 0,	"\x01\x04; 148:   v79 = 0;");
	create_insn	(x=0X43ED1E40);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1E50,	E_PREV + 0,	"\x01\x04; 150:   sub_43DD5770(v26, &v67, &v64);");
	create_insn	(x=0X43ED1E50);
	op_stkvar	(x,	1);
	set_cmt	(0X43ED1E54,	"end",	0);
	create_insn	(x=0X43ED1E55);
	op_stkvar	(x,	1);
	set_cmt	(0X43ED1E59,	"start",	0);
	update_extra_cmt		(0X43ED1E5F,	E_PREV + 0,	"\x01\x04; 151:   (*(*dword_43F45138 + 20))(&v83, 0x4600400B, &v70, &v73);");
	create_insn	(x=0X43ED1E65);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED1E6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED1E71);
	op_stkvar	(x,	1);
	set_cmt	(0X43ED1E81,	"vtable",	0);
	update_extra_cmt		(0X43ED1E81,	E_PREV + 0,	"\x01\x04; 152:   if ( !m_pPlayer_Copy || !IsPlayer(m_pPlayer_Copy) || !IsAlive(m_pPlayer_Copy) || m_pPlayer_Copy[237] )");
	create_insn	(x=0X43ED1E81);
	op_stkvar	(x,	1);
	set_cmt	(0X43ED1E95,	"m_pPlayer",	0);
	create_insn	(x=0X43ED1E95);
	op_stkvar	(x,	1);
	set_cmt	(0X43ED1EA5,	"m_player",	0);
	update_extra_cmt		(0X43ED1EA5,	E_PREV + 0,	"\x01\x04; 154:   if ( !IsPlayerTeam(m_pPlayer_Copy) )");
	create_insn	(x=0X43ED1EA5);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED1EAC,	E_PREV + 0,	"\x01\x04; 153:     goto LABEL_54;");
	update_extra_cmt		(0X43ED1EC2,	E_PREV + 0,	"\x01\x04; 156:     m_bGunGameImmunity = ::m_bGunGameImmunity;");
	update_extra_cmt		(0X43ED1EC7,	E_PREV + 0,	"\x01\x04; 157:     m_pPlayer = m_pPlayer_Copy;");
	create_insn	(x=0X43ED1EC7);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED1ECE,	E_PREV + 0,	"\x01\x04; 158:     if ( !::m_bGunGameImmunity )");
	set_cmt	(0X43ED1ED2,	"propHash",	0);
	update_extra_cmt		(0X43ED1ED2,	E_PREV + 0,	"\x01\x04; 160:       m_bGunGameImmunity = GetClientClassAndPropFNV(0x72E242A1, 0x9C15080D);");
	set_cmt	(0X43ED1ED7,	"classHash",	0);
	update_extra_cmt		(0X43ED1EE1,	E_PREV + 0,	"\x01\x04; 161:       ::m_bGunGameImmunity = m_bGunGameImmunity;");
	update_extra_cmt		(0X43ED1EE6,	E_PREV + 0,	"\x01\x04; 163:     if ( !m_pPlayer[m_bGunGameImmunity] )");
	update_extra_cmt		(0X43ED1EF0,	E_PREV + 0,	"\x01\x04; 166:       if ( byte_447176E0[GetWeaponType()] )");
	create_insn	(x=0X43ED1EF5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED1EFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	update_extra_cmt		(0X43ED1F04,	E_PREV + 0,	"\x01\x04; 168:         v29 = dword_447176FC[GetWeaponType()] / *&dword_43F40B6C;");
	update_extra_cmt		(0X43ED1F24,	E_PREV + 0,	"\x01\x04; 169:         v56 = v29;");
	create_insn	(x=0X43ED1F24);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1F2C,	E_PREV + 0,	"\x01\x04; 173:         v29 = 0.0;");
	create_insn	(0X43ED1F2C);
	update_extra_cmt		(0X43ED1F2F,	E_PREV + 0,	"\x01\x04; 175:       if ( byte_44719A0C )");
	update_extra_cmt		(0X43ED1F38,	E_PREV + 0,	"\x01\x04; 176:         v56 = v29 + v29;");
	create_insn	(x=0X43ED1F3F);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1F45,	E_PREV + 0,	"\x01\x04; 177:       iteration_player = ::player_vec_start;");
	update_extra_cmt		(0X43ED1F4B,	E_PREV + 0,	"\x01\x04; 178:       player_vec_start = ::player_vec_start;");
	create_insn	(x=0X43ED1F51);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1F55,	E_PREV + 0,	"\x01\x04; 179:       player_vec_end = ::player_vec_end;");
	create_insn	(x=0X43ED1F55);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1F59,	E_PREV + 0,	"\x01\x04; 180:       if ( ::player_vec_start != ::player_vec_end )");
	update_extra_cmt		(0X43ED1F61,	E_PREV + 0,	"\x01\x04; 182:         player_vec_end_1 = ::player_vec_end;");
	update_extra_cmt		(0X43ED1F63,	E_PREV + 0,	"\x01\x04; 183:         while ( 1 )");
	update_extra_cmt		(0X43ED1F63,	E_PREV + 1,	"\x01\x04; 185:           player = *iteration_player;");
	update_extra_cmt		(0X43ED1F65,	E_PREV + 0,	"\x01\x04; 186:           v60 = player;");
	create_insn	(x=0X43ED1F65);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED1F69,	E_PREV + 0,	"\x01\x04; 187:           if ( !player )");
	update_extra_cmt		(0X43ED1F71,	E_PREV + 0,	"\x01\x04; 192:           if ( !m_lifeState )");
	set_cmt	(0X43ED1F7A,	"propHash",	0);
	update_extra_cmt		(0X43ED1F7A,	E_PREV + 0,	"\x01\x04; 194:             v33 = GetClientClassAndPropFNV(0x4E9F1122, 0x1C93BCF0);");
	set_cmt	(0X43ED1F7F,	"classHash",	0);
	update_extra_cmt		(0X43ED1F89,	E_PREV + 0,	"\x01\x04; 195:             iteration_player = player_vec_start;");
	create_insn	(x=0X43ED1F89);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED1F8D,	E_PREV + 0,	"\x01\x04; 196:             m_lifeState = v33;");
	update_extra_cmt		(0X43ED1F92,	E_PREV + 0,	"\x01\x04; 198:           if ( *(m_lifeState + player) )");
	update_extra_cmt		(0X43ED1F9B,	E_PREV + 0,	"\x01\x04; 199:             goto LABEL_46;");
	update_extra_cmt		(0X43ED1FA1,	E_PREV + 0,	"\x01\x04; 200:           if ( !m_iHealth )");
	set_cmt	(0X43ED1FAA,	"propHash",	0);
	update_extra_cmt		(0X43ED1FAA,	E_PREV + 0,	"\x01\x04; 201:             m_iHealth = GetClientClassAndPropFNV(0x4E9F1122, 0x84CDAD2);");
	set_cmt	(0X43ED1FAF,	"classHash",	0);
	update_extra_cmt		(0X43ED1FBE,	E_PREV + 0,	"\x01\x04; 202:           if ( *(m_iHealth + player) <= 0 || *(player + 237) )");
	update_extra_cmt		(0X43ED1FCD,	E_PREV + 0,	"\x01\x04; 203:             goto RE_UPDATE_VALUE;");
	update_extra_cmt		(0X43ED1FDA,	E_PREV + 0,	"\x01\x04; 204:           if ( !::m_bGunGameImmunity )");
	set_cmt	(0X43ED1FE3,	"propHash",	0);
	update_extra_cmt		(0X43ED1FE3,	E_PREV + 0,	"\x01\x04; 205:             ::m_bGunGameImmunity = GetClientClassAndPropFNV(0x72E242A1, 0x9C15080D);");
	set_cmt	(0X43ED1FE8,	"classHash",	0);
	update_extra_cmt		(0X43ED1FF7,	E_PREV + 0,	"\x01\x04; 206:           if ( *(::m_bGunGameImmunity + player)");
	update_extra_cmt		(0X43ED1FF7,	E_PREV + 1,	"\x01\x04; 207:             || IsPlayerTeam(player)");
	update_extra_cmt		(0X43ED1FF7,	E_PREV + 2,	"\x01\x04; 208:             || !byte_44732F3C[8 * *(player + 0x64)]");
	update_extra_cmt		(0X43ED1FF7,	E_PREV + 3,	"\x01\x04; 209:             || (v53 = SmthVectorProcessed(weaponType, player, &v57, &dword_44732F24, v56)) == 0 )");
	set_cmt	(0X43ED2006,	"m_player",	0);
	create_insn	(x=0X43ED2026);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED202C);
	op_stkvar	(x,	1);
	set_cmt	(0X43ED2031,	"a4",	0);
	create_insn	(x=0X43ED2031);
	op_stkvar	(x,	0);
	set_cmt	(0X43ED2036,	"a3",	0);
	create_insn	(x=0X43ED2036);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED203B,	"a2",	0);
	set_cmt	(0X43ED203C,	"player",	0);
	create_insn	(x=0X43ED2042);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED204E,	E_PREV + 0,	"\x01\x04; 217:           v34 = &v84;");
	create_insn	(x=0X43ED204E);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED2055,	E_PREV + 0,	"\x01\x04; 218:           v35 = 19;");
	update_extra_cmt		(0X43ED2060,	E_PREV + 0,	"\x01\x04; 221:             sub_43E0A260(v34);");
	update_extra_cmt		(0X43ED2067,	E_PREV + 0,	"\x01\x04; 222:             v34 += 84;");
	update_extra_cmt		(0X43ED206A,	E_PREV + 0,	"\x01\x04; 223:             --v35;");
	update_extra_cmt		(0X43ED206D,	E_PREV + 0,	"\x01\x04; 225:           while ( v35 );");
	update_extra_cmt		(0X43ED206F,	E_PREV + 0,	"\x01\x04; 226:           v36 = v60;");
	create_insn	(x=0X43ED206F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED2073);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED207A);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED207E,	E_PREV + 0,	"\x01\x04; 227:           v37 = 0;");
	update_extra_cmt		(0X43ED2080,	E_PREV + 0,	"\x01\x04; 228:           v38 = v53 + 128;");
	update_extra_cmt		(0X43ED2083,	E_PREV + 0,	"\x01\x04; 229:           v54 = &v84;");
	create_insn	(x=0X43ED2083);
	op_stkvar	(x,	0);
	create_insn	(x=0X43ED2087);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED2090,	E_PREV + 0,	"\x01\x04; 232:             sub_43E08F00(v36, v38, v37++);");
	update_extra_cmt		(0X43ED209A,	E_PREV + 0,	"\x01\x04; 233:             v38 = v53 + 128;");
	create_insn	(x=0X43ED209A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED209F);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED20A3,	E_PREV + 0,	"\x01\x04; 234:             v54 += 84;");
	create_insn	(x=0X43ED20A6);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED20AA,	E_PREV + 0,	"\x01\x04; 236:           while ( v37 < 19 );");
	update_extra_cmt		(0X43ED20AF,	E_PREV + 0,	"\x01\x04; 237:           v55 = 0;");
	create_insn	(x=0X43ED20AF);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED20B7,	E_PREV + 0,	"\x01\x04; 238:           v39 = &v85;");
	create_insn	(x=0X43ED20B7);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED20C0,	E_PREV + 0,	"\x01\x04; 239:           while ( *(v39 - 24) )");
	update_extra_cmt		(0X43ED20C4,	E_PREV + 0,	"\x01\x04; 249:           v43 = *(v39 - 2);");
	update_extra_cmt		(0X43ED20CC,	E_PREV + 0,	"\x01\x04; 241:             if ( sub_43F0A300(&v67, &v64, v39 - 20, v39 - 8, v39 + 8) )");
	create_insn	(x=0X43ED20D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED20D7);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED20E1,	E_PREV + 0,	"\x01\x04; 242:               goto LABEL_41;");
	update_extra_cmt		(0X43ED20E9,	E_PREV + 0,	"\x01\x04; 259:           LODWORD(v40) = COERCE_UNSIGNED_INT64(sub_43F146F0(&v64, &v84, 2));");
	create_insn	(x=0X43ED20EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED20F3);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED20FD,	E_PREV + 0,	"\x01\x04; 260:           v41 = a3;");
	create_insn	(x=0X43ED20FD);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED2100,	E_PREV + 0,	"\x01\x04; 261:           iteration_player = player_vec_start;");
	create_insn	(x=0X43ED2100);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED2104,	E_PREV + 0,	"\x01\x04; 262:           if ( v40 > *(a3 + 1) )");
	update_extra_cmt		(0X43ED210E,	E_PREV + 0,	"\x01\x04; 264:             *a3 = v36;");
	create_insn	(x=0X43ED210E);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED2114,	E_PREV + 0,	"\x01\x04; 265:             *(a3 + 1) = v40;");
	update_extra_cmt		(0X43ED2119,	E_PREV + 0,	"\x01\x04; 266:             a3[2] = *(v53 + 16);");
	update_extra_cmt		(0X43ED2124,	E_PREV + 0,	"\x01\x04; 248:           v42 = *(v39 + 1);");
	create_insn	(0X43ED2124);
	create_insn	(x=0X43ED2129);
	op_hex		(x,	1);
	create_insn	(x=0X43ED2130);
	op_hex		(x,	1);
	create_insn	(x=0X43ED2133);
	op_stkvar	(x,	0);
	create_insn	(x=0X43ED2139);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED2141,	E_PREV + 0,	"\x01\x04; 250:           v44 = *(v39 - 1);");
	update_extra_cmt		(0X43ED2147,	E_PREV + 0,	"\x01\x04; 251:           v45 = *v39;");
	update_extra_cmt		(0X43ED214C,	E_PREV + 0,	"\x01\x04; 252:           v46 = *(v39 - 5);");
	create_insn	(x=0X43ED2151);
	op_hex		(x,	1);
	update_extra_cmt		(0X43ED2156,	E_PREV + 0,	"\x01\x04; 253:           v47 = *(v39 - 4);");
	update_extra_cmt		(0X43ED215C,	E_PREV + 0,	"\x01\x04; 254:           v48 = *(v39 - 3);");
	update_extra_cmt		(0X43ED2162,	E_PREV + 0,	"\x01\x04; 255:           sub_43F0A040();");
	create_insn	(x=0X43ED2164);
	op_hex		(x,	1);
	create_insn	(x=0X43ED216B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED2176);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED2186);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED2190);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED219B);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED21AB,	E_PREV + 0,	"\x01\x04; 256:           if ( v42 <= v13 )");
	create_insn	(x=0X43ED21AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43ED21B1);
	op_hex		(x,	1);
	update_extra_cmt		(0X43ED21B7,	E_PREV + 0,	"\x01\x04; 257:             goto LABEL_44;");
	update_extra_cmt		(0X43ED21BD,	E_PREV + 0,	"\x01\x04; 244:             v39 += 84;");
	create_insn	(x=0X43ED21BD);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED21C4,	E_PREV + 0,	"\x01\x04; 246:               goto RE_UPDATE_VALUE;");
	create_insn	(x=0X43ED21C5);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED21CC,	E_PREV + 0,	"\x01\x04; 245:             if ( ++v55 >= 19 )");
	update_extra_cmt		(0X43ED21D2,	E_PREV + 0,	"\x01\x04; 212:             iteration_player = player_vec_start;");
	create_insn	(x=0X43ED21D2);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED21D6,	E_PREV + 0,	"\x01\x04; 214:             v41 = a3;");
	update_extra_cmt		(0X43ED21D6,	E_PREV + 1,	"\x01\x04; 215:             goto MAYBE_END;");
	create_insn	(x=0X43ED21D6);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED21D9,	E_PREV + 0,	"\x01\x04; 269:           player_vec_end_1 = player_vec_end;");
	create_insn	(x=0X43ED21D9);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED21DD,	E_PREV + 0,	"\x01\x04; 271:           ++iteration_player;");
	update_extra_cmt		(0X43ED21E0,	E_PREV + 0,	"\x01\x04; 272:           player_vec_start = iteration_player;");
	create_insn	(x=0X43ED21E0);
	op_stkvar	(x,	0);
	update_extra_cmt		(0X43ED21E4,	E_PREV + 0,	"\x01\x04; 273:           if ( iteration_player == player_vec_end_1 )");
	update_extra_cmt		(0X43ED21EC,	E_PREV + 0,	"\x01\x04; 274:             return v41;");
	update_extra_cmt		(0X43ED21F0,	E_PREV + 0,	"\x01\x04; 279:   return a3;");
	update_extra_cmt		(0X43ED21F6,	E_PREV + 0,	"\x01\x04; 189:             v41 = a3;");
	create_insn	(x=0X43ED21F6);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43ED21F9,	E_PREV + 0,	"\x01\x04; 190:             goto NEXT_PLAYER;");
	create_insn	(0X43ED21FB);
	make_array	(0X43ED2205,	0XB);
	create_insn	(0X43ED2210);
	create_insn	(x=0X43ED2220);
	op_hex		(x,	1);
	create_insn	(x=0X43ED2223);
	op_hex		(x,	1);
	create_insn	(x=0X43ED2228);
	op_hex		(x,	1);
	create_insn	(x=0X43ED2236);
	op_hex		(x,	1);
	create_insn	(x=0X43ED2239);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED224E);
	op_hex		(x,	1);
	set_cmt	(0X43ED225E,	"index",	0);
	set_cmt	(0X43ED2263,	"interface",	0);
	set_cmt	(0X43ED2270,	"this",	0);
	set_cmt	(0X43ED227C,	"a3",	0);
	set_cmt	(0X43ED227E,	"a2",	0);
	set_cmt	(0X43ED2280,	"m_player",	0);
	create_insn	(x=0X43ED2299);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED22A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ED22C0);
	set_cmt	(0X43ED22C3,	"a3",	0);
	set_cmt	(0X43ED22D9,	"cmd",	0);
	create_insn	(x=0X43ED22D9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43ED2304,	0XC);
	create_insn	(0X43ED2310);
	create_insn	(x=0X43ED2313);
	op_hex		(x,	1);
	create_insn	(x=0X43ED2316);
	op_hex		(x,	1);
	set_cmt	(0X43ED234D,	"interface",	0);
	set_cmt	(0X43ED2353,	"index",	0);
	set_cmt	(0X43ED237C,	"index",	0);
	set_cmt	(0X43ED2381,	"interface",	0);
	set_cmt	(0X43ED238E,	"this",	0);
	set_cmt	(0X43ED239A,	"a3",	0);
	set_cmt	(0X43ED239C,	"a2",	0);
	set_cmt	(0X43ED239E,	"m_player",	0);
	set_cmt	(0X43ED23B3,	"index",	0);
	set_cmt	(0X43ED23B8,	"interface",	0);
	set_cmt	(0X43ED23C5,	"this",	0);
	set_cmt	(0X43ED24A4,	"index",	0);
	set_cmt	(0X43ED24A9,	"interface",	0);
	set_cmt	(0X43ED24FF,	"this",	0);
	create_insn	(x=0X43ED250F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED2528,	"this",	0);
	set_cmt	(0X43ED2538,	"end",	0);
	set_cmt	(0X43ED253D,	"start",	0);
	set_cmt	(0X43ED2565,	"vtable",	0);
	set_cmt	(0X43ED2581,	"m_pPlayer",	0);
	set_cmt	(0X43ED2595,	"m_player",	0);
	set_cmt	(0X43ED25C6,	"propHash",	0);
	set_cmt	(0X43ED25CB,	"classHash",	0);
	set_cmt	(0X43ED25EA,	"index",	0);
	set_cmt	(0X43ED25EF,	"interface",	0);
	set_cmt	(0X43ED25FC,	"this",	0);
	set_cmt	(0X43ED2641,	"propHash",	0);
	set_cmt	(0X43ED2646,	"classHash",	0);
	set_cmt	(0X43ED2662,	"cmd",	0);
	create_insn	(x=0X43ED2662);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED268F);
	op_hex		(x,	1);
	make_array	(0X43ED2699,	0X7);
	create_insn	(0X43ED26A0);
	create_insn	(x=0X43ED26A3);
	op_hex		(x,	1);
	create_insn	(x=0X43ED26A6);
	op_hex		(x,	1);
	set_cmt	(0X43ED26DD,	"interface",	0);
	set_cmt	(0X43ED26E3,	"index",	0);
	set_cmt	(0X43ED270C,	"index",	0);
	set_cmt	(0X43ED2711,	"interface",	0);
	set_cmt	(0X43ED271E,	"this",	0);
	set_cmt	(0X43ED272A,	"a3",	0);
	set_cmt	(0X43ED272C,	"a2",	0);
	set_cmt	(0X43ED272E,	"m_player",	0);
	set_cmt	(0X43ED2743,	"index",	0);
	set_cmt	(0X43ED2748,	"interface",	0);
	set_cmt	(0X43ED2755,	"this",	0);
	set_cmt	(0X43ED283A,	"index",	0);
	set_cmt	(0X43ED283F,	"interface",	0);
	set_cmt	(0X43ED289B,	"this",	0);
	create_insn	(x=0X43ED28AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED28C4,	"this",	0);
	set_cmt	(0X43ED28D4,	"end",	0);
	set_cmt	(0X43ED28D9,	"start",	0);
	set_cmt	(0X43ED2901,	"vtable",	0);
	set_cmt	(0X43ED291D,	"m_pPlayer",	0);
	set_cmt	(0X43ED2931,	"m_player",	0);
	set_cmt	(0X43ED2964,	"propHash",	0);
	set_cmt	(0X43ED2969,	"classHash",	0);
	set_cmt	(0X43ED2994,	"propHash",	0);
	set_cmt	(0X43ED2999,	"classHash",	0);
	create_insn	(0X43ED29BF);
	set_cmt	(0X43ED29D2,	"propHash",	0);
	set_cmt	(0X43ED29D7,	"classHash",	0);
	set_cmt	(0X43ED2A0E,	"propHash",	0);
	set_cmt	(0X43ED2A13,	"classHash",	0);
	set_cmt	(0X43ED2AA7,	"propHash",	0);
	set_cmt	(0X43ED2AAC,	"classHash",	0);
	set_cmt	(0X43ED2AC5,	"index",	0);
	set_cmt	(0X43ED2ACA,	"interface",	0);
	set_cmt	(0X43ED2AD7,	"this",	0);
	set_cmt	(0X43ED2AEE,	"propHash",	0);
	set_cmt	(0X43ED2AF3,	"classHash",	0);
	set_cmt	(0X43ED2B3F,	"index",	0);
	set_cmt	(0X43ED2B44,	"interface",	0);
	set_cmt	(0X43ED2B51,	"this",	0);
	set_cmt	(0X43ED2B9C,	"propHash",	0);
	set_cmt	(0X43ED2BA1,	"classHash",	0);
	set_cmt	(0X43ED2BBD,	"cmd",	0);
	create_insn	(x=0X43ED2BBD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED2BEA);
	op_hex		(x,	1);
	create_insn	(0X43ED2BF4);
	set_cmt	(0X43ED2BFA,	"index",	0);
	set_cmt	(0X43ED2BFF,	"interface",	0);
	set_cmt	(0X43ED2C0C,	"this",	0);
	set_cmt	(0X43ED2C53,	"propHash",	0);
	set_cmt	(0X43ED2C58,	"classHash",	0);
	set_cmt	(0X43ED2C74,	"cmd",	0);
	create_insn	(x=0X43ED2C74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED2C9A,	"cmd",	0);
	create_insn	(x=0X43ED2C9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED2CA6);
	op_hex		(x,	1);
	make_array	(0X43ED2CB3,	0XD);
	create_insn	(0X43ED2CC0);
	create_insn	(x=0X43ED2CC3);
	op_hex		(x,	1);
	create_insn	(x=0X43ED2CC6);
	op_hex		(x,	1);
	set_cmt	(0X43ED2CFD,	"interface",	0);
	set_cmt	(0X43ED2D03,	"index",	0);
	set_cmt	(0X43ED2D2A,	"a3",	0);
	set_cmt	(0X43ED2D45,	"propHash",	0);
	set_cmt	(0X43ED2D4A,	"classHash",	0);
	set_cmt	(0X43ED2D62,	"index",	0);
	set_cmt	(0X43ED2D67,	"interface",	0);
	set_cmt	(0X43ED2D74,	"this",	0);
	set_cmt	(0X43ED2D8B,	"propHash",	0);
	set_cmt	(0X43ED2D90,	"classHash",	0);
	set_cmt	(0X43ED2DE7,	"index",	0);
	set_cmt	(0X43ED2DEC,	"interface",	0);
	set_cmt	(0X43ED2E03,	"this",	0);
	set_cmt	(0X43ED2ED9,	"index",	0);
	set_cmt	(0X43ED2EEA,	"interface",	0);
	set_cmt	(0X43ED2F38,	"this",	0);
	create_insn	(x=0X43ED2F48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED2F61,	"this",	0);
	set_cmt	(0X43ED2F71,	"end",	0);
	set_cmt	(0X43ED2F76,	"start",	0);
	create_insn	(0X43ED2FB3);
	set_cmt	(0X43ED3016,	"index",	0);
	set_cmt	(0X43ED301B,	"interface",	0);
	set_cmt	(0X43ED3028,	"this",	0);
	set_cmt	(0X43ED3034,	"a3",	0);
	set_cmt	(0X43ED3036,	"a2",	0);
	set_cmt	(0X43ED3038,	"m_player",	0);
	set_cmt	(0X43ED304E,	"cmd",	0);
	create_insn	(x=0X43ED304E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED307B);
	op_hex		(x,	1);
	make_array	(0X43ED3085,	0XB);
	create_insn	(0X43ED3090);
	set_name	(0X43ED3090,	"OneTap::Features::LegitBot::AntiAim::Instance");
	create_insn	(x=0X43ED3093);
	op_hex		(x,	1);
	create_insn	(x=0X43ED3096);
	op_hex		(x,	1);
	create_insn	(x=0X43ED3099);
	op_hex		(x,	1);
	create_insn	(x=0X43ED30A0);
	op_stkvar	(x,	0);
	set_cmt	(0X43ED30E2,	"index",	0);
	set_cmt	(0X43ED30E7,	"interface",	0);
	set_cmt	(0X43ED30F4,	"this",	0);
	create_insn	(x=0X43ED3108);
	op_hex		(x,	1);
	set_cmt	(0X43ED310D,	"propHash",	0);
	create_insn	(x=0X43ED3112);
	op_hex		(x,	1);
	set_cmt	(0X43ED3115,	"classHash",	0);
	create_insn	(0X43ED312C);
	set_cmt	(0X43ED3142,	"index",	0);
	set_cmt	(0X43ED3147,	"interface",	0);
	set_cmt	(0X43ED3154,	"this",	0);
	create_insn	(x=0X43ED3168);
	op_hex		(x,	1);
	set_cmt	(0X43ED316D,	"propHash",	0);
	create_insn	(x=0X43ED3172);
	op_hex		(x,	1);
	set_cmt	(0X43ED3175,	"classHash",	0);
	create_insn	(0X43ED318C);
	set_cmt	(0X43ED31A2,	"index",	0);
	set_cmt	(0X43ED31A7,	"interface",	0);
	set_cmt	(0X43ED31B4,	"this",	0);
	set_cmt	(0X43ED31C0,	"player",	0);
	set_cmt	(0X43ED31D5,	"index",	0);
	set_cmt	(0X43ED31DA,	"interface",	0);
	set_cmt	(0X43ED31E7,	"this",	0);
	set_cmt	(0X43ED31F3,	"player",	0);
	set_cmt	(0X43ED3205,	"propHash",	0);
	set_cmt	(0X43ED320A,	"classHash",	0);
	set_cmt	(0X43ED3226,	"switch 84 cases ",	0);
	create_insn	(x=0X43ED322C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED3233,	"switch jump",	0);
	create_insn	(x=0X43ED3233);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED323A,	"jumptable 43ED3233 default case, cases 5,6,12,15,18,20-22,31,37,41-59,62,65-84",	1);
	create_insn	(0X43ED323A);
	set_name	(0X43ED323A,	"def_43ED3233");
	set_cmt	(0X43ED3240,	"index",	0);
	set_cmt	(0X43ED3245,	"interface",	0);
	set_cmt	(0X43ED3252,	"this",	0);
	set_cmt	(0X43ED325E,	"player",	0);
	set_cmt	(0X43ED3270,	"propHash",	0);
	set_cmt	(0X43ED3275,	"classHash",	0);
	set_cmt	(0X43ED3291,	"switch 84 cases ",	0);
	create_insn	(x=0X43ED329B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED32A2,	"switch jump",	0);
	create_insn	(x=0X43ED32A2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED32A9,	"switch 19 cases ",	0);
	create_insn	(x=0X43ED32A9);
	op_hex		(x,	1);
	create_insn	(x=0X43ED32B7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED32BE,	"switch jump",	0);
	create_insn	(x=0X43ED32BE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED32C5,	"jumptable 43ED3233 cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-40,60,61,63,64\njumptable 43ED32A2 cases 41,42,59\njumptable 43ED32BE cases 505-509,512,514-516,519,520,522,523",	1);
	create_insn	(x=0X43ED32C5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED32D1);
	op_hex		(x,	1);
	set_cmt	(0X43ED32E1,	"index",	0);
	set_cmt	(0X43ED32E6,	"interface",	0);
	set_cmt	(0X43ED32F3,	"this",	0);
	set_cmt	(0X43ED32FF,	"a3",	0);
	set_cmt	(0X43ED3301,	"a2",	0);
	set_cmt	(0X43ED3303,	"m_player",	0);
	set_cmt	(0X43ED330E,	"cmd",	0);
	create_insn	(x=0X43ED330E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED331A);
	op_hex		(x,	1);
	set_cmt	(0X43ED332A,	"index",	0);
	set_cmt	(0X43ED332F,	"interface",	0);
	set_cmt	(0X43ED333C,	"this",	0);
	set_cmt	(0X43ED3348,	"a3",	0);
	set_cmt	(0X43ED334A,	"a2",	0);
	set_cmt	(0X43ED334C,	"m_player",	0);
	set_cmt	(0X43ED3357,	"cmd",	0);
	create_insn	(x=0X43ED3357);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED3363);
	op_hex		(x,	1);
	set_cmt	(0X43ED3389,	"index",	0);
	set_cmt	(0X43ED338E,	"interface",	0);
	set_cmt	(0X43ED339B,	"this",	0);
	set_cmt	(0X43ED33B2,	"propHash",	0);
	set_cmt	(0X43ED33B7,	"classHash",	0);
	create_insn	(x=0X43ED33C6);
	op_hex		(x,	1);
	create_insn	(0X43ED33E3);
	set_cmt	(0X43ED33F1,	"index",	0);
	set_cmt	(0X43ED33F6,	"interface",	0);
	set_cmt	(0X43ED3408,	"this",	0);
	set_cmt	(0X43ED341F,	"propHash",	0);
	set_cmt	(0X43ED3424,	"classHash",	0);
	set_cmt	(0X43ED3463,	"index",	0);
	set_cmt	(0X43ED3468,	"interface",	0);
	set_cmt	(0X43ED3475,	"this",	0);
	set_cmt	(0X43ED348C,	"propHash",	0);
	set_cmt	(0X43ED3491,	"classHash",	0);
	set_cmt	(0X43ED34CD,	"cmd",	0);
	create_insn	(x=0X43ED34CD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED3519,	"cmd",	0);
	create_insn	(x=0X43ED3519);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ED3541);
	set_cmt	(0X43ED3593,	"interface",	0);
	set_cmt	(0X43ED3599,	"index",	0);
	create_insn	(0X43ED35C2);
	set_cmt	(0X43ED35CA,	"cmd",	0);
	create_insn	(x=0X43ED35CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED3619,	"cmd",	0);
	create_insn	(x=0X43ED3619);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED362A,	"jumptable 43ED32A2 default case, cases 1-40,43-58,60-84\njumptable 43ED32BE default case, cases 510,511,513,517,518,521",	1);
	set_name	(0X43ED362A,	"def_43ED32A2");
	make_array	(0X43ED3632,	0X2);
	set_cmt	(0X43ED3634,	"jump table for switch statement",	0);
	create_dword	(x=0X43ED3634);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43ED3634,	"jpt_43ED3233");
	set_cmt	(0X43ED3640,	"indirect table for switch statement",	0);
	create_byte	(0X43ED3640);
	make_array	(0X43ED3640,	0X54);
	set_cmt	(0X43ED3694,	"jump table for switch statement",	0);
	create_dword	(x=0X43ED3694);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43ED3694,	"jpt_43ED32A2");
	set_cmt	(0X43ED36A0,	"indirect table for switch statement",	0);
	create_byte	(0X43ED36A0);
	make_array	(0X43ED36A0,	0X54);
	set_cmt	(0X43ED36F4,	"jump table for switch statement",	0);
	create_dword	(x=0X43ED36F4);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43ED36F4,	"jpt_43ED32BE");
	set_cmt	(0X43ED36FC,	"indirect table for switch statement",	0);
	create_byte	(0X43ED36FC);
	make_array	(0X43ED36FC,	0X13);
	create_insn	(0X43ED3710);
	create_insn	(x=0X43ED3713);
	op_hex		(x,	1);
	set_cmt	(0X43ED3716,	"interface",	0);
	create_insn	(x=0X43ED371C);
	op_hex		(x,	1);
	set_cmt	(0X43ED3722,	"index",	0);
	set_cmt	(0X43ED372E,	"arg",	0);
	set_cmt	(0X43ED3736,	"this",	0);
	set_cmt	(0X43ED374E,	"propHash",	0);
	set_cmt	(0X43ED3753,	"classHash",	0);
	set_cmt	(0X43ED376E,	"propHash",	0);
	set_cmt	(0X43ED3773,	"classHash",	0);
	create_insn	(x=0X43ED3872);
	op_hex		(x,	1);
	create_insn	(x=0X43ED39F8);
	op_hex		(x,	1);
	create_insn	(x=0X43ED3A2D);
	op_hex		(x,	1);
	create_insn	(x=0X43ED3B2C);
	op_hex		(x,	1);
	create_insn	(x=0X43ED3B61);
	op_hex		(x,	1);
	set_cmt	(0X43ED3C4B,	"index",	0);
	set_cmt	(0X43ED3C50,	"interface",	0);
	set_cmt	(0X43ED3C5D,	"this",	0);
	create_insn	(x=0X43ED3C7B);
	op_hex		(x,	1);
	create_insn	(0X43ED3CCA);
	create_insn	(x=0X43ED3E0E);
	op_hex		(x,	1);
	create_insn	(x=0X43ED3E43);
	op_hex		(x,	1);
	create_insn	(x=0X43ED3F42);
	op_hex		(x,	1);
	create_insn	(x=0X43ED3F77);
	op_hex		(x,	1);
	set_cmt	(0X43ED4065,	"index",	0);
	set_cmt	(0X43ED406A,	"interface",	0);
	set_cmt	(0X43ED4077,	"this",	0);
	create_insn	(x=0X43ED4099);
	op_hex		(x,	1);
	make_array	(0X43ED40D5,	0XB);
	create_insn	(0X43ED40E0);
	create_insn	(x=0X43ED40E3);
	op_hex		(x,	1);
	create_insn	(x=0X43ED40EB);
	op_hex		(x,	1);
	set_cmt	(0X43ED40EF,	"arg",	0);
	create_insn	(x=0X43ED40F0);
	op_hex		(x,	1);
	create_insn	(x=0X43ED40F4);
	op_hex		(x,	1);
	create_insn	(0X43ED4130);
	create_insn	(x=0X43ED417C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED4183);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED4193,	"this",	0);
	set_cmt	(0X43ED41A5,	"m_pPlayer",	0);
	create_insn	(0X43ED41F9);
	set_cmt	(0X43ED4259,	"propHash",	0);
	set_cmt	(0X43ED425E,	"classHash",	0);
	set_cmt	(0X43ED428D,	"propHash",	0);
	set_cmt	(0X43ED4292,	"classHash",	0);
	set_cmt	(0X43ED42BD,	"m_player",	0);
	set_cmt	(0X43ED42D5,	"propHash",	0);
	set_cmt	(0X43ED42DA,	"classHash",	0);
	set_cmt	(0X43ED4311,	"propHash",	0);
	set_cmt	(0X43ED4316,	"classHash",	0);
	set_cmt	(0X43ED432F,	"index",	0);
	set_cmt	(0X43ED4334,	"interface",	0);
	set_cmt	(0X43ED4341,	"this",	0);
	set_cmt	(0X43ED4359,	"propHash",	0);
	set_cmt	(0X43ED435E,	"classHash",	0);
	set_cmt	(0X43ED447B,	"angles",	0);
	set_cmt	(0X43ED44F1,	"propHash",	0);
	set_cmt	(0X43ED44F6,	"classHash",	0);
	set_cmt	(0X43ED459F,	"index",	0);
	set_cmt	(0X43ED45A4,	"interface",	0);
	set_cmt	(0X43ED45B1,	"this",	0);
	set_cmt	(0X43ED45CB,	"propHash",	0);
	set_cmt	(0X43ED45D0,	"classHash",	0);
	set_cmt	(0X43ED45EB,	"propHash",	0);
	set_cmt	(0X43ED45F0,	"classHash",	0);
	set_cmt	(0X43ED46F1,	"angles",	0);
	set_cmt	(0X43ED4755,	"angles",	0);
	create_insn	(0X43ED482B);
	make_array	(0X43ED48A7,	0X9);
	create_insn	(0X43ED48B0);
	create_insn	(x=0X43ED48B3);
	op_hex		(x,	1);
	create_insn	(x=0X43ED48B6);
	op_hex		(x,	1);
	create_insn	(x=0X43ED48EA);
	op_hex		(x,	1);
	create_insn	(x=0X43ED48F3);
	op_hex		(x,	1);
	create_insn	(0X43ED48FD);
	set_cmt	(0X43ED490A,	"index",	0);
	set_cmt	(0X43ED4918,	"interface",	0);
	set_cmt	(0X43ED4939,	"this",	0);
	set_cmt	(0X43ED4953,	"index",	0);
	set_cmt	(0X43ED4958,	"interface",	0);
	set_cmt	(0X43ED4965,	"this",	0);
	set_cmt	(0X43ED4971,	"m_pPlayer",	0);
	set_cmt	(0X43ED4986,	"index",	0);
	set_cmt	(0X43ED498B,	"interface",	0);
	set_cmt	(0X43ED4998,	"this",	0);
	set_cmt	(0X43ED49A4,	"player",	0);
	set_cmt	(0X43ED49B9,	"index",	0);
	set_cmt	(0X43ED49BE,	"interface",	0);
	set_cmt	(0X43ED49CB,	"this",	0);
	set_cmt	(0X43ED49D7,	"player",	0);
	set_cmt	(0X43ED49E9,	"propHash",	0);
	set_cmt	(0X43ED49EE,	"classHash",	0);
	set_cmt	(0X43ED4A12,	"switch 84 cases ",	0);
	create_insn	(x=0X43ED4A1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED4A23,	"switch jump",	0);
	create_insn	(x=0X43ED4A23);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED4A2A,	"jumptable 43ED4A23 cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-40,60,61,63,64",	1);
	create_insn	(0X43ED4A2A);
	create_insn	(x=0X43ED4A2F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED4A36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED4A44,	"index",	0);
	set_cmt	(0X43ED4A49,	"interface",	0);
	set_cmt	(0X43ED4A56,	"this",	0);
	create_insn	(x=0X43ED4A76);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED4A7D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED4A8E);
	op_hex		(x,	1);
	create_insn	(x=0X43ED4A9C);
	op_hex		(x,	1);
	set_cmt	(0X43ED4B43,	"index",	0);
	set_cmt	(0X43ED4B48,	"interface",	0);
	set_cmt	(0X43ED4B55,	"this",	0);
	set_cmt	(0X43ED4B6D,	"propHash",	0);
	set_cmt	(0X43ED4B72,	"classHash",	0);
	create_insn	(x=0X43ED4C05);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED4C0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED4C23,	"index",	0);
	set_cmt	(0X43ED4C28,	"interface",	0);
	set_cmt	(0X43ED4C3C,	"this",	0);
	set_cmt	(0X43ED4C53,	"propHash",	0);
	set_cmt	(0X43ED4C58,	"classHash",	0);
	set_cmt	(0X43ED4C6E,	"cmd",	0);
	create_insn	(x=0X43ED4C6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED4C83);
	op_hex		(x,	1);
	create_insn	(0X43ED4CC8);
	create_insn	(0X43ED4CD1);
	create_insn	(0X43ED4CFD);
	set_cmt	(0X43ED4D4A,	"index",	0);
	set_cmt	(0X43ED4D4F,	"interface",	0);
	set_cmt	(0X43ED4D5C,	"this",	0);
	set_cmt	(0X43ED4D68,	"player",	0);
	set_cmt	(0X43ED4D7A,	"propHash",	0);
	set_cmt	(0X43ED4D7F,	"classHash",	0);
	set_cmt	(0X43ED4D92,	"switch 33 cases ",	0);
	create_insn	(x=0X43ED4D92);
	op_hex		(x,	1);
	create_insn	(x=0X43ED4D9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED4DA5,	"switch jump",	0);
	create_insn	(x=0X43ED4DA5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED4DAC,	"jumptable 43ED4DA5 cases 8,9,11,38-40",	1);
	create_insn	(0X43ED4DAC);
	set_cmt	(0X43ED4DB2,	"index",	0);
	set_cmt	(0X43ED4DB7,	"interface",	0);
	set_cmt	(0X43ED4DC4,	"this",	0);
	set_cmt	(0X43ED4DD0,	"player",	0);
	set_cmt	(0X43ED4DE2,	"propHash",	0);
	set_cmt	(0X43ED4DE7,	"classHash",	0);
	set_cmt	(0X43ED4E0C,	"index",	0);
	set_cmt	(0X43ED4E11,	"interface",	0);
	set_cmt	(0X43ED4E1E,	"this",	0);
	set_cmt	(0X43ED4E35,	"propHash",	0);
	set_cmt	(0X43ED4E3A,	"classHash",	0);
	set_cmt	(0X43ED4E53,	"jumptable 43ED4DA5 default case, cases 10,12-37",	1);
	set_name	(0X43ED4E53,	"def_43ED4DA5");
	set_cmt	(0X43ED4E7D,	"interface",	0);
	set_cmt	(0X43ED4E83,	"index",	0);
	create_insn	(x=0X43ED4EA7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED4EAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED4EE9,	"interface",	0);
	set_cmt	(0X43ED4EEF,	"index",	0);
	set_cmt	(0X43ED4F18,	"index",	0);
	set_cmt	(0X43ED4F1D,	"interface",	0);
	set_cmt	(0X43ED4F42,	"this",	0);
	set_cmt	(0X43ED4F60,	"a2",	0);
	set_cmt	(0X43ED4F64,	"a1",	0);
	set_cmt	(0X43ED4F9F,	"angles",	0);
	set_cmt	(0X43ED4FDE,	"this",	0);
	set_cmt	(0X43ED4FE8,	"a2",	0);
	set_cmt	(0X43ED4FF4,	"angles",	0);
	create_insn	(x=0X43ED50D6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED50DD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ED51B3);
	create_insn	(x=0X43ED5243);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED524A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED525C,	"index",	0);
	set_cmt	(0X43ED5261,	"interface",	0);
	set_cmt	(0X43ED5286,	"this",	0);
	set_cmt	(0X43ED52A4,	"a2",	0);
	set_cmt	(0X43ED52A8,	"a1",	0);
	set_cmt	(0X43ED52E3,	"angles",	0);
	set_cmt	(0X43ED5322,	"this",	0);
	set_cmt	(0X43ED532C,	"a2",	0);
	set_cmt	(0X43ED5338,	"angles",	0);
	set_cmt	(0X43ED54AD,	"jumptable 43ED4A23 default case, cases 5,6,12,15,18,20-22,31,37,41-59,62,65-84",	1);
	set_name	(0X43ED54AD,	"def_43ED4A23");
	make_array	(0X43ED54B5,	0X3);
	set_cmt	(0X43ED54B8,	"jump table for switch statement",	0);
	create_dword	(x=0X43ED54B8);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43ED54B8,	"jpt_43ED4A23");
	set_cmt	(0X43ED54C4,	"indirect table for switch statement",	0);
	create_byte	(0X43ED54C4);
	make_array	(0X43ED54C4,	0X54);
	set_cmt	(0X43ED5518,	"jump table for switch statement",	0);
	create_dword	(x=0X43ED5518);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43ED5518,	"jpt_43ED4DA5");
	set_cmt	(0X43ED5520,	"indirect table for switch statement",	0);
	create_byte	(0X43ED5520);
	make_array	(0X43ED5520,	0X21);
	make_array	(0X43ED5541,	0XF);
	create_insn	(0X43ED5550);
	make_array	(0X43ED556B,	0X5);
	create_insn	(0X43ED5570);
	set_name	(0X43ED5570,	"C_SDK::Server::GetGlobalTickIntervalSecond");
	make_array	(0X43ED557B,	0X5);
	create_insn	(0X43ED5580);
	make_array	(0X43ED558D,	0X3);
	create_insn	(0X43ED5590);
	make_array	(0X43ED559D,	0X3);
	create_insn	(0X43ED55A0);
	create_insn	(x=0X43ED55A3);
	op_hex		(x,	1);
	create_insn	(x=0X43ED55A6);
	op_hex		(x,	1);
	create_insn	(x=0X43ED55A9);
	op_hex		(x,	1);
	set_cmt	(0X43ED55B6,	"interface",	0);
	create_insn	(x=0X43ED55BC);
	op_hex		(x,	1);
	set_cmt	(0X43ED55BF,	"index",	0);
	set_cmt	(0X43ED55D3,	"this",	0);
	set_cmt	(0X43ED560F,	"interface",	0);
	set_cmt	(0X43ED5615,	"index",	0);
	create_insn	(x=0X43ED5760);
	op_hex		(x,	1);
	create_insn	(x=0X43ED57B1);
	op_hex		(x,	1);
	make_array	(0X43ED57F3,	0XD);
	create_insn	(0X43ED5800);
	set_name	(0X43ED5800,	"OneTap::Features::LegitBot::Instance");
	create_insn	(x=0X43ED5803);
	op_hex		(x,	1);
	create_insn	(x=0X43ED5806);
	op_hex		(x,	1);
	set_cmt	(0X43ED582F,	"index",	0);
	set_cmt	(0X43ED5834,	"interface",	0);
	set_cmt	(0X43ED5841,	"this",	0);
	set_cmt	(0X43ED585B,	"index",	0);
	set_cmt	(0X43ED5860,	"interface",	0);
	set_cmt	(0X43ED586D,	"this",	0);
	set_cmt	(0X43ED5879,	"m_pPlayer",	0);
	set_cmt	(0X43ED588E,	"index",	0);
	set_cmt	(0X43ED5893,	"interface",	0);
	set_cmt	(0X43ED58A0,	"this",	0);
	set_cmt	(0X43ED58AC,	"player",	0);
	set_cmt	(0X43ED58C1,	"index",	0);
	set_cmt	(0X43ED58C6,	"interface",	0);
	set_cmt	(0X43ED58D3,	"this",	0);
	set_cmt	(0X43ED58DF,	"player",	0);
	set_cmt	(0X43ED58F1,	"propHash",	0);
	set_cmt	(0X43ED58F6,	"classHash",	0);
	create_insn	(0X43ED5916);
	set_cmt	(0X43ED591C,	"index",	0);
	set_cmt	(0X43ED5921,	"interface",	0);
	set_cmt	(0X43ED592E,	"this",	0);
	set_cmt	(0X43ED593A,	"player",	0);
	set_cmt	(0X43ED594C,	"propHash",	0);
	set_cmt	(0X43ED5951,	"classHash",	0);
	set_cmt	(0X43ED596D,	"switch 84 cases ",	0);
	create_insn	(x=0X43ED5973);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED597A,	"switch jump",	0);
	create_insn	(x=0X43ED597A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED5981,	"switch 19 cases ",	0);
	create_insn	(x=0X43ED5981);
	op_hex		(x,	1);
	create_insn	(x=0X43ED598B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED5992,	"switch jump",	0);
	create_insn	(x=0X43ED5992);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED5999,	"jumptable 43ED597A cases 41,42,59\njumptable 43ED5992 cases 505-509,512,514-516,519,520,522,523",	1);
	create_insn	(0X43ED5999);
	set_cmt	(0X43ED59A3,	"jumptable 43ED597A default case, cases 1-40,43-58,60-84\njumptable 43ED5992 default case, cases 510,511,513,517,518,521",	1);
	create_insn	(0X43ED59A3);
	set_name	(0X43ED59A3,	"def_43ED597A");
	set_cmt	(0X43ED59C1,	"index",	0);
	set_cmt	(0X43ED59C6,	"interface",	0);
	set_cmt	(0X43ED59D3,	"this",	0);
	set_cmt	(0X43ED59DF,	"player",	0);
	set_cmt	(0X43ED59F1,	"propHash",	0);
	set_cmt	(0X43ED59F6,	"classHash",	0);
	set_cmt	(0X43ED5A1A,	"switch 84 cases ",	0);
	create_insn	(x=0X43ED5A24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED5A2B,	"switch jump",	0);
	create_insn	(x=0X43ED5A2B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED5A32,	"jumptable 43ED5A2B cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-40,60,61,63,64",	1);
	create_insn	(0X43ED5A32);
	create_insn	(x=0X43ED5A3F);
	op_hex		(x,	1);
	create_insn	(x=0X43ED5A44);
	op_hex		(x,	1);
	create_insn	(x=0X43ED5A51);
	op_hex		(x,	1);
	create_insn	(x=0X43ED5A54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5A69);
	op_hex		(x,	1);
	set_cmt	(0X43ED5A79,	"index",	0);
	set_cmt	(0X43ED5A7E,	"interface",	0);
	set_cmt	(0X43ED5A8B,	"this",	0);
	set_cmt	(0X43ED5A97,	"a3",	0);
	set_cmt	(0X43ED5A99,	"a2",	0);
	set_cmt	(0X43ED5A9B,	"m_player",	0);
	create_insn	(x=0X43ED5AB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5ABB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5ADB);
	op_stkvar	(x,	1);
	set_cmt	(0X43ED5ADF,	"a3",	0);
	create_insn	(x=0X43ED5AE5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43ED5AF1);
	op_stkvar	(x,	1);
	set_cmt	(0X43ED5AF7,	"cmd",	0);
	create_insn	(x=0X43ED5AF7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED5B27,	"jumptable 43ED5A2B default case, cases 5,6,12,15,18,20-22,31,37,41-59,62,65-84",	1);
	set_name	(0X43ED5B27,	"def_43ED5A2B");
	set_cmt	(0X43ED5B2C,	"jump table for switch statement",	0);
	create_dword	(x=0X43ED5B2C);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43ED5B2C,	"jpt_43ED597A");
	set_cmt	(0X43ED5B38,	"indirect table for switch statement",	0);
	create_byte	(0X43ED5B38);
	make_array	(0X43ED5B38,	0X54);
	set_cmt	(0X43ED5B8C,	"jump table for switch statement",	0);
	create_dword	(x=0X43ED5B8C);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43ED5B8C,	"jpt_43ED5992");
	set_cmt	(0X43ED5B94,	"indirect table for switch statement",	0);
	create_byte	(0X43ED5B94);
	make_array	(0X43ED5B94,	0X13);
	set_cmt	(0X43ED5BA8,	"jump table for switch statement",	0);
	create_dword	(x=0X43ED5BA8);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43ED5BA8,	"jpt_43ED5A2B");
	set_cmt	(0X43ED5BB4,	"indirect table for switch statement",	0);
	create_byte	(0X43ED5BB4);
	make_array	(0X43ED5BB4,	0X54);
	make_array	(0X43ED5C08,	0X8);
	create_insn	(0X43ED5C10);
	set_name	(0X43ED5C10,	"OneTap::Features::Hooks::ListLeavesInBox");
	create_insn	(x=0X43ED5C13);
	op_stkvar	(x,	0);
	set_cmt	(0X43ED5C22,	"_DWORD",	0);
	create_insn	(x=0X43ED5C22);
	op_stkvar	(x,	0);
	set_cmt	(0X43ED5C2A,	"_DWORD",	0);
	create_insn	(x=0X43ED5C2A);
	op_stkvar	(x,	0);
	set_cmt	(0X43ED5C2D,	"_DWORD",	0);
	create_insn	(x=0X43ED5C2D);
	op_stkvar	(x,	0);
	set_cmt	(0X43ED5C30,	"_DWORD",	0);
	create_insn	(x=0X43ED5C30);
	op_stkvar	(x,	0);
	create_insn	(0X43ED5C3B);
	create_insn	(0X43ED5C52);
	create_insn	(0X43ED5C6A);
	create_insn	(x=0X43ED5C74);
	op_stkvar	(x,	1);
	set_cmt	(0X43ED5C84,	"m_player",	0);
	set_cmt	(0X43ED5CB1,	"_DWORD",	0);
	set_cmt	(0X43ED5CB3,	"_DWORD",	0);
	set_cmt	(0X43ED5CB5,	"_DWORD",	0);
	create_insn	(x=0X43ED5CB5);
	op_stkvar	(x,	0);
	set_cmt	(0X43ED5CBD,	"_DWORD",	0);
	create_insn	(x=0X43ED5CBD);
	op_stkvar	(x,	0);
	set_cmt	(0X43ED5CC0,	"_DWORD",	0);
	create_insn	(x=0X43ED5CC0);
	op_stkvar	(x,	0);
	set_cmt	(0X43ED5CC3,	"_DWORD",	0);
	create_insn	(x=0X43ED5CC3);
	op_stkvar	(x,	0);
	create_insn	(0X43ED5CCF);
	set_cmt	(0X43ED5CD3,	"_DWORD",	0);
	create_insn	(x=0X43ED5CD3);
	op_stkvar	(x,	0);
	set_cmt	(0X43ED5CDB,	"_DWORD",	0);
	set_cmt	(0X43ED5CDD,	"_DWORD",	0);
	create_insn	(x=0X43ED5CDD);
	op_stkvar	(x,	0);
	set_cmt	(0X43ED5CE0,	"_DWORD",	0);
	set_cmt	(0X43ED5CE2,	"_DWORD",	0);
	create_insn	(x=0X43ED5CE2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED5CE7,	"_DWORD",	0);
	create_insn	(x=0X43ED5CE7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43ED5CF5,	0XB);
	set_cmt	(0X43ED5D00,	"interface",	0);
	create_insn	(0X43ED5D00);
	set_cmt	(0X43ED5D06,	"index",	0);
	set_cmt	(0X43ED5D19,	"this",	0);
	create_insn	(x=0X43ED5D53);
	op_hex		(x,	1);
	create_insn	(x=0X43ED5D64);
	op_hex		(x,	1);
	create_insn	(x=0X43ED5D75);
	op_hex		(x,	1);
	create_insn	(x=0X43ED5DB5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5DBD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5DC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5DD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5DDB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5DE3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5DEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5DF6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5DFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5E0A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5E15);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5E1D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5E28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5E30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5E3B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5E43);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5E4B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5E57);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5E62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5E6A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5E75);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5E7D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5E88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5E90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5E98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5EA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5EAF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5EB7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5EC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5ECA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5ED5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5EDD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5EE5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5EF1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5EFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5F04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5F0F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5F17);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5F22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5F2A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5F32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5F3E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5F49);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5F51);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5F5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5F64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5F6F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED5F77);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5FBB);
	op_hex		(x,	1);
	create_insn	(x=0X43ED5FBF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5FDD);
	op_hex		(x,	1);
	create_insn	(x=0X43ED5FE1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED5FF7);
	op_hex		(x,	1);
	create_insn	(x=0X43ED602F);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6040);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6051);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6093);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED609B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED60A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED60AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED60B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED60C1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED60CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED60D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED60DF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED60E7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED60EF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED60FB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED6106);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED610E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED6119);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED6121);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED612C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED6134);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED613C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED6148);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED6153);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED615B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED6166);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED616E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED6179);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED6181);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED6189);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED6195);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED61A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED61A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED61B3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED61BB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED61C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED61CE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED61D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED61E2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED61ED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED61F5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED6200);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED6208);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED6213);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED621B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED6223);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED622F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED623A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED6242);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED624D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED6255);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43ED6287,	0X9);
	create_insn	(0X43ED6290);
	create_insn	(x=0X43ED6293);
	op_hex		(x,	1);
	set_cmt	(0X43ED6296,	"interface",	0);
	create_insn	(x=0X43ED629C);
	op_hex		(x,	1);
	set_cmt	(0X43ED629F,	"index",	0);
	set_cmt	(0X43ED62B4,	"this",	0);
	set_cmt	(0X43ED62CB,	"propHash",	0);
	set_cmt	(0X43ED62D0,	"classHash",	0);
	set_cmt	(0X43ED62E2,	"index",	0);
	create_insn	(x=0X43ED62ED);
	op_hex		(x,	1);
	set_cmt	(0X43ED62EF,	"interface",	0);
	set_cmt	(0X43ED6301,	"this",	0);
	set_cmt	(0X43ED6318,	"propHash",	0);
	set_cmt	(0X43ED631D,	"classHash",	0);
	set_cmt	(0X43ED63BC,	"index",	0);
	set_cmt	(0X43ED63C7,	"interface",	0);
	set_cmt	(0X43ED63E5,	"this",	0);
	create_insn	(x=0X43ED63F9);
	op_hex		(x,	1);
	set_cmt	(0X43ED63FE,	"propHash",	0);
	create_insn	(x=0X43ED6403);
	op_hex		(x,	1);
	set_cmt	(0X43ED6406,	"classHash",	0);
	create_insn	(0X43ED641D);
	set_cmt	(0X43ED6426,	"index",	0);
	set_cmt	(0X43ED6431,	"interface",	0);
	set_cmt	(0X43ED644E,	"this",	0);
	create_insn	(x=0X43ED6462);
	op_hex		(x,	1);
	set_cmt	(0X43ED6467,	"propHash",	0);
	create_insn	(x=0X43ED646C);
	op_hex		(x,	1);
	set_cmt	(0X43ED646F,	"classHash",	0);
	create_insn	(0X43ED6486);
	set_cmt	(0X43ED648F,	"index",	0);
	set_cmt	(0X43ED649A,	"interface",	0);
	set_cmt	(0X43ED64C5,	"this",	0);
	set_cmt	(0X43ED64D1,	"player",	0);
	set_cmt	(0X43ED64E6,	"index",	0);
	set_cmt	(0X43ED64EB,	"interface",	0);
	set_cmt	(0X43ED64F8,	"this",	0);
	set_cmt	(0X43ED6504,	"player",	0);
	set_cmt	(0X43ED6528,	"propHash",	0);
	set_cmt	(0X43ED652D,	"classHash",	0);
	set_cmt	(0X43ED6553,	"index",	0);
	set_cmt	(0X43ED6558,	"interface",	0);
	set_cmt	(0X43ED6565,	"this",	0);
	set_cmt	(0X43ED6571,	"player",	0);
	set_cmt	(0X43ED6591,	"propHash",	0);
	set_cmt	(0X43ED6596,	"classHash",	0);
	create_insn	(0X43ED662F);
	set_cmt	(0X43ED664C,	"index",	0);
	set_cmt	(0X43ED665F,	"interface",	0);
	set_cmt	(0X43ED6682,	"this",	0);
	create_insn	(x=0X43ED6696);
	op_hex		(x,	1);
	set_cmt	(0X43ED669B,	"propHash",	0);
	create_insn	(x=0X43ED66A0);
	op_hex		(x,	1);
	set_cmt	(0X43ED66A3,	"classHash",	0);
	create_insn	(0X43ED66BA);
	create_insn	(0X43ED6728);
	make_array	(0X43ED675D,	0X3);
	create_insn	(0X43ED6760);
	make_array	(0X43ED677B,	0X5);
	create_insn	(0X43ED6780);
	make_array	(0X43ED678B,	0X5);
	create_insn	(0X43ED6790);
	set_cmt	(0X43ED6797,	"index",	0);
	set_cmt	(0X43ED679F,	"interface",	0);
	set_cmt	(0X43ED67AC,	"this",	0);
	set_cmt	(0X43ED67C3,	"propHash",	0);
	set_cmt	(0X43ED67C8,	"classHash",	0);
	set_cmt	(0X43ED67DA,	"index",	0);
	set_cmt	(0X43ED67FB,	"interface",	0);
	set_cmt	(0X43ED6808,	"this",	0);
	set_cmt	(0X43ED681F,	"propHash",	0);
	set_cmt	(0X43ED6824,	"classHash",	0);
	set_cmt	(0X43ED6837,	"index",	0);
	create_insn	(x=0X43ED683C);
	op_hex		(x,	1);
	set_cmt	(0X43ED684E,	"interface",	0);
	set_cmt	(0X43ED6862,	"this",	0);
	set_cmt	(0X43ED6879,	"propHash",	0);
	set_cmt	(0X43ED687E,	"classHash",	0);
	set_cmt	(0X43ED6899,	"index",	0);
	set_cmt	(0X43ED689E,	"interface",	0);
	set_cmt	(0X43ED68AB,	"this",	0);
	set_cmt	(0X43ED68C2,	"propHash",	0);
	set_cmt	(0X43ED68C7,	"classHash",	0);
	create_insn	(0X43ED68E0);
	make_array	(0X43ED6907,	0X9);
	create_insn	(0X43ED6910);
	create_insn	(x=0X43ED6913);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6916);
	op_hex		(x,	1);
	set_cmt	(0X43ED6923,	"index",	0);
	set_cmt	(0X43ED692B,	"interface",	0);
	set_cmt	(0X43ED693C,	"this",	0);
	set_cmt	(0X43ED6953,	"propHash",	0);
	set_cmt	(0X43ED6958,	"classHash",	0);
	create_insn	(x=0X43ED6987);
	op_hex		(x,	1);
	create_insn	(x=0X43ED698C);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6999);
	op_hex		(x,	1);
	create_insn	(x=0X43ED699C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED69A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ED69B6);
	set_cmt	(0X43ED69F4,	"index",	0);
	set_cmt	(0X43ED6A1C,	"interface",	0);
	set_cmt	(0X43ED6A29,	"this",	0);
	set_cmt	(0X43ED6A40,	"propHash",	0);
	set_cmt	(0X43ED6A45,	"classHash",	0);
	create_insn	(x=0X43ED6A75);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6A7A);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6A87);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6A8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED6AB6,	"index",	0);
	set_cmt	(0X43ED6AC6,	"interface",	0);
	set_cmt	(0X43ED6AFA,	"this",	0);
	set_cmt	(0X43ED6B14,	"propHash",	0);
	set_cmt	(0X43ED6B19,	"classHash",	0);
	create_insn	(x=0X43ED6B38);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6B3D);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6B4A);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6B4D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED6B71);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6B8E);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6C03);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6C08);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6C15);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6C18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED6C93,	"interface",	0);
	set_cmt	(0X43ED6C99,	"index",	0);
	set_cmt	(0X43ED6CAB,	"this",	0);
	create_insn	(x=0X43ED6CBF);
	op_hex		(x,	1);
	set_cmt	(0X43ED6CC4,	"propHash",	0);
	create_insn	(x=0X43ED6CC9);
	op_hex		(x,	1);
	set_cmt	(0X43ED6CCC,	"classHash",	0);
	create_insn	(0X43ED6CE3);
	set_cmt	(0X43ED6CEC,	"index",	0);
	set_cmt	(0X43ED6D30,	"interface",	0);
	create_insn	(x=0X43ED6D3E);
	op_hex		(x,	1);
	set_cmt	(0X43ED6DD2,	"this",	0);
	set_cmt	(0X43ED6DE9,	"propHash",	0);
	set_cmt	(0X43ED6DEE,	"classHash",	0);
	create_insn	(x=0X43ED6E0C);
	op_hex		(x,	1);
	create_insn	(x=0X43ED6E34);
	op_hex		(x,	1);
	create_insn	(0X43ED6E95);
	create_insn	(0X43ED6EBE);
	set_cmt	(0X43ED6F5E,	"index",	0);
	set_cmt	(0X43ED6F63,	"interface",	0);
	set_cmt	(0X43ED6F70,	"this",	0);
	create_insn	(x=0X43ED6F84);
	op_hex		(x,	1);
	set_cmt	(0X43ED6F89,	"propHash",	0);
	create_insn	(x=0X43ED6F8E);
	op_hex		(x,	1);
	set_cmt	(0X43ED6F91,	"classHash",	0);
	create_insn	(0X43ED6FA8);
	set_cmt	(0X43ED6FB3,	"index",	0);
	set_cmt	(0X43ED6FB8,	"interface",	0);
	set_cmt	(0X43ED6FE9,	"this",	0);
	set_cmt	(0X43ED7000,	"propHash",	0);
	set_cmt	(0X43ED7005,	"classHash",	0);
	set_cmt	(0X43ED7019,	"index",	0);
	set_cmt	(0X43ED7024,	"interface",	0);
	set_cmt	(0X43ED7037,	"this",	0);
	set_cmt	(0X43ED704E,	"propHash",	0);
	set_cmt	(0X43ED7053,	"classHash",	0);
	set_cmt	(0X43ED7126,	"index",	0);
	set_cmt	(0X43ED713C,	"interface",	0);
	set_cmt	(0X43ED7160,	"this",	0);
	create_insn	(x=0X43ED7174);
	op_hex		(x,	1);
	set_cmt	(0X43ED7179,	"propHash",	0);
	create_insn	(x=0X43ED717E);
	op_hex		(x,	1);
	set_cmt	(0X43ED7181,	"classHash",	0);
	create_insn	(0X43ED7198);
	set_cmt	(0X43ED71A3,	"index",	0);
	set_cmt	(0X43ED71CC,	"interface",	0);
	set_cmt	(0X43ED71E4,	"this",	0);
	set_cmt	(0X43ED71FB,	"propHash",	0);
	set_cmt	(0X43ED7200,	"classHash",	0);
	set_cmt	(0X43ED7215,	"index",	0);
	set_cmt	(0X43ED7229,	"interface",	0);
	set_cmt	(0X43ED723D,	"this",	0);
	set_cmt	(0X43ED7254,	"propHash",	0);
	set_cmt	(0X43ED7259,	"classHash",	0);
	set_cmt	(0X43ED726C,	"index",	0);
	set_cmt	(0X43ED727A,	"interface",	0);
	set_cmt	(0X43ED7287,	"this",	0);
	create_insn	(x=0X43ED729B);
	op_hex		(x,	1);
	set_cmt	(0X43ED72A0,	"propHash",	0);
	create_insn	(x=0X43ED72A5);
	op_hex		(x,	1);
	set_cmt	(0X43ED72A8,	"classHash",	0);
	create_insn	(0X43ED72BF);
	set_cmt	(0X43ED72C8,	"index",	0);
	set_cmt	(0X43ED72DD,	"interface",	0);
	set_cmt	(0X43ED72EA,	"this",	0);
	create_insn	(x=0X43ED72FE);
	op_hex		(x,	1);
	set_cmt	(0X43ED7303,	"propHash",	0);
	create_insn	(x=0X43ED7308);
	op_hex		(x,	1);
	set_cmt	(0X43ED730B,	"classHash",	0);
	create_insn	(0X43ED7322);
	set_cmt	(0X43ED733A,	"index",	0);
	set_cmt	(0X43ED733F,	"interface",	0);
	set_cmt	(0X43ED734C,	"this",	0);
	create_insn	(x=0X43ED7360);
	op_hex		(x,	1);
	set_cmt	(0X43ED7365,	"propHash",	0);
	create_insn	(x=0X43ED736A);
	op_hex		(x,	1);
	set_cmt	(0X43ED736D,	"classHash",	0);
	create_insn	(0X43ED7384);
	set_cmt	(0X43ED739B,	"index",	0);
	set_cmt	(0X43ED73A0,	"interface",	0);
	set_cmt	(0X43ED73AD,	"this",	0);
	set_cmt	(0X43ED73C4,	"propHash",	0);
	set_cmt	(0X43ED73C9,	"classHash",	0);
	set_cmt	(0X43ED73DC,	"index",	0);
	set_cmt	(0X43ED73E7,	"interface",	0);
	set_cmt	(0X43ED73FB,	"this",	0);
	set_cmt	(0X43ED741C,	"index",	0);
	set_cmt	(0X43ED7490,	"interface",	0);
	set_cmt	(0X43ED749D,	"this",	0);
	create_insn	(x=0X43ED74B1);
	op_hex		(x,	1);
	set_cmt	(0X43ED74B6,	"propHash",	0);
	create_insn	(x=0X43ED74BB);
	op_hex		(x,	1);
	set_cmt	(0X43ED74BE,	"classHash",	0);
	create_insn	(0X43ED74D5);
	set_cmt	(0X43ED74F9,	"index",	0);
	set_cmt	(0X43ED74FE,	"interface",	0);
	set_cmt	(0X43ED750B,	"this",	0);
	create_insn	(x=0X43ED751F);
	op_hex		(x,	1);
	set_cmt	(0X43ED7524,	"propHash",	0);
	create_insn	(x=0X43ED7529);
	op_hex		(x,	1);
	set_cmt	(0X43ED752C,	"classHash",	0);
	create_insn	(0X43ED7543);
	set_cmt	(0X43ED756E,	"index",	0);
	set_cmt	(0X43ED7573,	"interface",	0);
	set_cmt	(0X43ED7580,	"this",	0);
	set_cmt	(0X43ED7597,	"propHash",	0);
	set_cmt	(0X43ED759C,	"classHash",	0);
	set_cmt	(0X43ED7665,	"index",	0);
	set_cmt	(0X43ED766A,	"interface",	0);
	set_cmt	(0X43ED7677,	"this",	0);
	set_cmt	(0X43ED768E,	"propHash",	0);
	set_cmt	(0X43ED7693,	"classHash",	0);
	create_insn	(0X43ED76BE);
	set_cmt	(0X43ED76C4,	"index",	0);
	set_cmt	(0X43ED76C9,	"interface",	0);
	set_cmt	(0X43ED76D6,	"this",	0);
	set_cmt	(0X43ED76ED,	"propHash",	0);
	set_cmt	(0X43ED76F2,	"classHash",	0);
	set_cmt	(0X43ED7743,	"index",	0);
	set_cmt	(0X43ED7748,	"interface",	0);
	set_cmt	(0X43ED7755,	"this",	0);
	set_cmt	(0X43ED7761,	"index",	0);
	set_cmt	(0X43ED7790,	"interface",	0);
	set_cmt	(0X43ED779D,	"this",	0);
	create_insn	(x=0X43ED77B1);
	op_hex		(x,	1);
	set_cmt	(0X43ED77B6,	"propHash",	0);
	create_insn	(x=0X43ED77BB);
	op_hex		(x,	1);
	set_cmt	(0X43ED77BE,	"classHash",	0);
	create_insn	(0X43ED77D8);
	set_cmt	(0X43ED7810,	"index",	0);
	set_cmt	(0X43ED7815,	"interface",	0);
	set_cmt	(0X43ED7822,	"this",	0);
	create_insn	(x=0X43ED7836);
	op_hex		(x,	1);
	set_cmt	(0X43ED783B,	"propHash",	0);
	create_insn	(x=0X43ED7840);
	op_hex		(x,	1);
	set_cmt	(0X43ED7843,	"classHash",	0);
	create_insn	(0X43ED785A);
	set_cmt	(0X43ED7889,	"index",	0);
	set_cmt	(0X43ED788E,	"interface",	0);
	set_cmt	(0X43ED789B,	"this",	0);
	set_cmt	(0X43ED78B9,	"index",	0);
	set_cmt	(0X43ED78BE,	"interface",	0);
	set_cmt	(0X43ED78CB,	"this",	0);
	create_insn	(x=0X43ED78DF);
	op_hex		(x,	1);
	set_cmt	(0X43ED78E4,	"propHash",	0);
	create_insn	(x=0X43ED78E9);
	op_hex		(x,	1);
	set_cmt	(0X43ED78EC,	"classHash",	0);
	create_insn	(0X43ED7903);
	create_insn	(x=0X43ED7916);
	op_hex		(x,	1);
	set_cmt	(0X43ED7931,	"index",	0);
	set_cmt	(0X43ED7936,	"interface",	0);
	set_cmt	(0X43ED7943,	"this",	0);
	create_insn	(x=0X43ED7957);
	op_hex		(x,	1);
	set_cmt	(0X43ED795C,	"propHash",	0);
	create_insn	(x=0X43ED7961);
	op_hex		(x,	1);
	set_cmt	(0X43ED7964,	"classHash",	0);
	create_insn	(0X43ED797B);
	set_cmt	(0X43ED7990,	"index",	0);
	set_cmt	(0X43ED799D,	"interface",	0);
	set_cmt	(0X43ED79AA,	"this",	0);
	set_cmt	(0X43ED79C2,	"index",	0);
	set_cmt	(0X43ED79D5,	"interface",	0);
	set_cmt	(0X43ED79E2,	"this",	0);
	set_cmt	(0X43ED79F9,	"propHash",	0);
	set_cmt	(0X43ED79FE,	"classHash",	0);
	set_cmt	(0X43ED7A11,	"interface",	0);
	set_cmt	(0X43ED7A17,	"index",	0);
	set_cmt	(0X43ED7A72,	"this",	0);
	create_insn	(x=0X43ED7A86);
	op_hex		(x,	1);
	set_cmt	(0X43ED7A8B,	"propHash",	0);
	create_insn	(x=0X43ED7A90);
	op_hex		(x,	1);
	set_cmt	(0X43ED7A93,	"classHash",	0);
	create_insn	(0X43ED7AAA);
	set_cmt	(0X43ED7AD0,	"index",	0);
	set_cmt	(0X43ED7AD5,	"interface",	0);
	set_cmt	(0X43ED7AE2,	"this",	0);
	set_cmt	(0X43ED7AF9,	"propHash",	0);
	set_cmt	(0X43ED7AFE,	"classHash",	0);
	create_insn	(0X43ED7C3C);
	set_cmt	(0X43ED7C70,	"index",	0);
	set_cmt	(0X43ED7C75,	"interface",	0);
	set_cmt	(0X43ED7C86,	"this",	0);
	create_insn	(x=0X43ED7C9A);
	op_hex		(x,	1);
	set_cmt	(0X43ED7C9F,	"propHash",	0);
	create_insn	(x=0X43ED7CA4);
	op_hex		(x,	1);
	set_cmt	(0X43ED7CA7,	"classHash",	0);
	create_insn	(0X43ED7CC1);
	set_cmt	(0X43ED7CDB,	"index",	0);
	set_cmt	(0X43ED7CEA,	"interface",	0);
	set_cmt	(0X43ED7CF7,	"this",	0);
	create_insn	(x=0X43ED7D0B);
	op_hex		(x,	1);
	set_cmt	(0X43ED7D10,	"propHash",	0);
	create_insn	(x=0X43ED7D15);
	op_hex		(x,	1);
	set_cmt	(0X43ED7D18,	"classHash",	0);
	create_insn	(0X43ED7D2F);
	set_cmt	(0X43ED7D38,	"index",	0);
	set_cmt	(0X43ED7D4D,	"interface",	0);
	set_cmt	(0X43ED7D5A,	"this",	0);
	create_insn	(x=0X43ED7D6E);
	op_hex		(x,	1);
	set_cmt	(0X43ED7D73,	"propHash",	0);
	create_insn	(x=0X43ED7D78);
	op_hex		(x,	1);
	set_cmt	(0X43ED7D7B,	"classHash",	0);
	create_insn	(0X43ED7D92);
	set_cmt	(0X43ED7DAA,	"index",	0);
	set_cmt	(0X43ED7DAF,	"interface",	0);
	set_cmt	(0X43ED7DBC,	"this",	0);
	create_insn	(x=0X43ED7DD0);
	op_hex		(x,	1);
	set_cmt	(0X43ED7DD5,	"propHash",	0);
	create_insn	(x=0X43ED7DDA);
	op_hex		(x,	1);
	set_cmt	(0X43ED7DDD,	"classHash",	0);
	create_insn	(0X43ED7DF4);
	set_cmt	(0X43ED7E0B,	"index",	0);
	set_cmt	(0X43ED7E10,	"interface",	0);
	set_cmt	(0X43ED7E1D,	"this",	0);
	set_cmt	(0X43ED7E34,	"propHash",	0);
	set_cmt	(0X43ED7E39,	"classHash",	0);
	set_cmt	(0X43ED7E4C,	"index",	0);
	set_cmt	(0X43ED7E57,	"interface",	0);
	set_cmt	(0X43ED7E6B,	"this",	0);
	set_cmt	(0X43ED7E8C,	"index",	0);
	set_cmt	(0X43ED7F00,	"interface",	0);
	set_cmt	(0X43ED7F0D,	"this",	0);
	create_insn	(x=0X43ED7F21);
	op_hex		(x,	1);
	set_cmt	(0X43ED7F26,	"propHash",	0);
	create_insn	(x=0X43ED7F2B);
	op_hex		(x,	1);
	set_cmt	(0X43ED7F2E,	"classHash",	0);
	create_insn	(0X43ED7F45);
	set_cmt	(0X43ED7F4E,	"index",	0);
	set_cmt	(0X43ED7F65,	"interface",	0);
	set_cmt	(0X43ED7F72,	"this",	0);
	create_insn	(x=0X43ED7F86);
	op_hex		(x,	1);
	set_cmt	(0X43ED7F8B,	"propHash",	0);
	create_insn	(x=0X43ED7F90);
	op_hex		(x,	1);
	set_cmt	(0X43ED7F93,	"classHash",	0);
	create_insn	(0X43ED7FAA);
	set_cmt	(0X43ED7FBC,	"index",	0);
	set_cmt	(0X43ED7FC9,	"interface",	0);
	set_cmt	(0X43ED7FD6,	"this",	0);
	set_cmt	(0X43ED7FEE,	"propHash",	0);
	set_cmt	(0X43ED7FF3,	"classHash",	0);
	set_cmt	(0X43ED8061,	"index",	0);
	set_cmt	(0X43ED8066,	"interface",	0);
	set_cmt	(0X43ED8073,	"this",	0);
	create_insn	(x=0X43ED8087);
	op_hex		(x,	1);
	set_cmt	(0X43ED808C,	"propHash",	0);
	create_insn	(x=0X43ED8091);
	op_hex		(x,	1);
	set_cmt	(0X43ED8094,	"classHash",	0);
	create_insn	(0X43ED80AB);
	set_cmt	(0X43ED80C0,	"index",	0);
	set_cmt	(0X43ED80CD,	"interface",	0);
	set_cmt	(0X43ED80DA,	"this",	0);
	set_cmt	(0X43ED80F2,	"index",	0);
	set_cmt	(0X43ED8105,	"interface",	0);
	set_cmt	(0X43ED8112,	"this",	0);
	set_cmt	(0X43ED8129,	"propHash",	0);
	set_cmt	(0X43ED812E,	"classHash",	0);
	create_insn	(0X43ED8193);
	set_cmt	(0X43ED8199,	"index",	0);
	set_cmt	(0X43ED819E,	"interface",	0);
	set_cmt	(0X43ED81AB,	"this",	0);
	set_cmt	(0X43ED81BD,	"index",	0);
	set_cmt	(0X43ED81C8,	"interface",	0);
	set_cmt	(0X43ED81D5,	"this",	0);
	create_insn	(x=0X43ED81E9);
	op_hex		(x,	1);
	set_cmt	(0X43ED81EE,	"propHash",	0);
	create_insn	(x=0X43ED81F3);
	op_hex		(x,	1);
	set_cmt	(0X43ED81F6,	"classHash",	0);
	create_insn	(0X43ED820D);
	set_cmt	(0X43ED8216,	"index",	0);
	set_cmt	(0X43ED8227,	"interface",	0);
	set_cmt	(0X43ED8234,	"this",	0);
	create_insn	(x=0X43ED8248);
	op_hex		(x,	1);
	set_cmt	(0X43ED824D,	"propHash",	0);
	create_insn	(x=0X43ED8252);
	op_hex		(x,	1);
	set_cmt	(0X43ED8255,	"classHash",	0);
	create_insn	(0X43ED826C);
	set_cmt	(0X43ED8275,	"index",	0);
	set_cmt	(0X43ED828C,	"interface",	0);
	set_cmt	(0X43ED8299,	"this",	0);
	create_insn	(x=0X43ED82AD);
	op_hex		(x,	1);
	set_cmt	(0X43ED82B2,	"propHash",	0);
	create_insn	(x=0X43ED82B7);
	op_hex		(x,	1);
	set_cmt	(0X43ED82BA,	"classHash",	0);
	create_insn	(0X43ED82D1);
	set_cmt	(0X43ED82E5,	"index",	0);
	set_cmt	(0X43ED82F2,	"interface",	0);
	set_cmt	(0X43ED82FF,	"this",	0);
	set_cmt	(0X43ED831A,	"index",	0);
	set_cmt	(0X43ED832D,	"interface",	0);
	set_cmt	(0X43ED833A,	"this",	0);
	set_cmt	(0X43ED8351,	"propHash",	0);
	set_cmt	(0X43ED8356,	"classHash",	0);
	set_cmt	(0X43ED83C1,	"index",	0);
	set_cmt	(0X43ED83C6,	"interface",	0);
	set_cmt	(0X43ED83D3,	"this",	0);
	create_insn	(x=0X43ED83E7);
	op_hex		(x,	1);
	set_cmt	(0X43ED83EC,	"propHash",	0);
	create_insn	(x=0X43ED83F1);
	op_hex		(x,	1);
	set_cmt	(0X43ED83F4,	"classHash",	0);
	create_insn	(0X43ED840B);
	set_cmt	(0X43ED8416,	"index",	0);
	set_cmt	(0X43ED843F,	"interface",	0);
	set_cmt	(0X43ED844C,	"this",	0);
	set_cmt	(0X43ED8463,	"propHash",	0);
	set_cmt	(0X43ED8468,	"classHash",	0);
	set_cmt	(0X43ED847D,	"index",	0);
	set_cmt	(0X43ED848D,	"interface",	0);
	set_cmt	(0X43ED849A,	"this",	0);
	set_cmt	(0X43ED84B1,	"propHash",	0);
	set_cmt	(0X43ED84B6,	"classHash",	0);
	set_cmt	(0X43ED84EB,	"index",	0);
	set_cmt	(0X43ED84F0,	"interface",	0);
	set_cmt	(0X43ED84FD,	"this",	0);
	set_cmt	(0X43ED8514,	"index",	0);
	set_cmt	(0X43ED8527,	"interface",	0);
	set_cmt	(0X43ED8534,	"this",	0);
	set_cmt	(0X43ED859E,	"index",	0);
	set_cmt	(0X43ED85A3,	"interface",	0);
	set_cmt	(0X43ED85B0,	"this",	0);
	create_insn	(0X43ED861A);
	set_cmt	(0X43ED8621,	"index",	0);
	set_cmt	(0X43ED862F,	"interface",	0);
	set_cmt	(0X43ED863C,	"this",	0);
	set_cmt	(0X43ED864E,	"index",	0);
	set_cmt	(0X43ED8653,	"interface",	0);
	set_cmt	(0X43ED8662,	"this",	0);
	set_cmt	(0X43ED867C,	"propHash",	0);
	set_cmt	(0X43ED8681,	"classHash",	0);
	set_cmt	(0X43ED86C9,	"propHash",	0);
	set_cmt	(0X43ED86CE,	"classHash",	0);
	set_cmt	(0X43ED86F8,	"propHash",	0);
	set_cmt	(0X43ED86FD,	"classHash",	0);
	create_insn	(0X43ED8724);
	set_cmt	(0X43ED8728,	"propHash",	0);
	set_cmt	(0X43ED872D,	"classHash",	0);
	set_cmt	(0X43ED8753,	"propHash",	0);
	set_cmt	(0X43ED8758,	"classHash",	0);
	create_insn	(0X43ED877F);
	create_byte	(0X43ED87BE);
	make_array	(0X43ED87BE,	0X12);
	create_insn	(0X43ED87D0);
	create_insn	(x=0X43ED87D3);
	op_hex		(x,	1);
	create_insn	(x=0X43ED87D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED87E7,	"index",	0);
	set_cmt	(0X43ED87EC,	"interface",	0);
	set_cmt	(0X43ED87F9,	"this",	0);
	set_cmt	(0X43ED8810,	"propHash",	0);
	set_cmt	(0X43ED8815,	"classHash",	0);
	set_cmt	(0X43ED88CE,	"interface",	0);
	set_cmt	(0X43ED88D7,	"index",	0);
	set_cmt	(0X43ED88E8,	"this",	0);
	set_cmt	(0X43ED88FF,	"propHash",	0);
	set_cmt	(0X43ED8904,	"classHash",	0);
	set_cmt	(0X43ED8918,	"index",	0);
	set_cmt	(0X43ED8923,	"interface",	0);
	set_cmt	(0X43ED894F,	"this",	0);
	create_insn	(x=0X43ED896E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED8973);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED897E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED8986);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED8996,	"index",	0);
	set_cmt	(0X43ED899B,	"interface",	0);
	set_cmt	(0X43ED89A9,	"this",	0);
	set_cmt	(0X43ED89BB,	"index",	0);
	set_cmt	(0X43ED89C0,	"interface",	0);
	set_cmt	(0X43ED89FD,	"this",	0);
	create_insn	(x=0X43ED8A0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED8A13,	"index",	0);
	set_cmt	(0X43ED8A26,	"interface",	0);
	set_cmt	(0X43ED8A33,	"this",	0);
	set_cmt	(0X43ED8A4A,	"propHash",	0);
	set_cmt	(0X43ED8A4F,	"classHash",	0);
	set_cmt	(0X43ED8A65,	"index",	0);
	set_cmt	(0X43ED8AB6,	"interface",	0);
	set_cmt	(0X43ED8AC3,	"this",	0);
	set_cmt	(0X43ED8ADA,	"propHash",	0);
	set_cmt	(0X43ED8ADF,	"classHash",	0);
	set_cmt	(0X43ED8AF1,	"index",	0);
	set_cmt	(0X43ED8B01,	"interface",	0);
	set_cmt	(0X43ED8B11,	"this",	0);
	create_insn	(x=0X43ED8B26);
	op_hex		(x,	1);
	set_cmt	(0X43ED8B2B,	"propHash",	0);
	create_insn	(x=0X43ED8B30);
	op_hex		(x,	1);
	set_cmt	(0X43ED8B33,	"classHash",	0);
	create_insn	(0X43ED8B5A);
	make_array	(0X43ED8B71,	0XF);
	create_insn	(0X43ED8B80);
	create_insn	(x=0X43ED8B83);
	op_hex		(x,	1);
	set_cmt	(0X43ED8B86,	"interface",	0);
	create_insn	(x=0X43ED8B8C);
	op_hex		(x,	1);
	set_cmt	(0X43ED8B8F,	"index",	0);
	set_cmt	(0X43ED8BA4,	"this",	0);
	set_cmt	(0X43ED8BBB,	"propHash",	0);
	set_cmt	(0X43ED8BC0,	"classHash",	0);
	create_insn	(x=0X43ED8BD2);
	op_hex		(x,	1);
	set_cmt	(0X43ED8BEC,	"index",	0);
	set_cmt	(0X43ED8BF1,	"interface",	0);
	set_cmt	(0X43ED8BFE,	"this",	0);
	set_cmt	(0X43ED8C15,	"propHash",	0);
	set_cmt	(0X43ED8C1A,	"classHash",	0);
	set_cmt	(0X43ED8CB9,	"index",	0);
	set_cmt	(0X43ED8CC4,	"interface",	0);
	set_cmt	(0X43ED8CE2,	"this",	0);
	create_insn	(x=0X43ED8CF6);
	op_hex		(x,	1);
	set_cmt	(0X43ED8CFB,	"propHash",	0);
	create_insn	(x=0X43ED8D00);
	op_hex		(x,	1);
	set_cmt	(0X43ED8D03,	"classHash",	0);
	create_insn	(0X43ED8D1A);
	set_cmt	(0X43ED8D23,	"index",	0);
	set_cmt	(0X43ED8D2E,	"interface",	0);
	set_cmt	(0X43ED8D4B,	"this",	0);
	create_insn	(x=0X43ED8D5F);
	op_hex		(x,	1);
	set_cmt	(0X43ED8D64,	"propHash",	0);
	create_insn	(x=0X43ED8D69);
	op_hex		(x,	1);
	set_cmt	(0X43ED8D6C,	"classHash",	0);
	create_insn	(0X43ED8D83);
	set_cmt	(0X43ED8D8C,	"index",	0);
	set_cmt	(0X43ED8D97,	"interface",	0);
	set_cmt	(0X43ED8DC2,	"this",	0);
	set_cmt	(0X43ED8DCE,	"player",	0);
	set_cmt	(0X43ED8DE3,	"index",	0);
	set_cmt	(0X43ED8DE8,	"interface",	0);
	set_cmt	(0X43ED8DF5,	"this",	0);
	set_cmt	(0X43ED8E01,	"player",	0);
	set_cmt	(0X43ED8E25,	"propHash",	0);
	set_cmt	(0X43ED8E2A,	"classHash",	0);
	set_cmt	(0X43ED8E50,	"index",	0);
	set_cmt	(0X43ED8E55,	"interface",	0);
	set_cmt	(0X43ED8E62,	"this",	0);
	set_cmt	(0X43ED8E6E,	"player",	0);
	set_cmt	(0X43ED8E8E,	"propHash",	0);
	set_cmt	(0X43ED8E93,	"classHash",	0);
	create_insn	(0X43ED8F2C);
	set_cmt	(0X43ED8F49,	"index",	0);
	set_cmt	(0X43ED8F5C,	"interface",	0);
	set_cmt	(0X43ED8F7F,	"this",	0);
	create_insn	(x=0X43ED8F93);
	op_hex		(x,	1);
	set_cmt	(0X43ED8F98,	"propHash",	0);
	create_insn	(x=0X43ED8F9D);
	op_hex		(x,	1);
	set_cmt	(0X43ED8FA0,	"classHash",	0);
	create_insn	(0X43ED8FB7);
	create_insn	(0X43ED9025);
	make_array	(0X43ED905A,	0X6);
	create_insn	(0X43ED9060);
	make_array	(0X43ED907B,	0X5);
	create_insn	(0X43ED9080);
	make_array	(0X43ED908B,	0X5);
	create_insn	(0X43ED9090);
	set_cmt	(0X43ED9095,	"index",	0);
	set_cmt	(0X43ED909A,	"interface",	0);
	set_cmt	(0X43ED90CD,	"this",	0);
	set_cmt	(0X43ED90E4,	"propHash",	0);
	set_cmt	(0X43ED90E9,	"classHash",	0);
	set_cmt	(0X43ED90FB,	"index",	0);
	create_insn	(x=0X43ED9106);
	op_hex		(x,	1);
	set_cmt	(0X43ED9108,	"interface",	0);
	set_cmt	(0X43ED911A,	"this",	0);
	set_cmt	(0X43ED9131,	"propHash",	0);
	set_cmt	(0X43ED9136,	"classHash",	0);
	set_cmt	(0X43ED9180,	"index",	0);
	set_cmt	(0X43ED918B,	"interface",	0);
	set_cmt	(0X43ED91A7,	"this",	0);
	set_cmt	(0X43ED91BE,	"propHash",	0);
	set_cmt	(0X43ED91C3,	"classHash",	0);
	create_insn	(0X43ED91EC);
	set_cmt	(0X43ED9215,	"index",	0);
	set_cmt	(0X43ED921A,	"interface",	0);
	set_cmt	(0X43ED9227,	"this",	0);
	set_cmt	(0X43ED923E,	"propHash",	0);
	set_cmt	(0X43ED9243,	"classHash",	0);
	set_cmt	(0X43ED925E,	"index",	0);
	set_cmt	(0X43ED9263,	"interface",	0);
	set_cmt	(0X43ED9270,	"this",	0);
	set_cmt	(0X43ED9287,	"propHash",	0);
	set_cmt	(0X43ED928C,	"classHash",	0);
	create_insn	(0X43ED92A5);
	make_array	(0X43ED92CB,	0X5);
	create_insn	(0X43ED92D0);
	set_cmt	(0X43ED92D3,	"interface",	0);
	create_insn	(x=0X43ED92D9);
	op_hex		(x,	1);
	set_cmt	(0X43ED92DC,	"index",	0);
	set_cmt	(0X43ED92F0,	"this",	0);
	set_cmt	(0X43ED9307,	"propHash",	0);
	set_cmt	(0X43ED930C,	"classHash",	0);
	create_insn	(x=0X43ED935F);
	op_hex		(x,	1);
	create_insn	(x=0X43ED9364);
	op_hex		(x,	1);
	create_insn	(x=0X43ED9371);
	op_hex		(x,	1);
	create_insn	(x=0X43ED9374);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED937A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ED938E);
	set_cmt	(0X43ED93A5,	"index",	0);
	set_cmt	(0X43ED93B0,	"interface",	0);
	set_cmt	(0X43ED940C,	"this",	0);
	set_cmt	(0X43ED9423,	"propHash",	0);
	set_cmt	(0X43ED9428,	"classHash",	0);
	create_insn	(x=0X43ED9483);
	op_hex		(x,	1);
	create_insn	(x=0X43ED9488);
	op_hex		(x,	1);
	create_insn	(x=0X43ED9495);
	op_hex		(x,	1);
	create_insn	(x=0X43ED9498);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED949E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ED94B2);
	create_insn	(0X43ED94EA);
	set_cmt	(0X43ED94F9,	"index",	0);
	set_cmt	(0X43ED9509,	"interface",	0);
	set_cmt	(0X43ED953F,	"this",	0);
	set_cmt	(0X43ED9557,	"propHash",	0);
	set_cmt	(0X43ED955C,	"classHash",	0);
	create_insn	(x=0X43ED957B);
	op_hex		(x,	1);
	create_insn	(x=0X43ED9580);
	op_hex		(x,	1);
	create_insn	(x=0X43ED958D);
	op_hex		(x,	1);
	create_insn	(x=0X43ED9590);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED95A8);
	op_hex		(x,	1);
	create_insn	(x=0X43ED95D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED95D9);
	op_hex		(x,	1);
	set_cmt	(0X43ED9664,	"index",	0);
	set_cmt	(0X43ED9669,	"interface",	0);
	set_cmt	(0X43ED9676,	"this",	0);
	set_cmt	(0X43ED968D,	"propHash",	0);
	set_cmt	(0X43ED9692,	"classHash",	0);
	create_insn	(x=0X43ED96D5);
	op_hex		(x,	1);
	create_insn	(x=0X43ED96DA);
	op_hex		(x,	1);
	create_insn	(x=0X43ED96E7);
	op_hex		(x,	1);
	create_insn	(x=0X43ED96EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED9794,	"index",	0);
	set_cmt	(0X43ED97A7,	"interface",	0);
	set_cmt	(0X43ED97BC,	"this",	0);
	set_cmt	(0X43ED97D3,	"propHash",	0);
	set_cmt	(0X43ED97D8,	"classHash",	0);
	create_insn	(0X43ED9807);
	set_cmt	(0X43ED980C,	"index",	0);
	set_cmt	(0X43ED9817,	"interface",	0);
	set_cmt	(0X43ED9838,	"this",	0);
	set_cmt	(0X43ED984F,	"propHash",	0);
	set_cmt	(0X43ED9854,	"classHash",	0);
	create_insn	(x=0X43ED9895);
	op_hex		(x,	1);
	set_cmt	(0X43ED9898,	"a5",	0);
	set_cmt	(0X43ED98A6,	"a4",	0);
	set_cmt	(0X43ED98AB,	"a3",	0);
	create_insn	(x=0X43ED98AB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED98B0,	"a2",	0);
	create_insn	(x=0X43ED98B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED98B5,	"a1",	0);
	create_insn	(x=0X43ED98B5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED98C3,	"index",	0);
	set_cmt	(0X43ED98CB,	"interface",	0);
	set_cmt	(0X43ED9914,	"this",	0);
	create_insn	(x=0X43ED9928);
	op_hex		(x,	1);
	set_cmt	(0X43ED992D,	"propHash",	0);
	create_insn	(x=0X43ED9932);
	op_hex		(x,	1);
	set_cmt	(0X43ED9935,	"classHash",	0);
	create_insn	(0X43ED994C);
	set_cmt	(0X43ED9957,	"index",	0);
	set_cmt	(0X43ED995C,	"interface",	0);
	set_cmt	(0X43ED998A,	"this",	0);
	set_cmt	(0X43ED99A1,	"propHash",	0);
	set_cmt	(0X43ED99A6,	"classHash",	0);
	create_insn	(x=0X43ED9A2E);
	op_hex		(x,	1);
	create_insn	(x=0X43ED9A33);
	op_hex		(x,	1);
	create_insn	(x=0X43ED9A40);
	op_hex		(x,	1);
	create_insn	(x=0X43ED9A43);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED9A49);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43ED9A5D);
	set_cmt	(0X43ED9A79,	"index",	0);
	set_cmt	(0X43ED9A84,	"interface",	0);
	set_cmt	(0X43ED9A9B,	"this",	0);
	create_insn	(x=0X43ED9AAF);
	op_hex		(x,	1);
	set_cmt	(0X43ED9AB4,	"propHash",	0);
	create_insn	(x=0X43ED9AB9);
	op_hex		(x,	1);
	set_cmt	(0X43ED9ABC,	"classHash",	0);
	create_insn	(0X43ED9AD3);
	set_cmt	(0X43ED9ADD,	"index",	0);
	set_cmt	(0X43ED9B01,	"interface",	0);
	set_cmt	(0X43ED9B0E,	"this",	0);
	create_insn	(x=0X43ED9B22);
	op_hex		(x,	1);
	set_cmt	(0X43ED9B27,	"propHash",	0);
	create_insn	(x=0X43ED9B2C);
	op_hex		(x,	1);
	set_cmt	(0X43ED9B2F,	"classHash",	0);
	create_insn	(0X43ED9B46);
	set_cmt	(0X43ED9B4F,	"index",	0);
	set_cmt	(0X43ED9B64,	"interface",	0);
	set_cmt	(0X43ED9B71,	"this",	0);
	create_insn	(x=0X43ED9B85);
	op_hex		(x,	1);
	set_cmt	(0X43ED9B8A,	"propHash",	0);
	create_insn	(x=0X43ED9B8F);
	op_hex		(x,	1);
	set_cmt	(0X43ED9B92,	"classHash",	0);
	create_insn	(0X43ED9BA9);
	set_cmt	(0X43ED9BBD,	"index",	0);
	set_cmt	(0X43ED9BC2,	"interface",	0);
	set_cmt	(0X43ED9BCF,	"this",	0);
	create_insn	(x=0X43ED9BE3);
	op_hex		(x,	1);
	set_cmt	(0X43ED9BE8,	"propHash",	0);
	create_insn	(x=0X43ED9BED);
	op_hex		(x,	1);
	set_cmt	(0X43ED9BF0,	"classHash",	0);
	create_insn	(0X43ED9C07);
	set_cmt	(0X43ED9C1C,	"index",	0);
	set_cmt	(0X43ED9C21,	"interface",	0);
	set_cmt	(0X43ED9C2E,	"this",	0);
	set_cmt	(0X43ED9C45,	"propHash",	0);
	set_cmt	(0X43ED9C4A,	"classHash",	0);
	set_cmt	(0X43ED9C5D,	"index",	0);
	set_cmt	(0X43ED9C68,	"interface",	0);
	set_cmt	(0X43ED9C7C,	"this",	0);
	set_cmt	(0X43ED9C9C,	"index",	0);
	set_cmt	(0X43ED9CA1,	"interface",	0);
	set_cmt	(0X43ED9CB5,	"this",	0);
	create_insn	(x=0X43ED9CC9);
	op_hex		(x,	1);
	set_cmt	(0X43ED9CCE,	"propHash",	0);
	create_insn	(x=0X43ED9CD3);
	op_hex		(x,	1);
	set_cmt	(0X43ED9CD6,	"classHash",	0);
	create_insn	(0X43ED9CED);
	set_cmt	(0X43ED9CF6,	"index",	0);
	set_cmt	(0X43ED9D71,	"interface",	0);
	set_cmt	(0X43ED9D7E,	"this",	0);
	create_insn	(x=0X43ED9D92);
	op_hex		(x,	1);
	set_cmt	(0X43ED9D97,	"propHash",	0);
	create_insn	(x=0X43ED9D9C);
	op_hex		(x,	1);
	set_cmt	(0X43ED9D9F,	"classHash",	0);
	create_insn	(0X43ED9DB6);
	create_insn	(x=0X43ED9DC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43ED9DEC,	"index",	0);
	set_cmt	(0X43ED9DF1,	"interface",	0);
	set_cmt	(0X43ED9DFE,	"this",	0);
	set_cmt	(0X43ED9E15,	"propHash",	0);
	set_cmt	(0X43ED9E1A,	"classHash",	0);
	set_cmt	(0X43ED9ED0,	"interface",	0);
	set_cmt	(0X43ED9ED9,	"index",	0);
	set_cmt	(0X43ED9EEA,	"this",	0);
	set_cmt	(0X43ED9F01,	"propHash",	0);
	set_cmt	(0X43ED9F06,	"classHash",	0);
	set_cmt	(0X43ED9F1A,	"index",	0);
	set_cmt	(0X43ED9F25,	"interface",	0);
	set_cmt	(0X43ED9F51,	"this",	0);
	create_insn	(x=0X43ED9F70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED9F75);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43ED9F80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43ED9F88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43ED9F98,	"index",	0);
	set_cmt	(0X43ED9F9D,	"interface",	0);
	set_cmt	(0X43ED9FAA,	"this",	0);
	create_insn	(0X43ED9FF6);
	set_cmt	(0X43ED9FFE,	"index",	0);
	set_cmt	(0X43EDA009,	"interface",	0);
	set_cmt	(0X43EDA028,	"this",	0);
	set_cmt	(0X43EDA03A,	"index",	0);
	set_cmt	(0X43EDA03F,	"interface",	0);
	set_cmt	(0X43EDA04E,	"this",	0);
	set_cmt	(0X43EDA067,	"propHash",	0);
	set_cmt	(0X43EDA06C,	"classHash",	0);
	set_cmt	(0X43EDA0AE,	"propHash",	0);
	set_cmt	(0X43EDA0B3,	"classHash",	0);
	set_cmt	(0X43EDA0DD,	"propHash",	0);
	set_cmt	(0X43EDA0E2,	"classHash",	0);
	create_insn	(0X43EDA107);
	set_cmt	(0X43EDA10B,	"propHash",	0);
	set_cmt	(0X43EDA110,	"classHash",	0);
	set_cmt	(0X43EDA136,	"propHash",	0);
	set_cmt	(0X43EDA13B,	"classHash",	0);
	create_insn	(0X43EDA160);
	make_array	(0X43EDA19B,	0X5);
	create_insn	(0X43EDA1A0);
	create_insn	(x=0X43EDA1A8);
	op_hex		(x,	1);
	create_insn	(x=0X43EDA220);
	op_hex		(x,	1);
	create_insn	(x=0X43EDA226);
	op_hex		(x,	1);
	make_array	(0X43EDA369,	0X7);
	create_insn	(0X43EDA370);
	set_cmt	(0X43EDA373,	"interface",	0);
	create_insn	(x=0X43EDA379);
	op_hex		(x,	1);
	set_cmt	(0X43EDA37C,	"index",	0);
	set_cmt	(0X43EDA38F,	"this",	0);
	set_cmt	(0X43EDA3A6,	"propHash",	0);
	set_cmt	(0X43EDA3AB,	"classHash",	0);
	set_cmt	(0X43EDA3CA,	"index",	0);
	set_cmt	(0X43EDA3CF,	"interface",	0);
	set_cmt	(0X43EDA3DC,	"this",	0);
	set_cmt	(0X43EDA3E8,	"player",	0);
	set_cmt	(0X43EDA3FD,	"index",	0);
	set_cmt	(0X43EDA402,	"interface",	0);
	set_cmt	(0X43EDA40F,	"this",	0);
	set_cmt	(0X43EDA41B,	"player",	0);
	set_cmt	(0X43EDA42D,	"propHash",	0);
	set_cmt	(0X43EDA432,	"classHash",	0);
	set_cmt	(0X43EDA452,	"index",	0);
	set_cmt	(0X43EDA457,	"interface",	0);
	set_cmt	(0X43EDA464,	"this",	0);
	set_cmt	(0X43EDA470,	"player",	0);
	set_cmt	(0X43EDA482,	"propHash",	0);
	set_cmt	(0X43EDA487,	"classHash",	0);
	create_insn	(x=0X43EDA4C8);
	op_hex		(x,	1);
	create_insn	(x=0X43EDA522);
	op_hex		(x,	1);
	create_insn	(x=0X43EDA524);
	op_hex		(x,	1);
	create_insn	(x=0X43EDA55F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDA576);
	op_hex		(x,	1);
	create_insn	(0X43EDA5A9);
	create_insn	(x=0X43EDA5D0);
	op_hex		(x,	1);
	create_insn	(x=0X43EDA621);
	op_hex		(x,	1);
	create_insn	(0X43EDA650);
	set_cmt	(0X43EDA653,	"interface",	0);
	create_insn	(x=0X43EDA659);
	op_hex		(x,	1);
	set_cmt	(0X43EDA65C,	"index",	0);
	set_cmt	(0X43EDA671,	"this",	0);
	set_cmt	(0X43EDA67D,	"player",	0);
	set_cmt	(0X43EDA698,	"propHash",	0);
	set_cmt	(0X43EDA69D,	"classHash",	0);
	set_cmt	(0X43EDA6BA,	"propHash",	0);
	set_cmt	(0X43EDA6BF,	"classHash",	0);
	set_cmt	(0X43EDA6DE,	"switch 84 cases ",	0);
	create_insn	(x=0X43EDA6E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EDA6EF,	"switch jump",	0);
	create_insn	(x=0X43EDA6EF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EDA6F6,	"switch 19 cases ",	0);
	create_insn	(x=0X43EDA6F6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDA704);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EDA70B,	"switch jump",	0);
	create_insn	(x=0X43EDA70B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EDA712,	"jumptable 43EDA6EF cases 41,42,59\njumptable 43EDA70B cases 505-509,512,514-516,519,520,522,523",	1);
	create_insn	(0X43EDA712);
	set_cmt	(0X43EDA716,	"propHash",	0);
	set_cmt	(0X43EDA71B,	"classHash",	0);
	set_cmt	(0X43EDA745,	"propHash",	0);
	set_cmt	(0X43EDA74A,	"classHash",	0);
	set_cmt	(0X43EDA769,	"switch 84 cases ",	0);
	create_insn	(x=0X43EDA76F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EDA776,	"switch jump",	0);
	create_insn	(x=0X43EDA776);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EDA77D,	"switch 19 cases ",	0);
	create_insn	(x=0X43EDA77D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDA787);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EDA78E,	"switch jump",	0);
	create_insn	(x=0X43EDA78E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EDA795,	"jumptable 43EDA776 cases 41,42,59\njumptable 43EDA78E cases 505-509,512,514-516,519,520,522,523",	1);
	create_insn	(0X43EDA795);
	set_cmt	(0X43EDA7A2,	"jumptable 43EDA776 default case, cases 1-40,43-58,60-84\njumptable 43EDA78E default case, cases 510,511,513,517,518,521",	1);
	set_name	(0X43EDA7A2,	"def_43EDA776");
	set_cmt	(0X43EDA7BA,	"index",	0);
	set_cmt	(0X43EDA7BF,	"interface",	0);
	set_cmt	(0X43EDA7CC,	"this",	0);
	set_cmt	(0X43EDA7DE,	"index",	0);
	set_cmt	(0X43EDA7E3,	"interface",	0);
	set_cmt	(0X43EDA7F6,	"this",	0);
	set_cmt	(0X43EDA80D,	"propHash",	0);
	set_cmt	(0X43EDA812,	"classHash",	0);
	create_insn	(0X43EDA84C);
	set_cmt	(0X43EDA87C,	"index",	0);
	set_cmt	(0X43EDA881,	"interface",	0);
	set_cmt	(0X43EDA893,	"this",	0);
	set_cmt	(0X43EDA8AA,	"propHash",	0);
	set_cmt	(0X43EDA8AF,	"classHash",	0);
	create_insn	(0X43EDA8DE);
	set_cmt	(0X43EDA8F0,	"jumptable 43EDA6EF default case, cases 1-40,43-58,60-84\njumptable 43EDA70B default case, cases 510,511,513,517,518,521",	1);
	set_name	(0X43EDA8F0,	"def_43EDA6EF");
	set_cmt	(0X43EDA8F8,	"jump table for switch statement",	0);
	create_dword	(x=0X43EDA8F8);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EDA8F8,	"jpt_43EDA6EF");
	set_cmt	(0X43EDA904,	"indirect table for switch statement",	0);
	create_byte	(0X43EDA904);
	make_array	(0X43EDA904,	0X54);
	set_cmt	(0X43EDA958,	"jump table for switch statement",	0);
	create_dword	(x=0X43EDA958);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EDA958,	"jpt_43EDA70B");
	set_cmt	(0X43EDA960,	"indirect table for switch statement",	0);
	create_byte	(0X43EDA960);
	make_array	(0X43EDA960,	0X13);
	set_cmt	(0X43EDA974,	"jump table for switch statement",	0);
	create_dword	(x=0X43EDA974);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EDA974,	"jpt_43EDA776");
	set_cmt	(0X43EDA980,	"indirect table for switch statement",	0);
	create_byte	(0X43EDA980);
	make_array	(0X43EDA980,	0X54);
	set_cmt	(0X43EDA9D4,	"jump table for switch statement",	0);
	create_dword	(x=0X43EDA9D4);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EDA9D4,	"jpt_43EDA78E");
	set_cmt	(0X43EDA9DC,	"indirect table for switch statement",	0);
	create_byte	(0X43EDA9DC);
	make_array	(0X43EDA9DC,	0X13);
	create_insn	(0X43EDA9F0);
	create_insn	(x=0X43EDAA56);
	op_hex		(x,	1);
	create_insn	(x=0X43EDAA86);
	op_hex		(x,	1);
	create_insn	(x=0X43EDAAB0);
	op_hex		(x,	1);
	make_array	(0X43EDAADD,	0X3);
	create_insn	(0X43EDAAE0);
	create_insn	(x=0X43EDAAE3);
	op_hex		(x,	1);
	set_cmt	(0X43EDAAE6,	"interface",	0);
	create_insn	(x=0X43EDAAEC);
	op_hex		(x,	1);
	set_cmt	(0X43EDAAF2,	"index",	0);
	set_cmt	(0X43EDAB06,	"this",	0);
	set_cmt	(0X43EDAB12,	"player",	0);
	set_cmt	(0X43EDAB27,	"index",	0);
	set_cmt	(0X43EDAB2C,	"interface",	0);
	set_cmt	(0X43EDAB39,	"this",	0);
	set_cmt	(0X43EDAB45,	"player",	0);
	set_cmt	(0X43EDAB57,	"propHash",	0);
	set_cmt	(0X43EDAB5C,	"classHash",	0);
	set_cmt	(0X43EDAB80,	"switch 84 cases ",	0);
	create_insn	(x=0X43EDAB8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EDAB91,	"switch jump",	0);
	create_insn	(x=0X43EDAB91);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EDAB98,	"jumptable 43EDAB91 cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-40,60,61,63,64",	1);
	create_insn	(0X43EDAB98);
	create_insn	(x=0X43EDAB9D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDABA1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDABC7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDABCB);
	op_hex		(x,	1);
	set_cmt	(0X43EDABF7,	"index",	0);
	set_cmt	(0X43EDABFC,	"interface",	0);
	set_cmt	(0X43EDAC09,	"this",	0);
	set_cmt	(0X43EDAC4D,	"propHash",	0);
	set_cmt	(0X43EDAC52,	"classHash",	0);
	set_cmt	(0X43EDAC74,	"propHash",	0);
	set_cmt	(0X43EDAC79,	"classHash",	0);
	create_insn	(0X43EDAC9E);
	set_cmt	(0X43EDACA2,	"propHash",	0);
	set_cmt	(0X43EDACA7,	"classHash",	0);
	set_cmt	(0X43EDACCD,	"propHash",	0);
	set_cmt	(0X43EDACD2,	"classHash",	0);
	create_insn	(x=0X43EDAD26);
	op_hex		(x,	1);
	create_insn	(x=0X43EDAD2A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDAD2D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EDAD3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EDAD46);
	op_hex		(x,	1);
	create_insn	(x=0X43EDAD57);
	op_hex		(x,	1);
	create_insn	(x=0X43EDAD6A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDAD7D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDAD90);
	op_hex		(x,	1);
	create_insn	(x=0X43EDADA3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDADB6);
	op_hex		(x,	1);
	set_cmt	(0X43EDADC0,	"index",	0);
	set_cmt	(0X43EDADD1,	"interface",	0);
	set_cmt	(0X43EDAE0B,	"this",	0);
	set_cmt	(0X43EDAE14,	"arg",	0);
	create_insn	(x=0X43EDAE14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EDAE19);
	op_hex		(x,	1);
	create_insn	(x=0X43EDAE32);
	op_hex		(x,	1);
	create_insn	(0X43EDAEE1);
	create_insn	(0X43EDAEEF);
	create_insn	(0X43EDB3D6);
	create_insn	(x=0X43EDB498);
	op_hex		(x,	1);
	set_cmt	(0X43EDB511,	"jumptable 43EDAB91 default case, cases 5,6,12,15,18,20-22,31,37,41-59,62,65-84",	1);
	create_insn	(0X43EDB511);
	set_name	(0X43EDB511,	"def_43EDAB91");
	set_cmt	(0X43EDB518,	"jump table for switch statement",	0);
	create_dword	(x=0X43EDB518);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EDB518,	"jpt_43EDAB91");
	set_cmt	(0X43EDB524,	"indirect table for switch statement",	0);
	create_byte	(0X43EDB524);
	make_array	(0X43EDB524,	0X54);
	make_array	(0X43EDB578,	0X8);
	create_insn	(0X43EDB580);
	create_insn	(x=0X43EDB583);
	op_hex		(x,	1);
	create_insn	(x=0X43EDB586);
	op_hex		(x,	1);
	create_insn	(x=0X43EDB5FF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDB62F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDB659);
	op_hex		(x,	1);
	create_insn	(x=0X43EDB698);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EDB6BE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDB6C1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDB74E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDB754);
	op_hex		(x,	1);
	create_insn	(x=0X43EDB8A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43EDB8B5,	0XB);
	create_insn	(0X43EDB8C0);
	make_array	(0X43EDB8CD,	0X3);
	create_insn	(0X43EDB8D0);
	create_insn	(0X43EDB8E3);
	make_array	(0X43EDB8E7,	0X9);
	create_insn	(0X43EDB8F0);
	create_insn	(0X43EDB9DF);
	make_array	(0X43EDB9F7,	0X9);
	create_insn	(0X43EDBA00);
	set_cmt	(0X43EDBA03,	"interface",	0);
	set_cmt	(0X43EDBA09,	"index",	0);
	set_cmt	(0X43EDBA1E,	"this",	0);
	set_cmt	(0X43EDBA38,	"index",	0);
	set_cmt	(0X43EDBA3D,	"interface",	0);
	set_cmt	(0X43EDBA4A,	"this",	0);
	set_cmt	(0X43EDBA56,	"m_pPlayer",	0);
	set_cmt	(0X43EDBA9E,	"index",	0);
	set_cmt	(0X43EDBAA3,	"interface",	0);
	set_cmt	(0X43EDBAB0,	"this",	0);
	set_cmt	(0X43EDBAC7,	"propHash",	0);
	set_cmt	(0X43EDBACC,	"classHash",	0);
	set_cmt	(0X43EDBB2F,	"index",	0);
	set_cmt	(0X43EDBB34,	"interface",	0);
	set_cmt	(0X43EDBB41,	"this",	0);
	set_cmt	(0X43EDBB58,	"propHash",	0);
	set_cmt	(0X43EDBB5D,	"classHash",	0);
	create_insn	(0X43EDBB8E);
	create_insn	(0X43EDBBAC);
	make_array	(0X43EDBBB8,	0X8);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_11(void) {
        auto x;
#define id x

	create_insn	(0X43EDBBC0);
	set_cmt	(0X43EDBBC3,	"interface",	0);
	set_cmt	(0X43EDBBC9,	"index",	0);
	set_cmt	(0X43EDBBDD,	"this",	0);
	set_cmt	(0X43EDBBF7,	"index",	0);
	set_cmt	(0X43EDBBFC,	"interface",	0);
	set_cmt	(0X43EDBC09,	"this",	0);
	set_cmt	(0X43EDBC15,	"m_pPlayer",	0);
	set_cmt	(0X43EDBC24,	"interface",	0);
	set_cmt	(0X43EDBC2A,	"index",	0);
	create_insn	(x=0X43EDBC82);
	op_hex		(x,	1);
	create_insn	(0X43EDBC92);
	create_insn	(0X43EDBCA2);
	make_array	(0X43EDBCBD,	0X3);
	create_insn	(0X43EDBCC0);
	create_insn	(x=0X43EDBCD4);
	op_hex		(x,	1);
	create_insn	(x=0X43EDBCD9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDBCE6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDBCE9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EDBD0B,	"index",	0);
	set_cmt	(0X43EDBD10,	"interface",	0);
	set_cmt	(0X43EDBD1D,	"this",	0);
	set_cmt	(0X43EDBD37,	"index",	0);
	set_cmt	(0X43EDBD3C,	"interface",	0);
	set_cmt	(0X43EDBD49,	"this",	0);
	set_cmt	(0X43EDBD55,	"m_pPlayer",	0);
	set_cmt	(0X43EDBD66,	"index",	0);
	set_cmt	(0X43EDBD6B,	"interface",	0);
	set_cmt	(0X43EDBD78,	"this",	0);
	create_insn	(x=0X43EDBD94);
	op_hex		(x,	1);
	create_insn	(x=0X43EDBD99);
	op_hex		(x,	1);
	create_insn	(x=0X43EDBDA6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDBDA9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EDBDC1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EDBE1E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDBE23);
	op_hex		(x,	1);
	create_insn	(x=0X43EDBE30);
	op_hex		(x,	1);
	create_insn	(x=0X43EDBE33);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDBE69);
	create_insn	(x=0X43EDBE6B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDBE7A);
	create_insn	(x=0X43EDBE8E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDBE96);
	op_hex		(x,	1);
	create_byte	(0X43EDBEDB);
	make_array	(0X43EDBEDB,	0X15);
	create_insn	(0X43EDBEF0);
	create_insn	(x=0X43EDBEF3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDBF42);
	op_hex		(x,	1);
	create_insn	(x=0X43EDBF56);
	op_hex		(x,	1);
	create_insn	(x=0X43EDBF64);
	op_hex		(x,	1);
	create_insn	(x=0X43EDBF79);
	op_hex		(x,	1);
	create_insn	(0X43EDBFA6);
	create_insn	(x=0X43EDBFB9);
	op_hex		(x,	1);
	create_insn	(0X43EDBFCB);
	create_insn	(x=0X43EDBFD2);
	op_hex		(x,	1);
	create_insn	(0X43EDBFE1);
	set_cmt	(0X43EDC001,	"Size",	0);
	create_insn	(x=0X43EDC007);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC015);
	op_hex		(x,	1);
	create_insn	(0X43EDC01D);
	set_cmt	(0X43EDC021,	"Size",	0);
	create_insn	(x=0X43EDC027);
	op_hex		(x,	1);
	create_insn	(0X43EDC02E);
	create_insn	(x=0X43EDC04D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC081);
	op_hex		(x,	1);
	create_insn	(0X43EDC086);
	create_insn	(x=0X43EDC093);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC0DE);
	op_hex		(x,	1);
	create_insn	(0X43EDC11F);
	create_insn	(x=0X43EDC152);
	op_hex		(x,	1);
	create_insn	(0X43EDC15C);
	make_array	(0X43EDC161,	0XF);
	create_insn	(0X43EDC170);
	set_name	(0X43EDC170,	"OneTap::Features::SkinChanger::Parse::Knifes");
	create_insn	(x=0X43EDC173);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC176);
	op_hex		(x,	1);
	set_cmt	(0X43EDC179,	"switch 14 cases ",	0);
	set_cmt	(0X43EDC184,	"switch jump",	0);
	create_insn	(x=0X43EDC184);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EDC18B,	"jumptable 43EDC184 case 1",	1);
	create_insn	(0X43EDC18B);
	create_insn	(x=0X43EDC193);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC197);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC19A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC1A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC1AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC1B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC1B8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC1BF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC1D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC1D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC1D7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC1DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC1DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC1EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC1EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC1F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC1F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC1FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC207);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDC211,	"jumptable 43EDC184 case 2",	1);
	create_insn	(0X43EDC211);
	create_insn	(x=0X43EDC219);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC21D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC220);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC230);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC234);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC23B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC246);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC24A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC24D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC250);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC254);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC261);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC265);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC268);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC26B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC275);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC27D);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDC287,	"jumptable 43EDC184 case 3",	1);
	create_insn	(0X43EDC287);
	create_insn	(x=0X43EDC291);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC294);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC29B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC29F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC2A6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC2AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC2B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC2B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC2BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC2C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC2D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC2D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC2D7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC2DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC2DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC2EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC2EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC2F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC2F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC2FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC307);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDC311,	"jumptable 43EDC184 case 4",	1);
	create_insn	(0X43EDC311);
	create_insn	(x=0X43EDC319);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC31D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC320);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC32D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC331);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC338);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC33F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC350);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC354);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC357);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC35A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC35E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC36B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC36F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC372);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC375);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC37F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC387);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDC391,	"jumptable 43EDC184 case 5",	1);
	create_insn	(0X43EDC391);
	create_insn	(x=0X43EDC399);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC39D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC3A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC3AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC3B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC3BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC3C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC3D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC3D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC3D7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC3DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC3DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC3EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC3EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC3F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC3F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC3FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC407);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDC411,	"jumptable 43EDC184 case 6",	1);
	create_insn	(0X43EDC411);
	create_insn	(x=0X43EDC419);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC41D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC420);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC430);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC434);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC438);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC43F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC446);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC451);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC455);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC458);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC45B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC45F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC46C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC470);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC473);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC476);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC480);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC488);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDC492,	"jumptable 43EDC184 case 7",	1);
	create_insn	(0X43EDC492);
	create_insn	(x=0X43EDC49A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC49E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC4A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC4B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC4B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC4BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC4C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC4C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC4CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC4D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC4E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC4E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC4E7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC4EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC4EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC4FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC4FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC502);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC505);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC50F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC517);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDC521,	"jumptable 43EDC184 case 8",	1);
	create_insn	(0X43EDC521);
	create_insn	(x=0X43EDC529);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC52D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC530);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC540);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC544);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC54B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC551);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC555);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC55C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC563);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC570);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC574);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC577);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC57A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC57E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC58B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC58F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC592);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC595);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC59F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC5A7);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDC5B1,	"jumptable 43EDC184 case 9",	1);
	create_insn	(0X43EDC5B1);
	create_insn	(x=0X43EDC5B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC5BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC5C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC5D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC5D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC5DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC5E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC5EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC5ED);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC5F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC5F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC601);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC605);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC608);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC60B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC615);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC61D);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDC627,	"jumptable 43EDC184 case 10",	1);
	create_insn	(0X43EDC627);
	create_insn	(x=0X43EDC62F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC633);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC636);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC646);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC64A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC651);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC658);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC663);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC667);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC66A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC66D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC671);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC67E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC682);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC685);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC688);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC692);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC69A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDC6A4,	"jumptable 43EDC184 case 11",	1);
	create_insn	(0X43EDC6A4);
	create_insn	(x=0X43EDC6AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC6B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC6B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC6C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC6C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC6CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC6D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC6DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC6E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC6F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC6F7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC6FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC6FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC70B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC70F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC712);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC715);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC71F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC727);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDC731,	"jumptable 43EDC184 case 12",	1);
	create_insn	(0X43EDC731);
	create_insn	(x=0X43EDC739);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC73D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC740);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC750);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC754);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC75B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC762);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC770);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC774);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC777);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC77A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC77E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC78B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC78F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC792);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC795);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC79F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC7A7);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDC7B1,	"jumptable 43EDC184 case 13",	1);
	create_insn	(0X43EDC7B1);
	create_insn	(x=0X43EDC7B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC7BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC7C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC7D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC7D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC7DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC7E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC7E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC7F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC7F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC7FA);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC7FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC801);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC80E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC812);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC815);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC818);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC822);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC82A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDC834,	"jumptable 43EDC184 case 14",	1);
	create_insn	(0X43EDC834);
	create_insn	(x=0X43EDC83C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC840);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC843);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC850);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC854);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC85B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC862);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC870);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC874);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC877);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC87A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC87E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC88B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC88F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC892);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC895);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC89F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC8A7);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDC8B1,	"jumptable 43EDC184 default case",	1);
	create_insn	(x=0X43EDC8B1);
	op_stkvar	(x,	1);
	set_name	(0X43EDC8B1,	"def_43EDC184");
	set_cmt	(0X43EDC8D9,	"a3",	0);
	set_cmt	(0X43EDC8DA,	"a2",	0);
	set_cmt	(0X43EDC8DC,	"this",	0);
	set_cmt	(0X43EDC8EC,	"jump table for switch statement",	0);
	create_dword	(x=0X43EDC8EC);
	make_array	(x,	0XE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EDC8EC,	"jpt_43EDC184");
	make_array	(0X43EDC924,	0XC);
	create_insn	(0X43EDC930);
	set_name	(0X43EDC930,	"OneTap::Features::SkinChanger::Parse::SkinName");
	create_insn	(x=0X43EDC933);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC936);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC943);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC947);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC949);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC954);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC956);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC961);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC963);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC96E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC970);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC97B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC97D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC988);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC98A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC995);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC997);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC9A2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC9A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC9AF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC9B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC9BC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC9BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC9C9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC9CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC9D6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDC9D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDC9E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC9F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC9FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDC9FF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCA09);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCA0C);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDCA10,	"_DWORD",	0);
	set_cmt	(0X43EDCA1C,	"_DWORD",	0);
	create_insn	(x=0X43EDCA1F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCA22);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCA31);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDCA3F);
	create_insn	(x=0X43EDCA46);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCA4A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCA4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCA57);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCA59);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCA64);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCA66);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCA71);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCA73);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCA7E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCA80);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCA8B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCA8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCA98);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCA9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCAA5);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCAA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCAB2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCAB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCABF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCAC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCACC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCACE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCADB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCAE7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCAF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCAF5);
	op_hex		(x,	1);
	set_cmt	(0X43EDCAFF,	"_DWORD",	0);
	create_insn	(x=0X43EDCB00);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDCB09,	"_DWORD",	0);
	create_insn	(x=0X43EDCB0C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCB0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCB1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDCB2C);
	create_insn	(x=0X43EDCB33);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCB37);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCB39);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCB44);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCB46);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCB51);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCB53);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCB5E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCB60);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCB6B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCB6D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCB78);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCB7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCB85);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCB87);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCB92);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCB94);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCB9F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCBA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCBAC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCBAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCBB9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCBBB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCBC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCBD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCBDD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCBE2);
	op_hex		(x,	1);
	set_cmt	(0X43EDCBEC,	"_DWORD",	0);
	create_insn	(x=0X43EDCBED);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDCBF6,	"_DWORD",	0);
	create_insn	(x=0X43EDCBF9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCBFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCC0B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDCC19);
	create_insn	(x=0X43EDCC20);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCC24);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCC26);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCC31);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCC33);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCC3E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCC40);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCC4B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCC4D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCC58);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCC5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCC65);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCC67);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCC72);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCC74);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCC7F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCC81);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCC8C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCC8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCC99);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCC9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCCA6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCCA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCCB3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCCB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCCC0);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCCC2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCCCF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCCE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCCEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCCEF);
	op_hex		(x,	1);
	set_cmt	(0X43EDCCF9,	"_DWORD",	0);
	create_insn	(x=0X43EDCCFA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDCD03,	"_DWORD",	0);
	create_insn	(x=0X43EDCD06);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCD09);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCD18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDCD26);
	create_insn	(x=0X43EDCD2D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCD31);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCD33);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCD3E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCD40);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCD4B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCD4D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCD58);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCD5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCD65);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCD67);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCD72);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCD74);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCD7F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCD81);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCD8C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCD8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCD99);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCD9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCDA6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCDA8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCDB3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCDB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCDC0);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCDC2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCDCD);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCDCF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCDDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCDF1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCDFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCDFF);
	op_hex		(x,	1);
	set_cmt	(0X43EDCE09,	"_DWORD",	0);
	create_insn	(x=0X43EDCE0A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDCE13,	"_DWORD",	0);
	create_insn	(x=0X43EDCE16);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCE19);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCE28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDCE36);
	create_insn	(x=0X43EDCE3D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCE41);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCE43);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCE4E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCE50);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCE5B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCE5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCE68);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCE6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCE75);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCE77);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCE82);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCE84);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCE8F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCE91);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCE9C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCE9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCEA9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCEAB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCEB6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCEB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCEC3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCEC5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCED0);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCED2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCEDD);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCEDF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCEEA);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCEEC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCEF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCF05);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCF0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCF13);
	op_hex		(x,	1);
	set_cmt	(0X43EDCF1D,	"_DWORD",	0);
	create_insn	(x=0X43EDCF1E);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDCF27,	"_DWORD",	0);
	create_insn	(x=0X43EDCF2A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCF2D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCF3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDCF4A);
	create_insn	(x=0X43EDCF51);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDCF55);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCF57);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCF62);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCF64);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCF6F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCF71);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCF7C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCF7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCF89);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCF8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCF96);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCF98);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCFA3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCFA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCFB0);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCFB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCFBD);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCFBF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCFCA);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCFCC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCFD7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCFD9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCFE4);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCFE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDCFF1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDCFF3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD000);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD011);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD01A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD01F);
	op_hex		(x,	1);
	set_cmt	(0X43EDD029,	"_DWORD",	0);
	create_insn	(x=0X43EDD02A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDD033,	"_DWORD",	0);
	create_insn	(x=0X43EDD036);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD039);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD048);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDD056);
	create_insn	(x=0X43EDD05D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD061);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD063);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD06E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD070);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD07B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD07D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD088);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD08A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD095);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD097);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD0A2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD0A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD0AF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD0B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD0BC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD0BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD0C9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD0CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD0D6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD0D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD0E3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD0E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD0F0);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD0F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD0FD);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD0FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD10C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD121);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD12A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD12F);
	op_hex		(x,	1);
	set_cmt	(0X43EDD139,	"_DWORD",	0);
	create_insn	(x=0X43EDD13A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDD143,	"_DWORD",	0);
	create_insn	(x=0X43EDD146);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD149);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD158);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDD166);
	create_insn	(x=0X43EDD16D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD171);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD173);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD17E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD180);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD18B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD18D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD198);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD19A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD1A5);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD1A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD1B2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD1B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD1BF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD1C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD1CC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD1CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD1D9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD1DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD1E6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD1E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD1F3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD1F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD200);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD202);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD20D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD20F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD21A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD21C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD227);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD229);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD234);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD236);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD241);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD243);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD250);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD261);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD26A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD26F);
	op_hex		(x,	1);
	set_cmt	(0X43EDD279,	"_DWORD",	0);
	create_insn	(x=0X43EDD27A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDD283,	"_DWORD",	0);
	create_insn	(x=0X43EDD286);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD289);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD298);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDD2A6);
	create_insn	(x=0X43EDD2AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD2B1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD2B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD2BE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD2C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD2CB);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD2CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD2D8);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD2DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD2E5);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD2E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD2F2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD2F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD2FF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD301);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD30C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD30E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD319);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD31B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD326);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD328);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD333);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD335);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD340);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD342);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD34D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD34F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD35C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD371);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD37A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD37F);
	op_hex		(x,	1);
	set_cmt	(0X43EDD389,	"_DWORD",	0);
	create_insn	(x=0X43EDD38A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDD393,	"_DWORD",	0);
	create_insn	(x=0X43EDD396);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD399);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD3A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDD3B6);
	create_insn	(x=0X43EDD3BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD3C1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD3C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD3CE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD3D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD3DB);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD3DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD3E8);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD3EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD3F5);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD3F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD402);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD404);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD40F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD411);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD41C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD41E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD429);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD42B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD436);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD438);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD443);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD445);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD450);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD452);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD45D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD45F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD46A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD46C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD477);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD479);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD486);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD492);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD49B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD4A0);
	op_hex		(x,	1);
	set_cmt	(0X43EDD4AA,	"_DWORD",	0);
	create_insn	(x=0X43EDD4AB);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDD4B4,	"_DWORD",	0);
	create_insn	(x=0X43EDD4B7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD4BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD4C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDD4D7);
	create_insn	(x=0X43EDD4DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD4E2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD4E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD4EF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD4F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD4FC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD4FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD509);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD50B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD516);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD518);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD523);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD525);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD530);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD532);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD53D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD53F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD54A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD54C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD557);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD559);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD564);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD566);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD571);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD573);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD57E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD580);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD58D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD5A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD5AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD5AF);
	op_hex		(x,	1);
	set_cmt	(0X43EDD5B9,	"_DWORD",	0);
	create_insn	(x=0X43EDD5BA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDD5C3,	"_DWORD",	0);
	create_insn	(x=0X43EDD5C6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD5C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD5D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDD5E6);
	create_insn	(x=0X43EDD5ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD5F1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD5F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD5FE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD600);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD60B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD60D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD618);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD61A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD625);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD627);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD632);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD634);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD63F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD641);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD64C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD64E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD659);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD65B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD666);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD668);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD673);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD675);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD680);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD682);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD68D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD68F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD69A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD69C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD6A7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD6A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD6B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD6C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD6CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD6D0);
	op_hex		(x,	1);
	set_cmt	(0X43EDD6DA,	"_DWORD",	0);
	create_insn	(x=0X43EDD6DB);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDD6E4,	"_DWORD",	0);
	create_insn	(x=0X43EDD6E7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD6EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD6F9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDD707);
	create_insn	(x=0X43EDD70E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD712);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD714);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD71F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD721);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD72C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD72E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD739);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD73B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD746);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD748);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD753);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD755);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD760);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD762);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD76D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD76F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD77A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD77C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD787);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD789);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD794);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD796);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD7A1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD7A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD7B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD7C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD7CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD7CF);
	op_hex		(x,	1);
	set_cmt	(0X43EDD7D9,	"_DWORD",	0);
	create_insn	(x=0X43EDD7DA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDD7E3,	"_DWORD",	0);
	create_insn	(x=0X43EDD7E6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD7E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD7F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDD806);
	create_insn	(x=0X43EDD80D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD811);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD813);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD81E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD820);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD82B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD82D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD838);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD83A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD845);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD847);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD852);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD854);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD85F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD861);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD86C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD86E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD879);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD87B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD886);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD888);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD893);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD895);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD8A0);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD8A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD8AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD8C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD8CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD8CF);
	op_hex		(x,	1);
	set_cmt	(0X43EDD8D9,	"_DWORD",	0);
	create_insn	(x=0X43EDD8DA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDD8E3,	"_DWORD",	0);
	create_insn	(x=0X43EDD8E6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD8E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD8F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDD906);
	create_insn	(x=0X43EDD90D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDD911);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD913);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD91E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD920);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD92B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD92D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD938);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD93A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD945);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD947);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD952);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD954);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD95F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD961);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD96C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD96E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD979);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD97B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD986);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD988);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD993);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD995);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD9A0);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD9A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD9AD);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD9AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD9BA);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD9BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD9C7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD9C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD9D4);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD9D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD9E1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD9E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD9EE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD9F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDD9FB);
	op_hex		(x,	1);
	create_insn	(x=0X43EDD9FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDA08);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDA0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDA15);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDA17);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDA24);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDA31);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDA3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDA3F);
	op_hex		(x,	1);
	set_cmt	(0X43EDDA49,	"_DWORD",	0);
	create_insn	(x=0X43EDDA4A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDDA53,	"_DWORD",	0);
	create_insn	(x=0X43EDDA56);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDA59);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDA68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDDA76);
	create_insn	(x=0X43EDDA7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDA81);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDA83);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDA8E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDA90);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDA9B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDA9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDAA8);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDAAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDAB5);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDAB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDAC2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDAC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDACF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDAD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDADC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDADE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDAE9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDAEB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDAF6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDAF8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDB03);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDB05);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDB10);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDB12);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDB1D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDB1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDB41);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDB4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDB4F);
	op_hex		(x,	1);
	set_cmt	(0X43EDDB59,	"_DWORD",	0);
	create_insn	(x=0X43EDDB5A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDDB63,	"_DWORD",	0);
	create_insn	(x=0X43EDDB66);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDB69);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDB78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDDB86);
	create_insn	(x=0X43EDDB8D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDB91);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDB93);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDB9E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDBA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDBAB);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDBAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDBB8);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDBBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDBC5);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDBC7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDBD2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDBD4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDBDF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDBE1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDBEC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDBEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDBF9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDBFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDC06);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDC08);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDC13);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDC15);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDC20);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDC22);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDC2F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDC41);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDC4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDC4F);
	op_hex		(x,	1);
	set_cmt	(0X43EDDC59,	"_DWORD",	0);
	create_insn	(x=0X43EDDC5A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDDC63,	"_DWORD",	0);
	create_insn	(x=0X43EDDC66);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDC69);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDC78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EDDC86);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDC8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDC92);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDC9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDCA1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDCAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDCC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDCCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDCCF);
	op_hex		(x,	1);
	set_cmt	(0X43EDDCD9,	"_DWORD",	0);
	create_insn	(x=0X43EDDCDA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDDCE3,	"_DWORD",	0);
	create_insn	(x=0X43EDDCE6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDCE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDD03);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDD07);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDD09);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDD14);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDD16);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDD21);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDD23);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDD2E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDD30);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDD3B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDD3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDD48);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDD4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDD55);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDD57);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDD62);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDD64);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDD6F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDD71);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDD7C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDD7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDD89);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDD8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDD96);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDD98);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDDA3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDDA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDDB1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDDC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDDCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDDCF);
	op_hex		(x,	1);
	set_cmt	(0X43EDDDD9,	"_DWORD",	0);
	create_insn	(x=0X43EDDDDA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDDDE3,	"_DWORD",	0);
	create_insn	(x=0X43EDDDE6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDDE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDE03);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDE07);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDE09);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDE14);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDE16);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDE21);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDE23);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDE2E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDE30);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDE3B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDE3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDE48);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDE4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDE55);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDE57);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDE62);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDE64);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDE6F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDE71);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDE7C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDE7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDE89);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDE8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDE97);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDEA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDEAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDEAF);
	op_hex		(x,	1);
	set_cmt	(0X43EDDEB9,	"_DWORD",	0);
	create_insn	(x=0X43EDDEBA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDDEC3,	"_DWORD",	0);
	create_insn	(x=0X43EDDEC6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDEC9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDED8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDDEE6);
	create_insn	(x=0X43EDDEED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDEF1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDEF3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDEFE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDF00);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDF0B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDF0D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDF18);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDF1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDF25);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDF27);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDF32);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDF34);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDF3F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDF41);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDF4C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDF4E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDF59);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDF5B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDF66);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDF68);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDF73);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDF75);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDF82);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDF91);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDF9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDF9F);
	op_hex		(x,	1);
	set_cmt	(0X43EDDFA9,	"_DWORD",	0);
	create_insn	(x=0X43EDDFAA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDDFB3,	"_DWORD",	0);
	create_insn	(x=0X43EDDFB6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDFB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDFC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDDFD6);
	create_insn	(x=0X43EDDFDD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDDFE1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDFE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDFEE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDFF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDDFFB);
	op_hex		(x,	1);
	create_insn	(x=0X43EDDFFD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE008);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE00A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE015);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE017);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE022);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE024);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE02F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE031);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE03C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE03E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE049);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE04B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE056);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE058);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE063);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE065);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE070);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE072);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE07D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE07F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE08C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE0A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE0AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE0AF);
	op_hex		(x,	1);
	set_cmt	(0X43EDE0B9,	"_DWORD",	0);
	create_insn	(x=0X43EDE0BA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDE0C3,	"_DWORD",	0);
	create_insn	(x=0X43EDE0C6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE0C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE0D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDE0E6);
	create_insn	(x=0X43EDE0ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE0F1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE0F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE0FE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE100);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE10B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE10D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE118);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE11A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE125);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE127);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE132);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE134);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE13F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE141);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE14C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE14E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE159);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE15B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE166);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE168);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE173);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE175);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE180);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE182);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE18B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE196);
	op_stkvar	(x,	1);
	create_insn	(0X43EDE1A1);
	create_insn	(x=0X43EDE1A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE1B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE1C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE1C5);
	op_hex		(x,	1);
	set_cmt	(0X43EDE1CF,	"_DWORD",	0);
	create_insn	(x=0X43EDE1D0);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDE1D9,	"_DWORD",	0);
	create_insn	(x=0X43EDE1DC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE1DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE1EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDE1FC);
	create_insn	(x=0X43EDE203);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE207);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE209);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE214);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE216);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE221);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE223);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE22E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE230);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE23B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE23D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE248);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE24A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE255);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE257);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE262);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE264);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE26F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE271);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE27C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE27E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE289);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE28B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE296);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE298);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE2A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE2AC);
	op_stkvar	(x,	1);
	create_insn	(0X43EDE2B7);
	create_insn	(x=0X43EDE2BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE2D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE2DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE2DF);
	op_hex		(x,	1);
	set_cmt	(0X43EDE2E9,	"_DWORD",	0);
	create_insn	(x=0X43EDE2EA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDE2F3,	"_DWORD",	0);
	create_insn	(x=0X43EDE2F6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE2F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE308);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDE316);
	create_insn	(x=0X43EDE31D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE321);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE323);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE32E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE330);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE33B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE33D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE348);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE34A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE355);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE357);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE362);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE364);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE36F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE371);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE37C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE37E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE389);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE38B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE396);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE398);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE3A3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE3A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE3AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE3B9);
	op_stkvar	(x,	1);
	create_insn	(0X43EDE3C4);
	create_insn	(x=0X43EDE3CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE3E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE3EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE3EF);
	op_hex		(x,	1);
	set_cmt	(0X43EDE3F9,	"_DWORD",	0);
	create_insn	(x=0X43EDE3FA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDE403,	"_DWORD",	0);
	create_insn	(x=0X43EDE406);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE409);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE418);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDE426);
	create_insn	(x=0X43EDE42D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE431);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE433);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE43E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE440);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE44B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE44D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE458);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE45A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE465);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE467);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE472);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE474);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE47F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE481);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE48C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE48E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE499);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE49B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE4A6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE4A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE4B3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE4B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE4C0);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE4C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE4CD);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE4CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE4DA);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE4DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE4E7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE4E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE4F4);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE4F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE4FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE50A);
	op_stkvar	(x,	1);
	create_insn	(0X43EDE515);
	create_insn	(x=0X43EDE51C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE531);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE53A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE53F);
	op_hex		(x,	1);
	set_cmt	(0X43EDE549,	"_DWORD",	0);
	create_insn	(x=0X43EDE54A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDE553,	"_DWORD",	0);
	create_insn	(x=0X43EDE556);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE559);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE568);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDE576);
	create_insn	(x=0X43EDE57D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE581);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE583);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE58E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE590);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE59B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE59D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE5A8);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE5AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE5B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE5B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE5C2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE5C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE5CF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE5D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE5DC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE5DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE5E9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE5EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE5F6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE5F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE603);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE605);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE610);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE612);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE61D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE61F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE62A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE62C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE637);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE639);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE644);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE646);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE64F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE65A);
	op_stkvar	(x,	1);
	create_insn	(0X43EDE665);
	create_insn	(x=0X43EDE66C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE681);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE68A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE68F);
	op_hex		(x,	1);
	set_cmt	(0X43EDE699,	"_DWORD",	0);
	create_insn	(x=0X43EDE69A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDE6A3,	"_DWORD",	0);
	create_insn	(x=0X43EDE6A6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE6A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE6B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDE6C6);
	create_insn	(x=0X43EDE6CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE6D1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE6D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE6DE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE6E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE6EB);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE6ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE6F8);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE6FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE705);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE707);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE712);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE714);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE71F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE721);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE72C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE72E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE739);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE73B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE746);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE748);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE753);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE755);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE760);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE762);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE76D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE76F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE77A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE77C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE785);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE790);
	op_stkvar	(x,	1);
	create_insn	(0X43EDE79B);
	create_insn	(x=0X43EDE7A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE7B1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE7BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE7BF);
	op_hex		(x,	1);
	set_cmt	(0X43EDE7C9,	"_DWORD",	0);
	create_insn	(x=0X43EDE7CA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDE7D3,	"_DWORD",	0);
	create_insn	(x=0X43EDE7D6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE7D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE7E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDE7F6);
	create_insn	(x=0X43EDE7FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE801);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE803);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE80E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE810);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE81B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE81D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE828);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE82A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE835);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE837);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE842);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE844);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE84F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE851);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE85C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE85E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE869);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE86B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE876);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE878);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE883);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE885);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE890);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE892);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE89D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE89F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE8A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE8B3);
	op_stkvar	(x,	1);
	create_insn	(0X43EDE8BE);
	create_insn	(x=0X43EDE8C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE8D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE8DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE8E2);
	op_hex		(x,	1);
	set_cmt	(0X43EDE8EC,	"_DWORD",	0);
	create_insn	(x=0X43EDE8ED);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDE8F6,	"_DWORD",	0);
	create_insn	(x=0X43EDE8F9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE8FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE90B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDE919);
	create_insn	(x=0X43EDE920);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE924);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE926);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE931);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE933);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE93E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE940);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE94B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE94D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE958);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE95A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE965);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE967);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE972);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE974);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE97F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE981);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE98C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE98E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE999);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE99B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE9A6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE9A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE9B3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE9B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE9C0);
	op_hex		(x,	1);
	create_insn	(x=0X43EDE9C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDE9CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE9D6);
	op_stkvar	(x,	1);
	create_insn	(0X43EDE9E1);
	create_insn	(x=0X43EDE9E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDE9F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEA00);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEA05);
	op_hex		(x,	1);
	set_cmt	(0X43EDEA0F,	"_DWORD",	0);
	create_insn	(x=0X43EDEA10);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDEA19,	"_DWORD",	0);
	create_insn	(x=0X43EDEA1C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEA1F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEA2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDEA3C);
	create_insn	(x=0X43EDEA43);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEA47);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEA49);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEA54);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEA56);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEA61);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEA63);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEA6E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEA70);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEA7B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEA7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEA88);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEA8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEA95);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEA97);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEAA2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEAA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEAAF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEAB1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEABC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEABE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEAC9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEACB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEAD6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEAD8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEAE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEAEC);
	op_stkvar	(x,	1);
	create_insn	(0X43EDEAF7);
	create_insn	(x=0X43EDEAFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEB11);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEB1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEB1F);
	op_hex		(x,	1);
	set_cmt	(0X43EDEB29,	"_DWORD",	0);
	create_insn	(x=0X43EDEB2A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDEB33,	"_DWORD",	0);
	create_insn	(x=0X43EDEB36);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEB39);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEB48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDEB56);
	create_insn	(x=0X43EDEB5D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEB61);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEB63);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEB6E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEB70);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEB7B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEB7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEB88);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEB8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEB95);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEB97);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEBA2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEBA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEBAF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEBB1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEBBC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEBBE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEBC9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEBCB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEBD6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEBD8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEBE3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEBE5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEBF0);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEBF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEBFD);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEBFF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEC08);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEC15);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEC21);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEC2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEC2F);
	op_hex		(x,	1);
	set_cmt	(0X43EDEC39,	"_DWORD",	0);
	create_insn	(x=0X43EDEC3A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDEC43,	"_DWORD",	0);
	create_insn	(x=0X43EDEC46);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEC49);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEC58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDEC66);
	create_insn	(x=0X43EDEC6D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEC71);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEC73);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEC7E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEC80);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEC8B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEC8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEC98);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEC9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDECA5);
	op_hex		(x,	1);
	create_insn	(x=0X43EDECA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDECB2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDECB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDECBF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDECC1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDECCC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDECCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDECD9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDECDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDECE6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDECE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDECF3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDECF5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDED00);
	op_hex		(x,	1);
	create_insn	(x=0X43EDED02);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDED0D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDED0F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDED1A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDED1C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDED27);
	op_hex		(x,	1);
	create_insn	(x=0X43EDED29);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDED34);
	op_hex		(x,	1);
	create_insn	(x=0X43EDED36);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDED41);
	op_hex		(x,	1);
	create_insn	(x=0X43EDED43);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDED4E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDED50);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDED5B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDED5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDED68);
	op_hex		(x,	1);
	create_insn	(x=0X43EDED6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDED73);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDED80);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDED91);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDED9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDED9F);
	op_hex		(x,	1);
	set_cmt	(0X43EDEDA9,	"_DWORD",	0);
	create_insn	(x=0X43EDEDAA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDEDB3,	"_DWORD",	0);
	create_insn	(x=0X43EDEDB6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEDB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEDC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDEDD6);
	create_insn	(x=0X43EDEDDD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEDE1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEDE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEDEE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEDF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEDFB);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEDFD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEE08);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEE0A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEE15);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEE17);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEE22);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEE24);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEE2F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEE31);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEE3C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEE3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEE49);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEE4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEE56);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEE58);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEE63);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEE65);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEE70);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEE72);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEE7D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEE7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEE8A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEE8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEE95);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEEA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEEB1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEEBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEEBF);
	op_hex		(x,	1);
	set_cmt	(0X43EDEEC9,	"_DWORD",	0);
	create_insn	(x=0X43EDEECA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDEED3,	"_DWORD",	0);
	create_insn	(x=0X43EDEED6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEED9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEEE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDEEF6);
	create_insn	(x=0X43EDEEFD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDEF01);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEF03);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEF0E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEF10);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEF1B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEF1D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEF28);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEF2A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEF35);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEF37);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEF42);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEF44);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEF4F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEF51);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEF5C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEF5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEF69);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEF6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEF76);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEF78);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEF83);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEF85);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEF90);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEF92);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEF9D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEF9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEFAA);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEFAC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEFB7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEFB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEFC4);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEFC6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEFD1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEFD3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEFDE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEFE0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEFEB);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEFED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDEFF8);
	op_hex		(x,	1);
	create_insn	(x=0X43EDEFFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF005);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF007);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF010);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF01D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF031);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF03A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF03F);
	op_hex		(x,	1);
	set_cmt	(0X43EDF049,	"_DWORD",	0);
	create_insn	(x=0X43EDF04A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDF053,	"_DWORD",	0);
	create_insn	(x=0X43EDF056);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF059);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF068);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDF076);
	create_insn	(x=0X43EDF07D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF081);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF083);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF08E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF090);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF09B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF09D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF0A8);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF0AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF0B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF0B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF0C2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF0C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF0CF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF0D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF0DC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF0DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF0E9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF0EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF0F6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF0F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF103);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF105);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF110);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF112);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF11D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF11F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF12A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF12C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF137);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF139);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF144);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF146);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF151);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF153);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF15E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF160);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF169);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF176);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF182);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF18B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF190);
	op_hex		(x,	1);
	set_cmt	(0X43EDF19A,	"_DWORD",	0);
	create_insn	(x=0X43EDF19B);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDF1A4,	"_DWORD",	0);
	create_insn	(x=0X43EDF1A7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF1AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF1B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDF1C7);
	create_insn	(x=0X43EDF1CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF1D2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF1D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF1DF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF1E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF1EC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF1EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF1F9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF1FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF206);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF208);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF213);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF215);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF220);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF222);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF22D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF22F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF23A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF23C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF247);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF249);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF254);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF256);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF261);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF263);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF26E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF270);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF27B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF27D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF288);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF28A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF295);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF297);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF2A2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF2A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF2AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF2BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF2C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF2CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF2D4);
	op_hex		(x,	1);
	set_cmt	(0X43EDF2DE,	"_DWORD",	0);
	create_insn	(x=0X43EDF2DF);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDF2E8,	"_DWORD",	0);
	create_insn	(x=0X43EDF2EB);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF2EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF2FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDF30B);
	create_insn	(x=0X43EDF312);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF316);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF31B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF323);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF32F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF33C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF351);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF35A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF35F);
	op_hex		(x,	1);
	set_cmt	(0X43EDF369,	"_DWORD",	0);
	create_insn	(x=0X43EDF36A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDF373,	"_DWORD",	0);
	create_insn	(x=0X43EDF376);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF379);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF388);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDF396);
	create_insn	(x=0X43EDF39D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF3A1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF3A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF3AE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF3B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF3BB);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF3BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF3C8);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF3CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF3D5);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF3D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF3E2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF3E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF3EF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF3F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF3FC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF3FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF409);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF40B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF416);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF418);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF423);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF425);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF430);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF432);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF43D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF43F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF44A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF44C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF457);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF459);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF464);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF466);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF471);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF473);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF47E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF480);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF48B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF48D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF498);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF49A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF4A5);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF4A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF4B2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF4B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF4BF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF4C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF4CC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF4CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF4D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF4E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF4EB);
	op_stkvar	(x,	1);
	create_insn	(0X43EDF4F6);
	create_insn	(x=0X43EDF4FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF511);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF51A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF51F);
	op_hex		(x,	1);
	set_cmt	(0X43EDF529,	"_DWORD",	0);
	create_insn	(x=0X43EDF52A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDF533,	"_DWORD",	0);
	create_insn	(x=0X43EDF536);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF539);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF548);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDF556);
	create_insn	(x=0X43EDF55D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF561);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF563);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF56E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF570);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF57B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF57D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF588);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF58A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF595);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF597);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF5A2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF5A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF5AF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF5B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF5BC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF5BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF5C9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF5CB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF5D6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF5D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF5E3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF5E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF5F0);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF5F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF5FD);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF5FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF60A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF60C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF617);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF619);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF624);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF626);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF631);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF633);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF63E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF640);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF64B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF64D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF658);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF65A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF665);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF667);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF672);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF674);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF67F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF681);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF68A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF693);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF69E);
	op_stkvar	(x,	1);
	create_insn	(0X43EDF6A9);
	create_insn	(x=0X43EDF6B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF6C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF6CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF6CF);
	op_hex		(x,	1);
	set_cmt	(0X43EDF6D9,	"_DWORD",	0);
	create_insn	(x=0X43EDF6DA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDF6E3,	"_DWORD",	0);
	create_insn	(x=0X43EDF6E6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF6E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF6F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDF706);
	create_insn	(x=0X43EDF70D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF711);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF713);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF71E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF720);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF72B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF72D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF738);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF73A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF745);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF747);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF752);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF754);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF75F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF761);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF76C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF76E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF779);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF77B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF786);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF788);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF793);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF795);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF7A0);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF7A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF7AD);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF7AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF7BA);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF7BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF7C7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF7C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF7D4);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF7D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF7E1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF7E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF7EE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF7F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF7FB);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF7FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF808);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF80A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF815);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF817);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF822);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF824);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF82D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF836);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF841);
	op_stkvar	(x,	1);
	create_insn	(0X43EDF84C);
	create_insn	(x=0X43EDF853);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF862);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF86B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF870);
	op_hex		(x,	1);
	set_cmt	(0X43EDF87A,	"_DWORD",	0);
	create_insn	(x=0X43EDF87B);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDF884,	"_DWORD",	0);
	create_insn	(x=0X43EDF887);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF88A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF899);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDF8A7);
	create_insn	(x=0X43EDF8AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF8B2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF8B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF8BF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF8C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF8CC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF8CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF8D9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF8DB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF8E6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF8E8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF8F3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF8F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF900);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF902);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF90D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF90F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF91A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF91C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF927);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF929);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF934);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF936);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF941);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF943);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF94E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF950);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF95B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF95D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF968);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF96A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF975);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF977);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF982);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF984);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF98F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF991);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDF99A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF9A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF9AE);
	op_stkvar	(x,	1);
	create_insn	(0X43EDF9B9);
	create_insn	(x=0X43EDF9C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF9D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF9DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDF9DF);
	op_hex		(x,	1);
	set_cmt	(0X43EDF9E9,	"_DWORD",	0);
	create_insn	(x=0X43EDF9EA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDF9F3,	"_DWORD",	0);
	create_insn	(x=0X43EDF9F6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDF9F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFA08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDFA16);
	create_insn	(x=0X43EDFA1D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFA21);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFA23);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFA2E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFA30);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFA3B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFA3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFA48);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFA4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFA55);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFA57);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFA62);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFA64);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFA6F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFA71);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFA7C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFA7E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFA89);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFA8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFA96);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFA98);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFAA3);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFAA5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFAB0);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFAB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFABD);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFABF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFACA);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFACC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFAD7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFAD9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFAE4);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFAE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFAF1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFAF3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFAFE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFB00);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFB0B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFB0D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFB18);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFB1A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFB25);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFB27);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFB32);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFB34);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFB3D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFB46);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFB51);
	op_stkvar	(x,	1);
	create_insn	(0X43EDFB5C);
	create_insn	(x=0X43EDFB63);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFB72);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFB7B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFB80);
	op_hex		(x,	1);
	set_cmt	(0X43EDFB8A,	"_DWORD",	0);
	create_insn	(x=0X43EDFB8B);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDFB94,	"_DWORD",	0);
	create_insn	(x=0X43EDFB97);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFB9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFBA9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDFBB7);
	create_insn	(x=0X43EDFBBE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFBC0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFBCB);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFBCD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFBD8);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFBDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFBE5);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFBE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFBF2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFBF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFBFF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFC01);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFC0C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFC0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFC19);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFC1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFC26);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFC28);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFC33);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFC35);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFC40);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFC42);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFC4D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFC4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFC5A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFC5C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFC67);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFC69);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFC74);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFC76);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFC81);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFC83);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFC8E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFC90);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFC9B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFC9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFCA8);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFCAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFCB5);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFCB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFCC2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFCC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFCCF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFCD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFCDC);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFCDE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFCE9);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFCEB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFCF6);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFCF8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFD03);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFD05);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFD10);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFD12);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFD1D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFD21);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFD23);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFD2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFD35);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFD40);
	op_stkvar	(x,	1);
	create_insn	(0X43EDFD4B);
	create_insn	(x=0X43EDFD52);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFD61);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFD6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFD6F);
	op_hex		(x,	1);
	set_cmt	(0X43EDFD79,	"_DWORD",	0);
	create_insn	(x=0X43EDFD7A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDFD83,	"_DWORD",	0);
	create_insn	(x=0X43EDFD86);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFD89);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFD98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDFDA6);
	create_insn	(x=0X43EDFDAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFDB1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFDB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFDBE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFDC0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFDCB);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFDCD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFDD8);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFDDA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFDE5);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFDE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFDF2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFDF4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFDFF);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFE01);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFE0C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFE0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFE19);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFE1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFE26);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFE28);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFE33);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFE35);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFE40);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFE42);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFE4D);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFE4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFE5A);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFE5C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFE67);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFE69);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFE74);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFE76);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFE81);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFE83);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFE8E);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFE90);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFE9B);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFE9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFEA8);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFEAA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFEB5);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFEB7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFEC2);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFEC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFECD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFED6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFEE1);
	op_stkvar	(x,	1);
	create_insn	(0X43EDFEEC);
	create_insn	(x=0X43EDFEF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFF02);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFF0B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFF10);
	op_hex		(x,	1);
	set_cmt	(0X43EDFF1A,	"_DWORD",	0);
	create_insn	(x=0X43EDFF1B);
	op_stkvar	(x,	1);
	set_cmt	(0X43EDFF24,	"_DWORD",	0);
	create_insn	(x=0X43EDFF27);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFF2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFF39);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EDFF47);
	create_insn	(x=0X43EDFF4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EDFF52);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFF54);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFF5F);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFF61);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFF6C);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFF6E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFF79);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFF7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFF86);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFF88);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFF93);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFF95);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFFA0);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFFA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFFAD);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFFAF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFFBA);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFFBC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFFC7);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFFC9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFFD4);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFFD6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFFE1);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFFE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFFEE);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFFF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EDFFFB);
	op_hex		(x,	1);
	create_insn	(x=0X43EDFFFD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0008);
	op_hex		(x,	1);
	create_insn	(x=0X43EE000A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0015);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0017);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0022);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0024);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE002F);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0031);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE003C);
	op_hex		(x,	1);
	create_insn	(x=0X43EE003E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0049);
	op_hex		(x,	1);
	create_insn	(x=0X43EE004B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0056);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0058);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0063);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0065);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0070);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0072);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE007D);
	op_hex		(x,	1);
	create_insn	(x=0X43EE007F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0088);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE0091);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE009C);
	op_stkvar	(x,	1);
	create_insn	(0X43EE00A7);
	create_insn	(x=0X43EE00AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE00C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE00CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE00CF);
	op_hex		(x,	1);
	set_cmt	(0X43EE00D9,	"_DWORD",	0);
	create_insn	(x=0X43EE00DA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EE00E3,	"_DWORD",	0);
	create_insn	(x=0X43EE00E6);
	op_hex		(x,	1);
	create_insn	(x=0X43EE00E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE00F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EE0106);
	create_insn	(x=0X43EE010D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE0111);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0113);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE011E);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0120);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE012B);
	op_hex		(x,	1);
	create_insn	(x=0X43EE012D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0138);
	op_hex		(x,	1);
	create_insn	(x=0X43EE013A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0145);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0147);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0152);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0154);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE015F);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0161);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE016C);
	op_hex		(x,	1);
	create_insn	(x=0X43EE016E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0179);
	op_hex		(x,	1);
	create_insn	(x=0X43EE017B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0186);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0188);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0193);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0195);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE01A0);
	op_hex		(x,	1);
	create_insn	(x=0X43EE01A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE01AD);
	op_hex		(x,	1);
	create_insn	(x=0X43EE01AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE01BA);
	op_hex		(x,	1);
	create_insn	(x=0X43EE01BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE01C7);
	op_hex		(x,	1);
	create_insn	(x=0X43EE01C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE01D4);
	op_hex		(x,	1);
	create_insn	(x=0X43EE01D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE01E1);
	op_hex		(x,	1);
	create_insn	(x=0X43EE01E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE01EE);
	op_hex		(x,	1);
	create_insn	(x=0X43EE01F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE01FB);
	op_hex		(x,	1);
	create_insn	(x=0X43EE01FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0206);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE020F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE021A);
	op_stkvar	(x,	1);
	create_insn	(0X43EE0225);
	create_insn	(x=0X43EE022C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE0241);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE024A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE024F);
	op_hex		(x,	1);
	set_cmt	(0X43EE0259,	"_DWORD",	0);
	create_insn	(x=0X43EE025A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EE0263,	"_DWORD",	0);
	create_insn	(x=0X43EE0266);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0269);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE0278);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EE0286);
	create_insn	(x=0X43EE028D);
	op_hex		(x,	1);
	create_insn	(x=0X43EE028F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE029A);
	op_hex		(x,	1);
	create_insn	(x=0X43EE029C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE02A7);
	op_hex		(x,	1);
	create_insn	(x=0X43EE02A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE02B4);
	op_hex		(x,	1);
	create_insn	(x=0X43EE02B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE02C1);
	op_hex		(x,	1);
	create_insn	(x=0X43EE02C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE02CE);
	op_hex		(x,	1);
	create_insn	(x=0X43EE02D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE02DB);
	op_hex		(x,	1);
	create_insn	(x=0X43EE02DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE02E8);
	op_hex		(x,	1);
	create_insn	(x=0X43EE02EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE02F5);
	op_hex		(x,	1);
	create_insn	(x=0X43EE02F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0302);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0304);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE030F);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0311);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE031C);
	op_hex		(x,	1);
	create_insn	(x=0X43EE031E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0329);
	op_hex		(x,	1);
	create_insn	(x=0X43EE032B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0336);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0338);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0343);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0345);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0350);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0352);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE035D);
	op_hex		(x,	1);
	create_insn	(x=0X43EE035F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE036A);
	op_hex		(x,	1);
	create_insn	(x=0X43EE036C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0377);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0379);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0384);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0386);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0391);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0393);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE039E);
	op_hex		(x,	1);
	create_insn	(x=0X43EE03A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE03AB);
	op_hex		(x,	1);
	create_insn	(x=0X43EE03AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE03B8);
	op_hex		(x,	1);
	create_insn	(x=0X43EE03BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE03C5);
	op_hex		(x,	1);
	create_insn	(x=0X43EE03C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE03D2);
	op_hex		(x,	1);
	create_insn	(x=0X43EE03D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE03DF);
	op_hex		(x,	1);
	create_insn	(x=0X43EE03E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE03EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE03F0);
	op_hex		(x,	1);
	create_insn	(x=0X43EE03F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE03FD);
	op_hex		(x,	1);
	create_insn	(x=0X43EE03FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0408);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE0411);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE041C);
	op_stkvar	(x,	1);
	create_insn	(0X43EE0427);
	create_insn	(x=0X43EE042E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE0441);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE044A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE044F);
	op_hex		(x,	1);
	set_cmt	(0X43EE0459,	"_DWORD",	0);
	create_insn	(x=0X43EE045A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EE0463,	"_DWORD",	0);
	create_insn	(x=0X43EE0466);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0469);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE0478);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0486);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE048A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE0492);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EE049E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE04A9);
	op_stkvar	(x,	1);
	create_insn	(0X43EE04B4);
	create_insn	(x=0X43EE04BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE04D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE04DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE04DF);
	op_hex		(x,	1);
	create_insn	(x=0X43EE04E9);
	op_stkvar	(x,	1);
	set_cmt	(0X43EE04F2,	"_DWORD",	0);
	set_cmt	(0X43EE04F3,	"_DWORD",	0);
	create_insn	(x=0X43EE04F6);
	op_hex		(x,	1);
	create_insn	(x=0X43EE04F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EE0506);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EE0519);
	create_insn	(x=0X43EE051B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43EE0527,	0X9);
	set_cmt	(0X43EE0530,	"size",	0);
	create_insn	(0X43EE0530);
	create_insn	(x=0X43EE0551);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0563);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0582);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE059B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE05BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE05D3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE05F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE060B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE062A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE064F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0665);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0681);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE06A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE06BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE06DB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE06F7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0716);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0732);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0751);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE076D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE078C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE07A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE07C7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE07E3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0802);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0819);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EE081E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE083D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0859);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0894);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE08B3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE08CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE08EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0912);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0928);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE094C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0962);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0986);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE099C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE09C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE09D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE09FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0A10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0A34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0A4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0A6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0A84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0AA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0ABE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0AE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0AF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0B1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0B32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0B56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0B6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0B90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0BA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0BCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0BE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0C04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0C1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0C33);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0C5F);
	op_hex		(x,	1);
	create_insn	(x=0X43EE0C6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0C8D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0CA3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0CC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0CDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0CFB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0D11);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0D33);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0D48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0D69);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0D7F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0DA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0DB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0DD7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0DED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0E0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0E24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0E46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0E5B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0E7F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0E95);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0EB9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0ECF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0EF3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0F09);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0F2D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0F43);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0F67);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0F7D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0FA1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0FB7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0FDB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE0FF1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1015);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE102B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE104F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1065);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1089);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE109F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE10C3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE10D9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE10FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1113);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1137);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE114D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1171);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1187);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE11AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE11C1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE11E5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE11FB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1214);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1240);
	op_hex		(x,	1);
	create_insn	(x=0X43EE124D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE126E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1284);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE12A5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE12BB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE12DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE12F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1313);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1329);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE134A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1360);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1384);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE139A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE13BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE13D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE13F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE140E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1432);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1448);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE146C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1482);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE14A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE14BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE14E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE14F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE151B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1530);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1554);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE156A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE158E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE15A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE15C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE15DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1602);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1618);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE163D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1652);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1676);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE168C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE16B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE16C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE16EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1700);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1724);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE173A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE175E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1774);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1798);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE17AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE17D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE17E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE180C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1822);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1846);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE185C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1875);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE18A1);
	op_hex		(x,	1);
	create_insn	(x=0X43EE18AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE18CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE18E5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1906);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE191C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE193D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1953);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1974);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE198A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE19AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE19C1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE19E5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE19FB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1A1F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1A35);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1A59);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1A6F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1A93);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1AA9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1ACD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1AE3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1B07);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1B1D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1B41);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1B57);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1B7B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1B91);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1BB5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1BCB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1BEF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1C05);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1C29);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1C3F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1C63);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1C79);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1C9D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1CB3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1CD7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1CED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1D12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1D27);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1D4B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1D61);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1D85);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1D9B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1DBF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1DD5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1DF9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1E0F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1E34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1E49);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1E62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1E8E);
	op_hex		(x,	1);
	create_insn	(x=0X43EE1E9B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1EBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1ED2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1EF3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1F09);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1F2D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1F43);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1F67);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1F7D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1FA1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1FB7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1FDB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE1FF1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2015);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE202B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE204F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2065);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2089);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE209F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE20C3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE20D9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE20FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2113);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2137);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE214D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2171);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2187);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE21AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE21C1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE21E5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE21FB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE221F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2235);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2259);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE226F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2293);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE22A9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE22CD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE22E3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2307);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE231D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2341);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2357);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE237B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2391);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE23AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE23D6);
	op_hex		(x,	1);
	create_insn	(x=0X43EE23E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2404);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE241A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE243B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2451);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2472);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2488);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE24A9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE24BF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE24E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE24F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE251A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2530);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2554);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE256A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE258E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE25A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE25C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE25DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2602);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2618);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE263C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2652);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2676);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE268C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE26B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE26C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE26EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2700);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2724);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE273A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE275E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2774);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2798);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE27AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE27D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE27E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE280C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2822);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2846);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE285C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2880);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2896);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE28BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE28D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE28F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE290A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2923);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE294F);
	op_hex		(x,	1);
	create_insn	(x=0X43EE295C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE297D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2993);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE29B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE29CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE29EB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2A01);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2A22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2A38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2A59);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2A6F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2A93);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2AAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2ACD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2AE3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2B07);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2B1D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2B41);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2B57);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2B7B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2B91);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2BB5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2BCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2BEF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2C05);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2C29);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2C3F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2C63);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2C79);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2C9D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2CB3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2CD7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2CED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2D11);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2D27);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2D4B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2D61);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2D85);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2D9B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2DBF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2DD5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2DF9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2E0F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2E33);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2E49);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2E6D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2E83);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2E9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2EC8);
	op_hex		(x,	1);
	create_insn	(x=0X43EE2ED5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2EF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2F0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2F2D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2F43);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2F64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2F7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2F9B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2FB1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2FD5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE2FEB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE300F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3025);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3049);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE305F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3083);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3099);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE30BD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE30D3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE30F7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE310D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3131);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3147);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE316B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3181);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE31A5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE31BB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE31DF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE31F5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3219);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE322F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3253);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3269);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE328D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE32A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE32C7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE32DD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3301);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3317);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE333B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3351);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3375);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE338B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE33A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE33D0);
	op_hex		(x,	1);
	create_insn	(x=0X43EE33DD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE33FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3414);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3435);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE344B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE346C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3482);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE34A3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE34B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE34DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE34F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3514);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE352A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE354E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3564);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3588);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE359E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE35C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE35D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE35FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3612);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3636);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE364C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3670);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3686);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE36AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE36C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE36E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE36FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE371E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3734);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3758);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE376E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3792);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE37A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE37CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE37E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3806);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE381C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3840);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3856);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE387A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3890);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE38B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE38CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_12(void) {
        auto x;
#define id x

	create_insn	(x=0X43EE38EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3904);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3928);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE393E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3962);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3978);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3991);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE39BD);
	op_hex		(x,	1);
	create_insn	(x=0X43EE39CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE39EB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3A01);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3A22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3A38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3A59);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3A6F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3A91);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3AA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3AC7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3ADD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3AFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3B14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3B38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3B4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3B72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3B88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3BAD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3BC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3BE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3BFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3C20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3C36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3C5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3C70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3C94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3CAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3CCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3CE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3D08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3D1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3D42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3D58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3D7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3D92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3DB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3DCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3DF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3E06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3E2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3E40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3E64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3E7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3E9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3EB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3ECD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3EF9);
	op_hex		(x,	1);
	create_insn	(x=0X43EE3F06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3F27);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3F3D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3F5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3F74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3F95);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3FAB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3FCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE3FE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4006);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE401C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4040);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4056);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE407A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4090);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE40B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE40CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE40EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4104);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4128);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE413E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4162);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4178);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE419C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE41B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE41D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE41EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4210);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4226);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE424A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4260);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4285);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE429A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE42BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE42D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE42F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE430E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4332);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4348);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE436C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4382);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE43A7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE43BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE43E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE43F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE441A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4430);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4454);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE446A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE448E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE44A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE44BD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE44E9);
	op_hex		(x,	1);
	create_insn	(x=0X43EE44F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4517);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE452D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE454E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4564);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4585);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE459B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE45BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE45D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE45F3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4609);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE462A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4640);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4664);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE467A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE469E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE46B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE46D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE46EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4712);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4728);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE474C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4762);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4786);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE479C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE47C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE47D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE47FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4810);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4834);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE484A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE486E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4884);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE48A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE48BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE48E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE48F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE491C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4932);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4956);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE496C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4990);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE49A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE49CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE49E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4A04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4A1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4A3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4A54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4A79);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4A8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4AB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4AC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4AE1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4B0D);
	op_hex		(x,	1);
	create_insn	(x=0X43EE4B1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4B3B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4B51);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4B72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4B88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4BA9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4BBF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4BE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4BF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4C17);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4C2D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4C4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4C64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4C88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4C9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4CC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4CD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4CFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4D12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4D36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4D4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4D70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4D86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4DAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4DC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4DE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4DFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4E1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4E34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4E58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4E6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4E92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4EA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4ECC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4EE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4F06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4F1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4F40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4F56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4F7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4F90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4FB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4FCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE4FEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5004);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5028);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE503E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5062);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5078);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5091);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE50BD);
	op_hex		(x,	1);
	create_insn	(x=0X43EE50D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE50F1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE510A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE512B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5145);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5165);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE517E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE51A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE51BB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE51DF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE51F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE521C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5235);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5259);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5272);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5296);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE52AF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE52D3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE52EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5310);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5329);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE534D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5366);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE538A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE53A3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE53BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE53EB);
	op_hex		(x,	1);
	create_insn	(x=0X43EE53F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5419);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE542F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5450);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5466);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5487);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE549D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE54BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE54D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE54F5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE550B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE552F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5545);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5569);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE557F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE55A3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE55B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE55DD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE55F3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5617);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE562D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5651);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5667);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE568B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE56A1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE56C5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE56DB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE56FF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5715);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5739);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE574F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5773);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5789);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE57AD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE57C3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE57E7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE57FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5821);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5838);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE585B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5871);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5895);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE58AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE58CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE58E5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5909);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE591F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5943);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE595A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE597D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5993);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE59B7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE59CD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE59F1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5A07);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5A2B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5A41);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5A5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5A86);
	op_hex		(x,	1);
	create_insn	(x=0X43EE5A93);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5AB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5ACA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5AEB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5B01);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5B22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5B38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5B5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5B72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5B96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5BAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5BD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5BE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5C0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5C20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5C44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5C5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5C7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5C94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5CB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5CCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5CF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5D08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5D2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5D42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5D66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5D7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5DA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5DB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5DDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5DF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5E14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5E2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5E4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5E64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5E88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5E9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5EC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5ED8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5EFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5F12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5F36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5F4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5F70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5F86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5FAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5FC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5FE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE5FFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE601E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6035);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE604D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6079);
	op_hex		(x,	1);
	create_insn	(x=0X43EE608C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE60AD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE60C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE60EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6103);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6127);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6140);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6165);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE617D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE61A1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE61BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE61DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE61F7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE621B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6234);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6258);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6271);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6295);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE62AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE62D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE62EB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE630F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6328);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE634C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6365);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE637E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE63AD);
	op_hex		(x,	1);
	create_insn	(x=0X43EE63BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE63DB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE63F1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6412);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6428);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6449);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE645F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6480);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6496);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE64B7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE64CD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE64EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6504);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6525);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE653B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE655C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6572);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6596);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE65AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE65D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE65E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE660A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6644);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE665A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE667E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6694);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE66B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE66CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE66F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6708);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE672C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6742);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6766);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE677C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE67A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE67B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE67DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE67F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6814);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE682A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE684F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6864);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6888);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE689E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE68C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE68D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE68FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6912);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6936);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE694C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6971);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6986);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE69AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE69C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE69E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE69FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6A1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6A34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6A58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6A6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6A92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6AA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6ACC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6AE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6B06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6B1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6B40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6B56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6B7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6B90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6BB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6BCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6BEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6C04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6C1D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6C49);
	op_hex		(x,	1);
	create_insn	(x=0X43EE6C56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6C77);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6C8D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6CAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6CC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6CE5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6CFB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6D1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6D32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6D53);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6D69);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6D8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6DA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6DC1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6DD7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6DF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6E0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6E32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6E48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6E6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6E82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6EA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6EBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6EE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6EF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6F1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6F30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6F54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6F6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6F8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6FA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6FC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE6FDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7002);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7018);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE703D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7052);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7076);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE708C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE70B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE70C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE70EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7100);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7124);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE713A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE715F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7174);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7198);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE71AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE71D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE71E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE720C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7222);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7246);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE725C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7275);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE72A1);
	op_hex		(x,	1);
	create_insn	(x=0X43EE72B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE72D5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE72EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7312);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE732B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE734F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7368);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE738C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE73A5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE73C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE73E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7406);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE741F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7438);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7467);
	op_hex		(x,	1);
	create_insn	(x=0X43EE7474);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7495);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE74AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE74CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE74E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7503);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7519);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE753A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7550);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7571);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7587);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE75AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE75C1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE75E5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE75FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE761F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7635);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7659);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE766F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7693);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE76A9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE76CD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE76E3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7707);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE771E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7741);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7757);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE777B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7791);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE77B5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE77CB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE77EF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7805);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7829);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE783F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7863);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7879);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE789D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE78B3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE78D7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE78ED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7911);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7927);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE794B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7961);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7985);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE799B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE79BF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE79D5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE79EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7A1A);
	op_hex		(x,	1);
	create_insn	(x=0X43EE7A27);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7A48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7A5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7A7F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7A95);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7AB9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7ACF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7AF3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7B09);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7B2D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7B43);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7B67);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7B7D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7BA1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7BB7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7BDB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7BF1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7C15);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7C2B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7C4F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7C65);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7C89);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7C9F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7CC3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7CD9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7CFD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7D13);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7D37);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7D4D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7D66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7D92);
	op_hex		(x,	1);
	create_insn	(x=0X43EE7D9F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7DC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7DD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7DF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7E0D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7E2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7E44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7E65);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7E7B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7E9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7EB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7ED3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7EE9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7F0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7F23);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7F47);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7F5D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7F81);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7F97);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7FBB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7FD1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE7FF5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE800B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE802F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8045);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8069);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE807F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE80A3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE80B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE80DD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE80F3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8117);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE812D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8151);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8167);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE818B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE81A1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE81C5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE81DB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE81FF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8215);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8239);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE824F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8273);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8289);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE82AD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE82C3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE82E7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE82FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8321);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8337);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE835B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8371);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8395);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE83AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE83CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE83E5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE83FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE842A);
	op_hex		(x,	1);
	create_insn	(x=0X43EE8437);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8458);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE846E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE848F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE84A5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE84C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE84DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE84FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8513);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8534);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE854A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE856B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8581);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE85A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE85B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE85DD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE85F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8616);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE862C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8650);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8666);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE868A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE86A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE86C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE86DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE86FF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8714);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8738);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE874E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8772);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8788);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE87AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE87C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE87E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE87FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8820);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8836);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE885A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8870);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8894);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE88AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE88CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE88E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8908);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE891E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8942);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8958);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE897C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8992);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE89B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE89CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE89F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8A06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8A2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8A40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8A64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8A7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8A9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8AB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8AD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8AEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8B12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8B28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8B4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8B62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8B86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8B9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8BC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8BD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8BFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8C10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8C29);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8C55);
	op_hex		(x,	1);
	create_insn	(x=0X43EE8C62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8C83);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8C99);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8CBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8CD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8CF1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8D07);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8D28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8D3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8D5F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8D75);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8D96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8DAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8DD1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8DE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8E0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8E20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8E44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8E5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8E7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8E94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8EB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8ECE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8EF3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8F08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8F2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8F42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8F66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8F7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8FA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8FB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8FDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE8FF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9014);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE902A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE904E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9064);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9088);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE909E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE90C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE90D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE90FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9112);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9136);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE914C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9170);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9186);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE91AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE91C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE91E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE91FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE921E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9234);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9258);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE926E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9287);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE92B3);
	op_hex		(x,	1);
	create_insn	(x=0X43EE92C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE92E1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE92F7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9318);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE932E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE934F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9365);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9389);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE939F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE93C3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE93D9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE93FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9413);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9437);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE944D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9471);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9487);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE94AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE94C1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE94E5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE94FB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE951F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9535);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9559);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE956F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9593);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE95A9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE95C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE95EE);
	op_hex		(x,	1);
	create_insn	(x=0X43EE95FB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE961C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9632);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9653);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9669);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE968A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE96A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE96C1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE96D7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE96F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE970E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE972F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9745);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9769);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE977F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE97A3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE97B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE97DD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE97F3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9817);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE982D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9851);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9867);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE988B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE98A1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE98C5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE98DB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE98FF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9915);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9939);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE994F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9973);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9989);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE99AD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE99C3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE99E7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE99FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9A21);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9A37);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9A5B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9A71);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9A95);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9AAB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9ACF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9AE5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9B09);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9B1F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9B43);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9B59);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9B7D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9B93);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9BB7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9BCD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9BF1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9C07);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9C20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9C4C);
	op_hex		(x,	1);
	create_insn	(x=0X43EE9C59);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9C7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9C91);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9CB1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9CC7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9CE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9CFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9D1F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9D35);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9D56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9D6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9D90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9DA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9DCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9DE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9E04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9E1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9E3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9E54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9E78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9E8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9EB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9EC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9EEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9F02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9F26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9F3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9F60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9F76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9F9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9FB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9FD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EE9FEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA00E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA024);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA048);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA05E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA082);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA098);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA0B1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA0DD);
	op_hex		(x,	1);
	create_insn	(x=0X43EEA0EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA10B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA121);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA142);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA158);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA179);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA18F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA1B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA1C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA1E7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA1FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA21E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA234);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA258);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA26E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA292);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA2A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA2CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA2E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA306);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA31C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA340);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA357);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA37A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA390);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA3B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA3CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA3EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA404);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA428);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA43E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA462);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA479);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA49C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA4B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA4D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA4EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA510);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA526);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA54A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA560);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA584);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA59A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA5BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA5D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA5F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA60E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA632);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA648);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA661);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA68D);
	op_hex		(x,	1);
	create_insn	(x=0X43EEA69A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA6BB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA6D1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA6F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA708);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA729);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA73F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA760);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA776);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA797);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA7AD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA7D1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA7E7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA80B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA821);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA845);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA85B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA87F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA895);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA8B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA8CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA8F3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA909);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA92D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA943);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA967);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA97D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA9A1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA9B7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA9DB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEA9F1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAA15);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAA2B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAA4F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAA65);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAA89);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAA9F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAAC3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAAD9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAAF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAB1E);
	op_hex		(x,	1);
	create_insn	(x=0X43EEAB2B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAB4D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAB62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAB83);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAB99);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEABBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEABD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEABF1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAC07);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAC2B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAC41);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAC66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAC7B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAC9F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEACB5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEACD9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEACEF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAD13);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAD29);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAD4D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAD63);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAD87);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAD9D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEADC1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEADD7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEADFB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAE11);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAE35);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAE4B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAE6F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAE85);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAEA9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAEBF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAEE3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAEF9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAF1D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAF33);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAF57);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAF6D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAF91);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAFA7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAFCB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEAFE1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB005);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB01B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB03F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB055);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB079);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB08F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB0B3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB0C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB0ED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB103);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB127);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB13D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB161);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB177);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB19B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB1B1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB1CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB1F6);
	op_hex		(x,	1);
	create_insn	(x=0X43EEB203);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB224);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB23A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB25B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB271);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB292);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB2A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB2C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB2DF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB300);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB316);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB338);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB34D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB36E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB384);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB3A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB3BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB3E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB3F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB41C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB432);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB457);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB46C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB490);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB4A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB4CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB4E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB504);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB51A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB53E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB554);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB578);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB58E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB5B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB5C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB5EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB602);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB626);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB63C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB660);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB676);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB69A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB6B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB6D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB6EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB70E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB724);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB748);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB75E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB782);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB798);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB7BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB7D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB7EB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB817);
	op_hex		(x,	1);
	create_insn	(x=0X43EEB824);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB845);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB85B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB87C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB892);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB8B3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB8C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB8ED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB903);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB927);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB93D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB961);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB977);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB99B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB9B1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB9D5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEB9EB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBA0F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBA25);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBA49);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBA5F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBA83);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBA99);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBABD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBAD3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBAF7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBB0D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBB32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBB47);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBB6B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBB81);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBBA5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBBBB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBBDF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBBF5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBC19);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBC2F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBC54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBC69);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBC8D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBCA3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBCC7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBCDD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBD01);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBD17);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBD3B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBD51);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBD75);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBD8B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBDA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBDD0);
	op_hex		(x,	1);
	create_insn	(x=0X43EEBDDD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBDFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBE14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBE35);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBE4B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBE6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBE82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBEA3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBEB9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBEDD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBEF3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBF17);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBF2D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBF51);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBF67);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBF8B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBFA1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBFC5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBFDB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEBFFF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC015);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC039);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC04F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC073);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC089);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC0AD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC0C3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC0E7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC0FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC121);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC137);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC15B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC171);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC195);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC1AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC1CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC1E5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC209);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC21F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC243);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC259);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC27D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC293);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC2B7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC2CD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC2F1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC307);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC32C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC341);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC365);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC37B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC394);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC3C0);
	op_hex		(x,	1);
	create_insn	(x=0X43EEC3D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC434);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC458);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC46E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC492);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC4A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC4CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC4E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EEC50B);
	create_insn	(x=0X43EEC50E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC532);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC548);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC56C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC582);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC5A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC5BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EEC5E5);
	create_insn	(x=0X43EEC5E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC60C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC622);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC646);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC65C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC680);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC696);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EEC6BF);
	create_insn	(x=0X43EEC6DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC6FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC714);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC738);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC74E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC772);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC788);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EEC7B1);
	create_insn	(x=0X43EEC7B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC7D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC7EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC812);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC828);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC84C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC862);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC887);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC89C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC8BD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC8D3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC8F7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC90D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC92E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC944);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC968);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC97E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC99F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC9B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC9D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEC9EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECA0D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECA23);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECA44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECA5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECA7B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECA91);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECAB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECAC9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECAE9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECAFF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECB20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECB36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECB57);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECB6D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECB91);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECBA7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECBCB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECBE1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECC05);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECC1B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECC3F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECC55);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECC79);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECC8F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECCB3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECCC9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECCED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECD03);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECD27);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECD3D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECD61);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECD77);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECD9B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECDB1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECDD5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECDEB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECE0F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECE25);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECE46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECE5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECE80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECE96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECEBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECED0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECEF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECF0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECF2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECF44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECF68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECF7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECF97);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EECFC6);
	op_hex		(x,	1);
	create_insn	(x=0X43EECFE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EED002);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EED02A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EED03B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EED086);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EED0A1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EED0B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EED0C7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EED1B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EED245);
	op_hex		(x,	1);
	create_insn	(x=0X43EED317);
	op_hex		(x,	1);
	create_insn	(x=0X43EED34E);
	op_hex		(x,	1);
	create_insn	(x=0X43EED364);
	op_hex		(x,	1);
	create_insn	(x=0X43EED37A);
	op_hex		(x,	1);
	create_insn	(x=0X43EED390);
	op_hex		(x,	1);
	create_insn	(x=0X43EED3A6);
	op_hex		(x,	1);
	make_array	(0X43EED493,	0XD);
	create_insn	(0X43EED4A0);
	set_name	(0X43EED4A0,	"OneTap::Features::SkinChanger::Parse::Gloves");
	create_insn	(x=0X43EED4A8);
	op_hex		(x,	1);
	set_cmt	(0X43EED4AB,	"switch 7 cases ",	0);
	set_cmt	(0X43EED4B6,	"switch jump",	0);
	create_insn	(x=0X43EED4B6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EED4BD,	"jumptable 43EED4B6 case 1",	1);
	create_insn	(0X43EED4BD);
	create_insn	(x=0X43EED4CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED4D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED4D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED4E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED4EA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED4F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED4FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED500);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED507);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED50E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED520);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED524);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED527);
	op_hex		(x,	1);
	create_insn	(x=0X43EED52A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED52E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED53B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED53F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED544);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED550);
	op_stkvar	(x,	1);
	set_cmt	(0X43EED563,	"jumptable 43EED4B6 case 2",	1);
	create_insn	(0X43EED563);
	create_insn	(x=0X43EED570);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED57C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED57F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED58C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED590);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED597);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED59E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED5A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED5A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED5B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED5B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED5C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED5C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED5C9);
	op_hex		(x,	1);
	create_insn	(x=0X43EED5CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED5D0);
	op_stkvar	(x,	1);
	set_cmt	(0X43EED5E2,	"jumptable 43EED4B6 case 3",	1);
	create_insn	(0X43EED5E2);
	create_insn	(x=0X43EED5EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED5FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED5FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED60B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED60F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED616);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED61D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED623);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED627);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED62E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED635);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED640);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED644);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED647);
	op_hex		(x,	1);
	create_insn	(x=0X43EED64A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED64E);
	op_stkvar	(x,	1);
	set_cmt	(0X43EED660,	"jumptable 43EED4B6 case 4",	1);
	create_insn	(0X43EED660);
	create_insn	(x=0X43EED66D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED679);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED67C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED689);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED68D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED69A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED69E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED6A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED6AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED6B4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED6BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED6C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED6CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED6CD);
	op_hex		(x,	1);
	create_insn	(x=0X43EED6D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED6D4);
	op_stkvar	(x,	1);
	set_cmt	(0X43EED6E6,	"jumptable 43EED4B6 case 5",	1);
	create_insn	(0X43EED6E6);
	create_insn	(x=0X43EED6F3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED6FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED702);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED70F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED713);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED721);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED725);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED729);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED730);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED737);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED742);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED746);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED749);
	op_hex		(x,	1);
	create_insn	(x=0X43EED74C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED750);
	op_stkvar	(x,	1);
	set_cmt	(0X43EED762,	"jumptable 43EED4B6 case 6",	1);
	create_insn	(0X43EED762);
	create_insn	(x=0X43EED76F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED77B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED77E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED78B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED78F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED79D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED7A1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED7A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED7AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED7B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED7C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED7C7);
	op_hex		(x,	1);
	create_insn	(x=0X43EED7CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED7CE);
	op_stkvar	(x,	1);
	set_cmt	(0X43EED7E0,	"jumptable 43EED4B6 case 7",	1);
	create_insn	(0X43EED7E0);
	create_insn	(x=0X43EED7ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED7F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED7FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED809);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED80D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED81B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED81F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED826);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED82C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED830);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED837);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED83E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED850);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED854);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EED857);
	op_hex		(x,	1);
	create_insn	(x=0X43EED85A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EED85E);
	op_stkvar	(x,	1);
	set_cmt	(0X43EED870,	"jumptable 43EED4B6 default case",	1);
	create_insn	(0X43EED870);
	set_name	(0X43EED870,	"def_43EED4B6");
	make_array	(0X43EED879,	0X3);
	set_cmt	(0X43EED87C,	"jump table for switch statement",	0);
	create_dword	(x=0X43EED87C);
	make_array	(x,	0X7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EED87C,	"jpt_43EED4B6");
	make_array	(0X43EED898,	0X8);
	create_insn	(0X43EED8A0);
	set_cmt	(0X43EED8A5,	"switch 7 cases ",	0);
	set_cmt	(0X43EED8AB,	"switch jump",	0);
	create_insn	(x=0X43EED8AB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EED8B2,	"jumptable 43EED8AB case 1",	1);
	create_insn	(0X43EED8B2);
	set_cmt	(0X43EED8BA,	"jumptable 43EED8AB case 2",	1);
	create_insn	(0X43EED8BA);
	set_cmt	(0X43EED8C2,	"jumptable 43EED8AB case 3",	1);
	create_insn	(0X43EED8C2);
	set_cmt	(0X43EED8CA,	"jumptable 43EED8AB case 4",	1);
	create_insn	(0X43EED8CA);
	set_cmt	(0X43EED8D2,	"jumptable 43EED8AB case 5",	1);
	create_insn	(0X43EED8D2);
	set_cmt	(0X43EED8DA,	"jumptable 43EED8AB case 6",	1);
	create_insn	(0X43EED8DA);
	set_cmt	(0X43EED8E2,	"jumptable 43EED8AB case 7",	1);
	create_insn	(0X43EED8E2);
	set_cmt	(0X43EED8EA,	"jumptable 43EED8AB default case",	1);
	create_insn	(0X43EED8EA);
	set_name	(0X43EED8EA,	"def_43EED8AB");
	set_cmt	(0X43EED8F0,	"jump table for switch statement",	0);
	create_dword	(x=0X43EED8F0);
	make_array	(x,	0X7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EED8F0,	"jpt_43EED8AB");
	make_array	(0X43EED90C,	0X4);
	set_cmt	(0X43EED910,	"switch 14 cases ",	0);
	create_insn	(x=0X43EED910);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EED917,	"jumptable 43EED910 case 0",	1);
	create_insn	(0X43EED917);
	set_cmt	(0X43EED91D,	"jumptable 43EED910 case 1",	1);
	create_insn	(0X43EED91D);
	set_cmt	(0X43EED923,	"jumptable 43EED910 case 2",	1);
	create_insn	(0X43EED923);
	set_cmt	(0X43EED929,	"jumptable 43EED910 case 3",	1);
	create_insn	(0X43EED929);
	set_cmt	(0X43EED92F,	"jumptable 43EED910 case 4",	1);
	create_insn	(0X43EED92F);
	set_cmt	(0X43EED935,	"jumptable 43EED910 case 5",	1);
	create_insn	(0X43EED935);
	set_cmt	(0X43EED93B,	"jumptable 43EED910 case 6",	1);
	create_insn	(0X43EED93B);
	set_cmt	(0X43EED941,	"jumptable 43EED910 case 7",	1);
	create_insn	(0X43EED941);
	set_cmt	(0X43EED947,	"jumptable 43EED910 case 8",	1);
	create_insn	(0X43EED947);
	set_cmt	(0X43EED94D,	"jumptable 43EED910 case 9",	1);
	create_insn	(0X43EED94D);
	set_cmt	(0X43EED953,	"jumptable 43EED910 case 10",	1);
	create_insn	(0X43EED953);
	set_cmt	(0X43EED959,	"jumptable 43EED910 case 11",	1);
	create_insn	(0X43EED959);
	set_cmt	(0X43EED95F,	"jumptable 43EED910 case 12",	1);
	create_insn	(0X43EED95F);
	set_cmt	(0X43EED965,	"jumptable 43EED910 case 13",	1);
	create_insn	(0X43EED965);
	set_cmt	(0X43EED96C,	"jump table for switch statement",	0);
	create_dword	(x=0X43EED96C);
	make_array	(x,	0XE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EED96C,	"jpt_43EED910");
	make_array	(0X43EED9A4,	0XC);
	create_insn	(0X43EED9B0);
	create_insn	(x=0X43EED9B3);
	op_hex		(x,	1);
	create_insn	(x=0X43EED9B9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEDA17);
	op_hex		(x,	1);
	make_array	(0X43EEDA23,	0XD);
	create_insn	(0X43EEDA30);
	create_insn	(x=0X43EEDA33);
	op_hex		(x,	1);
	create_insn	(0X43EEDAEE);
	create_insn	(0X43EEDB03);
	create_insn	(x=0X43EEDBA7);
	op_hex		(x,	1);
	create_insn	(x=0X43EEDBDE);
	op_hex		(x,	1);
	create_insn	(0X43EEDC11);
	create_insn	(x=0X43EEDC19);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEDC61);
	op_hex		(x,	1);
	create_insn	(x=0X43EEDCB1);
	op_hex		(x,	1);
	create_insn	(x=0X43EEDCC5);
	op_hex		(x,	1);
	create_insn	(x=0X43EEDCD3);
	op_hex		(x,	1);
	create_insn	(x=0X43EEDCE8);
	op_hex		(x,	1);
	create_insn	(0X43EEDD15);
	create_insn	(x=0X43EEDD28);
	op_hex		(x,	1);
	create_insn	(0X43EEDD3A);
	create_insn	(x=0X43EEDD41);
	op_hex		(x,	1);
	create_insn	(0X43EEDD50);
	set_cmt	(0X43EEDD70,	"Size",	0);
	create_insn	(x=0X43EEDD76);
	op_hex		(x,	1);
	create_insn	(x=0X43EEDD84);
	op_hex		(x,	1);
	create_insn	(0X43EEDD8C);
	set_cmt	(0X43EEDD90,	"Size",	0);
	create_insn	(x=0X43EEDD96);
	op_hex		(x,	1);
	create_insn	(0X43EEDD9D);
	create_insn	(x=0X43EEDDBC);
	op_hex		(x,	1);
	create_insn	(x=0X43EEDDF0);
	op_hex		(x,	1);
	create_insn	(0X43EEDDF5);
	create_insn	(x=0X43EEDE02);
	op_hex		(x,	1);
	create_insn	(x=0X43EEDE4E);
	op_hex		(x,	1);
	create_insn	(0X43EEDE91);
	create_insn	(x=0X43EEDEC4);
	op_hex		(x,	1);
	create_insn	(x=0X43EEDEF3);
	op_hex		(x,	1);
	create_insn	(0X43EEDF1C);
	create_insn	(x=0X43EEDF24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EEDF47);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EEDF58);
	make_array	(0X43EEDF63,	0XD);
	create_insn	(0X43EEDF70);
	create_insn	(x=0X43EEDF75);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43EEDF87,	0X9);
	set_cmt	(0X43EEDF90,	"switch 6 cases ",	0);
	create_insn	(0X43EEDF90);
	set_cmt	(0X43EEDF96,	"switch jump",	0);
	create_insn	(x=0X43EEDF96);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EEDF9D,	"jumptable 43EEDF96 case 1",	1);
	create_insn	(0X43EEDF9D);
	set_cmt	(0X43EEDFA3,	"jumptable 43EEDF96 cases 2,3",	1);
	create_insn	(0X43EEDFA3);
	set_cmt	(0X43EEDFA9,	"jumptable 43EEDF96 cases 4-6",	1);
	create_insn	(0X43EEDFA9);
	set_cmt	(0X43EEDFAF,	"jumptable 43EEDF96 default case",	1);
	create_insn	(0X43EEDFAF);
	set_name	(0X43EEDFAF,	"def_43EEDF96");
	make_array	(0X43EEDFB2,	0X2);
	set_cmt	(0X43EEDFB4,	"jump table for switch statement",	0);
	create_dword	(x=0X43EEDFB4);
	make_array	(x,	0X6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EEDFB4,	"jpt_43EEDF96");
	make_array	(0X43EEDFCC,	0X4);
	create_insn	(0X43EEDFD0);
	create_insn	(0X43EEDFE2);
	make_array	(0X43EEDFE5,	0XB);
	create_insn	(0X43EEDFF0);
	make_array	(0X43EEDFFE,	0X2);
	create_insn	(0X43EEE000);
	make_array	(0X43EEE026,	0XA);
	create_insn	(0X43EEE030);
	create_insn	(0X43EEE07A);
	create_insn	(0X43EEE080);
	create_insn	(x=0X43EEE08C);
	op_hex		(x,	1);
	make_array	(0X43EEE0B8,	0X8);
	create_insn	(0X43EEE0C0);
	create_insn	(x=0X43EEE0C3);
	op_hex		(x,	1);
	create_insn	(x=0X43EEE0D0);
	op_hex		(x,	1);
	create_insn	(x=0X43EEE0D9);
	op_hex		(x,	1);
	create_insn	(x=0X43EEE0EA);
	op_hex		(x,	1);
	create_insn	(x=0X43EEE0ED);
	op_hex		(x,	1);
	create_insn	(x=0X43EEE0F6);
	op_hex		(x,	1);
	create_insn	(0X43EEE1A0);
	create_insn	(0X43EEE1EA);
	create_insn	(0X43EEE246);
	make_array	(0X43EEE262,	0XE);
	create_insn	(0X43EEE270);
	create_insn	(x=0X43EEE273);
	op_hex		(x,	1);
	create_insn	(x=0X43EEE276);
	op_hex		(x,	1);
	create_insn	(x=0X43EEE2FB);
	op_hex		(x,	1);
	create_insn	(x=0X43EEE306);
	op_hex		(x,	1);
	create_insn	(x=0X43EEE313);
	op_hex		(x,	1);
	create_insn	(0X43EEE418);
	create_insn	(0X43EEE467);
	create_insn	(0X43EEE4C8);
	make_array	(0X43EEE4E8,	0X8);
	create_insn	(0X43EEE4F0);
	make_array	(0X43EEE4FA,	0X6);
	create_insn	(0X43EEE500);
	make_array	(0X43EEE517,	0X9);
	create_insn	(0X43EEE520);
	make_array	(0X43EEE5C4,	0XC);
	create_insn	(0X43EEE5D0);
	create_insn	(x=0X43EEE5D3);
	op_hex		(x,	1);
	create_insn	(x=0X43EEE61B);
	op_hex		(x,	1);
	create_insn	(0X43EEE6C3);
	create_insn	(0X43EEE6FA);
	create_insn	(0X43EEE731);
	make_array	(0X43EEEA69,	0X7);
	create_insn	(0X43EEEA70);
	create_insn	(0X43EEEAA0);
	set_cmt	(0X43EEEAA1,	"Size",	0);
	create_insn	(x=0X43EEEAAA);
	op_hex		(x,	1);
	make_array	(0X43EEEAB9,	0X7);
	create_insn	(0X43EEEAC0);
	create_insn	(x=0X43EEEAC3);
	op_hex		(x,	1);
	set_cmt	(0X43EEEAC9,	"Size",	0);
	create_insn	(x=0X43EEEAD5);
	op_hex		(x,	1);
	create_insn	(0X43EEEB4D);
	create_insn	(x=0X43EEEB64);
	op_hex		(x,	1);
	make_array	(0X43EEEB72,	0XE);
	create_insn	(0X43EEEB80);
	make_array	(0X43EEEB91,	0XF);
	create_insn	(0X43EEEBA0);
	set_cmt	(0X43EEEC17,	"Size",	0);
	create_insn	(x=0X43EEEC1E);
	op_hex		(x,	1);
	make_array	(0X43EEEC39,	0X7);
	create_insn	(0X43EEEC40);
	make_array	(0X43EEEC5E,	0X2);
	create_insn	(0X43EEEC60);
	create_insn	(x=0X43EEEC6B);
	op_hex		(x,	1);
	make_array	(0X43EEEC8B,	0X5);
	create_insn	(0X43EEEC90);
	create_insn	(x=0X43EEECA2);
	op_hex		(x,	1);
	create_insn	(0X43EEECD0);
	set_cmt	(0X43EEECDB,	"a9",	0);
	set_cmt	(0X43EEECDC,	"a8",	0);
	set_cmt	(0X43EEECDD,	"a7",	0);
	set_cmt	(0X43EEECDE,	"a6",	0);
	create_insn	(x=0X43EEECDF);
	op_hex		(x,	1);
	set_cmt	(0X43EEECE2,	"a5",	0);
	set_cmt	(0X43EEECE8,	"a4",	0);
	set_cmt	(0X43EEECED,	"a2",	0);
	set_cmt	(0X43EEECF0,	"a3",	0);
	set_cmt	(0X43EEECF3,	"a1",	0);
	create_insn	(0X43EEED00);
	set_cmt	(0X43EEED03,	"a9",	0);
	set_cmt	(0X43EEED0B,	"a8",	0);
	set_cmt	(0X43EEED0E,	"a7",	0);
	set_cmt	(0X43EEED11,	"a6",	0);
	create_insn	(x=0X43EEED14);
	op_hex		(x,	1);
	set_cmt	(0X43EEED17,	"a5",	0);
	set_cmt	(0X43EEED1D,	"a4",	0);
	set_cmt	(0X43EEED22,	"a2",	0);
	set_cmt	(0X43EEED25,	"a3",	0);
	set_cmt	(0X43EEED28,	"a1",	0);
	make_array	(0X43EEED34,	0XC);
	create_insn	(0X43EEED40);
	create_insn	(x=0X43EEED4B);
	op_hex		(x,	1);
	make_array	(0X43EEED6B,	0X5);
	create_insn	(0X43EEED70);
	make_array	(0X43EEED8B,	0X5);
	create_insn	(0X43EEED90);
	create_insn	(x=0X43EEED93);
	op_hex		(x,	1);
	create_insn	(x=0X43EEEDA3);
	op_hex		(x,	1);
	create_insn	(x=0X43EEEDE3);
	op_hex		(x,	1);
	create_insn	(x=0X43EEEDF4);
	op_hex		(x,	1);
	set_cmt	(0X43EEEE18,	"switch 6 cases ",	0);
	set_cmt	(0X43EEEE20,	"switch jump",	0);
	create_insn	(x=0X43EEEE20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EEEE27,	"jumptable 43EEEE20 case 1",	1);
	create_insn	(0X43EEEE27);
	set_cmt	(0X43EEEE2E,	"jumptable 43EEEE20 cases 2,3",	1);
	create_insn	(0X43EEEE2E);
	set_cmt	(0X43EEEE35,	"jumptable 43EEEE20 cases 4-6",	1);
	create_insn	(0X43EEEE35);
	set_cmt	(0X43EEEE3C,	"jumptable 43EEEE20 default case",	1);
	create_insn	(0X43EEEE3C);
	set_name	(0X43EEEE3C,	"def_43EEEE20");
	create_insn	(0X43EEEE62);
	set_cmt	(0X43EEEEA8,	"jump table for switch statement",	0);
	create_dword	(x=0X43EEEEA8);
	make_array	(x,	0X6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EEEEA8,	"jpt_43EEEE20");
	create_insn	(0X43EEEEC0);
	make_array	(0X43EEEECC,	0X4);
	create_insn	(0X43EEEED0);
	make_array	(0X43EEEEDD,	0X3);
	create_insn	(0X43EEEEE0);
	make_array	(0X43EEEEE7,	0X9);
	create_insn	(0X43EEEEF0);
	create_insn	(0X43EEEF80);
	create_insn	(x=0X43EEEF8B);
	op_hex		(x,	1);
	make_array	(0X43EEEFC1,	0XF);
	create_insn	(0X43EEEFD0);
	create_insn	(x=0X43EEEFD3);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF006);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF02E);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF04B);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF08D);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF0AA);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF0EC);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF109);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF136);
	op_hex		(x,	1);
	set_cmt	(0X43EEF168,	"a2",	0);
	set_cmt	(0X43EEF170,	"a1",	0);
	set_cmt	(0X43EEF178,	"a9",	0);
	set_cmt	(0X43EEF179,	"a8",	0);
	set_cmt	(0X43EEF17A,	"a7",	0);
	set_cmt	(0X43EEF17B,	"a6",	0);
	create_insn	(x=0X43EEF17C);
	op_hex		(x,	1);
	set_cmt	(0X43EEF17F,	"a5",	0);
	set_cmt	(0X43EEF192,	"a4",	0);
	set_cmt	(0X43EEF197,	"a3",	0);
	set_cmt	(0X43EEF1B7,	"a2",	0);
	set_cmt	(0X43EEF1BF,	"a1",	0);
	set_cmt	(0X43EEF1C7,	"a9",	0);
	set_cmt	(0X43EEF1C8,	"a8",	0);
	set_cmt	(0X43EEF1C9,	"a7",	0);
	set_cmt	(0X43EEF1CA,	"a6",	0);
	create_insn	(x=0X43EEF1CB);
	op_hex		(x,	1);
	set_cmt	(0X43EEF1CE,	"a5",	0);
	set_cmt	(0X43EEF1E1,	"a4",	0);
	set_cmt	(0X43EEF1E6,	"a3",	0);
	set_cmt	(0X43EEF201,	"a2",	0);
	set_cmt	(0X43EEF209,	"a1",	0);
	set_cmt	(0X43EEF20E,	"a9",	0);
	set_cmt	(0X43EEF20F,	"a8",	0);
	set_cmt	(0X43EEF210,	"a7",	0);
	set_cmt	(0X43EEF211,	"a6",	0);
	create_insn	(x=0X43EEF212);
	op_hex		(x,	1);
	set_cmt	(0X43EEF215,	"a5",	0);
	set_cmt	(0X43EEF220,	"a4",	0);
	set_cmt	(0X43EEF225,	"a3",	0);
	set_cmt	(0X43EEF238,	"a1",	0);
	set_cmt	(0X43EEF240,	"a2",	0);
	set_cmt	(0X43EEF245,	"a9",	0);
	set_cmt	(0X43EEF246,	"a8",	0);
	set_cmt	(0X43EEF247,	"a7",	0);
	set_cmt	(0X43EEF248,	"a6",	0);
	create_insn	(x=0X43EEF249);
	op_hex		(x,	1);
	set_cmt	(0X43EEF24C,	"a5",	0);
	set_cmt	(0X43EEF25F,	"a4",	0);
	set_cmt	(0X43EEF264,	"a3",	0);
	make_array	(0X43EEF272,	0XE);
	create_insn	(0X43EEF280);
	create_insn	(x=0X43EEF283);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF2B6);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF2DE);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF2FB);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF33A);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF35F);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF39E);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF3C3);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF3F0);
	op_hex		(x,	1);
	set_cmt	(0X43EEF425,	"a2",	0);
	set_cmt	(0X43EEF42A,	"a9",	0);
	set_cmt	(0X43EEF42B,	"a8",	0);
	set_cmt	(0X43EEF42C,	"a7",	0);
	set_cmt	(0X43EEF42D,	"a6",	0);
	create_insn	(x=0X43EEF42E);
	op_hex		(x,	1);
	set_cmt	(0X43EEF43B,	"a5",	0);
	set_cmt	(0X43EEF443,	"a4",	0);
	set_cmt	(0X43EEF448,	"a3",	0);
	set_cmt	(0X43EEF449,	"a1",	0);
	set_cmt	(0X43EEF46E,	"a1",	0);
	set_cmt	(0X43EEF473,	"a9",	0);
	set_cmt	(0X43EEF474,	"a8",	0);
	set_cmt	(0X43EEF475,	"a7",	0);
	set_cmt	(0X43EEF476,	"a6",	0);
	create_insn	(x=0X43EEF477);
	op_hex		(x,	1);
	set_cmt	(0X43EEF47F,	"a2",	0);
	set_cmt	(0X43EEF487,	"a5",	0);
	set_cmt	(0X43EEF48D,	"a4",	0);
	set_cmt	(0X43EEF494,	"a3",	0);
	set_cmt	(0X43EEF4A7,	"a2",	0);
	set_cmt	(0X43EEF4AF,	"a1",	0);
	set_cmt	(0X43EEF4B4,	"a9",	0);
	set_cmt	(0X43EEF4B5,	"a8",	0);
	set_cmt	(0X43EEF4B6,	"a7",	0);
	set_cmt	(0X43EEF4B7,	"a6",	0);
	create_insn	(x=0X43EEF4B8);
	op_hex		(x,	1);
	set_cmt	(0X43EEF4BB,	"a5",	0);
	set_cmt	(0X43EEF4C3,	"a4",	0);
	set_cmt	(0X43EEF4C8,	"a3",	0);
	set_cmt	(0X43EEF4DB,	"a1",	0);
	set_cmt	(0X43EEF4E3,	"a2",	0);
	set_cmt	(0X43EEF4E8,	"a9",	0);
	set_cmt	(0X43EEF4E9,	"a8",	0);
	set_cmt	(0X43EEF4EA,	"a7",	0);
	set_cmt	(0X43EEF4EB,	"a6",	0);
	create_insn	(x=0X43EEF4EC);
	op_hex		(x,	1);
	set_cmt	(0X43EEF4EF,	"a5",	0);
	set_cmt	(0X43EEF4F5,	"a4",	0);
	set_cmt	(0X43EEF4FC,	"a3",	0);
	make_array	(0X43EEF50A,	0X6);
	create_insn	(0X43EEF510);
	set_cmt	(0X43EEF51B,	"a9",	0);
	set_cmt	(0X43EEF51C,	"a8",	0);
	set_cmt	(0X43EEF51D,	"a7",	0);
	set_cmt	(0X43EEF51E,	"a6",	0);
	create_insn	(x=0X43EEF51F);
	op_hex		(x,	1);
	set_cmt	(0X43EEF522,	"a5",	0);
	set_cmt	(0X43EEF52D,	"a4",	0);
	set_cmt	(0X43EEF532,	"a3",	0);
	make_array	(0X43EEF53E,	0X2);
	create_insn	(0X43EEF540);
	create_insn	(x=0X43EEF54E);
	op_hex		(x,	1);
	make_array	(0X43EEF57A,	0X6);
	create_insn	(0X43EEF580);
	create_insn	(x=0X43EEF583);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF59A);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF5A6);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF5B3);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF5B8);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF5BB);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF5E0);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF5EF);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF5FE);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF601);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF604);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF626);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF639);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF643);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF646);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF649);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF665);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF66E);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF67A);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF6C3);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF6C9);
	op_hex		(x,	1);
	make_array	(0X43EEF709,	0X7);
	create_insn	(0X43EEF710);
	create_insn	(x=0X43EEF719);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF74D);
	op_hex		(x,	1);
	make_array	(0X43EEF76E,	0X2);
	create_insn	(0X43EEF770);
	create_insn	(x=0X43EEF773);
	op_hex		(x,	1);
	set_cmt	(0X43EEF782,	"a9",	0);
	set_cmt	(0X43EEF783,	"a8",	0);
	set_cmt	(0X43EEF784,	"a7",	0);
	set_cmt	(0X43EEF785,	"a6",	0);
	create_insn	(x=0X43EEF786);
	op_hex		(x,	1);
	set_cmt	(0X43EEF798,	"a5",	0);
	set_cmt	(0X43EEF79E,	"a4",	0);
	set_cmt	(0X43EEF7A3,	"a2",	0);
	set_cmt	(0X43EEF7A6,	"a3",	0);
	set_cmt	(0X43EEF7A7,	"a1",	0);
	set_cmt	(0X43EEF7C6,	"a1",	0);
	set_cmt	(0X43EEF7CB,	"a9",	0);
	set_cmt	(0X43EEF7CC,	"a8",	0);
	set_cmt	(0X43EEF7CD,	"a7",	0);
	set_cmt	(0X43EEF7CE,	"a6",	0);
	create_insn	(x=0X43EEF7CF);
	op_hex		(x,	1);
	set_cmt	(0X43EEF7D2,	"a2",	0);
	set_cmt	(0X43EEF7D6,	"a5",	0);
	set_cmt	(0X43EEF7DC,	"a4",	0);
	set_cmt	(0X43EEF7E1,	"a3",	0);
	set_cmt	(0X43EEF7EF,	"a2",	0);
	set_cmt	(0X43EEF7F4,	"a1",	0);
	set_cmt	(0X43EEF7F9,	"a9",	0);
	set_cmt	(0X43EEF7FA,	"a8",	0);
	set_cmt	(0X43EEF7FB,	"a7",	0);
	set_cmt	(0X43EEF7FC,	"a6",	0);
	create_insn	(x=0X43EEF7FD);
	op_hex		(x,	1);
	set_cmt	(0X43EEF800,	"a5",	0);
	set_cmt	(0X43EEF80B,	"a4",	0);
	set_cmt	(0X43EEF810,	"a3",	0);
	set_cmt	(0X43EEF828,	"a2",	0);
	set_cmt	(0X43EEF82D,	"a9",	0);
	set_cmt	(0X43EEF82E,	"a8",	0);
	set_cmt	(0X43EEF82F,	"a7",	0);
	set_cmt	(0X43EEF830,	"a6",	0);
	create_insn	(x=0X43EEF831);
	op_hex		(x,	1);
	set_cmt	(0X43EEF834,	"a5",	0);
	set_cmt	(0X43EEF83F,	"a1",	0);
	set_cmt	(0X43EEF843,	"a4",	0);
	set_cmt	(0X43EEF848,	"a3",	0);
	make_array	(0X43EEF855,	0XB);
	create_insn	(0X43EEF860);
	create_insn	(x=0X43EEF863);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF866);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF869);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF876);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF8A7);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF8B5);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF8C3);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF8D1);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF91D);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF945);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF99F);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF9AA);
	op_hex		(x,	1);
	create_insn	(x=0X43EEF9BC);
	op_hex		(x,	1);
	make_array	(0X43EEFAD5,	0XB);
	create_insn	(0X43EEFAE0);
	create_insn	(x=0X43EEFAE3);
	op_hex		(x,	1);
	set_cmt	(0X43EEFAF5,	"a9",	0);
	set_cmt	(0X43EEFAF6,	"a8",	0);
	set_cmt	(0X43EEFAF7,	"a7",	0);
	set_cmt	(0X43EEFAF8,	"a6",	0);
	create_insn	(x=0X43EEFAF9);
	op_hex		(x,	1);
	set_cmt	(0X43EEFB06,	"a5",	0);
	set_cmt	(0X43EEFB11,	"a4",	0);
	set_cmt	(0X43EEFB16,	"a3",	0);
	set_cmt	(0X43EEFB33,	"a1",	0);
	set_cmt	(0X43EEFB38,	"a9",	0);
	set_cmt	(0X43EEFB39,	"a8",	0);
	set_cmt	(0X43EEFB3A,	"a7",	0);
	set_cmt	(0X43EEFB3B,	"a6",	0);
	create_insn	(x=0X43EEFB3C);
	op_hex		(x,	1);
	set_cmt	(0X43EEFB3F,	"a2",	0);
	set_cmt	(0X43EEFB43,	"a5",	0);
	set_cmt	(0X43EEFB49,	"a4",	0);
	set_cmt	(0X43EEFB4E,	"a3",	0);
	set_cmt	(0X43EEFB5C,	"a2",	0);
	set_cmt	(0X43EEFB61,	"a1",	0);
	set_cmt	(0X43EEFB66,	"a9",	0);
	set_cmt	(0X43EEFB67,	"a8",	0);
	set_cmt	(0X43EEFB68,	"a7",	0);
	set_cmt	(0X43EEFB69,	"a6",	0);
	create_insn	(x=0X43EEFB6A);
	op_hex		(x,	1);
	set_cmt	(0X43EEFB6D,	"a5",	0);
	set_cmt	(0X43EEFB78,	"a4",	0);
	set_cmt	(0X43EEFB7D,	"a3",	0);
	set_cmt	(0X43EEFB95,	"a2",	0);
	set_cmt	(0X43EEFB9A,	"a9",	0);
	set_cmt	(0X43EEFB9B,	"a8",	0);
	set_cmt	(0X43EEFB9C,	"a7",	0);
	set_cmt	(0X43EEFB9D,	"a6",	0);
	create_insn	(x=0X43EEFB9E);
	op_hex		(x,	1);
	set_cmt	(0X43EEFBA1,	"a5",	0);
	set_cmt	(0X43EEFBAC,	"a1",	0);
	set_cmt	(0X43EEFBB0,	"a4",	0);
	set_cmt	(0X43EEFBB5,	"a3",	0);
	make_array	(0X43EEFBC2,	0XE);
	create_insn	(0X43EEFBD0);
	make_array	(0X43EEFBF2,	0XE);
	create_insn	(0X43EEFC00);
	make_array	(0X43EEFC1A,	0X6);
	create_insn	(0X43EEFC20);
	create_insn	(x=0X43EEFC23);
	op_hex		(x,	1);
	set_cmt	(0X43EEFC29,	"index",	0);
	set_cmt	(0X43EEFC38,	"interface",	0);
	set_cmt	(0X43EEFC45,	"this",	0);
	set_cmt	(0X43EEFC7A,	"propHash",	0);
	set_cmt	(0X43EEFC7F,	"classHash",	0);
	set_cmt	(0X43EEFCA0,	"propHash",	0);
	set_cmt	(0X43EEFCA5,	"classHash",	0);
	set_cmt	(0X43EEFCCB,	"propHash",	0);
	set_cmt	(0X43EEFCD0,	"classHash",	0);
	set_cmt	(0X43EEFCEE,	"propHash",	0);
	set_cmt	(0X43EEFCF3,	"classHash",	0);
	set_cmt	(0X43EEFD21,	"propHash",	0);
	set_cmt	(0X43EEFD26,	"classHash",	0);
	create_insn	(0X43EEFD3E);
	set_cmt	(0X43EEFD4A,	"propHash",	0);
	set_cmt	(0X43EEFD4F,	"classHash",	0);
	set_cmt	(0X43EEFD73,	"propHash",	0);
	set_cmt	(0X43EEFD78,	"classHash",	0);
	make_array	(0X43EEFD92,	0XE);
	create_insn	(0X43EEFDA0);
	create_insn	(x=0X43EEFDA3);
	op_hex		(x,	1);
	create_insn	(x=0X43EEFDA6);
	op_hex		(x,	1);
	create_insn	(x=0X43EEFDA9);
	op_hex		(x,	1);
	set_cmt	(0X43EEFDB6,	"interface",	0);
	create_insn	(x=0X43EEFDBC);
	op_hex		(x,	1);
	set_cmt	(0X43EEFDBF,	"index",	0);
	set_cmt	(0X43EEFDD3,	"this",	0);
	set_cmt	(0X43EEFDEA,	"propHash",	0);
	set_cmt	(0X43EEFDEF,	"classHash",	0);
	create_insn	(x=0X43EEFE0B);
	op_hex		(x,	1);
	create_insn	(x=0X43EEFE0F);
	op_hex		(x,	1);
	create_insn	(x=0X43EEFE12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EEFE27,	"index",	0);
	set_cmt	(0X43EEFE2C,	"interface",	0);
	set_cmt	(0X43EEFE39,	"this",	0);
	set_cmt	(0X43EEFE51,	"propHash",	0);
	set_cmt	(0X43EEFE56,	"classHash",	0);
	create_insn	(0X43EEFE91);
	set_cmt	(0X43EEFEB7,	"index",	0);
	set_cmt	(0X43EEFEC2,	"interface",	0);
	set_cmt	(0X43EEFECF,	"this",	0);
	set_cmt	(0X43EEFEE6,	"propHash",	0);
	set_cmt	(0X43EEFEEB,	"classHash",	0);
	set_cmt	(0X43EEFF09,	"index",	0);
	set_cmt	(0X43EEFF0E,	"interface",	0);
	set_cmt	(0X43EEFF1B,	"this",	0);
	set_cmt	(0X43EEFF27,	"m_pPlayer",	0);
	set_cmt	(0X43EEFF4C,	"interface",	0);
	set_cmt	(0X43EEFF52,	"index",	0);
	set_cmt	(0X43EEFF7E,	"interface",	0);
	create_insn	(0X43EEFF7E);
	set_cmt	(0X43EEFF84,	"index",	0);
	create_insn	(x=0X43EEFF9C);
	op_hex		(x,	1);
	create_insn	(x=0X43EEFFA5);
	op_hex		(x,	1);
	create_insn	(x=0X43EEFFBA);
	op_hex		(x,	1);
	set_cmt	(0X43EEFFBD,	"interface",	0);
	set_cmt	(0X43EEFFC3,	"index",	0);
	set_cmt	(0X43EEFFCF,	"this",	0);
	set_cmt	(0X43EEFFE6,	"propHash",	0);
	set_cmt	(0X43EEFFEB,	"classHash",	0);
	create_insn	(x=0X43EEFFFA);
	op_hex		(x,	1);
	set_cmt	(0X43EEFFFD,	"index",	0);
	set_cmt	(0X43EF000E,	"interface",	0);
	set_cmt	(0X43EF001B,	"this",	0);
	set_cmt	(0X43EF0032,	"propHash",	0);
	set_cmt	(0X43EF0037,	"classHash",	0);
	create_insn	(0X43EF0078);
	create_insn	(x=0X43EF007D);
	op_hex		(x,	1);
	create_insn	(x=0X43EF008E);
	op_hex		(x,	1);
	create_insn	(x=0X43EF009F);
	op_hex		(x,	1);
	create_insn	(x=0X43EF00AD);
	op_hex		(x,	1);
	create_insn	(x=0X43EF00B7);
	op_hex		(x,	1);
	create_insn	(x=0X43EF00C1);
	op_hex		(x,	1);
	create_insn	(x=0X43EF00CC);
	op_hex		(x,	1);
	create_insn	(x=0X43EF00E7);
	op_hex		(x,	1);
	create_insn	(x=0X43EF0102);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EF012C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF013C,	"switch 7 cases ",	0);
	set_cmt	(0X43EF0145,	"switch jump",	0);
	create_insn	(x=0X43EF0145);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF014C,	"jumptable 43EF0145 case 1",	1);
	create_insn	(0X43EF014C);
	set_cmt	(0X43EF0153,	"jumptable 43EF0145 case 2",	1);
	create_insn	(0X43EF0153);
	set_cmt	(0X43EF015A,	"jumptable 43EF0145 case 3",	1);
	create_insn	(0X43EF015A);
	set_cmt	(0X43EF0161,	"jumptable 43EF0145 case 4",	1);
	create_insn	(0X43EF0161);
	set_cmt	(0X43EF0168,	"jumptable 43EF0145 case 5",	1);
	create_insn	(0X43EF0168);
	set_cmt	(0X43EF016F,	"jumptable 43EF0145 case 6",	1);
	create_insn	(0X43EF016F);
	set_cmt	(0X43EF0176,	"jumptable 43EF0145 case 7",	1);
	create_insn	(0X43EF0176);
	set_cmt	(0X43EF017D,	"jumptable 43EF0145 default case",	1);
	create_insn	(0X43EF017D);
	set_name	(0X43EF017D,	"def_43EF0145");
	set_cmt	(0X43EF0188,	"propHash",	0);
	set_cmt	(0X43EF018D,	"classHash",	0);
	set_cmt	(0X43EF019C,	"index",	0);
	set_cmt	(0X43EF01A5,	"interface",	0);
	set_cmt	(0X43EF01BB,	"propHash",	0);
	set_cmt	(0X43EF01C0,	"classHash",	0);
	set_cmt	(0X43EF01DB,	"propHash",	0);
	set_cmt	(0X43EF01E0,	"classHash",	0);
	create_insn	(0X43EF021A);
	set_cmt	(0X43EF023F,	"propHash",	0);
	set_cmt	(0X43EF0244,	"classHash",	0);
	create_insn	(x=0X43EF025F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF027E,	"propHash",	0);
	set_cmt	(0X43EF0283,	"classHash",	0);
	create_insn	(0X43EF02B5);
	make_array	(0X43EF02E5,	0X3);
	set_cmt	(0X43EF02E8,	"jump table for switch statement",	0);
	create_dword	(x=0X43EF02E8);
	make_array	(x,	0X7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EF02E8,	"jpt_43EF0145");
	make_array	(0X43EF0304,	0XC);
	create_insn	(0X43EF0310);
	create_insn	(x=0X43EF0318);
	op_hex		(x,	1);
	create_insn	(x=0X43EF031E);
	op_hex		(x,	1);
	create_insn	(x=0X43EF0322);
	op_hex		(x,	1);
	set_cmt	(0X43EF032F,	"Size",	0);
	create_insn	(x=0X43EF0345);
	op_hex		(x,	1);
	create_insn	(x=0X43EF0356);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF036A);
	op_hex		(x,	1);
	create_insn	(x=0X43EF036D);
	op_hex		(x,	1);
	create_insn	(x=0X43EF0371);
	op_hex		(x,	1);
	set_cmt	(0X43EF037E,	"Size",	0);
	create_insn	(x=0X43EF0394);
	op_hex		(x,	1);
	create_insn	(x=0X43EF03A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF03B4);
	op_hex		(x,	1);
	set_cmt	(0X43EF03D0,	"propHash",	0);
	set_cmt	(0X43EF03D5,	"classHash",	0);
	set_cmt	(0X43EF040D,	"propHash",	0);
	set_cmt	(0X43EF0412,	"classHash",	0);
	set_cmt	(0X43EF042E,	"switch 84 cases ",	0);
	create_insn	(x=0X43EF0434);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF043B,	"switch jump",	0);
	create_insn	(x=0X43EF043B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF0442,	"jumptable 43EF043B cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-40,60,61,63,64",	1);
	create_insn	(0X43EF0442);
	set_cmt	(0X43EF0447,	"jumptable 43EF043B default case, cases 5,6,12,15,18,20-22,31,37,41-59,62,65-84",	1);
	create_insn	(0X43EF0447);
	set_name	(0X43EF0447,	"def_43EF043B");
	create_insn	(x=0X43EF0454);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF047A,	"propHash",	0);
	set_cmt	(0X43EF047F,	"classHash",	0);
	set_cmt	(0X43EF049B,	"switch 84 cases ",	0);
	create_insn	(x=0X43EF04A5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF04AC,	"switch jump",	0);
	create_insn	(x=0X43EF04AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF04B3,	"switch 19 cases ",	0);
	create_insn	(x=0X43EF04B3);
	op_hex		(x,	1);
	create_insn	(x=0X43EF04C1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF04C8,	"switch jump",	0);
	create_insn	(x=0X43EF04C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF04CF,	"jumptable 43EF04AC cases 41,42,59\njumptable 43EF04C8 cases 505-509,512,514-516,519,520,522,523",	1);
	create_insn	(0X43EF04CF);
	create_insn	(x=0X43EF04E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EF053D);
	op_hex		(x,	1);
	set_cmt	(0X43EF0549,	"propHash",	0);
	set_cmt	(0X43EF054E,	"classHash",	0);
	set_cmt	(0X43EF0569,	"propHash",	0);
	set_cmt	(0X43EF056E,	"classHash",	0);
	set_cmt	(0X43EF0588,	"switch 14 cases ",	0);
	set_cmt	(0X43EF0591,	"switch jump",	0);
	create_insn	(x=0X43EF0591);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF0598,	"jumptable 43EF0591 case 1",	1);
	create_insn	(0X43EF0598);
	set_cmt	(0X43EF059F,	"jumptable 43EF0591 case 2",	1);
	create_insn	(0X43EF059F);
	set_cmt	(0X43EF05A6,	"jumptable 43EF0591 case 3",	1);
	create_insn	(0X43EF05A6);
	set_cmt	(0X43EF05AD,	"jumptable 43EF0591 case 4",	1);
	create_insn	(0X43EF05AD);
	set_cmt	(0X43EF05B4,	"jumptable 43EF0591 case 5",	1);
	create_insn	(0X43EF05B4);
	set_cmt	(0X43EF05BB,	"jumptable 43EF0591 case 6",	1);
	create_insn	(0X43EF05BB);
	set_cmt	(0X43EF05C2,	"jumptable 43EF0591 case 7",	1);
	create_insn	(0X43EF05C2);
	set_cmt	(0X43EF05C9,	"jumptable 43EF0591 case 8",	1);
	create_insn	(0X43EF05C9);
	set_cmt	(0X43EF05D0,	"jumptable 43EF0591 case 9",	1);
	create_insn	(0X43EF05D0);
	set_cmt	(0X43EF05D7,	"jumptable 43EF0591 case 10",	1);
	create_insn	(0X43EF05D7);
	set_cmt	(0X43EF05DE,	"jumptable 43EF0591 case 11",	1);
	create_insn	(0X43EF05DE);
	set_cmt	(0X43EF05E5,	"jumptable 43EF0591 case 12",	1);
	create_insn	(0X43EF05E5);
	set_cmt	(0X43EF05EC,	"jumptable 43EF0591 case 13",	1);
	create_insn	(0X43EF05EC);
	set_cmt	(0X43EF05F3,	"jumptable 43EF0591 case 14",	1);
	create_insn	(0X43EF05F3);
	set_cmt	(0X43EF05FA,	"jumptable 43EF0591 default case",	1);
	create_insn	(0X43EF05FA);
	set_name	(0X43EF05FA,	"def_43EF0591");
	set_cmt	(0X43EF0605,	"propHash",	0);
	set_cmt	(0X43EF060A,	"classHash",	0);
	set_cmt	(0X43EF061D,	"index",	0);
	set_cmt	(0X43EF0628,	"interface",	0);
	set_cmt	(0X43EF0635,	"this",	0);
	set_cmt	(0X43EF0641,	"player",	0);
	set_cmt	(0X43EF0656,	"index",	0);
	set_cmt	(0X43EF065B,	"interface",	0);
	set_cmt	(0X43EF0668,	"this",	0);
	set_cmt	(0X43EF0681,	"propHash",	0);
	set_cmt	(0X43EF0686,	"classHash",	0);
	set_cmt	(0X43EF06B8,	"propHash",	0);
	set_cmt	(0X43EF06BD,	"classHash",	0);
	set_cmt	(0X43EF06E2,	"propHash",	0);
	set_cmt	(0X43EF06E7,	"classHash",	0);
	set_cmt	(0X43EF0714,	"propHash",	0);
	set_cmt	(0X43EF0719,	"classHash",	0);
	set_cmt	(0X43EF072E,	"jumptable 43EF04AC default case, cases 1-40,43-58,60-84\njumptable 43EF04C8 default case, cases 510,511,513,517,518,521",	1);
	set_name	(0X43EF072E,	"def_43EF04AC");
	create_insn	(x=0X43EF0789);
	op_hex		(x,	1);
	set_cmt	(0X43EF0797,	"propHash",	0);
	set_cmt	(0X43EF079C,	"classHash",	0);
	set_cmt	(0X43EF07B8,	"switch 84 cases ",	0);
	create_insn	(x=0X43EF07BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF07C5,	"switch jump",	0);
	create_insn	(x=0X43EF07C5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF07CC,	"switch 19 cases ",	0);
	create_insn	(x=0X43EF07CC);
	op_hex		(x,	1);
	create_insn	(x=0X43EF07D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF07DD,	"switch jump",	0);
	create_insn	(x=0X43EF07DD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF07E4,	"jumptable 43EF07C5 default case, cases 1-40,43-58,60-84\njumptable 43EF07DD default case, cases 510,511,513,517,518,521",	1);
	create_insn	(0X43EF07E4);
	set_name	(0X43EF07E4,	"def_43EF07C5");
	create_insn	(x=0X43EF07EA);
	op_hex		(x,	1);
	create_insn	(x=0X43EF07F4);
	op_hex		(x,	1);
	set_cmt	(0X43EF07F9,	"jumptable 43EF07C5 cases 41,42,59\njumptable 43EF07DD cases 505-509,512,514-516,519,520,522,523",	1);
	create_insn	(0X43EF07F9);
	create_insn	(0X43EF0833);
	make_array	(0X43EF083E,	0X2);
	set_cmt	(0X43EF0840,	"jump table for switch statement",	0);
	create_dword	(x=0X43EF0840);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EF0840,	"jpt_43EF043B");
	set_cmt	(0X43EF084C,	"indirect table for switch statement",	0);
	create_byte	(0X43EF084C);
	make_array	(0X43EF084C,	0X54);
	set_cmt	(0X43EF08A0,	"jump table for switch statement",	0);
	create_dword	(x=0X43EF08A0);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EF08A0,	"jpt_43EF04AC");
	set_cmt	(0X43EF08AC,	"indirect table for switch statement",	0);
	create_byte	(0X43EF08AC);
	make_array	(0X43EF08AC,	0X54);
	set_cmt	(0X43EF0900,	"jump table for switch statement",	0);
	create_dword	(x=0X43EF0900);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EF0900,	"jpt_43EF04C8");
	set_cmt	(0X43EF0908,	"indirect table for switch statement",	0);
	create_byte	(0X43EF0908);
	make_array	(0X43EF0908,	0X13);
	set_cmt	(0X43EF091C,	"jump table for switch statement",	0);
	create_dword	(x=0X43EF091C);
	make_array	(x,	0XE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EF091C,	"jpt_43EF0591");
	set_cmt	(0X43EF0954,	"jump table for switch statement",	0);
	create_dword	(x=0X43EF0954);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EF0954,	"jpt_43EF07C5");
	set_cmt	(0X43EF0960,	"indirect table for switch statement",	0);
	create_byte	(0X43EF0960);
	make_array	(0X43EF0960,	0X54);
	set_cmt	(0X43EF09B4,	"jump table for switch statement",	0);
	create_dword	(x=0X43EF09B4);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EF09B4,	"jpt_43EF07DD");
	set_cmt	(0X43EF09BC,	"indirect table for switch statement",	0);
	create_byte	(0X43EF09BC);
	make_array	(0X43EF09BC,	0X13);
	create_insn	(0X43EF09D0);
	create_insn	(0X43EF09F6);
	create_insn	(x=0X43EF09FB);
	op_hex		(x,	1);
	create_insn	(x=0X43EF09FF);
	op_hex		(x,	1);
	create_insn	(0X43EF0A20);
	create_insn	(x=0X43EF0A2F);
	op_hex		(x,	1);
	create_insn	(0X43EF0A39);
	create_insn	(0X43EF0A45);
	create_insn	(x=0X43EF0A4A);
	op_hex		(x,	1);
	create_insn	(x=0X43EF0A4E);
	op_hex		(x,	1);
	create_insn	(0X43EF0A6F);
	create_insn	(x=0X43EF0A82);
	op_hex		(x,	1);
	create_insn	(0X43EF0A8C);
	set_cmt	(0X43EF0A97,	"switch 13 cases ",	0);
	create_insn	(x=0X43EF0AA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF0AA7,	"switch jump",	0);
	create_insn	(x=0X43EF0AA7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF0AAE,	"jumptable 43EF0AA7 case 2\njumptable 43EF0B41 case 2",	1);
	create_insn	(0X43EF0AAE);
	set_cmt	(0X43EF0ABA,	"jumptable 43EF0AA7 case 9",	1);
	create_insn	(0X43EF0ABA);
	create_insn	(x=0X43EF0ABF);
	op_hex		(x,	1);
	create_insn	(x=0X43EF0AC3);
	op_hex		(x,	1);
	create_insn	(0X43EF0AE4);
	create_insn	(x=0X43EF0AF3);
	op_hex		(x,	1);
	create_insn	(0X43EF0AFD);
	create_insn	(0X43EF0B09);
	create_insn	(x=0X43EF0B1C);
	op_hex		(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_13(void) {
        auto x;
#define id x

	create_insn	(0X43EF0B26);
	set_cmt	(0X43EF0B31,	"switch 13 cases ",	0);
	create_insn	(x=0X43EF0B3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF0B41,	"switch jump",	0);
	create_insn	(x=0X43EF0B41);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF0B48,	"jumptable 43EF0B41 cases 3,4",	1);
	create_insn	(0X43EF0B48);
	create_insn	(x=0X43EF0B4D);
	op_hex		(x,	1);
	create_insn	(x=0X43EF0B51);
	op_hex		(x,	1);
	create_insn	(0X43EF0B72);
	create_insn	(x=0X43EF0B81);
	op_hex		(x,	1);
	create_insn	(0X43EF0B8B);
	set_cmt	(0X43EF0B97,	"jumptable 43EF0B41 case 9",	1);
	create_insn	(0X43EF0B97);
	create_insn	(x=0X43EF0B9C);
	op_hex		(x,	1);
	create_insn	(x=0X43EF0BA0);
	op_hex		(x,	1);
	create_insn	(0X43EF0BC1);
	create_insn	(x=0X43EF0BD0);
	op_hex		(x,	1);
	create_insn	(0X43EF0BDA);
	set_cmt	(0X43EF0BE6,	"jumptable 43EF0B41 cases 10-12",	1);
	create_insn	(0X43EF0BE6);
	set_cmt	(0X43EF0BF0,	"jumptable 43EF0B41 default case, cases 5-8",	1);
	create_insn	(0X43EF0BF0);
	set_name	(0X43EF0BF0,	"def_43EF0B41");
	create_insn	(0X43EF0BFA);
	set_cmt	(0X43EF0C17,	"jumptable 43EF0AA7 default case, cases 3-8,10,11",	1);
	set_name	(0X43EF0C17,	"def_43EF0AA7");
	create_insn	(0X43EF0C1F);
	create_insn	(x=0X43EF0C3C);
	op_hex		(x,	1);
	create_insn	(x=0X43EF0C40);
	op_hex		(x,	1);
	create_insn	(0X43EF0C61);
	create_insn	(x=0X43EF0C74);
	op_hex		(x,	1);
	create_insn	(0X43EF0C7E);
	create_insn	(0X43EF0C87);
	set_cmt	(0X43EF0C97,	"jumptable 43EF0AA7 case 12",	1);
	create_insn	(x=0X43EF0C9C);
	op_hex		(x,	1);
	create_insn	(x=0X43EF0CA4);
	op_hex		(x,	1);
	create_insn	(0X43EF0CC8);
	create_insn	(0X43EF0CD4);
	create_insn	(x=0X43EF0CE5);
	op_hex		(x,	1);
	create_insn	(x=0X43EF0CE9);
	op_hex		(x,	1);
	create_insn	(0X43EF0D0A);
	create_insn	(x=0X43EF0D19);
	op_hex		(x,	1);
	create_insn	(0X43EF0D23);
	set_cmt	(0X43EF0D28,	"jumptable 43EF0AA7 cases 0,1\njumptable 43EF0B41 cases 0,1",	1);
	set_cmt	(0X43EF0D30,	"jump table for switch statement",	0);
	create_dword	(x=0X43EF0D30);
	make_array	(x,	0X5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EF0D30,	"jpt_43EF0AA7");
	set_cmt	(0X43EF0D44,	"indirect table for switch statement",	0);
	create_byte	(0X43EF0D44);
	make_array	(0X43EF0D44,	0XD);
	make_array	(0X43EF0D51,	0X3);
	set_cmt	(0X43EF0D54,	"jump table for switch statement",	0);
	create_dword	(x=0X43EF0D54);
	make_array	(x,	0X6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EF0D54,	"jpt_43EF0B41");
	set_cmt	(0X43EF0D6C,	"indirect table for switch statement",	0);
	create_byte	(0X43EF0D6C);
	make_array	(0X43EF0D6C,	0XD);
	make_array	(0X43EF0D79,	0X7);
	set_cmt	(0X43EF0D80,	"interface",	0);
	create_insn	(0X43EF0D80);
	set_cmt	(0X43EF0D86,	"index",	0);
	set_cmt	(0X43EF0D9A,	"this",	0);
	set_cmt	(0X43EF0DB0,	"index",	0);
	set_cmt	(0X43EF0DB5,	"interface",	0);
	set_cmt	(0X43EF0DC2,	"this",	0);
	set_cmt	(0X43EF0DCE,	"m_pPlayer",	0);
	make_array	(0X43EF0DEB,	0X5);
	create_insn	(0X43EF0DF0);
	create_insn	(x=0X43EF0DF3);
	op_hex		(x,	1);
	set_cmt	(0X43EF0DFA,	"index",	0);
	set_cmt	(0X43EF0DFF,	"interface",	0);
	set_cmt	(0X43EF0E16,	"this",	0);
	set_cmt	(0X43EF0E30,	"index",	0);
	set_cmt	(0X43EF0E35,	"interface",	0);
	set_cmt	(0X43EF0E42,	"this",	0);
	set_cmt	(0X43EF0E4E,	"m_pPlayer",	0);
	create_insn	(x=0X43EF0EA9);
	op_hex		(x,	1);
	make_array	(0X43EF0EFA,	0X6);
	create_insn	(0X43EF0F00);
	create_insn	(x=0X43EF0F03);
	op_hex		(x,	1);
	create_insn	(x=0X43EF0F5C);
	op_hex		(x,	1);
	create_insn	(x=0X43EF0FB9);
	op_hex		(x,	1);
	create_insn	(0X43EF1000);
	create_insn	(x=0X43EF1019);
	op_hex		(x,	1);
	create_insn	(0X43EF1049);
	create_insn	(0X43EF1050);
	set_cmt	(0X43EF1053,	"interface",	0);
	create_insn	(x=0X43EF1059);
	op_hex		(x,	1);
	set_cmt	(0X43EF105F,	"index",	0);
	set_cmt	(0X43EF107C,	"index",	0);
	set_cmt	(0X43EF1081,	"interface",	0);
	set_cmt	(0X43EF108E,	"this",	0);
	set_cmt	(0X43EF10A8,	"index",	0);
	set_cmt	(0X43EF10AD,	"interface",	0);
	set_cmt	(0X43EF10BA,	"this",	0);
	set_cmt	(0X43EF10EC,	"index",	0);
	set_cmt	(0X43EF10F1,	"interface",	0);
	set_cmt	(0X43EF10FE,	"this",	0);
	set_cmt	(0X43EF1152,	"propHash",	0);
	set_cmt	(0X43EF1157,	"classHash",	0);
	set_cmt	(0X43EF1177,	"switch 84 cases ",	0);
	create_insn	(x=0X43EF1181);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF1188,	"switch jump",	0);
	create_insn	(x=0X43EF1188);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF118F,	"switch 19 cases ",	0);
	create_insn	(x=0X43EF118F);
	op_hex		(x,	1);
	create_insn	(x=0X43EF119E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF11A5,	"switch jump",	0);
	create_insn	(x=0X43EF11A5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF11AC,	"jumptable 43EF1188 cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-42,59-61,63,64\njumptable 43EF11A5 cases 505-509,512,514-516,519,520,522,523",	1);
	create_insn	(0X43EF11AC);
	set_cmt	(0X43EF11B5,	"propHash",	0);
	set_cmt	(0X43EF11BA,	"classHash",	0);
	set_cmt	(0X43EF11D8,	"propHash",	0);
	set_cmt	(0X43EF11DD,	"classHash",	0);
	set_cmt	(0X43EF11FC,	"switch 84 cases ",	0);
	create_insn	(x=0X43EF1202);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF1209,	"switch jump",	0);
	create_insn	(x=0X43EF1209);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF1210,	"switch 19 cases ",	0);
	create_insn	(x=0X43EF1210);
	op_hex		(x,	1);
	create_insn	(x=0X43EF121A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF1221,	"switch jump",	0);
	create_insn	(x=0X43EF1221);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF1228,	"jumptable 43EF1209 cases 41,42,59\njumptable 43EF1221 cases 505-509,512,514-516,519,520,522,523",	1);
	create_insn	(0X43EF1228);
	set_cmt	(0X43EF1231,	"jumptable 43EF1209 default case, cases 1-40,43-58,60-84\njumptable 43EF1221 default case, cases 510,511,513,517,518,521",	1);
	set_name	(0X43EF1231,	"def_43EF1209");
	set_cmt	(0X43EF1237,	"jumptable 43EF1188 default case, cases 5,6,12,15,18,20-22,31,37,43-58,62,65-84\njumptable 43EF11A5 default case, cases 510,511,513,517,518,521",	1);
	set_name	(0X43EF1237,	"def_43EF1188");
	make_array	(0X43EF1252,	0X2);
	set_cmt	(0X43EF1254,	"jump table for switch statement",	0);
	create_dword	(x=0X43EF1254);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EF1254,	"jpt_43EF1188");
	set_cmt	(0X43EF1260,	"indirect table for switch statement",	0);
	create_byte	(0X43EF1260);
	make_array	(0X43EF1260,	0X54);
	set_cmt	(0X43EF12B4,	"jump table for switch statement",	0);
	create_dword	(x=0X43EF12B4);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EF12B4,	"jpt_43EF11A5");
	set_cmt	(0X43EF12BC,	"indirect table for switch statement",	0);
	create_byte	(0X43EF12BC);
	make_array	(0X43EF12BC,	0X13);
	set_cmt	(0X43EF12D0,	"jump table for switch statement",	0);
	create_dword	(x=0X43EF12D0);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EF12D0,	"jpt_43EF1209");
	set_cmt	(0X43EF12DC,	"indirect table for switch statement",	0);
	create_byte	(0X43EF12DC);
	make_array	(0X43EF12DC,	0X54);
	set_cmt	(0X43EF1330,	"jump table for switch statement",	0);
	create_dword	(x=0X43EF1330);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EF1330,	"jpt_43EF1221");
	set_cmt	(0X43EF1338,	"indirect table for switch statement",	0);
	create_byte	(0X43EF1338);
	make_array	(0X43EF1338,	0X13);
	make_array	(0X43EF134B,	0X5);
	create_insn	(0X43EF1350);
	set_name	(0X43EF1350,	"OneTap::Features::Visuals::DamageMarkers");
	create_insn	(x=0X43EF1353);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1356);
	op_hex		(x,	1);
	set_cmt	(0X43EF135A,	"switch 10 cases ",	0);
	set_cmt	(0X43EF1363,	"switch jump",	0);
	create_insn	(x=0X43EF1363);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF136A,	"jumptable 43EF1363 case 0",	1);
	create_insn	(0X43EF136A);
	create_insn	(x=0X43EF136D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1370);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1377);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF137E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1385);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF138C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1393);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF13A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF13A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF13A7);
	op_hex		(x,	1);
	create_insn	(x=0X43EF13AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF13AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF13BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF13BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF13C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF13C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF13CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF13D7);
	op_stkvar	(x,	1);
	set_cmt	(0X43EF13E1,	"jumptable 43EF1363 case 1",	1);
	create_insn	(0X43EF13E1);
	create_insn	(x=0X43EF13E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF13E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF13EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF13F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF13FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1403);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF140A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1415);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1419);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF141C);
	op_hex		(x,	1);
	create_insn	(x=0X43EF141F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1423);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1430);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1434);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1437);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF143A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1444);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF144C);
	op_stkvar	(x,	1);
	set_cmt	(0X43EF1456,	"jumptable 43EF1363 case 2",	1);
	create_insn	(0X43EF1456);
	create_insn	(x=0X43EF1459);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF145C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1463);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF146A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1470);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1474);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF147B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1482);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1490);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1494);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1497);
	op_hex		(x,	1);
	create_insn	(x=0X43EF149A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF149E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF14AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF14AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF14B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF14B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF14BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF14C7);
	op_stkvar	(x,	1);
	set_cmt	(0X43EF14D1,	"jumptable 43EF1363 case 3",	1);
	create_insn	(0X43EF14D1);
	create_insn	(x=0X43EF14D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF14D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF14DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF14E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF14EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF14EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF14F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF14FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1510);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1514);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1517);
	op_hex		(x,	1);
	create_insn	(x=0X43EF151A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF151E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF152B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF152F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1532);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1535);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF153F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1547);
	op_stkvar	(x,	1);
	set_cmt	(0X43EF1551,	"jumptable 43EF1363 case 4",	1);
	create_insn	(0X43EF1551);
	create_insn	(x=0X43EF1554);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1557);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF155E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1565);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF156C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1572);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1579);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1580);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1590);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1594);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1597);
	op_hex		(x,	1);
	create_insn	(x=0X43EF159A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF159E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF15AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF15AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF15B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF15B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF15BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF15C7);
	op_stkvar	(x,	1);
	set_cmt	(0X43EF15D1,	"jumptable 43EF1363 case 5",	1);
	create_insn	(0X43EF15D1);
	create_insn	(x=0X43EF15D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF15D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF15DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF15E5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF15EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF15F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF15F6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF15FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1604);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1610);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1614);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1617);
	op_hex		(x,	1);
	create_insn	(x=0X43EF161A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF161E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF162B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF162F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1632);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1635);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF163F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1647);
	op_stkvar	(x,	1);
	set_cmt	(0X43EF1651,	"jumptable 43EF1363 case 6",	1);
	create_insn	(0X43EF1651);
	create_insn	(x=0X43EF1654);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1657);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF165E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1665);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF166C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1673);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1680);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1684);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1687);
	op_hex		(x,	1);
	create_insn	(x=0X43EF168A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF168E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF169B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF169F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF16A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF16A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF16AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF16B7);
	op_stkvar	(x,	1);
	set_cmt	(0X43EF16C1,	"jumptable 43EF1363 case 7",	1);
	create_insn	(0X43EF16C1);
	create_insn	(x=0X43EF16C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF16C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF16CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF16D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF16DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF16E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF16F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF16F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF16F7);
	op_hex		(x,	1);
	create_insn	(x=0X43EF16FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF16FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF170B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF170F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1712);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1715);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF171F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1727);
	op_stkvar	(x,	1);
	set_cmt	(0X43EF1731,	"jumptable 43EF1363 case 8",	1);
	create_insn	(0X43EF1731);
	create_insn	(x=0X43EF1734);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1737);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF173E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1745);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF174B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF174F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1756);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF175D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF1770);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1774);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1777);
	op_hex		(x,	1);
	create_insn	(x=0X43EF177A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF177E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF178B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF178F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1792);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1795);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF179F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF17A7);
	op_stkvar	(x,	1);
	set_cmt	(0X43EF17B1,	"jumptable 43EF1363 case 9",	1);
	create_insn	(0X43EF17B1);
	create_insn	(x=0X43EF17B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF17B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF17BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF17C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF17CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF17D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF17D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF17DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF17F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF17F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF17F7);
	op_hex		(x,	1);
	create_insn	(x=0X43EF17FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF17FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF180B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EF180F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1812);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1815);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF181F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EF1827);
	op_stkvar	(x,	1);
	set_cmt	(0X43EF1831,	"jumptable 43EF1363 default case",	1);
	create_insn	(x=0X43EF1831);
	op_stkvar	(x,	1);
	set_name	(0X43EF1831,	"def_43EF1363");
	set_cmt	(0X43EF1834,	"this",	0);
	set_cmt	(0X43EF1836,	"a3",	0);
	set_cmt	(0X43EF1838,	"a2",	0);
	create_insn	(x=0X43EF1838);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF185C,	"jump table for switch statement",	0);
	create_dword	(x=0X43EF185C);
	make_array	(x,	0XA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EF185C,	"jpt_43EF1363");
	make_array	(0X43EF1884,	0XC);
	create_insn	(0X43EF1890);
	create_insn	(x=0X43EF1893);
	op_hex		(x,	1);
	create_insn	(x=0X43EF1896);
	op_hex		(x,	1);
	create_insn	(0X43EF1903);
	create_insn	(0X43EF1918);
	create_insn	(x=0X43EF1928);
	op_hex		(x,	1);
	create_insn	(x=0X43EF195C);
	op_hex		(x,	1);
	create_insn	(0X43EF1A1A);
	create_insn	(0X43EF1A2E);
	create_insn	(x=0X43EF1A3E);
	op_hex		(x,	1);
	create_insn	(x=0X43EF1A72);
	op_hex		(x,	1);
	create_insn	(x=0X43EF1A9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43EF1ABE,	0X2);
	create_insn	(0X43EF1AC0);
	make_array	(0X43EF1ADC,	0X4);
	create_insn	(0X43EF1AE0);
	set_name	(0X43EF1AE0,	"C_SDK::Surface::SoundSystem::PlaySound");
	create_insn	(x=0X43EF1AE5);
	op_hex		(x,	1);
	create_insn	(x=0X43EF1AE8);
	op_hex		(x,	1);
	make_array	(0X43EF1B07,	0X9);
	create_insn	(0X43EF1B10);
	create_insn	(x=0X43EF1C6A);
	op_hex		(x,	1);
	create_insn	(0X43EF1C6E);
	set_cmt	(0X43EF1C79,	"message",	0);
	create_insn	(x=0X43EF1C79);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF1C7E,	"a6",	0);
	create_insn	(x=0X43EF1C80);
	op_hex		(x,	1);
	set_cmt	(0X43EF1C89,	"a5",	0);
	set_cmt	(0X43EF1C8F,	"a4",	0);
	set_cmt	(0X43EF1C94,	"a3",	0);
	set_cmt	(0X43EF1C9A,	"a2",	0);
	set_cmt	(0X43EF1C9C,	"a1",	0);
	create_insn	(x=0X43EF1C9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF1CA6);
	op_hex		(x,	1);
	make_array	(0X43EF1CAE,	0X2);
	create_insn	(0X43EF1CB0);
	create_insn	(x=0X43EF1CF6);
	op_hex		(x,	1);
	create_insn	(0X43EF1CFF);
	make_array	(0X43EF1D12,	0XE);
	create_insn	(0X43EF1D20);
	create_insn	(x=0X43EF1D23);
	op_hex		(x,	1);
	make_array	(0X43EF1ED9,	0X7);
	create_insn	(0X43EF1EE0);
	make_array	(0X43EF1EEB,	0X5);
	create_insn	(0X43EF1EF0);
	create_insn	(x=0X43EF1EF3);
	op_hex		(x,	1);
	create_insn	(x=0X43EF1EF6);
	op_hex		(x,	1);
	create_insn	(x=0X43EF1EF9);
	op_hex		(x,	1);
	create_insn	(x=0X43EF1F06);
	op_hex		(x,	1);
	create_insn	(0X43EF1FD3);
	set_cmt	(0X43EF1FD4,	"killCount",	0);
	set_cmt	(0X43EF1FDB,	"this",	0);
	create_insn	(x=0X43EF1FDB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF1FE0,	"a2",	0);
	create_insn	(0X43EF2018);
	create_insn	(x=0X43EF2058);
	op_hex		(x,	1);
	create_insn	(0X43EF208F);
	create_insn	(x=0X43EF20B8);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2129);
	op_hex		(x,	1);
	set_cmt	(0X43EF216E,	"a3",	0);
	set_cmt	(0X43EF216F,	"a2",	0);
	set_cmt	(0X43EF2170,	"this",	0);
	create_insn	(x=0X43EF21AC);
	op_hex		(x,	1);
	set_cmt	(0X43EF21E2,	"a3",	0);
	set_cmt	(0X43EF21E3,	"a2",	0);
	set_cmt	(0X43EF21E4,	"this",	0);
	create_insn	(x=0X43EF223A);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2277);
	op_hex		(x,	1);
	create_insn	(x=0X43EF22E7);
	op_hex		(x,	1);
	create_insn	(x=0X43EF232E);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2337);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2350);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2384);
	op_hex		(x,	1);
	create_insn	(x=0X43EF23DE);
	op_hex		(x,	1);
	create_insn	(x=0X43EF23E3);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2424);
	op_hex		(x,	1);
	create_insn	(x=0X43EF242E);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2451);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2455);
	op_hex		(x,	1);
	create_insn	(0X43EF247F);
	create_insn	(x=0X43EF2492);
	op_hex		(x,	1);
	create_insn	(x=0X43EF24A1);
	op_hex		(x,	1);
	create_insn	(x=0X43EF24A6);
	op_hex		(x,	1);
	create_insn	(x=0X43EF24AF);
	op_hex		(x,	1);
	create_insn	(x=0X43EF24B9);
	op_hex		(x,	1);
	create_insn	(x=0X43EF24C1);
	op_hex		(x,	1);
	create_insn	(x=0X43EF24C5);
	op_hex		(x,	1);
	create_insn	(x=0X43EF24FA);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2569);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2578);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2591);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2596);
	op_hex		(x,	1);
	create_insn	(x=0X43EF25A9);
	op_hex		(x,	1);
	create_insn	(x=0X43EF25B7);
	op_hex		(x,	1);
	create_insn	(x=0X43EF25DC);
	op_hex		(x,	1);
	create_insn	(x=0X43EF25E0);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2615);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2624);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2629);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2632);
	op_hex		(x,	1);
	create_insn	(x=0X43EF263D);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2642);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2646);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2672);
	op_hex		(x,	1);
	create_insn	(x=0X43EF26D0);
	op_hex		(x,	1);
	create_insn	(x=0X43EF26D3);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2734);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2737);
	op_hex		(x,	1);
	set_cmt	(0X43EF2783,	"Size",	0);
	create_insn	(x=0X43EF2793);
	op_hex		(x,	1);
	create_insn	(x=0X43EF28F4);
	op_hex		(x,	1);
	make_array	(0X43EF2902,	0XE);
	create_insn	(0X43EF2910);
	create_insn	(x=0X43EF2913);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2916);
	op_hex		(x,	1);
	set_cmt	(0X43EF292E,	"index",	0);
	set_cmt	(0X43EF2937,	"interface",	0);
	set_cmt	(0X43EF2948,	"this",	0);
	create_insn	(0X43EF295F);
	create_insn	(x=0X43EF29CD);
	op_hex		(x,	1);
	create_insn	(x=0X43EF29FB);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2A30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EF2A44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF2A7D,	"this",	0);
	set_cmt	(0X43EF2A9B,	"index",	0);
	set_cmt	(0X43EF2AA0,	"interface",	0);
	set_cmt	(0X43EF2AAD,	"this",	0);
	set_cmt	(0X43EF2AC1,	"m_player",	0);
	create_insn	(0X43EF2ADE);
	create_insn	(x=0X43EF2B28);
	op_hex		(x,	1);
	set_cmt	(0X43EF2B57,	"_DWORD",	0);
	set_cmt	(0X43EF2B58,	"_DWORD",	0);
	create_insn	(x=0X43EF2B61);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2BAA);
	op_hex		(x,	1);
	set_cmt	(0X43EF2BD3,	"_DWORD",	0);
	set_cmt	(0X43EF2BD4,	"_DWORD",	0);
	create_insn	(x=0X43EF2BDD);
	op_hex		(x,	1);
	create_insn	(0X43EF2BEF);
	create_insn	(x=0X43EF2BF8);
	op_hex		(x,	1);
	set_cmt	(0X43EF2C44,	"propHash",	0);
	set_cmt	(0X43EF2C49,	"classHash",	0);
	create_insn	(0X43EF2C7B);
	create_insn	(x=0X43EF2CB7);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2CC4);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2CD3);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2CF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF2D2A,	"Size",	0);
	create_insn	(x=0X43EF2D37);
	op_hex		(x,	1);
	set_cmt	(0X43EF2D8F,	"_DWORD",	0);
	set_cmt	(0X43EF2D93,	"_DWORD",	0);
	set_cmt	(0X43EF2D96,	"_DWORD",	0);
	set_cmt	(0X43EF2D9A,	"_DWORD",	0);
	set_cmt	(0X43EF2D9D,	"_DWORD",	0);
	make_array	(0X43EF2DAE,	0X2);
	create_insn	(0X43EF2DB0);
	set_cmt	(0X43EF2DBD,	"_DWORD",	0);
	set_cmt	(0X43EF2DBF,	"_DWORD",	0);
	make_array	(0X43EF2DCB,	0X5);
	create_insn	(0X43EF2DD0);
	set_cmt	(0X43EF2DDC,	"index",	0);
	set_cmt	(0X43EF2DE4,	"interface",	0);
	set_cmt	(0X43EF2DF1,	"this",	0);
	set_cmt	(0X43EF2E0B,	"index",	0);
	set_cmt	(0X43EF2E10,	"interface",	0);
	set_cmt	(0X43EF2E1D,	"this",	0);
	set_cmt	(0X43EF2E29,	"m_pPlayer",	0);
	set_cmt	(0X43EF2E38,	"interface",	0);
	set_cmt	(0X43EF2E3E,	"index",	0);
	create_insn	(x=0X43EF2E95);
	op_hex		(x,	1);
	create_insn	(0X43EF2EA5);
	create_insn	(0X43EF2EB7);
	make_array	(0X43EF2ED4,	0XC);
	create_insn	(0X43EF2EE0);
	create_insn	(x=0X43EF2EE3);
	op_hex		(x,	1);
	create_insn	(x=0X43EF2EE6);
	op_hex		(x,	1);
	set_cmt	(0X43EF2EED,	"arg",	0);
	create_insn	(x=0X43EF2F45);
	op_hex		(x,	1);
	create_insn	(x=0X43EF331A);
	op_hex		(x,	1);
	set_cmt	(0X43EF3545,	"propHash",	0);
	set_cmt	(0X43EF354A,	"classHash",	0);
	set_cmt	(0X43EF36C4,	"propHash",	0);
	set_cmt	(0X43EF36C9,	"classHash",	0);
	create_insn	(x=0X43EF3850);
	op_hex		(x,	1);
	create_insn	(x=0X43EF3855);
	op_hex		(x,	1);
	create_insn	(x=0X43EF3862);
	op_hex		(x,	1);
	create_insn	(x=0X43EF388F);
	op_hex		(x,	1);
	create_insn	(x=0X43EF38A9);
	op_hex		(x,	1);
	set_cmt	(0X43EF3D52,	"propHash",	0);
	set_cmt	(0X43EF3D57,	"classHash",	0);
	create_insn	(0X43EF3EDA);
	set_cmt	(0X43EF3F08,	"propHash",	0);
	set_cmt	(0X43EF3F0D,	"classHash",	0);
	create_insn	(0X43EF408A);
	create_insn	(x=0X43EF4091);
	op_hex		(x,	1);
	create_insn	(x=0X43EF40B3);
	op_hex		(x,	1);
	create_insn	(x=0X43EF40CE);
	op_hex		(x,	1);
	create_insn	(x=0X43EF40DC);
	op_hex		(x,	1);
	set_cmt	(0X43EF454A,	"propHash",	0);
	set_cmt	(0X43EF454F,	"classHash",	0);
	set_cmt	(0X43EF46F3,	"propHash",	0);
	set_cmt	(0X43EF46F8,	"classHash",	0);
	create_insn	(0X43EF48FA);
	create_insn	(x=0X43EF49C8);
	op_hex		(x,	1);
	create_insn	(x=0X43EF49CB);
	op_hex		(x,	1);
	create_insn	(x=0X43EF4AE3);
	op_hex		(x,	1);
	create_insn	(x=0X43EF4AE6);
	op_hex		(x,	1);
	create_insn	(0X43EF4B8E);
	create_insn	(0X43EF4C1F);
	make_array	(0X43EF4C57,	0X9);
	create_insn	(0X43EF4C60);
	create_insn	(x=0X43EF4C63);
	op_hex		(x,	1);
	create_insn	(x=0X43EF4C66);
	op_hex		(x,	1);
	set_cmt	(0X43EF4C6D,	"arg",	0);
	create_insn	(x=0X43EF4CCB);
	op_hex		(x,	1);
	create_insn	(x=0X43EF5103);
	op_hex		(x,	1);
	create_insn	(x=0X43EF5A66);
	op_hex		(x,	1);
	create_insn	(x=0X43EF5A6B);
	op_hex		(x,	1);
	create_insn	(x=0X43EF61A0);
	op_hex		(x,	1);
	create_insn	(x=0X43EF6285);
	op_hex		(x,	1);
	set_cmt	(0X43EF6519,	"a2",	0);
	set_cmt	(0X43EF652B,	"a1",	0);
	set_cmt	(0X43EF66A3,	"a2",	0);
	set_cmt	(0X43EF66AF,	"a1",	0);
	create_insn	(x=0X43EF6771);
	op_hex		(x,	1);
	create_insn	(x=0X43EF6849);
	op_hex		(x,	1);
	create_insn	(x=0X43EF6877);
	op_hex		(x,	1);
	set_cmt	(0X43EF6AD9,	"a2",	0);
	set_cmt	(0X43EF6ADB,	"a1",	0);
	set_cmt	(0X43EF6C40,	"a2",	0);
	set_cmt	(0X43EF6C4A,	"a1",	0);
	make_array	(0X43EF6E58,	0X8);
	create_insn	(0X43EF6E60);
	create_insn	(x=0X43EF6E63);
	op_hex		(x,	1);
	create_insn	(x=0X43EF6E66);
	op_hex		(x,	1);
	create_insn	(x=0X43EF6EB0);
	op_hex		(x,	1);
	create_insn	(x=0X43EF6F88);
	op_hex		(x,	1);
	create_insn	(x=0X43EF6FB8);
	op_hex		(x,	1);
	set_cmt	(0X43EF726D,	"a2",	0);
	set_cmt	(0X43EF7278,	"a1",	0);
	set_cmt	(0X43EF7303,	"a2",	0);
	set_cmt	(0X43EF730B,	"a1",	0);
	set_cmt	(0X43EF7342,	"a2",	0);
	set_cmt	(0X43EF734A,	"a1",	0);
	create_insn	(x=0X43EF77BB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF77C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EF77CF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF77D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EF7942);
	create_insn	(0X43EF79BA);
	create_insn	(x=0X43EF7A45);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF7A4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EF7A59);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF7A60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EF7BCC);
	create_insn	(0X43EF7EAD);
	create_insn	(0X43EF7F1D);
	make_array	(0X43EF7F4C,	0X4);
	create_insn	(0X43EF7F50);
	create_insn	(x=0X43EF7F53);
	op_hex		(x,	1);
	create_insn	(x=0X43EF7F56);
	op_hex		(x,	1);
	create_insn	(x=0X43EF7F9B);
	op_hex		(x,	1);
	create_insn	(x=0X43EF8070);
	op_hex		(x,	1);
	create_insn	(x=0X43EF8325);
	op_hex		(x,	1);
	create_insn	(x=0X43EF8328);
	op_hex		(x,	1);
	set_cmt	(0X43EF83E9,	"a2",	0);
	set_cmt	(0X43EF83F3,	"a1",	0);
	create_insn	(x=0X43EF8867);
	op_hex		(x,	1);
	create_insn	(x=0X43EF886C);
	op_hex		(x,	1);
	create_insn	(x=0X43EF8897);
	op_hex		(x,	1);
	create_insn	(x=0X43EF889C);
	op_hex		(x,	1);
	create_insn	(x=0X43EF88EF);
	op_hex		(x,	1);
	create_insn	(0X43EF89A0);
	make_array	(0X43EF89CB,	0X5);
	create_insn	(0X43EF89D0);
	create_insn	(x=0X43EF89D3);
	op_hex		(x,	1);
	create_insn	(x=0X43EF89D6);
	op_hex		(x,	1);
	create_insn	(0X43EF89F3);
	create_insn	(x=0X43EF8A2A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF8A31);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EF8B09);
	create_insn	(0X43EF8B0E);
	create_insn	(0X43EF8B30);
	make_array	(0X43EF8B3D,	0X3);
	create_insn	(0X43EF8B40);
	make_array	(0X43EF8B4D,	0X3);
	create_insn	(0X43EF8B50);
	create_insn	(0X43EF8B60);
	create_insn	(x=0X43EF8B63);
	op_hex		(x,	1);
	create_insn	(x=0X43EF8B74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF8B7D,	"propHash",	0);
	set_cmt	(0X43EF8B82,	"classHash",	0);
	set_cmt	(0X43EF8B96,	"index",	0);
	set_cmt	(0X43EF8BA1,	"interface",	0);
	set_cmt	(0X43EF8BB3,	"this",	0);
	create_insn	(x=0X43EF8BE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EF8BEB);
	create_insn	(x=0X43EF8BEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EF8C02);
	op_hex		(x,	1);
	create_insn	(x=0X43EF8C6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF8C79,	"srcAngle",	0);
	create_insn	(x=0X43EF8C79);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF8C81,	"distAngle",	0);
	create_insn	(0X43EF8CA2);
	set_cmt	(0X43EF8CB5,	"propHash",	0);
	set_cmt	(0X43EF8CBA,	"classHash",	0);
	set_cmt	(0X43EF8CD2,	"index",	0);
	set_cmt	(0X43EF8CD7,	"interface",	0);
	set_cmt	(0X43EF8CE4,	"this",	0);
	set_cmt	(0X43EF8CFF,	"propHash",	0);
	set_cmt	(0X43EF8D04,	"classHash",	0);
	set_cmt	(0X43EF8D4B,	"a2",	0);
	set_cmt	(0X43EF8D4E,	"a1",	0);
	create_insn	(x=0X43EF8D7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EF8D91);
	create_insn	(x=0X43EF8DB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EF8DC9);
	create_insn	(x=0X43EF8DD2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF8DDB,	"distAngle",	0);
	create_insn	(x=0X43EF8DDB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF8DE3,	"srcAngle",	0);
	create_insn	(x=0X43EF8DE3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EF8E05);
	create_insn	(x=0X43EF8E0E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EF8E23);
	create_insn	(x=0X43EF8E26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EF8E37);
	create_insn	(0X43EF8E52);
	create_insn	(0X43EF8E65);
	create_insn	(0X43EF8E80);
	create_insn	(0X43EF8E9F);
	create_insn	(0X43EF8EAE);
	set_cmt	(0X43EF8EB3,	"distAngle",	0);
	set_cmt	(0X43EF8ECB,	"srcAngle",	0);
	set_cmt	(0X43EF8ED8,	"distAngle",	0);
	set_cmt	(0X43EF8EE0,	"srcAngle",	0);
	create_insn	(0X43EF8EFB);
	create_insn	(x=0X43EF8EFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EF8F0F);
	create_insn	(x=0X43EF8F12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EF8F23);
	create_insn	(0X43EF8F34);
	make_array	(0X43EF8F39,	0X7);
	create_insn	(0X43EF8F40);
	create_insn	(x=0X43EF8F43);
	op_hex		(x,	1);
	create_insn	(x=0X43EF8F46);
	op_hex		(x,	1);
	set_cmt	(0X43EF8F67,	"propHash",	0);
	set_cmt	(0X43EF8F6C,	"classHash",	0);
	set_cmt	(0X43EF8F7E,	"index",	0);
	set_cmt	(0X43EF8F89,	"interface",	0);
	set_cmt	(0X43EF8FB6,	"arg",	0);
	set_cmt	(0X43EF8FD5,	"this",	0);
	set_cmt	(0X43EF8FEC,	"propHash",	0);
	set_cmt	(0X43EF8FF1,	"classHash",	0);
	create_insn	(x=0X43EF9079);
	op_hex		(x,	1);
	create_insn	(0X43EF90DF);
	create_insn	(0X43EF9130);
	create_insn	(x=0X43EF915A);
	op_hex		(x,	1);
	create_insn	(0X43EF91B2);
	create_insn	(0X43EF920A);
	make_array	(0X43EF9214,	0XC);
	create_insn	(0X43EF9220);
	create_insn	(x=0X43EF9223);
	op_hex		(x,	1);
	create_insn	(x=0X43EF9226);
	op_hex		(x,	1);
	set_cmt	(0X43EF9247,	"propHash",	0);
	set_cmt	(0X43EF924C,	"classHash",	0);
	set_cmt	(0X43EF925E,	"index",	0);
	set_cmt	(0X43EF9269,	"interface",	0);
	set_cmt	(0X43EF9296,	"arg",	0);
	set_cmt	(0X43EF92B5,	"this",	0);
	set_cmt	(0X43EF92CC,	"propHash",	0);
	set_cmt	(0X43EF92D1,	"classHash",	0);
	create_insn	(x=0X43EF9359);
	op_hex		(x,	1);
	create_insn	(0X43EF93BF);
	create_insn	(0X43EF9411);
	create_insn	(x=0X43EF943B);
	op_hex		(x,	1);
	create_insn	(0X43EF9493);
	create_insn	(0X43EF94D7);
	make_array	(0X43EF9521,	0XF);
	create_insn	(0X43EF9530);
	create_insn	(x=0X43EF9535);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EF953B);
	create_insn	(x=0X43EF953E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EF9543);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43EF954C,	0X4);
	create_insn	(0X43EF9550);
	create_insn	(x=0X43EF9553);
	op_hex		(x,	1);
	set_cmt	(0X43EF9556,	"interface",	0);
	create_insn	(x=0X43EF955C);
	op_hex		(x,	1);
	set_cmt	(0X43EF955F,	"index",	0);
	set_cmt	(0X43EF956B,	"arg",	0);
	set_cmt	(0X43EF9573,	"this",	0);
	create_insn	(x=0X43EF958C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EF9598);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF95A0,	"this",	0);
	set_cmt	(0X43EF95CE,	"propHash",	0);
	set_cmt	(0X43EF95D3,	"classHash",	0);
	set_cmt	(0X43EF95F5,	"propHash",	0);
	set_cmt	(0X43EF95FA,	"classHash",	0);
	create_insn	(0X43EF9643);
	set_cmt	(0X43EF964C,	"propHash",	0);
	set_cmt	(0X43EF9651,	"classHash",	0);
	create_insn	(x=0X43EF968C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF96AA,	"index",	0);
	set_cmt	(0X43EF96AF,	"interface",	0);
	set_cmt	(0X43EF96BC,	"this",	0);
	set_cmt	(0X43EF96D3,	"propHash",	0);
	set_cmt	(0X43EF96D8,	"classHash",	0);
	set_cmt	(0X43EF9700,	"this",	0);
	create_insn	(x=0X43EF971F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EF972B);
	create_insn	(x=0X43EF9739);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9742);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EF9749);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EF974F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EF975E);
	set_cmt	(0X43EF9774,	"index",	0);
	set_cmt	(0X43EF9779,	"interface",	0);
	set_cmt	(0X43EF9786,	"this",	0);
	create_insn	(x=0X43EF979F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF97BA,	"propHash",	0);
	set_cmt	(0X43EF97BF,	"classHash",	0);
	set_cmt	(0X43EF97FA,	"propHash",	0);
	set_cmt	(0X43EF97FF,	"classHash",	0);
	set_cmt	(0X43EF9821,	"propHash",	0);
	set_cmt	(0X43EF9826,	"classHash",	0);
	create_insn	(x=0X43EF98B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF98B9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EF98E3);
	create_insn	(0X43EF98F6);
	create_insn	(x=0X43EF9906);
	op_hex		(x,	1);
	create_insn	(0X43EF991F);
	create_insn	(x=0X43EF9924);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF992F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF993A,	"propHash",	0);
	set_cmt	(0X43EF993F,	"classHash",	0);
	create_insn	(x=0X43EF9951);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF995C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EF998C);
	create_insn	(0X43EF999F);
	create_insn	(x=0X43EF99AF);
	op_hex		(x,	1);
	create_insn	(0X43EF99CF);
	create_insn	(x=0X43EF99D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF99DF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF99EA,	"propHash",	0);
	set_cmt	(0X43EF99EF,	"classHash",	0);
	create_insn	(x=0X43EF9A01);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9A07);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EF9A10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9A19);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9A1F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EF9A46);
	create_insn	(0X43EF9A59);
	create_insn	(x=0X43EF9A69);
	op_hex		(x,	1);
	create_insn	(0X43EF9A82);
	create_insn	(x=0X43EF9A9B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9AA2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9AAA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9AB3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EF9AB9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9ACD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9AD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EF9ADD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EF9AE3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EF9AEE);
	create_insn	(x=0X43EF9AFA);
	op_hex		(x,	1);
	create_insn	(x=0X43EF9B01);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9B18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EF9B49,	"interface",	0);
	set_cmt	(0X43EF9B4F,	"index",	0);
	set_cmt	(0X43EF9B7F,	"propHash",	0);
	set_cmt	(0X43EF9B84,	"classHash",	0);
	set_cmt	(0X43EF9B9D,	"index",	0);
	set_cmt	(0X43EF9BA2,	"interface",	0);
	set_cmt	(0X43EF9BAF,	"this",	0);
	set_cmt	(0X43EF9BC7,	"propHash",	0);
	set_cmt	(0X43EF9BCC,	"classHash",	0);
	create_insn	(x=0X43EF9CB8);
	op_hex		(x,	1);
	create_insn	(x=0X43EF9CBD);
	op_hex		(x,	1);
	create_insn	(x=0X43EF9CD8);
	op_hex		(x,	1);
	create_insn	(x=0X43EF9CDB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EF9D13,	"angles",	0);
	create_insn	(x=0X43EF9D76);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EF9D80);
	create_insn	(x=0X43EF9D9D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EF9DA7);
	create_insn	(x=0X43EF9DAF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9DB9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9DBF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EF9DC8);
	create_insn	(x=0X43EF9DCD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9DD3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9DDA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9DE1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9DE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9DEF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43EF9E11,	0XF);
	create_insn	(0X43EF9E20);
	create_insn	(x=0X43EF9E23);
	op_hex		(x,	1);
	set_cmt	(0X43EF9E72,	"interface",	0);
	set_cmt	(0X43EF9E78,	"index",	0);
	create_insn	(x=0X43EF9EB5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EF9EBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EF9ECF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EF9ED7);
	create_insn	(0X43EF9EF7);
	create_insn	(0X43EF9F00);
	set_cmt	(0X43EF9F0B,	"_DWORD",	0);
	set_cmt	(0X43EF9F0C,	"_DWORD",	0);
	set_cmt	(0X43EF9F0F,	"_DWORD",	0);
	set_cmt	(0X43EF9F12,	"_DWORD",	0);
	set_cmt	(0X43EF9F2E,	"interface",	0);
	set_cmt	(0X43EF9F34,	"index",	0);
	set_cmt	(0X43EF9F47,	"this",	0);
	set_cmt	(0X43EF9F65,	"propHash",	0);
	set_cmt	(0X43EF9F6A,	"classHash",	0);
	create_insn	(x=0X43EF9F79);
	op_hex		(x,	1);
	create_insn	(x=0X43EF9F86);
	op_hex		(x,	1);
	set_cmt	(0X43EF9F9A,	"propHash",	0);
	set_cmt	(0X43EF9F9F,	"classHash",	0);
	set_cmt	(0X43EF9FCB,	"propHash",	0);
	set_cmt	(0X43EF9FD0,	"classHash",	0);
	set_cmt	(0X43EF9FF6,	"propHash",	0);
	set_cmt	(0X43EF9FFB,	"classHash",	0);
	set_cmt	(0X43EFA028,	"propHash",	0);
	set_cmt	(0X43EFA02D,	"classHash",	0);
	make_array	(0X43EFA059,	0X7);
	create_insn	(0X43EFA060);
	create_insn	(x=0X43EFA063);
	op_hex		(x,	1);
	set_cmt	(0X43EFA07B,	"interface",	0);
	set_cmt	(0X43EFA081,	"index",	0);
	set_cmt	(0X43EFA094,	"this",	0);
	set_cmt	(0X43EFA0AB,	"index",	0);
	set_cmt	(0X43EFA0B0,	"interface",	0);
	set_cmt	(0X43EFA0BD,	"this",	0);
	set_cmt	(0X43EFA0CD,	"_DWORD",	0);
	set_cmt	(0X43EFA0D0,	"_DWORD",	0);
	create_insn	(x=0X43EFA0E7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EFA123,	"_DWORD",	0);
	create_insn	(0X43EFA123);
	set_cmt	(0X43EFA126,	"_DWORD",	0);
	make_array	(0X43EFA135,	0XB);
	create_insn	(0X43EFA140);
	set_cmt	(0X43EFA143,	"_DWORD",	0);
	create_insn	(x=0X43EFA151);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFA15C);
	op_hex		(x,	1);
	make_array	(0X43EFA173,	0XD);
	create_insn	(0X43EFA180);
	set_name	(0X43EFA180,	"OneTap::Features::Hooks::LockCursor");
	create_insn	(0X43EFA197);
	create_insn	(0X43EFA1A0);
	create_insn	(x=0X43EFA1A3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA1AC);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA235);
	op_hex		(x,	1);
	set_cmt	(0X43EFA2D3,	"message",	0);
	set_cmt	(0X43EFA2D4,	"a6",	0);
	create_insn	(x=0X43EFA2D6);
	op_hex		(x,	1);
	set_cmt	(0X43EFA2E0,	"a5",	0);
	set_cmt	(0X43EFA2E6,	"a4",	0);
	set_cmt	(0X43EFA2ED,	"a3",	0);
	set_cmt	(0X43EFA2F1,	"a2",	0);
	set_cmt	(0X43EFA2F3,	"a1",	0);
	create_insn	(x=0X43EFA2F3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFA30B);
	op_hex		(x,	1);
	create_insn	(0X43EFA3A2);
	create_insn	(0X43EFA3CE);
	create_insn	(0X43EFA3F6);
	create_insn	(0X43EFA41D);
	create_insn	(0X43EFA432);
	create_insn	(x=0X43EFA442);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA479);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA4A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EFA4C3);
	make_array	(0X43EFA4C8,	0X8);
	create_insn	(0X43EFA4D0);
	set_name	(0X43EFA4D0,	"OneTap::Logger::ToEvent");
	create_insn	(x=0X43EFA4D3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA4D6);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA4DC);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFA4DF,	"decodeSize",	0);
	set_cmt	(0X43EFA4E0,	"len",	0);
	create_insn	(x=0X43EFA4E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA4E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA509);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA50C);
	op_hex		(x,	1);
	set_cmt	(0X43EFA517,	"num",	0);
	create_insn	(x=0X43EFA51C);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFA523,	"value",	0);
	set_cmt	(0X43EFA525,	"pointer",	0);
	create_insn	(x=0X43EFA530);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA534);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA537);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA53F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA551);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA559);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA561);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA566);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA573);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA577);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA57B);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA57E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA583);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA591);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA596);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA59D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA5A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA5A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA5AD);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA5B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA5B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA5C3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA5C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA5CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA5E9);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFA5F0,	"len",	0);
	create_insn	(x=0X43EFA5F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA5FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA603);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA608);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA60D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA612);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA615);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA619);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFA63D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA64F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA69D);
	op_hex		(x,	1);
	create_insn	(0X43EFA6C3);
	create_insn	(x=0X43EFA6D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA6DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA6E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA6EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA6F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA6FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA702);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA719);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFA720,	"a3",	0);
	set_cmt	(0X43EFA721,	"a2",	0);
	set_cmt	(0X43EFA722,	"this",	0);
	create_insn	(x=0X43EFA722);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA744);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA748);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA74C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA751);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA758);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA75C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA760);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA764);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA768);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA774);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA777);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA77C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA78F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA792);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA7A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA7A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA7B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA7BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA7C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA7CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA7D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA7DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA7F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA7F8);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA7FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA800);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA80E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA812);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA816);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA81B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA81F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA823);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA828);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA82C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA830);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA834);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA83D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA841);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA84A);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA84D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA856);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA85F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA88B);
	op_hex		(x,	1);
	make_array	(0X43EFA894,	0XC);
	create_insn	(0X43EFA8A0);
	set_name	(0X43EFA8A0,	"C_SDK::Security::FNV1A::SearchSignature::EngineEx");
	create_insn	(x=0X43EFA8A3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA8A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA8DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA8EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA8F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA8FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA90B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA913);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA92A);
	op_stkvar	(x,	0);
	create_insn	(0X43EFA939);
	create_insn	(x=0X43EFA93B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA944);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA947);
	op_hex		(x,	1);
	create_insn	(x=0X43EFA94A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFA954);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFA95C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA961);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA966);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA969);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFA96C,	"hash",	0);
	create_insn	(x=0X43EFA98F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA994);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFA9B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFA9BB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EFA9CB);
	create_insn	(x=0X43EFA9CD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA9D6);
	op_stkvar	(x,	0);
	create_insn	(0X43EFA9E6);
	create_insn	(x=0X43EFA9ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFA9FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFAA11);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFAA14);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFAA21);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFAA37);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFAA3B);
	op_stkvar	(x,	0);
	create_insn	(0X43EFAA41);
	create_insn	(x=0X43EFAA49);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFAA4D);
	op_stkvar	(x,	0);
	create_insn	(0X43EFAA53);
	create_insn	(x=0X43EFAA5B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFAA5F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFAA64);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFAA69);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFAA81);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFAA90);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFAAAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFAAB1);
	op_stkvar	(x,	1);
	make_array	(0X43EFAABC,	0X4);
	create_insn	(0X43EFAAC0);
	create_insn	(x=0X43EFAAC3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFAAC6);
	op_hex		(x,	1);
	set_cmt	(0X43EFAADF,	"index",	0);
	set_cmt	(0X43EFAAE4,	"interface",	0);
	set_cmt	(0X43EFAAF1,	"this",	0);
	set_cmt	(0X43EFAB0B,	"index",	0);
	set_cmt	(0X43EFAB10,	"interface",	0);
	set_cmt	(0X43EFAB1D,	"this",	0);
	set_cmt	(0X43EFAB29,	"m_pPlayer",	0);
	set_cmt	(0X43EFAB80,	"this",	0);
	set_cmt	(0X43EFAB8A,	"a2",	0);
	create_insn	(x=0X43EFACCE);
	op_hex		(x,	1);
	create_insn	(0X43EFACF7);
	create_insn	(0X43EFAD39);
	create_insn	(x=0X43EFAD54);
	op_hex		(x,	1);
	create_insn	(0X43EFAD79);
	create_insn	(x=0X43EFADC6);
	op_hex		(x,	1);
	create_insn	(x=0X43EFADCB);
	op_hex		(x,	1);
	create_insn	(x=0X43EFADD8);
	op_hex		(x,	1);
	create_insn	(x=0X43EFADDB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFADF0);
	op_hex		(x,	1);
	create_insn	(0X43EFAE03);
	set_cmt	(0X43EFAE0F,	"cmd",	0);
	create_insn	(x=0X43EFAE0F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFAE1B);
	op_hex		(x,	1);
	create_insn	(0X43EFAEA0);
	create_insn	(x=0X43EFAEA8);
	op_hex		(x,	1);
	create_insn	(x=0X43EFAEAF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFAEB9);
	op_hex		(x,	1);
	set_cmt	(0X43EFAEBC,	"interface",	0);
	set_cmt	(0X43EFAEC2,	"index",	0);
	set_cmt	(0X43EFAEE1,	"this",	0);
	set_cmt	(0X43EFAF46,	"index",	0);
	set_cmt	(0X43EFAF4B,	"interface",	0);
	set_cmt	(0X43EFAF66,	"this",	0);
	create_insn	(0X43EFAFBA);
	set_cmt	(0X43EFAFC0,	"index",	0);
	set_cmt	(0X43EFAFC5,	"interface",	0);
	set_cmt	(0X43EFAFD2,	"this",	0);
	set_cmt	(0X43EFAFE9,	"propHash",	0);
	set_cmt	(0X43EFAFEE,	"classHash",	0);
	set_cmt	(0X43EFB010,	"propHash",	0);
	set_cmt	(0X43EFB015,	"classHash",	0);
	set_cmt	(0X43EFB034,	"index",	0);
	set_cmt	(0X43EFB039,	"interface",	0);
	set_cmt	(0X43EFB054,	"this",	0);
	create_insn	(0X43EFB092);
	create_insn	(0X43EFB0B7);
	create_insn	(0X43EFB0FD);
	create_insn	(0X43EFB119);
	set_cmt	(0X43EFB133,	"index",	0);
	set_cmt	(0X43EFB13E,	"interface",	0);
	set_cmt	(0X43EFB153,	"this",	0);
	make_array	(0X43EFB1D4,	0XC);
	create_insn	(0X43EFB1E0);
	set_cmt	(0X43EFB1E3,	"interface",	0);
	create_insn	(x=0X43EFB1E9);
	op_hex		(x,	1);
	set_cmt	(0X43EFB1EC,	"index",	0);
	set_cmt	(0X43EFB1FF,	"this",	0);
	set_cmt	(0X43EFB219,	"index",	0);
	set_cmt	(0X43EFB21E,	"interface",	0);
	set_cmt	(0X43EFB22B,	"this",	0);
	set_cmt	(0X43EFB237,	"player",	0);
	set_cmt	(0X43EFB279,	"interface",	0);
	set_cmt	(0X43EFB27F,	"index",	0);
	create_insn	(0X43EFB2B6);
	create_insn	(x=0X43EFB2DE);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB2E3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB2F0);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB2F3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFB308);
	op_hex		(x,	1);
	set_cmt	(0X43EFB31B,	"index",	0);
	set_cmt	(0X43EFB320,	"interface",	0);
	set_cmt	(0X43EFB32D,	"this",	0);
	set_cmt	(0X43EFB344,	"propHash",	0);
	set_cmt	(0X43EFB349,	"classHash",	0);
	set_cmt	(0X43EFB35C,	"index",	0);
	set_cmt	(0X43EFB361,	"interface",	0);
	set_cmt	(0X43EFB377,	"this",	0);
	set_cmt	(0X43EFB383,	"player",	0);
	set_cmt	(0X43EFB3A8,	"propHash",	0);
	set_cmt	(0X43EFB3AD,	"classHash",	0);
	create_insn	(0X43EFB3E4);
	set_cmt	(0X43EFB3EB,	"this",	0);
	set_cmt	(0X43EFB3F7,	"player",	0);
	set_cmt	(0X43EFB41C,	"propHash",	0);
	set_cmt	(0X43EFB421,	"classHash",	0);
	create_insn	(0X43EFB458);
	make_array	(0X43EFB46B,	0X5);
	create_insn	(0X43EFB470);
	create_insn	(x=0X43EFB473);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB476);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB48D);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB492);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB4A0);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB4A3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFB4B8);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB4CC);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB4D1);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB4DE);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB4E1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFB4E7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EFB4FB);
	set_cmt	(0X43EFB56E,	"index",	0);
	set_cmt	(0X43EFB57D,	"interface",	0);
	set_cmt	(0X43EFB5A8,	"this",	0);
	set_cmt	(0X43EFB5BF,	"propHash",	0);
	set_cmt	(0X43EFB5C4,	"classHash",	0);
	create_insn	(x=0X43EFB60C);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB61C);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB629);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB62C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFB660);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB665);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB672);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB675);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EFB69D);
	create_insn	(x=0X43EFB6BE);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB6C3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB6D0);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB6D3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43EFB6F3,	0XD);
	create_insn	(0X43EFB700);
	set_name	(0X43EFB700,	"OneTap::Features::Misc::AutoDefuse");
	create_insn	(x=0X43EFB703);
	op_hex		(x,	1);
	create_insn	(x=0X43EFB706);
	op_hex		(x,	1);
	set_cmt	(0X43EFB71F,	"index",	0);
	set_cmt	(0X43EFB724,	"interface",	0);
	set_cmt	(0X43EFB731,	"this",	0);
	set_cmt	(0X43EFB74B,	"index",	0);
	set_cmt	(0X43EFB750,	"interface",	0);
	set_cmt	(0X43EFB75D,	"this",	0);
	set_cmt	(0X43EFB769,	"m_pPlayer",	0);
	set_cmt	(0X43EFB77E,	"index",	0);
	set_cmt	(0X43EFB783,	"interface",	0);
	set_cmt	(0X43EFB790,	"this",	0);
	set_cmt	(0X43EFB7A7,	"propHash",	0);
	set_cmt	(0X43EFB7AC,	"classHash",	0);
	set_cmt	(0X43EFB7CB,	"index",	0);
	set_cmt	(0X43EFB7D6,	"interface",	0);
	set_cmt	(0X43EFB7E3,	"this",	0);
	set_cmt	(0X43EFB7FA,	"propHash",	0);
	set_cmt	(0X43EFB7FF,	"classHash",	0);
	create_insn	(0X43EFB81E);
	create_insn	(x=0X43EFB82D);
	op_stkvar	(x,	0);
	set_cmt	(0X43EFB835,	"propHash",	0);
	set_cmt	(0X43EFB83A,	"classHash",	0);
	set_cmt	(0X43EFB84F,	"index",	0);
	set_cmt	(0X43EFB854,	"interface",	0);
	set_cmt	(0X43EFB861,	"this",	0);
	set_cmt	(0X43EFB876,	"propHash",	0);
	set_cmt	(0X43EFB87B,	"classHash",	0);
	set_cmt	(0X43EFB893,	"propHash",	0);
	set_cmt	(0X43EFB898,	"classHash",	0);
	set_cmt	(0X43EFB8AD,	"index",	0);
	create_insn	(x=0X43EFB8C2);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFB8D1,	"interface",	0);
	set_cmt	(0X43EFB8EA,	"this",	0);
	set_cmt	(0X43EFB901,	"propHash",	0);
	set_cmt	(0X43EFB906,	"classHash",	0);
	set_cmt	(0X43EFB92A,	"propHash",	0);
	set_cmt	(0X43EFB92F,	"classHash",	0);
	create_insn	(x=0X43EFB95B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFB961);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFB967);
	op_stkvar	(x,	0);
	set_cmt	(0X43EFB9A7,	"index",	0);
	set_cmt	(0X43EFB9AC,	"interface",	0);
	set_cmt	(0X43EFB9B9,	"this",	0);
	set_cmt	(0X43EFB9D0,	"propHash",	0);
	set_cmt	(0X43EFB9D5,	"classHash",	0);
	set_cmt	(0X43EFB9FF,	"cmd",	0);
	create_insn	(x=0X43EFB9FF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EFBA0F,	"index",	0);
	set_cmt	(0X43EFBA14,	"interface",	0);
	set_cmt	(0X43EFBA23,	"this",	0);
	set_cmt	(0X43EFBA3B,	"propHash",	0);
	set_cmt	(0X43EFBA40,	"classHash",	0);
	set_cmt	(0X43EFBA5B,	"propHash",	0);
	set_cmt	(0X43EFBA60,	"classHash",	0);
	set_cmt	(0X43EFBA74,	"a2",	0);
	create_insn	(x=0X43EFBA7C);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFBA82,	"a1",	0);
	create_insn	(x=0X43EFBA82);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFBA96);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFBA9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFBAB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFBAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFBAC2);
	op_stkvar	(x,	0);
	set_cmt	(0X43EFBACD,	"cmd",	0);
	create_insn	(x=0X43EFBACD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFBAD9);
	op_hex		(x,	1);
	make_array	(0X43EFBAE4,	0XC);
	create_insn	(0X43EFBAF0);
	create_insn	(x=0X43EFBAF3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFBAF6);
	op_hex		(x,	1);
	set_cmt	(0X43EFBB15,	"index",	0);
	set_cmt	(0X43EFBB1A,	"interface",	0);
	set_cmt	(0X43EFBB27,	"this",	0);
	set_cmt	(0X43EFBB33,	"player",	0);
	set_cmt	(0X43EFBB48,	"index",	0);
	set_cmt	(0X43EFBB4D,	"interface",	0);
	set_cmt	(0X43EFBB5A,	"this",	0);
	set_cmt	(0X43EFBB66,	"player",	0);
	set_cmt	(0X43EFBB78,	"propHash",	0);
	set_cmt	(0X43EFBB7D,	"classHash",	0);
	set_cmt	(0X43EFBBA1,	"switch 84 cases ",	0);
	create_insn	(x=0X43EFBBAB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EFBBB2,	"switch jump",	0);
	create_insn	(x=0X43EFBBB2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EFBBB9,	"jumptable 43EFBBB2 cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-40,60,61,63,64",	1);
	create_insn	(0X43EFBBB9);
	set_cmt	(0X43EFBBBF,	"index",	0);
	set_cmt	(0X43EFBBC4,	"interface",	0);
	set_cmt	(0X43EFBBD1,	"this",	0);
	set_cmt	(0X43EFBC15,	"propHash",	0);
	set_cmt	(0X43EFBC1A,	"classHash",	0);
	set_cmt	(0X43EFBC3C,	"propHash",	0);
	set_cmt	(0X43EFBC41,	"classHash",	0);
	create_insn	(0X43EFBC66);
	set_cmt	(0X43EFBC6A,	"propHash",	0);
	set_cmt	(0X43EFBC6F,	"classHash",	0);
	set_cmt	(0X43EFBC95,	"propHash",	0);
	set_cmt	(0X43EFBC9A,	"classHash",	0);
	create_insn	(x=0X43EFBCCC);
	op_hex		(x,	1);
	create_insn	(x=0X43EFBCD1);
	op_hex		(x,	1);
	create_insn	(x=0X43EFBCDE);
	op_hex		(x,	1);
	create_insn	(x=0X43EFBCE1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EFBD70,	"index",	0);
	set_cmt	(0X43EFBD75,	"interface",	0);
	set_cmt	(0X43EFBD93,	"this",	0);
	set_cmt	(0X43EFBD9F,	"player",	0);
	set_cmt	(0X43EFBDC7,	"propHash",	0);
	set_cmt	(0X43EFBDCC,	"classHash",	0);
	set_cmt	(0X43EFBE45,	"jumptable 43EFBBB2 default case, cases 5,6,12,15,18,20-22,31,37,41-59,62,65-84",	1);
	set_name	(0X43EFBE45,	"def_43EFBBB2");
	set_cmt	(0X43EFBE4C,	"jump table for switch statement",	0);
	create_dword	(x=0X43EFBE4C);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EFBE4C,	"jpt_43EFBBB2");
	set_cmt	(0X43EFBE58,	"indirect table for switch statement",	0);
	create_byte	(0X43EFBE58);
	make_array	(0X43EFBE58,	0X54);
	make_array	(0X43EFBEAC,	0X4);
	create_insn	(0X43EFBEB0);
	create_insn	(x=0X43EFBECF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFBED4);
	op_hex		(x,	1);
	create_insn	(x=0X43EFBEE1);
	op_hex		(x,	1);
	create_insn	(x=0X43EFBEE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFBEF9);
	op_hex		(x,	1);
	make_array	(0X43EFBF01,	0XF);
	create_insn	(0X43EFBF10);
	create_insn	(x=0X43EFBF13);
	op_hex		(x,	1);
	create_insn	(x=0X43EFBF16);
	op_hex		(x,	1);
	create_insn	(x=0X43EFBF3A);
	op_hex		(x,	1);
	create_insn	(x=0X43EFBF3F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFBF4C);
	op_hex		(x,	1);
	create_insn	(x=0X43EFBF4F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFBF55);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EFBF69);
	create_insn	(x=0X43EFBF6D);
	op_hex		(x,	1);
	create_insn	(0X43EFBF84);
	create_insn	(x=0X43EFBF88);
	op_hex		(x,	1);
	create_insn	(0X43EFBF9F);
	create_insn	(x=0X43EFBFA3);
	op_hex		(x,	1);
	set_cmt	(0X43EFBFA9,	"cmd",	0);
	create_insn	(x=0X43EFBFA9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFBFB5);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC002);
	op_hex		(x,	1);
	set_cmt	(0X43EFC012,	"index",	0);
	set_cmt	(0X43EFC017,	"interface",	0);
	set_cmt	(0X43EFC024,	"this",	0);
	set_cmt	(0X43EFC03B,	"propHash",	0);
	set_cmt	(0X43EFC040,	"classHash",	0);
	create_insn	(x=0X43EFC087);
	op_hex		(x,	1);
	set_cmt	(0X43EFC097,	"index",	0);
	set_cmt	(0X43EFC09C,	"interface",	0);
	set_cmt	(0X43EFC0A9,	"this",	0);
	set_cmt	(0X43EFC0C0,	"propHash",	0);
	set_cmt	(0X43EFC0C5,	"classHash",	0);
	create_insn	(x=0X43EFC0D4);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC0E7);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC0EC);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC0F9);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC0FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFC111);
	op_hex		(x,	1);
	make_array	(0X43EFC129,	0X7);
	create_insn	(0X43EFC130);
	make_array	(0X43EFC142,	0XE);
	create_insn	(0X43EFC150);
	make_array	(0X43EFC16B,	0X5);
	create_insn	(0X43EFC170);
	make_array	(0X43EFC17B,	0X5);
	create_insn	(0X43EFC180);
	create_insn	(x=0X43EFC188);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC18D);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC1BC);
	op_hex		(x,	1);
	make_array	(0X43EFC1C3,	0XD);
	create_insn	(0X43EFC1D0);
	create_insn	(x=0X43EFC1E8);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC1EC);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC1F1);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC1F5);
	op_hex		(x,	1);
	make_array	(0X43EFC203,	0XD);
	create_insn	(0X43EFC210);
	create_insn	(x=0X43EFC218);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC21E);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC22C);
	op_hex		(x,	1);
	create_insn	(0X43EFC2BA);
	set_cmt	(0X43EFC2C5,	"interface",	0);
	create_insn	(0X43EFC2C5);
	create_insn	(x=0X43EFC317);
	op_hex		(x,	1);
	create_insn	(0X43EFC34F);
	create_insn	(0X43EFC362);
	set_cmt	(0X43EFC36A,	"index",	0);
	create_insn	(x=0X43EFC390);
	op_hex		(x,	1);
	set_cmt	(0X43EFC3E8,	"propHash",	0);
	set_cmt	(0X43EFC3ED,	"classHash",	0);
	set_cmt	(0X43EFC431,	"propHash",	0);
	set_cmt	(0X43EFC436,	"classHash",	0);
	make_array	(0X43EFC497,	0X9);
	create_insn	(0X43EFC4A0);
	set_name	(0X43EFC4A0,	"OneTap::Features::Misc::ClanTag::Instance");
	create_insn	(x=0X43EFC4A3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC4A6);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC4A9);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC4B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFC4BB);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC4C0);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC4CF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC527);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC564);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC574);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EFC599,	"a3",	0);
	set_cmt	(0X43EFC59A,	"a2",	0);
	create_insn	(x=0X43EFC59A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EFC59F,	"this",	0);
	create_insn	(x=0X43EFC5AC);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC5B0);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC5D4);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC5D8);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC5E6);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC5EF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC637);
	op_hex		(x,	1);
	set_cmt	(0X43EFC67F,	"a3",	0);
	set_cmt	(0X43EFC680,	"a2",	0);
	set_cmt	(0X43EFC681,	"this",	0);
	create_insn	(x=0X43EFC681);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFC693);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFC6A2);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC6A5);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC6AE);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC6C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFC6F7);
	op_hex		(x,	1);
	set_cmt	(0X43EFC73F,	"a3",	0);
	set_cmt	(0X43EFC740,	"a2",	0);
	set_cmt	(0X43EFC741,	"this",	0);
	create_insn	(x=0X43EFC741);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFC753);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFC762);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC765);
	op_hex		(x,	1);
	set_cmt	(0X43EFC769,	"size",	0);
	set_cmt	(0X43EFC76B,	"from",	0);
	create_insn	(x=0X43EFC771);
	op_hex		(x,	1);
	set_cmt	(0X43EFC774,	"to",	0);
	create_insn	(x=0X43EFC774);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFC783);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFC78D);
	op_hex		(x,	1);
	set_cmt	(0X43EFC7BB,	"a3",	0);
	set_cmt	(0X43EFC7C0,	"this",	0);
	create_insn	(x=0X43EFC7C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EFC7C5,	"a2",	0);
	set_cmt	(0X43EFC7D2,	"a3",	0);
	set_cmt	(0X43EFC7D9,	"this",	0);
	create_insn	(x=0X43EFC7D9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EFC7DE,	"a2",	0);
	create_insn	(0X43EFC7E9);
	create_insn	(x=0X43EFC827);
	op_hex		(x,	1);
	set_cmt	(0X43EFC859,	"a3",	0);
	set_cmt	(0X43EFC85A,	"a2",	0);
	set_cmt	(0X43EFC85B,	"this",	0);
	create_insn	(x=0X43EFC85B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFC896);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC8D7);
	op_hex		(x,	1);
	set_cmt	(0X43EFC909,	"a3",	0);
	set_cmt	(0X43EFC90A,	"a2",	0);
	set_cmt	(0X43EFC90B,	"this",	0);
	create_insn	(x=0X43EFC90B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFC946);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC950);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EFC96E,	"index",	0);
	set_cmt	(0X43EFC973,	"interface",	0);
	set_cmt	(0X43EFC980,	"instance",	0);
	create_insn	(x=0X43EFC99F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFC9A3);
	op_hex		(x,	1);
	create_insn	(0X43EFC9B4);
	create_insn	(x=0X43EFCA2A);
	op_hex		(x,	1);
	create_insn	(x=0X43EFCA7A);
	op_hex		(x,	1);
	create_insn	(0X43EFCAB3);
	create_insn	(x=0X43EFCABB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EFCAC0,	"_DWORD",	0);
	create_insn	(0X43EFCAD4);
	create_insn	(x=0X43EFCB01);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFCB06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EFCB12,	"_DWORD",	0);
	create_insn	(0X43EFCB24);
	create_insn	(x=0X43EFCB9F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFCBA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFCBA9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFCBBF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFCC13);
	op_hex		(x,	1);
	create_insn	(x=0X43EFCC23);
	op_hex		(x,	1);
	create_insn	(x=0X43EFCC26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFCC32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EFCC45,	"_DWORD",	0);
	create_insn	(x=0X43EFCC8D);
	op_hex		(x,	1);
	make_array	(0X43EFCC99,	0X7);
	create_insn	(0X43EFCCA0);
	create_insn	(x=0X43EFCCA3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFCCC0);
	op_hex		(x,	1);
	create_insn	(x=0X43EFCCC5);
	op_hex		(x,	1);
	create_insn	(x=0X43EFCCD2);
	op_hex		(x,	1);
	create_insn	(x=0X43EFCCD5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFCCEA);
	op_hex		(x,	1);
	create_insn	(x=0X43EFCCF8);
	op_hex		(x,	1);
	create_insn	(x=0X43EFCCFC);
	op_hex		(x,	1);
	create_insn	(0X43EFCD10);
	create_insn	(x=0X43EFCD30);
	op_hex		(x,	1);
	make_array	(0X43EFCD37,	0X9);
	create_insn	(0X43EFCD40);
	set_name	(0X43EFCD40,	"OneTap::Features::Hooks::PaintTraverse");
	create_insn	(x=0X43EFCD43);
	op_hex		(x,	1);
	create_insn	(x=0X43EFCD46);
	op_hex		(x,	1);
	create_insn	(x=0X43EFCD4E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFCD55);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFCD5F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFCD63);
	op_hex		(x,	1);
	create_insn	(0X43EFCD77);
	create_insn	(x=0X43EFCD8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFCD92);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFCD9A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFCD9F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFCDA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFCDAC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFCDB4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFCDC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFCDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFCDC8);
	op_hex		(x,	1);
	create_insn	(x=0X43EFCDCB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFCDD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFCDDE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFCDE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFCDE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFCDEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFCDF6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFCDFE);
	op_stkvar	(x,	0);
	set_cmt	(0X43EFCE0F,	"a3",	0);
	set_cmt	(0X43EFCE10,	"a2",	0);
	set_cmt	(0X43EFCE11,	"this",	0);
	create_insn	(x=0X43EFCE11);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFCE1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFCE23);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFCE27);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFCE2B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFCE36);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFCE6E,	"index",	0);
	set_cmt	(0X43EFCE73,	"interface",	0);
	set_cmt	(0X43EFCE80,	"this",	0);
	set_cmt	(0X43EFCE97,	"propHash",	0);
	set_cmt	(0X43EFCE9C,	"classHash",	0);
	create_insn	(x=0X43EFCEAB);
	op_hex		(x,	1);
	set_cmt	(0X43EFCEB7,	"index",	0);
	set_cmt	(0X43EFCEBC,	"interface",	0);
	set_cmt	(0X43EFCEC9,	"this",	0);
	set_cmt	(0X43EFCEDF,	"index",	0);
	set_cmt	(0X43EFCEE4,	"interface",	0);
	set_cmt	(0X43EFCEF1,	"this",	0);
	set_cmt	(0X43EFCEFD,	"m_pPlayer",	0);
	set_cmt	(0X43EFCF1E,	"index",	0);
	set_cmt	(0X43EFCF23,	"interface",	0);
	set_cmt	(0X43EFCF30,	"this",	0);
	create_insn	(x=0X43EFCF44);
	op_hex		(x,	1);
	set_cmt	(0X43EFCF49,	"propHash",	0);
	create_insn	(x=0X43EFCF4E);
	op_hex		(x,	1);
	set_cmt	(0X43EFCF51,	"classHash",	0);
	create_insn	(0X43EFCF68);
	create_insn	(x=0X43EFCF7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFCF9C);
	op_hex		(x,	1);
	create_insn	(x=0X43EFCFA1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFCFB1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFCFBF);
	op_stkvar	(x,	1);
	make_array	(0X43EFCFCE,	0X2);
	create_insn	(0X43EFCFD0);
	set_name	(0X43EFCFD0,	"OneTap::Features::Misc::BuyBot::Instance");
	create_insn	(x=0X43EFCFD3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFCFD6);
	op_hex		(x,	1);
	set_cmt	(0X43EFCFF1,	"index",	0);
	set_cmt	(0X43EFCFFC,	"interface",	0);
	set_cmt	(0X43EFD00C,	"this",	0);
	set_cmt	(0X43EFD028,	"index",	0);
	set_cmt	(0X43EFD033,	"interface",	0);
	set_cmt	(0X43EFD043,	"this",	0);
	set_cmt	(0X43EFD051,	"m_pPlayer",	0);
	set_cmt	(0X43EFD077,	"index",	0);
	set_cmt	(0X43EFD082,	"interface",	0);
	create_insn	(x=0X43EFD089);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD08C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD092);
	op_stkvar	(x,	0);
	set_cmt	(0X43EFD0A4,	"this",	0);
	create_insn	(x=0X43EFD0BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD0C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD0DB);
	op_stkvar	(x,	0);
	set_cmt	(0X43EFD0F2,	"propHash",	0);
	set_cmt	(0X43EFD0F7,	"classHash",	0);
	create_insn	(x=0X43EFD0FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFD10F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD119);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFD145,	"propHash",	0);
	set_cmt	(0X43EFD14A,	"classHash",	0);
	create_insn	(x=0X43EFD14F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFD162);
	op_stkvar	(x,	0);
	set_cmt	(0X43EFD175,	"index",	0);
	set_cmt	(0X43EFD180,	"interface",	0);
	set_cmt	(0X43EFD190,	"this",	0);
	set_cmt	(0X43EFD1A9,	"propHash",	0);
	set_cmt	(0X43EFD1AE,	"classHash",	0);
	create_insn	(x=0X43EFD1B3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFD1D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD1E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD1FF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43EFD225,	"index",	0);
	set_cmt	(0X43EFD22A,	"interface",	0);
	create_insn	(x=0X43EFD248);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD24D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD259);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFD26B,	"switch 16 cases ",	0);
	set_cmt	(0X43EFD275,	"switch jump",	0);
	create_insn	(x=0X43EFD275);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EFD27C,	"jumptable 43EFD275 case 1",	1);
	create_insn	(x=0X43EFD27C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD2A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD2A9);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD2AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD2B4);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD2B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD2BF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD2C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD2CA);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD2CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD2D5);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD2D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD2E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD2F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD2FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD2FF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD309);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD312);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD316);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD320);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD32E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD341);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD34A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD34F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD359);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD363);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD387);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD395);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFD39A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD3A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD3B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD3C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD3CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD3D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD3E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD3EB);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFD3F4,	"jumptable 43EFD275 case 2",	1);
	create_insn	(x=0X43EFD3F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD40B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD40F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD411);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD417);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD419);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD422);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD424);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD42D);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD42F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD43C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD451);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD45A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD45F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD469);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD472);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD476);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD480);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD48E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD4A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD4AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD4AF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD4B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD4C3);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFD4E0,	"jumptable 43EFD275 case 3",	1);
	create_insn	(x=0X43EFD4E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD500);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD504);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD506);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD50F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD511);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD51A);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD51C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD525);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD527);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD530);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD532);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD53B);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD53D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD54A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD556);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD55F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD564);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD56E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD577);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD57B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD585);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD593);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD5A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD5AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD5AF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD5B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD5C3);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFD5E0,	"jumptable 43EFD275 case 4",	1);
	create_insn	(x=0X43EFD5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD600);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD604);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD606);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD60F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD611);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD61A);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD61C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD625);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD627);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD630);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD632);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD63B);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD63D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD64A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD656);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD65F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD664);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD66E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD677);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD67B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD685);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD693);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD6A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD6AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD6AF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD6B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD6C3);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFD6E0,	"jumptable 43EFD275 case 5",	1);
	create_insn	(x=0X43EFD6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD6F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD6FB);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD6FD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD706);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD708);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD711);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD713);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD71C);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD71E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD727);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD729);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD732);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD734);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD741);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD751);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD75A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD75F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD769);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD772);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD776);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD780);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD78E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD7A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD7AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD7AF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD7B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD7C3);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFD7E0,	"jumptable 43EFD275 case 6",	1);
	create_insn	(x=0X43EFD7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD800);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD804);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD806);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD80C);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD80E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD817);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD819);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD822);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD824);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD831);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD841);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD84A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD84F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD859);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD862);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD866);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD870);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD87E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD891);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD89A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD89F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD8A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD8B3);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFD8D0,	"jumptable 43EFD275 case 7",	1);
	create_insn	(x=0X43EFD8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD8E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD8EB);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD8ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD8F3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD8F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD8FE);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD900);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD909);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD90B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD918);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD924);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD92D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD932);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD93C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD945);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD949);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD953);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD961);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD971);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD97A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD97F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD989);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD993);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFD9B0,	"jumptable 43EFD275 case 8",	1);
	create_insn	(x=0X43EFD9B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD9C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFD9CB);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD9CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD9D3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD9D5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD9DE);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD9E0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD9E9);
	op_hex		(x,	1);
	create_insn	(x=0X43EFD9EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFD9F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDA04);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDA0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDA12);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDA1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDA25);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDA29);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDA33);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDA41);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDA51);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDA5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDA5F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDA69);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDA73);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFDA90,	"jumptable 43EFD275 case 9",	1);
	create_insn	(x=0X43EFDA90);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDAA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDAAB);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDAAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDAB3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDAB5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDABE);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDAC0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDAC9);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDACB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDAD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDAE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDAED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDAF2);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDAFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDB05);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDB09);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDB13);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDB21);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDB31);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDB3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDB3F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDB49);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDB53);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFDB70,	"jumptable 43EFD275 case 10",	1);
	create_insn	(x=0X43EFDB70);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDB87);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDB8B);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDB8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDB96);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDB98);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDBA1);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDBA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDBAC);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDBAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDBB7);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDBB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDBC2);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDBC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDBD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDBE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDBEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDBEF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDBF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDC02);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDC06);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDC10);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDC1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDC31);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDC3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDC3F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDC49);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDC53);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFDC70,	"jumptable 43EFD275 case 11",	1);
	create_insn	(x=0X43EFDC70);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDC87);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDC8B);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDC8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDC96);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDC98);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDCA1);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDCA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDCAC);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDCAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDCB7);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDCB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDCC2);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDCC4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDCD1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDCE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDCEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDCEF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDCF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDD02);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDD06);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDD10);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDD1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDD31);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDD3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDD3F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDD49);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDD53);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFDD70,	"jumptable 43EFD275 case 12",	1);
	create_insn	(x=0X43EFDD70);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDD87);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDD8B);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDD8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDD96);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDD98);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDDA1);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDDA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDDAC);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDDAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDDB7);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDDB9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDDC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDDD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDDDB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDDE0);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDDEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDDF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDDF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDE01);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDE0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDE21);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDE2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDE2F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDE39);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDE43);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFDE60,	"jumptable 43EFD275 case 13",	1);
	create_insn	(x=0X43EFDE60);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDE77);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDE7B);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDE7D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDE86);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDE88);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDE91);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDE93);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDE9C);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDE9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDEA7);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDEA9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDEB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDEC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDECB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDED0);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDEDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDEE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDEE7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDEF1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDEFF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDF11);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDF1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDF1F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDF29);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDF33);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFDF50,	"jumptable 43EFD275 case 14",	1);
	create_insn	(x=0X43EFDF50);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDF67);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDF6B);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDF6D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDF76);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDF78);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDF81);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDF83);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDF8C);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDF8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDF97);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDF99);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDFA2);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDFA4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDFB1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDFC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDFCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDFCF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFDFD9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDFE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFDFE6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDFF0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFDFFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE011);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE01A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE01F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE029);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE033);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFE050,	"jumptable 43EFD275 case 15",	1);
	create_insn	(x=0X43EFE050);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE067);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE06B);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE06D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE076);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE078);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE081);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE083);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE08C);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE08E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE097);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE099);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE0A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE0B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE0BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE0C0);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE0CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE0D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE0D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE0E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE0EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE101);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE10A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE10F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE119);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE123);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFE140,	"jumptable 43EFD275 case 16",	1);
	create_insn	(x=0X43EFE140);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE157);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE15B);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE15D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE166);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE168);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE171);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE173);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE17C);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE17E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE187);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE189);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE192);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE194);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE19D);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE19F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE1C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE1CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE1CF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE1D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE1E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE1E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE1F0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE1FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE211);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE21A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE21F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE229);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE233);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE257);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE262);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFE267);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE274);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE280);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE288);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE294);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE2A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE2B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE2BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE2C7);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFE2CB,	"jumptable 43EFD275 default case",	1);
	set_name	(0X43EFE2CB,	"def_43EFD275");
	set_cmt	(0X43EFE2DE,	"switch 5 cases ",	0);
	set_cmt	(0X43EFE2E8,	"switch jump",	0);
	create_insn	(x=0X43EFE2E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43EFE2EF,	"jumptable 43EFE2E8 case 1",	1);
	create_insn	(x=0X43EFE2EF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE301);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE305);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE30D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE31B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE327);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE330);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE335);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE33E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE347);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE34B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE355);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE363);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE371);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE37A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE37F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE389);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE393);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE3B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE3C2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFE3C7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE3D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE3E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE3E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE3F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE400);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE409);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE415);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE41E);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFE427,	"jumptable 43EFE2E8 case 2",	1);
	create_insn	(x=0X43EFE427);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE43E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE442);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE444);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE44D);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE44F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE458);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE45A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE463);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE465);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE46E);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE470);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE479);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE47B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE488);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE494);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE49D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE4A2);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE4AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE4B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE4B9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE4C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE4D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE4E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE4EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE4EF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE4F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE503);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE527);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE532);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFE537);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE544);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE550);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE558);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE564);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE570);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE579);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE585);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE58E);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFE597,	"jumptable 43EFE2E8 case 3",	1);
	create_insn	(x=0X43EFE597);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE5B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE5BB);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE5BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE5C6);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE5C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE5D1);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE5D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE5DC);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE5DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE5E7);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE5E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE5F2);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE5F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE5FD);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE5FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE60C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE621);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE62A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE62F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE639);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE642);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE646);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE64A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE652);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE65C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE666);
	op_stkvar	(x,	1);
	create_insn	(0X43EFE671);
	create_insn	(x=0X43EFE675);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE684);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE68D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE692);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE69B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE6A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE6B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE6D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE6DE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFE6E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE6F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE6FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE704);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE710);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE71C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE725);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE731);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE73A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFE743,	"jumptable 43EFE2E8 case 4",	1);
	create_insn	(x=0X43EFE743);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE763);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE767);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE769);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE772);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE774);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE77D);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE77F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE788);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE78A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE793);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE795);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE79E);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE7A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE7A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE7B4);
	op_stkvar	(x,	1);
	create_insn	(0X43EFE7BF);
	create_insn	(x=0X43EFE7C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE7D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE7DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE7E3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE7ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE7F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE7FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE7FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE806);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE810);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE81A);
	op_stkvar	(x,	1);
	create_insn	(0X43EFE825);
	create_insn	(x=0X43EFE829);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE841);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE84A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE84F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE858);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE862);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE870);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE893);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE89E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFE8A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE8BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE8C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE8DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE8E5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE8F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE8FA);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFE903,	"jumptable 43EFE2E8 case 5",	1);
	create_insn	(x=0X43EFE903);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE91A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE91E);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE920);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE929);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE92B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE934);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE936);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE93F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE941);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE94A);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE94C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE955);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE95F);
	op_stkvar	(x,	1);
	create_insn	(0X43EFE96A);
	create_insn	(x=0X43EFE96E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE981);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE98A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE98F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE998);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE9A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE9A5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE9A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE9B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFE9BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE9C5);
	op_stkvar	(x,	1);
	create_insn	(0X43EFE9D0);
	create_insn	(x=0X43EFE9D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE9E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE9EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFE9F1);
	op_hex		(x,	1);
	create_insn	(x=0X43EFE9FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEA04);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEA12);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEA33);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEA3E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFEA43);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEA50);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEA5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEA64);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEA70);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEA7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEA85);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEA91);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEA9A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFEAA3,	"jumptable 43EFE2E8 default case",	1);
	create_insn	(x=0X43EFEAA3);
	op_stkvar	(x,	0);
	set_name	(0X43EFEAA3,	"def_43EFE2E8");
	create_insn	(0X43EFEAB7);
	create_insn	(x=0X43EFEAC2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEAC8);
	op_hex		(x,	1);
	create_insn	(x=0X43EFEACB);
	op_hex		(x,	1);
	create_insn	(x=0X43EFEAD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEAD8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEAE0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEAE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEAF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEAFD);
	op_stkvar	(x,	1);
	create_insn	(0X43EFEB08);
	create_insn	(x=0X43EFEB0F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEB21);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEB2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEB2F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFEB39);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEB42);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEB46);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEB4A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEB52);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEB5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEB67);
	op_stkvar	(x,	1);
	create_insn	(0X43EFEB72);
	create_insn	(x=0X43EFEB79);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEB91);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEB9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEB9F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFEBA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEBB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEBC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEBCA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEBD7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEBE5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEBF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFEBF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEC02);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEC0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEC16);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEC22);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEC2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEC37);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEC43);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEC4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEC57);
	op_hex		(x,	1);
	create_insn	(x=0X43EFEC5A);
	op_hex		(x,	1);
	create_insn	(x=0X43EFEC63);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEC67);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEC6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEC79);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEC84);
	op_stkvar	(x,	1);
	create_insn	(0X43EFEC8F);
	create_insn	(x=0X43EFEC96);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFECA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFECAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFECB3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFECBD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFECC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFECCA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFECCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFECD6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFECE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFECED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFED01);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFED0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFED0F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFED19);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFED23);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFED31);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFED3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFED47);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFED55);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFED60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFED65);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFED72);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFED7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFED86);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFED92);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFED9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEDA7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEDB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEDBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEDC7);
	op_hex		(x,	1);
	create_insn	(x=0X43EFEDCA);
	op_hex		(x,	1);
	create_insn	(x=0X43EFEDD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEDD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEDDF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEDEB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEDF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEE03);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEE07);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEE0B);
	op_hex		(x,	1);
	create_insn	(x=0X43EFEE0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEE17);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEE23);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEE2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEE39);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEE44);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEE4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEE5A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEE63);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEE67);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEE74);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEE81);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEE8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEE91);
	op_hex		(x,	1);
	create_insn	(x=0X43EFEE93);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEE9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEEA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEEB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEEBB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFEEC0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEEC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEED2);
	op_hex		(x,	1);
	create_insn	(x=0X43EFEED5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEEE3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFEEE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEEF3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEEFF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEF0B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEF1D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEF28);
	op_hex		(x,	1);
	create_insn	(x=0X43EFEF2B);
	op_hex		(x,	1);
	create_insn	(x=0X43EFEF3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEF48);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEF53);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEF5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEF69);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEF74);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEF7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEF8A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEF95);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEF9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEFA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEFAF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEFC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEFCB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEFD1);
	op_hex		(x,	1);
	create_insn	(x=0X43EFEFD3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEFDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEFE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFEFF3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFEFFE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF009);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF014);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF01F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF028);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF02C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF039);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF045);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF04F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF055);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF057);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF060);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF06C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF076);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF07F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFF084);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF08A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF096);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF099);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF0A7);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF0AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF0B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF0C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF0CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF0D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF0E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF0EC);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF0EF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF101);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF10C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF117);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF122);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF12D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF138);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF143);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF14E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF159);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF162);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF166);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF173);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF181);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF18B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF191);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF193);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF1A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF1B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF1BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF1C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF1D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF1DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF1EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF1F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF205);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF20F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF215);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF217);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF220);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF22C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF236);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF23F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFF244);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF24A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF256);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF259);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF267);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF26A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF277);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF283);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF28F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF298);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF2A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF2AC);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF2AF);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF2C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF2CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF2D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF2E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF2ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF2F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF303);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF30E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF319);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF324);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF32D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF331);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF33E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF351);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF35B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF361);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF363);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF36C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF378);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF383);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF38E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF399);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF3A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF3AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF3B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF3BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF3C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF3D5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF3DF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF3E5);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF3E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF3F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF3FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF406);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF40F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFF414);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF41A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF426);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF429);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF437);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF43A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF447);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF453);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF45F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF468);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF471);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF47C);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF47F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF491);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF49C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF4A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF4B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF4BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF4C8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF4D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF4DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF4E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF4F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF4FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF50A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF513);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF517);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF524);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF531);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF53B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF541);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF543);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF54C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF558);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF563);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF56E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF579);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF584);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF58F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF598);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF59C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF5A9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF5B5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF5BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF5C5);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF5C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF5D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF5E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF5EF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFF5F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF5FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF606);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF609);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF617);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF61A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF627);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF633);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF63F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF648);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF651);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF65C);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF661);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF673);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF67E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF689);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF694);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF69F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF6A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF6AC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF6B9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF6C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF6CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF6D5);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF6D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF6EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF6F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF702);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF70D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF718);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF723);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF72C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF730);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF73D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF751);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF75B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF761);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF763);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF76C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF778);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF782);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF78B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFF790);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF796);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF7A2);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF7A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF7B3);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF7B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF7C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF7CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF7DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF7ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF7F6);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF7FC);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF80E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF819);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF824);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF82F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF83A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF845);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF850);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF859);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF85D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF86A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF876);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF880);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF886);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF888);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF891);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF89D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF8B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF8BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF8C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF8D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF8DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF8DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF8EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF901);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF90B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF911);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF913);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF91C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF928);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF932);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF93B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43EFF943);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF94F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF952);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF960);
	op_hex		(x,	1);
	create_insn	(x=0X43EFF963);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF970);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF97C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF988);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF991);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF99A);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFF9A3,	"array",	0);
	create_insn	(x=0X43EFF9A3);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFF9B3,	"object",	0);
	create_insn	(x=0X43EFF9B3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFF9BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43EFF9C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43EFF9D0);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFF9D4,	"isPlayerPointerNeeded",	0);
	set_cmt	(0X43EFF9D5,	"command",	0);
	set_cmt	(0X43EFF9D6,	"playerInstance",	0);
	create_insn	(x=0X43EFF9DD);
	op_stkvar	(x,	1);
	set_cmt	(0X43EFF9F0,	"jump table for switch statement",	0);
	create_dword	(x=0X43EFF9F0);
	make_array	(x,	0X10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EFF9F0,	"jpt_43EFD275");
	set_cmt	(0X43EFFA30,	"jump table for switch statement",	0);
	create_dword	(x=0X43EFFA30);
	make_array	(x,	0X5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43EFFA30,	"jpt_43EFE2E8");
	make_array	(0X43EFFA44,	0XC);
	create_insn	(0X43EFFA50);
	create_insn	(x=0X43EFFA53);
	op_hex		(x,	1);
	set_cmt	(0X43EFFA5B,	"index",	0);
	set_cmt	(0X43EFFA60,	"interface",	0);
	set_cmt	(0X43EFFA77,	"this",	0);
	set_cmt	(0X43EFFA91,	"index",	0);
	set_cmt	(0X43EFFA96,	"interface",	0);
	set_cmt	(0X43EFFAA3,	"this",	0);
	set_cmt	(0X43EFFAAF,	"m_pPlayer",	0);
	set_cmt	(0X43EFFAF4,	"interface",	0);
	set_cmt	(0X43EFFAFA,	"index",	0);
	create_insn	(0X43EFFB1D);
	set_cmt	(0X43EFFB5D,	"index",	0);
	set_cmt	(0X43EFFB62,	"interface",	0);
	set_cmt	(0X43EFFB6F,	"this",	0);
	create_insn	(x=0X43EFFBBB);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFBC0);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFBCD);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFBD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFFBD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EFFBEA);
	create_insn	(x=0X43EFFC6C);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFC6F);
	op_hex		(x,	1);
	create_insn	(0X43EFFC80);
	create_insn	(x=0X43EFFCBB);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFCC8);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFCD5);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFCD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFFCDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43EFFCF2);
	create_insn	(x=0X43EFFCF6);
	op_hex		(x,	1);
	create_insn	(0X43EFFD1C);
	create_insn	(x=0X43EFFD23);
	op_hex		(x,	1);
	create_insn	(0X43EFFD3F);
	create_insn	(x=0X43EFFD43);
	op_hex		(x,	1);
	create_insn	(0X43EFFD66);
	create_insn	(x=0X43EFFD6A);
	op_hex		(x,	1);
	create_insn	(0X43EFFD8A);
	create_insn	(x=0X43EFFD8E);
	op_hex		(x,	1);
	create_insn	(0X43EFFDB4);
	create_insn	(x=0X43EFFDB8);
	op_hex		(x,	1);
	create_insn	(0X43EFFDDB);
	create_insn	(x=0X43EFFDDF);
	op_hex		(x,	1);
	create_insn	(0X43EFFE02);
	create_insn	(x=0X43EFFE06);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFE40);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFE45);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFE52);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFE55);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFFE7C);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFE81);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFE8E);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFE91);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFFEB8);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFEBD);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFECA);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFECD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFFEF4);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFEF9);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFF06);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFF09);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFFF23);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFF2F);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFF34);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFF41);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFF44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43EFFF63);
	op_hex		(x,	1);
	create_insn	(0X43EFFF6B);
	create_insn	(x=0X43EFFF7B);
	op_hex		(x,	1);
	create_insn	(0X43EFFF83);
	create_insn	(x=0X43EFFF94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43EFFFA0);
	create_insn	(x=0X43EFFFC0);
	op_hex		(x,	1);
	create_insn	(x=0X43EFFFCE);
	op_hex		(x,	1);
	create_insn	(0X43EFFFF3);
	create_insn	(0X43F0007A);
	set_cmt	(0X43F00088,	"interface",	0);
	create_insn	(0X43F00088);
	set_cmt	(0X43F0008E,	"index",	0);
	create_insn	(x=0X43F000CA);
	op_hex		(x,	1);
	create_insn	(x=0X43F000CF);
	op_hex		(x,	1);
	create_insn	(x=0X43F000DC);
	op_hex		(x,	1);
	create_insn	(x=0X43F000DF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F000F4);
	op_hex		(x,	1);
	make_array	(0X43F00109,	0X7);
	create_insn	(0X43F00110);
	set_name	(0X43F00110,	"OneTap::Features::FakeDuck::Instance");
	create_insn	(x=0X43F00113);
	op_hex		(x,	1);
	set_cmt	(0X43F00116,	"interface",	0);
	set_cmt	(0X43F00125,	"index",	0);
	create_insn	(x=0X43F0013B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F00143);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0014D,	"this",	0);
	set_cmt	(0X43F00164,	"propHash",	0);
	set_cmt	(0X43F00169,	"classHash",	0);
	create_insn	(x=0X43F00178);
	op_hex		(x,	1);
	set_cmt	(0X43F001D6,	"interface",	0);
	set_cmt	(0X43F001DC,	"index",	0);
	create_insn	(0X43F00208);
	create_insn	(x=0X43F0020A);
	op_stkvar	(x,	0);
	create_insn	(0X43F0023B);
	create_insn	(x=0X43F00248);
	op_hex		(x,	1);
	create_insn	(x=0X43F0024D);
	op_hex		(x,	1);
	create_insn	(x=0X43F0025A);
	op_hex		(x,	1);
	create_insn	(x=0X43F0025D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F00277);
	op_hex		(x,	1);
	create_insn	(x=0X43F00286);
	op_hex		(x,	1);
	create_insn	(x=0X43F0028B);
	op_hex		(x,	1);
	create_insn	(x=0X43F00298);
	op_hex		(x,	1);
	create_insn	(x=0X43F0029B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F002B1);
	op_hex		(x,	1);
	create_insn	(0X43F002B9);
	create_insn	(x=0X43F002CF);
	op_hex		(x,	1);
	create_insn	(x=0X43F002D4);
	op_hex		(x,	1);
	create_insn	(x=0X43F002E1);
	op_hex		(x,	1);
	create_insn	(x=0X43F002E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F002F9);
	op_hex		(x,	1);
	create_insn	(0X43F00309);
	set_cmt	(0X43F00312,	"index",	0);
	set_cmt	(0X43F00317,	"interface",	0);
	create_insn	(x=0X43F0031D);
	op_stkvar	(x,	0);
	set_cmt	(0X43F00329,	"this",	0);
	set_cmt	(0X43F00340,	"propHash",	0);
	set_cmt	(0X43F00345,	"classHash",	0);
	create_insn	(x=0X43F00359);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F00362);
	op_hex		(x,	1);
	create_insn	(x=0X43F0037F);
	op_hex		(x,	1);
	create_insn	(x=0X43F00384);
	op_hex		(x,	1);
	create_insn	(x=0X43F00391);
	op_hex		(x,	1);
	create_insn	(x=0X43F00394);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F003A9,	"cmd",	0);
	create_insn	(x=0X43F003A9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F003AE);
	op_hex		(x,	1);
	create_insn	(x=0X43F003C1);
	op_hex		(x,	1);
	create_insn	(x=0X43F003C7);
	op_hex		(x,	1);
	set_cmt	(0X43F003D0,	"index",	0);
	set_cmt	(0X43F003F0,	"interface",	0);
	set_cmt	(0X43F003FD,	"this",	0);
	set_cmt	(0X43F00414,	"propHash",	0);
	set_cmt	(0X43F00419,	"classHash",	0);
	create_insn	(x=0X43F00428);
	op_stkvar	(x,	1);
	create_insn	(0X43F00430);
	create_insn	(x=0X43F0044A);
	op_hex		(x,	1);
	create_insn	(x=0X43F0044F);
	op_hex		(x,	1);
	create_insn	(x=0X43F0045C);
	op_hex		(x,	1);
	create_insn	(x=0X43F0045F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F00474);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F00479);
	op_hex		(x,	1);
	create_insn	(x=0X43F0047B);
	op_hex		(x,	1);
	create_insn	(x=0X43F0049C);
	op_hex		(x,	1);
	create_insn	(x=0X43F004A1);
	op_hex		(x,	1);
	create_insn	(x=0X43F004AE);
	op_hex		(x,	1);
	create_insn	(x=0X43F004B1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F004C6);
	op_hex		(x,	1);
	create_insn	(0X43F004CC);
	create_insn	(x=0X43F004CE);
	op_hex		(x,	1);
	create_insn	(x=0X43F004D3);
	op_hex		(x,	1);
	create_insn	(x=0X43F004E0);
	op_hex		(x,	1);
	create_insn	(x=0X43F004E3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F004F8);
	op_hex		(x,	1);
	set_cmt	(0X43F00501,	"index",	0);
	set_cmt	(0X43F00520,	"interface",	0);
	set_cmt	(0X43F0052D,	"this",	0);
	set_cmt	(0X43F00544,	"propHash",	0);
	set_cmt	(0X43F00549,	"classHash",	0);
	set_cmt	(0X43F0057F,	"index",	0);
	set_cmt	(0X43F0058A,	"interface",	0);
	set_cmt	(0X43F00597,	"this",	0);
	set_cmt	(0X43F005AE,	"propHash",	0);
	set_cmt	(0X43F005B3,	"classHash",	0);
	create_insn	(0X43F005D1);
	make_array	(0X43F005E1,	0XF);
	create_insn	(0X43F005F0);
	set_name	(0X43F005F0,	"OneTap::Features::Misc::AutoFire");
	set_cmt	(0X43F0060A,	"interface",	0);
	set_cmt	(0X43F00610,	"index",	0);
	set_cmt	(0X43F00623,	"this",	0);
	set_cmt	(0X43F0062F,	"player",	0);
	set_cmt	(0X43F00644,	"index",	0);
	set_cmt	(0X43F00649,	"interface",	0);
	set_cmt	(0X43F00656,	"this",	0);
	set_cmt	(0X43F00662,	"player",	0);
	set_cmt	(0X43F00674,	"propHash",	0);
	set_cmt	(0X43F00679,	"classHash",	0);
	set_cmt	(0X43F0069D,	"switch 84 cases ",	0);
	create_insn	(x=0X43F006A7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F006AE,	"switch jump",	0);
	create_insn	(x=0X43F006AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F006B5,	"jumptable 43F006AE cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-40,60,61,63,64",	1);
	create_insn	(0X43F006B5);
	set_cmt	(0X43F006BB,	"index",	0);
	set_cmt	(0X43F006C0,	"interface",	0);
	set_cmt	(0X43F006CD,	"this",	0);
	set_cmt	(0X43F006D9,	"player",	0);
	set_cmt	(0X43F006EB,	"propHash",	0);
	set_cmt	(0X43F006F0,	"classHash",	0);
	set_cmt	(0X43F00748,	"cmd",	0);
	create_insn	(x=0X43F00748);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F00754);
	op_hex		(x,	1);
	set_cmt	(0X43F00758,	"jumptable 43F006AE default case, cases 5,6,12,15,18,20-22,31,37,41-59,62,65-84",	1);
	set_name	(0X43F00758,	"def_43F006AE");
	make_array	(0X43F0075A,	0X2);
	set_cmt	(0X43F0075C,	"jump table for switch statement",	0);
	create_dword	(x=0X43F0075C);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F0075C,	"jpt_43F006AE");
	set_cmt	(0X43F00768,	"indirect table for switch statement",	0);
	create_byte	(0X43F00768);
	make_array	(0X43F00768,	0X54);
	make_array	(0X43F007BC,	0X4);
	create_insn	(0X43F007C0);
	create_insn	(x=0X43F007C3);
	op_hex		(x,	1);
	create_insn	(x=0X43F007C6);
	op_hex		(x,	1);
	create_insn	(x=0X43F007D7);
	op_hex		(x,	1);
	create_insn	(x=0X43F007DC);
	op_hex		(x,	1);
	create_insn	(x=0X43F007E9);
	op_hex		(x,	1);
	create_insn	(x=0X43F007EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0080C);
	op_hex		(x,	1);
	create_insn	(x=0X43F00811);
	op_hex		(x,	1);
	create_insn	(x=0X43F0081E);
	op_hex		(x,	1);
	create_insn	(x=0X43F00821);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0090F);
	op_hex		(x,	1);
	create_insn	(x=0X43F00914);
	op_hex		(x,	1);
	create_insn	(x=0X43F00921);
	op_hex		(x,	1);
	create_insn	(x=0X43F00924);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F00955);
	op_hex		(x,	1);
	create_insn	(x=0X43F0095A);
	op_hex		(x,	1);
	create_insn	(x=0X43F00967);
	op_hex		(x,	1);
	create_insn	(x=0X43F0096A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0097F,	"angles",	0);
	make_array	(0X43F0098C,	0X4);
	create_insn	(0X43F00990);
	create_insn	(x=0X43F00993);
	op_hex		(x,	1);
	create_insn	(x=0X43F00996);
	op_hex		(x,	1);
	set_cmt	(0X43F009DE,	"interface",	0);
	set_cmt	(0X43F009E4,	"index",	0);
	set_cmt	(0X43F00A1B,	"index",	0);
	set_cmt	(0X43F00A20,	"interface",	0);
	set_cmt	(0X43F00A34,	"this",	0);
	set_cmt	(0X43F00A4B,	"propHash",	0);
	set_cmt	(0X43F00A50,	"classHash",	0);
	set_cmt	(0X43F00A9B,	"index",	0);
	set_cmt	(0X43F00AA0,	"interface",	0);
	set_cmt	(0X43F00AAD,	"this",	0);
	set_cmt	(0X43F00AC4,	"propHash",	0);
	set_cmt	(0X43F00AC9,	"classHash",	0);
	set_cmt	(0X43F00B34,	"index",	0);
	set_cmt	(0X43F00B39,	"interface",	0);
	set_cmt	(0X43F00B56,	"this",	0);
	set_cmt	(0X43F00B6D,	"propHash",	0);
	set_cmt	(0X43F00B72,	"classHash",	0);
	set_cmt	(0X43F00B89,	"a2",	0);
	set_cmt	(0X43F00B92,	"a1",	0);
	set_cmt	(0X43F00BDF,	"this",	0);
	set_cmt	(0X43F00BED,	"a2",	0);
	set_cmt	(0X43F00C46,	"cmd",	0);
	create_insn	(x=0X43F00C46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F00C8E,	"cmd",	0);
	create_insn	(x=0X43F00C8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F00CB8);
	op_hex		(x,	1);
	create_insn	(x=0X43F00CBD);
	op_hex		(x,	1);
	create_insn	(x=0X43F00CCA);
	op_hex		(x,	1);
	create_insn	(x=0X43F00CCD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F00CE2);
	op_hex		(x,	1);
	set_cmt	(0X43F00CEE,	"index",	0);
	set_cmt	(0X43F00CF3,	"interface",	0);
	set_cmt	(0X43F00D00,	"this",	0);
	set_cmt	(0X43F00D0C,	"a3",	0);
	set_cmt	(0X43F00D0E,	"a2",	0);
	set_cmt	(0X43F00D10,	"m_player",	0);
	create_insn	(0X43F00D3A);
	create_insn	(0X43F00D46);
	create_insn	(0X43F00D54);
	make_array	(0X43F00D62,	0XE);
	create_insn	(0X43F00D70);
	create_insn	(x=0X43F00D73);
	op_hex		(x,	1);
	create_insn	(x=0X43F00D79);
	op_hex		(x,	1);
	create_insn	(x=0X43F00D97);
	op_hex		(x,	1);
	create_insn	(x=0X43F00DA5);
	op_hex		(x,	1);
	create_insn	(x=0X43F00E3D);
	op_hex		(x,	1);
	create_insn	(x=0X43F00E4B);
	op_hex		(x,	1);
	create_insn	(x=0X43F00EE0);
	op_hex		(x,	1);
	create_insn	(x=0X43F00EEE);
	op_hex		(x,	1);
	create_insn	(0X43F00F87);
	create_insn	(0X43F00F90);
	create_insn	(0X43F00F99);
	create_insn	(0X43F00FA5);
	set_cmt	(0X43F00FF4,	"interface",	0);
	set_cmt	(0X43F00FFA,	"index",	0);
	set_cmt	(0X43F01012,	"index",	0);
	set_cmt	(0X43F01017,	"interface",	0);
	set_cmt	(0X43F01028,	"this",	0);
	create_insn	(x=0X43F0103C);
	op_hex		(x,	1);
	create_insn	(x=0X43F01041);
	op_hex		(x,	1);
	create_insn	(0X43F01065);
	set_cmt	(0X43F0106F,	"index",	0);
	set_cmt	(0X43F0107A,	"interface",	0);
	set_cmt	(0X43F012AC,	"index",	0);
	set_cmt	(0X43F012B1,	"interface",	0);
	set_cmt	(0X43F012C5,	"index",	0);
	set_cmt	(0X43F012D0,	"interface",	0);
	set_cmt	(0X43F012E5,	"this",	0);
	create_insn	(x=0X43F012F9);
	op_hex		(x,	1);
	create_insn	(x=0X43F012FE);
	op_hex		(x,	1);
	create_insn	(0X43F01325);
	create_insn	(x=0X43F01331);
	op_hex		(x,	1);
	create_insn	(x=0X43F0138C);
	op_hex		(x,	1);
	make_array	(0X43F013CA,	0X6);
	create_insn	(0X43F013D0);
	create_insn	(x=0X43F013D3);
	op_hex		(x,	1);
	set_cmt	(0X43F013EF,	"propHash",	0);
	set_cmt	(0X43F013F4,	"classHash",	0);
	set_cmt	(0X43F0142C,	"propHash",	0);
	set_cmt	(0X43F01431,	"classHash",	0);
	create_insn	(x=0X43F0154D);
	op_hex		(x,	1);
	create_insn	(x=0X43F01583);
	op_hex		(x,	1);
	create_insn	(x=0X43F01588);
	op_hex		(x,	1);
	create_insn	(x=0X43F015AA);
	op_hex		(x,	1);
	create_insn	(x=0X43F015CC);
	op_hex		(x,	1);
	create_insn	(0X43F0161D);
	make_array	(0X43F01627,	0X9);
	create_insn	(0X43F01630);
	create_insn	(x=0X43F01633);
	op_hex		(x,	1);
	create_insn	(x=0X43F01636);
	op_hex		(x,	1);
	set_cmt	(0X43F01639,	"interface",	0);
	set_cmt	(0X43F01646,	"index",	0);
	create_insn	(x=0X43F01659);
	op_hex		(x,	1);
	create_insn	(x=0X43F01661);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F01690,	"this",	0);
	set_cmt	(0X43F016C5,	"index",	0);
	set_cmt	(0X43F016D0,	"interface",	0);
	set_cmt	(0X43F016DD,	"this",	0);
	create_insn	(0X43F01722);
	set_cmt	(0X43F01734,	"index",	0);
	set_cmt	(0X43F0173F,	"interface",	0);
	set_cmt	(0X43F0174C,	"this",	0);
	create_insn	(0X43F01790);
	create_insn	(x=0X43F017B1);
	op_hex		(x,	1);
	create_insn	(x=0X43F017C0);
	op_hex		(x,	1);
	set_cmt	(0X43F017DE,	"index",	0);
	set_cmt	(0X43F017E9,	"interface",	0);
	set_cmt	(0X43F017F6,	"this",	0);
	create_insn	(0X43F0183A);
	set_cmt	(0X43F0184D,	"index",	0);
	set_cmt	(0X43F01858,	"interface",	0);
	set_cmt	(0X43F01868,	"this",	0);
	create_insn	(0X43F018A8);
	create_insn	(x=0X43F018C9);
	op_hex		(x,	1);
	create_insn	(x=0X43F018D8);
	op_hex		(x,	1);
	create_insn	(x=0X43F018E9);
	op_hex		(x,	1);
	create_insn	(x=0X43F018FD);
	op_hex		(x,	1);
	create_insn	(x=0X43F0192B);
	op_hex		(x,	1);
	create_insn	(0X43F01937);
	make_array	(0X43F0193C,	0X4);
	create_insn	(0X43F01940);
	set_name	(0X43F01940,	"OneTap::Features::Misc::AutoStrafe::Rage");
	create_insn	(x=0X43F01943);
	op_hex		(x,	1);
	set_cmt	(0X43F01946,	"interface",	0);
	create_insn	(x=0X43F0194C);
	op_hex		(x,	1);
	set_cmt	(0X43F0194F,	"index",	0);
	set_cmt	(0X43F0195B,	"arg",	0);
	set_cmt	(0X43F01963,	"this",	0);
	set_cmt	(0X43F0197A,	"propHash",	0);
	set_cmt	(0X43F0197F,	"classHash",	0);
	create_insn	(x=0X43F019A0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F019AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F019B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F019BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F019DF);
	op_hex		(x,	1);
	create_insn	(x=0X43F019E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F019EA);
	op_hex		(x,	1);
	create_insn	(x=0X43F019F7);
	op_hex		(x,	1);
	create_insn	(x=0X43F019FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F01A0F);
	op_hex		(x,	1);
	set_cmt	(0X43F01A1F,	"index",	0);
	set_cmt	(0X43F01A24,	"interface",	0);
	set_cmt	(0X43F01A31,	"this",	0);
	set_cmt	(0X43F01A3D,	"player",	0);
	set_cmt	(0X43F01A4E,	"index",	0);
	set_cmt	(0X43F01A53,	"interface",	0);
	set_cmt	(0X43F01A60,	"this",	0);
	set_cmt	(0X43F01A6C,	"player",	0);
	set_cmt	(0X43F01A7E,	"propHash",	0);
	set_cmt	(0X43F01A83,	"classHash",	0);
	create_insn	(x=0X43F01AA6);
	op_hex		(x,	1);
	create_insn	(x=0X43F01AAB);
	op_hex		(x,	1);
	create_insn	(x=0X43F01AB8);
	op_hex		(x,	1);
	create_insn	(x=0X43F01ABB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F01AD0);
	op_hex		(x,	1);
	create_insn	(x=0X43F01AD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01AE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01AF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F01AF8);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_14(void) {
        auto x;
#define id x

	create_insn	(x=0X43F01AFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01B05);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F01B0B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01B3D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F01B4E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F01B6A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F01B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01B93);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F01B99);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01B9D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01BA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F01BB3);
	op_hex		(x,	1);
	create_insn	(x=0X43F01BBB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01BD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F01BD9);
	op_stkvar	(x,	0);
	set_cmt	(0X43F01BE5,	"index",	0);
	set_cmt	(0X43F01BEA,	"interface",	0);
	set_cmt	(0X43F01BF7,	"this",	0);
	set_cmt	(0X43F01C0E,	"propHash",	0);
	set_cmt	(0X43F01C13,	"classHash",	0);
	create_insn	(x=0X43F01C22);
	op_hex		(x,	1);
	create_insn	(x=0X43F01C39);
	op_hex		(x,	1);
	create_insn	(x=0X43F01C3E);
	op_hex		(x,	1);
	create_insn	(x=0X43F01C4B);
	op_hex		(x,	1);
	create_insn	(x=0X43F01C4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F01C61);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01C79);
	op_hex		(x,	1);
	create_insn	(x=0X43F01C7E);
	op_hex		(x,	1);
	create_insn	(x=0X43F01C8B);
	op_hex		(x,	1);
	create_insn	(x=0X43F01C8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F01CB5);
	op_hex		(x,	1);
	create_insn	(x=0X43F01CBA);
	op_hex		(x,	1);
	create_insn	(x=0X43F01CC7);
	op_hex		(x,	1);
	create_insn	(x=0X43F01CCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F01CEA);
	create_insn	(x=0X43F01CFE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F01D06);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F01D0E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F01D1B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01D22);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01D5F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01DDB);
	op_hex		(x,	1);
	create_insn	(x=0X43F01DE0);
	op_hex		(x,	1);
	create_insn	(x=0X43F01DED);
	op_hex		(x,	1);
	create_insn	(x=0X43F01DF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F01DF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F01E0A);
	create_insn	(x=0X43F01E11);
	op_hex		(x,	1);
	create_insn	(x=0X43F01E14);
	op_hex		(x,	1);
	create_insn	(0X43F01E25);
	create_insn	(x=0X43F01E29);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F01E34);
	op_hex		(x,	1);
	create_insn	(x=0X43F01E39);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01E44);
	op_hex		(x,	1);
	create_insn	(0X43F01E55);
	create_insn	(x=0X43F01E59);
	op_stkvar	(x,	1);
	create_insn	(0X43F01E76);
	create_insn	(x=0X43F01E84);
	op_hex		(x,	1);
	create_insn	(0X43F01EB7);
	create_insn	(x=0X43F01EC3);
	op_hex		(x,	1);
	create_insn	(x=0X43F01EC7);
	op_hex		(x,	1);
	set_cmt	(0X43F01ED7,	"this",	0);
	create_insn	(x=0X43F01EDD);
	op_stkvar	(x,	1);
	set_cmt	(0X43F01EE1,	"a2",	0);
	set_cmt	(0X43F01EE7,	"srcAngle",	0);
	set_cmt	(0X43F01EEF,	"distAngle",	0);
	create_insn	(x=0X43F01EF9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01F21);
	op_stkvar	(x,	1);
	create_insn	(0X43F01F31);
	create_insn	(x=0X43F01F41);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F01F96);
	op_hex		(x,	1);
	create_insn	(x=0X43F01F9B);
	op_hex		(x,	1);
	create_insn	(x=0X43F01FA8);
	op_hex		(x,	1);
	create_insn	(x=0X43F01FAB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F01FD0);
	op_hex		(x,	1);
	create_insn	(x=0X43F01FD5);
	op_hex		(x,	1);
	create_insn	(x=0X43F01FE2);
	op_hex		(x,	1);
	create_insn	(x=0X43F01FE5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0200E);
	create_insn	(x=0X43F02023);
	op_hex		(x,	1);
	create_insn	(x=0X43F02028);
	op_hex		(x,	1);
	create_insn	(x=0X43F02035);
	op_hex		(x,	1);
	create_insn	(x=0X43F02038);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F02054);
	op_hex		(x,	1);
	create_insn	(x=0X43F0205D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F02063);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F02069);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F02071);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F020A4);
	op_stkvar	(x,	0);
	create_insn	(0X43F020B1);
	create_insn	(x=0X43F020B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F020B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F020D0);
	op_hex		(x,	1);
	create_insn	(x=0X43F020D5);
	op_hex		(x,	1);
	create_insn	(x=0X43F020E2);
	op_hex		(x,	1);
	create_insn	(x=0X43F020E5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0210A);
	op_hex		(x,	1);
	create_insn	(x=0X43F0210F);
	op_hex		(x,	1);
	create_insn	(x=0X43F0211C);
	op_hex		(x,	1);
	create_insn	(x=0X43F0211F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F02125);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F02139);
	create_insn	(x=0X43F0213D);
	op_hex		(x,	1);
	create_insn	(0X43F0215D);
	make_array	(0X43F02168,	0X8);
	create_insn	(0X43F02170);
	set_name	(0X43F02170,	"OneTap::Features::Misc::AutoStrafe::Directional");
	create_insn	(x=0X43F02173);
	op_hex		(x,	1);
	set_cmt	(0X43F02176,	"interface",	0);
	create_insn	(x=0X43F0217C);
	op_hex		(x,	1);
	set_cmt	(0X43F0217F,	"index",	0);
	set_cmt	(0X43F0218B,	"arg",	0);
	set_cmt	(0X43F02193,	"this",	0);
	set_cmt	(0X43F021AA,	"propHash",	0);
	set_cmt	(0X43F021AF,	"classHash",	0);
	create_insn	(x=0X43F021D6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F021DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F021E2);
	op_hex		(x,	1);
	create_insn	(x=0X43F021E7);
	op_hex		(x,	1);
	create_insn	(x=0X43F021F4);
	op_hex		(x,	1);
	create_insn	(x=0X43F021F7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F021FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F02211);
	create_insn	(x=0X43F02215);
	op_hex		(x,	1);
	create_insn	(x=0X43F02278);
	op_stkvar	(x,	0);
	create_insn	(0X43F0228A);
	create_insn	(0X43F022C1);
	create_insn	(x=0X43F022DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F022E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F022ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F022F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F022F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F02300);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F02306);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0231F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F02323);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0235F);
	op_stkvar	(x,	1);
	create_insn	(0X43F023CD);
	create_insn	(x=0X43F023D4);
	op_hex		(x,	1);
	create_insn	(x=0X43F023D9);
	op_hex		(x,	1);
	create_insn	(x=0X43F023E8);
	op_hex		(x,	1);
	create_insn	(x=0X43F023EB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F02405);
	op_hex		(x,	1);
	create_insn	(x=0X43F02407);
	op_stkvar	(x,	1);
	create_insn	(0X43F02422);
	create_insn	(x=0X43F02431);
	op_hex		(x,	1);
	create_insn	(x=0X43F02436);
	op_hex		(x,	1);
	create_insn	(x=0X43F02443);
	op_hex		(x,	1);
	create_insn	(x=0X43F02446);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0246B);
	op_hex		(x,	1);
	create_insn	(x=0X43F02470);
	op_hex		(x,	1);
	create_insn	(x=0X43F0247D);
	op_hex		(x,	1);
	create_insn	(x=0X43F02480);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F024A7);
	op_hex		(x,	1);
	create_insn	(x=0X43F024AC);
	op_hex		(x,	1);
	create_insn	(x=0X43F024B9);
	op_hex		(x,	1);
	create_insn	(x=0X43F024BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F024DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F024EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F024F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F02517);
	op_hex		(x,	1);
	create_insn	(x=0X43F0251C);
	op_hex		(x,	1);
	create_insn	(x=0X43F02529);
	op_hex		(x,	1);
	create_insn	(x=0X43F0252C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F02542);
	create_insn	(0X43F02552);
	create_insn	(x=0X43F02559);
	op_stkvar	(x,	1);
	create_insn	(0X43F0257E);
	create_insn	(0X43F0258E);
	create_insn	(x=0X43F025C4);
	op_hex		(x,	1);
	create_insn	(x=0X43F025C9);
	op_hex		(x,	1);
	create_insn	(x=0X43F025D6);
	op_hex		(x,	1);
	create_insn	(x=0X43F025D9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F025FE);
	make_array	(0X43F02615,	0XB);
	create_insn	(0X43F02620);
	set_name	(0X43F02620,	"OneTap::Features::Misc::AutoStrafe::Normal");
	create_insn	(x=0X43F02623);
	op_hex		(x,	1);
	create_insn	(x=0X43F02626);
	op_hex		(x,	1);
	set_cmt	(0X43F02629,	"interface",	0);
	set_cmt	(0X43F0262F,	"index",	0);
	set_cmt	(0X43F0263B,	"arg",	0);
	set_cmt	(0X43F02643,	"this",	0);
	create_insn	(x=0X43F02657);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0265F,	"propHash",	0);
	set_cmt	(0X43F02664,	"classHash",	0);
	create_insn	(x=0X43F0268E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F02694);
	op_hex		(x,	1);
	create_insn	(x=0X43F02699);
	op_hex		(x,	1);
	create_insn	(x=0X43F026A6);
	op_hex		(x,	1);
	create_insn	(x=0X43F026A9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F026B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F026C2);
	create_insn	(x=0X43F026C6);
	op_hex		(x,	1);
	create_insn	(x=0X43F026DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F02705);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0270B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F02712);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0271D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F02724);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0272A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F02735);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F02739);
	op_stkvar	(x,	1);
	create_insn	(0X43F02759);
	create_insn	(0X43F02781);
	create_insn	(x=0X43F0279D);
	op_hex		(x,	1);
	create_insn	(0X43F027B4);
	create_insn	(x=0X43F027FB);
	op_hex		(x,	1);
	create_insn	(x=0X43F02800);
	op_hex		(x,	1);
	create_insn	(x=0X43F0280D);
	op_hex		(x,	1);
	create_insn	(x=0X43F02810);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F02816);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0282A);
	create_insn	(x=0X43F0282E);
	op_hex		(x,	1);
	create_insn	(0X43F02845);
	create_insn	(x=0X43F028F0);
	op_hex		(x,	1);
	create_insn	(x=0X43F028F5);
	op_hex		(x,	1);
	create_insn	(x=0X43F02902);
	op_hex		(x,	1);
	create_insn	(x=0X43F02905);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0290B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0291F);
	create_insn	(x=0X43F02932);
	op_hex		(x,	1);
	create_insn	(x=0X43F02946);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F02950);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F02962);
	op_stkvar	(x,	0);
	create_insn	(0X43F02996);
	create_insn	(x=0X43F0299E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F029F8);
	op_hex		(x,	1);
	create_insn	(x=0X43F029FD);
	op_hex		(x,	1);
	create_insn	(x=0X43F02A0A);
	op_hex		(x,	1);
	create_insn	(x=0X43F02A0D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F02A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F02A33);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F02A42);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F02A4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F02A6E);
	op_hex		(x,	1);
	create_insn	(x=0X43F02A73);
	op_hex		(x,	1);
	create_insn	(x=0X43F02A80);
	op_hex		(x,	1);
	create_insn	(x=0X43F02A83);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F02A99);
	create_insn	(0X43F02AA9);
	create_insn	(x=0X43F02AB0);
	op_stkvar	(x,	1);
	create_insn	(0X43F02AD5);
	create_insn	(0X43F02AE5);
	create_insn	(x=0X43F02B1B);
	op_hex		(x,	1);
	create_insn	(x=0X43F02B20);
	op_hex		(x,	1);
	create_insn	(x=0X43F02B2D);
	op_hex		(x,	1);
	create_insn	(x=0X43F02B30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F02B4E,	0X2);
	create_insn	(0X43F02B50);
	set_name	(0X43F02B50,	"OneTap::Features::Misc::AutoStrafe::Legit");
	create_insn	(x=0X43F02B53);
	op_hex		(x,	1);
	set_cmt	(0X43F02B56,	"interface",	0);
	create_insn	(x=0X43F02B5C);
	op_hex		(x,	1);
	set_cmt	(0X43F02B5F,	"index",	0);
	set_cmt	(0X43F02B72,	"this",	0);
	set_cmt	(0X43F02B89,	"propHash",	0);
	set_cmt	(0X43F02B8E,	"classHash",	0);
	set_cmt	(0X43F02BA2,	"index",	0);
	set_cmt	(0X43F02BA7,	"interface",	0);
	create_insn	(x=0X43F02BAD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F02BBF);
	op_stkvar	(x,	0);
	set_cmt	(0X43F02BCC,	"this",	0);
	set_cmt	(0X43F02BE3,	"propHash",	0);
	set_cmt	(0X43F02BE8,	"classHash",	0);
	create_insn	(x=0X43F02BF7);
	op_hex		(x,	1);
	create_insn	(x=0X43F02C01);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F02C07);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F02C46);
	op_hex		(x,	1);
	create_insn	(x=0X43F02C4B);
	op_hex		(x,	1);
	create_insn	(x=0X43F02C58);
	op_hex		(x,	1);
	create_insn	(x=0X43F02C5B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F02C7B);
	op_hex		(x,	1);
	create_insn	(x=0X43F02C80);
	op_hex		(x,	1);
	create_insn	(x=0X43F02C8D);
	op_hex		(x,	1);
	create_insn	(x=0X43F02C90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F02CAF,	"distAngle",	0);
	set_cmt	(0X43F02CB4,	"srcAngle",	0);
	create_insn	(x=0X43F02CC5);
	op_hex		(x,	1);
	create_insn	(0X43F02CE8);
	make_array	(0X43F02CFA,	0X6);
	create_insn	(0X43F02D00);
	create_insn	(x=0X43F02D03);
	op_hex		(x,	1);
	create_insn	(x=0X43F02D06);
	op_hex		(x,	1);
	create_insn	(x=0X43F02D44);
	op_hex		(x,	1);
	create_insn	(0X43F02D66);
	make_array	(0X43F02D6D,	0X3);
	create_insn	(0X43F02D70);
	set_cmt	(0X43F02D9F,	"interface",	0);
	set_cmt	(0X43F02DA5,	"index",	0);
	set_cmt	(0X43F02DB8,	"this",	0);
	create_insn	(x=0X43F02DC4);
	op_hex		(x,	1);
	set_cmt	(0X43F02DDC,	"propHash",	0);
	set_cmt	(0X43F02DE1,	"classHash",	0);
	create_insn	(x=0X43F02DF0);
	op_hex		(x,	1);
	set_cmt	(0X43F02E26,	"cmd",	0);
	create_insn	(x=0X43F02E26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F02E32);
	op_hex		(x,	1);
	create_insn	(x=0X43F02E43);
	op_hex		(x,	1);
	create_insn	(x=0X43F02E48);
	op_hex		(x,	1);
	create_insn	(x=0X43F02E55);
	op_hex		(x,	1);
	create_insn	(x=0X43F02E58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F02E6D);
	op_hex		(x,	1);
	make_array	(0X43F02E73,	0XD);
	create_insn	(0X43F02E80);
	create_insn	(x=0X43F02E9A);
	op_hex		(x,	1);
	create_insn	(x=0X43F02E9F);
	op_hex		(x,	1);
	create_insn	(x=0X43F02EAC);
	op_hex		(x,	1);
	create_insn	(x=0X43F02EAF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F02EC4);
	op_hex		(x,	1);
	set_cmt	(0X43F02ECE,	"interface",	0);
	set_cmt	(0X43F02ED4,	"index",	0);
	set_cmt	(0X43F02EEE,	"this",	0);
	create_insn	(x=0X43F02F02);
	op_hex		(x,	1);
	set_cmt	(0X43F02F07,	"propHash",	0);
	create_insn	(x=0X43F02F0C);
	op_hex		(x,	1);
	set_cmt	(0X43F02F0F,	"classHash",	0);
	create_insn	(0X43F02F26);
	set_cmt	(0X43F02F3C,	"index",	0);
	set_cmt	(0X43F02F41,	"interface",	0);
	set_cmt	(0X43F02F4E,	"this",	0);
	create_insn	(x=0X43F02F62);
	op_hex		(x,	1);
	set_cmt	(0X43F02F67,	"propHash",	0);
	create_insn	(x=0X43F02F6C);
	op_hex		(x,	1);
	set_cmt	(0X43F02F6F,	"classHash",	0);
	create_insn	(0X43F02F86);
	set_cmt	(0X43F02F98,	"index",	0);
	set_cmt	(0X43F02F9D,	"interface",	0);
	set_cmt	(0X43F02FAA,	"this",	0);
	set_cmt	(0X43F02FC1,	"propHash",	0);
	set_cmt	(0X43F02FC6,	"classHash",	0);
	create_insn	(x=0X43F02FD5);
	op_hex		(x,	1);
	set_cmt	(0X43F02FDB,	"cmd",	0);
	create_insn	(x=0X43F02FDB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F02FE7);
	op_hex		(x,	1);
	create_insn	(0X43F02FED);
	make_array	(0X43F02FF5,	0XB);
	create_insn	(0X43F03000);
	make_array	(0X43F0300D,	0X3);
	create_insn	(0X43F03010);
	make_array	(0X43F0301D,	0X3);
	create_insn	(0X43F03020);
	create_insn	(x=0X43F03023);
	op_hex		(x,	1);
	create_insn	(x=0X43F03033);
	op_hex		(x,	1);
	create_insn	(x=0X43F03036);
	op_hex		(x,	1);
	create_insn	(x=0X43F0303B);
	op_hex		(x,	1);
	set_cmt	(0X43F03046,	"arg",	0);
	create_insn	(x=0X43F03049);
	op_hex		(x,	1);
	create_insn	(x=0X43F0304C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F03064,	"index",	0);
	set_cmt	(0X43F0306F,	"interface",	0);
	set_cmt	(0X43F03082,	"this",	0);
	set_cmt	(0X43F03099,	"propHash",	0);
	set_cmt	(0X43F0309E,	"classHash",	0);
	create_insn	(x=0X43F031F9);
	op_hex		(x,	1);
	create_insn	(x=0X43F03204);
	op_hex		(x,	1);
	create_insn	(x=0X43F03217);
	op_hex		(x,	1);
	create_insn	(x=0X43F0321A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0322D);
	op_hex		(x,	1);
	create_insn	(x=0X43F03280);
	op_hex		(x,	1);
	create_insn	(x=0X43F0328B);
	op_hex		(x,	1);
	create_insn	(x=0X43F03298);
	op_hex		(x,	1);
	create_insn	(x=0X43F0329B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F032B7);
	op_hex		(x,	1);
	create_insn	(x=0X43F03309);
	op_hex		(x,	1);
	create_insn	(x=0X43F0330E);
	op_hex		(x,	1);
	create_insn	(x=0X43F0331B);
	op_hex		(x,	1);
	create_insn	(x=0X43F0331E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0334C);
	op_hex		(x,	1);
	create_insn	(x=0X43F03351);
	op_hex		(x,	1);
	create_insn	(x=0X43F0335E);
	op_hex		(x,	1);
	create_insn	(x=0X43F03361);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F03380);
	create_insn	(x=0X43F033C6);
	op_hex		(x,	1);
	create_insn	(x=0X43F033CB);
	op_hex		(x,	1);
	create_insn	(x=0X43F033D8);
	op_hex		(x,	1);
	create_insn	(x=0X43F033DB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F033F8,	0X8);
	set_cmt	(0X43F03400,	"interface",	0);
	create_insn	(0X43F03400);
	set_cmt	(0X43F03406,	"index",	0);
	set_cmt	(0X43F03419,	"this",	0);
	create_insn	(x=0X43F0342D);
	op_hex		(x,	1);
	set_cmt	(0X43F03432,	"propHash",	0);
	create_insn	(x=0X43F03437);
	op_hex		(x,	1);
	set_cmt	(0X43F0343A,	"classHash",	0);
	create_insn	(0X43F03451);
	set_cmt	(0X43F03467,	"index",	0);
	set_cmt	(0X43F0346C,	"interface",	0);
	set_cmt	(0X43F03479,	"this",	0);
	create_insn	(x=0X43F0348D);
	op_hex		(x,	1);
	set_cmt	(0X43F03492,	"propHash",	0);
	create_insn	(x=0X43F03497);
	op_hex		(x,	1);
	set_cmt	(0X43F0349A,	"classHash",	0);
	create_insn	(0X43F034B1);
	set_cmt	(0X43F034CB,	"switch 4 cases ",	0);
	set_cmt	(0X43F034D0,	"switch jump",	0);
	create_insn	(x=0X43F034D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F034D7,	"jumptable 43F034D0 case 0",	1);
	create_insn	(0X43F034D7);
	set_cmt	(0X43F034E2,	"jumptable 43F034D0 case 1",	1);
	create_insn	(0X43F034E2);
	set_cmt	(0X43F034ED,	"jumptable 43F034D0 case 2",	1);
	create_insn	(0X43F034ED);
	set_cmt	(0X43F034F8,	"jumptable 43F034D0 case 3",	1);
	create_insn	(0X43F034F8);
	set_cmt	(0X43F034FD,	"jumptable 43F034D0 default case",	1);
	set_name	(0X43F034FD,	"def_43F034D0");
	create_insn	(0X43F03503);
	make_array	(0X43F03505,	0X3);
	set_cmt	(0X43F03508,	"jump table for switch statement",	0);
	create_dword	(x=0X43F03508);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F03508,	"jpt_43F034D0");
	make_array	(0X43F03518,	0X8);
	create_insn	(0X43F03520);
	set_cmt	(0X43F0355C,	"interface",	0);
	set_cmt	(0X43F03562,	"index",	0);
	set_cmt	(0X43F03575,	"this",	0);
	create_insn	(x=0X43F03581);
	op_hex		(x,	1);
	set_cmt	(0X43F03599,	"propHash",	0);
	set_cmt	(0X43F0359E,	"classHash",	0);
	create_insn	(x=0X43F035AD);
	op_hex		(x,	1);
	set_cmt	(0X43F035E3,	"cmd",	0);
	create_insn	(x=0X43F035E3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F035EF);
	op_hex		(x,	1);
	create_insn	(x=0X43F03600);
	op_hex		(x,	1);
	create_insn	(x=0X43F03605);
	op_hex		(x,	1);
	create_insn	(x=0X43F03612);
	op_hex		(x,	1);
	create_insn	(x=0X43F03615);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0362A);
	op_hex		(x,	1);
	make_array	(0X43F03630,	0X10);
	create_insn	(0X43F03640);
	create_insn	(x=0X43F0365A);
	op_hex		(x,	1);
	create_insn	(x=0X43F0365F);
	op_hex		(x,	1);
	make_array	(0X43F03716,	0XA);
	create_insn	(0X43F03720);
	create_insn	(x=0X43F03723);
	op_hex		(x,	1);
	make_array	(0X43F0387E,	0X2);
	create_insn	(0X43F03880);
	create_insn	(x=0X43F03883);
	op_hex		(x,	1);
	set_cmt	(0X43F0388B,	"switch 42 cases ",	0);
	create_insn	(x=0X43F0388B);
	op_hex		(x,	1);
	create_insn	(x=0X43F03897);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0389E,	"switch jump",	0);
	create_insn	(x=0X43F0389E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F038A5,	"jumptable 43F0389E cases 45,47",	1);
	create_insn	(0X43F038A5);
	set_cmt	(0X43F038FF,	"jumptable 43F0389E cases 46,48",	1);
	create_insn	(0X43F038FF);
	create_insn	(x=0X43F0390F);
	op_hex		(x,	1);
	set_cmt	(0X43F03922,	"jumptable 43F0389E cases 43,44",	1);
	set_cmt	(0X43F0395D,	"jumptable 43F0389E case 84",	1);
	create_insn	(0X43F0395D);
	create_insn	(x=0X43F0396D);
	op_hex		(x,	1);
	set_cmt	(0X43F03972,	"jumptable 43F0389E default case, cases 49-83",	1);
	set_name	(0X43F03972,	"def_43F0389E");
	make_array	(0X43F0397A,	0X2);
	set_cmt	(0X43F0397C,	"jump table for switch statement",	0);
	create_dword	(x=0X43F0397C);
	make_array	(x,	0X5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F0397C,	"jpt_43F0389E");
	set_cmt	(0X43F03990,	"indirect table for switch statement",	0);
	create_byte	(0X43F03990);
	make_array	(0X43F03990,	0X2A);
	make_array	(0X43F039BA,	0X6);
	create_insn	(0X43F039C0);
	make_array	(0X43F03A27,	0X9);
	create_insn	(0X43F03A30);
	create_insn	(x=0X43F03A33);
	op_hex		(x,	1);
	create_insn	(x=0X43F03A36);
	op_hex		(x,	1);
	create_insn	(x=0X43F03A39);
	op_hex		(x,	1);
	create_insn	(x=0X43F03A46);
	op_hex		(x,	1);
	set_cmt	(0X43F03A4A,	"this",	0);
	create_insn	(x=0X43F03ABF);
	op_hex		(x,	1);
	set_cmt	(0X43F03ADB,	"interface",	0);
	set_cmt	(0X43F03AEA,	"index",	0);
	set_cmt	(0X43F03B47,	"this",	0);
	create_insn	(x=0X43F03B60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F03B89,	0X7);
	create_insn	(0X43F03B90);
	create_insn	(x=0X43F03B93);
	op_hex		(x,	1);
	create_insn	(x=0X43F03B96);
	op_hex		(x,	1);
	set_cmt	(0X43F03C7B,	"switch 42 cases ",	0);
	create_insn	(x=0X43F03C7B);
	op_hex		(x,	1);
	create_insn	(x=0X43F03CA5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F03CAC,	"switch jump",	0);
	create_insn	(x=0X43F03CAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F03CB3,	"jumptable 43F03CAC cases 45,47",	1);
	create_insn	(0X43F03CB3);
	set_cmt	(0X43F03D14,	"jumptable 43F03CAC default case, cases 49-83",	1);
	set_name	(0X43F03D14,	"def_43F03CAC");
	create_insn	(x=0X43F03D18);
	op_hex		(x,	1);
	set_cmt	(0X43F03E87,	"interface",	0);
	set_cmt	(0X43F03E8A,	"index",	0);
	set_cmt	(0X43F03EA7,	"jumptable 43F03CAC cases 46,48",	1);
	create_insn	(0X43F03EA7);
	create_insn	(x=0X43F03EAB);
	op_hex		(x,	1);
	set_cmt	(0X43F03EB5,	"jumptable 43F03CAC cases 43,44",	1);
	set_cmt	(0X43F03EF4,	"jumptable 43F03CAC case 84",	1);
	create_insn	(0X43F03EF4);
	create_insn	(x=0X43F03F02);
	op_hex		(x,	1);
	create_insn	(0X43F03F0B);
	set_cmt	(0X43F03F3C,	"jump table for switch statement",	0);
	create_dword	(x=0X43F03F3C);
	make_array	(x,	0X5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F03F3C,	"jpt_43F03CAC");
	set_cmt	(0X43F03F50,	"indirect table for switch statement",	0);
	create_byte	(0X43F03F50);
	make_array	(0X43F03F50,	0X2A);
	make_array	(0X43F03F7A,	0X6);
	create_insn	(0X43F03F80);
	create_insn	(x=0X43F03F83);
	op_hex		(x,	1);
	create_insn	(x=0X43F03F86);
	op_hex		(x,	1);
	create_insn	(0X43F03FE2);
	set_cmt	(0X43F040B9,	"index",	0);
	set_cmt	(0X43F040BE,	"interface",	0);
	set_cmt	(0X43F040DB,	"this",	0);
	set_cmt	(0X43F040ED,	"index",	0);
	set_cmt	(0X43F040F2,	"interface",	0);
	set_cmt	(0X43F04105,	"this",	0);
	set_cmt	(0X43F0411C,	"propHash",	0);
	set_cmt	(0X43F04121,	"classHash",	0);
	set_cmt	(0X43F0422B,	"index",	0);
	set_cmt	(0X43F04280,	"interface",	0);
	set_cmt	(0X43F0428D,	"this",	0);
	set_cmt	(0X43F042A4,	"propHash",	0);
	set_cmt	(0X43F042A9,	"classHash",	0);
	create_insn	(0X43F04330);
	create_insn	(x=0X43F04333);
	op_hex		(x,	1);
	set_cmt	(0X43F04337,	"a4",	0);
	set_cmt	(0X43F04396,	"Size",	0);
	set_cmt	(0X43F043DB,	"a3",	0);
	set_cmt	(0X43F043E0,	"a2",	0);
	set_cmt	(0X43F043E1,	"a1",	0);
	set_cmt	(0X43F043E5,	"edi0",	0);
	create_insn	(0X43F04427);
	create_insn	(x=0X43F0442C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F04455,	"Size",	0);
	create_insn	(x=0X43F04461);
	op_hex		(x,	1);
	create_insn	(x=0X43F04496);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43F044A1,	0XF);
	create_insn	(0X43F044B0);
	create_insn	(x=0X43F044B3);
	op_hex		(x,	1);
	set_cmt	(0X43F044B6,	"interface",	0);
	create_insn	(x=0X43F044BC);
	op_hex		(x,	1);
	set_cmt	(0X43F044C2,	"index",	0);
	set_cmt	(0X43F044CE,	"a4",	0);
	set_cmt	(0X43F044D6,	"this",	0);
	set_cmt	(0X43F044F0,	"index",	0);
	set_cmt	(0X43F044F5,	"interface",	0);
	set_cmt	(0X43F04502,	"this",	0);
	set_cmt	(0X43F0450B,	"a4",	0);
	set_cmt	(0X43F0450E,	"m_pPlayer",	0);
	create_insn	(x=0X43F0455A);
	op_hex		(x,	1);
	set_cmt	(0X43F045E6,	"Size",	0);
	set_cmt	(0X43F04631,	"a3",	0);
	set_cmt	(0X43F04636,	"a2",	0);
	set_cmt	(0X43F04637,	"a1",	0);
	set_cmt	(0X43F0463C,	"edi0",	0);
	create_insn	(0X43F04681);
	create_insn	(x=0X43F04687);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F046B4,	"Size",	0);
	create_insn	(x=0X43F046C6);
	op_hex		(x,	1);
	create_insn	(0X43F0473D);
	create_insn	(0X43F04747);
	create_insn	(x=0X43F0478C);
	op_hex		(x,	1);
	create_insn	(x=0X43F047B5);
	op_hex		(x,	1);
	create_insn	(x=0X43F047D7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0495A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0497C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F04A2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F04C0F,	"m_player",	0);
	set_cmt	(0X43F04C27,	"propHash",	0);
	set_cmt	(0X43F04C2C,	"classHash",	0);
	set_cmt	(0X43F04C4E,	"propHash",	0);
	set_cmt	(0X43F04C53,	"classHash",	0);
	set_cmt	(0X43F04C75,	"propHash",	0);
	set_cmt	(0X43F04C7A,	"classHash",	0);
	set_cmt	(0X43F04CE3,	"index",	0);
	set_cmt	(0X43F04CE8,	"interface",	0);
	set_cmt	(0X43F04CF5,	"this",	0);
	set_cmt	(0X43F04D01,	"this",	0);
	create_insn	(x=0X43F04D08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F04D97,	"propHash",	0);
	set_cmt	(0X43F04D9C,	"classHash",	0);
	set_cmt	(0X43F04DB7,	"propHash",	0);
	set_cmt	(0X43F04DBC,	"classHash",	0);
	set_cmt	(0X43F04DD0,	"instance",	0);
	set_cmt	(0X43F04E0F,	"end",	0);
	set_cmt	(0X43F04E14,	"start",	0);
	set_cmt	(0X43F04E67,	"propHash",	0);
	set_cmt	(0X43F04E6C,	"classHash",	0);
	set_cmt	(0X43F04E93,	"propHash",	0);
	set_cmt	(0X43F04E98,	"classHash",	0);
	create_insn	(x=0X43F04F5E);
	op_hex		(x,	1);
	create_insn	(x=0X43F04F83);
	op_hex		(x,	1);
	set_cmt	(0X43F04FA3,	"propHash",	0);
	set_cmt	(0X43F04FA8,	"classHash",	0);
	set_cmt	(0X43F04FC3,	"propHash",	0);
	set_cmt	(0X43F04FC8,	"classHash",	0);
	create_insn	(x=0X43F04FEB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0504C,	"propHash",	0);
	set_cmt	(0X43F05051,	"classHash",	0);
	set_cmt	(0X43F05078,	"message",	0);
	create_insn	(x=0X43F05078);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0507D,	"a6",	0);
	create_insn	(x=0X43F0507F);
	op_hex		(x,	1);
	set_cmt	(0X43F0508A,	"a5",	0);
	set_cmt	(0X43F05096,	"a4",	0);
	set_cmt	(0X43F0509B,	"a3",	0);
	set_cmt	(0X43F0509F,	"a2",	0);
	set_cmt	(0X43F050A1,	"a1",	0);
	create_insn	(x=0X43F050A1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F050AB);
	op_hex		(x,	1);
	create_insn	(0X43F050B3);
	create_insn	(x=0X43F050F8);
	op_hex		(x,	1);
	set_cmt	(0X43F05130,	"message",	0);
	set_cmt	(0X43F05131,	"a6",	0);
	create_insn	(x=0X43F05133);
	op_hex		(x,	1);
	set_cmt	(0X43F0513E,	"a5",	0);
	set_cmt	(0X43F0514A,	"a4",	0);
	set_cmt	(0X43F0514F,	"a3",	0);
	set_cmt	(0X43F05153,	"a2",	0);
	set_cmt	(0X43F05155,	"a1",	0);
	create_insn	(x=0X43F05155);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F05166);
	op_hex		(x,	1);
	create_insn	(x=0X43F05198);
	op_hex		(x,	1);
	create_insn	(x=0X43F051D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F052F5,	"message",	0);
	create_insn	(x=0X43F052F5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F052FA,	"a6",	0);
	create_insn	(x=0X43F052FC);
	op_hex		(x,	1);
	set_cmt	(0X43F05307,	"a5",	0);
	set_cmt	(0X43F0531B,	"a4",	0);
	set_cmt	(0X43F05320,	"a3",	0);
	set_cmt	(0X43F05324,	"a2",	0);
	set_cmt	(0X43F05326,	"a1",	0);
	create_insn	(x=0X43F05326);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F05330);
	op_hex		(x,	1);
	create_insn	(0X43F05339);
	create_insn	(x=0X43F0533F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43F0534A,	0X6);
	create_insn	(0X43F05350);
	set_cmt	(0X43F05353,	"interface",	0);
	set_cmt	(0X43F05359,	"index",	0);
	set_cmt	(0X43F05380,	"this",	0);
	set_cmt	(0X43F0539A,	"index",	0);
	set_cmt	(0X43F0539F,	"interface",	0);
	set_cmt	(0X43F053AC,	"this",	0);
	set_cmt	(0X43F053B8,	"m_pPlayer",	0);
	create_insn	(x=0X43F053D9);
	op_hex		(x,	1);
	create_insn	(x=0X43F053DC);
	op_hex		(x,	1);
	create_insn	(x=0X43F053DF);
	op_hex		(x,	1);
	create_insn	(0X43F053EF);
	set_cmt	(0X43F053F8,	"index",	0);
	set_cmt	(0X43F053FD,	"interface",	0);
	set_cmt	(0X43F0540F,	"this",	0);
	set_cmt	(0X43F0541B,	"player",	0);
	set_cmt	(0X43F05432,	"propHash",	0);
	set_cmt	(0X43F05437,	"classHash",	0);
	set_cmt	(0X43F05457,	"switch 84 cases ",	0);
	create_insn	(x=0X43F0545D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F05464,	"switch jump",	0);
	create_insn	(x=0X43F05464);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0546B,	"jumptable 43F05464 cases 43-48,84",	1);
	create_insn	(0X43F0546B);
	set_cmt	(0X43F0546F,	"propHash",	0);
	set_cmt	(0X43F05474,	"classHash",	0);
	set_cmt	(0X43F05494,	"jumptable 43F05464 default case, cases 1-42,49-83",	1);
	create_insn	(0X43F05494);
	set_name	(0X43F05494,	"def_43F05464");
	set_cmt	(0X43F054A0,	"jump table for switch statement",	0);
	create_dword	(x=0X43F054A0);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F054A0,	"jpt_43F05464");
	set_cmt	(0X43F054AC,	"indirect table for switch statement",	0);
	create_byte	(0X43F054AC);
	make_array	(0X43F054AC,	0X54);
	create_insn	(0X43F05500);
	make_array	(0X43F0551B,	0X5);
	create_insn	(0X43F05520);
	make_array	(0X43F0552B,	0X5);
	create_insn	(0X43F05530);
	create_insn	(x=0X43F05533);
	op_hex		(x,	1);
	set_cmt	(0X43F05559,	"_DWORD",	0);
	set_cmt	(0X43F0555C,	"_DWORD",	0);
	create_insn	(0X43F05598);
	create_insn	(x=0X43F055D6);
	op_hex		(x,	1);
	create_insn	(0X43F055E4);
	set_cmt	(0X43F055F7,	"_DWORD",	0);
	create_insn	(0X43F055F7);
	set_cmt	(0X43F055FA,	"_DWORD",	0);
	make_array	(0X43F0560C,	0X4);
	create_insn	(0X43F05610);
	create_insn	(x=0X43F05613);
	op_hex		(x,	1);
	set_cmt	(0X43F05623,	"index",	0);
	set_cmt	(0X43F05628,	"interface",	0);
	set_cmt	(0X43F05635,	"this",	0);
	create_insn	(0X43F056FD);
	set_cmt	(0X43F05703,	"_DWORD",	0);
	set_cmt	(0X43F0570B,	"_DWORD",	0);
	set_cmt	(0X43F0570D,	"_DWORD",	0);
	set_cmt	(0X43F05723,	"_DWORD",	0);
	create_insn	(0X43F05723);
	set_cmt	(0X43F0572B,	"_DWORD",	0);
	set_cmt	(0X43F0572D,	"_DWORD",	0);
	make_array	(0X43F0573A,	0X6);
	create_insn	(0X43F05740);
	set_name	(0X43F05740,	"C_SDK::Security::FNV1A::GetOffsetToVariableFromClass");
	create_insn	(x=0X43F05743);
	op_hex		(x,	1);
	create_insn	(x=0X43F05746);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0574E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F05751);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0575F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F05774);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F05777);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0578E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F057C1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F057C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F057C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F057CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F057D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F057D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F057DE);
	op_stkvar	(x,	0);
	create_insn	(0X43F057F2);
	create_insn	(x=0X43F057F5);
	op_stkvar	(x,	1);
	make_array	(0X43F05801,	0XF);
	create_insn	(0X43F05810);
	set_name	(0X43F05810,	"C_SDK::Security::FNV1A::GetClassPointer");
	create_insn	(x=0X43F05867);
	op_stkvar	(x,	0);
	create_insn	(0X43F0587C);
	make_array	(0X43F05885,	0XB);
	create_insn	(0X43F05890);
	create_insn	(x=0X43F05893);
	op_hex		(x,	1);
	create_insn	(0X43F058FA);
	create_insn	(0X43F0590C);
	set_cmt	(0X43F0595A,	"interface",	0);
	set_cmt	(0X43F05960,	"index",	0);
	create_insn	(0X43F05990);
	make_array	(0X43F059A8,	0X8);
	create_insn	(0X43F059B0);
	create_insn	(x=0X43F059B3);
	op_hex		(x,	1);
	set_cmt	(0X43F059B9,	"classHash",	0);
	create_insn	(x=0X43F05A27);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F05A8A);
	create_insn	(0X43F05A95);
	create_insn	(0X43F05AA0);
	create_insn	(x=0X43F05AA3);
	op_hex		(x,	1);
	create_insn	(x=0X43F05B1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F05B57);
	make_array	(0X43F05B64,	0XC);
	create_insn	(0X43F05B70);
	set_name	(0X43F05B70,	"C_SDK::Security::FNV1A::GetOffsetToVariable");
	create_insn	(x=0X43F05B73);
	op_hex		(x,	1);
	set_cmt	(0X43F05B77,	"classHash",	0);
	create_insn	(x=0X43F05B77);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F05B7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F05B9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F05BA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F05BB7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F05BBA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F05BCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F05BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F05BE4);
	op_stkvar	(x,	0);
	create_insn	(0X43F05BEA);
	create_insn	(x=0X43F05BF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F05BF6);
	op_stkvar	(x,	0);
	create_insn	(0X43F05BFC);
	create_insn	(x=0X43F05C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F05C08);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F05C0D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F05C12);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F05C25);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F05C32);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F05C4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F05C4F);
	op_stkvar	(x,	0);
	create_insn	(0X43F05C5E);
	make_array	(0X43F05C67,	0X9);
	create_insn	(0X43F05C70);
	set_name	(0X43F05C70,	"OneTap::Features::Hooks::OnScreenSizeChanged");
	make_array	(0X43F05C81,	0XF);
	create_insn	(0X43F05C90);
	set_cmt	(0X43F05CA4,	"_DWORD",	0);
	set_cmt	(0X43F05CAC,	"_DWORD",	0);
	make_array	(0X43F05CB4,	0XC);
	create_insn	(0X43F05CC0);
	create_insn	(x=0X43F05CC3);
	op_hex		(x,	1);
	create_insn	(x=0X43F05CC6);
	op_hex		(x,	1);
	set_cmt	(0X43F05CE9,	"index",	0);
	set_cmt	(0X43F05CEE,	"interface",	0);
	set_cmt	(0X43F05CFB,	"this",	0);
	set_cmt	(0X43F05D15,	"index",	0);
	set_cmt	(0X43F05D1A,	"interface",	0);
	set_cmt	(0X43F05D27,	"this",	0);
	set_cmt	(0X43F05D33,	"player",	0);
	set_cmt	(0X43F05D48,	"index",	0);
	set_cmt	(0X43F05D4D,	"interface",	0);
	set_cmt	(0X43F05D5A,	"this",	0);
	set_cmt	(0X43F05D66,	"player",	0);
	set_cmt	(0X43F05D78,	"propHash",	0);
	set_cmt	(0X43F05D7D,	"classHash",	0);
	set_cmt	(0X43F05DA2,	"index",	0);
	set_cmt	(0X43F05DA7,	"interface",	0);
	set_cmt	(0X43F05DB4,	"this",	0);
	set_cmt	(0X43F05DCB,	"propHash",	0);
	set_cmt	(0X43F05DD0,	"classHash",	0);
	set_cmt	(0X43F05E18,	"interface",	0);
	set_cmt	(0X43F05E1E,	"index",	0);
	create_insn	(0X43F05E4A);
	create_insn	(0X43F05F20);
	set_cmt	(0X43F05F23,	"_DWORD",	0);
	set_cmt	(0X43F05F27,	"_DWORD",	0);
	set_cmt	(0X43F05F2B,	"_DWORD",	0);
	set_cmt	(0X43F05F2C,	"_DWORD",	0);
	create_insn	(x=0X43F05F37);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F05F49,	0X7);
	create_insn	(0X43F05F50);
	set_name	(0X43F05F50,	"OneTap::Features::Hooks::OverrideView");
	create_insn	(x=0X43F05F53);
	op_hex		(x,	1);
	create_insn	(x=0X43F05F56);
	op_hex		(x,	1);
	create_insn	(x=0X43F05F60);
	op_stkvar	(x,	0);
	set_cmt	(0X43F05F64,	"interface",	0);
	set_cmt	(0X43F05F6A,	"index",	0);
	create_insn	(x=0X43F05F6F);
	op_stkvar	(x,	0);
	set_cmt	(0X43F05F88,	"index",	0);
	set_cmt	(0X43F05F8D,	"interface",	0);
	set_cmt	(0X43F05F9A,	"this",	0);
	create_insn	(x=0X43F05FAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F05FBE);
	op_stkvar	(x,	0);
	set_cmt	(0X43F05FEE,	"index",	0);
	set_cmt	(0X43F05FF3,	"interface",	0);
	set_cmt	(0X43F06000,	"this",	0);
	set_cmt	(0X43F0600C,	"player",	0);
	set_cmt	(0X43F06021,	"index",	0);
	set_cmt	(0X43F06026,	"interface",	0);
	set_cmt	(0X43F06033,	"this",	0);
	set_cmt	(0X43F0603F,	"player",	0);
	set_cmt	(0X43F06051,	"propHash",	0);
	set_cmt	(0X43F06056,	"classHash",	0);
	set_cmt	(0X43F06069,	"switch 33 cases ",	0);
	create_insn	(x=0X43F06069);
	op_hex		(x,	1);
	create_insn	(x=0X43F06075);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0607C,	"switch jump",	0);
	create_insn	(x=0X43F0607C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F06083,	"jumptable 43F0607C cases 8,9,11,38-40",	1);
	create_insn	(0X43F06083);
	set_cmt	(0X43F0608B,	"index",	0);
	set_cmt	(0X43F060A9,	"interface",	0);
	set_cmt	(0X43F060B6,	"this",	0);
	set_cmt	(0X43F060CD,	"propHash",	0);
	set_cmt	(0X43F060D2,	"classHash",	0);
	set_cmt	(0X43F060ED,	"index",	0);
	set_cmt	(0X43F060F2,	"interface",	0);
	set_cmt	(0X43F060FF,	"this",	0);
	set_cmt	(0X43F0610B,	"player",	0);
	set_cmt	(0X43F0611D,	"propHash",	0);
	create_insn	(x=0X43F0611D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F06122,	"classHash",	0);
	set_cmt	(0X43F0614D,	"jumptable 43F0607C default case, cases 10,12-37",	1);
	set_name	(0X43F0614D,	"def_43F0607C");
	set_cmt	(0X43F06189,	"interface",	0);
	set_cmt	(0X43F0618F,	"index",	0);
	create_insn	(0X43F061BB);
	set_cmt	(0X43F06287,	"index",	0);
	set_cmt	(0X43F0628C,	"interface",	0);
	set_cmt	(0X43F06299,	"this",	0);
	set_cmt	(0X43F062B3,	"index",	0);
	set_cmt	(0X43F062B8,	"interface",	0);
	set_cmt	(0X43F062C5,	"this",	0);
	set_cmt	(0X43F062D1,	"player",	0);
	set_cmt	(0X43F062E6,	"index",	0);
	set_cmt	(0X43F062EB,	"interface",	0);
	set_cmt	(0X43F062F8,	"this",	0);
	set_cmt	(0X43F06304,	"player",	0);
	set_cmt	(0X43F06316,	"propHash",	0);
	set_cmt	(0X43F0631B,	"classHash",	0);
	set_cmt	(0X43F06340,	"index",	0);
	set_cmt	(0X43F06345,	"interface",	0);
	set_cmt	(0X43F06352,	"this",	0);
	set_cmt	(0X43F06369,	"propHash",	0);
	set_cmt	(0X43F0636E,	"classHash",	0);
	create_insn	(x=0X43F06383);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F06398);
	op_stkvar	(x,	0);
	set_cmt	(0X43F063A9,	"index",	0);
	set_cmt	(0X43F063AE,	"interface",	0);
	set_cmt	(0X43F063BB,	"this",	0);
	set_cmt	(0X43F063D5,	"index",	0);
	set_cmt	(0X43F063DA,	"interface",	0);
	set_cmt	(0X43F063E7,	"this",	0);
	set_cmt	(0X43F063F3,	"m_pPlayer",	0);
	set_cmt	(0X43F06408,	"index",	0);
	set_cmt	(0X43F0640D,	"interface",	0);
	set_cmt	(0X43F0641A,	"this",	0);
	set_cmt	(0X43F06426,	"player",	0);
	set_cmt	(0X43F06437,	"index",	0);
	set_cmt	(0X43F0643C,	"interface",	0);
	set_cmt	(0X43F06449,	"this",	0);
	set_cmt	(0X43F06455,	"player",	0);
	set_cmt	(0X43F06467,	"propHash",	0);
	set_cmt	(0X43F0646C,	"classHash",	0);
	set_cmt	(0X43F06488,	"switch 84 cases ",	0);
	create_insn	(x=0X43F0648E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F06495,	"switch jump",	0);
	create_insn	(x=0X43F06495);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0649C,	"jumptable 43F06495 cases 43-48,84",	1);
	create_insn	(x=0X43F0649C);
	op_stkvar	(x,	0);
	create_insn	(0X43F064A3);
	set_cmt	(0X43F064A8,	"jumptable 43F06495 default case, cases 1-42,49-83",	1);
	set_name	(0X43F064A8,	"def_43F06495");
	set_cmt	(0X43F064D8,	"interface",	0);
	set_cmt	(0X43F064DE,	"index",	0);
	create_insn	(x=0X43F064FD);
	op_stkvar	(x,	0);
	create_insn	(0X43F06508);
	set_cmt	(0X43F06510,	"index",	0);
	set_cmt	(0X43F06515,	"interface",	0);
	set_cmt	(0X43F06527,	"this",	0);
	set_cmt	(0X43F06533,	"m_pPlayer",	0);
	create_insn	(x=0X43F06547);
	op_hex		(x,	1);
	create_insn	(x=0X43F06555);
	op_hex		(x,	1);
	create_insn	(x=0X43F06569);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F065CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F065E2);
	op_stkvar	(x,	1);
	set_cmt	(0X43F065EB,	"index",	0);
	set_cmt	(0X43F065F0,	"interface",	0);
	set_cmt	(0X43F065FD,	"this",	0);
	create_insn	(x=0X43F06618);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F06626);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F06634);
	op_stkvar	(x,	0);
	create_insn	(0X43F0664C);
	set_cmt	(0X43F06652,	"index",	0);
	set_cmt	(0X43F06657,	"interface",	0);
	set_cmt	(0X43F06664,	"this",	0);
	set_cmt	(0X43F0667B,	"propHash",	0);
	set_cmt	(0X43F06680,	"classHash",	0);
	create_insn	(x=0X43F066A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F066A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F066AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F066B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F066BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F066C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F066D3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F066E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F066F2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F066F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F06703);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F06707);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F06712);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0671D);
	op_hex		(x,	1);
	create_insn	(x=0X43F06721);
	op_hex		(x,	1);
	create_insn	(x=0X43F06752);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F06767);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0676E);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F06776);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0677E);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0678B,	"this",	0);
	create_insn	(x=0X43F0678B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F067A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F067B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F067CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F067E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F067E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F067ED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F067FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F06805);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0680B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F06816);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0681F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F06825);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F06832);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0683D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0684B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0685F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0686C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F06885);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0688B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F06895);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F068A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F068AD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F068C2);
	op_hex		(x,	1);
	create_insn	(x=0X43F068C7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F068CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F068E3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F068F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F068F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F068FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F06907);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0690B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F06912);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0691D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F06921);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0692C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F06937);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0693F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F06945);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0694B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F06951);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F06957);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F06962);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0696D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F06983);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F06989);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0699A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F069A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F069BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F069C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F069CF);
	op_stkvar	(x,	0);
	create_insn	(0X43F069D7);
	create_insn	(x=0X43F069E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F069EA);
	op_stkvar	(x,	0);
	create_insn	(0X43F06A1A);
	create_insn	(0X43F06A41);
	set_cmt	(0X43F06A54,	"index",	0);
	set_cmt	(0X43F06A59,	"interface",	0);
	set_cmt	(0X43F06A6A,	"this",	0);
	set_cmt	(0X43F06A81,	"propHash",	0);
	set_cmt	(0X43F06A86,	"classHash",	0);
	create_insn	(0X43F06AA1);
	set_cmt	(0X43F06AA8,	"this",	0);
	set_cmt	(0X43F06ABF,	"propHash",	0);
	set_cmt	(0X43F06AC4,	"classHash",	0);
	create_insn	(0X43F06ADC);
	set_cmt	(0X43F06AE2,	"index",	0);
	set_cmt	(0X43F06AE7,	"interface",	0);
	set_cmt	(0X43F06AF4,	"this",	0);
	set_cmt	(0X43F06B0B,	"propHash",	0);
	set_cmt	(0X43F06B10,	"classHash",	0);
	create_insn	(x=0X43F06B41);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F06B4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F06B56,	"_DWORD",	0);
	create_insn	(x=0X43F06B56);
	op_stkvar	(x,	1);
	set_cmt	(0X43F06B5A,	"_DWORD",	0);
	create_insn	(x=0X43F06B5A);
	op_stkvar	(x,	1);
	set_cmt	(0X43F06B5E,	"_DWORD",	0);
	set_cmt	(0X43F06BE9,	"index",	0);
	set_cmt	(0X43F06BEE,	"interface",	0);
	set_cmt	(0X43F06BFB,	"this",	0);
	set_cmt	(0X43F06C11,	"index",	0);
	set_cmt	(0X43F06C16,	"interface",	0);
	set_cmt	(0X43F06C23,	"this",	0);
	create_insn	(x=0X43F06C2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F06C37);
	op_stkvar	(x,	1);
	set_cmt	(0X43F06C4C,	"_DWORD",	0);
	create_insn	(x=0X43F06C4C);
	op_stkvar	(x,	0);
	set_cmt	(0X43F06C4F,	"_DWORD",	0);
	create_insn	(x=0X43F06C4F);
	op_stkvar	(x,	1);
	set_cmt	(0X43F06C53,	"_DWORD",	0);
	set_cmt	(0X43F06C64,	"jump table for switch statement",	0);
	create_dword	(x=0X43F06C64);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F06C64,	"jpt_43F0607C");
	set_cmt	(0X43F06C6C,	"indirect table for switch statement",	0);
	create_byte	(0X43F06C6C);
	make_array	(0X43F06C6C,	0X21);
	make_array	(0X43F06C8D,	0X3);
	set_cmt	(0X43F06C90,	"jump table for switch statement",	0);
	create_dword	(x=0X43F06C90);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F06C90,	"jpt_43F06495");
	set_cmt	(0X43F06C9C,	"indirect table for switch statement",	0);
	create_byte	(0X43F06C9C);
	make_array	(0X43F06C9C,	0X54);
	create_insn	(0X43F06CF0);
	make_array	(0X43F06CF1,	0XF);
	create_insn	(0X43F06D00);
	create_insn	(x=0X43F06D03);
	op_hex		(x,	1);
	create_insn	(x=0X43F06D06);
	op_hex		(x,	1);
	set_cmt	(0X43F06D1E,	"interface",	0);
	set_cmt	(0X43F06D28,	"index",	0);
	set_cmt	(0X43F06D32,	"this",	0);
	set_cmt	(0X43F06D4C,	"index",	0);
	set_cmt	(0X43F06D4F,	"interface",	0);
	set_cmt	(0X43F06D5C,	"this",	0);
	set_cmt	(0X43F06D73,	"propHash",	0);
	set_cmt	(0X43F06D78,	"classHash",	0);
	set_cmt	(0X43F06DA2,	"index",	0);
	set_cmt	(0X43F06DA7,	"interface",	0);
	set_cmt	(0X43F06DB4,	"this",	0);
	set_cmt	(0X43F06DC0,	"player",	0);
	set_cmt	(0X43F06DEA,	"propHash",	0);
	set_cmt	(0X43F06DEF,	"classHash",	0);
	set_cmt	(0X43F06E2A,	"_DWORD",	0);
	set_cmt	(0X43F06E2E,	"_DWORD",	0);
	set_cmt	(0X43F06E3B,	"_DWORD",	0);
	create_insn	(x=0X43F06E53);
	op_hex		(x,	1);
	create_insn	(x=0X43F06E61);
	op_hex		(x,	1);
	create_insn	(x=0X43F06E70);
	op_hex		(x,	1);
	create_insn	(x=0X43F06EE8);
	op_hex		(x,	1);
	create_insn	(x=0X43F06F31);
	op_hex		(x,	1);
	set_cmt	(0X43F06F42,	"_DWORD",	0);
	create_insn	(x=0X43F06F59);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F06F5E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F06F70,	"index",	0);
	set_cmt	(0X43F06F75,	"interface",	0);
	set_cmt	(0X43F06F82,	"this",	0);
	set_cmt	(0X43F06F98,	"index",	0);
	set_cmt	(0X43F06F9D,	"interface",	0);
	set_cmt	(0X43F06FAA,	"this",	0);
	set_cmt	(0X43F06FB6,	"m_pPlayer",	0);
	create_insn	(x=0X43F06FD5);
	op_hex		(x,	1);
	create_insn	(x=0X43F06FE4);
	op_hex		(x,	1);
	create_insn	(x=0X43F07048);
	op_hex		(x,	1);
	create_insn	(x=0X43F07091);
	op_hex		(x,	1);
	set_cmt	(0X43F070A2,	"_DWORD",	0);
	make_array	(0X43F070B7,	0X9);
	create_insn	(0X43F070C0);
	create_insn	(x=0X43F070C3);
	op_hex		(x,	1);
	create_insn	(x=0X43F070CB);
	op_hex		(x,	1);
	create_insn	(x=0X43F070D1);
	op_hex		(x,	1);
	set_cmt	(0X43F070E5,	"index",	0);
	set_cmt	(0X43F070EA,	"interface",	0);
	set_cmt	(0X43F070F7,	"this",	0);
	set_cmt	(0X43F0710D,	"index",	0);
	set_cmt	(0X43F07112,	"interface",	0);
	set_cmt	(0X43F0711F,	"this",	0);
	set_cmt	(0X43F0712B,	"m_pPlayer",	0);
	set_cmt	(0X43F0717E,	"_DWORD",	0);
	set_cmt	(0X43F07181,	"_DWORD",	0);
	set_cmt	(0X43F07184,	"_DWORD",	0);
	set_cmt	(0X43F07187,	"_DWORD",	0);
	set_cmt	(0X43F0718A,	"_DWORD",	0);
	make_array	(0X43F0719B,	0X5);
	create_insn	(0X43F071A0);
	make_array	(0X43F071A8,	0X8);
	create_insn	(0X43F071B0);
	create_insn	(x=0X43F071B3);
	op_hex		(x,	1);
	create_insn	(0X43F071D1);
	set_cmt	(0X43F071EC,	"propHash",	0);
	set_cmt	(0X43F071F1,	"classHash",	0);
	set_cmt	(0X43F07215,	"propHash",	0);
	set_cmt	(0X43F0721A,	"classHash",	0);
	set_cmt	(0X43F0723A,	"switch 84 cases ",	0);
	create_insn	(x=0X43F07240);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F07247,	"switch jump",	0);
	create_insn	(x=0X43F07247);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0724E,	"jumptable 43F07247 cases 1-4,30,32,36,61,63,64",	1);
	create_insn	(0X43F0724E);
	set_cmt	(0X43F07255,	"jumptable 43F07247 cases 7,8,10,13,16,39,60",	1);
	create_insn	(0X43F07255);
	set_cmt	(0X43F07259,	"jumptable 43F07247 cases 17,19,23,24,26,33,34",	1);
	create_insn	(0X43F07259);
	set_cmt	(0X43F07260,	"jumptable 43F07247 cases 9,11,38,40",	1);
	create_insn	(0X43F07260);
	set_cmt	(0X43F07267,	"jumptable 43F07247 cases 14,25,27-29,35",	1);
	create_insn	(0X43F07267);
	set_cmt	(0X43F0726E,	"jumptable 43F07247 cases 43-48,84",	1);
	create_insn	(0X43F0726E);
	set_cmt	(0X43F07275,	"switch 19 cases ",	0);
	create_insn	(x=0X43F07275);
	op_hex		(x,	1);
	create_insn	(x=0X43F07280);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F07287,	"switch jump",	0);
	create_insn	(x=0X43F07287);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0728E,	"jumptable 43F07247 cases 41,42,59\njumptable 43F07287 cases 505-509,512,514-516,519,520,522,523",	1);
	create_insn	(0X43F0728E);
	set_cmt	(0X43F07295,	"jumptable 43F07247 default case, cases 5,6,12,15,18,20-22,31,37,49-58,62,65-83\njumptable 43F07287 default case, cases 510,511,513,517,518,521",	1);
	create_insn	(0X43F07295);
	set_name	(0X43F07295,	"def_43F07247");
	set_cmt	(0X43F072A3,	"propHash",	0);
	set_cmt	(0X43F072A8,	"classHash",	0);
	create_insn	(0X43F072D8);
	create_insn	(0X43F072E2);
	create_insn	(0X43F072F1);
	set_cmt	(0X43F07305,	"propHash",	0);
	set_cmt	(0X43F0730A,	"classHash",	0);
	set_cmt	(0X43F07331,	"propHash",	0);
	set_cmt	(0X43F07336,	"classHash",	0);
	create_insn	(x=0X43F07348);
	op_hex		(x,	1);
	make_array	(0X43F07365,	0X3);
	set_cmt	(0X43F07368,	"jump table for switch statement",	0);
	create_dword	(x=0X43F07368);
	make_array	(x,	0X8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F07368,	"jpt_43F07247");
	set_cmt	(0X43F07388,	"indirect table for switch statement",	0);
	create_byte	(0X43F07388);
	make_array	(0X43F07388,	0X54);
	set_cmt	(0X43F073DC,	"jump table for switch statement",	0);
	create_dword	(x=0X43F073DC);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F073DC,	"jpt_43F07287");
	set_cmt	(0X43F073E4,	"indirect table for switch statement",	0);
	create_byte	(0X43F073E4);
	make_array	(0X43F073E4,	0X13);
	make_array	(0X43F073F7,	0X9);
	create_insn	(0X43F07400);
	make_array	(0X43F07408,	0X8);
	create_insn	(0X43F07410);
	set_cmt	(0X43F0741C,	"propHash",	0);
	set_cmt	(0X43F07421,	"classHash",	0);
	set_cmt	(0X43F07449,	"propHash",	0);
	set_cmt	(0X43F0744E,	"classHash",	0);
	set_cmt	(0X43F07472,	"propHash",	0);
	set_cmt	(0X43F07477,	"classHash",	0);
	make_array	(0X43F0748D,	0X3);
	create_insn	(0X43F07490);
	make_array	(0X43F074AB,	0X5);
	create_insn	(0X43F074B0);
	make_array	(0X43F074BB,	0X5);
	create_insn	(0X43F074C0);
	make_array	(0X43F074DB,	0X5);
	create_insn	(0X43F074E0);
	set_cmt	(0X43F07527,	"propHash",	0);
	set_cmt	(0X43F0752C,	"classHash",	0);
	create_insn	(x=0X43F07554);
	op_hex		(x,	1);
	create_insn	(0X43F07566);
	create_insn	(0X43F07570);
	create_insn	(x=0X43F07573);
	op_hex		(x,	1);
	create_insn	(x=0X43F0758F);
	op_hex		(x,	1);
	create_insn	(x=0X43F0763C);
	op_hex		(x,	1);
	create_insn	(x=0X43F07662);
	op_hex		(x,	1);
	create_insn	(x=0X43F07837);
	op_hex		(x,	1);
	create_insn	(x=0X43F07840);
	op_hex		(x,	1);
	create_insn	(x=0X43F07849);
	op_hex		(x,	1);
	create_insn	(0X43F07857);
	create_insn	(0X43F07860);
	make_array	(0X43F07875,	0XB);
	create_insn	(0X43F07880);
	create_insn	(x=0X43F0788A);
	op_hex		(x,	1);
	set_cmt	(0X43F0788E,	"propHash",	0);
	create_insn	(x=0X43F07893);
	op_hex		(x,	1);
	set_cmt	(0X43F07896,	"classHash",	0);
	create_insn	(0X43F078AF);
	set_cmt	(0X43F078C4,	"propHash",	0);
	set_cmt	(0X43F078C9,	"classHash",	0);
	make_array	(0X43F078FA,	0X6);
	create_insn	(0X43F07900);
	create_insn	(x=0X43F07903);
	op_hex		(x,	1);
	create_insn	(x=0X43F07939);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43F0794F);
	create_insn	(x=0X43F0798D);
	op_hex		(x,	1);
	create_insn	(x=0X43F079CF);
	op_hex		(x,	1);
	make_array	(0X43F07A36,	0XA);
	create_insn	(0X43F07A40);
	set_cmt	(0X43F07A4F,	"propHash",	0);
	set_cmt	(0X43F07A54,	"classHash",	0);
	make_array	(0X43F07A77,	0X9);
	create_insn	(0X43F07A80);
	make_array	(0X43F07A9B,	0X5);
	create_insn	(0X43F07AA0);
	set_name	(0X43F07AA0,	"C_SDK::Player::Animation::InvalidateBoneCache");
	create_insn	(x=0X43F07AA3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F07ABF);
	op_hex		(x,	1);
	set_cmt	(0X43F07AC3,	"propHash",	0);
	create_insn	(x=0X43F07AC8);
	op_hex		(x,	1);
	set_cmt	(0X43F07ACB,	"classHash",	0);
	create_insn	(0X43F07AEC);
	make_array	(0X43F07AFE,	0X2);
	create_insn	(0X43F07B00);
	create_insn	(x=0X43F07B03);
	op_hex		(x,	1);
	set_cmt	(0X43F07B89,	"propHash",	0);
	set_cmt	(0X43F07B8E,	"classHash",	0);
	set_cmt	(0X43F07BA4,	"propHash",	0);
	set_cmt	(0X43F07BA9,	"classHash",	0);
	create_insn	(x=0X43F07BB8);
	op_hex		(x,	1);
	set_cmt	(0X43F07BF9,	"propHash",	0);
	set_cmt	(0X43F07BFE,	"classHash",	0);
	make_array	(0X43F07C67,	0X9);
	create_insn	(0X43F07C70);
	set_name	(0X43F07C70,	"OneTap::Features::AnimationSystem::SetupBones");
	set_cmt	(0X43F07C81,	"propHash",	0);
	set_cmt	(0X43F07C86,	"classHash",	0);
	set_cmt	(0X43F07C9C,	"propHash",	0);
	set_cmt	(0X43F07CA1,	"classHash",	0);
	create_insn	(x=0X43F07CB0);
	op_hex		(x,	1);
	set_cmt	(0X43F07CB4,	"edx_",	0);
	create_insn	(x=0X43F07CB6);
	op_stkvar	(x,	1);
	set_cmt	(0X43F07CC1,	"currentTime",	0);
	create_insn	(x=0X43F07CC1);
	op_stkvar	(x,	0);
	set_cmt	(0X43F07CC6,	"ecx_",	0);
	set_cmt	(0X43F07CC9,	"boneMask",	0);
	set_cmt	(0X43F07CD1,	"maxBones",	0);
	set_cmt	(0X43F07CD6,	"matrixPointer",	0);
	create_insn	(x=0X43F07CD6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F07CE5);
	op_stkvar	(x,	0);
	set_cmt	(0X43F07CF1,	"propHash",	0);
	set_cmt	(0X43F07CF6,	"classHash",	0);
	create_insn	(x=0X43F07D11);
	op_stkvar	(x,	1);
	make_array	(0X43F07D1A,	0X6);
	create_insn	(0X43F07D20);
	set_name	(0X43F07D20,	"C_SDK::Player::Weapon::GetActiveWeapon");
	set_cmt	(0X43F07D34,	"propHash",	0);
	set_cmt	(0X43F07D39,	"classHash",	0);
	set_cmt	(0X43F07D5D,	"instance",	0);
	set_cmt	(0X43F07D68,	"interface",	0);
	set_cmt	(0X43F07D6B,	"index",	0);
	create_insn	(0X43F07D82);
	make_array	(0X43F07D87,	0X9);
	create_insn	(0X43F07D90);
	set_cmt	(0X43F07DAE,	"propHash",	0);
	set_cmt	(0X43F07DB3,	"classHash",	0);
	create_insn	(x=0X43F07DC2);
	op_hex		(x,	1);
	set_cmt	(0X43F07DDF,	"player",	0);
	set_cmt	(0X43F07DF9,	"propHash",	0);
	set_cmt	(0X43F07DFE,	"classHash",	0);
	set_cmt	(0X43F07E1D,	"propHash",	0);
	set_cmt	(0X43F07E22,	"classHash",	0);
	set_cmt	(0X43F07E41,	"switch 84 cases ",	0);
	create_insn	(x=0X43F07E4B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F07E52,	"switch jump",	0);
	create_insn	(x=0X43F07E52);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F07E59,	"switch 19 cases ",	0);
	create_insn	(x=0X43F07E59);
	op_hex		(x,	1);
	create_insn	(x=0X43F07E67);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F07E6E,	"switch jump",	0);
	create_insn	(x=0X43F07E6E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43F07E75);
	set_cmt	(0X43F07E7B,	"jumptable 43F07E52 cases 41,42,59\njumptable 43F07E6E cases 505-509,512,514-516,519,520,522,523",	1);
	set_cmt	(0X43F07E84,	"propHash",	0);
	set_cmt	(0X43F07E89,	"classHash",	0);
	create_insn	(x=0X43F07EA4);
	op_hex		(x,	1);
	set_cmt	(0X43F07EBA,	"propHash",	0);
	set_cmt	(0X43F07EBF,	"classHash",	0);
	set_cmt	(0X43F07EEB,	"propHash",	0);
	set_cmt	(0X43F07EF0,	"classHash",	0);
	set_cmt	(0X43F07F25,	"propHash",	0);
	set_cmt	(0X43F07F2A,	"classHash",	0);
	set_cmt	(0X43F07F4C,	"propHash",	0);
	set_cmt	(0X43F07F51,	"classHash",	0);
	create_insn	(0X43F07F73);
	set_cmt	(0X43F07F7C,	"propHash",	0);
	set_cmt	(0X43F07F81,	"classHash",	0);
	set_cmt	(0X43F07FA3,	"propHash",	0);
	set_cmt	(0X43F07FA8,	"classHash",	0);
	set_cmt	(0X43F07FC1,	"propHash",	0);
	set_cmt	(0X43F07FC6,	"classHash",	0);
	create_insn	(0X43F07FF8);
	set_cmt	(0X43F08001,	"propHash",	0);
	set_cmt	(0X43F08006,	"classHash",	0);
	create_insn	(0X43F08027);
	set_cmt	(0X43F08038,	"jumptable 43F07E52 default case, cases 1-40,43-58,60-84\njumptable 43F07E6E default case, cases 510,511,513,517,518,521",	1);
	create_insn	(0X43F08038);
	set_name	(0X43F08038,	"def_43F07E52");
	make_array	(0X43F08041,	0X3);
	set_cmt	(0X43F08044,	"jump table for switch statement",	0);
	create_dword	(x=0X43F08044);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F08044,	"jpt_43F07E52");
	set_cmt	(0X43F08050,	"indirect table for switch statement",	0);
	create_byte	(0X43F08050);
	make_array	(0X43F08050,	0X54);
	set_cmt	(0X43F080A4,	"jump table for switch statement",	0);
	create_dword	(x=0X43F080A4);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F080A4,	"jpt_43F07E6E");
	set_cmt	(0X43F080AC,	"indirect table for switch statement",	0);
	create_byte	(0X43F080AC);
	make_array	(0X43F080AC,	0X13);
	create_insn	(0X43F080C0);
	set_name	(0X43F080C0,	"C_SDK::Player::Controller::IsInTeam");
	set_cmt	(0X43F080CA,	"interface",	0);
	set_cmt	(0X43F080D0,	"index",	0);
	set_cmt	(0X43F080DC,	"this",	0);
	set_cmt	(0X43F080F0,	"interface",	0);
	set_cmt	(0X43F080F6,	"index",	0);
	set_cmt	(0X43F08109,	"this",	0);
	set_cmt	(0X43F08120,	"index",	0);
	set_cmt	(0X43F08125,	"interface",	0);
	set_cmt	(0X43F08132,	"this",	0);
	set_cmt	(0X43F0814A,	"propHash",	0);
	set_cmt	(0X43F0814F,	"classHash",	0);
	set_cmt	(0X43F08167,	"propHash",	0);
	set_cmt	(0X43F0816C,	"classHash",	0);
	create_insn	(0X43F08193);
	make_array	(0X43F08198,	0X8);
	create_insn	(0X43F081A0);
	set_cmt	(0X43F081A4,	"interface",	0);
	set_cmt	(0X43F081AA,	"index",	0);
	set_cmt	(0X43F081BD,	"this",	0);
	create_insn	(0X43F081E7);
	create_insn	(0X43F08202);
	create_insn	(0X43F08216);
	set_cmt	(0X43F08230,	"this",	0);
	set_cmt	(0X43F0824E,	"index",	0);
	set_cmt	(0X43F08253,	"interface",	0);
	set_cmt	(0X43F08260,	"this",	0);
	set_cmt	(0X43F0827D,	"propHash",	0);
	set_cmt	(0X43F08282,	"classHash",	0);
	set_cmt	(0X43F082A0,	"propHash",	0);
	set_cmt	(0X43F082A5,	"classHash",	0);
	set_cmt	(0X43F082C3,	"m_player",	0);
	create_insn	(0X43F082D4);
	make_array	(0X43F08311,	0XF);
	create_insn	(0X43F08320);
	create_insn	(x=0X43F08323);
	op_hex		(x,	1);
	create_insn	(x=0X43F08326);
	op_hex		(x,	1);
	set_cmt	(0X43F0833A,	"interface",	0);
	set_cmt	(0X43F08340,	"index",	0);
	set_cmt	(0X43F08350,	"vTable",	0);
	create_insn	(x=0X43F083B5);
	op_hex		(x,	1);
	create_insn	(x=0X43F083B9);
	op_hex		(x,	1);
	set_cmt	(0X43F08419,	"instance",	0);
	set_cmt	(0X43F0842B,	"index",	0);
	set_cmt	(0X43F08430,	"interface",	0);
	set_cmt	(0X43F08443,	"index",	0);
	set_cmt	(0X43F08448,	"interface",	0);
	set_cmt	(0X43F08454,	"switch 148 cases ",	0);
	create_insn	(x=0X43F08454);
	op_hex		(x,	1);
	create_insn	(x=0X43F08462);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F08469,	"switch jump",	0);
	create_insn	(x=0X43F08469);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F08470,	"jumptable 43F08469 case 40",	1);
	create_insn	(0X43F08470);
	set_cmt	(0X43F08477,	"interface",	0);
	set_cmt	(0X43F0847F,	"index",	0);
	create_insn	(0X43F084B0);
	set_cmt	(0X43F0850F,	"index",	0);
	set_cmt	(0X43F08514,	"interface",	0);
	set_cmt	(0X43F08521,	"vTable",	0);
	set_cmt	(0X43F08538,	"propHash",	0);
	set_cmt	(0X43F0853D,	"classHash",	0);
	create_insn	(0X43F08588);
	create_insn	(x=0X43F0859D);
	op_hex		(x,	1);
	create_insn	(x=0X43F085B0);
	op_hex		(x,	1);
	set_cmt	(0X43F085E6,	"jumptable 43F08469 case 128",	1);
	create_insn	(0X43F085E6);
	set_cmt	(0X43F085F9,	"jumptable 43F08469 case 53",	1);
	create_insn	(0X43F085F9);
	set_cmt	(0X43F0860C,	"jumptable 43F08469 cases 9,48,113,156",	1);
	create_insn	(0X43F0860C);
	set_cmt	(0X43F08622,	"jumptable 43F08469 default case, cases 10-39,41-47,49-52,54-112,114-127,129-155",	1);
	create_insn	(0X43F08622);
	set_name	(0X43F08622,	"def_43F08469");
	create_insn	(0X43F0862B);
	create_insn	(x=0X43F0864B);
	op_hex		(x,	1);
	create_insn	(x=0X43F0865A);
	op_hex		(x,	1);
	create_insn	(x=0X43F0868C);
	op_hex		(x,	1);
	set_cmt	(0X43F086C8,	"_DWORD",	0);
	set_cmt	(0X43F086D0,	"_DWORD",	0);
	set_cmt	(0X43F086D2,	"_DWORD",	0);
	set_cmt	(0X43F086EF,	"_DWORD",	0);
	create_insn	(0X43F086EF);
	set_cmt	(0X43F086F7,	"_DWORD",	0);
	set_cmt	(0X43F086F9,	"_DWORD",	0);
	make_array	(0X43F08706,	0X2);
	set_cmt	(0X43F08708,	"jump table for switch statement",	0);
	create_dword	(x=0X43F08708);
	make_array	(x,	0X5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F08708,	"jpt_43F08469");
	set_cmt	(0X43F0871C,	"indirect table for switch statement",	0);
	create_byte	(0X43F0871C);
	make_array	(0X43F0871C,	0X94);
	create_insn	(0X43F087B0);
	set_name	(0X43F087B0,	"OneTap::Features::EnginePrediction::PreStart");
	create_insn	(x=0X43F087FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F08802);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0880E,	"index",	0);
	set_cmt	(0X43F08813,	"interface",	0);
	set_cmt	(0X43F08820,	"this",	0);
	set_cmt	(0X43F0882C,	"player",	0);
	set_cmt	(0X43F0883D,	"index",	0);
	set_cmt	(0X43F08842,	"interface",	0);
	set_cmt	(0X43F0884F,	"this",	0);
	set_cmt	(0X43F0885B,	"player",	0);
	create_insn	(0X43F08870);
	create_insn	(x=0X43F08878);
	op_hex		(x,	1);
	set_cmt	(0X43F08881,	"index",	0);
	set_cmt	(0X43F088B4,	"interface",	0);
	set_cmt	(0X43F088C7,	"this",	0);
	create_insn	(x=0X43F088DB);
	op_hex		(x,	1);
	set_cmt	(0X43F088E0,	"propHash",	0);
	create_insn	(x=0X43F088E5);
	op_hex		(x,	1);
	set_cmt	(0X43F088E8,	"classHash",	0);
	create_insn	(0X43F088FF);
	set_cmt	(0X43F08909,	"index",	0);
	set_cmt	(0X43F08914,	"interface",	0);
	set_cmt	(0X43F08926,	"this",	0);
	set_cmt	(0X43F0893D,	"propHash",	0);
	set_cmt	(0X43F08942,	"classHash",	0);
	create_insn	(x=0X43F08987);
	op_hex		(x,	1);
	create_insn	(x=0X43F0898C);
	op_hex		(x,	1);
	create_insn	(x=0X43F08999);
	op_hex		(x,	1);
	create_insn	(x=0X43F0899C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F089AF,	"a2",	0);
	set_cmt	(0X43F089B1,	"this",	0);
	create_insn	(x=0X43F089C6);
	op_hex		(x,	1);
	create_insn	(x=0X43F089CB);
	op_hex		(x,	1);
	create_insn	(x=0X43F089D8);
	op_hex		(x,	1);
	create_insn	(x=0X43F089DB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F089E1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F089F5);
	set_cmt	(0X43F08A26,	"index",	0);
	set_cmt	(0X43F08A31,	"interface",	0);
	set_cmt	(0X43F08A65,	"this",	0);
	create_insn	(x=0X43F08A80);
	op_hex		(x,	1);
	create_insn	(x=0X43F08A85);
	op_hex		(x,	1);
	create_insn	(x=0X43F08A92);
	op_hex		(x,	1);
	create_insn	(x=0X43F08A95);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F08AAA,	"index",	0);
	set_cmt	(0X43F08ABD,	"interface",	0);
	set_cmt	(0X43F08ACA,	"this",	0);
	set_cmt	(0X43F08AE1,	"propHash",	0);
	set_cmt	(0X43F08AE6,	"classHash",	0);
	set_cmt	(0X43F08AFA,	"index",	0);
	set_cmt	(0X43F08B28,	"interface",	0);
	set_cmt	(0X43F08B3D,	"this",	0);
	set_cmt	(0X43F08B54,	"index",	0);
	set_cmt	(0X43F08B65,	"interface",	0);
	set_cmt	(0X43F08B75,	"this",	0);
	create_insn	(x=0X43F08B81);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F08BA1,	"index",	0);
	set_cmt	(0X43F08BA6,	"interface",	0);
	set_cmt	(0X43F08BB3,	"this",	0);
	create_insn	(x=0X43F08BC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F08BC5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F08BD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F08BE3,	0XD);
	create_insn	(0X43F08BF0);
	set_name	(0X43F08BF0,	"OneTap::Features::EnginePrediction::RePredict");
	create_insn	(x=0X43F08BF3);
	op_hex		(x,	1);
	set_cmt	(0X43F08BF9,	"index",	0);
	set_cmt	(0X43F08BFE,	"interface",	0);
	create_insn	(x=0X43F08C0B);
	op_stkvar	(x,	0);
	set_cmt	(0X43F08C15,	"this",	0);
	set_cmt	(0X43F08C2F,	"index",	0);
	set_cmt	(0X43F08C34,	"interface",	0);
	set_cmt	(0X43F08C41,	"this",	0);
	set_cmt	(0X43F08C4D,	"m_pPlayer",	0);
	set_cmt	(0X43F08C62,	"index",	0);
	set_cmt	(0X43F08C67,	"interface",	0);
	set_cmt	(0X43F08C74,	"this",	0);
	set_cmt	(0X43F08C8F,	"index",	0);
	set_cmt	(0X43F08C94,	"interface",	0);
	set_cmt	(0X43F08CA2,	"this",	0);
	create_insn	(x=0X43F08CB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F08CC1);
	op_stkvar	(x,	1);
	set_cmt	(0X43F08CC4,	"index",	0);
	set_cmt	(0X43F08D51,	"interface",	0);
	create_insn	(x=0X43F08D57);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F08D5A);
	op_stkvar	(x,	0);
	set_cmt	(0X43F08D64,	"this",	0);
	create_insn	(x=0X43F08D7F);
	op_hex		(x,	1);
	create_insn	(x=0X43F08D84);
	op_hex		(x,	1);
	create_insn	(x=0X43F08D91);
	op_hex		(x,	1);
	create_insn	(x=0X43F08D94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F08DA9,	"index",	0);
	set_cmt	(0X43F08DB9,	"interface",	0);
	set_cmt	(0X43F08DC6,	"this",	0);
	set_cmt	(0X43F08DDD,	"propHash",	0);
	set_cmt	(0X43F08DE2,	"classHash",	0);
	set_cmt	(0X43F08DF6,	"index",	0);
	set_cmt	(0X43F08E13,	"interface",	0);
	set_cmt	(0X43F08E20,	"this",	0);
	set_cmt	(0X43F08E37,	"propHash",	0);
	set_cmt	(0X43F08E3C,	"classHash",	0);
	create_insn	(x=0X43F08E4B);
	op_hex		(x,	1);
	set_cmt	(0X43F08E63,	"index",	0);
	set_cmt	(0X43F08E74,	"interface",	0);
	set_cmt	(0X43F08E86,	"this",	0);
	set_cmt	(0X43F08E9D,	"index",	0);
	set_cmt	(0X43F08EA8,	"interface",	0);
	set_cmt	(0X43F08EBA,	"this",	0);
	set_cmt	(0X43F08ED1,	"index",	0);
	set_cmt	(0X43F08EDC,	"interface",	0);
	set_cmt	(0X43F08EFC,	"this",	0);
	create_insn	(x=0X43F08F08);
	op_stkvar	(x,	0);
	set_cmt	(0X43F08F16,	"index",	0);
	set_cmt	(0X43F08F21,	"interface",	0);
	set_cmt	(0X43F08F3C,	"this",	0);
	create_insn	(x=0X43F08F48);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F08F4B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F08F54);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F08F57);
	op_stkvar	(x,	1);
	set_cmt	(0X43F08F63,	"index",	0);
	set_cmt	(0X43F08F6E,	"interface",	0);
	set_cmt	(0X43F08F82,	"this",	0);
	create_insn	(x=0X43F08F9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F08FA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F08FA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F08FB8);
	op_stkvar	(x,	1);
	create_insn	(0X43F08FD4);
	set_cmt	(0X43F08FDF,	"index",	0);
	set_cmt	(0X43F08FE4,	"interface",	0);
	set_cmt	(0X43F08FF1,	"this",	0);
	set_cmt	(0X43F08FFD,	"player",	0);
	set_cmt	(0X43F09012,	"index",	0);
	set_cmt	(0X43F09017,	"interface",	0);
	set_cmt	(0X43F09024,	"this",	0);
	set_cmt	(0X43F09030,	"player",	0);
	set_cmt	(0X43F09037,	"instance",	0);
	set_cmt	(0X43F09046,	"index",	0);
	set_cmt	(0X43F0904B,	"interface",	0);
	set_cmt	(0X43F09058,	"this",	0);
	set_cmt	(0X43F09064,	"player",	0);
	set_cmt	(0X43F0906B,	"interface",	0);
	set_cmt	(0X43F0906D,	"index",	0);
	create_insn	(x=0X43F09077);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0907A);
	op_stkvar	(x,	0);
	set_cmt	(0X43F09083,	"index",	0);
	set_cmt	(0X43F09088,	"interface",	0);
	set_cmt	(0X43F0909B,	"this",	0);
	set_cmt	(0X43F090A7,	"player",	0);
	set_cmt	(0X43F090AE,	"interface",	0);
	set_cmt	(0X43F090B0,	"index",	0);
	create_insn	(x=0X43F090BA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F090BD);
	op_stkvar	(x,	0);
	create_insn	(0X43F090CE);
	make_array	(0X43F090EA,	0X6);
	create_insn	(0X43F090F0);
	make_array	(0X43F09135,	0XB);
	create_insn	(0X43F09140);
	create_insn	(x=0X43F09148);
	op_hex		(x,	1);
	create_insn	(0X43F09150);
	create_insn	(x=0X43F09157);
	op_hex		(x,	1);
	create_insn	(0X43F09160);
	set_name	(0X43F09160,	"OneTap::Engine::Instance");
	create_insn	(x=0X43F09163);
	op_hex		(x,	1);
	create_insn	(x=0X43F09166);
	op_hex		(x,	1);
	create_insn	(x=0X43F09169);
	op_hex		(x,	1);
	create_insn	(x=0X43F09170);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F09176);
	op_hex		(x,	1);
	set_cmt	(0X43F0918B,	"Trap to Debugger",	0);
	create_insn	(x=0X43F0918B);
	op_hex		(x,	0);
	create_insn	(0X43F091AD);
	create_insn	(0X43F09219);
	create_insn	(0X43F0922B);
	set_cmt	(0X43F09268,	"a3",	0);
	create_insn	(x=0X43F09272);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0927F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F092D7);
	set_cmt	(0X43F092FD,	"_DWORD",	0);
	create_insn	(0X43F09321);
	set_cmt	(0X43F09343,	"a1",	0);
	set_cmt	(0X43F09346,	"a2",	0);
	set_cmt	(0X43F09354,	"_DWORD",	0);
	make_array	(0X43F0936C,	0X4);
	create_insn	(0X43F09370);
	set_name	(0X43F09370,	"OneTap::GUI::Watermark::Update");
	create_insn	(x=0X43F09373);
	op_hex		(x,	1);
	create_insn	(x=0X43F09376);
	op_hex		(x,	1);
	create_insn	(x=0X43F09379);
	op_hex		(x,	1);
	create_insn	(x=0X43F09380);
	op_stkvar	(x,	0);
	set_cmt	(0X43F09386,	"interface",	0);
	create_insn	(x=0X43F0938C);
	op_hex		(x,	1);
	set_cmt	(0X43F09392,	"index",	0);
	set_cmt	(0X43F093AE,	"index",	0);
	set_cmt	(0X43F093B3,	"interface",	0);
	set_cmt	(0X43F093C0,	"this",	0);
	set_cmt	(0X43F093DA,	"index",	0);
	set_cmt	(0X43F093DF,	"interface",	0);
	set_cmt	(0X43F093EC,	"this",	0);
	set_cmt	(0X43F093F8,	"m_pPlayer",	0);
	set_cmt	(0X43F09422,	"interface",	0);
	create_insn	(x=0X43F09428);
	op_hex		(x,	1);
	set_cmt	(0X43F09439,	"index",	0);
	create_insn	(x=0X43F0943E);
	op_hex		(x,	1);
	set_cmt	(0X43F09458,	"this",	0);
	set_cmt	(0X43F0946F,	"propHash",	0);
	set_cmt	(0X43F09474,	"classHash",	0);
	create_insn	(x=0X43F0949B);
	op_hex		(x,	1);
	create_insn	(x=0X43F0949E);
	op_hex		(x,	1);
	set_cmt	(0X43F09512,	"index",	0);
	set_cmt	(0X43F09517,	"interface",	0);
	set_cmt	(0X43F09524,	"this",	0);
	set_cmt	(0X43F09530,	"m_pPlayer",	0);
	set_cmt	(0X43F09545,	"index",	0);
	set_cmt	(0X43F0954A,	"interface",	0);
	set_cmt	(0X43F09557,	"this",	0);
	set_cmt	(0X43F09563,	"player",	0);
	create_insn	(x=0X43F09689);
	op_hex		(x,	1);
	create_insn	(x=0X43F0968C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F09694);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0969C);
	op_stkvar	(x,	0);
	set_cmt	(0X43F096BC,	"index",	0);
	set_cmt	(0X43F096C1,	"interface",	0);
	set_cmt	(0X43F096CE,	"this",	0);
	set_cmt	(0X43F096DA,	"m_pPlayer",	0);
	create_insn	(x=0X43F09702);
	op_hex		(x,	1);
	create_insn	(x=0X43F09704);
	op_hex		(x,	1);
	set_cmt	(0X43F0972D,	"a2",	0);
	set_cmt	(0X43F09735,	"a1",	0);
	set_cmt	(0X43F09747,	"a9",	0);
	set_cmt	(0X43F09748,	"a8",	0);
	set_cmt	(0X43F09749,	"a7",	0);
	set_cmt	(0X43F0974A,	"a6",	0);
	create_insn	(x=0X43F09750);
	op_hex		(x,	1);
	set_cmt	(0X43F09753,	"a5",	0);
	create_insn	(x=0X43F09753);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0975B,	"a4",	0);
	create_insn	(x=0X43F0975B);
	op_stkvar	(x,	0);
	set_cmt	(0X43F09762,	"a3",	0);
	set_cmt	(0X43F09774,	"a9",	0);
	set_cmt	(0X43F09775,	"a8",	0);
	set_cmt	(0X43F09776,	"a7",	0);
	set_cmt	(0X43F0977B,	"a6",	0);
	create_insn	(x=0X43F0977F);
	op_hex		(x,	1);
	set_cmt	(0X43F09785,	"a5",	0);
	create_insn	(x=0X43F09785);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0978D,	"a4",	0);
	create_insn	(x=0X43F0978D);
	op_stkvar	(x,	0);
	set_cmt	(0X43F09794,	"a2",	0);
	set_cmt	(0X43F0979C,	"a1",	0);
	set_cmt	(0X43F097A4,	"a3",	0);
	create_insn	(x=0X43F097C1);
	op_hex		(x,	1);
	create_insn	(x=0X43F09807);
	op_hex		(x,	1);
	create_insn	(x=0X43F09837);
	op_hex		(x,	1);
	create_insn	(x=0X43F0987C);
	op_hex		(x,	1);
	set_cmt	(0X43F098C9,	"a3",	0);
	set_cmt	(0X43F098CA,	"a2",	0);
	set_cmt	(0X43F098CB,	"this",	0);
	create_insn	(x=0X43F098DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0990A,	"a3",	0);
	set_cmt	(0X43F0990B,	"a2",	0);
	create_insn	(x=0X43F0990B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F09910,	"this",	0);
	set_cmt	(0X43F0994F,	"interface",	0);
	set_cmt	(0X43F09955,	"index",	0);
	set_cmt	(0X43F0996D,	"index",	0);
	set_cmt	(0X43F09972,	"interface",	0);
	set_cmt	(0X43F0997F,	"this",	0);
	create_insn	(x=0X43F099AA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F09A37);
	op_hex		(x,	1);
	create_insn	(0X43F09A4D);
	create_insn	(x=0X43F09A97);
	op_hex		(x,	1);
	create_insn	(x=0X43F09B0B);
	op_hex		(x,	1);
	create_insn	(x=0X43F09B88);
	op_hex		(x,	1);
	create_insn	(x=0X43F09BC1);
	op_hex		(x,	1);
	create_insn	(x=0X43F09BD2);
	op_hex		(x,	1);
	create_insn	(x=0X43F09C4B);
	op_hex		(x,	1);
	create_insn	(x=0X43F09CA8);
	op_hex		(x,	1);
	set_cmt	(0X43F09D12,	"a3",	0);
	set_cmt	(0X43F09D13,	"a2",	0);
	set_cmt	(0X43F09D14,	"this",	0);
	create_insn	(0X43F09D5D);
	create_insn	(x=0X43F09D72);
	op_hex		(x,	1);
	make_array	(0X43F09D96,	0XA);
	create_insn	(0X43F09DA0);
	make_array	(0X43F09DAD,	0X3);
	create_insn	(0X43F09DB0);
	set_name	(0X43F09DB0,	"OneTap::Startup::Instance");
	create_insn	(x=0X43F09DB3);
	op_hex		(x,	1);
	create_insn	(x=0X43F09DB6);
	op_hex		(x,	1);
	update_extra_cmt		(0X43F09DC2,	E_PREV + 0,	"\x01\x04; 23:   if ( !OneTap::Globals::Engine::IsInitialized )");
	update_extra_cmt		(0X43F09DC4,	E_PREV + 0,	"\x01\x04; 24:     OneTap::Engine::Instance(&savedregs);");
	create_insn	(x=0X43F09DD0);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43F09DD3,	E_PREV + 0,	"\x01\x04; 25:   if ( !OneTap::Globals::GUI::IsMenuAlreadyRender )");
	update_extra_cmt		(0X43F09DD5,	E_PREV + 0,	"\x01\x04; 26:     OneTap::GUI::Instance(&savedregs, a7);");
	create_insn	(x=0X43F09DD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	update_extra_cmt		(0X43F09DE0,	E_PREV + 0,	"\x01\x04; 27:   if...");
	create_insn	(x=0X43F09DE5);
	op_hex		(x,	1);
	create_insn	(x=0X43F09DE9);
	op_hex		(x,	1);
	create_insn	(x=0X43F09DEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	update_extra_cmt		(0X43F09DFB,	E_PREV + 0,	"\x01\x04; 28:   sub_43DE5F90(&v27);");
	create_insn	(x=0X43F09DFB);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43F09E04,	E_PREV + 0,	"\x01\x04; 29:   v11 = v27 - qword_4473D6D8;");
	create_insn	(x=0X43F09E04);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43F09E10,	E_PREV + 0,	"\x01\x04; 30:   v12 = (v27 - qword_4473D6D8) >> 32;");
	create_insn	(x=0X43F09E10);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43F09E1C,	E_PREV + 0,	"\x01\x04; 31:   HIDWORD(qword_4473D6D8) = HIDWORD(v27);");
	update_extra_cmt		(0X43F09E25,	E_PREV + 0,	"\x01\x04; 32:   v13 = 1;");
	update_extra_cmt		(0X43F09E2A,	E_PREV + 0,	"\x01\x04; 33:   HIDWORD(v26) = v12;");
	update_extra_cmt		(0X43F09E30,	E_PREV + 0,	"\x01\x04; 34:   if ( a7 )");
	update_extra_cmt		(0X43F09E30,	E_PREV + 1,	"\x01\x04; 35:     v13 = a7;");
	update_extra_cmt		(0X43F09E33,	E_PREV + 0,	"\x01\x04; 36:   LODWORD(qword_4473D6D8) = v27;");
	update_extra_cmt		(0X43F09E39,	E_PREV + 0,	"\x01\x04; 37:   LODWORD(v26) = v11;");
	update_extra_cmt		(0X43F09E3A,	E_PREV + 0,	"\x01\x04; 38:   OneTap::Globals::Engine::IsInitialized = v13;");
	update_extra_cmt		(0X43F09E3F,	E_PREV + 0,	"\x01\x04; 39:   v14 = sub_43F1C830(v26, 0xF4240u, 0);");
	update_extra_cmt		(0X43F09E44,	E_PREV + 0,	"\x01\x04; 40:   *&a2 = sub_43F1CD30(v14, v15);");
	update_extra_cmt		(0X43F09E4B,	E_PREV + 0,	"\x01\x04; 41:   *&a2 = *&a2;");
	update_extra_cmt		(0X43F09E4F,	E_PREV + 0,	"\x01\x04; 44:   v16 = sub_43DE5F30(C_SDK::Globals::IEngineClient);");
	update_extra_cmt		(0X43F09E55,	E_PREV + 0,	"\x01\x04; 42:   *&a2 = *&a2 / *&dword_43F40B6C;");
	update_extra_cmt		(0X43F09E5D,	E_PREV + 0,	"\x01\x04; 43:   dword_44716128 = a2;");
	update_extra_cmt		(0X43F09E6A,	E_PREV + 0,	"\x01\x04; 45:   v16(&dword_44716190, &dword_44716194);");
	create_insn	(x=0X43F09E6A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F09E6F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	update_extra_cmt		(0X43F09E76,	E_PREV + 0,	"\x01\x04; 46:   v17 = dword_44717498;");
	update_extra_cmt		(0X43F09E7C,	E_PREV + 0,	"\x01\x04; 47:   (*(**(dword_44717498 + 12) + 16))(*(dword_44717498 + 12));");
	update_extra_cmt		(0X43F09E85,	E_PREV + 0,	"\x01\x04; 48:   (*(**(v17 + 16) + 20))(*(v17 + 16));");
	set_cmt	(0X43F09E88,	"color",	0);
	update_extra_cmt		(0X43F09E8E,	E_PREV + 0,	"\x01\x04; 49:   OneTap::GUI::Watermark::Update(&savedregs, a7, a2, a3, a4, a5, a6);");
	update_extra_cmt		(0X43F09E93,	E_PREV + 0,	"\x01\x04; 50:   OneTap::GUI::Watermark::Render(&savedregs, a7, a1);");
	create_insn	(x=0X43F09E93);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	update_extra_cmt		(0X43F09E9D,	E_PREV + 0,	"\x01\x04; 51:   v18 = dword_43F1F328;");
	update_extra_cmt		(0X43F09EAB,	E_PREV + 0,	"\x01\x04; 52:   if ( dword_447175FC == *&dword_43F40870 )");
	create_insn	(x=0X43F09EB6);
	op_hex		(x,	1);
	update_extra_cmt		(0X43F09EBB,	E_PREV + 0,	"\x01\x04; 53:     dword_447175FC = dword_43F1F328();");
	update_extra_cmt		(0X43F09EC2,	E_PREV + 0,	"\x01\x04; 54:   if ( *OneTap::Configuration::RainbowModePresent )");
	update_extra_cmt		(0X43F09ED0,	E_PREV + 0,	"\x01\x04; 56:     v19 = v18();");
	update_extra_cmt		(0X43F09ED2,	E_PREV + 0,	"\x01\x04; 57:     v20 = off_447175EC;");
	update_extra_cmt		(0X43F09ED8,	E_PREV + 0,	"\x01\x04; 59:     v22 = sub_43DE83C0(&v27, ((v19 - dword_447175FC) / 10 % 1000) / *&dword_43F40B6C, *&dword_43F40950);");
	set_cmt	(0X43F09EEF,	"a3",	0);
	update_extra_cmt		(0X43F09EF2,	E_PREV + 0,	"\x01\x04; 58:     v21 = *(off_447175EC + 3);");
	create_insn	(x=0X43F09EF5);
	op_hex		(x,	1);
	create_insn	(x=0X43F09EFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F09EFE);
	op_hex		(x,	1);
	create_insn	(x=0X43F09F0A);
	op_hex		(x,	1);
	create_insn	(x=0X43F09F0F);
	op_hex		(x,	1);
	set_cmt	(0X43F09F20,	"a1",	0);
	create_insn	(x=0X43F09F20);
	op_stkvar	(x,	1);
	set_cmt	(0X43F09F27,	"a2",	0);
	update_extra_cmt		(0X43F09F34,	E_PREV + 0,	"\x01\x04; 60:     *v20 = *v22;");
	update_extra_cmt		(0X43F09F39,	E_PREV + 0,	"\x01\x04; 61:     *(v20 + 1) = v22[1];");
	update_extra_cmt		(0X43F09F40,	E_PREV + 0,	"\x01\x04; 62:     *(v20 + 2) = v22[2];");
	update_extra_cmt		(0X43F09F47,	E_PREV + 0,	"\x01\x04; 63:     *(v20 + 3) = v22[3];");
	create_insn	(x=0X43F09F4A);
	op_stkvar	(x,	1);
	update_extra_cmt		(0X43F09F51,	E_PREV + 0,	"\x01\x04; 64:     *(off_447175EC + 3) = v21;");
	update_extra_cmt		(0X43F09F59,	E_PREV + 0,	"\x01\x04; 66:   if ( BYTE2(OneTap::Globals::GUI::IsMenuAlreadyRender) )");
	update_extra_cmt		(0X43F09F62,	E_PREV + 0,	"\x01\x04; 67:     sub_43E3FB00(&unk_447174D0);");
	create_insn	(x=0X43F09F62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	update_extra_cmt		(0X43F09F6C,	E_PREV + 0,	"\x01\x04; 68:   v23 = dword_44717498;");
	update_extra_cmt		(0X43F09F72,	E_PREV + 0,	"\x01\x04; 69:   sub_43EEED90(dword_44717498, *(dword_44717498 + 68));");
	update_extra_cmt		(0X43F09F7C,	E_PREV + 0,	"\x01\x04; 70:   v24 = *(v23 + 68);");
	update_extra_cmt		(0X43F09F7F,	E_PREV + 0,	"\x01\x04; 71:   v24[1] = *v24;");
	update_extra_cmt		(0X43F09F84,	E_PREV + 0,	"\x01\x04; 72:   v24[4] = v24[3];");
	update_extra_cmt		(0X43F09F8A,	E_PREV + 0,	"\x01\x04; 73:   (*(**(dword_44717498 + 12) + 20))(*(dword_44717498 + 12));");
	set_cmt	(0X43F09F98,	"_DWORD",	0);
	update_extra_cmt		(0X43F09F98,	E_PREV + 0,	"\x01\x04; 74:   return C_SDK::Hooks::IDirect3DDevice9::BeginScene(a7, a8, a9, a10, a11);// wrong output.");
	create_insn	(x=0X43F09F98);
	op_stkvar	(x,	0);
	set_cmt	(0X43F09FA0,	"_DWORD",	0);
	create_insn	(x=0X43F09FA0);
	op_stkvar	(x,	0);
	set_cmt	(0X43F09FA3,	"_DWORD",	0);
	create_insn	(x=0X43F09FA3);
	op_stkvar	(x,	0);
	set_cmt	(0X43F09FA6,	"_DWORD",	0);
	create_insn	(x=0X43F09FA6);
	op_stkvar	(x,	0);
	set_cmt	(0X43F09FA9,	"_DWORD",	0);
	make_array	(0X43F09FB4,	0XC);
	create_insn	(0X43F09FC0);
	create_insn	(x=0X43F09FC6);
	op_hex		(x,	1);
	create_insn	(x=0X43F09FCB);
	op_hex		(x,	1);
	create_insn	(x=0X43F09FE3);
	op_hex		(x,	1);
	create_insn	(x=0X43F09FFB);
	op_hex		(x,	1);
	create_insn	(x=0X43F0A02D);
	op_hex		(x,	1);
	make_array	(0X43F0A03A,	0X6);
	create_insn	(0X43F0A040);
	create_insn	(x=0X43F0A043);
	op_hex		(x,	1);
	create_insn	(0X43F0A1AD);
	create_insn	(0X43F0A1E7);
	create_insn	(0X43F0A21C);
	create_insn	(0X43F0A23B);
	create_insn	(0X43F0A245);
	make_array	(0X43F0A2F6,	0XA);
	create_insn	(0X43F0A300);
	create_insn	(x=0X43F0A303);
	op_hex		(x,	1);
	create_insn	(x=0X43F0A306);
	op_hex		(x,	1);
	create_insn	(x=0X43F0A309);
	op_hex		(x,	1);
	create_insn	(x=0X43F0A316);
	op_hex		(x,	1);
	set_cmt	(0X43F0A319,	"this",	0);
	set_cmt	(0X43F0A321,	"end",	0);
	set_cmt	(0X43F0A324,	"start",	0);
	create_insn	(0X43F0A460);
	create_insn	(0X43F0A48B);
	create_insn	(0X43F0A4CA);
	create_insn	(0X43F0A505);
	create_insn	(0X43F0A510);
	create_insn	(x=0X43F0A516);
	op_hex		(x,	1);
	create_insn	(x=0X43F0A51B);
	op_hex		(x,	1);
	create_insn	(x=0X43F0A533);
	op_hex		(x,	1);
	create_insn	(x=0X43F0A54B);
	op_hex		(x,	1);
	create_insn	(x=0X43F0A57D);
	op_hex		(x,	1);
	make_array	(0X43F0A58A,	0X6);
	create_insn	(0X43F0A590);
	create_insn	(x=0X43F0A593);
	op_hex		(x,	1);
	set_cmt	(0X43F0A86F,	"propHash",	0);
	set_cmt	(0X43F0A874,	"classHash",	0);
	create_insn	(0X43F0A893);
	set_cmt	(0X43F0A8A4,	"propHash",	0);
	set_cmt	(0X43F0A8A9,	"classHash",	0);
	create_insn	(0X43F0A8CF);
	set_cmt	(0X43F0A92E,	"index",	0);
	set_cmt	(0X43F0A933,	"interface",	0);
	set_cmt	(0X43F0A950,	"this",	0);
	set_cmt	(0X43F0A967,	"propHash",	0);
	set_cmt	(0X43F0A96C,	"classHash",	0);
	set_cmt	(0X43F0A9BE,	"index",	0);
	set_cmt	(0X43F0A9C3,	"interface",	0);
	set_cmt	(0X43F0A9D0,	"this",	0);
	set_cmt	(0X43F0AA14,	"propHash",	0);
	set_cmt	(0X43F0AA19,	"classHash",	0);
	set_cmt	(0X43F0AA3B,	"propHash",	0);
	set_cmt	(0X43F0AA40,	"classHash",	0);
	create_insn	(0X43F0AA65);
	set_cmt	(0X43F0AA69,	"propHash",	0);
	set_cmt	(0X43F0AA6E,	"classHash",	0);
	set_cmt	(0X43F0AA94,	"propHash",	0);
	set_cmt	(0X43F0AA99,	"classHash",	0);
	set_cmt	(0X43F0AAF9,	"a2",	0);
	set_cmt	(0X43F0AB03,	"a1",	0);
	set_cmt	(0X43F0AB4E,	"angles",	0);
	set_cmt	(0X43F0AC0D,	"cmd",	0);
	create_insn	(x=0X43F0AC0D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0AC1F,	"cmd",	0);
	create_insn	(x=0X43F0AC1F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0AC53);
	op_hex		(x,	1);
	create_insn	(0X43F0AC5C);
	set_cmt	(0X43F0AC73,	"cmd",	0);
	create_insn	(x=0X43F0AC73);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0AC85,	"cmd",	0);
	create_insn	(x=0X43F0AC85);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0ACB9);
	op_hex		(x,	1);
	make_array	(0X43F0ACE7,	0X9);
	create_insn	(0X43F0ACF0);
	create_insn	(x=0X43F0ACF3);
	op_hex		(x,	1);
	create_insn	(x=0X43F0AD01);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0AD08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0AD33);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0AD3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0AD4C,	"index",	0);
	set_cmt	(0X43F0AD51,	"interface",	0);
	set_cmt	(0X43F0AD5E,	"this",	0);
	set_cmt	(0X43F0AD6A,	"player",	0);
	set_cmt	(0X43F0AD7C,	"propHash",	0);
	set_cmt	(0X43F0AD81,	"classHash",	0);
	set_cmt	(0X43F0AD9D,	"switch 84 cases ",	0);
	create_insn	(x=0X43F0ADA3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0ADAA,	"switch jump",	0);
	create_insn	(x=0X43F0ADAA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0ADB1,	"jumptable 43F0ADAA cases 9,11,38,40",	1);
	create_insn	(0X43F0ADB1);
	set_cmt	(0X43F0ADB7,	"index",	0);
	set_cmt	(0X43F0ADBC,	"interface",	0);
	set_cmt	(0X43F0ADC9,	"this",	0);
	set_cmt	(0X43F0ADE0,	"propHash",	0);
	set_cmt	(0X43F0ADE5,	"classHash",	0);
	set_cmt	(0X43F0ADFE,	"jumptable 43F0ADAA default case, cases 1-8,10,12-37,39,41-84",	1);
	set_name	(0X43F0ADFE,	"def_43F0ADAA");
	create_insn	(x=0X43F0AE03);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0AE0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0AE1C,	"index",	0);
	set_cmt	(0X43F0AE21,	"interface",	0);
	set_cmt	(0X43F0AE2E,	"this",	0);
	set_cmt	(0X43F0AE3A,	"player",	0);
	set_cmt	(0X43F0AE62,	"index",	0);
	set_cmt	(0X43F0AE72,	"interface",	0);
	set_cmt	(0X43F0AEA1,	"this",	0);
	set_cmt	(0X43F0AEAD,	"player",	0);
	set_cmt	(0X43F0AECF,	"propHash",	0);
	set_cmt	(0X43F0AED4,	"classHash",	0);
	set_cmt	(0X43F0AF0C,	"index",	0);
	set_cmt	(0X43F0AF17,	"interface",	0);
	set_cmt	(0X43F0AF3B,	"this",	0);
	set_cmt	(0X43F0AF47,	"player",	0);
	set_cmt	(0X43F0AF65,	"propHash",	0);
	set_cmt	(0X43F0AF6A,	"classHash",	0);
	create_insn	(x=0X43F0AFED);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0AFF7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0B03A);
	set_cmt	(0X43F0B067,	"index",	0);
	set_cmt	(0X43F0B06C,	"interface",	0);
	set_cmt	(0X43F0B079,	"this",	0);
	set_cmt	(0X43F0B085,	"m_pPlayer",	0);
	set_cmt	(0X43F0B09A,	"index",	0);
	set_cmt	(0X43F0B09F,	"interface",	0);
	set_cmt	(0X43F0B0AC,	"this",	0);
	set_cmt	(0X43F0B0B8,	"player",	0);
	set_cmt	(0X43F0B0CA,	"propHash",	0);
	set_cmt	(0X43F0B0CF,	"classHash",	0);
	set_cmt	(0X43F0B0EF,	"switch 84 cases ",	0);
	create_insn	(x=0X43F0B0F5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0B0FC,	"switch jump",	0);
	create_insn	(x=0X43F0B0FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0B103,	"jumptable 43F0B0FC cases 9,11,38,40",	1);
	create_insn	(0X43F0B103);
	set_cmt	(0X43F0B109,	"index",	0);
	set_cmt	(0X43F0B10E,	"interface",	0);
	set_cmt	(0X43F0B11B,	"this",	0);
	set_cmt	(0X43F0B132,	"propHash",	0);
	set_cmt	(0X43F0B137,	"classHash",	0);
	set_cmt	(0X43F0B157,	"switch 19 cases ",	0);
	create_insn	(x=0X43F0B157);
	op_hex		(x,	1);
	create_insn	(x=0X43F0B161);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0B168,	"switch jump",	0);
	create_insn	(x=0X43F0B168);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0B16F,	"jumptable 43F0B0FC default case, cases 1-8,10,12-37,39,41-84\njumptable 43F0B168 default case, cases 505-523",	1);
	create_insn	(0X43F0B16F);
	set_name	(0X43F0B16F,	"def_43F0B0FC");
	create_insn	(x=0X43F0B178);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0B17F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0B1AB,	"index",	0);
	set_cmt	(0X43F0B1B0,	"interface",	0);
	set_cmt	(0X43F0B1BD,	"this",	0);
	set_cmt	(0X43F0B1C9,	"player",	0);
	set_cmt	(0X43F0B1DB,	"propHash",	0);
	set_cmt	(0X43F0B1E0,	"classHash",	0);
	create_insn	(0X43F0B223);
	create_insn	(0X43F0B261);
	create_insn	(0X43F0B26D);
	set_cmt	(0X43F0B278,	"jump table for switch statement",	0);
	create_dword	(x=0X43F0B278);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F0B278,	"jpt_43F0ADAA");
	set_cmt	(0X43F0B284,	"indirect table for switch statement",	0);
	create_byte	(0X43F0B284);
	make_array	(0X43F0B284,	0X54);
	set_cmt	(0X43F0B2D8,	"jump table for switch statement",	0);
	create_dword	(x=0X43F0B2D8);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F0B2D8,	"jpt_43F0B0FC");
	set_cmt	(0X43F0B2E4,	"indirect table for switch statement",	0);
	create_byte	(0X43F0B2E4);
	make_array	(0X43F0B2E4,	0X54);
	set_cmt	(0X43F0B338,	"jump table for switch statement",	0);
	create_dword	(x=0X43F0B338);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F0B338,	"jpt_43F0B168");
	set_cmt	(0X43F0B340,	"indirect table for switch statement",	0);
	create_byte	(0X43F0B340);
	make_array	(0X43F0B340,	0X13);
	make_array	(0X43F0B353,	0XD);
	create_insn	(0X43F0B360);
	create_insn	(x=0X43F0B363);
	op_hex		(x,	1);
	create_insn	(x=0X43F0B366);
	op_hex		(x,	1);
	create_insn	(x=0X43F0B369);
	op_hex		(x,	1);
	set_cmt	(0X43F0B376,	"interface",	0);
	create_insn	(x=0X43F0B37C);
	op_hex		(x,	1);
	set_cmt	(0X43F0B37F,	"index",	0);
	set_cmt	(0X43F0B392,	"this",	0);
	set_cmt	(0X43F0B3A9,	"propHash",	0);
	set_cmt	(0X43F0B3AE,	"classHash",	0);
	set_cmt	(0X43F0B3D0,	"propHash",	0);
	set_cmt	(0X43F0B3D5,	"classHash",	0);
	set_cmt	(0X43F0B3F4,	"index",	0);
	set_cmt	(0X43F0B3F9,	"interface",	0);
	set_cmt	(0X43F0B406,	"this",	0);
	set_cmt	(0X43F0B41D,	"propHash",	0);
	set_cmt	(0X43F0B422,	"classHash",	0);
	create_insn	(x=0X43F0B431);
	op_hex		(x,	1);
	set_cmt	(0X43F0B454,	"index",	0);
	set_cmt	(0X43F0B459,	"interface",	0);
	set_cmt	(0X43F0B466,	"this",	0);
	set_cmt	(0X43F0B472,	"player",	0);
	set_cmt	(0X43F0B487,	"index",	0);
	set_cmt	(0X43F0B48C,	"interface",	0);
	set_cmt	(0X43F0B499,	"this",	0);
	set_cmt	(0X43F0B4A5,	"player",	0);
	set_cmt	(0X43F0B4B7,	"propHash",	0);
	set_cmt	(0X43F0B4BC,	"classHash",	0);
	set_cmt	(0X43F0B523,	"index",	0);
	set_cmt	(0X43F0B528,	"interface",	0);
	set_cmt	(0X43F0B535,	"this",	0);
	set_cmt	(0X43F0B541,	"a3",	0);
	set_cmt	(0X43F0B543,	"a2",	0);
	set_cmt	(0X43F0B545,	"m_player",	0);
	set_cmt	(0X43F0B556,	"index",	0);
	set_cmt	(0X43F0B55B,	"interface",	0);
	set_cmt	(0X43F0B568,	"this",	0);
	create_insn	(0X43F0B5B6);
	create_insn	(0X43F0B5F0);
	make_array	(0X43F0B5FA,	0X6);
	create_insn	(0X43F0B600);
	create_insn	(x=0X43F0B603);
	op_hex		(x,	1);
	create_insn	(x=0X43F0B617);
	op_hex		(x,	1);
	create_insn	(x=0X43F0B625);
	op_hex		(x,	1);
	create_insn	(x=0X43F0B688);
	op_hex		(x,	1);
	set_cmt	(0X43F0B6C5,	"index",	0);
	set_cmt	(0X43F0B6CA,	"interface",	0);
	set_cmt	(0X43F0B6F5,	"instance",	0);
	set_cmt	(0X43F0B701,	"player",	0);
	set_cmt	(0X43F0B713,	"propHash",	0);
	set_cmt	(0X43F0B718,	"classHash",	0);
	set_cmt	(0X43F0B734,	"switch 84 cases ",	0);
	create_insn	(x=0X43F0B73A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0B741,	"switch jump",	0);
	create_insn	(x=0X43F0B741);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0B748,	"jumptable 43F0B741 default case, cases 1-42,49-83",	1);
	create_insn	(0X43F0B748);
	set_name	(0X43F0B748,	"def_43F0B741");
	set_cmt	(0X43F0B74E,	"index",	0);
	set_cmt	(0X43F0B753,	"interface",	0);
	set_cmt	(0X43F0B760,	"instance",	0);
	set_cmt	(0X43F0B76C,	"player",	0);
	set_cmt	(0X43F0B77E,	"propHash",	0);
	set_cmt	(0X43F0B783,	"classHash",	0);
	create_insn	(x=0X43F0B7AA);
	op_hex		(x,	1);
	create_insn	(x=0X43F0B7AF);
	op_hex		(x,	1);
	create_insn	(x=0X43F0B7BC);
	op_hex		(x,	1);
	create_insn	(x=0X43F0B7BF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0B7D2,	"from",	0);
	set_cmt	(0X43F0B7D4,	"to",	0);
	create_insn	(x=0X43F0B7ED);
	op_hex		(x,	1);
	create_insn	(x=0X43F0B7F2);
	op_hex		(x,	1);
	create_insn	(x=0X43F0B7FF);
	op_hex		(x,	1);
	create_insn	(x=0X43F0B802);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0B808);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0B81C);
	set_cmt	(0X43F0B859,	"index",	0);
	set_cmt	(0X43F0B864,	"interface",	0);
	set_cmt	(0X43F0B896,	"instance",	0);
	set_cmt	(0X43F0B8AD,	"propHash",	0);
	set_cmt	(0X43F0B8B2,	"classHash",	0);
	create_insn	(x=0X43F0B8C1);
	op_hex		(x,	1);
	create_insn	(x=0X43F0B8DD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0B8F1,	"index",	0);
	set_cmt	(0X43F0B8F6,	"interface",	0);
	set_cmt	(0X43F0B903,	"instance",	0);
	set_cmt	(0X43F0B90F,	"player",	0);
	set_cmt	(0X43F0B921,	"propHash",	0);
	set_cmt	(0X43F0B926,	"classHash",	0);
	set_cmt	(0X43F0B94A,	"switch 84 cases ",	0);
	create_insn	(x=0X43F0B954);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0B95B,	"switch jump",	0);
	create_insn	(x=0X43F0B95B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0B962,	"jumptable 43F0B95B cases 9,11,38,40",	1);
	create_insn	(0X43F0B962);
	set_cmt	(0X43F0B968,	"index",	0);
	set_cmt	(0X43F0B96D,	"interface",	0);
	set_cmt	(0X43F0B97A,	"instance",	0);
	set_cmt	(0X43F0B991,	"propHash",	0);
	set_cmt	(0X43F0B996,	"classHash",	0);
	set_cmt	(0X43F0B9B1,	"index",	0);
	set_cmt	(0X43F0B9B6,	"interface",	0);
	set_cmt	(0X43F0B9C3,	"instance",	0);
	set_cmt	(0X43F0B9DA,	"propHash",	0);
	set_cmt	(0X43F0B9DF,	"classHash",	0);
	create_insn	(x=0X43F0B9F4);
	op_hex		(x,	1);
	set_cmt	(0X43F0B9FF,	"jumptable 43F0B95B default case, cases 1-8,10,12-37,39,41-84",	1);
	set_name	(0X43F0B9FF,	"def_43F0B95B");
	create_insn	(x=0X43F0BA04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0BA17);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0BA2B,	"index",	0);
	set_cmt	(0X43F0BA30,	"interface",	0);
	set_cmt	(0X43F0BA3D,	"instance",	0);
	set_cmt	(0X43F0BA49,	"a3",	0);
	set_cmt	(0X43F0BA4B,	"a2",	0);
	set_cmt	(0X43F0BA4D,	"m_player",	0);
	set_cmt	(0X43F0BA5E,	"index",	0);
	set_cmt	(0X43F0BA63,	"interface",	0);
	set_cmt	(0X43F0BA70,	"instance",	0);
	set_cmt	(0X43F0BA7C,	"player",	0);
	set_cmt	(0X43F0BA8E,	"propHash",	0);
	set_cmt	(0X43F0BA93,	"classHash",	0);
	create_insn	(0X43F0BAC0);
	set_cmt	(0X43F0BAC6,	"index",	0);
	set_cmt	(0X43F0BACB,	"interface",	0);
	set_cmt	(0X43F0BAD8,	"instance",	0);
	set_cmt	(0X43F0BAEF,	"propHash",	0);
	set_cmt	(0X43F0BAF4,	"classHash",	0);
	set_cmt	(0X43F0BB07,	"index",	0);
	set_cmt	(0X43F0BB0C,	"interface",	0);
	set_cmt	(0X43F0BB21,	"instance",	0);
	set_cmt	(0X43F0BB2D,	"player",	0);
	set_cmt	(0X43F0BB55,	"propHash",	0);
	set_cmt	(0X43F0BB5A,	"classHash",	0);
	create_insn	(0X43F0BB7E);
	set_cmt	(0X43F0BB85,	"instance",	0);
	set_cmt	(0X43F0BB91,	"player",	0);
	set_cmt	(0X43F0BBB9,	"propHash",	0);
	set_cmt	(0X43F0BBBE,	"classHash",	0);
	set_cmt	(0X43F0BC3B,	"a2",	0);
	set_cmt	(0X43F0BC47,	"a1",	0);
	create_insn	(0X43F0BD30);
	create_insn	(x=0X43F0BD6D);
	op_hex		(x,	1);
	create_insn	(0X43F0BDB5);
	create_insn	(0X43F0BDE4);
	create_insn	(0X43F0BE0B);
	create_insn	(x=0X43F0BE1D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0C06A,	"index",	0);
	set_cmt	(0X43F0C06F,	"interface",	0);
	set_cmt	(0X43F0C080,	"instance",	0);
	set_cmt	(0X43F0C08C,	"a3",	0);
	set_cmt	(0X43F0C08E,	"a2",	0);
	set_cmt	(0X43F0C090,	"m_player",	0);
	set_cmt	(0X43F0C0C7,	"index",	0);
	set_cmt	(0X43F0C0DE,	"interface",	0);
	set_cmt	(0X43F0C15B,	"instance",	0);
	set_cmt	(0X43F0C19F,	"propHash",	0);
	set_cmt	(0X43F0C1A4,	"classHash",	0);
	set_cmt	(0X43F0C1CE,	"propHash",	0);
	set_cmt	(0X43F0C1D3,	"classHash",	0);
	create_insn	(0X43F0C1FE);
	set_cmt	(0X43F0C202,	"propHash",	0);
	set_cmt	(0X43F0C207,	"classHash",	0);
	set_cmt	(0X43F0C225,	"propHash",	0);
	set_cmt	(0X43F0C22A,	"classHash",	0);
	create_insn	(0X43F0C251);
	set_cmt	(0X43F0C25F,	"a2",	0);
	set_cmt	(0X43F0C26B,	"a1",	0);
	create_insn	(x=0X43F0C2BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0C363);
	set_cmt	(0X43F0C375,	"index",	0);
	set_cmt	(0X43F0C37A,	"interface",	0);
	set_cmt	(0X43F0C387,	"instance",	0);
	set_cmt	(0X43F0C39E,	"propHash",	0);
	set_cmt	(0X43F0C3A3,	"classHash",	0);
	set_cmt	(0X43F0C3E8,	"index",	0);
	set_cmt	(0X43F0C3ED,	"interface",	0);
	set_cmt	(0X43F0C3FA,	"instance",	0);
	set_cmt	(0X43F0C411,	"propHash",	0);
	set_cmt	(0X43F0C416,	"classHash",	0);
	create_insn	(x=0X43F0C425);
	op_hex		(x,	1);
	set_cmt	(0X43F0C435,	"index",	0);
	set_cmt	(0X43F0C43A,	"interface",	0);
	set_cmt	(0X43F0C447,	"instance",	0);
	set_cmt	(0X43F0C48B,	"propHash",	0);
	set_cmt	(0X43F0C490,	"classHash",	0);
	set_cmt	(0X43F0C4B2,	"propHash",	0);
	set_cmt	(0X43F0C4B7,	"classHash",	0);
	create_insn	(0X43F0C4DC);
	set_cmt	(0X43F0C4E0,	"propHash",	0);
	set_cmt	(0X43F0C4E5,	"classHash",	0);
	set_cmt	(0X43F0C50B,	"propHash",	0);
	set_cmt	(0X43F0C510,	"classHash",	0);
	set_cmt	(0X43F0C53B,	"index",	0);
	set_cmt	(0X43F0C540,	"interface",	0);
	set_cmt	(0X43F0C54D,	"instance",	0);
	set_cmt	(0X43F0C564,	"propHash",	0);
	set_cmt	(0X43F0C569,	"classHash",	0);
	set_cmt	(0X43F0C57D,	"index",	0);
	set_cmt	(0X43F0C5A2,	"interface",	0);
	set_cmt	(0X43F0C5E5,	"instance",	0);
	create_insn	(x=0X43F0C60D);
	op_hex		(x,	1);
	set_cmt	(0X43F0C610,	"interface",	0);
	set_cmt	(0X43F0C616,	"index",	0);
	set_cmt	(0X43F0C622,	"instance",	0);
	set_cmt	(0X43F0C669,	"propHash",	0);
	set_cmt	(0X43F0C66E,	"classHash",	0);
	create_insn	(0X43F0C690);
	create_insn	(x=0X43F0C6E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0C737,	"index",	0);
	set_cmt	(0X43F0C73C,	"interface",	0);
	set_cmt	(0X43F0C749,	"instance",	0);
	set_cmt	(0X43F0C790,	"propHash",	0);
	set_cmt	(0X43F0C795,	"classHash",	0);
	create_insn	(0X43F0C7B7);
	create_insn	(0X43F0C7CF);
	create_insn	(x=0X43F0C7D3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0C828,	"index",	0);
	set_cmt	(0X43F0C82D,	"interface",	0);
	set_cmt	(0X43F0C83A,	"instance",	0);
	set_cmt	(0X43F0C87E,	"propHash",	0);
	set_cmt	(0X43F0C883,	"classHash",	0);
	create_insn	(0X43F0C8A5);
	create_insn	(0X43F0C8BD);
	create_insn	(0X43F0C8C6);
	set_cmt	(0X43F0C8F1,	"index",	0);
	set_cmt	(0X43F0C8F6,	"interface",	0);
	set_cmt	(0X43F0C903,	"instance",	0);
	set_cmt	(0X43F0C90F,	"player",	0);
	set_cmt	(0X43F0C921,	"propHash",	0);
	set_cmt	(0X43F0C926,	"classHash",	0);
	create_insn	(0X43F0C954);
	create_insn	(x=0X43F0C960);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0C9B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0C9CC);
	op_hex		(x,	1);
	create_insn	(x=0X43F0C9CF);
	op_hex		(x,	1);
	set_cmt	(0X43F0C9D9,	"cmd",	0);
	create_insn	(x=0X43F0C9D9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0CA15);
	op_hex		(x,	1);
	set_cmt	(0X43F0CA5F,	"cmd",	0);
	create_insn	(x=0X43F0CA5F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0CA82);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CACB);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CAD0);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CADD);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CAE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0CB0C);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CB11);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CB1E);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CB21);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0CB6A,	"jumptable 43F0B741 cases 43-48,84",	1);
	create_insn	(x=0X43F0CB77);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CB7C);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CB89);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CB8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0CB9F,	"from",	0);
	set_cmt	(0X43F0CBA1,	"to",	0);
	create_insn	(x=0X43F0CBBA);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CBBF);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CBCC);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CBCF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0CBD5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0CBE9);
	create_insn	(x=0X43F0CC26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0CC78,	"jump table for switch statement",	0);
	create_dword	(x=0X43F0CC78);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F0CC78,	"jpt_43F0B741");
	set_cmt	(0X43F0CC84,	"indirect table for switch statement",	0);
	create_byte	(0X43F0CC84);
	make_array	(0X43F0CC84,	0X54);
	set_cmt	(0X43F0CCD8,	"jump table for switch statement",	0);
	create_dword	(x=0X43F0CCD8);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F0CCD8,	"jpt_43F0B95B");
	set_cmt	(0X43F0CCE4,	"indirect table for switch statement",	0);
	create_byte	(0X43F0CCE4);
	make_array	(0X43F0CCE4,	0X54);
	make_array	(0X43F0CD38,	0X8);
	create_insn	(0X43F0CD40);
	create_insn	(x=0X43F0CD43);
	op_hex		(x,	1);
	set_cmt	(0X43F0CD46,	"interface",	0);
	create_insn	(x=0X43F0CD4C);
	op_hex		(x,	1);
	set_cmt	(0X43F0CD4F,	"index",	0);
	set_cmt	(0X43F0CD5B,	"arg",	0);
	set_cmt	(0X43F0CD63,	"this",	0);
	set_cmt	(0X43F0CD6F,	"player",	0);
	create_insn	(x=0X43F0CD8B);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CD90);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CD9D);
	op_hex		(x,	1);
	create_insn	(x=0X43F0CDA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0CDB5,	"index",	0);
	set_cmt	(0X43F0CDC0,	"interface",	0);
	set_cmt	(0X43F0CDD0,	"this",	0);
	set_cmt	(0X43F0CDDC,	"player",	0);
	make_array	(0X43F0D0CB,	0X5);
	create_insn	(0X43F0D0D0);
	set_name	(0X43F0D0D0,	"OneTap::Features::RageBot::Instance");
	create_insn	(x=0X43F0D0D3);
	op_hex		(x,	1);
	set_cmt	(0X43F0D0D6,	"interface",	0);
	create_insn	(x=0X43F0D0DC);
	op_hex		(x,	1);
	set_cmt	(0X43F0D0DF,	"index",	0);
	set_cmt	(0X43F0D0F3,	"vTable",	0);
	set_cmt	(0X43F0D10D,	"index",	0);
	set_cmt	(0X43F0D112,	"interface",	0);
	set_cmt	(0X43F0D11F,	"vTable",	0);
	set_cmt	(0X43F0D12B,	"m_pPlayer",	0);
	set_cmt	(0X43F0D14D,	"index",	0);
	set_cmt	(0X43F0D152,	"interface",	0);
	set_cmt	(0X43F0D15F,	"vTable",	0);
	set_cmt	(0X43F0D16B,	"player",	0);
	set_cmt	(0X43F0D180,	"index",	0);
	set_cmt	(0X43F0D185,	"interface",	0);
	set_cmt	(0X43F0D192,	"vTable",	0);
	set_cmt	(0X43F0D19E,	"player",	0);
	set_cmt	(0X43F0D1B0,	"propHash",	0);
	set_cmt	(0X43F0D1B5,	"classHash",	0);
	set_cmt	(0X43F0D1D5,	"index",	0);
	set_cmt	(0X43F0D1DA,	"interface",	0);
	set_cmt	(0X43F0D1E7,	"vTable",	0);
	set_cmt	(0X43F0D1FE,	"propHash",	0);
	set_cmt	(0X43F0D203,	"classHash",	0);
	set_cmt	(0X43F0D217,	"cmd",	0);
	create_insn	(x=0X43F0D217);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0D230);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0D23B,	"index",	0);
	create_insn	(x=0X43F0D242);
	op_hex		(x,	1);
	set_cmt	(0X43F0D24F,	"interface",	0);
	set_cmt	(0X43F0D25C,	"vTable",	0);
	set_cmt	(0X43F0D268,	"a3",	0);
	set_cmt	(0X43F0D26A,	"a2",	0);
	set_cmt	(0X43F0D26C,	"m_player",	0);
	create_insn	(x=0X43F0D283);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0D28A,	"cmd",	0);
	create_insn	(x=0X43F0D28A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0D296);
	op_hex		(x,	1);
	create_insn	(0X43F0D29C);
	set_cmt	(0X43F0D2A2,	"index",	0);
	set_cmt	(0X43F0D2A7,	"interface",	0);
	set_cmt	(0X43F0D2B4,	"vTable",	0);
	set_cmt	(0X43F0D2C0,	"player",	0);
	set_cmt	(0X43F0D2D2,	"propHash",	0);
	set_cmt	(0X43F0D2D7,	"classHash",	0);
	create_insn	(x=0X43F0D2EB);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0D2F2,	"cmd",	0);
	create_insn	(x=0X43F0D2F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0D2FE);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D307);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0D311);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D327);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0D331,	"cmd",	0);
	create_insn	(x=0X43F0D331);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0D344);
	op_hex		(x,	1);
	set_cmt	(0X43F0D34E,	"index",	0);
	set_cmt	(0X43F0D353,	"interface",	0);
	set_cmt	(0X43F0D360,	"vTable",	0);
	set_cmt	(0X43F0D36C,	"player",	0);
	set_cmt	(0X43F0D381,	"index",	0);
	set_cmt	(0X43F0D386,	"interface",	0);
	set_cmt	(0X43F0D393,	"vTable",	0);
	set_cmt	(0X43F0D39F,	"player",	0);
	set_cmt	(0X43F0D3B1,	"propHash",	0);
	set_cmt	(0X43F0D3B6,	"classHash",	0);
	set_cmt	(0X43F0D3DA,	"switch 84 cases ",	0);
	create_insn	(x=0X43F0D3E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0D3EB,	"switch jump",	0);
	create_insn	(x=0X43F0D3EB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0D3F2,	"jumptable 43F0D3EB cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-40,60,61,63,64",	1);
	create_insn	(0X43F0D3F2);
	set_cmt	(0X43F0D3F8,	"index",	0);
	set_cmt	(0X43F0D3FD,	"interface",	0);
	set_cmt	(0X43F0D40A,	"vTable",	0);
	set_cmt	(0X43F0D416,	"player",	0);
	set_cmt	(0X43F0D428,	"propHash",	0);
	set_cmt	(0X43F0D42D,	"classHash",	0);
	set_cmt	(0X43F0D449,	"index",	0);
	set_cmt	(0X43F0D44E,	"interface",	0);
	set_cmt	(0X43F0D45B,	"vTable",	0);
	set_cmt	(0X43F0D467,	"a3",	0);
	set_cmt	(0X43F0D469,	"a2",	0);
	set_cmt	(0X43F0D46B,	"m_player",	0);
	set_cmt	(0X43F0D476,	"cmd",	0);
	create_insn	(x=0X43F0D476);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0D482);
	op_hex		(x,	1);
	set_cmt	(0X43F0D486,	"jumptable 43F0D3EB default case, cases 5,6,12,15,18,20-22,31,37,41-59,62,65-84",	1);
	set_name	(0X43F0D486,	"def_43F0D3EB");
	set_cmt	(0X43F0D48C,	"index",	0);
	set_cmt	(0X43F0D491,	"interface",	0);
	set_cmt	(0X43F0D49E,	"vTable",	0);
	set_cmt	(0X43F0D4C5,	"index",	0);
	set_cmt	(0X43F0D4CA,	"interface",	0);
	set_cmt	(0X43F0D4D7,	"vTable",	0);
	set_cmt	(0X43F0D4E3,	"player",	0);
	set_cmt	(0X43F0D4F5,	"propHash",	0);
	set_cmt	(0X43F0D4FA,	"classHash",	0);
	set_cmt	(0X43F0D516,	"switch 84 cases ",	0);
	create_insn	(x=0X43F0D51C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0D523,	"switch jump",	0);
	create_insn	(x=0X43F0D523);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0D52A,	"jumptable 43F0D523 default case, cases 5,6,12,15,18,20-22,31,37,41-59,62,65-84",	1);
	create_insn	(0X43F0D52A);
	set_name	(0X43F0D52A,	"def_43F0D523");
	set_cmt	(0X43F0D530,	"index",	0);
	set_cmt	(0X43F0D535,	"interface",	0);
	set_cmt	(0X43F0D542,	"vTable",	0);
	set_cmt	(0X43F0D54E,	"player",	0);
	set_cmt	(0X43F0D560,	"propHash",	0);
	set_cmt	(0X43F0D565,	"classHash",	0);
	set_cmt	(0X43F0D585,	"index",	0);
	set_cmt	(0X43F0D58A,	"interface",	0);
	set_cmt	(0X43F0D597,	"vTable",	0);
	set_cmt	(0X43F0D5A3,	"player",	0);
	set_cmt	(0X43F0D5B5,	"propHash",	0);
	set_cmt	(0X43F0D5BA,	"classHash",	0);
	set_cmt	(0X43F0D5D6,	"switch 84 cases ",	0);
	create_insn	(x=0X43F0D5DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0D5E3,	"switch jump",	0);
	create_insn	(x=0X43F0D5E3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0D5EA,	"switch 19 cases ",	0);
	create_insn	(x=0X43F0D5EA);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D5F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0D5FB,	"switch jump",	0);
	create_insn	(x=0X43F0D5FB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0D602,	"jumptable 43F0D5E3 cases 41,42,59\njumptable 43F0D5FB cases 505-509,512,514-516,519,520,522,523",	1);
	create_insn	(0X43F0D602);
	set_cmt	(0X43F0D609,	"jumptable 43F0D523 cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-40,60,61,63,64",	1);
	create_insn	(x=0X43F0D609);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0D613,	"jumptable 43F0D5E3 default case, cases 1-40,43-58,60-84\njumptable 43F0D5FB default case, cases 510,511,513,517,518,521",	1);
	set_name	(0X43F0D613,	"def_43F0D5E3");
	create_insn	(x=0X43F0D618);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D626);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D638);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D63E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D643);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D64E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D656);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D65E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D670);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D674);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D678);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D67B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D680);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D685);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D693);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D698);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D69E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D6A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D6B9);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D6C7);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D6D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D6DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D6E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D6EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D6F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D6FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D704);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D70C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D720);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D724);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D728);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D72B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D730);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D735);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D743);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D748);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D74E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D756);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D769);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D777);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D789);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D78F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D794);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D79F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D7A7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D7AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D7B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D7BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D7C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D7D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D7D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D7DA);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D7DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D7E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D7E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D7F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D7FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D800);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D808);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D823);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D828);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D835);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D838);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0D84D,	"index",	0);
	set_cmt	(0X43F0D858,	"interface",	0);
	create_insn	(x=0X43F0D863);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D86E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D879);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0D886,	"vTable",	0);
	set_cmt	(0X43F0D89E,	"propHash",	0);
	set_cmt	(0X43F0D8A3,	"classHash",	0);
	set_cmt	(0X43F0D8B5,	"interface",	0);
	set_cmt	(0X43F0D8BB,	"index",	0);
	create_insn	(x=0X43F0D8C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D8C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D8CD);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0D8D3,	"angles",	0);
	create_insn	(x=0X43F0D8D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D8D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D8DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D8F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D8FD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D911);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D91B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0D921);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0D92C,	"interface",	0);
	set_cmt	(0X43F0D932,	"index",	0);
	set_cmt	(0X43F0D942,	"interface",	0);
	set_cmt	(0X43F0D948,	"index",	0);
	create_insn	(x=0X43F0D956);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0D960,	"angles",	0);
	create_insn	(x=0X43F0D960);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D976);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D97B);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D988);
	op_hex		(x,	1);
	create_insn	(x=0X43F0D98B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0D9A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D9AB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0D9B6);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0D9C8,	"jump table for switch statement",	0);
	create_dword	(x=0X43F0D9C8);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F0D9C8,	"jpt_43F0D3EB");
	set_cmt	(0X43F0D9D4,	"indirect table for switch statement",	0);
	create_byte	(0X43F0D9D4);
	make_array	(0X43F0D9D4,	0X54);
	set_cmt	(0X43F0DA28,	"jump table for switch statement",	0);
	create_dword	(x=0X43F0DA28);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F0DA28,	"jpt_43F0D523");
	set_cmt	(0X43F0DA34,	"indirect table for switch statement",	0);
	create_byte	(0X43F0DA34);
	make_array	(0X43F0DA34,	0X54);
	set_cmt	(0X43F0DA88,	"jump table for switch statement",	0);
	create_dword	(x=0X43F0DA88);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F0DA88,	"jpt_43F0D5E3");
	set_cmt	(0X43F0DA94,	"indirect table for switch statement",	0);
	create_byte	(0X43F0DA94);
	make_array	(0X43F0DA94,	0X54);
	set_cmt	(0X43F0DAE8,	"jump table for switch statement",	0);
	create_dword	(x=0X43F0DAE8);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F0DAE8,	"jpt_43F0D5FB");
	set_cmt	(0X43F0DAF0,	"indirect table for switch statement",	0);
	create_byte	(0X43F0DAF0);
	make_array	(0X43F0DAF0,	0X13);
	make_array	(0X43F0DB03,	0XD);
	create_insn	(0X43F0DB10);
	create_insn	(x=0X43F0DB13);
	op_hex		(x,	1);
	set_cmt	(0X43F0DB65,	"_DWORD",	0);
	set_cmt	(0X43F0DB6D,	"_DWORD",	0);
	create_insn	(x=0X43F0DB7F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F0DB92,	0XE);
	create_insn	(0X43F0DBA0);
	create_insn	(x=0X43F0DBA9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0DBAF);
	create_insn	(x=0X43F0DBB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0DBBB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F0DBC4,	0XC);
	create_insn	(0X43F0DBD0);
	create_insn	(x=0X43F0DBD3);
	op_hex		(x,	1);
	create_insn	(x=0X43F0DBED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0DBF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0DC2E);
	create_insn	(x=0X43F0DC3E);
	op_hex		(x,	1);
	create_insn	(0X43F0DC51);
	create_insn	(0X43F0DC5A);
	create_insn	(0X43F0DC60);
	create_insn	(x=0X43F0DC63);
	op_hex		(x,	1);
	create_insn	(0X43F0DC8D);
	create_insn	(x=0X43F0DC9E);
	op_hex		(x,	1);
	create_insn	(x=0X43F0DD05);
	op_hex		(x,	1);
	create_insn	(0X43F0DD11);
	create_insn	(0X43F0DD21);
	create_insn	(0X43F0DD2C);
	make_array	(0X43F0DD31,	0XF);
	create_insn	(0X43F0DD40);
	set_cmt	(0X43F0DD44,	"interface",	0);
	set_cmt	(0X43F0DD4A,	"index",	0);
	set_cmt	(0X43F0DD5D,	"this",	0);
	create_insn	(x=0X43F0DD83);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0DD90,	"this",	0);
	set_cmt	(0X43F0DDAE,	"index",	0);
	set_cmt	(0X43F0DDB3,	"interface",	0);
	set_cmt	(0X43F0DDC0,	"this",	0);
	set_cmt	(0X43F0DDD4,	"m_player",	0);
	set_cmt	(0X43F0DDE8,	"propHash",	0);
	set_cmt	(0X43F0DDED,	"classHash",	0);
	set_cmt	(0X43F0DE0B,	"propHash",	0);
	set_cmt	(0X43F0DE10,	"classHash",	0);
	create_insn	(0X43F0DE3C);
	create_insn	(x=0X43F0DE53);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F0DE66,	0XA);
	create_insn	(0X43F0DE70);
	make_array	(0X43F0DE82,	0XE);
	create_insn	(0X43F0DE90);
	make_array	(0X43F0DE9B,	0X5);
	create_insn	(0X43F0DEA0);
	set_name	(0X43F0DEA0,	"OneTap::Features::Hooks::RunCommand");
	create_insn	(x=0X43F0DEA3);
	op_hex		(x,	1);
	set_cmt	(0X43F0DEA8,	"isPreFix",	0);
	set_cmt	(0X43F0DEA9,	"a1",	0);
	create_insn	(x=0X43F0DEA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0DEAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0DEB3);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0DEC4,	"index",	0);
	set_cmt	(0X43F0DEC9,	"interface",	0);
	set_cmt	(0X43F0DED6,	"this",	0);
	set_cmt	(0X43F0DEDF,	"isPreFix",	0);
	create_insn	(x=0X43F0DEF5);
	op_stkvar	(x,	1);
	create_insn	(0X43F0DF10);
	set_cmt	(0X43F0DF19,	"propHash",	0);
	set_cmt	(0X43F0DF1E,	"classHash",	0);
	create_insn	(x=0X43F0DF30);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0DF41);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0DF5E,	"propHash",	0);
	set_cmt	(0X43F0DF63,	"classHash",	0);
	set_cmt	(0X43F0DF79,	"propHash",	0);
	set_cmt	(0X43F0DF7E,	"classHash",	0);
	set_cmt	(0X43F0DF94,	"propHash",	0);
	set_cmt	(0X43F0DF99,	"classHash",	0);
	set_cmt	(0X43F0DFBF,	"userCmd",	0);
	set_cmt	(0X43F0DFC1,	"a1",	0);
	set_cmt	(0X43F0DFCD,	"index",	0);
	set_cmt	(0X43F0DFD2,	"interface",	0);
	set_cmt	(0X43F0DFDF,	"this",	0);
	set_cmt	(0X43F0DFF6,	"propHash",	0);
	set_cmt	(0X43F0DFFB,	"classHash",	0);
	create_insn	(x=0X43F0E016);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0E036,	"index",	0);
	set_cmt	(0X43F0E041,	"interface",	0);
	create_insn	(x=0X43F0E047);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0E053,	"this",	0);
	set_cmt	(0X43F0E06A,	"propHash",	0);
	set_cmt	(0X43F0E06F,	"classHash",	0);
	create_insn	(x=0X43F0E07E);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0E088,	"player",	0);
	set_cmt	(0X43F0E093,	"player",	0);
	set_cmt	(0X43F0E0A1,	"_DWORD",	0);
	create_insn	(x=0X43F0E0A1);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0E0A4,	"_DWORD",	0);
	create_insn	(x=0X43F0E0A4);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0E0A7,	"_DWORD",	0);
	create_insn	(x=0X43F0E0A7);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0E0AA,	"_DWORD",	0);
	set_cmt	(0X43F0E0AB,	"_DWORD",	0);
	set_cmt	(0X43F0E0B2,	"player",	0);
	set_cmt	(0X43F0E0BD,	"player",	0);
	set_cmt	(0X43F0E0DF,	"propHash",	0);
	set_cmt	(0X43F0E0E4,	"classHash",	0);
	create_insn	(x=0X43F0E0F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0E0F6);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0E117,	"index",	0);
	set_cmt	(0X43F0E11C,	"interface",	0);
	set_cmt	(0X43F0E129,	"this",	0);
	set_cmt	(0X43F0E140,	"propHash",	0);
	set_cmt	(0X43F0E145,	"classHash",	0);
	create_insn	(x=0X43F0E154);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0E164,	"index",	0);
	set_cmt	(0X43F0E169,	"interface",	0);
	set_cmt	(0X43F0E176,	"this",	0);
	set_cmt	(0X43F0E17F,	"isPreFix",	0);
	set_cmt	(0X43F0E18D,	"propHash",	0);
	set_cmt	(0X43F0E192,	"classHash",	0);
	set_cmt	(0X43F0E1A1,	"userCmd",	0);
	set_cmt	(0X43F0E1A3,	"a1",	0);
	create_insn	(x=0X43F0E1B9);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0E1BC,	"_DWORD",	0);
	create_insn	(x=0X43F0E1BC);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0E1BF,	"_DWORD",	0);
	set_cmt	(0X43F0E1C1,	"_DWORD",	0);
	set_cmt	(0X43F0E1C3,	"_DWORD",	0);
	create_insn	(x=0X43F0E1C3);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0E1C6,	"_DWORD",	0);
	make_array	(0X43F0E1D6,	0XA);
	create_insn	(0X43F0E1E0);
	set_name	(0X43F0E1E0,	"OneTap::Features::Hooks::SceneEnd");
	make_array	(0X43F0E1E6,	0XA);
	create_insn	(0X43F0E1F0);
	create_insn	(0X43F0E21B);
	set_cmt	(0X43F0E236,	"_DWORD",	0);
	set_cmt	(0X43F0E23B,	"_DWORD",	0);
	set_cmt	(0X43F0E23D,	"_DWORD",	0);
	set_cmt	(0X43F0E240,	"_DWORD",	0);
	set_cmt	(0X43F0E243,	"_DWORD",	0);
	make_array	(0X43F0E24D,	0X3);
	create_insn	(0X43F0E250);
	create_insn	(x=0X43F0E253);
	op_hex		(x,	1);
	create_insn	(x=0X43F0E256);
	op_hex		(x,	1);
	create_insn	(x=0X43F0E269);
	op_hex		(x,	1);
	create_insn	(x=0X43F0E26D);
	op_hex		(x,	1);
	set_cmt	(0X43F0E290,	"index",	0);
	set_cmt	(0X43F0E295,	"interface",	0);
	set_cmt	(0X43F0E2A2,	"this",	0);
	set_cmt	(0X43F0E2BC,	"index",	0);
	set_cmt	(0X43F0E2C1,	"interface",	0);
	set_cmt	(0X43F0E2CE,	"this",	0);
	set_cmt	(0X43F0E2DA,	"m_pPlayer",	0);
	set_cmt	(0X43F0E2F9,	"propHash",	0);
	set_cmt	(0X43F0E2FE,	"classHash",	0);
	set_cmt	(0X43F0E32C,	"index",	0);
	set_cmt	(0X43F0E331,	"interface",	0);
	set_cmt	(0X43F0E33E,	"this",	0);
	set_cmt	(0X43F0E362,	"propHash",	0);
	set_cmt	(0X43F0E367,	"classHash",	0);
	set_cmt	(0X43F0E385,	"this",	0);
	create_insn	(x=0X43F0E3E8);
	op_hex		(x,	1);
	create_insn	(x=0X43F0E41C);
	op_hex		(x,	1);
	create_insn	(0X43F0E42F);
	create_insn	(x=0X43F0E438);
	op_hex		(x,	1);
	create_insn	(x=0X43F0E455);
	op_hex		(x,	1);
	create_insn	(x=0X43F0E459);
	op_hex		(x,	1);
	create_insn	(x=0X43F0E5C2);
	op_hex		(x,	1);
	create_insn	(x=0X43F0E5C5);
	op_hex		(x,	1);
	create_insn	(0X43F0E5D9);
	create_insn	(x=0X43F0E5DE);
	op_hex		(x,	1);
	create_insn	(x=0X43F0E5E1);
	op_hex		(x,	1);
	create_insn	(0X43F0E5F5);
	create_insn	(x=0X43F0E5FA);
	op_hex		(x,	1);
	create_insn	(x=0X43F0E5FD);
	op_hex		(x,	1);
	set_cmt	(0X43F0E61E,	"_DWORD",	0);
	set_cmt	(0X43F0E621,	"_DWORD",	0);
	set_cmt	(0X43F0E624,	"_DWORD",	0);
	create_insn	(x=0X43F0E62B);
	op_hex		(x,	1);
	set_cmt	(0X43F0E635,	"_DWORD",	0);
	create_insn	(0X43F0E635);
	set_cmt	(0X43F0E638,	"_DWORD",	0);
	set_cmt	(0X43F0E639,	"_DWORD",	0);
	create_insn	(x=0X43F0E642);
	op_hex		(x,	1);
	make_array	(0X43F0E64C,	0X4);
	set_cmt	(0X43F0E650,	"interface",	0);
	create_insn	(0X43F0E650);
	set_name	(0X43F0E650,	"C_SDK::Player::Weapon::GetWeaponType");
	set_cmt	(0X43F0E656,	"index",	0);
	set_cmt	(0X43F0E672,	"index",	0);
	set_cmt	(0X43F0E677,	"interface",	0);
	set_cmt	(0X43F0E684,	"this",	0);
	set_cmt	(0X43F0E69E,	"index",	0);
	set_cmt	(0X43F0E6A3,	"interface",	0);
	set_cmt	(0X43F0E6B0,	"this",	0);
	set_cmt	(0X43F0E6BC,	"player",	0);
	set_cmt	(0X43F0E6D7,	"propHash",	0);
	set_cmt	(0X43F0E6DC,	"classHash",	0);
	set_cmt	(0X43F0E6FC,	"switch 84 cases ",	0);
	create_insn	(x=0X43F0E702);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0E709,	"switch jump",	0);
	create_insn	(x=0X43F0E709);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0E710,	"jumptable 43F0E709 cases 1-4,30,32,36,61,63,64",	1);
	create_insn	(0X43F0E710);
	set_cmt	(0X43F0E717,	"jumptable 43F0E709 cases 7,8,10,13,16,39,60",	1);
	create_insn	(0X43F0E717);
	set_cmt	(0X43F0E71B,	"jumptable 43F0E709 cases 17,19,23,24,26,33,34",	1);
	create_insn	(0X43F0E71B);
	set_cmt	(0X43F0E722,	"jumptable 43F0E709 cases 9,11,38,40",	1);
	create_insn	(0X43F0E722);
	set_cmt	(0X43F0E729,	"jumptable 43F0E709 cases 14,25,27-29,35",	1);
	create_insn	(0X43F0E729);
	set_cmt	(0X43F0E730,	"jumptable 43F0E709 cases 43-48,84",	1);
	create_insn	(0X43F0E730);
	set_cmt	(0X43F0E737,	"switch 19 cases ",	0);
	create_insn	(x=0X43F0E737);
	op_hex		(x,	1);
	create_insn	(x=0X43F0E742);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0E749,	"switch jump",	0);
	create_insn	(x=0X43F0E749);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F0E750,	"jumptable 43F0E709 cases 41,42,59\njumptable 43F0E749 cases 505-509,512,514-516,519,520,522,523",	1);
	create_insn	(0X43F0E750);
	set_cmt	(0X43F0E757,	"jumptable 43F0E709 default case, cases 5,6,12,15,18,20-22,31,37,49-58,62,65-83\njumptable 43F0E749 default case, cases 510,511,513,517,518,521",	1);
	create_insn	(0X43F0E757);
	set_name	(0X43F0E757,	"def_43F0E709");
	set_cmt	(0X43F0E760,	"propHash",	0);
	set_cmt	(0X43F0E765,	"classHash",	0);
	create_insn	(0X43F0E790);
	create_insn	(0X43F0E7A6);
	create_insn	(0X43F0E7B0);
	create_insn	(0X43F0E7C4);
	create_insn	(0X43F0E7CD);
	create_insn	(0X43F0E7D9);
	create_insn	(0X43F0E7E3);
	create_insn	(0X43F0E7E9);
	create_insn	(0X43F0E7F0);
	set_cmt	(0X43F0E81C,	"jump table for switch statement",	0);
	create_dword	(x=0X43F0E81C);
	make_array	(x,	0X8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F0E81C,	"jpt_43F0E709");
	set_cmt	(0X43F0E83C,	"indirect table for switch statement",	0);
	create_byte	(0X43F0E83C);
	make_array	(0X43F0E83C,	0X54);
	set_cmt	(0X43F0E890,	"jump table for switch statement",	0);
	create_dword	(x=0X43F0E890);
	make_array	(x,	0X2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F0E890,	"jpt_43F0E749");
	set_cmt	(0X43F0E898,	"indirect table for switch statement",	0);
	create_byte	(0X43F0E898);
	make_array	(0X43F0E898,	0X13);
	make_array	(0X43F0E8AB,	0X5);
	create_insn	(0X43F0E8B0);
	set_name	(0X43F0E8B0,	"OneTap::Features::Hooks::SetupBones");
	create_insn	(x=0X43F0E8BD);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0E8C8,	"_DWORD",	0);
	create_insn	(x=0X43F0E8C8);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0E8CD,	"_DWORD",	0);
	create_insn	(x=0X43F0E8CD);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0E8D0,	"_DWORD",	0);
	create_insn	(x=0X43F0E8D0);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0E8D3,	"_DWORD",	0);
	create_insn	(x=0X43F0E8D3);
	op_stkvar	(x,	0);
	create_insn	(0X43F0E8DE);
	create_insn	(0X43F0E911);
	set_cmt	(0X43F0E917,	"index",	0);
	set_cmt	(0X43F0E91C,	"interface",	0);
	set_cmt	(0X43F0E929,	"this",	0);
	create_insn	(x=0X43F0E93D);
	op_stkvar	(x,	1);
	create_insn	(0X43F0E962);
	create_insn	(x=0X43F0E979);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0E97C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0E983);
	op_hex		(x,	1);
	create_insn	(x=0X43F0E987);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0E992);
	op_hex		(x,	1);
	create_insn	(0X43F0E99E);
	create_insn	(0X43F0E9B0);
	create_insn	(x=0X43F0E9B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0E9B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0E9BF);
	op_hex		(x,	1);
	create_insn	(x=0X43F0E9C3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0E9CE);
	op_hex		(x,	1);
	set_cmt	(0X43F0E9DA,	"_DWORD",	0);
	create_insn	(x=0X43F0E9DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0E9F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0E9FD);
	create_insn	(x=0X43F0EA0B);
	op_stkvar	(x,	0);
	create_insn	(0X43F0EA1C);
	create_insn	(x=0X43F0EA1D);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0EA27,	"_DWORD",	0);
	create_insn	(x=0X43F0EA27);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0EA2C,	"_DWORD",	0);
	create_insn	(x=0X43F0EA2C);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0EA2F,	"_DWORD",	0);
	create_insn	(x=0X43F0EA2F);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0EA32,	"_DWORD",	0);
	create_insn	(x=0X43F0EA32);
	op_stkvar	(x,	0);
	make_array	(0X43F0EA3E,	0X2);
	create_insn	(0X43F0EA40);
	create_insn	(x=0X43F0EA43);
	op_hex		(x,	1);
	create_insn	(0X43F0EBF9);
	create_insn	(0X43F0EC0E);
	create_insn	(x=0X43F0EC1C);
	op_hex		(x,	1);
	create_insn	(0X43F0EC50);
	create_insn	(x=0X43F0EC5D);
	op_hex		(x,	1);
	create_insn	(x=0X43F0EC63);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0EC69);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0EC82);
	create_insn	(x=0X43F0EC8F);
	op_hex		(x,	1);
	create_insn	(x=0X43F0EC92);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0ECB7);
	op_hex		(x,	1);
	create_insn	(x=0X43F0ECC4);
	op_hex		(x,	1);
	create_insn	(x=0X43F0ECE6);
	op_hex		(x,	1);
	create_insn	(0X43F0ED1A);
	create_insn	(x=0X43F0ED2A);
	op_hex		(x,	1);
	create_insn	(x=0X43F0ED2D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0ED33);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0ED50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0ED60);
	make_array	(0X43F0EDB5,	0XB);
	create_insn	(0X43F0EDC0);
	set_name	(0X43F0EDC0,	"OneTap::Features::RageBot::GetMissedReason::Default");
	create_insn	(x=0X43F0EDC3);
	op_hex		(x,	1);
	create_insn	(x=0X43F0EDC6);
	op_hex		(x,	1);
	create_insn	(x=0X43F0EDC9);
	op_stkvar	(x,	0);
	set_cmt	(0X43F0EDCF,	"esi0",	0);
	create_insn	(x=0X43F0EDCF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0EE0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0EE16);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0EE1F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0EE27);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0EE30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0EE3B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0EE53);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0EE5A);
	set_cmt	(0X43F0EEF0,	"vTable",	0);
	create_insn	(0X43F0EEF0);
	set_cmt	(0X43F0EF06,	"m_pPlayer",	0);
	create_insn	(x=0X43F0EF0D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0EF16);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0EF3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0EF54);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0EF76);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0EF88);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0EF9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0EFA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0EFB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0EFC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0EFD7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0EFE0);
	op_stkvar	(x,	0);
	create_insn	(0X43F0EFE8);
	create_insn	(x=0X43F0EFF1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0EFF7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F00D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0F020);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F02C);
	create_insn	(x=0X43F0F038);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F04D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0F060);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F067);
	create_insn	(x=0X43F0F073);
	op_hex		(x,	1);
	set_cmt	(0X43F0F07B,	"esi0",	0);
	create_insn	(x=0X43F0F081);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F093);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F099);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F09E);
	op_stkvar	(x,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_15(void) {
        auto x;
#define id x

	create_insn	(x=0X43F0F0A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F0B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F0B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F0BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F0C6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F0D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F0D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F0DA);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F0DD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F0E2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F0E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F0F5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F0FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F100);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F108);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0F116,	"interface",	0);
	set_cmt	(0X43F0F11C,	"index",	0);
	create_insn	(x=0X43F0F13A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F13E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F146);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F14B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F153);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F15A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F15E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F166);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F171);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F175);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F179);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F17C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F181);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F18F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F194);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F19D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F1A2);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F1A5);
	op_hex		(x,	1);
	set_cmt	(0X43F0F1B4,	"a3",	0);
	set_cmt	(0X43F0F1B5,	"a2",	0);
	set_cmt	(0X43F0F1B6,	"a1",	0);
	create_insn	(x=0X43F0F1B6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0F1C0);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F1C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F1D9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F1E3);
	create_insn	(x=0X43F0F1ED);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F202);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0F215);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F21C);
	create_insn	(x=0X43F0F22D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F231);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F239);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F23E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F246);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F24E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F253);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F25B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F263);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F270);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F274);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F278);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F27B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F280);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F28E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F293);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F29C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F2A1);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F2A4);
	op_hex		(x,	1);
	set_cmt	(0X43F0F2B3,	"a3",	0);
	set_cmt	(0X43F0F2B4,	"a2",	0);
	set_cmt	(0X43F0F2B5,	"a1",	0);
	create_insn	(x=0X43F0F2B5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0F2BF);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F2C2);
	op_stkvar	(x,	1);
	create_insn	(0X43F0F2D0);
	create_insn	(x=0X43F0F2DF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0F2FB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0F317);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F31F);
	create_insn	(x=0X43F0F337);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F33B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F343);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F348);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F350);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F357);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F35C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F364);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F36C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F380);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F384);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F388);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F38B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F390);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F39E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F3A3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F3A7);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0F3AC,	"a3",	0);
	set_cmt	(0X43F0F3AD,	"a2",	0);
	set_cmt	(0X43F0F3AF,	"a1",	0);
	create_insn	(x=0X43F0F3AF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0F3B9);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F3BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F3FB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F402);
	create_insn	(x=0X43F0F416);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F41E);
	create_insn	(x=0X43F0F433);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F447);
	make_array	(0X43F0F45B,	0X5);
	create_insn	(0X43F0F460);
	set_name	(0X43F0F460,	"OneTap::Features::RageBot::GetMissedReason::Legacy");
	create_insn	(x=0X43F0F463);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F466);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F46A);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0F46E,	"esi0",	0);
	create_insn	(x=0X43F0F46E);
	op_stkvar	(x,	1);
	create_insn	(0X43F0F4B1);
	create_insn	(x=0X43F0F4DD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F4E4);
	set_cmt	(0X43F0F57E,	"this",	0);
	create_insn	(0X43F0F57E);
	set_cmt	(0X43F0F590,	"m_pPlayer",	0);
	create_insn	(0X43F0F59F);
	create_insn	(x=0X43F0F5C0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F5DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F5FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F60E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F624);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F62A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F638);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F64E);
	op_stkvar	(x,	1);
	create_insn	(0X43F0F66B);
	create_insn	(x=0X43F0F698);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F6A4);
	create_insn	(0X43F0F6B0);
	create_insn	(x=0X43F0F6B3);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F6C1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0F6D5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F6DC);
	create_insn	(x=0X43F0F6E8);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F6F6);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F708);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F70E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F713);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F71E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F726);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F72B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F733);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F73B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F750);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F754);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F758);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F75B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F760);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F765);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F773);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F778);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F77E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F786);
	op_stkvar	(x,	1);
	set_cmt	(0X43F0F794,	"interface",	0);
	set_cmt	(0X43F0F79A,	"index",	0);
	create_insn	(x=0X43F0F7B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F7BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F7C4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F7C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F7D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F7D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F7DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F7E4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F7F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F7F8);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F7FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F800);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F80E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F813);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F81C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F821);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F824);
	op_hex		(x,	1);
	set_cmt	(0X43F0F833,	"a3",	0);
	set_cmt	(0X43F0F834,	"a2",	0);
	set_cmt	(0X43F0F835,	"a1",	0);
	create_insn	(x=0X43F0F835);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0F83F);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F842);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F859);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F863);
	create_insn	(0X43F0F86D);
	create_insn	(x=0X43F0F878);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0F88C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F893);
	create_insn	(x=0X43F0F8A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F8A8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F8B0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F8B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F8BD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F8C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F8CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F8D2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F8DA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F8F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F8F8);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F8FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F900);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F90E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F0F913);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F91C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F921);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F924);
	op_hex		(x,	1);
	set_cmt	(0X43F0F933,	"a3",	0);
	set_cmt	(0X43F0F934,	"a2",	0);
	set_cmt	(0X43F0F935,	"a1",	0);
	create_insn	(x=0X43F0F935);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0F93F);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F942);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F0F95D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F964);
	create_insn	(x=0X43F0F975);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F97C);
	create_insn	(x=0X43F0F984);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0F98D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F0F998);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F0F9AD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0F9B4);
	create_insn	(x=0X43F0F9BB);
	op_stkvar	(x,	1);
	make_array	(0X43F0F9D5,	0XB);
	create_insn	(0X43F0F9E0);
	create_insn	(x=0X43F0F9E3);
	op_hex		(x,	1);
	create_insn	(x=0X43F0F9EC);
	op_hex		(x,	1);
	create_insn	(x=0X43F0FA55);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F0FA5A,	"a2",	0);
	set_cmt	(0X43F0FA5E,	"a1",	0);
	create_insn	(0X43F0FA68);
	create_insn	(0X43F0FA80);
	create_insn	(x=0X43F0FA94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F0FAA4);
	make_array	(0X43F0FAA9,	0X7);
	create_insn	(0X43F0FAB0);
	create_insn	(x=0X43F0FAB3);
	op_hex		(x,	1);
	create_insn	(0X43F0FB03);
	create_insn	(x=0X43F0FB08);
	op_hex		(x,	1);
	create_insn	(x=0X43F0FB0F);
	op_hex		(x,	1);
	create_insn	(x=0X43F0FB2C);
	op_hex		(x,	1);
	create_insn	(x=0X43F0FB41);
	op_hex		(x,	1);
	create_insn	(x=0X43F0FB71);
	op_hex		(x,	1);
	create_insn	(x=0X43F0FB94);
	op_hex		(x,	1);
	create_insn	(x=0X43F0FBBC);
	op_hex		(x,	1);
	make_array	(0X43F0FBCB,	0X5);
	create_insn	(0X43F0FBD0);
	create_insn	(x=0X43F0FBD3);
	op_hex		(x,	1);
	create_insn	(x=0X43F0FBD6);
	op_hex		(x,	1);
	make_array	(0X43F0FC9D,	0X3);
	create_insn	(0X43F0FCA0);
	create_insn	(x=0X43F0FCA3);
	op_hex		(x,	1);
	create_insn	(x=0X43F0FCA6);
	op_hex		(x,	1);
	set_cmt	(0X43F0FCAC,	"arg",	0);
	create_insn	(0X43F0FEC9);
	create_insn	(0X43F0FEE0);
	create_insn	(x=0X43F0FEF1);
	op_hex		(x,	1);
	create_insn	(0X43F0FF1F);
	create_insn	(0X43F0FF27);
	create_insn	(0X43F0FF4E);
	create_insn	(0X43F0FF56);
	create_insn	(0X43F0FF8D);
	create_insn	(x=0X43F0FF92);
	op_hex		(x,	1);
	create_insn	(x=0X43F0FF99);
	op_hex		(x,	1);
	create_insn	(x=0X43F0FFB4);
	op_hex		(x,	1);
	create_insn	(x=0X43F0FFC7);
	op_hex		(x,	1);
	create_insn	(x=0X43F0FFF3);
	op_hex		(x,	1);
	create_insn	(0X43F10034);
	make_array	(0X43F10039,	0X7);
	create_insn	(0X43F10040);
	create_insn	(x=0X43F10043);
	op_hex		(x,	1);
	create_insn	(x=0X43F10046);
	op_hex		(x,	1);
	create_insn	(x=0X43F10049);
	op_hex		(x,	1);
	set_cmt	(0X43F1004C,	"size",	0);
	create_insn	(x=0X43F10151);
	op_hex		(x,	1);
	create_insn	(x=0X43F101D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F10209,	"Size",	0);
	create_insn	(x=0X43F10213);
	op_hex		(x,	1);
	create_insn	(x=0X43F10221);
	op_hex		(x,	1);
	create_insn	(0X43F10370);
	create_insn	(0X43F10397);
	create_insn	(0X43F103BE);
	create_insn	(x=0X43F103D4);
	op_hex		(x,	1);
	create_insn	(x=0X43F103FB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F10423);
	create_insn	(x=0X43F10436);
	op_hex		(x,	1);
	create_insn	(x=0X43F1047A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F10570);
	create_insn	(0X43F1059D);
	create_insn	(0X43F105A2);
	make_array	(0X43F105A7,	0X9);
	create_insn	(0X43F105B0);
	create_insn	(x=0X43F105B3);
	op_hex		(x,	1);
	create_insn	(x=0X43F105B6);
	op_hex		(x,	1);
	create_insn	(x=0X43F105B9);
	op_hex		(x,	1);
	create_insn	(x=0X43F105C6);
	op_hex		(x,	1);
	create_insn	(0X43F1065E);
	create_insn	(x=0X43F1068F);
	op_hex		(x,	1);
	create_insn	(x=0X43F106C4);
	op_hex		(x,	1);
	create_insn	(x=0X43F106EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F1070A);
	create_insn	(0X43F10715);
	create_insn	(0X43F1071C);
	create_insn	(0X43F10760);
	create_insn	(x=0X43F107A3);
	op_hex		(x,	1);
	create_insn	(x=0X43F107D8);
	op_hex		(x,	1);
	create_insn	(0X43F10819);
	create_insn	(0X43F10824);
	create_insn	(0X43F1082B);
	make_array	(0X43F10848,	0X8);
	create_insn	(0X43F10850);
	create_insn	(x=0X43F10855);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F1085B);
	create_insn	(x=0X43F1085E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F10863);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1086C,	0X4);
	create_insn	(0X43F10870);
	create_insn	(x=0X43F10879);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F1087F);
	create_insn	(x=0X43F10886);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1088B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F10894,	0XC);
	create_insn	(0X43F108A0);
	make_array	(0X43F108BB,	0X5);
	create_insn	(0X43F108C0);
	make_array	(0X43F108CB,	0X5);
	create_insn	(0X43F108D0);
	make_array	(0X43F108DD,	0X3);
	create_insn	(0X43F108E0);
	make_array	(0X43F108ED,	0X3);
	create_insn	(0X43F108F0);
	create_insn	(x=0X43F108F3);
	op_hex		(x,	1);
	create_insn	(x=0X43F108F6);
	op_hex		(x,	1);
	create_insn	(x=0X43F108F9);
	op_hex		(x,	1);
	create_insn	(x=0X43F1090B);
	op_hex		(x,	1);
	set_cmt	(0X43F1090E,	"this",	0);
	create_insn	(0X43F10996);
	create_insn	(x=0X43F109D7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F109E0);
	create_insn	(x=0X43F109E7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F109EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F10A16);
	set_cmt	(0X43F10A4B,	"switch 19 cases ",	0);
	create_insn	(x=0X43F10A50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F10A57,	"switch jump",	0);
	create_insn	(x=0X43F10A57);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F10A5E,	"jumptable 43F10A57 cases 0,1",	1);
	create_insn	(0X43F10A5E);
	set_cmt	(0X43F10A65,	"jumptable 43F10A57 cases 3,5,6",	1);
	create_insn	(0X43F10A65);
	set_cmt	(0X43F10A6C,	"jumptable 43F10A57 cases 2,4",	1);
	create_insn	(0X43F10A6C);
	set_cmt	(0X43F10A73,	"jumptable 43F10A57 cases 13,15,16",	1);
	create_insn	(0X43F10A73);
	set_cmt	(0X43F10A7A,	"jumptable 43F10A57 cases 14,17,18",	1);
	create_insn	(0X43F10A7A);
	set_cmt	(0X43F10A81,	"jumptable 43F10A57 cases 7,9,11",	1);
	create_insn	(0X43F10A81);
	set_cmt	(0X43F10A88,	"jumptable 43F10A57 cases 8,10,12",	1);
	create_insn	(0X43F10A88);
	set_cmt	(0X43F10A8F,	"jumptable 43F10A57 default case",	1);
	create_insn	(0X43F10A8F);
	set_name	(0X43F10A8F,	"def_43F10A57");
	create_insn	(x=0X43F10AB3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F10B67);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F10B7E,	0X2);
	set_cmt	(0X43F10B80,	"jump table for switch statement",	0);
	create_dword	(x=0X43F10B80);
	make_array	(x,	0X7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F10B80,	"jpt_43F10A57");
	set_cmt	(0X43F10B9C,	"indirect table for switch statement",	0);
	create_byte	(0X43F10B9C);
	make_array	(0X43F10B9C,	0X13);
	create_insn	(0X43F10BB0);
	create_insn	(x=0X43F10BB3);
	op_hex		(x,	1);
	create_insn	(x=0X43F10BB6);
	op_hex		(x,	1);
	create_insn	(x=0X43F10BB9);
	op_hex		(x,	1);
	create_insn	(x=0X43F10BC6);
	op_hex		(x,	1);
	create_insn	(x=0X43F10BF7);
	op_hex		(x,	1);
	create_insn	(x=0X43F10D80);
	op_hex		(x,	1);
	create_insn	(0X43F111A6);
	make_array	(0X43F1128B,	0X5);
	create_insn	(0X43F11290);
	update_extra_cmt		(0X43F11291,	E_PREV + 0,	"\x01\x04; 37:     sub_43F10040(v9, &savedregs, v0, v4);");
	create_insn	(x=0X43F11293);
	op_hex		(x,	1);
	set_cmt	(0X43F11296,	"interface",	0);
	update_extra_cmt		(0X43F11296,	E_PREV + 0,	"\x01\x04; 24:   v1 = C_SDK::Utils::CallVirtualFunction(C_SDK::Globals::IEngineClient, 12);");
	create_insn	(x=0X43F1129C);
	op_hex		(x,	1);
	set_cmt	(0X43F1129F,	"index",	0);
	update_extra_cmt		(0X43F112A6,	E_PREV + 0,	"\x01\x04; 23:   v0 = Onetap::Globals::ILocalPlayer;");
	update_extra_cmt		(0X43F112B1,	E_PREV + 0,	"\x01\x04; 25:   v2 = v1();");
	set_cmt	(0X43F112B3,	"this",	0);
	update_extra_cmt		(0X43F112B3,	E_PREV + 0,	"\x01\x04; 26:   v3 = C_SDK::Valve::CallEngineState(v0);");
	update_extra_cmt		(0X43F112BC,	E_PREV + 0,	"\x01\x04; 27:   if ( v3(v2)");
	update_extra_cmt		(0X43F112BC,	E_PREV + 1,	"\x01\x04; 28:     && (v4 = Onetap::Globals::ILocalPlayer,");
	update_extra_cmt		(0X43F112BC,	E_PREV + 2,	"\x01\x04; 29:         v5 = C_SDK::Utils::CallVirtualFunction(C_SDK::Globals::IEngineClient, 12),");
	update_extra_cmt		(0X43F112BC,	E_PREV + 3,	"\x01\x04; 30:         v5(),");
	update_extra_cmt		(0X43F112BC,	E_PREV + 4,	"\x01\x04; 31:         v6 = C_SDK::Valve::CallEngineState(v4),");
	update_extra_cmt		(0X43F112BC,	E_PREV + 5,	"\x01\x04; 32:         v8 = v6(v7),");
	update_extra_cmt		(0X43F112BC,	E_PREV + 6,	"\x01\x04; 33:         C_SDK::Player::IsAlive(v8))");
	update_extra_cmt		(0X43F112BC,	E_PREV + 7,	"\x01\x04; 34:     && *(*(*dword_43F46AA8 + 60) + *dword_43F46AA8 + 8) == 0x5D6729E1 )");
	set_cmt	(0X43F112CD,	"index",	0);
	set_cmt	(0X43F112D2,	"interface",	0);
	set_cmt	(0X43F112DF,	"this",	0);
	set_cmt	(0X43F112EB,	"m_pPlayer",	0);
	update_extra_cmt		(0X43F11312,	E_PREV + 0,	"\x01\x04; 36:     sub_43F105B0();");
	update_extra_cmt		(0X43F1131C,	E_PREV + 0,	"\x01\x04; 38:     v10 = dword_4472EFB8;");
	update_extra_cmt		(0X43F11322,	E_PREV + 0,	"\x01\x04; 40:       return;");
	update_extra_cmt		(0X43F11324,	E_PREV + 0,	"\x01\x04; 39:     if ( !dword_4472EFB8 )");
	update_extra_cmt		(0X43F1132A,	E_PREV + 0,	"\x01\x04; 41:     v11 = 0;");
	update_extra_cmt		(0X43F1132C,	E_PREV + 0,	"\x01\x04; 42:     if ( dword_4472EFB8 )");
	update_extra_cmt		(0X43F11334,	E_PREV + 0,	"\x01\x04; 44:       if ( dword_4472EFB8 <= 0 )");
	update_extra_cmt		(0X43F1133C,	E_PREV + 0,	"\x01\x04; 48:         v12 = 0;");
	update_extra_cmt		(0X43F11342,	E_PREV + 0,	"\x01\x04; 46:       while ( 1 )");
	update_extra_cmt		(0X43F11344,	E_PREV + 0,	"\x01\x04; 49:         if ( dword_4472EFA8 )");
	update_extra_cmt		(0X43F1134E,	E_PREV + 0,	"\x01\x04; 51:           if ( !*dword_4472EFA8 )");
	update_extra_cmt		(0X43F11354,	E_PREV + 0,	"\x01\x04; 53:             v13 = v11 + dword_4472EFB4;");
	update_extra_cmt		(0X43F11356,	E_PREV + 0,	"\x01\x04; 55:             v14 = 0;");
	update_extra_cmt		(0X43F11356,	E_PREV + 1,	"\x01\x04; 56:             goto LABEL_11;");
	update_extra_cmt		(0X43F11358,	E_PREV + 0,	"\x01\x04; 71:         v15 = *(*(v14 + 4) + 4 * (v13 & (*(v14 + 8) - 1)));");
	update_extra_cmt		(0X43F11364,	E_PREV + 0,	"\x01\x04; 72:         LOBYTE(v18) = *(v15 + 0x25EC) > 0;");
	update_extra_cmt		(0X43F11370,	E_PREV + 0,	"\x01\x04; 73:         if ( byte_44717E0C && *(v15 + 0x24) > 0 )");
	create_insn	(x=0X43F11386);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F1138B,	"a2",	0);
	set_cmt	(0X43F1138F,	"a1",	0);
	update_extra_cmt		(0X43F11390,	E_PREV + 0,	"\x01\x04; 75:           if ( OneTap::Globals::ServerType )");
	update_extra_cmt		(0X43F11392,	E_PREV + 0,	"\x01\x04; 78:             sub_43F0F460(v15, v18);");
	update_extra_cmt		(0X43F11399,	E_PREV + 0,	"\x01\x04; 58:           v12 = **dword_4472EFA8;");
	create_insn	(0X43F11399);
	update_extra_cmt		(0X43F1139B,	E_PREV + 0,	"\x01\x04; 60:         v13 = v11 + dword_4472EFB4;");
	update_extra_cmt		(0X43F1139D,	E_PREV + 0,	"\x01\x04; 61:         if ( !v12 )");
	update_extra_cmt		(0X43F1139F,	E_PREV + 0,	"\x01\x04; 62:           goto LABEL_10;");
	update_extra_cmt		(0X43F113A1,	E_PREV + 0,	"\x01\x04; 63:         v16 = *v12;");
	update_extra_cmt		(0X43F113A3,	E_PREV + 0,	"\x01\x04; 64:         if ( !v16 )");
	update_extra_cmt		(0X43F113A5,	E_PREV + 0,	"\x01\x04; 65:           goto LABEL_10;");
	update_extra_cmt		(0X43F113A7,	E_PREV + 0,	"\x01\x04; 66:         v17 = *v16;");
	update_extra_cmt		(0X43F113A9,	E_PREV + 0,	"\x01\x04; 67:         if ( !v17 )");
	update_extra_cmt		(0X43F113AB,	E_PREV + 0,	"\x01\x04; 68:           goto LABEL_10;");
	update_extra_cmt		(0X43F113AD,	E_PREV + 0,	"\x01\x04; 69:         v14 = *v17;");
	update_extra_cmt		(0X43F113B1,	E_PREV + 0,	"\x01\x04; 76:             OneTap::Features::Ragebot::ToMissReason(v15, v18);");
	create_insn	(0X43F113B1);
	update_extra_cmt		(0X43F113B6,	E_PREV + 0,	"\x01\x04; 79:           v10 = dword_4472EFB8;");
	update_extra_cmt		(0X43F113BC,	E_PREV + 0,	"\x01\x04; 81:         if ( v10 <= ++v11 )");
	update_extra_cmt		(0X43F113C5,	E_PREV + 0,	"\x01\x04; 83:           sub_43E15B50(&dword_4472EFA8);");
	create_insn	(x=0X43F113C5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	update_extra_cmt		(0X43F113D4,	E_PREV + 0,	"\x01\x04; 84:           return;");
	update_extra_cmt		(0X43F113D5,	E_PREV + 0,	"\x01\x04; 91:     sub_43E16050();");
	create_insn	(0X43F113D5);
	update_extra_cmt		(0X43F113DA,	E_PREV + 0,	"\x01\x04; 92:     sub_43E15C20(&dword_4472EF94);");
	create_insn	(x=0X43F113DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	update_extra_cmt		(0X43F113E4,	E_PREV + 0,	"\x01\x04; 94:   sub_43E15B50(&dword_4472EFA8);");
	create_insn	(x=0X43F113E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	update_extra_cmt		(0X43F113F4,	E_PREV + 0,	"\x01\x04; 45:         sub_43DD31E0();");
	create_insn	(0X43F113F4);
	make_array	(0X43F113F9,	0X7);
	create_insn	(0X43F11400);
	set_name	(0X43F11400,	"OneTap::Features::DoubleTap::Instance");
	create_insn	(x=0X43F11403);
	op_hex		(x,	1);
	set_cmt	(0X43F11406,	"interface",	0);
	create_insn	(x=0X43F1140C);
	op_hex		(x,	1);
	set_cmt	(0X43F11412,	"index",	0);
	set_cmt	(0X43F1141E,	"arg",	0);
	set_cmt	(0X43F11426,	"this",	0);
	set_cmt	(0X43F11440,	"index",	0);
	set_cmt	(0X43F11445,	"interface",	0);
	set_cmt	(0X43F11452,	"this",	0);
	set_cmt	(0X43F1145E,	"player",	0);
	set_cmt	(0X43F11473,	"index",	0);
	set_cmt	(0X43F11478,	"interface",	0);
	set_cmt	(0X43F11485,	"this",	0);
	set_cmt	(0X43F11491,	"player",	0);
	set_cmt	(0X43F114A3,	"propHash",	0);
	set_cmt	(0X43F114A8,	"classHash",	0);
	create_insn	(x=0X43F114CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F114DF);
	op_hex		(x,	1);
	create_insn	(x=0X43F114E4);
	op_hex		(x,	1);
	create_insn	(x=0X43F114F1);
	op_hex		(x,	1);
	create_insn	(x=0X43F114F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F11509);
	op_hex		(x,	1);
	set_cmt	(0X43F11518,	"index",	0);
	set_cmt	(0X43F1151D,	"interface",	0);
	set_cmt	(0X43F1152A,	"this",	0);
	set_cmt	(0X43F11536,	"a3",	0);
	set_cmt	(0X43F11538,	"a2",	0);
	set_cmt	(0X43F1153A,	"m_player",	0);
	create_insn	(x=0X43F11545);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1154F);
	op_stkvar	(x,	1);
	set_cmt	(0X43F11579,	"index",	0);
	set_cmt	(0X43F11588,	"interface",	0);
	create_insn	(x=0X43F1158E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11592);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1159D,	"this",	0);
	set_cmt	(0X43F115B4,	"propHash",	0);
	set_cmt	(0X43F115B9,	"classHash",	0);
	create_insn	(x=0X43F115C8);
	op_hex		(x,	1);
	set_cmt	(0X43F115EB,	"index",	0);
	set_cmt	(0X43F115F0,	"interface",	0);
	set_cmt	(0X43F115FD,	"this",	0);
	set_cmt	(0X43F11617,	"index",	0);
	set_cmt	(0X43F1161C,	"interface",	0);
	set_cmt	(0X43F11629,	"this",	0);
	set_cmt	(0X43F11635,	"player",	0);
	set_cmt	(0X43F1164A,	"index",	0);
	set_cmt	(0X43F1164F,	"interface",	0);
	set_cmt	(0X43F1165C,	"this",	0);
	set_cmt	(0X43F11668,	"player",	0);
	set_cmt	(0X43F1167A,	"propHash",	0);
	set_cmt	(0X43F1167F,	"classHash",	0);
	set_cmt	(0X43F116A3,	"switch 84 cases ",	0);
	create_insn	(x=0X43F116AD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F116B4,	"switch jump",	0);
	create_insn	(x=0X43F116B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F116BB,	"jumptable 43F116B4 cases 1-4,7-11,13,14,16,17,19,23-30,32-36,38-40,60,61,63,64",	1);
	create_insn	(x=0X43F116BB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F116C7);
	op_hex		(x,	1);
	set_cmt	(0X43F116D3,	"index",	0);
	set_cmt	(0X43F116D8,	"interface",	0);
	set_cmt	(0X43F116E5,	"this",	0);
	set_cmt	(0X43F116F1,	"a3",	0);
	set_cmt	(0X43F116F3,	"a2",	0);
	set_cmt	(0X43F116F5,	"m_player",	0);
	create_insn	(x=0X43F116FC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11705);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1170A,	"cmd",	0);
	create_insn	(x=0X43F1170A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F11716);
	op_hex		(x,	1);
	set_cmt	(0X43F11725,	"index",	0);
	set_cmt	(0X43F1172A,	"interface",	0);
	set_cmt	(0X43F11737,	"this",	0);
	set_cmt	(0X43F11743,	"a3",	0);
	set_cmt	(0X43F11745,	"a2",	0);
	set_cmt	(0X43F11747,	"m_player",	0);
	create_insn	(x=0X43F11752);
	op_stkvar	(x,	0);
	create_insn	(0X43F11759);
	create_insn	(x=0X43F1175B);
	op_stkvar	(x,	0);
	set_cmt	(0X43F11765,	"index",	0);
	set_cmt	(0X43F1176A,	"interface",	0);
	set_cmt	(0X43F11777,	"this",	0);
	set_cmt	(0X43F11783,	"player",	0);
	set_cmt	(0X43F11795,	"propHash",	0);
	set_cmt	(0X43F1179A,	"classHash",	0);
	create_insn	(x=0X43F117AE);
	op_stkvar	(x,	1);
	set_cmt	(0X43F117B8,	"cmd",	0);
	create_insn	(x=0X43F117B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F117C4);
	op_hex		(x,	1);
	create_insn	(x=0X43F117CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F117CF);
	op_stkvar	(x,	0);
	set_cmt	(0X43F117E4,	"index",	0);
	set_cmt	(0X43F117E9,	"interface",	0);
	set_cmt	(0X43F117F6,	"this",	0);
	set_cmt	(0X43F11802,	"player",	0);
	set_cmt	(0X43F11814,	"propHash",	0);
	set_cmt	(0X43F11819,	"classHash",	0);
	create_insn	(0X43F1183B);
	create_insn	(x=0X43F1185C);
	op_hex		(x,	1);
	create_insn	(x=0X43F11861);
	op_hex		(x,	1);
	create_insn	(x=0X43F1186E);
	op_hex		(x,	1);
	create_insn	(x=0X43F11871);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F11886,	"index",	0);
	set_cmt	(0X43F11891,	"interface",	0);
	set_cmt	(0X43F118A6,	"this",	0);
	set_cmt	(0X43F118BD,	"propHash",	0);
	set_cmt	(0X43F118C2,	"classHash",	0);
	create_insn	(x=0X43F11927);
	op_hex		(x,	1);
	create_insn	(x=0X43F1192A);
	op_hex		(x,	1);
	create_insn	(0X43F11958);
	set_cmt	(0X43F11965,	"index",	0);
	set_cmt	(0X43F11970,	"interface",	0);
	set_cmt	(0X43F11982,	"this",	0);
	set_cmt	(0X43F1198E,	"player",	0);
	create_insn	(x=0X43F11995);
	op_stkvar	(x,	1);
	set_cmt	(0X43F1199A,	"cmd",	0);
	create_insn	(x=0X43F1199A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F119A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F119B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F119C1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F119CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F119D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F119EE);
	op_stkvar	(x,	1);
	set_cmt	(0X43F11A5F,	"Size",	0);
	create_insn	(x=0X43F11A69);
	op_hex		(x,	1);
	create_insn	(x=0X43F11A77);
	op_hex		(x,	1);
	create_insn	(x=0X43F11A8E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F11AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11ADC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F11AF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F11AFD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11B05);
	op_stkvar	(x,	1);
	create_insn	(0X43F11B53);
	create_insn	(x=0X43F11B79);
	op_hex		(x,	1);
	create_insn	(0X43F11B88);
	create_insn	(x=0X43F11B91);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11B95);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F11BB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F11BBD);
	create_insn	(x=0X43F11BC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F11BC5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F11BD8);
	op_hex		(x,	1);
	create_insn	(x=0X43F11BDD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11BE1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F11BF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F11BF9);
	create_insn	(x=0X43F11C1D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11C22);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11C37);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11C3D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11C72);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11C9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11CB1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11CC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11CCD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11CDD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11CE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11CF3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11D02);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11D1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11D26);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11D2D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11D3E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11D4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11D60);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11D69);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11D75);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11D79);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11D81);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11D86);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11D94);
	op_hex		(x,	1);
	create_insn	(x=0X43F11DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11DB1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11DCD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11DDC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11DE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11DF1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11DF7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11E08);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11E0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11E1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11E2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11E43);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11E49);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11E61);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11E67);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11E7D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11E8B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11E95);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11E9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11EA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11EAD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11EB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11EB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11EC5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11EFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11F0E);
	op_stkvar	(x,	1);
	create_insn	(0X43F11F31);
	create_insn	(x=0X43F11F32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F11F4E);
	op_hex		(x,	1);
	create_insn	(x=0X43F11F5C);
	op_hex		(x,	1);
	create_insn	(x=0X43F11F6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11F77);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11F7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11F8D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11F91);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11F9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11FA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11FC7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11FCE);
	op_hex		(x,	1);
	create_insn	(x=0X43F11FD1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11FD9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11FE1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F11FF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F11FFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12003);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1200C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12010);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12026);
	op_hex		(x,	1);
	create_insn	(x=0X43F12034);
	op_hex		(x,	1);
	create_insn	(x=0X43F12046);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1204F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12054);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1205F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12063);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1206E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12076);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12081);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1208C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F120A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F120A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F120AB);
	op_hex		(x,	1);
	create_insn	(x=0X43F120AE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F120B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F120BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F120CC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F120D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F120DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F120E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F120EA);
	op_stkvar	(x,	1);
	set_cmt	(0X43F120FF,	"this",	0);
	create_insn	(x=0X43F1210D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12113);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1211B);
	op_stkvar	(x,	1);
	set_cmt	(0X43F12120,	"index",	0);
	set_cmt	(0X43F1212B,	"interface",	0);
	create_insn	(x=0X43F12131);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12137);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1213C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12142);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12147);
	op_stkvar	(x,	0);
	set_cmt	(0X43F12154,	"this",	0);
	set_cmt	(0X43F1216C,	"propHash",	0);
	set_cmt	(0X43F12171,	"classHash",	0);
	create_insn	(x=0X43F12197);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1219D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F121A3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F121B3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F121BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F121CD);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F121DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F121E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F121F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F121F7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12208);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12217);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1221D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1222C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12238);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1223E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1224F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1225E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12264);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1226F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12278);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1227E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12288);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1228E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1229F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F122A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F122AF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F122B5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F122C5);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F122DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F122E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12308);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1230E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12314);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1231A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12324);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1232A,	"interface",	0);
	set_cmt	(0X43F12337,	"index",	0);
	create_insn	(x=0X43F1235A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12364);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1236A);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1237F,	"cmd",	0);
	create_insn	(x=0X43F1237F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F1238F,	"index",	0);
	set_cmt	(0X43F12394,	"interface",	0);
	set_cmt	(0X43F123A6,	"this",	0);
	set_cmt	(0X43F123B2,	"player",	0);
	create_insn	(x=0X43F123C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F123C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F123D3);
	op_stkvar	(x,	1);
	set_cmt	(0X43F123D9,	"a2",	0);
	create_insn	(x=0X43F123D9);
	op_stkvar	(x,	1);
	set_cmt	(0X43F123E4,	"a1",	0);
	create_insn	(x=0X43F123E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F123EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F123F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F123FA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1240C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12414);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1241A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12420);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1242F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12435);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1243B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12447);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1244D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12453);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12459);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12467);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12470);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1247E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12484);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1249D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F124A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F124B2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F124B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F124D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F124DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F124E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F124EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F124FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12504);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1250A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12523);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1252F,	"index",	0);
	set_cmt	(0X43F12534,	"interface",	0);
	set_cmt	(0X43F12541,	"this",	0);
	set_cmt	(0X43F1254D,	"player",	0);
	create_insn	(x=0X43F1255C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12564);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12568);
	op_stkvar	(x,	0);
	set_cmt	(0X43F12575,	"propHash",	0);
	set_cmt	(0X43F1257A,	"classHash",	0);
	create_insn	(x=0X43F12590);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12594);
	op_stkvar	(x,	1);
	set_cmt	(0X43F1259A,	"index",	0);
	set_cmt	(0X43F125A5,	"interface",	0);
	create_insn	(x=0X43F125B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F125BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F125C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F125CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F125D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F125D7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F125E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F125E6);
	op_stkvar	(x,	0);
	set_cmt	(0X43F125F3,	"this",	0);
	set_cmt	(0X43F125FF,	"player",	0);
	create_insn	(x=0X43F1260E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12616);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1261A);
	op_stkvar	(x,	0);
	set_cmt	(0X43F12627,	"propHash",	0);
	set_cmt	(0X43F1262C,	"classHash",	0);
	create_insn	(x=0X43F12642);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1264C,	"index",	0);
	set_cmt	(0X43F12651,	"interface",	0);
	set_cmt	(0X43F12660,	"this",	0);
	create_insn	(x=0X43F1266C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1267A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1267F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12684);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12689);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1268D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12693);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1269D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F126AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F126B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F126BC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F126C3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F126CA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F126D7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F126E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F126EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F126F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12701);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1270F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1271A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12720);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12731);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1274A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12756);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1275C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12765);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12769);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12786);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12795);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1279B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F127A4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F127AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F127B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F127B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F127BD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F127C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F127CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F127E7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F127F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F127FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12805);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1281A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12820);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12826);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12838);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12847);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12855);
	op_stkvar	(x,	1);
	set_cmt	(0X43F12861,	"jumptable 43F116B4 default case, cases 5,6,12,15,18,20-22,31,37,41-59,62,65-84",	1);
	set_name	(0X43F12861,	"def_43F116B4");
	make_array	(0X43F12869,	0X3);
	set_cmt	(0X43F1286C,	"jump table for switch statement",	0);
	create_dword	(x=0X43F1286C);
	make_array	(x,	0X3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F1286C,	"jpt_43F116B4");
	set_cmt	(0X43F12878,	"indirect table for switch statement",	0);
	create_byte	(0X43F12878);
	make_array	(0X43F12878,	0X54);
	make_array	(0X43F128CC,	0X4);
	create_insn	(0X43F128D0);
	create_insn	(0X43F128EE);
	make_array	(0X43F128F1,	0XF);
	create_insn	(0X43F12900);
	create_insn	(x=0X43F12903);
	op_hex		(x,	1);
	set_cmt	(0X43F12A4F,	"propHash",	0);
	set_cmt	(0X43F12A54,	"classHash",	0);
	set_cmt	(0X43F12A88,	"propHash",	0);
	set_cmt	(0X43F12A8D,	"classHash",	0);
	set_cmt	(0X43F12AAA,	"propHash",	0);
	set_cmt	(0X43F12AAF,	"classHash",	0);
	set_cmt	(0X43F12ACE,	"propHash",	0);
	set_cmt	(0X43F12AD3,	"classHash",	0);
	set_cmt	(0X43F12B2F,	"propHash",	0);
	set_cmt	(0X43F12B34,	"classHash",	0);
	set_cmt	(0X43F12B49,	"num",	0);
	set_cmt	(0X43F12B4B,	"value",	0);
	set_cmt	(0X43F12B80,	"pointer",	0);
	create_insn	(x=0X43F12B86);
	op_hex		(x,	1);
	set_cmt	(0X43F12BA1,	"num",	0);
	set_cmt	(0X43F12BB4,	"value",	0);
	set_cmt	(0X43F12BB6,	"pointer",	0);
	create_insn	(x=0X43F12D1F);
	op_hex		(x,	1);
	set_cmt	(0X43F12E8C,	"propHash",	0);
	set_cmt	(0X43F12E91,	"classHash",	0);
	make_array	(0X43F12EBD,	0X3);
	create_insn	(0X43F12EC0);
	create_insn	(x=0X43F12EC8);
	op_hex		(x,	1);
	create_insn	(x=0X43F12ECC);
	op_hex		(x,	1);
	create_insn	(0X43F12EE0);
	create_insn	(0X43F12EF4);
	make_array	(0X43F12EF6,	0XA);
	create_insn	(0X43F12F00);
	set_name	(0X43F12F00,	"OneTap::Features::Visuals::GetSkyNameById");
	create_insn	(x=0X43F12F03);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12F06);
	op_hex		(x,	1);
	set_cmt	(0X43F12F0A,	"switch 13 cases ",	0);
	set_cmt	(0X43F12F13,	"switch jump",	0);
	create_insn	(x=0X43F12F13);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F12F1A,	"jumptable 43F12F13 case 1",	1);
	create_insn	(0X43F12F1A);
	create_insn	(x=0X43F12F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12F27);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12F2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12F32);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12F39);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12F40);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12F47);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12F52);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12F56);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12F59);
	op_hex		(x,	1);
	create_insn	(x=0X43F12F5C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12F6D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12F71);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12F77);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12F81);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12F89);
	op_stkvar	(x,	1);
	set_cmt	(0X43F12F93,	"jumptable 43F12F13 case 2",	1);
	create_insn	(0X43F12F93);
	create_insn	(x=0X43F12F9D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12FA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12FA7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12FAB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12FB2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12FC7);
	op_hex		(x,	1);
	create_insn	(x=0X43F12FCA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12FCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12FDB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F12FDF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12FE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12FE5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12FEF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F12FF7);
	op_stkvar	(x,	1);
	set_cmt	(0X43F13001,	"jumptable 43F12F13 case 3",	1);
	create_insn	(0X43F13001);
	create_insn	(x=0X43F1300B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1300E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13015);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13019);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13020);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13027);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1302E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13040);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13044);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13047);
	op_hex		(x,	1);
	create_insn	(x=0X43F1304A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1304E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1305B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1305F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13062);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13065);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1306F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13077);
	op_stkvar	(x,	1);
	set_cmt	(0X43F13081,	"jumptable 43F12F13 case 4",	1);
	create_insn	(0X43F13081);
	create_insn	(x=0X43F13084);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13087);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1308E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13095);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1309B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F130A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F130A9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F130B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F130B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F130BB);
	op_hex		(x,	1);
	create_insn	(x=0X43F130BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F130C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F130CF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F130D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F130D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F130D9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F130E3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F130EB);
	op_stkvar	(x,	1);
	set_cmt	(0X43F130F5,	"jumptable 43F12F13 case 5",	1);
	create_insn	(0X43F130F5);
	create_insn	(x=0X43F130FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13102);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13108);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1310C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13110);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13117);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1311E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13130);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13134);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13137);
	op_hex		(x,	1);
	create_insn	(x=0X43F1313A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1313E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1314B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1314F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13152);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13155);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1315F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13167);
	op_stkvar	(x,	1);
	set_cmt	(0X43F13171,	"jumptable 43F12F13 case 6",	1);
	create_insn	(0X43F13171);
	create_insn	(x=0X43F13174);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13177);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1317E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13185);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1318C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13193);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F131A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F131A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F131A7);
	op_hex		(x,	1);
	create_insn	(x=0X43F131AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F131AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F131BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F131BF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F131C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F131C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F131CF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F131D7);
	op_stkvar	(x,	1);
	set_cmt	(0X43F131E1,	"jumptable 43F12F13 case 7",	1);
	create_insn	(0X43F131E1);
	create_insn	(x=0X43F131EB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F131EE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F131F4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F131F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F131FF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13206);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13211);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13215);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13218);
	op_hex		(x,	1);
	create_insn	(x=0X43F1321B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1321F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1322C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13230);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13233);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13236);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13240);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13248);
	op_stkvar	(x,	1);
	set_cmt	(0X43F13252,	"jumptable 43F12F13 case 8",	1);
	create_insn	(0X43F13252);
	create_insn	(x=0X43F1325C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1325F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13263);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13267);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1326E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13275);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13280);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13284);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13287);
	op_hex		(x,	1);
	create_insn	(x=0X43F1328A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1328E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1329B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1329F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F132A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F132A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F132AF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F132B7);
	op_stkvar	(x,	1);
	set_cmt	(0X43F132C1,	"jumptable 43F12F13 case 9",	1);
	create_insn	(0X43F132C1);
	create_insn	(x=0X43F132CB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F132CE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F132D4);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F132D8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F132DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F132E6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F132F1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F132F5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F132F8);
	op_hex		(x,	1);
	create_insn	(x=0X43F132FB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F132FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1330C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13310);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13313);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13316);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13320);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13328);
	op_stkvar	(x,	1);
	set_cmt	(0X43F13332,	"jumptable 43F12F13 case 10",	1);
	create_insn	(0X43F13332);
	create_insn	(x=0X43F13335);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13338);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1333F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13346);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1334A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13351);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13358);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13363);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13367);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1336A);
	op_hex		(x,	1);
	create_insn	(x=0X43F1336D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13371);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1337E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F13382);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13385);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13388);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13392);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1339A);
	op_stkvar	(x,	1);
	set_cmt	(0X43F133A4,	"jumptable 43F12F13 case 11",	1);
	create_insn	(0X43F133A4);
	create_insn	(x=0X43F133A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F133AA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F133B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F133B7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F133BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F133C2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F133C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F133D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F133D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F133DB);
	op_hex		(x,	1);
	create_insn	(x=0X43F133DE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F133E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F133EF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F133F3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F133F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F133F9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13403);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1340B);
	op_stkvar	(x,	1);
	set_cmt	(0X43F13415,	"jumptable 43F12F13 case 12",	1);
	create_insn	(x=0X43F13415);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F13418);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F13422);
	op_stkvar	(x,	1);
	set_cmt	(0X43F1342C,	"jumptable 43F12F13 default case, case 0",	1);
	create_insn	(x=0X43F1342C);
	op_stkvar	(x,	1);
	set_name	(0X43F1342C,	"def_43F12F13");
	create_insn	(x=0X43F1342F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F13439);
	op_stkvar	(x,	1);
	set_cmt	(0X43F13444,	"jump table for switch statement",	0);
	create_dword	(x=0X43F13444);
	make_array	(x,	0XD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F13444,	"jpt_43F12F13");
	make_array	(0X43F13478,	0X8);
	create_insn	(0X43F13480);
	set_name	(0X43F13480,	"OneTap::Features::Visuals::SetSkyName");
	create_insn	(x=0X43F13483);
	op_hex		(x,	1);
	create_insn	(x=0X43F13486);
	op_hex		(x,	1);
	create_insn	(x=0X43F13489);
	op_hex		(x,	1);
	create_insn	(x=0X43F13490);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1349B);
	op_hex		(x,	1);
	create_insn	(x=0X43F134A0);
	op_hex		(x,	1);
	create_insn	(x=0X43F134AE);
	op_hex		(x,	1);
	create_insn	(x=0X43F13550);
	op_hex		(x,	1);
	create_insn	(x=0X43F13554);
	op_hex		(x,	1);
	set_cmt	(0X43F1356C,	"index",	0);
	set_cmt	(0X43F13571,	"interface",	0);
	set_cmt	(0X43F1357E,	"this",	0);
	set_cmt	(0X43F13592,	"interface",	0);
	set_cmt	(0X43F13598,	"index",	0);
	set_cmt	(0X43F135BB,	"index",	0);
	set_cmt	(0X43F135C0,	"interface",	0);
	set_cmt	(0X43F135CD,	"this",	0);
	create_insn	(0X43F135E8);
	create_insn	(0X43F135F0);
	set_cmt	(0X43F13609,	"a3",	0);
	set_cmt	(0X43F1360A,	"a2",	0);
	create_insn	(x=0X43F1360B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F1361B,	"index",	0);
	set_cmt	(0X43F13620,	"interface",	0);
	set_cmt	(0X43F1362D,	"this",	0);
	create_insn	(x=0X43F1365C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F1367D);
	set_cmt	(0X43F1368A,	"skyboxId",	0);
	set_cmt	(0X43F1368B,	"a2",	0);
	set_cmt	(0X43F1368C,	"this",	0);
	create_insn	(x=0X43F1368C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F136B9);
	make_array	(0X43F136DD,	0X3);
	create_insn	(0X43F136E0);
	create_insn	(x=0X43F136E3);
	op_hex		(x,	1);
	create_insn	(x=0X43F136E6);
	op_hex		(x,	1);
	set_cmt	(0X43F136ED,	"arg",	0);
	create_insn	(x=0X43F136F3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F136FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F13726,	"index",	0);
	set_cmt	(0X43F1372B,	"interface",	0);
	set_cmt	(0X43F13738,	"this",	0);
	set_cmt	(0X43F13744,	"player",	0);
	set_cmt	(0X43F13774,	"propHash",	0);
	set_cmt	(0X43F13779,	"classHash",	0);
	set_cmt	(0X43F137A2,	"a2",	0);
	set_cmt	(0X43F137EC,	"a1",	0);
	set_cmt	(0X43F139B8,	"index",	0);
	set_cmt	(0X43F139BD,	"interface",	0);
	set_cmt	(0X43F139CA,	"this",	0);
	set_cmt	(0X43F139D6,	"player",	0);
	create_insn	(0X43F13C2D);
	create_insn	(0X43F13CBD);
	create_insn	(0X43F13CC8);
	make_array	(0X43F13CD8,	0X8);
	create_insn	(0X43F13CE0);
	set_cmt	(0X43F13D0C,	"propHash",	0);
	set_cmt	(0X43F13D11,	"classHash",	0);
	set_cmt	(0X43F13D44,	"propHash",	0);
	set_cmt	(0X43F13D49,	"classHash",	0);
	set_cmt	(0X43F13D6E,	"propHash",	0);
	set_cmt	(0X43F13D73,	"classHash",	0);
	create_insn	(0X43F13D9C);
	create_insn	(0X43F13DDC);
	make_array	(0X43F13E68,	0X8);
	create_insn	(0X43F13E70);
	create_insn	(x=0X43F13E73);
	op_hex		(x,	1);
	create_insn	(x=0X43F13E76);
	op_hex		(x,	1);
	set_cmt	(0X43F13E7D,	"arg",	0);
	create_insn	(x=0X43F13E83);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F13E8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F13EB6,	"index",	0);
	set_cmt	(0X43F13EBB,	"interface",	0);
	set_cmt	(0X43F13EC8,	"this",	0);
	set_cmt	(0X43F13ED4,	"player",	0);
	set_cmt	(0X43F13F04,	"propHash",	0);
	set_cmt	(0X43F13F09,	"classHash",	0);
	set_cmt	(0X43F13F38,	"index",	0);
	set_cmt	(0X43F13F3D,	"interface",	0);
	set_cmt	(0X43F13F4A,	"this",	0);
	set_cmt	(0X43F13F97,	"propHash",	0);
	set_cmt	(0X43F13F9C,	"classHash",	0);
	set_cmt	(0X43F13FBE,	"propHash",	0);
	set_cmt	(0X43F13FC3,	"classHash",	0);
	create_insn	(0X43F13FE8);
	set_cmt	(0X43F13FEC,	"propHash",	0);
	set_cmt	(0X43F13FF1,	"classHash",	0);
	set_cmt	(0X43F14017,	"propHash",	0);
	set_cmt	(0X43F1401C,	"classHash",	0);
	set_cmt	(0X43F14044,	"a2",	0);
	set_cmt	(0X43F14048,	"a1",	0);
	set_cmt	(0X43F1448F,	"index",	0);
	set_cmt	(0X43F144A0,	"interface",	0);
	set_cmt	(0X43F144F7,	"this",	0);
	create_insn	(x=0X43F14532);
	op_hex		(x,	1);
	create_insn	(0X43F14541);
	create_insn	(x=0X43F14588);
	op_hex		(x,	1);
	create_insn	(x=0X43F145A1);
	op_hex		(x,	1);
	create_insn	(x=0X43F145A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F14634);
	create_insn	(x=0X43F1463C);
	op_hex		(x,	1);
	create_insn	(x=0X43F14654);
	op_hex		(x,	1);
	create_insn	(0X43F14670);
	create_insn	(x=0X43F14681);
	op_hex		(x,	1);
	create_insn	(x=0X43F146BD);
	op_hex		(x,	1);
	create_insn	(0X43F146CB);
	create_insn	(0X43F146D6);
	make_array	(0X43F146E6,	0XA);
	create_insn	(0X43F146F0);
	create_insn	(x=0X43F146F3);
	op_hex		(x,	1);
	set_cmt	(0X43F146F6,	"interface",	0);
	create_insn	(x=0X43F146FC);
	op_hex		(x,	1);
	set_cmt	(0X43F14702,	"index",	0);
	set_cmt	(0X43F1470E,	"arg",	0);
	set_cmt	(0X43F14716,	"this",	0);
	set_cmt	(0X43F14722,	"player",	0);
	set_cmt	(0X43F14752,	"propHash",	0);
	set_cmt	(0X43F14757,	"classHash",	0);
	set_cmt	(0X43F14785,	"index",	0);
	set_cmt	(0X43F1478A,	"interface",	0);
	set_cmt	(0X43F14797,	"this",	0);
	set_cmt	(0X43F147DB,	"propHash",	0);
	set_cmt	(0X43F147E0,	"classHash",	0);
	set_cmt	(0X43F14802,	"propHash",	0);
	set_cmt	(0X43F14807,	"classHash",	0);
	create_insn	(0X43F14832);
	set_cmt	(0X43F14836,	"propHash",	0);
	set_cmt	(0X43F1483B,	"classHash",	0);
	set_cmt	(0X43F14861,	"propHash",	0);
	set_cmt	(0X43F14866,	"classHash",	0);
	create_insn	(0X43F1488D);
	set_cmt	(0X43F14B1A,	"index",	0);
	set_cmt	(0X43F14B1F,	"interface",	0);
	set_cmt	(0X43F14B2C,	"this",	0);
	set_cmt	(0X43F14B38,	"player",	0);
	create_insn	(0X43F14DB7);
	create_insn	(0X43F14E27);
	create_insn	(0X43F14EB2);
	create_insn	(x=0X43F14F45);
	op_hex		(x,	1);
	create_insn	(0X43F14F65);
	create_insn	(0X43F14F70);
	make_array	(0X43F14F7B,	0X5);
	create_insn	(0X43F14F80);
	create_insn	(x=0X43F14F83);
	op_hex		(x,	1);
	create_insn	(x=0X43F14F86);
	op_hex		(x,	1);
	create_insn	(x=0X43F14F91);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F14FA1);
	op_hex		(x,	1);
	create_insn	(x=0X43F14FB4);
	op_hex		(x,	1);
	set_cmt	(0X43F14FD7,	"_DWORD",	0);
	create_insn	(x=0X43F14FE0);
	op_hex		(x,	1);
	create_insn	(x=0X43F14FE8);
	op_hex		(x,	1);
	create_insn	(x=0X43F14FF6);
	op_hex		(x,	1);
	create_insn	(x=0X43F15011);
	op_hex		(x,	1);
	create_insn	(x=0X43F15031);
	op_hex		(x,	1);
	create_insn	(0X43F15040);
	create_insn	(x=0X43F1504E);
	op_hex		(x,	1);
	create_insn	(x=0X43F1505C);
	op_hex		(x,	1);
	create_insn	(x=0X43F15077);
	op_hex		(x,	1);
	create_insn	(x=0X43F15097);
	op_hex		(x,	1);
	create_insn	(0X43F150A6);
	create_insn	(x=0X43F150B4);
	op_hex		(x,	1);
	create_insn	(x=0X43F150C2);
	op_hex		(x,	1);
	create_insn	(x=0X43F150DD);
	op_hex		(x,	1);
	create_insn	(x=0X43F150FD);
	op_hex		(x,	1);
	create_insn	(0X43F1510C);
	create_insn	(x=0X43F1511A);
	op_hex		(x,	1);
	create_insn	(x=0X43F15128);
	op_hex		(x,	1);
	create_insn	(x=0X43F15143);
	op_hex		(x,	1);
	create_insn	(x=0X43F15163);
	op_hex		(x,	1);
	create_insn	(0X43F15172);
	make_array	(0X43F15226,	0XA);
	create_insn	(0X43F15230);
	set_cmt	(0X43F15257,	"interface",	0);
	set_cmt	(0X43F1525D,	"index",	0);
	set_cmt	(0X43F15270,	"this",	0);
	create_insn	(0X43F15295);
	set_cmt	(0X43F1529F,	"_DWORD",	0);
	set_cmt	(0X43F152A1,	"_DWORD",	0);
	set_cmt	(0X43F152A8,	"_DWORD",	0);
	set_cmt	(0X43F152AB,	"_DWORD",	0);
	set_cmt	(0X43F152AE,	"_DWORD",	0);
	set_cmt	(0X43F152C0,	"propHash",	0);
	set_cmt	(0X43F152C5,	"classHash",	0);
	create_insn	(x=0X43F152D4);
	op_hex		(x,	1);
	set_cmt	(0X43F152DE,	"propHash",	0);
	set_cmt	(0X43F152E3,	"classHash",	0);
	create_insn	(x=0X43F152F2);
	op_hex		(x,	1);
	set_cmt	(0X43F152FC,	"_DWORD",	0);
	create_insn	(0X43F152FC);
	set_cmt	(0X43F15305,	"_DWORD",	0);
	set_cmt	(0X43F1530A,	"_DWORD",	0);
	set_cmt	(0X43F1530D,	"_DWORD",	0);
	set_cmt	(0X43F15310,	"_DWORD",	0);
	create_insn	(0X43F15320);
	set_name	(0X43F15320,	"C_SDK::Security::FNV1A::SearchSignature::VGuiMatSurface");
	create_insn	(x=0X43F15323);
	op_hex		(x,	1);
	create_insn	(x=0X43F15329);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1535B);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15368);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1536B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15370);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1537A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1538B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15393);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F153AA);
	op_stkvar	(x,	0);
	create_insn	(0X43F153B9);
	create_insn	(x=0X43F153BB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F153C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F153C7);
	op_hex		(x,	1);
	create_insn	(x=0X43F153CA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F153D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F153DC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F153E1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F153E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F153E9);
	op_stkvar	(x,	1);
	set_cmt	(0X43F153EC,	"hash",	0);
	create_insn	(x=0X43F1540F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15414);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15430);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1543B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43F1544B);
	create_insn	(x=0X43F1544D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15456);
	op_stkvar	(x,	0);
	create_insn	(0X43F15466);
	create_insn	(x=0X43F1546D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1547C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15491);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15494);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F154A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F154B7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F154BB);
	op_stkvar	(x,	0);
	create_insn	(0X43F154C1);
	create_insn	(x=0X43F154C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F154CD);
	op_stkvar	(x,	0);
	create_insn	(0X43F154D3);
	create_insn	(x=0X43F154DB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F154DF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F154E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F154E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15501);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15510);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1552E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15531);
	op_stkvar	(x,	1);
	make_array	(0X43F1553C,	0X4);
	create_insn	(0X43F15540);
	create_insn	(x=0X43F1554E);
	op_hex		(x,	1);
	create_insn	(x=0X43F15558);
	op_hex		(x,	1);
	create_insn	(0X43F15574);
	make_array	(0X43F155F2,	0XE);
	create_insn	(0X43F15600);
	set_name	(0X43F15600,	"C_SDK::Surface::DrawManager::RenderText");
	create_insn	(x=0X43F15603);
	op_hex		(x,	1);
	create_insn	(x=0X43F15606);
	op_hex		(x,	1);
	create_insn	(x=0X43F15628);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1562C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15634);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1563C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15644);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1564B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15653);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1565B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15670);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15674);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15678);
	op_hex		(x,	1);
	create_insn	(x=0X43F1567B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15680);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1568E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15693);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1569D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F156A1);
	op_stkvar	(x,	1);
	set_cmt	(0X43F156A6,	"_DWORD",	0);
	set_cmt	(0X43F156A7,	"_DWORD",	0);
	set_cmt	(0X43F156A9,	"_DWORD",	0);
	set_cmt	(0X43F156AE,	"_DWORD",	0);
	create_insn	(x=0X43F156AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F156B3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F156C7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F156D1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F156DD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F156E1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F156E9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F156F1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F156F8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15700);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15708);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15714);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15718);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1571C);
	op_hex		(x,	1);
	create_insn	(x=0X43F1571F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15724);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15732);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15737);
	op_stkvar	(x,	1);
	set_cmt	(0X43F1573B,	"_DWORD",	0);
	set_cmt	(0X43F1573C,	"_DWORD",	0);
	set_cmt	(0X43F1573E,	"_DWORD",	0);
	create_insn	(x=0X43F15743);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15747);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1574F);
	op_stkvar	(x,	1);
	set_cmt	(0X43F15754,	"_DWORD",	0);
	create_insn	(x=0X43F15754);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F15765);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1576F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1585C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15860);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1586A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15871);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15876);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15884);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1588C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F158A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F158A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F158A8);
	op_hex		(x,	1);
	create_insn	(x=0X43F158AB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F158B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F158BE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F158C3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F158C9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F158E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15900);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15904);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1590E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15916);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1591E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1592C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15940);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15944);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15948);
	op_hex		(x,	1);
	create_insn	(x=0X43F1594B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15950);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1595E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15963);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15969);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15988);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F159AD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F159B1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F159B6);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F159BB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F159C9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F159D1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F159E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F159E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F159E8);
	op_hex		(x,	1);
	create_insn	(x=0X43F159EB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F159F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F159FE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15A03);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15A09);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15A48);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15A52);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15A59);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15A61);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15A6F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15A88);
	op_hex		(x,	1);
	create_insn	(x=0X43F15A8B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15A9E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15AA3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15AA9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15AE8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15AF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15AFA);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15B02);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15B10);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15B18);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15B2C);
	op_hex		(x,	1);
	create_insn	(x=0X43F15B2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15B42);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15B47);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15B4D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15B8C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15B96);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15B9D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15BA2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15BB0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15BB8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15BCC);
	op_hex		(x,	1);
	create_insn	(x=0X43F15BCF);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15BE2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15BE7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15BED);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15C09);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15C25);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15C29);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15C33);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15C3B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15C43);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15C50);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15C55);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15C5D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15C65);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15C71);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15C75);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15C79);
	op_hex		(x,	1);
	create_insn	(x=0X43F15C7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15C81);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15C8F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15C9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15CB9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15CD5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15CD9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15CE3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15CEB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15CF2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15D00);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15D08);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15D1C);
	op_hex		(x,	1);
	create_insn	(x=0X43F15D1F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15D32);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15D37);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15D3D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15D7C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15D86);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15D8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15D95);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15DA3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15DAB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15DC8);
	op_hex		(x,	1);
	create_insn	(x=0X43F15DCB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15DDE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15DE3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15DE9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15E28);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15E32);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15E3A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15E42);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15E4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15E54);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15E5C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15E64);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15E74);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15E78);
	op_hex		(x,	1);
	create_insn	(x=0X43F15E7B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15E8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15E93);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15E99);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15ED8);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15EE2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15EE9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15EEE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15EFC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15F04);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15F18);
	op_hex		(x,	1);
	create_insn	(x=0X43F15F1B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15F2E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15F33);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15F39);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15F55);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15F71);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15F75);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15F7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15F86);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15F8E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15F9C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15FB8);
	op_hex		(x,	1);
	create_insn	(x=0X43F15FBB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15FCE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F15FD3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15FD9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F15FF5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F16002);
	op_stkvar	(x,	1);
	set_cmt	(0X43F16005,	"switch 12 cases ",	0);
	set_cmt	(0X43F1600E,	"switch jump",	0);
	create_insn	(x=0X43F1600E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F16015,	"jumptable 43F1600E case 0",	1);
	create_insn	(0X43F16015);
	set_cmt	(0X43F16020,	"jumptable 43F1600E case 2",	1);
	create_insn	(0X43F16020);
	set_cmt	(0X43F1602C,	"jumptable 43F1600E case 3",	1);
	create_insn	(0X43F1602C);
	set_cmt	(0X43F16038,	"jumptable 43F1600E case 4",	1);
	create_insn	(0X43F16038);
	set_cmt	(0X43F16044,	"jumptable 43F1600E case 5",	1);
	create_insn	(0X43F16044);
	set_cmt	(0X43F16050,	"jumptable 43F1600E case 7",	1);
	create_insn	(0X43F16050);
	set_cmt	(0X43F1605C,	"jumptable 43F1600E case 8",	1);
	create_insn	(0X43F1605C);
	set_cmt	(0X43F16068,	"jumptable 43F1600E case 9",	1);
	create_insn	(0X43F16068);
	set_cmt	(0X43F16074,	"jumptable 43F1600E case 10",	1);
	create_insn	(0X43F16074);
	set_cmt	(0X43F16080,	"jumptable 43F1600E case 6",	1);
	create_insn	(0X43F16080);
	set_cmt	(0X43F1608C,	"jumptable 43F1600E case 11",	1);
	create_insn	(0X43F1608C);
	set_cmt	(0X43F16098,	"jumptable 43F1600E default case, case 1",	1);
	create_insn	(0X43F16098);
	set_name	(0X43F16098,	"def_43F1600E");
	set_cmt	(0X43F160A4,	"jump table for switch statement",	0);
	create_dword	(x=0X43F160A4);
	make_array	(x,	0XC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F160A4,	"jpt_43F1600E");
	make_array	(0X43F160D4,	0XC);
	create_insn	(0X43F160E0);
	set_name	(0X43F160E0,	"C_SDK::Surface::DrawManager::StartDrawing");
	create_insn	(x=0X43F160E3);
	op_hex		(x,	1);
	create_insn	(x=0X43F160EB);
	op_hex		(x,	1);
	create_insn	(x=0X43F160EE);
	op_hex		(x,	1);
	create_insn	(x=0X43F160FD);
	op_hex		(x,	1);
	create_insn	(x=0X43F16103);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1610C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16114);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1611C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16121);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16129);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16131);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16138);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1613D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16145);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1614D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16160);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F16164);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F16168);
	op_hex		(x,	1);
	create_insn	(x=0X43F1616B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16170);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16175);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F16188);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1618C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16191);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F16199);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1619D);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F161A1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F161A7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F161B0);
	op_hex		(x,	1);
	create_insn	(x=0X43F161B8);
	op_stkvar	(x,	1);
	set_cmt	(0X43F161C1,	"_DWORD",	0);
	make_array	(0X43F161D1,	0XF);
	create_insn	(0X43F161E0);
	set_name	(0X43F161E0,	"C_SDK::Surface::DrawManager::FinishDrawing");
	create_insn	(x=0X43F161E3);
	op_hex		(x,	1);
	create_insn	(x=0X43F161EB);
	op_hex		(x,	1);
	create_insn	(x=0X43F161EE);
	op_hex		(x,	1);
	create_insn	(x=0X43F161FD);
	op_hex		(x,	1);
	create_insn	(x=0X43F16203);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1620C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16214);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1621C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16221);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16229);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16230);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16235);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1623D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16245);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16251);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F16255);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F16259);
	op_hex		(x,	1);
	create_insn	(x=0X43F1625C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16261);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16266);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F16279);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1627D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16282);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1628A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1628E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F16293);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F16299);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F162A2);
	op_hex		(x,	1);
	create_insn	(x=0X43F162AA);
	op_stkvar	(x,	1);
	set_cmt	(0X43F162B3,	"_DWORD",	0);
	make_array	(0X43F162C3,	0XD);
	create_insn	(0X43F162D0);
	create_insn	(x=0X43F162D3);
	op_hex		(x,	1);
	create_insn	(x=0X43F162D6);
	op_hex		(x,	1);
	make_array	(0X43F167BE,	0X2);
	create_insn	(0X43F167C0);
	create_insn	(x=0X43F167C3);
	op_hex		(x,	1);
	make_array	(0X43F16821,	0XF);
	create_insn	(0X43F16830);
	create_insn	(x=0X43F16833);
	op_hex		(x,	1);
	make_array	(0X43F16889,	0X7);
	create_insn	(0X43F16890);
	create_insn	(x=0X43F16893);
	op_hex		(x,	1);
	create_insn	(x=0X43F16896);
	op_hex		(x,	1);
	create_insn	(x=0X43F168C4);
	op_hex		(x,	1);
	create_insn	(x=0X43F16904);
	op_hex		(x,	1);
	create_insn	(0X43F16919);
	create_insn	(x=0X43F16970);
	op_hex		(x,	1);
	make_array	(0X43F16983,	0XD);
	create_insn	(0X43F16990);
	set_name	(0X43F16990,	"OneTap::GUI::Render::Icon");
	create_insn	(x=0X43F16993);
	op_hex		(x,	1);
	create_insn	(x=0X43F16996);
	op_hex		(x,	1);
	create_insn	(x=0X43F1699C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F169A2);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F169A5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F169B6);
	op_hex		(x,	1);
	create_insn	(x=0X43F169C0);
	op_hex		(x,	1);
	create_insn	(x=0X43F169C3);
	op_stkvar	(x,	1);
	set_cmt	(0X43F169CA,	"num",	0);
	set_cmt	(0X43F169CF,	"value",	0);
	set_cmt	(0X43F169D1,	"pointer",	0);
	create_insn	(x=0X43F169D7);
	op_hex		(x,	1);
	create_insn	(x=0X43F169DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F169E9);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F169FF);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F16A04);
	op_stkvar	(x,	1);
	set_cmt	(0X43F16A0B,	"msg",	0);
	set_cmt	(0X43F16A0C,	"a6",	0);
	create_insn	(x=0X43F16A0C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16A0F);
	op_hex		(x,	1);
	set_cmt	(0X43F16A12,	"a5",	0);
	create_insn	(x=0X43F16A12);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16A18);
	op_stkvar	(x,	1);
	set_cmt	(0X43F16A1D,	"a4",	0);
	create_insn	(x=0X43F16A1D);
	op_stkvar	(x,	0);
	set_cmt	(0X43F16A22,	"a3",	0);
	create_insn	(x=0X43F16A22);
	op_stkvar	(x,	0);
	set_cmt	(0X43F16A25,	"a2",	0);
	create_insn	(x=0X43F16A25);
	op_stkvar	(x,	0);
	set_cmt	(0X43F16A28,	"a1",	0);
	create_insn	(x=0X43F16A28);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16A30);
	op_hex		(x,	1);
	make_array	(0X43F16A37,	0X9);
	create_insn	(0X43F16A40);
	set_name	(0X43F16A40,	"C_SDK::Surface::DrawManager::DrawLine");
	create_insn	(x=0X43F16A43);
	op_hex		(x,	1);
	create_insn	(x=0X43F16A4C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16A4F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16A54);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F16A5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F16A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F16A72);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F16A78);
	op_stkvar	(x,	1);
	make_array	(0X43F16A87,	0X9);
	create_insn	(0X43F16A90);
	create_insn	(x=0X43F16A93);
	op_hex		(x,	1);
	create_insn	(x=0X43F16A96);
	op_hex		(x,	1);
	set_cmt	(0X43F16AB0,	"unsigned int",	0);
	create_insn	(x=0X43F16AB8);
	op_hex		(x,	1);
	create_insn	(0X43F16AE8);
	create_insn	(x=0X43F16B1A);
	op_hex		(x,	1);
	create_insn	(x=0X43F16B29);
	op_hex		(x,	1);
	create_insn	(x=0X43F16CFF);
	op_hex		(x,	1);
	make_array	(0X43F16D0A,	0X6);
	create_insn	(0X43F16D10);
	create_insn	(x=0X43F16D13);
	op_hex		(x,	1);
	create_insn	(x=0X43F16D16);
	op_hex		(x,	1);
	set_cmt	(0X43F16D19,	"a1",	0);
	set_cmt	(0X43F16D44,	"unsigned int",	0);
	create_insn	(x=0X43F16D4C);
	op_hex		(x,	1);
	create_insn	(0X43F16D71);
	create_insn	(x=0X43F16DEA);
	op_hex		(x,	1);
	create_insn	(x=0X43F16E47);
	op_hex		(x,	1);
	make_array	(0X43F16E53,	0XD);
	create_insn	(0X43F16E60);
	create_insn	(x=0X43F16E63);
	op_hex		(x,	1);
	create_insn	(x=0X43F16E66);
	op_hex		(x,	1);
	make_array	(0X43F16F81,	0XF);
	create_insn	(0X43F16F90);
	create_insn	(x=0X43F16F93);
	op_hex		(x,	1);
	make_array	(0X43F17006,	0XA);
	create_insn	(0X43F17010);
	create_insn	(x=0X43F17013);
	op_hex		(x,	1);
	make_array	(0X43F170B0,	0X10);
	create_insn	(0X43F170C0);
	create_insn	(x=0X43F170C3);
	op_hex		(x,	1);
	create_insn	(x=0X43F170C6);
	op_hex		(x,	1);
	set_cmt	(0X43F170CC,	"interface",	0);
	set_cmt	(0X43F170D2,	"index",	0);
	set_cmt	(0X43F170DE,	"arg",	0);
	set_cmt	(0X43F170E6,	"this",	0);
	set_cmt	(0X43F1712A,	"propHash",	0);
	set_cmt	(0X43F1712F,	"classHash",	0);
	set_cmt	(0X43F17151,	"propHash",	0);
	set_cmt	(0X43F17156,	"classHash",	0);
	create_insn	(0X43F17181);
	set_cmt	(0X43F17185,	"propHash",	0);
	set_cmt	(0X43F1718A,	"classHash",	0);
	set_cmt	(0X43F171B0,	"propHash",	0);
	set_cmt	(0X43F171B5,	"classHash",	0);
	create_insn	(0X43F171DC);
	set_cmt	(0X43F17209,	"arg",	0);
	set_cmt	(0X43F1738F,	"index",	0);
	set_cmt	(0X43F173AA,	"interface",	0);
	set_cmt	(0X43F1742E,	"this",	0);
	set_cmt	(0X43F17458,	"index",	0);
	set_cmt	(0X43F1745D,	"interface",	0);
	set_cmt	(0X43F1746A,	"this",	0);
	set_cmt	(0X43F17498,	"propHash",	0);
	set_cmt	(0X43F1749D,	"classHash",	0);
	create_insn	(0X43F174C8);
	create_insn	(0X43F174E3);
	create_insn	(x=0X43F17504);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1750B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1754B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F17552);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F17581,	"interface",	0);
	set_cmt	(0X43F17587,	"index",	0);
	set_cmt	(0X43F175DF,	"propHash",	0);
	set_cmt	(0X43F175E4,	"classHash",	0);
	create_insn	(0X43F17604);
	create_insn	(0X43F1761F);
	create_insn	(x=0X43F17640);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F17647);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F17687);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1768E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F176BD,	"interface",	0);
	set_cmt	(0X43F176C3,	"index",	0);
	create_insn	(0X43F17708);
	set_cmt	(0X43F17794,	"index",	0);
	set_cmt	(0X43F17799,	"interface",	0);
	set_cmt	(0X43F177A6,	"this",	0);
	set_cmt	(0X43F177FA,	"index",	0);
	set_cmt	(0X43F177FF,	"interface",	0);
	set_cmt	(0X43F1780C,	"this",	0);
	set_cmt	(0X43F1787E,	"index",	0);
	set_cmt	(0X43F17883,	"interface",	0);
	set_cmt	(0X43F17890,	"this",	0);
	set_cmt	(0X43F178E0,	"index",	0);
	set_cmt	(0X43F178E5,	"interface",	0);
	set_cmt	(0X43F178F2,	"this",	0);
	create_insn	(0X43F17934);
	make_array	(0X43F1793E,	0X2);
	create_insn	(0X43F17940);
	create_insn	(x=0X43F17943);
	op_hex		(x,	1);
	create_insn	(x=0X43F17946);
	op_hex		(x,	1);
	create_insn	(x=0X43F17949);
	op_hex		(x,	1);
	create_insn	(x=0X43F17956);
	op_hex		(x,	1);
	create_insn	(x=0X43F17972);
	op_hex		(x,	1);
	create_insn	(x=0X43F17993);
	op_hex		(x,	1);
	create_insn	(0X43F179EF);
	create_insn	(0X43F17A49);
	create_insn	(0X43F17A72);
	create_insn	(0X43F17AA7);
	create_insn	(0X43F17AD4);
	create_insn	(x=0X43F17AF9);
	op_hex		(x,	1);
	create_insn	(0X43F17B19);
	create_insn	(0X43F17B26);
	make_array	(0X43F17B2B,	0X5);
	create_insn	(0X43F17B30);
	create_insn	(x=0X43F17B33);
	op_hex		(x,	1);
	create_insn	(x=0X43F17B36);
	op_hex		(x,	1);
	create_insn	(x=0X43F17B39);
	op_hex		(x,	1);
	create_insn	(x=0X43F17B46);
	op_hex		(x,	1);
	set_cmt	(0X43F17B4C,	"interface",	0);
	set_cmt	(0X43F17B52,	"index",	0);
	set_cmt	(0X43F17B66,	"this",	0);
	set_cmt	(0X43F17BA4,	"propHash",	0);
	set_cmt	(0X43F17BA9,	"classHash",	0);
	set_cmt	(0X43F17BCB,	"propHash",	0);
	set_cmt	(0X43F17BD0,	"classHash",	0);
	create_insn	(0X43F17BF4);
	set_cmt	(0X43F17BF8,	"propHash",	0);
	set_cmt	(0X43F17BFD,	"classHash",	0);
	set_cmt	(0X43F17C23,	"propHash",	0);
	set_cmt	(0X43F17C28,	"classHash",	0);
	create_insn	(x=0X43F17C4B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F17C59);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F17C92,	"index",	0);
	set_cmt	(0X43F17C9D,	"interface",	0);
	set_cmt	(0X43F17CAA,	"this",	0);
	set_cmt	(0X43F17CBE,	"m_player",	0);
	set_cmt	(0X43F17CE2,	"propHash",	0);
	set_cmt	(0X43F17CE7,	"classHash",	0);
	set_cmt	(0X43F17D09,	"propHash",	0);
	set_cmt	(0X43F17D0E,	"classHash",	0);
	set_cmt	(0X43F17D30,	"propHash",	0);
	set_cmt	(0X43F17D35,	"classHash",	0);
	create_insn	(x=0X43F17D64);
	op_hex		(x,	1);
	create_insn	(x=0X43F17D67);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F17D70);
	op_hex		(x,	1);
	create_insn	(x=0X43F17D73);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F17D7C);
	op_hex		(x,	1);
	create_insn	(x=0X43F17D7F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F17D91,	"num",	0);
	set_cmt	(0X43F17D96,	"value",	0);
	set_cmt	(0X43F17D98,	"pointer",	0);
	create_insn	(x=0X43F17DA1);
	op_hex		(x,	1);
	create_insn	(0X43F17DB6);
	create_insn	(x=0X43F17E33);
	op_hex		(x,	1);
	create_insn	(x=0X43F17E50);
	op_hex		(x,	1);
	set_cmt	(0X43F17F7A,	"index",	0);
	set_cmt	(0X43F17F7F,	"interface",	0);
	set_cmt	(0X43F17F8C,	"this",	0);
	create_insn	(x=0X43F17FFA);
	op_hex		(x,	1);
	create_insn	(x=0X43F18017);
	op_hex		(x,	1);
	create_insn	(x=0X43F18047);
	op_hex		(x,	1);
	set_cmt	(0X43F18135,	"index",	0);
	set_cmt	(0X43F1813A,	"interface",	0);
	set_cmt	(0X43F18147,	"this",	0);
	create_insn	(0X43F1818F);
	create_insn	(x=0X43F18210);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1821F);
	op_hex		(x,	1);
	set_cmt	(0X43F18238,	"Size",	0);
	create_insn	(x=0X43F18250);
	op_hex		(x,	1);
	create_insn	(x=0X43F18267);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1826D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F18287);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F18299);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F182C2);
	op_hex		(x,	1);
	make_array	(0X43F182DA,	0X6);
	create_insn	(0X43F182E0);
	create_insn	(x=0X43F182E5);
	op_hex		(x,	1);
	create_insn	(x=0X43F182FE);
	op_hex		(x,	1);
	set_cmt	(0X43F18317,	"Size",	0);
	create_insn	(x=0X43F1832F);
	op_hex		(x,	1);
	create_insn	(x=0X43F1834F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F18355);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F18386);
	op_hex		(x,	1);
	create_insn	(x=0X43F183B7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F1840F,	"propHash",	0);
	set_cmt	(0X43F18414,	"classHash",	0);
	create_insn	(0X43F1843A);
	create_insn	(0X43F1844C);
	create_insn	(x=0X43F18476);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1847D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F184BA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F184C1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F184F0,	"interface",	0);
	set_cmt	(0X43F184F6,	"index",	0);
	create_insn	(0X43F1853A);
	create_insn	(0X43F18556);
	create_insn	(x=0X43F185E7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F18674);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F186B1);
	op_hex		(x,	1);
	create_insn	(x=0X43F186E7);
	op_hex		(x,	1);
	create_insn	(0X43F186F5);
	make_array	(0X43F186FA,	0X6);
	create_insn	(0X43F18700);
	create_insn	(x=0X43F18703);
	op_hex		(x,	1);
	create_insn	(x=0X43F18706);
	op_hex		(x,	1);
	set_cmt	(0X43F1875E,	"interface",	0);
	set_cmt	(0X43F18764,	"index",	0);
	create_insn	(0X43F18791);
	create_insn	(x=0X43F187AB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F187B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F187BF);
	op_hex		(x,	1);
	create_insn	(x=0X43F187C2);
	op_hex		(x,	1);
	create_insn	(x=0X43F187D5);
	op_hex		(x,	1);
	create_insn	(x=0X43F187D8);
	op_hex		(x,	1);
	create_insn	(0X43F187E1);
	create_insn	(x=0X43F187E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F1882A,	"interface",	0);
	set_cmt	(0X43F18830,	"index",	0);
	create_insn	(0X43F1885D);
	create_insn	(x=0X43F18877);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1887E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1888B);
	op_hex		(x,	1);
	create_insn	(x=0X43F1888E);
	op_hex		(x,	1);
	create_insn	(x=0X43F188A1);
	op_hex		(x,	1);
	create_insn	(x=0X43F188A4);
	op_hex		(x,	1);
	create_insn	(0X43F188AD);
	create_insn	(x=0X43F188B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F188F6,	"interface",	0);
	set_cmt	(0X43F188FC,	"index",	0);
	create_insn	(0X43F18929);
	create_insn	(x=0X43F18943);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1894A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F18957);
	op_hex		(x,	1);
	create_insn	(x=0X43F1895A);
	op_hex		(x,	1);
	create_insn	(x=0X43F1896D);
	op_hex		(x,	1);
	create_insn	(x=0X43F18970);
	op_hex		(x,	1);
	create_insn	(0X43F18979);
	create_insn	(x=0X43F1897E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F189C2,	"interface",	0);
	set_cmt	(0X43F189C8,	"index",	0);
	create_insn	(0X43F189F5);
	create_insn	(x=0X43F18A0F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F18A16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F18A23);
	op_hex		(x,	1);
	create_insn	(x=0X43F18A26);
	op_hex		(x,	1);
	create_insn	(x=0X43F18A39);
	op_hex		(x,	1);
	create_insn	(x=0X43F18A3C);
	op_hex		(x,	1);
	create_insn	(0X43F18A45);
	create_insn	(x=0X43F18A4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F18A8E,	"interface",	0);
	set_cmt	(0X43F18A94,	"index",	0);
	create_insn	(0X43F18AC1);
	create_insn	(x=0X43F18ADB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F18AE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F18AEF);
	op_hex		(x,	1);
	create_insn	(x=0X43F18AF2);
	op_hex		(x,	1);
	create_insn	(x=0X43F18B05);
	op_hex		(x,	1);
	create_insn	(x=0X43F18B08);
	op_hex		(x,	1);
	create_insn	(0X43F18B11);
	create_insn	(x=0X43F18B16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F18B5A,	"interface",	0);
	set_cmt	(0X43F18B60,	"index",	0);
	create_insn	(0X43F18B8D);
	create_insn	(x=0X43F18BA7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F18BAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F18BC5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F18BCD);
	create_insn	(x=0X43F18BE4);
	op_hex		(x,	1);
	create_insn	(x=0X43F18BE7);
	op_hex		(x,	1);
	create_insn	(x=0X43F18BEF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F18C32,	"interface",	0);
	set_cmt	(0X43F18C38,	"index",	0);
	create_insn	(0X43F18C65);
	create_insn	(x=0X43F18C7F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F18C86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F18C9D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F18CA5);
	create_insn	(x=0X43F18CBC);
	op_hex		(x,	1);
	create_insn	(x=0X43F18CC2);
	op_hex		(x,	1);
	create_insn	(x=0X43F18CCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F18CE5,	0XB);
	create_insn	(0X43F18CF0);
	make_array	(0X43F18D0B,	0X5);
	create_insn	(0X43F18D10);
	make_array	(0X43F18D1B,	0X5);
	create_insn	(0X43F18D20);
	create_insn	(x=0X43F18D23);
	op_hex		(x,	1);
	create_insn	(x=0X43F18D29);
	op_hex		(x,	1);
	set_cmt	(0X43F18D2C,	"index",	0);
	set_cmt	(0X43F18D3E,	"interface",	0);
	set_cmt	(0X43F18D4C,	"this",	0);
	create_insn	(0X43F18D66);
	create_insn	(x=0X43F18D6B);
	op_hex		(x,	1);
	create_insn	(x=0X43F18D6F);
	op_hex		(x,	1);
	create_insn	(x=0X43F18D72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F18D90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F18D9A);
	op_hex		(x,	1);
	set_cmt	(0X43F18D9D,	"num",	0);
	set_cmt	(0X43F18DA2,	"value",	0);
	set_cmt	(0X43F18DA4,	"pointer",	0);
	create_insn	(x=0X43F18DA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F18DAE);
	op_hex		(x,	1);
	create_insn	(x=0X43F18DB1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F18DB6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F18DC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F18DF8);
	create_insn	(0X43F18E16);
	create_insn	(0X43F18E31);
	create_insn	(0X43F18E60);
	set_cmt	(0X43F18E66,	"index",	0);
	set_cmt	(0X43F18E6B,	"interface",	0);
	set_cmt	(0X43F18E78,	"this",	0);
	set_cmt	(0X43F18E8F,	"propHash",	0);
	set_cmt	(0X43F18E94,	"classHash",	0);
	set_cmt	(0X43F18EEB,	"index",	0);
	set_cmt	(0X43F18EF0,	"interface",	0);
	set_cmt	(0X43F18F07,	"this",	0);
	set_cmt	(0X43F18F1E,	"propHash",	0);
	set_cmt	(0X43F18F23,	"classHash",	0);
	create_insn	(x=0X43F18F8F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F18FA9,	0X7);
	create_insn	(0X43F18FB0);
	create_insn	(x=0X43F18FB3);
	op_hex		(x,	1);
	create_insn	(x=0X43F18FB6);
	op_hex		(x,	1);
	create_insn	(x=0X43F18FB9);
	op_hex		(x,	1);
	create_insn	(x=0X43F18FC6);
	op_hex		(x,	1);
	set_cmt	(0X43F19014,	"interface",	0);
	set_cmt	(0X43F1901A,	"index",	0);
	create_insn	(0X43F1904E);
	create_insn	(x=0X43F19072);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F19079);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1908C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F19094);
	set_cmt	(0X43F190BD,	"switch 13 cases ",	0);
	set_cmt	(0X43F190C6,	"switch jump",	0);
	create_insn	(x=0X43F190C6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F190CD,	"jumptable 43F190C6 case 0",	1);
	create_insn	(0X43F190CD);
	create_insn	(x=0X43F190D0);
	op_hex		(x,	1);
	set_cmt	(0X43F190DD,	"jumptable 43F190C6 case 3",	1);
	create_insn	(0X43F190DD);
	create_insn	(x=0X43F190E0);
	op_hex		(x,	1);
	create_insn	(x=0X43F190E3);
	op_hex		(x,	1);
	set_cmt	(0X43F190F9,	"jumptable 43F190C6 case 4",	1);
	create_insn	(0X43F190F9);
	create_insn	(x=0X43F190FC);
	op_hex		(x,	1);
	create_insn	(x=0X43F190FF);
	op_hex		(x,	1);
	set_cmt	(0X43F19115,	"jumptable 43F190C6 case 5",	1);
	create_insn	(0X43F19115);
	create_insn	(x=0X43F19118);
	op_hex		(x,	1);
	create_insn	(x=0X43F1911B);
	op_hex		(x,	1);
	set_cmt	(0X43F1912D,	"jumptable 43F190C6 case 6",	1);
	create_insn	(0X43F1912D);
	create_insn	(x=0X43F19130);
	op_hex		(x,	1);
	create_insn	(x=0X43F19133);
	op_hex		(x,	1);
	set_cmt	(0X43F19145,	"jumptable 43F190C6 case 2",	1);
	create_insn	(0X43F19145);
	create_insn	(x=0X43F19148);
	op_hex		(x,	1);
	create_insn	(x=0X43F1914B);
	op_hex		(x,	1);
	set_cmt	(0X43F1915D,	"jumptable 43F190C6 cases 7-10",	1);
	create_insn	(0X43F1915D);
	create_insn	(x=0X43F19160);
	op_hex		(x,	1);
	create_insn	(x=0X43F19163);
	op_hex		(x,	1);
	set_cmt	(0X43F19175,	"jumptable 43F190C6 cases 11,12",	1);
	create_insn	(0X43F19175);
	create_insn	(x=0X43F19178);
	op_hex		(x,	1);
	create_insn	(x=0X43F1917D);
	op_hex		(x,	1);
	set_cmt	(0X43F1918F,	"jumptable 43F190C6 default case, case 1",	1);
	create_insn	(0X43F1918F);
	set_name	(0X43F1918F,	"def_43F190C6");
	set_cmt	(0X43F1919C,	"jump table for switch statement",	0);
	create_dword	(x=0X43F1919C);
	make_array	(x,	0XD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F1919C,	"jpt_43F190C6");
	create_insn	(0X43F191D0);
	create_insn	(x=0X43F191D3);
	op_hex		(x,	1);
	create_insn	(x=0X43F191D6);
	op_hex		(x,	1);
	set_cmt	(0X43F191D9,	"index",	0);
	set_cmt	(0X43F191F0,	"interface",	0);
	set_cmt	(0X43F191FD,	"this",	0);
	create_insn	(0X43F19218);
	set_cmt	(0X43F1921E,	"index",	0);
	set_cmt	(0X43F19223,	"interface",	0);
	set_cmt	(0X43F19230,	"this",	0);
	set_cmt	(0X43F19247,	"propHash",	0);
	set_cmt	(0X43F1924C,	"classHash",	0);
	set_cmt	(0X43F192B2,	"index",	0);
	set_cmt	(0X43F192BD,	"interface",	0);
	set_cmt	(0X43F192CA,	"this",	0);
	set_cmt	(0X43F192E7,	"propHash",	0);
	set_cmt	(0X43F192EC,	"classHash",	0);
	set_cmt	(0X43F19305,	"m_player",	0);
	make_array	(0X43F19421,	0XF);
	create_insn	(0X43F19430);
	create_insn	(x=0X43F19433);
	op_hex		(x,	1);
	set_cmt	(0X43F19436,	"interface",	0);
	create_insn	(x=0X43F1943C);
	op_hex		(x,	1);
	set_cmt	(0X43F19442,	"index",	0);
	set_cmt	(0X43F1944E,	"arg",	0);
	set_cmt	(0X43F19456,	"this",	0);
	set_cmt	(0X43F1946D,	"propHash",	0);
	set_cmt	(0X43F19472,	"classHash",	0);
	set_cmt	(0X43F19494,	"propHash",	0);
	set_cmt	(0X43F19499,	"classHash",	0);
	set_cmt	(0X43F194B8,	"index",	0);
	set_cmt	(0X43F194BD,	"interface",	0);
	set_cmt	(0X43F194CA,	"this",	0);
	set_cmt	(0X43F194E1,	"propHash",	0);
	set_cmt	(0X43F194E6,	"classHash",	0);
	create_insn	(0X43F1950B);
	set_cmt	(0X43F19511,	"index",	0);
	set_cmt	(0X43F19516,	"interface",	0);
	set_cmt	(0X43F19523,	"this",	0);
	set_cmt	(0X43F1953A,	"propHash",	0);
	set_cmt	(0X43F1953F,	"classHash",	0);
	create_insn	(x=0X43F195B1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F195B9,	"m_player",	0);
	create_insn	(x=0X43F1965B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F19662);
	create_insn	(0X43F19669);
	set_cmt	(0X43F19672,	"propHash",	0);
	set_cmt	(0X43F19677,	"classHash",	0);
	create_insn	(x=0X43F197DB);
	op_hex		(x,	1);
	create_insn	(x=0X43F19810);
	op_hex		(x,	1);
	create_insn	(0X43F19859);
	create_insn	(0X43F19891);
	set_cmt	(0X43F19904,	"index",	0);
	set_cmt	(0X43F19909,	"interface",	0);
	set_cmt	(0X43F19916,	"this",	0);
	set_cmt	(0X43F1992D,	"propHash",	0);
	set_cmt	(0X43F19932,	"classHash",	0);
	create_insn	(0X43F19958);
	make_array	(0X43F19977,	0X9);
	create_insn	(0X43F19980);
	create_insn	(x=0X43F19983);
	op_hex		(x,	1);
	set_cmt	(0X43F19986,	"interface",	0);
	create_insn	(x=0X43F1998C);
	op_hex		(x,	1);
	set_cmt	(0X43F19992,	"index",	0);
	set_cmt	(0X43F1999E,	"arg",	0);
	set_cmt	(0X43F199A6,	"this",	0);
	set_cmt	(0X43F199C0,	"index",	0);
	set_cmt	(0X43F199C5,	"interface",	0);
	set_cmt	(0X43F199D2,	"this",	0);
	set_cmt	(0X43F199DE,	"m_pPlayer",	0);
	set_cmt	(0X43F199F3,	"index",	0);
	set_cmt	(0X43F199F8,	"interface",	0);
	set_cmt	(0X43F19A05,	"this",	0);
	set_cmt	(0X43F19A1C,	"propHash",	0);
	set_cmt	(0X43F19A21,	"classHash",	0);
	create_insn	(0X43F19A48);
	set_cmt	(0X43F19A4E,	"index",	0);
	set_cmt	(0X43F19A53,	"interface",	0);
	set_cmt	(0X43F19A60,	"this",	0);
	set_cmt	(0X43F19A77,	"propHash",	0);
	set_cmt	(0X43F19A7C,	"classHash",	0);
	create_insn	(x=0X43F19B14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F19B1C,	"m_player",	0);
	create_insn	(0X43F19B38);
	create_insn	(0X43F19B89);
	create_insn	(x=0X43F19C10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F19C17);
	create_insn	(0X43F19C1E);
	set_cmt	(0X43F19C27,	"propHash",	0);
	set_cmt	(0X43F19C2C,	"classHash",	0);
	set_cmt	(0X43F19C41,	"index",	0);
	set_cmt	(0X43F19C4C,	"interface",	0);
	set_cmt	(0X43F19C8F,	"this",	0);
	create_insn	(x=0X43F19CAA);
	op_hex		(x,	1);
	set_cmt	(0X43F19DBE,	"angles",	0);
	create_insn	(0X43F19E45);
	create_insn	(0X43F19E4B);
	create_insn	(0X43F19E66);
	set_cmt	(0X43F19E7A,	"index",	0);
	set_cmt	(0X43F19E7F,	"interface",	0);
	set_cmt	(0X43F19E8C,	"this",	0);
	set_cmt	(0X43F19EA3,	"propHash",	0);
	set_cmt	(0X43F19EA8,	"classHash",	0);
	create_insn	(0X43F19ED0);
	create_byte	(0X43F19EF1);
	make_array	(0X43F19EF1,	0X1F);
	create_insn	(0X43F19F10);
	create_insn	(x=0X43F19F50);
	op_hex		(x,	1);
	create_insn	(0X43F19F5B);
	create_insn	(0X43F19F70);
	create_insn	(x=0X43F19F73);
	op_hex		(x,	1);
	create_insn	(x=0X43F19F76);
	op_hex		(x,	1);
	set_cmt	(0X43F19F7D,	"hash",	0);
	create_insn	(x=0X43F19FAD);
	op_hex		(x,	1);
	create_insn	(x=0X43F19FE3);
	op_hex		(x,	1);
	create_insn	(0X43F19FF0);
	create_insn	(x=0X43F1A013);
	op_hex		(x,	1);
	set_cmt	(0X43F1A096,	"_DWORD",	0);
	create_insn	(x=0X43F1A099);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A0BC);
	op_hex		(x,	1);
	set_cmt	(0X43F1A0CB,	"_DWORD",	0);
	create_insn	(x=0X43F1A0D5);
	op_hex		(x,	1);
	create_insn	(0X43F1A10C);
	create_insn	(x=0X43F1A116);
	op_hex		(x,	1);
	create_insn	(0X43F1A13D);
	create_insn	(x=0X43F1A154);
	op_hex		(x,	1);
	set_cmt	(0X43F1A168,	"hash",	0);
	create_insn	(0X43F1A187);
	create_insn	(x=0X43F1A1A7);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A1D1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1A1FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1A227);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43F1A236,	0XA);
	create_insn	(0X43F1A240);
	create_insn	(x=0X43F1A243);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A24B);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A25D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1A262);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1A270);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A2A5);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A2B2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1A2BD);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A2FB);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A31F);
	op_hex		(x,	1);
	make_array	(0X43F1A344,	0XC);
	create_insn	(0X43F1A350);
	create_insn	(x=0X43F1A353);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A370);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1A377);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F1A386,	"Size",	0);
	create_insn	(x=0X43F1A38D);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A393);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1A39D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1A3A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1A3B3);
	op_hex		(x,	1);
	create_insn	(0X43F1A3CD);
	create_insn	(x=0X43F1A3D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F1A3F4);
	make_array	(0X43F1A403,	0XD);
	create_insn	(0X43F1A410);
	create_insn	(x=0X43F1A414);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1A41F);
	op_hex		(x,	1);
	create_insn	(0X43F1A45A);
	create_insn	(x=0X43F1A45D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1A469);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1A474);
	op_hex		(x,	1);
	create_insn	(0X43F1A4A0);
	create_insn	(x=0X43F1A4C3);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A4D3);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A4E5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1A4F0);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A509);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A512);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1A522);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A54C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1A551);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1A558);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A561);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1A56C);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A5AE);
	op_hex		(x,	1);
	create_insn	(0X43F1A5B9);
	set_cmt	(0X43F1A5BF,	"Trap to Debugger",	0);
	create_insn	(x=0X43F1A5BF);
	op_hex		(x,	0);
	create_insn	(0X43F1A5C0);
	create_insn	(0X43F1A5DD);
	set_cmt	(0X43F1A5ED,	"index",	0);
	set_cmt	(0X43F1A5F2,	"interface",	0);
	set_cmt	(0X43F1A5FF,	"this",	0);
	set_cmt	(0X43F1A615,	"index",	0);
	set_cmt	(0X43F1A61A,	"interface",	0);
	set_cmt	(0X43F1A627,	"this",	0);
	set_cmt	(0X43F1A633,	"m_pPlayer",	0);
	set_cmt	(0X43F1A648,	"index",	0);
	set_cmt	(0X43F1A64D,	"interface",	0);
	set_cmt	(0X43F1A65A,	"this",	0);
	create_insn	(0X43F1A688);
	create_insn	(0X43F1A694);
	create_insn	(0X43F1A6B3);
	set_cmt	(0X43F1A6CF,	"_DWORD",	0);
	set_cmt	(0X43F1A6D2,	"_DWORD",	0);
	make_array	(0X43F1A6E1,	0XF);
	create_insn	(0X43F1A6F0);
	set_cmt	(0X43F1A757,	"this",	0);
	set_cmt	(0X43F1A76C,	"a3",	0);
	set_cmt	(0X43F1A76D,	"a2",	0);
	create_insn	(0X43F1A77E);
	make_array	(0X43F1A787,	0X9);
	create_insn	(0X43F1A790);
	set_name	(0X43F1A790,	"C_SDK::Server::Valve::IsAimStep");
	create_insn	(x=0X43F1A7B3);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A7C1);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A7F7);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1A85C);
	op_stkvar	(x,	1);
	create_insn	(0X43F1A86C);
	create_insn	(x=0X43F1A872);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A880);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A8B7);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1A90F,	"interface",	0);
	set_cmt	(0X43F1A91A,	"index",	0);
	set_cmt	(0X43F1A926,	"interface",	0);
	set_cmt	(0X43F1A92C,	"index",	0);
	create_insn	(x=0X43F1A951);
	op_stkvar	(x,	1);
	create_insn	(0X43F1A956);
	make_array	(0X43F1A966,	0XA);
	create_insn	(0X43F1A970);
	set_name	(0X43F1A970,	"OneTap::Features::Server::UpdateData");
	create_insn	(x=0X43F1A973);
	op_hex		(x,	1);
	create_insn	(x=0X43F1A976);
	op_hex		(x,	1);
	set_cmt	(0X43F1A97E,	"index",	0);
	set_cmt	(0X43F1A983,	"interface",	0);
	create_insn	(x=0X43F1A98A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1A992);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1A997);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1A99C);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1A9AF,	"interface",	0);
	set_cmt	(0X43F1A9B5,	"index",	0);
	set_cmt	(0X43F1AA39,	"a3",	0);
	set_cmt	(0X43F1AA3A,	"a2",	0);
	set_cmt	(0X43F1AA3B,	"this",	0);
	create_insn	(x=0X43F1AA3B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1AA58);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AA66);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AA6B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AA72);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AA7A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AA82);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AA90);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AA94);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AA98);
	op_hex		(x,	1);
	create_insn	(x=0X43F1AA9B);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AAA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AAAE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AAB3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AAB7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1AABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AAD7);
	op_hex		(x,	1);
	create_insn	(x=0X43F1AADA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AAE0);
	op_stkvar	(x,	0);
	create_insn	(0X43F1AAEF);
	create_insn	(x=0X43F1AB08);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AB11);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AB19);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AB21);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AB27);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AB38);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AB47);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AB53);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AB57);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AB5B);
	op_hex		(x,	1);
	create_insn	(x=0X43F1AB5E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AB63);
	op_stkvar	(x,	1);
	create_insn	(0X43F1AB73);
	create_insn	(x=0X43F1AB7F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AB87);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AB95);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AB99);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AB9D);
	op_hex		(x,	1);
	create_insn	(x=0X43F1ABA0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1ABA5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1ABB3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1ABB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1ABBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1ABC1);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1ABCC);
	op_stkvar	(x,	1);
	create_insn	(0X43F1ABDA);
	create_insn	(x=0X43F1ABDD);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1ABEB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1ABF3);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1ABFB);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AC03);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AC08);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AC10);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AC18);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AC28);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AC2C);
	op_hex		(x,	1);
	create_insn	(x=0X43F1AC2F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AC42);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AC47);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AC4B);
	op_stkvar	(x,	1);
	set_cmt	(0X43F1AC5E,	"a3",	0);
	set_cmt	(0X43F1AC5F,	"a2",	0);
	set_cmt	(0X43F1AC60,	"this",	0);
	create_insn	(x=0X43F1AC60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1AC6A);
	op_stkvar	(x,	1);
	create_insn	(0X43F1AC75);
	create_insn	(x=0X43F1AC7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1ACA9);
	op_hex		(x,	1);
	set_cmt	(0X43F1ACAC,	"a1",	0);
	create_insn	(x=0X43F1ACAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1ACB1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F1ACB6,	"a8",	0);
	create_insn	(x=0X43F1ACB6);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1ACBE,	"a6",	0);
	create_insn	(x=0X43F1ACBE);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1ACC9);
	op_hex		(x,	1);
	create_insn	(x=0X43F1ACDC);
	op_hex		(x,	1);
	set_cmt	(0X43F1ACDF,	"a1",	0);
	create_insn	(x=0X43F1ACDF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1ACE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F1ACE9,	"a8",	0);
	create_insn	(x=0X43F1ACE9);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1ACF1,	"a6",	0);
	create_insn	(x=0X43F1ACF1);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AD02);
	op_hex		(x,	1);
	create_insn	(x=0X43F1AD15);
	op_hex		(x,	1);
	set_cmt	(0X43F1AD18,	"a1",	0);
	create_insn	(x=0X43F1AD18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F1AD1D,	"a8",	0);
	create_insn	(x=0X43F1AD1D);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1AD25,	"a6",	0);
	create_insn	(x=0X43F1AD25);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AD29);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F1AD39,	"interface",	0);
	create_insn	(x=0X43F1AD41);
	op_hex		(x,	1);
	create_insn	(x=0X43F1AD63);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1AD79,	"index",	0);
	set_cmt	(0X43F1AD7C,	"interface",	0);
	set_cmt	(0X43F1AD89,	"interface",	0);
	set_cmt	(0X43F1AD8F,	"index",	0);
	set_cmt	(0X43F1ADAA,	"index",	0);
	set_cmt	(0X43F1ADAF,	"interface",	0);
	set_cmt	(0X43F1ADBD,	"interface",	0);
	set_cmt	(0X43F1ADC3,	"index",	0);
	set_cmt	(0X43F1ADD1,	"interface",	0);
	set_cmt	(0X43F1ADDB,	"index",	0);
	set_cmt	(0X43F1ADEC,	"interface",	0);
	set_cmt	(0X43F1ADF2,	"index",	0);
	create_insn	(0X43F1AE09);
	set_cmt	(0X43F1AE0D,	"index",	0);
	set_cmt	(0X43F1AE12,	"interface",	0);
	create_insn	(0X43F1AE2B);
	set_cmt	(0X43F1AE31,	"index",	0);
	set_cmt	(0X43F1AE36,	"interface",	0);
	create_insn	(x=0X43F1AE48);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AE4F);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1AE58,	"index",	0);
	create_insn	(0X43F1AE79);
	create_insn	(x=0X43F1AE8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AE8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AE92);
	op_stkvar	(x,	1);
	create_byte	(0X43F1AEB4);
	make_array	(0X43F1AEB4,	0X1C);
	create_insn	(0X43F1AED0);
	set_name	(0X43F1AED0,	"OneTap::Utils::FixupAttackNetvars");
	set_cmt	(0X43F1AED3,	"interface",	0);
	set_cmt	(0X43F1AED9,	"index",	0);
	set_cmt	(0X43F1AEEC,	"this",	0);
	set_cmt	(0X43F1AF06,	"index",	0);
	set_cmt	(0X43F1AF0B,	"interface",	0);
	set_cmt	(0X43F1AF18,	"this",	0);
	set_cmt	(0X43F1AF24,	"m_pPlayer",	0);
	set_cmt	(0X43F1AF39,	"index",	0);
	set_cmt	(0X43F1AF3E,	"interface",	0);
	set_cmt	(0X43F1AF4C,	"this",	0);
	set_cmt	(0X43F1AF64,	"propHash",	0);
	set_cmt	(0X43F1AF69,	"classHash",	0);
	create_insn	(x=0X43F1AF92);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1AF98);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1AFA1);
	op_hex		(x,	1);
	create_insn	(0X43F1AFAE);
	set_cmt	(0X43F1AFBE,	"propHash",	0);
	set_cmt	(0X43F1AFC3,	"classHash",	0);
	create_insn	(0X43F1AFE4);
	set_cmt	(0X43F1AFFF,	"propHash",	0);
	set_cmt	(0X43F1B004,	"classHash",	0);
	create_insn	(x=0X43F1B01F);
	op_hex		(x,	1);
	create_insn	(0X43F1B03D);
	make_array	(0X43F1B049,	0X7);
	create_insn	(0X43F1B050);
	set_cmt	(0X43F1B053,	"interface",	0);
	set_cmt	(0X43F1B059,	"index",	0);
	set_cmt	(0X43F1B06C,	"this",	0);
	set_cmt	(0X43F1B086,	"index",	0);
	set_cmt	(0X43F1B08B,	"interface",	0);
	set_cmt	(0X43F1B098,	"this",	0);
	set_cmt	(0X43F1B0A4,	"m_pPlayer",	0);
	set_cmt	(0X43F1B0B9,	"index",	0);
	set_cmt	(0X43F1B0BE,	"interface",	0);
	set_cmt	(0X43F1B0CC,	"this",	0);
	set_cmt	(0X43F1B0E4,	"propHash",	0);
	set_cmt	(0X43F1B0E9,	"classHash",	0);
	set_cmt	(0X43F1B12B,	"propHash",	0);
	set_cmt	(0X43F1B130,	"classHash",	0);
	create_insn	(x=0X43F1B14F);
	op_hex		(x,	1);
	set_cmt	(0X43F1B158,	"propHash",	0);
	set_cmt	(0X43F1B15D,	"classHash",	0);
	create_insn	(0X43F1B195);
	set_cmt	(0X43F1B19F,	"propHash",	0);
	set_cmt	(0X43F1B1A4,	"classHash",	0);
	make_array	(0X43F1B1D8,	0X8);
	create_insn	(0X43F1B1E0);
	make_array	(0X43F1B1FD,	0X3);
	create_insn	(0X43F1B200);
	create_insn	(x=0X43F1B203);
	op_hex		(x,	1);
	create_insn	(x=0X43F1B287);
	op_hex		(x,	1);
	create_insn	(x=0X43F1B2B1);
	op_hex		(x,	1);
	create_insn	(x=0X43F1B2E6);
	op_hex		(x,	1);
	set_cmt	(0X43F1B317,	"_DWORD",	0);
	set_cmt	(0X43F1B31A,	"_DWORD",	0);
	set_cmt	(0X43F1B31D,	"_DWORD",	0);
	set_cmt	(0X43F1B320,	"_DWORD",	0);
	set_cmt	(0X43F1B323,	"_DWORD",	0);
	set_cmt	(0X43F1B326,	"_DWORD",	0);
	set_cmt	(0X43F1B329,	"_DWORD",	0);
	set_cmt	(0X43F1B32C,	"_DWORD",	0);
	set_cmt	(0X43F1B32F,	"_DWORD",	0);
	set_cmt	(0X43F1B332,	"_DWORD",	0);
	set_cmt	(0X43F1B335,	"_DWORD",	0);
	create_insn	(x=0X43F1B33C);
	op_hex		(x,	1);
	make_array	(0X43F1B346,	0XA);
	create_insn	(0X43F1B350);
	set_cmt	(0X43F1B38E,	"_DWORD",	0);
	set_cmt	(0X43F1B391,	"_DWORD",	0);
	set_cmt	(0X43F1B394,	"_DWORD",	0);
	set_cmt	(0X43F1B397,	"_DWORD",	0);
	set_cmt	(0X43F1B39A,	"_DWORD",	0);
	set_cmt	(0X43F1B39D,	"_DWORD",	0);
	set_cmt	(0X43F1B3A0,	"_DWORD",	0);
	set_cmt	(0X43F1B3A3,	"_DWORD",	0);
	set_cmt	(0X43F1B3A6,	"_DWORD",	0);
	set_cmt	(0X43F1B3A9,	"_DWORD",	0);
	set_cmt	(0X43F1B3AC,	"_DWORD",	0);
	set_cmt	(0X43F1B3AD,	"_DWORD",	0);
	set_cmt	(0X43F1B3B0,	"_DWORD",	0);
	create_insn	(x=0X43F1B3B9);
	op_hex		(x,	1);
	create_insn	(0X43F1B3C0);
	set_name	(0X43F1B3C0,	"OneTap::Features::Hooks::WndProc");
	create_insn	(x=0X43F1B3C3);
	op_hex		(x,	1);
	create_insn	(x=0X43F1B3C6);
	op_hex		(x,	1);
	create_insn	(x=0X43F1B3C9);
	op_hex		(x,	1);
	create_insn	(x=0X43F1B3D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1B3E7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X43F1B3FA);
	set_cmt	(0X43F1B411,	"num",	0);
	set_cmt	(0X43F1B416,	"value",	0);
	set_cmt	(0X43F1B418,	"pointer",	0);
	create_insn	(x=0X43F1B418);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1B42F);
	op_hex		(x,	1);
	create_insn	(0X43F1B449);
	create_insn	(x=0X43F1B461);
	op_hex		(x,	1);
	create_insn	(0X43F1B46B);
	set_cmt	(0X43F1B47D,	"switch 6 cases ",	0);
	set_cmt	(0X43F1B48C,	"switch jump",	0);
	create_insn	(x=0X43F1B48C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F1B493,	"jumptable 43F1B48C case 256",	1);
	create_insn	(0X43F1B493);
	create_insn	(x=0X43F1B4A9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F1B4B5,	"jumptable 43F1B48C case 257",	1);
	create_insn	(0X43F1B4B5);
	create_insn	(x=0X43F1B4CB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F1B4D7,	"jumptable 43F1B48C case 260",	1);
	create_insn	(0X43F1B4D7);
	set_cmt	(0X43F1B4EF,	"jumptable 43F1B48C case 261",	1);
	create_insn	(0X43F1B4EF);
	set_cmt	(0X43F1B507,	"jumptable 43F1B48C case 258",	1);
	create_insn	(0X43F1B507);
	set_cmt	(0X43F1B52B,	"switch 12 cases ",	0);
	create_insn	(0X43F1B52B);
	set_cmt	(0X43F1B53A,	"switch jump",	0);
	create_insn	(x=0X43F1B53A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F1B541,	"jumptable 43F1B53A case 515",	1);
	create_insn	(0X43F1B541);
	set_cmt	(0X43F1B54A,	"jumptable 43F1B53A case 514",	1);
	create_insn	(0X43F1B54A);
	set_cmt	(0X43F1B553,	"jumptable 43F1B53A cases 516,518",	1);
	create_insn	(0X43F1B553);
	set_cmt	(0X43F1B55C,	"jumptable 43F1B53A case 517",	1);
	create_insn	(0X43F1B55C);
	set_cmt	(0X43F1B565,	"jumptable 43F1B53A cases 519,521",	1);
	create_insn	(0X43F1B565);
	set_cmt	(0X43F1B56E,	"jumptable 43F1B53A case 520",	1);
	create_insn	(0X43F1B56E);
	set_cmt	(0X43F1B577,	"jumptable 43F1B53A cases 523,525",	1);
	create_insn	(0X43F1B577);
	create_insn	(x=0X43F1B57C);
	op_hex		(x,	1);
	create_insn	(x=0X43F1B589);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F1B592,	"jumptable 43F1B53A case 524",	1);
	create_insn	(0X43F1B592);
	create_insn	(x=0X43F1B597);
	op_hex		(x,	1);
	create_insn	(x=0X43F1B5A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F1B5AD,	"jumptable 43F1B53A case 522",	1);
	create_insn	(0X43F1B5AD);
	create_insn	(x=0X43F1B5B2);
	op_hex		(x,	1);
	set_cmt	(0X43F1B5C8,	"jumptable 43F1B48C default case, case 259\njumptable 43F1B53A default case",	1);
	set_name	(0X43F1B5C8,	"def_43F1B48C");
	create_insn	(x=0X43F1B5DE);
	op_hex		(x,	1);
	create_insn	(0X43F1B5E9);
	create_insn	(x=0X43F1B5F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1B600);
	op_hex		(x,	1);
	create_insn	(0X43F1B669);
	set_cmt	(0X43F1B688,	"jump table for switch statement",	0);
	create_dword	(x=0X43F1B688);
	make_array	(x,	0X6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F1B688,	"jpt_43F1B48C");
	set_cmt	(0X43F1B6A0,	"jump table for switch statement",	0);
	create_dword	(x=0X43F1B6A0);
	make_array	(x,	0XC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F1B6A0,	"jpt_43F1B53A");
	create_insn	(0X43F1B6D0);
	create_insn	(x=0X43F1B6D3);
	op_hex		(x,	1);
	set_cmt	(0X43F1B6D6,	"interface",	0);
	create_insn	(x=0X43F1B6DC);
	op_hex		(x,	1);
	set_cmt	(0X43F1B6E2,	"index",	0);
	set_cmt	(0X43F1B6EE,	"arg",	0);
	set_cmt	(0X43F1B6F6,	"this",	0);
	set_cmt	(0X43F1B710,	"index",	0);
	set_cmt	(0X43F1B715,	"interface",	0);
	set_cmt	(0X43F1B722,	"this",	0);
	set_cmt	(0X43F1B72E,	"m_pPlayer",	0);
	set_cmt	(0X43F1B855,	"index",	0);
	set_cmt	(0X43F1B860,	"interface",	0);
	set_cmt	(0X43F1B871,	"this",	0);
	set_cmt	(0X43F1B89B,	"propHash",	0);
	set_cmt	(0X43F1B8A0,	"classHash",	0);
	set_cmt	(0X43F1B8C2,	"propHash",	0);
	set_cmt	(0X43F1B8C7,	"classHash",	0);
	set_cmt	(0X43F1B8E0,	"m_player",	0);
	set_cmt	(0X43F1B8F8,	"m_player",	0);
	set_cmt	(0X43F1B918,	"propHash",	0);
	set_cmt	(0X43F1B91D,	"classHash",	0);
	create_insn	(x=0X43F1B944);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X43F1B998,	"propHash",	0);
	set_cmt	(0X43F1B99D,	"classHash",	0);
	create_insn	(x=0X43F1B9B1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1BA62);
	op_hex		(x,	1);
	create_insn	(0X43F1BA71);
	set_cmt	(0X43F1BB10,	"propHash",	0);
	set_cmt	(0X43F1BB15,	"classHash",	0);
	set_cmt	(0X43F1BB38,	"index",	0);
	set_cmt	(0X43F1BB46,	"interface",	0);
	set_cmt	(0X43F1BB53,	"this",	0);
	create_insn	(0X43F1BF6C);
	set_cmt	(0X43F1C000,	"m_player",	0);
	set_cmt	(0X43F1C01B,	"m_player",	0);
	create_insn	(x=0X43F1C267);
	op_hex		(x,	1);
	create_insn	(x=0X43F1C29D);
	op_hex		(x,	1);
	make_array	(0X43F1C2A6,	0XA);
	create_insn	(0X43F1C2B0);
	set_cmt	(0X43F1C2BD,	"interface",	0);
	set_cmt	(0X43F1C2C3,	"index",	0);
	set_cmt	(0X43F1C2D6,	"this",	0);
	set_cmt	(0X43F1C2EA,	"interface",	0);
	set_cmt	(0X43F1C2F0,	"index",	0);
	set_cmt	(0X43F1C310,	"this",	0);
	set_cmt	(0X43F1C336,	"propHash",	0);
	set_cmt	(0X43F1C33B,	"classHash",	0);
	set_cmt	(0X43F1C359,	"propHash",	0);
	set_cmt	(0X43F1C35E,	"classHash",	0);
	set_cmt	(0X43F1C373,	"m_player",	0);
	set_cmt	(0X43F1C387,	"propHash",	0);
	set_cmt	(0X43F1C38C,	"classHash",	0);
	make_array	(0X43F1C3AC,	0X4);
	create_insn	(0X43F1C3B0);
	create_insn	(x=0X43F1C3E3);
	op_hex		(x,	1);
	set_cmt	(0X43F1C3F7,	"edx",	0);
	set_cmt	(0X43F1C3FA,	"isNewCmd",	0);
	set_cmt	(0X43F1C3FC,	"to",	0);
	set_cmt	(0X43F1C3FD,	"from",	0);
	set_cmt	(0X43F1C3FE,	"ecx",	0);
	set_cmt	(0X43F1C401,	"bufferWrite",	0);
	set_cmt	(0X43F1C402,	"slot",	0);
	create_insn	(0X43F1C419);
	create_insn	(0X43F1C420);
	create_insn	(x=0X43F1C423);
	op_hex		(x,	1);
	create_insn	(x=0X43F1C446);
	op_hex		(x,	1);
	set_cmt	(0X43F1C475,	"ecx",	0);
	set_cmt	(0X43F1C478,	"isNewCmd",	0);
	set_cmt	(0X43F1C47A,	"to",	0);
	set_cmt	(0X43F1C47B,	"from",	0);
	set_cmt	(0X43F1C47C,	"bufferWrite",	0);
	set_cmt	(0X43F1C47F,	"edx",	0);
	set_cmt	(0X43F1C482,	"slot",	0);
	set_cmt	(0X43F1C4AF,	"a2",	0);
	set_cmt	(0X43F1C4B0,	"this",	0);
	set_cmt	(0X43F1C4BD,	"this",	0);
	set_cmt	(0X43F1C4C0,	"a2",	0);
	create_insn	(0X43F1C5B5);
	make_array	(0X43F1C5BE,	0X2);
	create_insn	(0X43F1C5C0);
	set_name	(0X43F1C5C0,	"OneTap::Features::Hooks::WriteUserCmdDeltaToBuffer");
	create_insn	(x=0X43F1C5C3);
	op_hex		(x,	1);
	create_insn	(x=0X43F1C5CF);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1C5DB,	"isNewCmd",	0);
	create_insn	(x=0X43F1C5DB);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1C5E3,	"to",	0);
	create_insn	(x=0X43F1C5E3);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1C5E6,	"from",	0);
	create_insn	(x=0X43F1C5E6);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1C5E9,	"bufferWrite",	0);
	create_insn	(x=0X43F1C5E9);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1C5EC,	"slot",	0);
	create_insn	(x=0X43F1C5EC);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C5F9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C609);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C636);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C643);
	op_hex		(x,	1);
	create_insn	(x=0X43F1C64C);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C665);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C668);
	op_stkvar	(x,	1);
	set_cmt	(0X43F1C675,	"ecx",	0);
	set_cmt	(0X43F1C677,	"isNewCmd",	0);
	set_cmt	(0X43F1C679,	"to",	0);
	set_cmt	(0X43F1C67A,	"from",	0);
	set_cmt	(0X43F1C67B,	"bufferWrite",	0);
	create_insn	(x=0X43F1C67B);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1C67E,	"edx",	0);
	set_cmt	(0X43F1C680,	"slot",	0);
	create_insn	(x=0X43F1C680);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C690);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C6A1);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1C6AE,	"from",	0);
	set_cmt	(0X43F1C6AF,	"to",	0);
	create_insn	(x=0X43F1C6AF);
	op_stkvar	(x,	1);
	set_cmt	(0X43F1C6BC,	"to",	0);
	create_insn	(x=0X43F1C6BC);
	op_stkvar	(x,	1);
	set_cmt	(0X43F1C6BF,	"from",	0);
	create_insn	(x=0X43F1C6C5);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C6D0);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C6D3);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C6D9);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C6E7);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C6F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C6FB);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C700);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C704);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C707);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C70A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C70D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C713);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C716);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C71D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C723);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C727);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C72A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C730);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C733);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C73A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C740);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C745);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C748);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C750);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C754);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C75A);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C75E);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C765);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C769);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C76D);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C774);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C779);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C780);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C787);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C78A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C78F);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C794);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C79A);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C79F);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C7A2);
	op_stkvar	(x,	0);
	create_insn	(0X43F1C7B9);
	create_insn	(0X43F1C7C4);
	create_insn	(x=0X43F1C7F4);
	op_hex		(x,	1);
	create_insn	(x=0X43F1C7F9);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1C808,	"edx",	0);
	set_cmt	(0X43F1C80A,	"isNewCmd",	0);
	set_cmt	(0X43F1C80C,	"to",	0);
	set_cmt	(0X43F1C80D,	"from",	0);
	set_cmt	(0X43F1C80E,	"bufferWrite",	0);
	create_insn	(x=0X43F1C80E);
	op_stkvar	(x,	0);
	set_cmt	(0X43F1C811,	"ecx",	0);
	set_cmt	(0X43F1C813,	"slot",	0);
	create_insn	(x=0X43F1C813);
	op_stkvar	(x,	0);
	create_insn	(x=0X43F1C81F);
	op_stkvar	(x,	1);
	create_insn	(0X43F1C830);
	create_insn	(0X43F1C889);
	create_insn	(x=0X43F1C897);
	op_hex		(x,	1);
	create_insn	(x=0X43F1C899);
	op_hex		(x,	1);
	create_insn	(x=0X43F1C89B);
	op_hex		(x,	1);
	create_insn	(x=0X43F1C89D);
	op_hex		(x,	1);
	make_array	(0X43F1C8DA,	0X6);
	create_insn	(0X43F1C8E0);
	create_insn	(0X43F1C94C);
	create_insn	(x=0X43F1C95A);
	op_hex		(x,	1);
	create_insn	(x=0X43F1C95C);
	op_hex		(x,	1);
	create_insn	(x=0X43F1C95E);
	op_hex		(x,	1);
	create_insn	(x=0X43F1C960);
	op_hex		(x,	1);
	create_insn	(x=0X43F1C9C0);
	op_stkvar	(x,	1);
	set_name	(0X43F1C9C0,	"Segment::Export::AllMul");
	create_insn	(x=0X43F1C9C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C9CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C9D0);
	op_stkvar	(x,	1);
	create_insn	(0X43F1C9D9);
	create_insn	(x=0X43F1C9DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C9E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1C9E8);
	op_stkvar	(x,	1);
	make_array	(0X43F1C9F4,	0XC);
	create_insn	(0X43F1CA00);
	set_name	(0X43F1CA00,	"C_SDK::MemoryManagment::AllocaProbe");
	create_insn	(x=0X43F1CA01);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1CA0F);
	op_hex		(x,	1);
	create_insn	(x=0X43F1CA1F);
	op_stkvar	(x,	0);
	create_insn	(0X43F1CA24);
	make_array	(0X43F1CA2D,	0X3);
	create_insn	(0X43F1CA30);
	set_name	(0X43F1CA30,	"C_SDK::MemoryManagment::AllocaProbe16");
	create_insn	(x=0X43F1CA31);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1CA37);
	op_hex		(x,	1);
	set_cmt	(0X43F1CA40,	"size",	0);
	create_insn	(0X43F1CA46);
	set_name	(0X43F1CA46,	"C_SDK::MemoryManagment::AllocaProbe8");
	create_insn	(x=0X43F1CA47);
	op_stkvar	(x,	1);
	create_insn	(x=0X43F1CA4D);
	op_hex		(x,	1);
	set_cmt	(0X43F1CA56,	"size",	0);
	make_array	(0X43F1CA5C,	0X4);
	create_insn	(0X43F1CA60);
	create_insn	(0X43F1CA70);
	create_insn	(x=0X43F1CA74);
	op_hex		(x,	1);
	create_insn	(0X43F1CA7A);
	create_insn	(0X43F1CA80);
	create_insn	(0X43F1CA90);
	create_insn	(x=0X43F1CA94);
	op_hex		(x,	1);
	create_insn	(0X43F1CA9A);
	create_insn	(0X43F1CAA0);
	set_name	(0X43F1CAA0,	"C_SDK::Server::CalculateTickrate");
	create_insn	(x=0X43F1CAA4);
	op_hex		(x,	1);
	create_insn	(0X43F1CAB4);
	create_insn	(x=0X43F1CABB);
	op_hex		(x,	1);
	create_insn	(0X43F1CAC3);
	create_insn	(0X43F1CAD6);
	create_insn	(x=0X43F1CADA);
	op_hex		(x,	1);
	create_insn	(0X43F1CAEC);
	create_insn	(x=0X43F1CAF9);
	op_hex		(x,	1);
	create_insn	(x=0X43F1CAFC);
	op_hex		(x,	1);
	create_insn	(0X43F1CB0C);
	create_insn	(0X43F1CB11);
	create_insn	(0X43F1CB25);
	create_insn	(x=0X43F1CB2A);
	op_hex		(x,	1);
	create_insn	(0X43F1CB39);
	create_insn	(x=0X43F1CB46);
	op_hex		(x,	1);
	create_insn	(x=0X43F1CB49);
	op_hex		(x,	1);
	create_insn	(0X43F1CB59);
	create_insn	(0X43F1CB6F);
	create_insn	(x=0X43F1CB71);
	op_hex		(x,	1);
	create_insn	(x=0X43F1CB74);
	op_hex		(x,	1);
	create_insn	(0X43F1CB98);
	create_insn	(x=0X43F1CBA0);
	op_hex		(x,	1);
	create_insn	(x=0X43F1CBAF);
	op_hex		(x,	1);
	create_insn	(0X43F1CBB8);
	create_insn	(0X43F1CBC7);
	create_insn	(0X43F1CBD3);
	create_insn	(x=0X43F1CBD5);
	op_hex		(x,	1);
	create_insn	(x=0X43F1CBD8);
	op_hex		(x,	1);
	create_insn	(0X43F1CBFE);
	create_insn	(x=0X43F1CC04);
	op_hex		(x,	1);
	create_insn	(x=0X43F1CC07);
	op_hex		(x,	1);
	create_insn	(0X43F1CC2E);
	create_insn	(0X43F1CC39);
	create_insn	(0X43F1CC4A);
	create_insn	(0X43F1CC57);
	create_insn	(x=0X43F1CC59);
	op_hex		(x,	1);
	create_insn	(x=0X43F1CC5C);
	op_hex		(x,	1);
	create_insn	(0X43F1CC81);
	create_insn	(x=0X43F1CC87);
	op_hex		(x,	1);
	create_insn	(x=0X43F1CC8A);
	op_hex		(x,	1);
	create_insn	(0X43F1CCB1);
	create_insn	(x=0X43F1CCB7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F1CCD0);
	make_array	(0X43F1CCE8,	0X8);
	create_insn	(0X43F1CCF0);
	create_insn	(x=0X43F1CCF7);
	op_hex		(x,	1);
	create_insn	(x=0X43F1CD0E);
	op_hex		(x,	1);
	make_array	(0X43F1CD27,	0X9);
	create_insn	(0X43F1CD30);
	set_name	(0X43F1CD30,	"Segment::Export::Ltod3");
	create_insn	(x=0X43F1CD3E);
	op_hex		(x,	1);
	create_insn	(0X43F1CD57);
	create_insn	(0X43F1CD5D);
	create_insn	(0X43F1CD63);
	create_insn	(0X43F1CD69);
	create_insn	(0X43F1CD6F);
	set_name	(0X43F1CD6F,	"C_SDK::Math::Atan");
	create_insn	(0X43F1CD75);
	create_insn	(0X43F1CD7B);
	create_insn	(0X43F1CD81);
	create_insn	(0X43F1CD87);
	create_insn	(0X43F1CD8D);
	create_insn	(0X43F1CD93);
	create_insn	(0X43F1CD99);
	create_insn	(0X43F1CD9F);
	create_insn	(0X43F1CDA5);
	create_insn	(0X43F1CDAB);
	create_insn	(0X43F1CDB1);
	create_insn	(0X43F1CDB7);
	create_insn	(0X43F1CDBD);
	make_array	(0X43F1CDC3,	0XD);
	create_insn	(x=0X43F1CDD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CDD0,	"SEH_43DD3370");
	make_array	(0X43F1CDDA,	0X6);
	create_insn	(x=0X43F1CDE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CDE0,	"SEH_43DD35B0");
	make_array	(0X43F1CDEA,	0X6);
	create_insn	(x=0X43F1CDF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CDF0,	"SEH_43DD6840");
	make_array	(0X43F1CDFA,	0X6);
	create_insn	(x=0X43F1CE00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CE00,	"SEH_43DD7410");
	make_array	(0X43F1CE0A,	0X6);
	create_insn	(x=0X43F1CE10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CE10,	"SEH_43DD7540");
	make_array	(0X43F1CE1A,	0X6);
	create_insn	(x=0X43F1CE20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CE20,	"SEH_43DD7CB0");
	make_array	(0X43F1CE2A,	0X6);
	create_insn	(x=0X43F1CE30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CE30,	"SEH_43DD7F20");
	make_array	(0X43F1CE3A,	0X6);
	create_insn	(x=0X43F1CE40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CE40,	"SEH_43DD8580");
	make_array	(0X43F1CE4A,	0X6);
	create_insn	(x=0X43F1CE50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CE50,	"SEH_43DDD6E0");
	make_array	(0X43F1CE5A,	0X6);
	create_insn	(x=0X43F1CE60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CE60,	"SEH_43DDD8C0");
	make_array	(0X43F1CE6A,	0X6);
	create_insn	(x=0X43F1CE70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CE70,	"SEH_43DDDAC0");
	make_array	(0X43F1CE7A,	0X6);
	create_insn	(x=0X43F1CE80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CE80,	"SEH_43DDEE10");
	make_array	(0X43F1CE8A,	0X6);
	create_insn	(x=0X43F1CE90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CE90,	"SEH_43DE5040");
	make_array	(0X43F1CE9A,	0X6);
	create_insn	(x=0X43F1CEA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CEA0,	"SEH_43DE5180");
	make_array	(0X43F1CEAA,	0X6);
	create_insn	(x=0X43F1CEB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CEB0,	"SEH_43DE81A0");
	make_array	(0X43F1CEBA,	0X6);
	create_insn	(x=0X43F1CEC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CEC0,	"SEH_43DEFB70");
	make_array	(0X43F1CECA,	0X6);
	create_insn	(x=0X43F1CED0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CED0,	"SEH_43DEFDB0");
	make_array	(0X43F1CEDA,	0X6);
	create_insn	(x=0X43F1CEE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CEE0,	"SEH_43DEFF40");
	make_array	(0X43F1CEEA,	0X6);
	create_insn	(x=0X43F1CEF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CEF0,	"SEH_43E01030");
	make_array	(0X43F1CEFA,	0X6);
	create_insn	(x=0X43F1CF00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CF00,	"SEH_43E03E70");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_16(void) {
        auto x;
#define id x

	make_array	(0X43F1CF0A,	0X6);
	create_insn	(x=0X43F1CF10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CF10,	"SEH_43E04070");
	make_array	(0X43F1CF1A,	0X6);
	create_insn	(x=0X43F1CF20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CF20,	"SEH_43E04250");
	make_array	(0X43F1CF2A,	0X6);
	create_insn	(x=0X43F1CF30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CF30,	"SEH_43E04480");
	make_array	(0X43F1CF3A,	0X6);
	create_insn	(x=0X43F1CF40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CF40,	"SEH_43E04670");
	make_array	(0X43F1CF4A,	0X6);
	create_insn	(x=0X43F1CF50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CF50,	"SEH_43E05820");
	make_array	(0X43F1CF5A,	0X6);
	create_insn	(x=0X43F1CF60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CF60,	"SEH_43E07780");
	make_array	(0X43F1CF6A,	0X6);
	create_insn	(x=0X43F1CF70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CF70,	"SEH_43E0B210");
	make_array	(0X43F1CF7A,	0X6);
	create_insn	(x=0X43F1CF80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CF80,	"SEH_43E0EB10");
	make_array	(0X43F1CF8A,	0X6);
	create_insn	(x=0X43F1CF90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CF90,	"SEH_43E0F590");
	make_array	(0X43F1CF9A,	0X6);
	create_insn	(x=0X43F1CFA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CFA0,	"SEH_43E10E10");
	make_array	(0X43F1CFAA,	0X6);
	create_insn	(x=0X43F1CFB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CFB0,	"SEH_43E11040");
	make_array	(0X43F1CFBA,	0X6);
	create_insn	(x=0X43F1CFC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CFC0,	"SEH_43E134E0");
	make_array	(0X43F1CFCA,	0X6);
	create_insn	(x=0X43F1CFD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CFD0,	"SEH_43E13E00");
	make_array	(0X43F1CFDA,	0X6);
	create_insn	(x=0X43F1CFE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CFE0,	"SEH_43E14060");
	make_array	(0X43F1CFEA,	0X6);
	create_insn	(x=0X43F1CFF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1CFF0,	"SEH_43E16730");
	make_array	(0X43F1CFFA,	0X6);
	create_insn	(x=0X43F1D000);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1D000,	"SEH_43E16870");
	make_array	(0X43F1D00A,	0X6);
	create_insn	(x=0X43F1D010);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1D010,	"SEH_43E169B0");
	make_array	(0X43F1D01A,	0X6);
	create_insn	(x=0X43F1D020);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1D020,	"SEH_43E178A0");
	make_array	(0X43F1D02A,	0X6);
	create_insn	(x=0X43F1D030);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1D030,	"SEH_43E18030");
	make_array	(0X43F1D03A,	0X6);
	create_insn	(x=0X43F1D040);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1D040,	"SEH_43E18760");
	make_array	(0X43F1D04A,	0X6);
	create_insn	(x=0X43F1D050);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1D050,	"SEH_43E18970");
	make_array	(0X43F1D05A,	0X6);
	create_insn	(x=0X43F1D060);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X43F1D060,	"SEH_43E196F0");
	make_array	(0X43F1D06A,	0X6);
	create_insn	(0X43F1D070);
	create_insn	(x=0X43F1D075);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D07D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1D094);
	op_hex		(x,	1);
	create_insn	(x=0X43F1D097);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D0A1,	0XF);
	create_insn	(x=0X43F1D0B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D0C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D0CC,	0X4);
	create_insn	(x=0X43F1D0D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D0E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D0EC,	0X4);
	create_insn	(x=0X43F1D0F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D100);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D10C,	0X4);
	create_insn	(0X43F1D110);
	create_insn	(x=0X43F1D115);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D11D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1D134);
	op_hex		(x,	1);
	make_array	(0X43F1D138,	0X8);
	create_insn	(0X43F1D140);
	create_insn	(0X43F1D172);
	create_insn	(x=0X43F1D179);
	op_hex		(x,	1);
	create_insn	(x=0X43F1D1A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D1C1);
	op_hex		(x,	1);
	create_insn	(x=0X43F1D1E0);
	op_hex		(x,	1);
	make_array	(0X43F1D1E4,	0XC);
	create_insn	(0X43F1D1F0);
	create_insn	(x=0X43F1D204);
	op_hex		(x,	1);
	create_insn	(0X43F1D225);
	create_insn	(x=0X43F1D22C);
	op_hex		(x,	1);
	create_insn	(x=0X43F1D250);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D260);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D26C,	0X4);
	create_insn	(x=0X43F1D270);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D27C,	0X4);
	create_insn	(0X43F1D280);
	create_insn	(x=0X43F1D290);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D29C,	0X4);
	create_insn	(x=0X43F1D2A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D2AC,	0X4);
	create_insn	(x=0X43F1D2B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D2BC,	0X4);
	create_insn	(x=0X43F1D2C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D2D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D2DC,	0X4);
	create_insn	(x=0X43F1D2E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D2EC,	0X4);
	create_insn	(0X43F1D2F0);
	create_insn	(x=0X43F1D306);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D31A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D329);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D345,	0XB);
	create_insn	(x=0X43F1D350);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D35A,	0X6);
	create_insn	(x=0X43F1D360);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D36A,	0X6);
	create_insn	(x=0X43F1D370);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D37A,	0X6);
	create_insn	(x=0X43F1D380);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F1D390);
	create_insn	(x=0X43F1D3A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D3AA,	0X6);
	create_insn	(x=0X43F1D3B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D3BA,	0X6);
	create_insn	(x=0X43F1D3C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D3CA,	0X6);
	create_insn	(x=0X43F1D3D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D3FA);
	op_hex		(x,	1);
	create_insn	(x=0X43F1D411);
	op_hex		(x,	1);
	create_insn	(x=0X43F1D414);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D423,	0XD);
	create_insn	(x=0X43F1D430);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D43A,	0X6);
	create_insn	(x=0X43F1D440);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D44A,	0X6);
	create_insn	(0X43F1D450);
	create_insn	(x=0X43F1D464);
	op_hex		(x,	1);
	create_insn	(0X43F1D485);
	create_insn	(x=0X43F1D48C);
	op_hex		(x,	1);
	create_insn	(0X43F1D4B0);
	create_insn	(x=0X43F1D4C4);
	op_hex		(x,	1);
	create_insn	(0X43F1D4E5);
	create_insn	(x=0X43F1D4EC);
	op_hex		(x,	1);
	create_insn	(x=0X43F1D510);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D51A,	0X6);
	create_insn	(x=0X43F1D520);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D52A,	0X6);
	create_insn	(x=0X43F1D530);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D53A,	0X6);
	create_insn	(x=0X43F1D540);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D54A,	0X6);
	create_insn	(x=0X43F1D550);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D55A,	0X6);
	create_insn	(x=0X43F1D560);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D56A,	0X6);
	create_insn	(x=0X43F1D570);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D57A,	0X6);
	create_insn	(x=0X43F1D580);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D58A,	0X6);
	create_insn	(x=0X43F1D590);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D59A,	0X6);
	create_insn	(x=0X43F1D5A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D5AA,	0X6);
	create_insn	(0X43F1D5B0);
	create_insn	(x=0X43F1D5B1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D5C5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D5CF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D5D9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D5E3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D5ED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D618);
	op_hex		(x,	1);
	create_insn	(x=0X43F1D61B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D63D,	0X3);
	create_insn	(0X43F1D640);
	create_insn	(x=0X43F1D645);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D64D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1D664);
	op_hex		(x,	1);
	make_array	(0X43F1D668,	0X8);
	create_insn	(x=0X43F1D670);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D67A,	0X6);
	create_insn	(x=0X43F1D680);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D68A,	0X6);
	create_insn	(x=0X43F1D690);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D69A,	0X6);
	create_insn	(x=0X43F1D6A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F1D6B0);
	create_insn	(x=0X43F1D6C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D6D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D6DA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1D6E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D6E9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D6F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D702);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D754);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D75E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D768);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D772);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D77C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D786);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D790);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D79A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D7A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D7AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D7B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D7C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D7CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D7D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D7E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D7EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D7F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D7FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D808);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D812);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D81C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D826);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D830);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D83A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D844);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D84E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D858);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D862);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D86C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D876);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1D880);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D88A,	0X6);
	create_insn	(0X43F1D890);
	create_insn	(x=0X43F1D8A4);
	op_hex		(x,	1);
	create_insn	(0X43F1D8C5);
	create_insn	(x=0X43F1D8CC);
	op_hex		(x,	1);
	create_insn	(x=0X43F1D8F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D8FA,	0X6);
	create_insn	(x=0X43F1D900);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D90A,	0X6);
	create_insn	(x=0X43F1D910);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D91A,	0X6);
	create_insn	(x=0X43F1D920);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D92A,	0X6);
	create_insn	(x=0X43F1D930);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D93A,	0X6);
	create_insn	(x=0X43F1D940);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D94A,	0X6);
	create_insn	(0X43F1D950);
	create_insn	(x=0X43F1D957);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D972,	0XE);
	create_insn	(x=0X43F1D980);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D98A,	0X6);
	create_insn	(x=0X43F1D990);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D99A,	0X6);
	create_insn	(x=0X43F1D9A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1D9AA,	0X6);
	create_insn	(0X43F1D9B0);
	create_insn	(x=0X43F1D9C4);
	op_hex		(x,	1);
	create_insn	(0X43F1D9E5);
	create_insn	(x=0X43F1D9EC);
	op_hex		(x,	1);
	create_insn	(x=0X43F1DA10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DA1A,	0X6);
	create_insn	(x=0X43F1DA20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DA2A,	0X6);
	create_insn	(x=0X43F1DA30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DA3A,	0X6);
	create_insn	(x=0X43F1DA40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DA4A,	0X6);
	create_insn	(x=0X43F1DA50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DA5A,	0X6);
	create_insn	(x=0X43F1DA60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DA6A,	0X6);
	create_insn	(x=0X43F1DA70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DA7A,	0X6);
	create_insn	(x=0X43F1DA80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DA8A,	0X6);
	create_insn	(0X43F1DA90);
	create_insn	(x=0X43F1DA97);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DAB2,	0XE);
	create_insn	(x=0X43F1DAC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1DAE1);
	op_hex		(x,	1);
	create_insn	(x=0X43F1DAE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DAEE,	0X2);
	create_insn	(0X43F1DAF0);
	create_insn	(x=0X43F1DAF5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1DAFD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1DB14);
	op_hex		(x,	1);
	make_array	(0X43F1DB18,	0X8);
	create_insn	(0X43F1DB20);
	create_insn	(x=0X43F1DB25);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1DB2D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1DB44);
	op_hex		(x,	1);
	make_array	(0X43F1DB48,	0X8);
	create_insn	(x=0X43F1DB50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1DB60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DB6A,	0X6);
	create_insn	(x=0X43F1DB70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DB7A,	0X6);
	create_insn	(x=0X43F1DB80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DB8A,	0X6);
	create_insn	(x=0X43F1DB90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DB9A,	0X6);
	create_insn	(x=0X43F1DBA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DBAA,	0X6);
	create_insn	(x=0X43F1DBB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DBBA,	0X6);
	create_insn	(x=0X43F1DBC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DBCA,	0X6);
	create_insn	(x=0X43F1DBD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DBDA,	0X6);
	create_insn	(x=0X43F1DBE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DBEA,	0X6);
	create_insn	(x=0X43F1DBF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1DC00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DC0A,	0X6);
	create_insn	(x=0X43F1DC10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DC1A,	0X6);
	create_insn	(x=0X43F1DC20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DC2A,	0X6);
	create_insn	(0X43F1DC30);
	create_insn	(x=0X43F1DC37);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DC55,	0XB);
	create_insn	(x=0X43F1DC60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F1DC70);
	create_insn	(0X43F1DCA2);
	create_insn	(x=0X43F1DCA9);
	op_hex		(x,	1);
	create_insn	(0X43F1DCD0);
	create_insn	(0X43F1DD02);
	create_insn	(x=0X43F1DD09);
	op_hex		(x,	1);
	create_insn	(0X43F1DD30);
	create_insn	(0X43F1DD62);
	create_insn	(x=0X43F1DD69);
	op_hex		(x,	1);
	create_insn	(0X43F1DD90);
	create_insn	(x=0X43F1DDA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X43F1DDB0);
	create_insn	(x=0X43F1DDC1);
	op_hex		(x,	1);
	create_insn	(x=0X43F1DDE5);
	op_hex		(x,	1);
	create_insn	(0X43F1DE07);
	create_insn	(0X43F1DE10);
	create_insn	(0X43F1DE20);
	create_insn	(x=0X43F1DE34);
	op_hex		(x,	1);
	create_insn	(0X43F1DE55);
	create_insn	(x=0X43F1DE5C);
	op_hex		(x,	1);
	create_insn	(0X43F1DE80);
	create_insn	(x=0X43F1DE94);
	op_hex		(x,	1);
	create_insn	(0X43F1DEB5);
	create_insn	(x=0X43F1DEBC);
	op_hex		(x,	1);
	create_insn	(x=0X43F1DEE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DEEA,	0X6);
	create_insn	(x=0X43F1DEF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DEFA,	0X6);
	create_insn	(x=0X43F1DF00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DF0A,	0X6);
	create_insn	(x=0X43F1DF10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DF1A,	0X6);
	create_insn	(x=0X43F1DF20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DF2A,	0X6);
	create_insn	(x=0X43F1DF30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DF3A,	0X6);
	create_insn	(0X43F1DF40);
	create_insn	(x=0X43F1DF47);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DF62,	0XE);
	create_insn	(x=0X43F1DF70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DF7A,	0X6);
	create_insn	(x=0X43F1DF80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DF8A,	0X6);
	create_insn	(x=0X43F1DF90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DF9A,	0X6);
	create_insn	(x=0X43F1DFA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DFAA,	0X6);
	create_insn	(x=0X43F1DFB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1DFBA,	0X6);
	create_insn	(x=0X43F1DFC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_byte	(0X43F1DFCA);
	make_array	(0X43F1DFCA,	0X26);
	create_insn	(x=0X43F1DFF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1DFFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1E01B);
	op_hex		(x,	1);
	create_insn	(x=0X43F1E01E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1E03F);
	op_hex		(x,	1);
	create_insn	(x=0X43F1E05E);
	op_hex		(x,	1);
	make_array	(0X43F1E062,	0XE);
	create_insn	(0X43F1E070);
	create_insn	(x=0X43F1E0A2);
	op_hex		(x,	1);
	create_insn	(0X43F1E0C1);
	create_insn	(x=0X43F1E0D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1E0DA,	0X6);
	create_insn	(x=0X43F1E0E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1E0EA,	0X6);
	create_insn	(x=0X43F1E0F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1E0FA,	0X6);
	create_insn	(0X43F1E100);
	create_insn	(x=0X43F1E107);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X43F1E122,	0XE);
	create_insn	(0X43F1E130);
	create_insn	(x=0X43F1E135);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1E140);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X43F1E14B);
	op_hex		(x,	1);
	create_insn	(x=0X43F1E14E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X43F1E158);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(0X43F1E162);
	create_dword	(0X43F1E166);
	create_dword	(0X43F1E16A);
	create_word	(0X43F1E16E);
	create_insn	(0X43F1E170);
	create_insn	(x=0X43F1E1A2);
	op_hex		(x,	1);
	create_insn	(0X43F1E1C1);
	create_insn	(x=0X43F1E1C7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(0X43F1F000);
	create_dword	(0X43F1F004);
	create_byte	(0X43F1F008);
	create_byte	(0X43F1F009);
	make_array	(0X43F1F009,	0X3);
	create_dword	(0X43F1F00C);
	create_byte	(0X43F1F011);
	make_array	(0X43F1F011,	0X3);
	create_byte	(0X43F1F015);
	make_array	(0X43F1F015,	0X3);
	create_dword	(0X43F1F018);
	make_array	(0X43F1F018,	0X2);
	create_dword	(0X43F1F020);
	create_byte	(0X43F1F025);
	make_array	(0X43F1F025,	0X3);
	create_byte	(0X43F1F029);
	make_array	(0X43F1F029,	0X3);
	create_byte	(0X43F1F02D);
	make_array	(0X43F1F02D,	0X3);
	create_byte	(0X43F1F031);
	make_array	(0X43F1F031,	0X3);
	create_byte	(0X43F1F035);
	make_array	(0X43F1F035,	0X3);
	create_dword	(0X43F1F038);
	create_dword	(0X43F1F040);
	make_array	(0X43F1F040,	0X9);
	create_dword	(0X43F1F064);
	create_dword	(0X43F1F068);
	make_array	(0X43F1F068,	0X3);
	create_dword	(0X43F1F074);
	set_name	(0X43F1F074,	"C_SDK::Globals::NtDll::CreateFileA");
	create_byte	(0X43F1F07D);
	make_array	(0X43F1F07D,	0X3);
	create_dword	(0X43F1F080);
	create_dword	(0X43F1F084);
	make_array	(0X43F1F084,	0X9);
	create_byte	(0X43F1F0A9);
	make_array	(0X43F1F0A9,	0X3);
	create_dword	(0X43F1F0AC);
	create_dword	(0X43F1F0B0);
	create_dword	(0X43F1F0B4);
	make_array	(0X43F1F0B4,	0XC);
	create_dword	(0X43F1F0E4);
	create_word	(0X43F1F0EA);
	create_byte	(0X43F1F0ED);
	make_array	(0X43F1F0ED,	0X3);
	create_dword	(0X43F1F0F0);
	make_array	(0X43F1F0F0,	0XB);
	create_dword	(0X43F1F11C);
	create_dword	(x=0X43F1F122);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F126);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F12A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X43F1F12E);
	create_byte	(0X43F1F131);
	make_array	(0X43F1F131,	0X3);
	create_dword	(0X43F1F134);
	make_array	(0X43F1F134,	0XC);
	create_dword	(0X43F1F164);
	create_word	(0X43F1F16A);
	create_byte	(0X43F1F16D);
	make_array	(0X43F1F16D,	0X3);
	create_byte	(0X43F1F171);
	make_array	(0X43F1F171,	0X3);
	create_dword	(0X43F1F174);
	create_dword	(0X43F1F178);
	create_word	(0X43F1F17E);
	create_dword	(0X43F1F180);
	create_dword	(0X43F1F184);
	create_dword	(0X43F1F188);
	make_array	(0X43F1F188,	0X5);
	create_dword	(0X43F1F1A0);
	make_array	(0X43F1F1A0,	0X3);
	create_word	(0X43F1F1AE);
	create_byte	(0X43F1F1B1);
	make_array	(0X43F1F1B1,	0X3);
	create_byte	(0X43F1F1B5);
	make_array	(0X43F1F1B5,	0X3);
	create_byte	(0X43F1F1B9);
	make_array	(0X43F1F1B9,	0X3);
	create_byte	(0X43F1F1BD);
	make_array	(0X43F1F1BD,	0X3);
	create_byte	(0X43F1F1C1);
	make_array	(0X43F1F1C1,	0X3);
	create_dword	(0X43F1F1C4);
	make_array	(0X43F1F1C4,	0X4);
	create_dword	(0X43F1F1D4);
	create_word	(0X43F1F1DA);
	create_dword	(0X43F1F1DC);
	create_dword	(0X43F1F1E0);
	create_dword	(0X43F1F1E4);
	create_word	(0X43F1F1EA);
	make_array	(0X43F1F1EC,	0X4);
	create_word	(0X43F1F1F2);
	create_byte	(0X43F1F1F5);
	make_array	(0X43F1F1F5,	0X3);
	create_byte	(0X43F1F1F9);
	make_array	(0X43F1F1F9,	0X3);
	make_array	(0X43F1F1FC,	0X4);
	create_dword	(0X43F1F200);
	create_word	(0X43F1F206);
	create_dword	(0X43F1F208);
	make_array	(0X43F1F208,	0X3);
	create_word	(0X43F1F216);
	create_dword	(0X43F1F218);
	make_array	(0X43F1F218,	0X12);
	create_byte	(0X43F1F261);
	make_array	(0X43F1F261,	0X3);
	create_byte	(0X43F1F265);
	make_array	(0X43F1F265,	0X3);
	create_byte	(0X43F1F269);
	make_array	(0X43F1F269,	0X3);
	create_dword	(0X43F1F26C);
	make_array	(0X43F1F26C,	0XD);
	create_byte	(0X43F1F2A1);
	make_array	(0X43F1F2A1,	0X3);
	create_byte	(0X43F1F2A5);
	make_array	(0X43F1F2A5,	0X3);
	create_byte	(0X43F1F2A9);
	make_array	(0X43F1F2A9,	0X3);
	create_dword	(0X43F1F2AC);
	make_array	(0X43F1F2AC,	0X4);
	create_dword	(0X43F1F2BC);
	create_dword	(0X43F1F2C0);
	create_dword	(0X43F1F2C4);
	make_array	(0X43F1F2C4,	0XA);
	create_dword	(0X43F1F2EC);
	make_array	(0X43F1F2EC,	0X2);
	create_dword	(0X43F1F2F4);
	create_word	(0X43F1F2FA);
	create_dword	(0X43F1F2FC);
	create_dword	(0X43F1F300);
	create_word	(0X43F1F306);
	create_dword	(0X43F1F308);
	create_byte	(0X43F1F30D);
	make_array	(0X43F1F30D,	0X3);
	create_byte	(0X43F1F311);
	make_array	(0X43F1F311,	0X3);
	create_dword	(0X43F1F314);
	create_dword	(0X43F1F318);
	make_array	(0X43F1F318,	0X2);
	create_word	(0X43F1F322);
	create_word	(0X43F1F326);
	create_dword	(0X43F1F328);
	create_byte	(0X43F1F32D);
	make_array	(0X43F1F32D,	0X3);
	create_dword	(0X43F1F330);
	create_word	(0X43F1F336);
	create_dword	(0X43F1F338);
	create_dword	(x=0X43F1F33C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F1F340);
	set_name	(0X43F1F340,	"load_before_c_list__start");
	create_dword	(x=0X43F1F344);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F348);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F34C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F350);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F354);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F358);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F35C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F360);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F364);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F368);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F36C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F370);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F374);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F378);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F37C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F380);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F384);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F388);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F38C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F390);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F394);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F398);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F39C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F3FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F404);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F40C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F410);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F414);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F418);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F41C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F420);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F424);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F428);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F42C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F430);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F434);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F438);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F43C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F444);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F44C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F450);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F454);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F458);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F45C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F460);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F464);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F468);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F46C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F470);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F474);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F47C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F480);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F484);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F488);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F48C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F494);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F49C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F4FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F500);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F504);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F1F508);
	set_name	(0X43F1F508,	"load_before_c_list__end");
	create_dword	(0X43F1F50C);
	create_dword	(0X43F1F510);
	make_array	(0X43F1F510,	0X8);
	create_dword	(x=0X43F1F530);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F534);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F1F538);
	create_dword	(x=0X43F1F53C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F1F540,	"??_7exception@std@@6B@");
	create_dword	(x=0X43F1F544);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F54C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X43F1F554,	0XF);
	set_name	(0X43F1F554,	"aBadAllocation");
	create_dword	(x=0X43F1F564);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F568);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1F56C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X43F1F570,	0X15);
	set_name	(0X43F1F570,	"aBadArrayNewLen");
	make_array	(0X43F1F585,	0X3);
	MakeStruct	(0X43F1F588,	"_EXCEPTION_POINTERS");
	create_byte	(0X43F1F590);
	create_byte	(0X43F1F591);
	create_byte	(0X43F1F592);
	create_byte	(0X43F1F593);
	create_byte	(0X43F1F594);
	create_byte	(0X43F1F595);
	create_byte	(0X43F1F596);
	create_byte	(0X43F1F597);
	create_byte	(0X43F1F598);
	create_byte	(0X43F1F599);
	create_byte	(0X43F1F59A);
	create_byte	(0X43F1F59B);
	create_byte	(0X43F1F59C);
	create_byte	(0X43F1F59D);
	create_byte	(0X43F1F59E);
	create_byte	(0X43F1F59F);
	create_byte	(0X43F1F5A0);
	create_byte	(0X43F1F5A1);
	create_byte	(0X43F1F5A2);
	create_byte	(0X43F1F5A3);
	create_byte	(0X43F1F5A4);
	create_byte	(0X43F1F5A5);
	create_byte	(0X43F1F5A6);
	create_byte	(0X43F1F5A8);
	create_byte	(0X43F1F5A9);
	create_byte	(0X43F1F5AA);
	create_byte	(0X43F1F5AB);
	create_byte	(0X43F1F5AC);
	create_byte	(0X43F1F5AD);
	create_byte	(0X43F1F5AE);
	create_byte	(0X43F1F5AF);
	create_byte	(0X43F1F5B0);
	create_byte	(0X43F1F5B1);
	create_byte	(0X43F1F5B2);
	create_byte	(0X43F1F5B4);
	create_byte	(0X43F1F5B5);
	create_byte	(0X43F1F5B6);
	create_byte	(0X43F1F5B7);
	create_byte	(0X43F1F5B8);
	create_byte	(0X43F1F5B9);
	create_byte	(0X43F1F5BA);
	create_byte	(0X43F1F5BB);
	create_byte	(0X43F1F5BC);
	create_byte	(0X43F1F5BD);
	create_byte	(0X43F1F5BE);
	create_byte	(0X43F1F5BF);
	create_byte	(0X43F1F5C0);
	make_array	(0X43F1F5C1,	0X3);
	create_byte	(0X43F1F5C4);
	create_byte	(0X43F1F5C5);
	create_byte	(0X43F1F5C6);
	create_byte	(0X43F1F5C7);
	create_byte	(0X43F1F5C8);
	create_byte	(0X43F1F5C9);
	create_byte	(0X43F1F5CA);
	create_byte	(0X43F1F5CB);
	create_byte	(0X43F1F5CC);
	create_byte	(0X43F1F5CD);
	create_byte	(0X43F1F5CE);
	create_byte	(0X43F1F5CF);
	create_byte	(0X43F1F5D0);
	make_array	(0X43F1F5D1,	0X3);
	create_byte	(0X43F1F5D4);
	create_byte	(0X43F1F5D5);
	create_byte	(0X43F1F5D6);
	create_byte	(0X43F1F5D7);
	create_byte	(0X43F1F5D8);
	create_byte	(0X43F1F5D9);
	create_byte	(0X43F1F5DA);
	create_byte	(0X43F1F5DB);
	create_byte	(0X43F1F5DC);
	create_byte	(0X43F1F5DD);
	create_byte	(0X43F1F5DE);
	create_byte	(0X43F1F5DF);
	create_byte	(0X43F1F5E0);
	create_byte	(0X43F1F5E1);
	make_array	(0X43F1F5E2,	0X2);
	create_byte	(0X43F1F5E4);
	create_byte	(0X43F1F5E5);
	create_byte	(0X43F1F5E6);
	create_byte	(0X43F1F5E7);
	create_byte	(0X43F1F5E8);
	create_byte	(0X43F1F5E9);
	create_byte	(0X43F1F5EA);
	create_byte	(0X43F1F5EB);
	create_byte	(0X43F1F5EC);
	create_byte	(0X43F1F5ED);
	create_byte	(0X43F1F5EE);
	create_byte	(0X43F1F5EF);
	create_byte	(0X43F1F5F0);
	make_array	(0X43F1F5F1,	0X3);
	create_byte	(0X43F1F5F4);
	create_byte	(0X43F1F5F5);
	create_byte	(0X43F1F5F6);
	create_byte	(0X43F1F5F7);
	create_byte	(0X43F1F5F8);
	create_byte	(0X43F1F5F9);
	create_byte	(0X43F1F5FA);
	create_byte	(0X43F1F5FB);
	create_byte	(0X43F1F5FC);
	create_byte	(0X43F1F5FD);
	create_byte	(0X43F1F5FE);
	create_byte	(0X43F1F5FF);
	create_byte	(0X43F1F600);
	make_array	(0X43F1F601,	0X3);
	create_byte	(0X43F1F604);
	create_byte	(0X43F1F605);
	create_byte	(0X43F1F606);
	create_byte	(0X43F1F607);
	create_byte	(0X43F1F608);
	create_byte	(0X43F1F609);
	create_byte	(0X43F1F60A);
	create_byte	(0X43F1F60B);
	create_byte	(0X43F1F60C);
	create_byte	(0X43F1F60D);
	create_byte	(0X43F1F60E);
	create_byte	(0X43F1F60F);
	create_byte	(0X43F1F610);
	create_byte	(0X43F1F611);
	create_byte	(0X43F1F612);
	create_byte	(0X43F1F613);
	create_byte	(0X43F1F614);
	make_array	(0X43F1F615,	0X3);
	create_byte	(0X43F1F618);
	create_byte	(0X43F1F619);
	create_byte	(0X43F1F61A);
	create_byte	(0X43F1F61B);
	create_byte	(0X43F1F61C);
	create_byte	(0X43F1F61D);
	create_byte	(0X43F1F61E);
	create_byte	(0X43F1F61F);
	create_byte	(0X43F1F620);
	create_byte	(0X43F1F621);
	create_byte	(0X43F1F622);
	create_byte	(0X43F1F623);
	create_byte	(0X43F1F624);
	make_array	(0X43F1F625,	0X3);
	create_byte	(0X43F1F628);
	create_byte	(0X43F1F629);
	create_byte	(0X43F1F62A);
	create_byte	(0X43F1F62B);
	create_byte	(0X43F1F62C);
	create_byte	(0X43F1F62D);
	create_byte	(0X43F1F62E);
	create_byte	(0X43F1F62F);
	create_byte	(0X43F1F630);
	create_byte	(0X43F1F631);
	create_byte	(0X43F1F632);
	create_byte	(0X43F1F633);
	create_byte	(0X43F1F634);
	create_byte	(0X43F1F635);
	create_byte	(0X43F1F636);
	create_byte	(0X43F1F638);
	create_byte	(0X43F1F639);
	create_byte	(0X43F1F63A);
	create_byte	(0X43F1F63B);
	create_byte	(0X43F1F63C);
	create_byte	(0X43F1F63D);
	create_byte	(0X43F1F63E);
	create_byte	(0X43F1F63F);
	create_byte	(0X43F1F640);
	create_byte	(0X43F1F641);
	create_byte	(0X43F1F642);
	create_byte	(0X43F1F643);
	create_byte	(0X43F1F644);
	make_array	(0X43F1F645,	0X3);
	create_byte	(0X43F1F648);
	create_byte	(0X43F1F649);
	create_byte	(0X43F1F64A);
	create_byte	(0X43F1F64B);
	create_byte	(0X43F1F64C);
	create_byte	(0X43F1F64D);
	create_byte	(0X43F1F64E);
	create_byte	(0X43F1F64F);
	create_byte	(0X43F1F650);
	create_byte	(0X43F1F651);
	create_byte	(0X43F1F652);
	create_byte	(0X43F1F653);
	create_byte	(0X43F1F654);
	create_byte	(0X43F1F655);
	create_byte	(0X43F1F656);
	create_byte	(0X43F1F658);
	create_byte	(0X43F1F659);
	create_byte	(0X43F1F65A);
	create_byte	(0X43F1F65B);
	create_byte	(0X43F1F65C);
	create_byte	(0X43F1F65D);
	create_byte	(0X43F1F65E);
	create_byte	(0X43F1F65F);
	create_byte	(0X43F1F660);
	create_byte	(0X43F1F661);
	create_byte	(0X43F1F662);
	create_byte	(0X43F1F663);
	create_byte	(0X43F1F664);
	create_byte	(0X43F1F665);
	create_byte	(0X43F1F666);
	create_byte	(0X43F1F667);
	create_byte	(0X43F1F668);
	create_byte	(0X43F1F669);
	create_byte	(0X43F1F66A);
	create_byte	(0X43F1F66B);
	create_byte	(0X43F1F66C);
	create_byte	(0X43F1F66D);
	create_byte	(0X43F1F66E);
	create_byte	(0X43F1F66F);
	create_byte	(0X43F1F670);
	create_byte	(0X43F1F671);
	create_byte	(0X43F1F672);
	create_byte	(0X43F1F673);
	create_byte	(0X43F1F674);
	create_byte	(0X43F1F675);
	create_byte	(0X43F1F676);
	create_byte	(0X43F1F677);
	create_byte	(0X43F1F678);
	create_byte	(0X43F1F679);
	create_byte	(0X43F1F67A);
	create_byte	(0X43F1F67B);
	create_byte	(0X43F1F67C);
	create_byte	(0X43F1F67D);
	create_byte	(0X43F1F67E);
	create_byte	(0X43F1F67F);
	create_byte	(0X43F1F680);
	create_byte	(0X43F1F681);
	create_byte	(0X43F1F682);
	create_byte	(0X43F1F683);
	create_byte	(0X43F1F684);
	make_array	(0X43F1F685,	0X3);
	create_byte	(0X43F1F688);
	create_byte	(0X43F1F689);
	create_byte	(0X43F1F68A);
	create_byte	(0X43F1F68B);
	create_byte	(0X43F1F68C);
	create_byte	(0X43F1F68D);
	create_byte	(0X43F1F68E);
	create_byte	(0X43F1F68F);
	create_byte	(0X43F1F690);
	create_byte	(0X43F1F691);
	create_byte	(0X43F1F692);
	create_byte	(0X43F1F693);
	create_byte	(0X43F1F694);
	make_array	(0X43F1F695,	0X3);
	create_byte	(0X43F1F698);
	create_byte	(0X43F1F699);
	create_byte	(0X43F1F69A);
	create_byte	(0X43F1F69B);
	create_byte	(0X43F1F69C);
	create_byte	(0X43F1F69D);
	create_byte	(0X43F1F69E);
	create_byte	(0X43F1F69F);
	create_byte	(0X43F1F6A0);
	create_byte	(0X43F1F6A1);
	create_byte	(0X43F1F6A2);
	create_byte	(0X43F1F6A3);
	create_byte	(0X43F1F6A4);
	create_byte	(0X43F1F6A5);
	create_byte	(0X43F1F6A6);
	create_byte	(0X43F1F6A7);
	create_byte	(0X43F1F6A8);
	create_byte	(0X43F1F6A9);
	create_byte	(0X43F1F6AA);
	create_byte	(0X43F1F6AB);
	create_byte	(0X43F1F6AC);
	create_byte	(0X43F1F6AD);
	create_byte	(0X43F1F6AE);
	create_byte	(0X43F1F6B0);
	create_byte	(0X43F1F6B1);
	create_byte	(0X43F1F6B2);
	create_byte	(0X43F1F6B3);
	create_byte	(0X43F1F6B4);
	create_byte	(0X43F1F6B5);
	create_byte	(0X43F1F6B6);
	create_byte	(0X43F1F6B7);
	create_byte	(0X43F1F6B8);
	create_byte	(0X43F1F6B9);
	create_byte	(0X43F1F6BA);
	create_byte	(0X43F1F6BB);
	create_byte	(0X43F1F6BC);
	make_array	(0X43F1F6BD,	0X3);
	create_byte	(0X43F1F6C0);
	create_byte	(0X43F1F6C1);
	create_byte	(0X43F1F6C2);
	create_byte	(0X43F1F6C3);
	create_byte	(0X43F1F6C4);
	create_byte	(0X43F1F6C5);
	create_byte	(0X43F1F6C6);
	create_byte	(0X43F1F6C7);
	create_byte	(0X43F1F6C8);
	create_byte	(0X43F1F6C9);
	create_byte	(0X43F1F6CA);
	create_byte	(0X43F1F6CC);
	create_byte	(0X43F1F6CD);
	create_byte	(0X43F1F6CE);
	create_byte	(0X43F1F6CF);
	create_byte	(0X43F1F6D0);
	create_byte	(0X43F1F6D1);
	create_byte	(0X43F1F6D2);
	create_byte	(0X43F1F6D3);
	create_byte	(0X43F1F6D4);
	create_byte	(0X43F1F6D5);
	create_byte	(0X43F1F6D6);
	create_byte	(0X43F1F6D7);
	create_byte	(0X43F1F6D8);
	make_array	(0X43F1F6D9,	0X3);
	create_byte	(0X43F1F6DC);
	create_byte	(0X43F1F6DD);
	create_byte	(0X43F1F6DE);
	create_byte	(0X43F1F6DF);
	create_byte	(0X43F1F6E0);
	create_byte	(0X43F1F6E1);
	create_byte	(0X43F1F6E2);
	create_byte	(0X43F1F6E3);
	create_byte	(0X43F1F6E4);
	create_byte	(0X43F1F6E5);
	create_byte	(0X43F1F6E6);
	create_byte	(0X43F1F6E7);
	create_byte	(0X43F1F6E8);
	create_byte	(0X43F1F6E9);
	create_byte	(0X43F1F6EA);
	create_byte	(0X43F1F6EB);
	create_byte	(0X43F1F6EC);
	create_byte	(0X43F1F6ED);
	create_byte	(0X43F1F6EE);
	create_byte	(0X43F1F6EF);
	create_byte	(0X43F1F6F0);
	create_byte	(0X43F1F6F1);
	create_byte	(0X43F1F6F2);
	create_byte	(0X43F1F6F3);
	create_byte	(0X43F1F6F4);
	create_byte	(0X43F1F6F5);
	create_byte	(0X43F1F6F6);
	create_byte	(0X43F1F6F7);
	create_byte	(0X43F1F6F8);
	create_byte	(0X43F1F6F9);
	create_byte	(0X43F1F6FA);
	create_byte	(0X43F1F6FB);
	create_byte	(0X43F1F6FC);
	create_byte	(0X43F1F6FD);
	create_byte	(0X43F1F6FE);
	create_byte	(0X43F1F700);
	create_byte	(0X43F1F701);
	create_byte	(0X43F1F702);
	create_byte	(0X43F1F703);
	create_byte	(0X43F1F704);
	create_byte	(0X43F1F705);
	create_byte	(0X43F1F706);
	create_byte	(0X43F1F707);
	create_byte	(0X43F1F708);
	create_byte	(0X43F1F709);
	create_byte	(0X43F1F70A);
	create_byte	(0X43F1F70B);
	create_byte	(0X43F1F70C);
	create_byte	(0X43F1F70D);
	create_byte	(0X43F1F70E);
	create_byte	(0X43F1F70F);
	create_byte	(0X43F1F710);
	create_byte	(0X43F1F711);
	create_byte	(0X43F1F712);
	create_byte	(0X43F1F713);
	create_byte	(0X43F1F714);
	create_byte	(0X43F1F715);
	create_byte	(0X43F1F716);
	create_byte	(0X43F1F717);
	create_byte	(0X43F1F718);
	create_byte	(0X43F1F719);
	create_byte	(0X43F1F71A);
	create_byte	(0X43F1F71B);
	create_byte	(0X43F1F71C);
	create_byte	(0X43F1F71D);
	create_byte	(0X43F1F71E);
	create_byte	(0X43F1F71F);
	create_byte	(0X43F1F720);
	create_byte	(0X43F1F721);
	create_byte	(0X43F1F722);
	create_byte	(0X43F1F723);
	create_byte	(0X43F1F724);
	create_byte	(0X43F1F725);
	create_byte	(0X43F1F726);
	create_byte	(0X43F1F727);
	create_byte	(0X43F1F728);
	create_byte	(0X43F1F729);
	create_byte	(0X43F1F72A);
	create_byte	(0X43F1F72B);
	create_byte	(0X43F1F72C);
	create_byte	(0X43F1F72D);
	make_array	(0X43F1F72E,	0X2);
	create_byte	(0X43F1F730);
	create_byte	(0X43F1F731);
	create_byte	(0X43F1F732);
	create_byte	(0X43F1F733);
	create_byte	(0X43F1F734);
	create_byte	(0X43F1F735);
	create_byte	(0X43F1F736);
	create_byte	(0X43F1F737);
	create_byte	(0X43F1F738);
	create_byte	(0X43F1F739);
	create_byte	(0X43F1F73A);
	create_byte	(0X43F1F73B);
	create_byte	(0X43F1F73C);
	make_array	(0X43F1F73D,	0X3);
	create_byte	(0X43F1F740);
	create_byte	(0X43F1F741);
	create_byte	(0X43F1F742);
	create_byte	(0X43F1F743);
	create_byte	(0X43F1F744);
	create_byte	(0X43F1F745);
	create_byte	(0X43F1F746);
	create_byte	(0X43F1F747);
	create_byte	(0X43F1F748);
	create_byte	(0X43F1F749);
	create_byte	(0X43F1F74A);
	create_byte	(0X43F1F74B);
	create_byte	(0X43F1F74C);
	make_array	(0X43F1F74D,	0X3);
	create_byte	(0X43F1F750);
	create_byte	(0X43F1F751);
	create_byte	(0X43F1F752);
	create_byte	(0X43F1F753);
	create_byte	(0X43F1F754);
	create_byte	(0X43F1F755);
	create_byte	(0X43F1F756);
	create_byte	(0X43F1F757);
	create_byte	(0X43F1F758);
	create_byte	(0X43F1F759);
	create_byte	(0X43F1F75A);
	create_byte	(0X43F1F75B);
	create_byte	(0X43F1F75C);
	create_byte	(0X43F1F75D);
	create_byte	(0X43F1F75E);
	create_byte	(0X43F1F75F);
	create_byte	(0X43F1F760);
	create_byte	(0X43F1F761);
	create_byte	(0X43F1F762);
	create_byte	(0X43F1F763);
	create_byte	(0X43F1F764);
	create_byte	(0X43F1F765);
	create_byte	(0X43F1F766);
	create_byte	(0X43F1F767);
	create_byte	(0X43F1F768);
	make_array	(0X43F1F769,	0X3);
	create_byte	(0X43F1F76C);
	create_byte	(0X43F1F76D);
	create_byte	(0X43F1F76E);
	create_byte	(0X43F1F76F);
	create_byte	(0X43F1F770);
	create_byte	(0X43F1F771);
	create_byte	(0X43F1F772);
	create_byte	(0X43F1F773);
	create_byte	(0X43F1F774);
	create_byte	(0X43F1F775);
	create_byte	(0X43F1F776);
	create_byte	(0X43F1F777);
	create_byte	(0X43F1F778);
	create_byte	(0X43F1F779);
	create_byte	(0X43F1F77A);
	create_byte	(0X43F1F77B);
	create_byte	(0X43F1F77C);
	create_byte	(0X43F1F77D);
	create_byte	(0X43F1F77E);
	create_byte	(0X43F1F77F);
	create_byte	(0X43F1F780);
	create_byte	(0X43F1F781);
	create_byte	(0X43F1F782);
	create_byte	(0X43F1F783);
	create_byte	(0X43F1F784);
	create_byte	(0X43F1F785);
	create_byte	(0X43F1F786);
	create_byte	(0X43F1F787);
	create_byte	(0X43F1F788);
	create_byte	(0X43F1F789);
	create_byte	(0X43F1F78A);
	create_byte	(0X43F1F78B);
	create_byte	(0X43F1F78C);
	create_byte	(0X43F1F78D);
	make_array	(0X43F1F78E,	0X2);
	create_byte	(0X43F1F790);
	create_byte	(0X43F1F791);
	create_byte	(0X43F1F792);
	create_byte	(0X43F1F793);
	create_byte	(0X43F1F794);
	create_byte	(0X43F1F795);
	create_byte	(0X43F1F796);
	create_byte	(0X43F1F797);
	create_byte	(0X43F1F798);
	create_byte	(0X43F1F799);
	create_byte	(0X43F1F79A);
	create_byte	(0X43F1F79B);
	create_byte	(0X43F1F79C);
	create_byte	(0X43F1F79D);
	create_byte	(0X43F1F79E);
	create_byte	(0X43F1F79F);
	create_byte	(0X43F1F7A0);
	create_byte	(0X43F1F7A1);
	create_byte	(0X43F1F7A2);
	create_byte	(0X43F1F7A3);
	create_byte	(0X43F1F7A4);
	make_array	(0X43F1F7A5,	0X3);
	create_byte	(0X43F1F7A8);
	create_byte	(0X43F1F7A9);
	create_byte	(0X43F1F7AA);
	create_byte	(0X43F1F7AB);
	create_byte	(0X43F1F7AC);
	create_byte	(0X43F1F7AD);
	create_byte	(0X43F1F7AE);
	create_byte	(0X43F1F7AF);
	create_byte	(0X43F1F7B0);
	create_byte	(0X43F1F7B1);
	create_byte	(0X43F1F7B2);
	create_byte	(0X43F1F7B3);
	create_byte	(0X43F1F7B4);
	create_byte	(0X43F1F7B5);
	create_byte	(0X43F1F7B6);
	create_byte	(0X43F1F7B7);
	create_byte	(0X43F1F7B8);
	create_byte	(0X43F1F7B9);
	make_array	(0X43F1F7BA,	0X2);
	create_byte	(0X43F1F7BC);
	create_byte	(0X43F1F7BD);
	create_byte	(0X43F1F7BE);
	create_byte	(0X43F1F7BF);
	create_byte	(0X43F1F7C0);
	create_byte	(0X43F1F7C1);
	create_byte	(0X43F1F7C2);
	create_byte	(0X43F1F7C3);
	create_byte	(0X43F1F7C4);
	create_byte	(0X43F1F7C5);
	create_byte	(0X43F1F7C6);
	create_byte	(0X43F1F7C7);
	create_byte	(0X43F1F7C8);
	create_byte	(0X43F1F7C9);
	create_byte	(0X43F1F7CA);
	create_byte	(0X43F1F7CB);
	create_byte	(0X43F1F7CC);
	make_array	(0X43F1F7CD,	0X3);
	create_strlit	(0X43F1F7D0,	0X13);
	set_name	(0X43F1F7D0,	"aWeaponKnifeKar");
	create_byte	(0X43F1F7E4);
	create_byte	(0X43F1F7E5);
	create_byte	(0X43F1F7E6);
	create_byte	(0X43F1F7E7);
	create_byte	(0X43F1F7E8);
	create_byte	(0X43F1F7E9);
	create_byte	(0X43F1F7EA);
	create_byte	(0X43F1F7EB);
	create_byte	(0X43F1F7EC);
	create_byte	(0X43F1F7ED);
	create_byte	(0X43F1F7EE);
	create_byte	(0X43F1F7EF);
	create_byte	(0X43F1F7F0);
	create_byte	(0X43F1F7F1);
	create_byte	(0X43F1F7F2);
	create_byte	(0X43F1F7F3);
	create_byte	(0X43F1F7F4);
	create_byte	(0X43F1F7F5);
	create_byte	(0X43F1F7F6);
	create_byte	(0X43F1F7F7);
	create_byte	(0X43F1F7F8);
	create_byte	(0X43F1F7F9);
	create_byte	(0X43F1F7FA);
	create_byte	(0X43F1F7FB);
	create_byte	(0X43F1F7FC);
	create_byte	(0X43F1F7FD);
	create_byte	(0X43F1F7FE);
	create_byte	(0X43F1F7FF);
	create_byte	(0X43F1F800);
	create_byte	(0X43F1F801);
	create_byte	(0X43F1F802);
	create_byte	(0X43F1F803);
	create_byte	(0X43F1F804);
	create_byte	(0X43F1F805);
	create_byte	(0X43F1F806);
	create_byte	(0X43F1F807);
	create_byte	(0X43F1F808);
	create_byte	(0X43F1F809);
	create_byte	(0X43F1F80A);
	create_byte	(0X43F1F80B);
	create_byte	(0X43F1F80C);
	create_byte	(0X43F1F80D);
	create_byte	(0X43F1F80E);
	create_byte	(0X43F1F80F);
	create_byte	(0X43F1F810);
	create_byte	(0X43F1F811);
	create_byte	(0X43F1F812);
	create_byte	(0X43F1F814);
	create_byte	(0X43F1F815);
	create_byte	(0X43F1F816);
	create_byte	(0X43F1F817);
	create_byte	(0X43F1F818);
	create_byte	(0X43F1F819);
	create_byte	(0X43F1F81A);
	create_byte	(0X43F1F81B);
	create_byte	(0X43F1F81C);
	create_byte	(0X43F1F81D);
	create_byte	(0X43F1F81E);
	create_byte	(0X43F1F81F);
	create_byte	(0X43F1F820);
	create_byte	(0X43F1F821);
	create_byte	(0X43F1F822);
	create_byte	(0X43F1F823);
	create_byte	(0X43F1F824);
	create_byte	(0X43F1F825);
	create_byte	(0X43F1F826);
	create_byte	(0X43F1F827);
	create_byte	(0X43F1F828);
	create_byte	(0X43F1F829);
	make_array	(0X43F1F82A,	0X2);
	create_byte	(0X43F1F82C);
	create_byte	(0X43F1F82D);
	create_byte	(0X43F1F82E);
	create_byte	(0X43F1F82F);
	create_byte	(0X43F1F830);
	create_byte	(0X43F1F831);
	create_byte	(0X43F1F832);
	create_byte	(0X43F1F833);
	create_byte	(0X43F1F834);
	create_byte	(0X43F1F835);
	create_byte	(0X43F1F836);
	create_byte	(0X43F1F837);
	create_byte	(0X43F1F838);
	create_byte	(0X43F1F839);
	create_byte	(0X43F1F83A);
	create_byte	(0X43F1F83B);
	create_byte	(0X43F1F83C);
	create_byte	(0X43F1F83D);
	create_byte	(0X43F1F83E);
	create_byte	(0X43F1F83F);
	create_byte	(0X43F1F840);
	create_byte	(0X43F1F841);
	create_byte	(0X43F1F842);
	create_byte	(0X43F1F843);
	create_byte	(0X43F1F844);
	create_byte	(0X43F1F845);
	create_byte	(0X43F1F846);
	create_byte	(0X43F1F847);
	create_byte	(0X43F1F848);
	make_array	(0X43F1F849,	0X3);
	create_byte	(0X43F1F84C);
	create_byte	(0X43F1F84D);
	create_byte	(0X43F1F84E);
	create_byte	(0X43F1F84F);
	create_byte	(0X43F1F850);
	create_byte	(0X43F1F851);
	create_byte	(0X43F1F852);
	create_byte	(0X43F1F853);
	create_byte	(0X43F1F854);
	create_byte	(0X43F1F855);
	create_byte	(0X43F1F856);
	create_byte	(0X43F1F857);
	create_byte	(0X43F1F858);
	create_byte	(0X43F1F859);
	create_byte	(0X43F1F85A);
	create_byte	(0X43F1F85B);
	create_byte	(0X43F1F85C);
	create_byte	(0X43F1F85D);
	make_array	(0X43F1F85E,	0X2);
	create_byte	(0X43F1F860);
	create_byte	(0X43F1F861);
	create_byte	(0X43F1F862);
	create_byte	(0X43F1F863);
	create_byte	(0X43F1F864);
	create_byte	(0X43F1F865);
	create_byte	(0X43F1F866);
	create_byte	(0X43F1F867);
	create_byte	(0X43F1F868);
	create_byte	(0X43F1F869);
	create_byte	(0X43F1F86A);
	create_byte	(0X43F1F86B);
	create_byte	(0X43F1F86C);
	create_byte	(0X43F1F86D);
	create_byte	(0X43F1F86E);
	create_byte	(0X43F1F86F);
	create_byte	(0X43F1F870);
	create_byte	(0X43F1F871);
	create_byte	(0X43F1F872);
	create_byte	(0X43F1F873);
	create_byte	(0X43F1F874);
	create_byte	(0X43F1F875);
	make_array	(0X43F1F876,	0X2);
	create_byte	(0X43F1F878);
	create_byte	(0X43F1F879);
	create_byte	(0X43F1F87A);
	create_byte	(0X43F1F87B);
	create_byte	(0X43F1F87C);
	create_byte	(0X43F1F87D);
	create_byte	(0X43F1F87E);
	create_byte	(0X43F1F87F);
	create_byte	(0X43F1F880);
	create_byte	(0X43F1F881);
	create_byte	(0X43F1F882);
	create_byte	(0X43F1F883);
	create_byte	(0X43F1F884);
	create_byte	(0X43F1F885);
	create_byte	(0X43F1F886);
	create_byte	(0X43F1F887);
	create_byte	(0X43F1F888);
	create_byte	(0X43F1F889);
	create_byte	(0X43F1F88A);
	create_byte	(0X43F1F88B);
	create_byte	(0X43F1F88C);
	create_byte	(0X43F1F88D);
	create_byte	(0X43F1F88E);
	create_byte	(0X43F1F88F);
	create_byte	(0X43F1F890);
	create_byte	(0X43F1F891);
	create_byte	(0X43F1F892);
	create_byte	(0X43F1F893);
	create_byte	(0X43F1F894);
	create_byte	(0X43F1F895);
	create_byte	(0X43F1F896);
	create_byte	(0X43F1F897);
	create_byte	(0X43F1F898);
	create_byte	(0X43F1F899);
	create_byte	(0X43F1F89A);
	create_byte	(0X43F1F89B);
	create_byte	(0X43F1F89C);
	create_byte	(0X43F1F89D);
	create_byte	(0X43F1F89E);
	create_byte	(0X43F1F89F);
	create_byte	(0X43F1F8A0);
	create_byte	(0X43F1F8A1);
	create_byte	(0X43F1F8A2);
	create_byte	(0X43F1F8A3);
	create_byte	(0X43F1F8A4);
	create_byte	(0X43F1F8A5);
	create_byte	(0X43F1F8A6);
	create_byte	(0X43F1F8A7);
	create_byte	(0X43F1F8A8);
	create_byte	(0X43F1F8A9);
	make_array	(0X43F1F8AA,	0X2);
	create_byte	(0X43F1F8AC);
	create_byte	(0X43F1F8AD);
	create_byte	(0X43F1F8AE);
	create_byte	(0X43F1F8AF);
	create_byte	(0X43F1F8B0);
	create_byte	(0X43F1F8B1);
	create_byte	(0X43F1F8B2);
	create_byte	(0X43F1F8B3);
	create_byte	(0X43F1F8B4);
	create_byte	(0X43F1F8B5);
	create_byte	(0X43F1F8B6);
	create_byte	(0X43F1F8B7);
	create_byte	(0X43F1F8B8);
	create_byte	(0X43F1F8B9);
	create_byte	(0X43F1F8BA);
	create_byte	(0X43F1F8BB);
	create_byte	(0X43F1F8BC);
	create_byte	(0X43F1F8BD);
	create_byte	(0X43F1F8BE);
	create_byte	(0X43F1F8BF);
	create_byte	(0X43F1F8C0);
	create_byte	(0X43F1F8C1);
	create_byte	(0X43F1F8C2);
	create_byte	(0X43F1F8C3);
	create_byte	(0X43F1F8C4);
	create_byte	(0X43F1F8C5);
	create_byte	(0X43F1F8C6);
	create_byte	(0X43F1F8C7);
	create_byte	(0X43F1F8C8);
	create_byte	(0X43F1F8C9);
	create_byte	(0X43F1F8CA);
	create_byte	(0X43F1F8CB);
	create_byte	(0X43F1F8CC);
	create_byte	(0X43F1F8CD);
	create_byte	(0X43F1F8CE);
	create_byte	(0X43F1F8CF);
	create_byte	(0X43F1F8D0);
	create_byte	(0X43F1F8D1);
	create_byte	(0X43F1F8D2);
	create_byte	(0X43F1F8D3);
	create_byte	(0X43F1F8D4);
	create_byte	(0X43F1F8D5);
	create_byte	(0X43F1F8D6);
	create_byte	(0X43F1F8D8);
	create_byte	(0X43F1F8D9);
	create_byte	(0X43F1F8DA);
	create_byte	(0X43F1F8DB);
	create_byte	(0X43F1F8DC);
	create_byte	(0X43F1F8DD);
	create_byte	(0X43F1F8DE);
	create_strlit	(0X43F1F8E0,	0XD);
	set_name	(0X43F1F8E0,	"aWeaponKnife");
	make_array	(0X43F1F8ED,	0X3);
	create_byte	(0X43F1F8F0);
	create_byte	(0X43F1F8F1);
	create_byte	(0X43F1F8F2);
	create_byte	(0X43F1F8F3);
	create_byte	(0X43F1F8F4);
	make_array	(0X43F1F8F5,	0X3);
	create_dword	(0X43F1F8F8);
	create_dword	(0X43F1F8FC);
	create_byte	(0X43F1F900);
	create_byte	(0X43F1F901);
	create_byte	(0X43F1F902);
	create_byte	(0X43F1F903);
	create_byte	(0X43F1F904);
	create_byte	(0X43F1F905);
	make_array	(0X43F1F906,	0X2);
	create_strlit	(0X43F1F908,	0X5);
	set_name	(0X43F1F908,	"aCz75");
	make_array	(0X43F1F90D,	0X3);
	create_byte	(x=0X43F1F910);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F911);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F912);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F913);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F914);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F915);
	op_chr		(x,	0);
	create_byte	(0X43F1F916);
	create_byte	(x=0X43F1F918);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F919);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F91A);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F91B);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F91C);
	op_chr		(x,	0);
	create_word	(0X43F1F91D);
	create_byte	(0X43F1F91F);
	create_byte	(x=0X43F1F920);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F921);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F922);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F923);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F924);
	op_chr		(x,	0);
	create_word	(0X43F1F925);
	create_byte	(0X43F1F927);
	create_byte	(x=0X43F1F928);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F929);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F92A);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F92B);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F92C);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F92D);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F92E);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F92F);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F930);
	op_chr		(x,	0);
	create_byte	(x=0X43F1F931);
	op_chr		(x,	0);
	create_word	(0X43F1F932);
	create_byte	(0X43F1F934);
	create_byte	(0X43F1F935);
	create_byte	(0X43F1F936);
	create_byte	(0X43F1F937);
	create_byte	(0X43F1F938);
	create_byte	(0X43F1F939);
	make_array	(0X43F1F93A,	0X2);
	create_byte	(0X43F1F93C);
	create_byte	(0X43F1F93D);
	create_byte	(0X43F1F93E);
	create_byte	(0X43F1F93F);
	create_byte	(0X43F1F940);
	create_byte	(0X43F1F941);
	make_array	(0X43F1F942,	0X2);
	create_byte	(0X43F1F944);
	create_byte	(0X43F1F945);
	create_byte	(0X43F1F946);
	create_byte	(0X43F1F947);
	create_byte	(0X43F1F948);
	create_byte	(0X43F1F949);
	make_array	(0X43F1F94A,	0X2);
	create_byte	(0X43F1F94C);
	create_dword	(0X43F1F950);
	create_byte	(0X43F1F954);
	create_byte	(0X43F1F955);
	create_byte	(0X43F1F956);
	create_byte	(0X43F1F957);
	create_byte	(0X43F1F958);
	make_array	(0X43F1F959,	0X3);
	create_strlit	(0X43F1F95C,	0X5);
	set_name	(0X43F1F95C,	"aM4a4");
	make_array	(0X43F1F961,	0X3);
	create_strlit	(0X43F1F964,	0X7);
	set_name	(0X43F1F964,	"aM4a1S");
	create_strlit	(0X43F1F96C,	0X6);
	set_name	(0X43F1F96C,	"aMac10");
	make_array	(0X43F1F972,	0X2);
	create_byte	(0X43F1F974);
	create_byte	(0X43F1F975);
	create_byte	(0X43F1F976);
	create_byte	(0X43F1F977);
	create_byte	(0X43F1F978);
	make_array	(0X43F1F979,	0X3);
	create_dword	(0X43F1F97C);
	create_strlit	(0X43F1F980,	0X7);
	set_name	(0X43F1F980,	"aMp5Sd");
	create_dword	(0X43F1F988);
	create_byte	(0X43F1F98C);
	create_byte	(0X43F1F98D);
	create_byte	(0X43F1F98E);
	create_byte	(0X43F1F98F);
	create_byte	(0X43F1F990);
	create_byte	(0X43F1F991);
	make_array	(0X43F1F992,	0X2);
	create_byte	(0X43F1F994);
	create_byte	(0X43F1F995);
	create_byte	(0X43F1F996);
	create_byte	(0X43F1F997);
	create_byte	(0X43F1F998);
	make_array	(0X43F1F999,	0X3);
	create_byte	(0X43F1F99C);
	create_byte	(0X43F1F99D);
	create_byte	(0X43F1F99E);
	create_byte	(0X43F1F99F);
	create_byte	(0X43F1F9A0);
	make_array	(0X43F1F9A1,	0X3);
	create_dword	(0X43F1F9A4);
	create_byte	(0X43F1F9A8);
	create_byte	(0X43F1F9A9);
	create_byte	(0X43F1F9AA);
	create_byte	(0X43F1F9AB);
	create_byte	(0X43F1F9AC);
	create_byte	(0X43F1F9AD);
	create_byte	(0X43F1F9AE);
	create_byte	(0X43F1F9AF);
	create_byte	(0X43F1F9B0);
	make_array	(0X43F1F9B1,	0X3);
	create_strlit	(0X43F1F9B6,	0X8);
	set_name	(0X43F1F9B6,	"aWedOff");
	make_array	(0X43F1F9BE,	0X2);
	create_strlit	(0X43F1F9C0,	0X7);
	set_name	(0X43F1F9C0,	"aScar20");
	create_strlit	(0X43F1F9C8,	0X6);
	set_name	(0X43F1F9C8,	"aSg556");
	make_array	(0X43F1F9CE,	0X2);
	create_byte	(0X43F1F9D0);
	create_byte	(0X43F1F9D1);
	create_byte	(0X43F1F9D2);
	create_byte	(0X43F1F9D3);
	create_byte	(0X43F1F9D4);
	create_byte	(0X43F1F9D5);
	make_array	(0X43F1F9D6,	0X2);
	create_strlit	(0X43F1F9D8,	0X5);
	set_name	(0X43F1F9D8,	"aTec9");
	make_array	(0X43F1F9DD,	0X3);
	create_byte	(0X43F1F9E0);
	create_byte	(0X43F1F9E1);
	create_byte	(0X43F1F9E2);
	create_byte	(0X43F1F9E3);
	create_byte	(0X43F1F9E4);
	create_byte	(0X43F1F9E5);
	make_array	(0X43F1F9E6,	0X2);
	create_strlit	(0X43F1F9E9,	0X5);
	set_name	(0X43F1F9E9,	"aSpS");
	make_array	(0X43F1F9EE,	0X2);
	create_byte	(0X43F1F9F0);
	create_byte	(0X43F1F9F1);
	create_byte	(0X43F1F9F2);
	create_byte	(0X43F1F9F3);
	create_byte	(0X43F1F9F4);
	create_byte	(0X43F1F9F5);
	create_byte	(0X43F1F9F6);
	create_byte	(0X43F1F9F8);
	create_byte	(0X43F1F9F9);
	create_byte	(0X43F1F9FA);
	create_byte	(0X43F1F9FB);
	create_byte	(0X43F1F9FC);
	create_byte	(0X43F1F9FD);
	create_byte	(0X43F1F9FE);
	create_byte	(0X43F1F9FF);
	create_byte	(0X43F1FA00);
	create_byte	(0X43F1FA01);
	create_byte	(0X43F1FA02);
	create_byte	(0X43F1FA03);
	create_byte	(0X43F1FA04);
	make_array	(0X43F1FA05,	0X3);
	create_byte	(0X43F1FA08);
	create_byte	(0X43F1FA09);
	create_byte	(0X43F1FA0A);
	create_byte	(0X43F1FA0B);
	create_byte	(0X43F1FA0C);
	create_byte	(0X43F1FA0D);
	create_byte	(0X43F1FA0E);
	create_byte	(0X43F1FA0F);
	create_byte	(0X43F1FA10);
	create_byte	(0X43F1FA11);
	create_byte	(0X43F1FA12);
	create_byte	(0X43F1FA13);
	create_byte	(0X43F1FA14);
	make_array	(0X43F1FA15,	0X3);
	create_byte	(0X43F1FA18);
	create_byte	(0X43F1FA19);
	create_byte	(0X43F1FA1A);
	create_byte	(0X43F1FA1B);
	create_byte	(0X43F1FA1C);
	create_byte	(0X43F1FA1D);
	create_byte	(0X43F1FA1E);
	create_byte	(0X43F1FA1F);
	create_byte	(0X43F1FA20);
	create_byte	(0X43F1FA21);
	create_byte	(0X43F1FA22);
	create_byte	(0X43F1FA24);
	create_byte	(0X43F1FA25);
	create_byte	(0X43F1FA26);
	create_byte	(0X43F1FA27);
	create_byte	(0X43F1FA28);
	create_byte	(0X43F1FA29);
	create_byte	(0X43F1FA2A);
	create_byte	(0X43F1FA2B);
	create_byte	(0X43F1FA2C);
	create_byte	(0X43F1FA2D);
	make_array	(0X43F1FA2E,	0X2);
	create_byte	(0X43F1FA30);
	create_byte	(0X43F1FA31);
	create_byte	(0X43F1FA32);
	create_byte	(0X43F1FA33);
	create_byte	(0X43F1FA34);
	create_byte	(0X43F1FA35);
	create_byte	(0X43F1FA36);
	create_byte	(0X43F1FA37);
	create_byte	(0X43F1FA38);
	make_array	(0X43F1FA39,	0X3);
	create_byte	(0X43F1FA3C);
	create_byte	(0X43F1FA3D);
	create_byte	(0X43F1FA3E);
	create_byte	(0X43F1FA3F);
	create_byte	(0X43F1FA40);
	create_byte	(0X43F1FA41);
	create_byte	(0X43F1FA42);
	create_byte	(0X43F1FA44);
	create_byte	(0X43F1FA45);
	create_byte	(0X43F1FA46);
	create_byte	(0X43F1FA47);
	create_byte	(0X43F1FA48);
	create_byte	(0X43F1FA49);
	create_byte	(0X43F1FA4A);
	create_byte	(0X43F1FA4B);
	create_byte	(0X43F1FA4C);
	create_byte	(0X43F1FA4D);
	create_byte	(0X43F1FA4E);
	create_byte	(0X43F1FA4F);
	create_byte	(0X43F1FA50);
	create_byte	(0X43F1FA51);
	create_byte	(0X43F1FA52);
	create_byte	(0X43F1FA54);
	create_byte	(0X43F1FA55);
	create_byte	(0X43F1FA56);
	create_byte	(0X43F1FA57);
	create_byte	(0X43F1FA58);
	create_byte	(0X43F1FA59);
	create_byte	(0X43F1FA5A);
	create_byte	(0X43F1FA5B);
	create_byte	(0X43F1FA5C);
	make_array	(0X43F1FA5D,	0X3);
	create_byte	(0X43F1FA60);
	create_byte	(0X43F1FA61);
	create_byte	(0X43F1FA62);
	create_byte	(0X43F1FA63);
	create_byte	(0X43F1FA64);
	create_byte	(0X43F1FA65);
	make_array	(0X43F1FA66,	0X2);
	create_byte	(0X43F1FA68);
	create_byte	(0X43F1FA69);
	create_byte	(0X43F1FA6A);
	create_byte	(0X43F1FA6B);
	create_byte	(0X43F1FA6C);
	create_byte	(0X43F1FA6D);
	create_byte	(0X43F1FA6E);
	create_byte	(0X43F1FA6F);
	create_byte	(0X43F1FA70);
	make_array	(0X43F1FA71,	0X3);
	create_byte	(0X43F1FA74);
	create_byte	(0X43F1FA75);
	create_byte	(0X43F1FA76);
	create_byte	(0X43F1FA77);
	create_byte	(0X43F1FA78);
	create_byte	(0X43F1FA79);
	make_array	(0X43F1FA7A,	0X2);
	create_byte	(0X43F1FA7C);
	create_byte	(0X43F1FA7D);
	create_byte	(0X43F1FA7E);
	create_byte	(0X43F1FA7F);
	create_byte	(0X43F1FA80);
	create_byte	(0X43F1FA81);
	make_array	(0X43F1FA82,	0X2);
	create_dword	(x=0X43F1FA84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FA88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FA8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FA90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FA94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FA98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FA9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FAA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FAA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FAA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FAAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FAB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FAB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FAB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FABC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FAC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FAC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FAC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FACC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FAD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FAD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FAD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FADC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FAE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X43F1FAE4,	0X13);
	set_name	(0X43F1FAE4,	"aVectorTTooLong");
	create_strlit	(0X43F1FAF8,	0X1C);
	set_name	(0X43F1FAF8,	"aInvalidVectorT");
	create_strlit	(0X43F1FB14,	0X1B);
	set_name	(0X43F1FB14,	"aInvalidDequeTS");
	create_dword	(x=0X43F1FB30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FB34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X43F1FB38,	0X10);
	set_name	(0X43F1FB38,	"aStringTooLong");
	create_strlit	(0X43F1FB48,	0X18);
	set_name	(0X43F1FB48,	"aInvalidStringP");
	create_dword	(x=0X43F1FB60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FB64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FB68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F1FB6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(x=0X43F1FB70);
	make_array	(x,	0X41);
	op_chr		(x,	0);
	set_name	(0X43F1FB70,	"C_SDK::Security::Base64::Table");
	make_array	(0X43F1FBB1,	0X3);
	create_strlit	(0X43F1FBB4,	0X12);
	set_name	(0X43F1FBB4,	"aDequeTTooLong");
	make_array	(0X43F1FBC6,	0XA);
	create_strlit	(0X43F1FBD0,	0X19);
	set_name	(0X43F1FBD0,	"aSpritesPurplel");
	make_array	(0X43F1FBE9,	0X3);
	create_strlit	(0X43F1FBEC,	0X15);
	set_name	(0X43F1FBEC,	"aSpritesPhysbea");
	make_array	(0X43F1FC01,	0XF);
	create_dword	(0X43F1FC10);
	set_name	(0X43F1FC10,	"C_SDK::Globals::CRC32::Table");
	create_dword	(0X43F1FC14);
	create_dword	(0X43F1FC18);
	create_dword	(0X43F1FC1C);
	create_dword	(0X43F1FC20);
	create_dword	(0X43F1FC24);
	create_dword	(0X43F1FC28);
	create_dword	(0X43F1FC2C);
	create_dword	(0X43F1FC30);
	create_dword	(0X43F1FC34);
	create_dword	(0X43F1FC38);
	create_dword	(0X43F1FC3C);
	create_word	(0X43F1FC40);
	create_dword	(0X43F20024);
	make_array	(0X43F20024,	0X5);
	create_dword	(0X43F20038);
	make_array	(0X43F20038,	0X5);
	create_dword	(0X43F2004C);
	make_array	(0X43F2004C,	0X2);
	create_byte	(0X43F20055);
	make_array	(0X43F20055,	0X3);
	create_byte	(0X43F20059);
	make_array	(0X43F20059,	0X3);
	create_dword	(0X43F205D0);
	create_dword	(0X43F205D4);
	create_dword	(0X43F205D8);
	create_dword	(0X43F205DC);
	create_dword	(0X43F205E0);
	make_array	(0X43F205E0,	0X5);
	create_dword	(0X43F205F4);
	make_array	(0X43F205F4,	0X5);
	create_dword	(0X43F20608);
	make_array	(0X43F20608,	0X200);
	create_dword	(0X43F20E08);
	make_array	(0X43F20E08,	0X209);
	create_dword	(0X43F2162C);
	make_array	(0X43F2162C,	0X215);
	create_dword	(0X43F21E80);
	make_array	(0X43F21E80,	0X200);
	create_dword	(0X43F22680);
	make_array	(0X43F22680,	0X204);
	create_dword	(0X43F22E90);
	make_array	(0X43F22E90,	0X202);
	create_dword	(0X43F23698);
	make_array	(0X43F23698,	0X21D);
	create_dword	(0X43F23F0C);
	make_array	(0X43F23F0C,	0X202);
	create_dword	(0X43F24714);
	make_array	(0X43F24714,	0X205);
	create_dword	(0X43F24F28);
	make_array	(0X43F24F28,	0X201);
	create_dword	(0X43F2572C);
	make_array	(0X43F2572C,	0X200);
	create_dword	(0X43F25F2C);
	make_array	(0X43F25F2C,	0X200);
	create_dword	(0X43F2672C);
	make_array	(0X43F2672C,	0X202);
	create_dword	(0X43F26F34);
	make_array	(0X43F26F34,	0X201);
	create_dword	(0X43F27738);
	create_dword	(0X43F2773C);
	create_dword	(0X43F27740);
	create_dword	(0X43F27744);
	create_dword	(0X43F27748);
	create_dword	(0X43F2774C);
	create_dword	(0X43F27750);
	create_dword	(0X43F27754);
	create_dword	(0X43F27758);
	create_dword	(0X43F2775C);
	create_dword	(0X43F27760);
	create_dword	(0X43F27764);
	create_dword	(0X43F27768);
	create_dword	(0X43F2776C);
	create_dword	(0X43F27770);
	create_dword	(0X43F27774);
	create_dword	(0X43F27778);
	create_dword	(0X43F2777C);
	create_dword	(0X43F27780);
	create_dword	(0X43F27784);
	create_dword	(0X43F27F3C);
	make_array	(0X43F27F3C,	0X200);
	create_dword	(0X43F2873C);
	make_array	(0X43F2873C,	0X200);
	create_dword	(0X43F28F3C);
	make_array	(0X43F28F3C,	0X201);
	create_dword	(0X43F29740);
	make_array	(0X43F29740,	0X200);
	create_dword	(0X43F29F40);
	make_array	(0X43F29F40,	0X201);
	create_dword	(0X43F2A744);
	make_array	(0X43F2A744,	0X200);
	create_dword	(0X43F2AF44);
	make_array	(0X43F2AF44,	0X200);
	create_dword	(0X43F2B744);
	make_array	(0X43F2B744,	0X200);
	create_dword	(0X43F2BF44);
	make_array	(0X43F2BF44,	0X200);
	create_dword	(0X43F2C744);
	make_array	(0X43F2C744,	0X201);
	create_dword	(0X43F2CF48);
	make_array	(0X43F2CF48,	0X201);
	create_dword	(0X43F2D74C);
	make_array	(0X43F2D74C,	0X200);
	create_dword	(0X43F2DF4C);
	make_array	(0X43F2DF4C,	0X201);
	create_dword	(0X43F2E750);
	make_array	(0X43F2E750,	0X202);
	create_dword	(0X43F2EF58);
	make_array	(0X43F2EF58,	0X201);
	create_dword	(0X43F2F75C);
	make_array	(0X43F2F75C,	0X205);
	create_dword	(0X43F2FF70);
	make_array	(0X43F2FF70,	0X200);
	create_dword	(0X43F30770);
	make_array	(0X43F30770,	0X201);
	create_dword	(0X43F30F74);
	make_array	(0X43F30F74,	0X202);
	create_dword	(0X43F3177C);
	make_array	(0X43F3177C,	0X206);
	create_dword	(0X43F31F94);
	make_array	(0X43F31F94,	0X202);
	create_dword	(0X43F3279C);
	make_array	(0X43F3279C,	0X203);
	create_dword	(0X43F32FA8);
	make_array	(0X43F32FA8,	0X200);
	create_dword	(0X43F337A8);
	make_array	(0X43F337A8,	0X200);
	create_dword	(0X43F33FA8);
	make_array	(0X43F33FA8,	0X201);
	create_dword	(0X43F347AC);
	make_array	(0X43F347AC,	0X203);
	create_dword	(0X43F34FB8);
	make_array	(0X43F34FB8,	0X200);
	create_dword	(0X43F357B8);
	make_array	(0X43F357B8,	0X204);
	create_dword	(0X43F35FC8);
	make_array	(0X43F35FC8,	0X204);
	create_dword	(0X43F367D8);
	make_array	(0X43F367D8,	0X200);
	create_dword	(0X43F36FD8);
	make_array	(0X43F36FD8,	0X203);
	create_dword	(0X43F377E4);
	make_array	(0X43F377E4,	0X200);
	create_dword	(0X43F37FE4);
	make_array	(0X43F37FE4,	0X200);
	create_dword	(0X43F387E4);
	make_array	(0X43F387E4,	0X207);
	create_dword	(0X43F39000);
	make_array	(0X43F39000,	0X201);
	create_dword	(0X43F39804);
	make_array	(0X43F39804,	0X203);
	create_dword	(0X43F3A010);
	make_array	(0X43F3A010,	0X12B);
	create_byte	(0X43F3A4BD);
	make_array	(0X43F3A4BD,	0X3);
	create_dword	(0X43F3A4C0);
	create_dword	(0X43F3A4C4);
	make_array	(0X43F3A4C4,	0X6);
	create_dword	(0X43F3A4DC);
	make_array	(0X43F3A4DC,	0X4);
	create_word	(0X43F3A4EE);
	create_dword	(0X43F3A4F0);
	make_array	(0X43F3A4F0,	0X3);
	create_dword	(0X43F3A4FC);
	make_array	(0X43F3A4FC,	0X5);
	create_byte	(0X43F3A511);
	make_array	(0X43F3A511,	0X3);
	create_byte	(0X43F3A515);
	make_array	(0X43F3A515,	0X3);
	create_byte	(0X43F3A519);
	make_array	(0X43F3A519,	0X3);
	create_dword	(0X43F3A51C);
	make_array	(0X43F3A51C,	0X3B);
	create_dword	(0X43F3A608);
	make_array	(0X43F3A608,	0X28);
	create_dword	(0X43F3A6A8);
	make_array	(0X43F3A6A8,	0X3);
	create_dword	(0X43F3A6B4);
	make_array	(0X43F3A6B4,	0X3);
	create_dword	(0X43F3A6C0);
	make_array	(0X43F3A6C0,	0X3);
	create_dword	(0X43F3A6CC);
	make_array	(0X43F3A6CC,	0X3);
	create_dword	(0X43F3A6D8);
	make_array	(0X43F3A6D8,	0X3);
	create_dword	(0X43F3A6E4);
	make_array	(0X43F3A6E4,	0X3);
	create_dword	(0X43F3A6F0);
	make_array	(0X43F3A6F0,	0X3);
	create_word	(0X43F3A6FE);
	create_byte	(0X43F3A701);
	make_array	(0X43F3A701,	0X3);
	create_word	(0X43F3A706);
	create_byte	(0X43F3A709);
	make_array	(0X43F3A709,	0X3);
	create_byte	(0X43F3A70D);
	make_array	(0X43F3A70D,	0X3);
	create_word	(0X43F3A712);
	create_word	(0X43F3A716);
	create_word	(0X43F3A71A);
	create_byte	(0X43F3A71D);
	make_array	(0X43F3A71D,	0X3);
	create_word	(0X43F3A722);
	create_byte	(0X43F3A725);
	make_array	(0X43F3A725,	0X3);
	create_byte	(0X43F3A729);
	make_array	(0X43F3A729,	0X3);
	create_byte	(0X43F3A72D);
	make_array	(0X43F3A72D,	0X3);
	create_byte	(0X43F3A731);
	create_word	(0X43F3A732);
	create_word	(0X43F3A736);
	create_word	(0X43F3A73A);
	create_word	(0X43F3A73E);
	create_word	(0X43F3A742);
	create_word	(0X43F3A746);
	create_word	(0X43F3A74A);
	create_byte	(0X43F3A74D);
	make_array	(0X43F3A74D,	0X3);
	create_word	(0X43F3A752);
	create_byte	(0X43F3A755);
	make_array	(0X43F3A755,	0X3);
	create_strlit	(0X43F3A758,	0X8);
	set_name	(0X43F3A758,	"aGoicons");
	create_strlit	(0X43F3A760,	0X10);
	set_name	(0X43F3A760,	"aCsgoicon");
	create_strlit	(0X43F3A772,	0XB);
	set_name	(0X43F3A772,	"aErsion10");
	create_word	(0X43F3A77E);
	create_byte	(0X43F3A781);
	make_array	(0X43F3A781,	0X3);
	create_byte	(0X43F3A785);
	make_array	(0X43F3A785,	0X3);
	create_byte	(0X43F3A789);
	make_array	(0X43F3A789,	0X3);
	create_byte	(0X43F3A78D);
	make_array	(0X43F3A78D,	0X3);
	create_strlit	(0X43F3A792,	0XA);
	set_name	(0X43F3A792,	"aCsgoicons");
	create_strlit	(0X43F3A79C,	0X10);
	set_name	(0X43F3A79C,	"aCsgoicon_0");
	create_strlit	(0X43F3A7AD,	0XA);
	set_name	(0X43F3A7AD,	"aCsgoicons_0");
	create_strlit	(0X43F3A7B7,	0X2);
	set_name	(0X43F3A7B7,	"aC");
	create_word	(0X43F3A7BA);
	create_byte	(0X43F3A7BD);
	make_array	(0X43F3A7BD,	0X3);
	create_byte	(0X43F3A7C1);
	make_array	(0X43F3A7C1,	0X3);
	create_byte	(0X43F3A7C5);
	make_array	(0X43F3A7C5,	0X3);
	create_strlit	(0X43F3A7C9,	0X7);
	set_name	(0X43F3A7C9,	"aEgular");
	create_word	(0X43F3A7D2);
	create_strlit	(0X43F3A7D4,	0X8);
	set_name	(0X43F3A7D4,	"aGula");
	create_strlit	(0X43F3A7DC,	0XB);
	set_name	(0X43F3A7DC,	"aRcsgoicons");
	create_strlit	(0X43F3A7E7,	0X2);
	set_name	(0X43F3A7E7,	"aC_0");
	create_word	(0X43F3A7EA);
	create_byte	(0X43F3A7ED);
	make_array	(0X43F3A7ED,	0X3);
	create_byte	(0X43F3A7F1);
	make_array	(0X43F3A7F1,	0X3);
	create_byte	(0X43F3A7F5);
	make_array	(0X43F3A7F5,	0X3);
	create_strlit	(0X43F3A7F8,	0X1B);
	create_strlit	(0X43F3A813,	0X2);
	create_strlit	(0X43F3A815,	0X2);
	set_name	(0X43F3A815,	"aO");
	create_strlit	(0X43F3A817,	0X2);
	set_name	(0X43F3A817,	"aN");
	create_byte	(x=0X43F3A819);
	op_chr		(x,	0);
	create_word	(0X43F3A81A);
	create_dword	(0X43F3A81C);
	make_array	(0X43F3A81C,	0X13);
	create_dword	(0X43F3A868);
	make_array	(0X43F3A868,	0X3E);
	create_dword	(0X43F3A960);
	make_array	(0X43F3A960,	0X3);
	create_dword	(0X43F3A96C);
	make_array	(0X43F3A96C,	0X3);
	create_dword	(0X43F3A978);
	make_array	(0X43F3A978,	0X3);
	create_dword	(x=0X43F3A984);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3A988);
	make_array	(0X43F3A988,	0X2);
	create_dword	(0X43F3A990);
	make_array	(0X43F3A990,	0X3);
	create_dword	(0X43F3A99C);
	make_array	(0X43F3A99C,	0X3);
	create_dword	(0X43F3A9A8);
	make_array	(0X43F3A9A8,	0X3);
	create_dword	(0X43F3A9B4);
	make_array	(0X43F3A9B4,	0X3);
	create_dword	(0X43F3A9C0);
	make_array	(0X43F3A9C0,	0X3);
	create_dword	(0X43F3A9CC);
	make_array	(0X43F3A9CC,	0X3);
	create_dword	(0X43F3A9D8);
	make_array	(0X43F3A9D8,	0X3);
	create_dword	(0X43F3A9E4);
	make_array	(0X43F3A9E4,	0X3);
	create_dword	(0X43F3A9F0);
	make_array	(0X43F3A9F0,	0X3);
	create_byte	(x=0X43F3A9FE);
	op_chr		(x,	0);
	create_word	(0X43F3AA02);
	create_word	(0X43F3AA06);
	create_byte	(0X43F3AA09);
	make_array	(0X43F3AA09,	0X3);
	create_dword	(0X43F3AA0C);
	create_dword	(0X43F3AA10);
	create_dword	(0X43F3AA14);
	create_dword	(0X43F3AA18);
	create_dword	(0X43F3AA1C);
	create_dword	(0X43F3AA20);
	create_dword	(0X43F3AA24);
	create_dword	(0X43F3AA28);
	create_dword	(x=0X43F3AA2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3AA30);
	create_dword	(0X43F3AA34);
	create_dword	(0X43F3AA38);
	create_dword	(0X43F3AA3C);
	create_dword	(0X43F3AA40);
	create_dword	(0X43F3AA44);
	create_dword	(0X43F3AA48);
	create_dword	(0X43F3AA4C);
	create_dword	(0X43F3AA50);
	create_word	(0X43F3AA54);
	create_dword	(x=0X43F3AA56);
	op_chr		(x,	0);
	create_dword	(x=0X43F3AA5A);
	op_chr		(x,	0);
	create_dword	(x=0X43F3AA5E);
	op_chr		(x,	0);
	create_dword	(x=0X43F3AA62);
	op_chr		(x,	0);
	create_dword	(x=0X43F3AA66);
	op_chr		(x,	0);
	create_dword	(x=0X43F3AA6A);
	op_chr		(x,	0);
	create_dword	(x=0X43F3AA6E);
	op_chr		(x,	0);
	create_dword	(x=0X43F3AA72);
	op_chr		(x,	0);
	create_dword	(x=0X43F3AA76);
	op_chr		(x,	0);
	create_dword	(x=0X43F3AA7A);
	op_chr		(x,	0);
	create_dword	(x=0X43F3AA7E);
	op_chr		(x,	0);
	create_dword	(x=0X43F3AA82);
	op_chr		(x,	0);
	create_dword	(x=0X43F3AA86);
	op_chr		(x,	0);
	create_dword	(x=0X43F3AA8A);
	op_chr		(x,	0);
	create_strlit	(0X43F3AA8E,	0X2);
	set_name	(0X43F3AA8E,	"a1");
	create_strlit	(0X43F3AA90,	0X2);
	set_name	(0X43F3AA90,	"a9");
	create_strlit	(0X43F3AA92,	0X2);
	set_name	(0X43F3AA92,	"a9_0");
	create_word	(x=0X43F3AA96);
	op_chr		(x,	0);
	create_strlit	(0X43F3AA98,	0X22);
	set_name	(0X43F3AA98,	"a2003YujiOshim");
	create_word	(0X43F3AABA);
	create_word	(0X43F3AABE);
	create_strlit	(0X43F3AAC0,	0X3A);
	set_name	(0X43F3AAC0,	"a04Dsg4ComWww04");
	create_strlit	(0X43F3AAFA,	0X7);
	set_name	(0X43F3AAFA,	"aG04b03");
	create_strlit	(0X43F3AB01,	0X2);
	set_name	(0X43F3AB01,	"a0");
	create_strlit	(0X43F3AB03,	0X2);
	set_name	(0X43F3AB03,	"a4");
	create_strlit	(0X43F3AB05,	0X2);
	set_name	(0X43F3AB05,	"aB");
	create_strlit	(0X43F3AB07,	0X2);
	set_name	(0X43F3AB07,	"a0_0");
	create_strlit	(0X43F3AB09,	0X9);
	set_name	(0X43F3AB09,	"a3regular");
	create_strlit	(0X43F3AB12,	0X2);
	set_name	(0X43F3AB12,	"aR");
	create_strlit	(0X43F3AB14,	0XA);
	set_name	(0X43F3AB14,	"aEgula");
	create_strlit	(0X43F3AB1E,	0X7);
	set_name	(0X43F3AB1E,	"aR04b03");
	create_strlit	(0X43F3AB25,	0X2);
	set_name	(0X43F3AB25,	"a0_1");
	create_strlit	(0X43F3AB27,	0X2);
	set_name	(0X43F3AB27,	"a4_0");
	create_strlit	(0X43F3AB29,	0X2);
	set_name	(0X43F3AB29,	"aB_0");
	create_strlit	(0X43F3AB2B,	0X2);
	set_name	(0X43F3AB2B,	"a0_2");
	create_strlit	(0X43F3AB2D,	0X24);
	set_name	(0X43F3AB2D,	"a3macromediaFon");
	create_word	(0X43F3AB6E);
	create_byte	(0X43F3AB71);
	make_array	(0X43F3AB71,	0X3);
	create_byte	(0X43F3AB75);
	make_array	(0X43F3AB75,	0X3);
	create_byte	(0X43F3AB79);
	make_array	(0X43F3AB79,	0X3);
	create_word	(0X43F3AB7E);
	create_byte	(0X43F3AB81);
	make_array	(0X43F3AB81,	0X3);
	create_byte	(0X43F3AB85);
	make_array	(0X43F3AB85,	0X3);
	create_byte	(0X43F3AB89);
	make_array	(0X43F3AB89,	0X3);
	create_byte	(0X43F3AB8D);
	make_array	(0X43F3AB8D,	0X3);
	create_byte	(0X43F3AB91);
	make_array	(0X43F3AB91,	0X3);
	create_strlit	(0X43F3AB95,	0X24);
	set_name	(0X43F3AB95,	"aAcromediaFonto");
	create_word	(0X43F3ABBA);
	create_dword	(0X43F3ABBC);
	make_array	(0X43F3ABBC,	0X8F);
	create_byte	(0X43F3ADFB);
	create_dword	(0X43F3ADFC);
	make_array	(0X43F3ADFC,	0X38);
	create_strlit	(0X43F3AEDE,	0X10);
	create_word	(0X43F3AEEE);
	create_dword	(0X43F3AEF0);
	make_array	(0X43F3AEF0,	0X34);
	create_dword	(0X43F3AFC4);
	make_array	(0X43F3AFC4,	0X14C);
	create_dword	(0X43F3B4F4);
	make_array	(0X43F3B4F4,	0X46);
	create_byte	(0X43F3B60D);
	make_array	(0X43F3B60D,	0X3);
	create_dword	(0X43F3B610);
	make_array	(0X43F3B610,	0X29);
	create_dword	(0X43F3B6B4);
	make_array	(0X43F3B6B4,	0X47);
	create_byte	(0X43F3B7D1);
	make_array	(0X43F3B7D1,	0X3);
	create_dword	(0X43F3B7D4);
	make_array	(0X43F3B7D4,	0X89);
	create_byte	(0X43F3B9F9);
	make_array	(0X43F3B9F9,	0X3);
	create_dword	(0X43F3B9FC);
	make_array	(0X43F3B9FC,	0X2E);
	create_byte	(0X43F3BAB5);
	make_array	(0X43F3BAB5,	0X3);
	create_dword	(0X43F3BAB8);
	make_array	(0X43F3BAB8,	0X27);
	create_byte	(0X43F3BB55);
	make_array	(0X43F3BB55,	0X3);
	create_dword	(0X43F3BB58);
	make_array	(0X43F3BB58,	0XF2);
	create_byte	(0X43F3BF23);
	create_dword	(0X43F3BF24);
	make_array	(0X43F3BF24,	0XED);
	create_byte	(0X43F3C2DB);
	create_dword	(0X43F3C2DC);
	make_array	(0X43F3C2DC,	0X22);
	create_byte	(0X43F3C365);
	make_array	(0X43F3C365,	0X3);
	create_dword	(0X43F3C368);
	make_array	(0X43F3C368,	0X25);
	create_byte	(0X43F3C3FF);
	create_dword	(0X43F3C400);
	make_array	(0X43F3C400,	0X22);
	create_dword	(0X43F3C48C);
	make_array	(0X43F3C48C,	0X6D);
	create_byte	(0X43F3C643);
	create_dword	(0X43F3C644);
	make_array	(0X43F3C644,	0X80);
	create_dword	(0X43F3C848);
	make_array	(0X43F3C848,	0X49);
	create_byte	(0X43F3C96D);
	make_array	(0X43F3C96D,	0X3);
	create_dword	(0X43F3C970);
	make_array	(0X43F3C970,	0X123);
	create_byte	(0X43F3CDFD);
	make_array	(0X43F3CDFD,	0X3);
	create_dword	(0X43F3CE00);
	make_array	(0X43F3CE00,	0X80);
	create_byte	(0X43F3D001);
	make_array	(0X43F3D001,	0X3);
	create_dword	(0X43F3D004);
	make_array	(0X43F3D004,	0X2D);
	create_byte	(0X43F3D0B9);
	make_array	(0X43F3D0B9,	0X3);
	create_dword	(0X43F3D0BC);
	make_array	(0X43F3D0BC,	0X52);
	create_dword	(0X43F3D204);
	make_array	(0X43F3D204,	0X1C);
	create_dword	(0X43F3D278);
	make_array	(0X43F3D278,	0X33);
	create_dword	(0X43F3D344);
	make_array	(0X43F3D344,	0X3F);
	create_byte	(0X43F3D441);
	make_array	(0X43F3D441,	0X3);
	create_dword	(0X43F3D444);
	make_array	(0X43F3D444,	0X30);
	create_byte	(0X43F3D505);
	make_array	(0X43F3D505,	0X3);
	create_dword	(0X43F3D508);
	make_array	(0X43F3D508,	0X4C);
	create_dword	(0X43F3D638);
	create_dword	(0X43F3D63C);
	make_array	(0X43F3D63C,	0X22);
	create_byte	(0X43F3D6C5);
	make_array	(0X43F3D6C5,	0X3);
	create_dword	(0X43F3D6C8);
	make_array	(0X43F3D6C8,	0X54);
	create_byte	(0X43F3D81B);
	create_dword	(0X43F3D81C);
	make_array	(0X43F3D81C,	0XB9);
	create_byte	(0X43F3DB01);
	make_array	(0X43F3DB01,	0X3);
	create_dword	(0X43F3DB04);
	make_array	(0X43F3DB04,	0X42);
	create_insn	(0X43F3DC0C);
	create_dword	(0X43F3DC10);
	make_array	(0X43F3DC10,	0X25);
	create_byte	(0X43F3DCA5);
	make_array	(0X43F3DCA5,	0X3);
	create_dword	(0X43F3DCA8);
	make_array	(0X43F3DCA8,	0X97);
	create_dword	(0X43F3DF04);
	create_dword	(0X43F3DF08);
	make_array	(0X43F3DF08,	0X22);
	create_byte	(0X43F3DF91);
	make_array	(0X43F3DF91,	0X3);
	create_dword	(0X43F3DF94);
	make_array	(0X43F3DF94,	0X29);
	create_byte	(0X43F3E03B);
	create_dword	(0X43F3E03C);
	make_array	(0X43F3E03C,	0X47);
	create_dword	(0X43F3E158);
	create_dword	(0X43F3E15C);
	create_dword	(0X43F3E160);
	create_dword	(0X43F3E164);
	create_dword	(0X43F3E168);
	create_dword	(0X43F3E16C);
	create_dword	(0X43F3E170);
	create_dword	(0X43F3E174);
	create_dword	(0X43F3E178);
	create_dword	(0X43F3E17C);
	create_dword	(0X43F3E180);
	create_dword	(0X43F3E184);
	create_dword	(0X43F3E188);
	create_dword	(0X43F3E18C);
	create_dword	(0X43F3E190);
	create_dword	(0X43F3E194);
	create_dword	(0X43F3E198);
	create_dword	(0X43F3E19C);
	create_dword	(0X43F3E1A0);
	create_dword	(0X43F3E1A4);
	create_dword	(0X43F3E1A8);
	create_word	(0X43F3E1AC);
	create_byte	(x=0X43F3E1AE);
	op_chr		(x,	0);
	create_byte	(x=0X43F3E1AF);
	op_chr		(x,	0);
	create_byte	(x=0X43F3E1B0);
	op_chr		(x,	0);
	create_byte	(x=0X43F3E1B1);
	op_chr		(x,	0);
	create_byte	(x=0X43F3E1B2);
	op_chr		(x,	0);
	create_byte	(x=0X43F3E1B3);
	op_chr		(x,	0);
	create_byte	(x=0X43F3E1B4);
	op_chr		(x,	0);
	create_dword	(x=0X43F3E1B5);
	op_chr		(x,	0);
	create_dword	(x=0X43F3E1B9);
	op_chr		(x,	0);
	create_word	(x=0X43F3E1BD);
	op_chr		(x,	0);
	create_byte	(x=0X43F3E1BF);
	op_chr		(x,	0);
	create_dword	(0X43F3E1C0);
	create_byte	(0X43F3E4CF);
	create_dword	(0X43F3E4D0);
	make_array	(0X43F3E4D0,	0X2A);
	create_dword	(0X43F3E578);
	make_array	(0X43F3E578,	0X15);
	create_byte	(0X43F3E5CF);
	create_dword	(0X43F3E5D0);
	make_array	(0X43F3E5D0,	0X54);
	create_dword	(0X43F3E720);
	make_array	(0X43F3E720,	0X65);
	create_byte	(0X43F3E8B5);
	make_array	(0X43F3E8B5,	0X3);
	create_byte	(0X43F3E8B9);
	make_array	(0X43F3E8B9,	0X3);
	create_dword	(0X43F3E8BC);
	make_array	(0X43F3E8BC,	0X61);
	create_dword	(0X43F3EA40);
	make_array	(0X43F3EA40,	0X6);
	create_dword	(0X43F3EA58);
	make_array	(0X43F3EA58,	0X34);
	create_dword	(0X43F3EB28);
	make_array	(0X43F3EB28,	0X8);
	create_dword	(0X43F3EB48);
	make_array	(0X43F3EB48,	0X5);
	create_byte	(0X43F3EB5D);
	make_array	(0X43F3EB5D,	0X3);
	create_byte	(0X43F3EB65);
	make_array	(0X43F3EB65,	0X3);
	create_dword	(0X43F3EB6A);
	create_dword	(0X43F3EB6E);
	create_dword	(0X43F3EB72);
	create_dword	(0X43F3EB76);
	create_dword	(0X43F3EB7A);
	create_byte	(0X43F3EB7E);
	create_strlit	(0X43F3EB7F,	0X24);
	set_name	(0X43F3EB7F,	"a0123456789Ab");
	create_strlit	(0X43F3EBA3,	0X1F);
	set_name	(0X43F3EBA3,	"aDefghijklmnopq");
	make_array	(0X43F3EBC2,	0X2);
	create_dword	(0X43F3EBC4);
	make_array	(0X43F3EBC4,	0X9);
	create_dword	(0X43F3EBE8);
	make_array	(0X43F3EBE8,	0X6);
	create_dword	(0X43F3EC00);
	make_array	(0X43F3EC00,	0XF);
	create_dword	(0X43F3EC3C);
	make_array	(0X43F3EC3C,	0X2);
	create_dword	(0X43F3EC44);
	make_array	(0X43F3EC44,	0X9);
	create_dword	(0X43F3EC68);
	make_array	(0X43F3EC68,	0X1E4);
	create_dword	(0X43F3F3F8);
	make_array	(0X43F3F3F8,	0XC);
	create_word	(0X43F3F42A);
	make_array	(0X43F3F42C,	0X4);
	create_word	(0X43F3F432);
	create_dword	(0X43F3F434);
	create_dword	(0X43F3F438);
	create_dword	(0X43F3F43C);
	create_dword	(0X43F3F440);
	create_dword	(0X43F3F444);
	create_dword	(0X43F3F448);
	create_dword	(0X43F3F44C);
	create_dword	(0X43F3F450);
	create_dword	(0X43F3F454);
	create_dword	(0X43F3F458);
	create_dword	(0X43F3F45C);
	create_dword	(0X43F3F460);
	create_dword	(0X43F3F464);
	create_dword	(0X43F3F468);
	create_dword	(0X43F3F46C);
	create_dword	(0X43F3F470);
	create_dword	(0X43F3F474);
	create_dword	(0X43F3F478);
	create_dword	(0X43F3F47C);
	create_dword	(0X43F3F480);
	create_dword	(0X43F3F484);
	create_dword	(0X43F3F488);
	create_dword	(0X43F3F48C);
	create_dword	(x=0X43F3F490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F3F490,	"C_SDK::Globals::Buffers::Keyboard");
	create_dword	(x=0X43F3F494);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F49C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3F4D8);
	create_dword	(x=0X43F3F4DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F4E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3F4EC);
	create_dword	(x=0X43F3F4F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3F4F4);
	create_dword	(x=0X43F3F4F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3F4FC);
	create_dword	(0X43F3F500);
	create_dword	(0X43F3F504);
	create_dword	(0X43F3F508);
	create_dword	(0X43F3F50C);
	create_dword	(0X43F3F510);
	create_dword	(0X43F3F514);
	create_dword	(0X43F3F518);
	create_dword	(0X43F3F51C);
	create_dword	(x=0X43F3F520);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F524);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F528);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F52C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F530);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F534);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F538);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F53C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3F540);
	create_dword	(0X43F3F544);
	create_dword	(x=0X43F3F548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F54C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F554);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F558);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F55C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F560);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F564);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3F568);
	create_dword	(0X43F3F56C);
	create_dword	(0X43F3F570);
	create_dword	(0X43F3F574);
	create_dword	(x=0X43F3F578);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F57C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F584);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F588);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F58C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F590);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F594);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F598);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F59C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3F5A0);
	create_dword	(x=0X43F3F5A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F5A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F5AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F5B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F5B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3F5B8);
	create_dword	(0X43F3F5BC);
	create_dword	(0X43F3F5C0);
	create_dword	(0X43F3F5C4);
	create_dword	(0X43F3F5C8);
	create_dword	(0X43F3F5CC);
	create_dword	(0X43F3F5D0);
	create_dword	(0X43F3F5D4);
	create_dword	(0X43F3F5D8);
	create_dword	(0X43F3F5DC);
	create_dword	(0X43F3F5E0);
	create_dword	(0X43F3F5E4);
	create_dword	(0X43F3F5E8);
	create_dword	(0X43F3F5EC);
	create_dword	(x=0X43F3F5F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F5F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F5F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F5FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3F600);
	create_dword	(x=0X43F3F604);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F608);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F60C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F614);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F618);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F61C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F620);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F624);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F628);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F62C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F630);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F634);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F638);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F63C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F640);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F644);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F648);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F64C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F650);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F654);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F658);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3F65C);
	create_dword	(0X43F3F660);
	create_dword	(0X43F3F664);
	create_dword	(x=0X43F3F668);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F66C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F670);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F674);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F678);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3F67C);
	create_dword	(x=0X43F3F680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3F684);
	create_dword	(0X43F3F688);
	create_dword	(0X43F3F68C);
	create_dword	(0X43F3F690);
	create_dword	(0X43F3F694);
	create_dword	(0X43F3F698);
	create_dword	(0X43F3F69C);
	create_dword	(0X43F3F6A0);
	create_dword	(0X43F3F6A4);
	create_dword	(0X43F3F6A8);
	create_dword	(0X43F3F6AC);
	create_dword	(x=0X43F3F6B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F6B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F6B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F6BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F6C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F6C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F6C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F6CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3F6D0);
	create_dword	(0X43F3F6D4);
	create_dword	(0X43F3F6D8);
	create_dword	(x=0X43F3F6DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F6E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F6E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F6E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F6EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F6F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F6F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F6F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F6FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F700);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F704);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F70C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F710);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F714);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F718);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F71C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F720);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F724);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F728);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F3F728,	"C_SDK::Globals::Buffers::Skins");
	create_dword	(x=0X43F3F72C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F730);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F734);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F738);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F73C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F740);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F744);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F748);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F74C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F750);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F754);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F758);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F75C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F760);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F764);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F768);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F76C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F770);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F774);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F778);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F77C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F784);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F788);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F78C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F790);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F794);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F798);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F79C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43F3F7EC,	0X4);
	create_dword	(x=0X43F3F7F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F3F7F0,	"C_SDK::Globals::Buffers::Weapons::Default");
	create_dword	(x=0X43F3F7F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F7FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F800);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F804);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F808);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F80C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F810);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F814);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F818);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F81C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F820);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F824);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F828);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F82C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F830);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F834);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F838);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F83C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F840);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F844);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F848);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F84C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F850);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F854);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F858);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F85C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F860);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F864);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F868);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F86C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F870);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F874);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F878);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F87C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F880);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F884);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F888);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F88C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F890);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F894);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F898);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F89C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43F3F8B4,	0X4);
	create_dword	(x=0X43F3F8B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F3F8B8,	"C_SDK::Globals::Buffers::Weapons::Glove");
	create_dword	(x=0X43F3F8BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F8FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F900);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F904);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F908);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F90C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F910);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F914);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F918);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F91C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F920);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F924);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F928);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F92C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F930);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F934);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F938);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F93C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F940);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F944);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F94C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F950);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F954);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F958);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F95C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F960);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F964);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F968);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F96C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F970);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F974);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43F3F97C,	0X4);
	create_dword	(x=0X43F3F980);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F3F980,	"C_SDK::Globals::Buffers::Weapons::Knife");
	create_dword	(x=0X43F3F984);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F988);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F98C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F990);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F994);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F998);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F99C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F3F9BC,	"C_SDK::Globals::Buffers::Weapons::Knife::Second");
	create_dword	(x=0X43F3F9C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3F9F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3F9F8);
	create_byte	(0X43F3F9FD);
	make_array	(0X43F3F9FD,	0X3);
	create_strlit	(0X43F3FA00,	0X1);
	make_array	(0X43F3FA01,	0X3);
	create_dword	(0X43F3FA04);
	create_dword	(0X43F3FA08);
	create_strlit	(0X43F3FA0C,	0X11);
	set_name	(0X43F3FA0C,	"aMapSetTooLong");
	make_array	(0X43F3FA1D,	0X3);
	create_strlit	(0X43F3FA20,	0X2);
	set_name	(0X43F3FA20,	"aY");
	make_array	(0X43F3FA22,	0X2);
	create_strlit	(0X43F3FA24,	0X2);
	set_name	(0X43F3FA24,	"aZ");
	make_array	(0X43F3FA26,	0X2);
	create_strlit	(0X43F3FA28,	0X2);
	make_array	(0X43F3FA2A,	0X2);
	create_strlit	(0X43F3FA2C,	0X8);
	set_name	(0X43F3FA2C,	"aUnknown");
	create_strlit	(0X43F3FA34,	0X9);
	set_name	(0X43F3FA34,	"aDefindex");
	create_byte	(0X43F3FA3D);
	create_byte	(0X43F3FA40);
	make_array	(0X43F3FA41,	0X3);
	create_dword	(0X43F3FA44);
	create_dword	(0X43F3FA48);
	create_strlit	(0X43F3FA4C,	0X8);
	set_name	(0X43F3FA4C,	"aGeneric");
	create_dword	(x=0X43F3FA54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FA58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FA5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FA60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FA64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FA68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3FA6C);
	create_dword	(0X43F3FA70);
	create_dword	(0X43F3FA74);
	create_dword	(0X43F3FA78);
	create_strlit	(0X43F3FA7C,	0X11);
	set_name	(0X43F3FA7C,	"a0123456789abcd");
	make_array	(0X43F3FA8D,	0X3);
	create_strlit	(0X43F3FA90,	0X11);
	set_name	(0X43F3FA90,	"a0123456789abcd_0");
	make_array	(0X43F3FAA1,	0X3);
	create_dword	(x=0X43F3FAA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FAA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FAAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FAB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FAB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FAB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FABC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FAC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X43F3FAC4,	0X6);
	set_name	(0X43F3FAC4,	"aFalse");
	make_array	(0X43F3FACA,	0X2);
	create_strlit	(0X43F3FACC,	0X5);
	set_name	(0X43F3FACC,	"aTrue");
	make_array	(0X43F3FAD1,	0X3);
	create_dword	(x=0X43F3FAD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FAD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FADC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FAE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FAE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FAE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X43F3FAEC,	0X9);
	set_name	(0X43F3FAEC,	"aBadCast");
	make_array	(0X43F3FAF5,	0X3);
	create_dword	(x=0X43F3FAF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F3FAFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F3FB00);
	make_array	(0X43F3FB04,	0X4);
	create_dword	(0X43F3FB08);
	create_dword	(0X43F3FB0C);
	create_byte	(0X43F3FB11);
	make_array	(0X43F3FB11,	0X3);
	create_byte	(0X43F3FB15);
	make_array	(0X43F3FB15,	0X3);
	create_dword	(0X43F3FBB8);
	create_dword	(0X43F3FBBC);
	create_dword	(0X43F3FBC0);
	create_dword	(0X43F3FBC4);
	create_word	(0X43F3FBDA);
	create_dword	(0X43F3FD1C);
	make_array	(0X43F3FD1C,	0X2);
	create_word	(0X43F3FD26);
	create_dword	(0X43F3FD28);
	make_array	(0X43F3FD28,	0X52);
	create_dword	(0X43F3FE70);
	create_dword	(0X43F3FE74);
	make_array	(0X43F3FE79,	0X3);
	create_dword	(0X43F3FE7C);
	make_array	(0X43F3FE7C,	0X9);
	create_dword	(0X43F3FEA0);
	create_dword	(0X43F3FEA4);
	make_array	(0X43F3FEA9,	0X7);
	create_dword	(0X43F3FEB0);
	make_array	(0X43F3FEB0,	0X2);
	make_array	(0X43F3FEBA,	0X6);
	create_dword	(0X43F3FEC0);
	make_array	(0X43F3FEC0,	0X2);
	create_word	(0X43F3FECA);
	make_array	(0X43F3FECC,	0X4);
	create_byte	(0X43F3FED1);
	make_array	(0X43F3FED1,	0X3);
	make_array	(0X43F3FED4,	0X4);
	create_word	(0X43F3FEDA);
	create_dword	(0X43F3FEDC);
	create_dword	(0X43F3FEE0);
	make_array	(0X43F3FEE0,	0X2);
	create_dword	(0X43F3FEE8);
	make_array	(0X43F3FEE8,	0X2);
	create_dword	(0X43F3FEF0);
	make_array	(0X43F3FEF0,	0X14);
	create_byte	(0X43F3FF40);
	create_byte	(0X43F3FF41);
	create_strlit	(0X43F3FF44,	0XC5);
	set_name	(0X43F3FF44,	"a02030405060708");
	make_array	(0X43F40009,	0X3);
	create_strlit	(0X43F4000C,	0X12);
	set_name	(0X43F4000C,	"aUnknownExcepti");
	make_array	(0X43F4001E,	0X2);
	create_strlit	(0X43F40020,	0X2);
	make_array	(0X43F40022,	0X2);
	create_dword	(x=0X43F40024);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40028);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4002C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40030);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40034);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40038);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4003C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40040);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40044);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4004C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40050);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40054);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40058);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4005C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40060);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40064);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40068);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4006C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40070);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X43F40074,	0X5);
	set_name	(0X43F40074,	"aNone");
	make_array	(0X43F40079,	0X3);
	create_strlit	(0X43F4007C,	0X7);
	set_name	(0X43F4007C,	"aMouse2");
	create_strlit	(0X43F40084,	0X7);
	set_name	(0X43F40084,	"aMouse1");
	create_strlit	(0X43F4008C,	0X7);
	set_name	(0X43F4008C,	"aMouse3");
	create_strlit	(0X43F40094,	0X7);
	set_name	(0X43F40094,	"aCancel");
	create_strlit	(0X43F4009C,	0X7);
	set_name	(0X43F4009C,	"aMouse5");
	create_strlit	(0X43F400A4,	0X7);
	set_name	(0X43F400A4,	"aMouse4");
	create_strlit	(0X43F400AC,	0X4);
	set_name	(0X43F400AC,	"aTab");
	create_strlit	(0X43F400B0,	0XA);
	set_name	(0X43F400B0,	"aBackspace");
	make_array	(0X43F400BA,	0X2);
	create_strlit	(0X43F400BC,	0X7);
	set_name	(0X43F400BC,	"aReturn");
	create_strlit	(0X43F400C4,	0X6);
	set_name	(0X43F400C4,	"aClear");
	make_array	(0X43F400CA,	0X2);
	create_strlit	(0X43F400CC,	0X8);
	set_name	(0X43F400CC,	"aControl");
	create_byte	(0X43F400D4);
	create_byte	(0X43F400D5);
	create_byte	(0X43F400D6);
	create_byte	(0X43F400D7);
	create_byte	(0X43F400D8);
	create_byte	(0X43F400D9);
	make_array	(0X43F400DA,	0X2);
	create_word	(0X43F400DE);
	create_dword	(0X43F400E0);
	make_array	(0X43F400E0,	0X2);
	create_strlit	(0X43F400E8,	0X5);
	set_name	(0X43F400E8,	"aKana");
	make_array	(0X43F400ED,	0X3);
	create_strlit	(0X43F400F0,	0XA);
	set_name	(0X43F400F0,	"aCapsLock");
	make_array	(0X43F400FA,	0X2);
	create_word	(0X43F400FE);
	create_dword	(0X43F40100);
	make_array	(0X43F40100,	0X18);
	create_strlit	(0X43F40160,	0X5);
	set_name	(0X43F40160,	"aLeft");
	make_array	(0X43F40165,	0X3);
	create_byte	(0X43F40169);
	make_array	(0X43F40169,	0X3);
	make_array	(0X43F4016C,	0X4);
	create_strlit	(0X43F40171,	0X5);
	set_name	(0X43F40171,	"aIght");
	make_array	(0X43F40176,	0X2);
	create_byte	(0X43F40178);
	create_byte	(0X43F40179);
	create_byte	(0X43F4017A);
	create_strlit	(0X43F4017D,	0X6);
	set_name	(0X43F4017D,	"aElect");
	create_byte	(0X43F40184);
	create_byte	(0X43F40185);
	create_byte	(0X43F40186);
	create_byte	(0X43F40187);
	create_byte	(0X43F40188);
	make_array	(0X43F40189,	0X3);
	create_strlit	(0X43F4018C,	0X8);
	set_name	(0X43F4018C,	"aExecute");
	create_word	(0X43F40196);
	create_dword	(0X43F40198);
	make_array	(0X43F40198,	0X5);
	create_strlit	(0X43F401AC,	0X5);
	set_name	(0X43F401AC,	"aHelp");
	make_array	(0X43F401B1,	0X3);
	create_byte	(0X43F401B4);
	create_byte	(0X43F401B5);
	create_byte	(0X43F401B6);
	create_byte	(0X43F401B7);
	create_byte	(0X43F401B8);
	create_byte	(0X43F401B9);
	create_byte	(0X43F401BA);
	make_array	(0X43F401BD,	0X3);
	make_array	(0X43F401C1,	0X3);
	make_array	(0X43F401C5,	0X3);
	create_dword	(0X43F401C8);
	make_array	(0X43F401C8,	0X6);
	create_dword	(0X43F401E0);
	create_dword	(0X43F401E4);
	create_dword	(0X43F401E8);
	make_array	(0X43F401ED,	0X3);
	create_dword	(0X43F401F0);
	make_array	(0X43F401F0,	0X11);
	create_strlit	(0X43F40234,	0X5);
	set_name	(0X43F40234,	"aLwin");
	make_array	(0X43F40239,	0X3);
	create_strlit	(0X43F4023C,	0X8);
	set_name	(0X43F4023C,	"aNumpad0");
	create_strlit	(0X43F40244,	0X5);
	set_name	(0X43F40244,	"aApps");
	make_array	(0X43F40249,	0X3);
	create_strlit	(0X43F4024C,	0X8);
	set_name	(0X43F4024C,	"aNumpad2");
	create_strlit	(0X43F40254,	0X8);
	set_name	(0X43F40254,	"aNumpad1");
	create_strlit	(0X43F4025C,	0X8);
	set_name	(0X43F4025C,	"aNumpad4");
	create_strlit	(0X43F40264,	0X8);
	set_name	(0X43F40264,	"aNumpad3");
	create_strlit	(0X43F4026C,	0X8);
	set_name	(0X43F4026C,	"aNumpad6");
	create_strlit	(0X43F40274,	0X8);
	set_name	(0X43F40274,	"aNumpad5");
	create_strlit	(0X43F4027C,	0X8);
	set_name	(0X43F4027C,	"aNumpad8");
	create_strlit	(0X43F40284,	0X8);
	set_name	(0X43F40284,	"aNumpad7");
	create_strlit	(0X43F4028C,	0X9);
	set_name	(0X43F4028C,	"aMultiply");
	make_array	(0X43F40295,	0X3);
	create_strlit	(0X43F40298,	0X8);
	set_name	(0X43F40298,	"aNumpad9");
	create_strlit	(0X43F402A1,	0X9);
	set_name	(0X43F402A1,	"aEparator");
	make_array	(0X43F402AA,	0X2);
	create_byte	(0X43F402AD);
	make_array	(0X43F402AD,	0X3);
	create_strlit	(0X43F402B0,	0X8);
	set_name	(0X43F402B0,	"aDecimal");
	create_strlit	(0X43F402BA,	0X7);
	set_name	(0X43F402BA,	"aBtract");
	make_array	(0X43F402C1,	0X3);
	create_strlit	(0X43F402C4,	0X3);
	set_name	(0X43F402C4,	"aF1");
	create_strlit	(0X43F402C8,	0X7);
	set_name	(0X43F402C8,	"aDivide");
	make_array	(0X43F402D2,	0X2);
	create_dword	(0X43F402D4);
	make_array	(0X43F402D4,	0X3);
	create_dword	(0X43F402E0);
	make_array	(0X43F402E0,	0X2);
	create_dword	(0X43F402E8);
	create_dword	(0X43F402EC);
	create_word	(0X43F402F2);
	create_word	(0X43F402F6);
	create_dword	(0X43F402F8);
	make_array	(0X43F402F8,	0X15);
	create_strlit	(0X43F4034C,	0XF);
	set_name	(0X43F4034C,	"aOemFjTouroku");
	create_strlit	(0X43F4035C,	0XF);
	set_name	(0X43F4035C,	"aOemFjMasshou");
	create_strlit	(0X43F4036C,	0XC);
	set_name	(0X43F4036C,	"aOemFjRoya");
	create_strlit	(0X43F40378,	0XC);
	set_name	(0X43F40378,	"aOemFjLoya");
	create_strlit	(0X43F40386,	0X5);
	set_name	(0X43F40386,	"aHift");
	create_strlit	(0X43F4038C,	0X7);
	set_name	(0X43F4038C,	"aLshift");
	create_strlit	(0X43F40395,	0X8);
	set_name	(0X43F40395,	"aControl_0");
	make_array	(0X43F4039D,	0X3);
	create_strlit	(0X43F403A0,	0X9);
	set_name	(0X43F403A0,	"aLcontrol");
	make_array	(0X43F403A9,	0X3);
	create_strlit	(0X43F403AC,	0X6);
	set_name	(0X43F403AC,	"aRmenu");
	make_array	(0X43F403B2,	0X2);
	create_strlit	(0X43F403B4,	0X6);
	set_name	(0X43F403B4,	"aLmenu");
	make_array	(0X43F403BA,	0X2);
	create_strlit	(0X43F403BC,	0X11);
	set_name	(0X43F403BC,	"aListTTooLong");
	make_array	(0X43F403CD,	0X3);
	create_dword	(0X43F403D0);
	create_dword	(0X43F403D4);
	create_dword	(x=0X43F403D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F403DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F403E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F403E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F403E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F403EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F403F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F403F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F403F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F403FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40404);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4040C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40410);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40414);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40418);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4041C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40420);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40424);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40428);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4042C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40430);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40434);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40438);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4043C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40444);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4044C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40450);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40454);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40458);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4045C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40460);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40464);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40468);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4046C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40470);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40474);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4047C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40480);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40484);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40488);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4048C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40494);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4049C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F404FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40500);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40504);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40508);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4050C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40510);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40514);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40518);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4051C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40520);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40524);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40528);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4052C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40530);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40534);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40538);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4053C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40544);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4054C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40554);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40558);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4055C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40560);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40564);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40568);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4056C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40570);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40574);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40578);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4057C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40584);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40588);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4058C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40590);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0X43F40594);
	create_word	(0X43F40595);
	create_byte	(0X43F40597);
	create_dword	(0X43F40598);
	create_strlit	(0X43F4059C,	0X1);
	make_array	(0X43F4059D,	0X3);
	create_strlit	(0X43F405A0,	0X1);
	make_array	(0X43F405A1,	0X3);
	create_strlit	(0X43F405A4,	0X1);
	make_array	(0X43F405A5,	0X3);
	create_strlit	(0X43F405A8,	0X1);
	make_array	(0X43F405A9,	0X3);
	create_dword	(0X43F405AC);
	create_strlit	(0X43F405B0,	0X1);
	make_array	(0X43F405B1,	0X3);
	create_dword	(x=0X43F405B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F405FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40600);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40604);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40608);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4060C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40614);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40618);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4061C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40620);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40624);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40628);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4062C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40630);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40634);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40638);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4063C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40640);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40644);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40648);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4064C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40650);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40654);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40658);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4065C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40660);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40664);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40668);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4066C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40670);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40674);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40678);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4067C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40684);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40688);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4068C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40694);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40698);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4069C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F406FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40700);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40704);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4070C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40710);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40714);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40718);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4071C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40720);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40724);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40728);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4072C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F4072C,	"C_SDK::Globals::ClientCmd");
	create_dword	(x=0X43F40730);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40734);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40738);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4073C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40740);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40744);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40748);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4074C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40750);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40754);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40758);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4075C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40760);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40764);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40768);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4076C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40770);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40774);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40778);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4077C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40784);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40788);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F4078C);
	create_dword	(0X43F40790);
	set_name	(0X43F40790,	"message");
	create_dword	(x=0X43F40794);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40798);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4079C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F407A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F407A4);
	create_dword	(x=0X43F407A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F407A8,	"C_SDK::VTables::CUserCmd");
	create_dword	(0X43F407AC);
	create_dword	(0X43F407B0);
	create_dword	(0X43F407B4);
	create_dword	(0X43F407B8);
	create_dword	(0X43F407BC);
	create_dword	(0X43F407C0);
	create_dword	(0X43F407C4);
	create_dword	(0X43F407C8);
	create_dword	(0X43F407CC);
	create_dword	(x=0X43F407D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F407D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F407D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F407DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F407E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F407E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F407E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F407EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F407F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F407F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F407F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F407FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40800);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40804);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40808);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4080C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40810);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40814);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40818);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4081C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40820);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40824);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40828);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4082C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40830);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40834);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X43F40838,	0X11);
	set_name	(0X43F40838,	"aSvTickbaseshif");
	make_array	(0X43F40849,	0X3);
	create_strlit	(0X43F4084C,	0XE);
	set_name	(0X43F4084C,	"aSvInbullrush");
	make_array	(0X43F4085A,	0X2);
	create_strlit	(0X43F4085C,	0X11);
	set_name	(0X43F4085C,	"aSvAnimstatemod");
	make_array	(0X43F4086D,	0X3);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_17(void) {
        auto x;
#define id x

	create_dword	(0X43F40870);
	make_array	(0X43F40874,	0X4);
	create_qword	(0X43F40878);
	create_dword	(0X43F40880);
	create_dword	(0X43F40884);
	create_dword	(0X43F40888);
	create_dword	(0X43F4088C);
	create_dword	(0X43F40890);
	create_dword	(0X43F40894);
	create_dword	(0X43F40898);
	create_dword	(0X43F4089C);
	create_dword	(0X43F408A0);
	create_dword	(0X43F408A4);
	create_dword	(0X43F408A8);
	create_dword	(0X43F408AC);
	create_dword	(0X43F408B0);
	create_dword	(0X43F408B4);
	create_dword	(0X43F408B8);
	create_dword	(0X43F408BC);
	create_dword	(0X43F408C0);
	create_dword	(0X43F408C4);
	create_dword	(0X43F408C8);
	create_dword	(0X43F408CC);
	create_dword	(0X43F408D0);
	create_dword	(0X43F408D4);
	create_dword	(0X43F408D8);
	create_dword	(0X43F408DC);
	create_dword	(0X43F408E0);
	create_dword	(0X43F408E4);
	create_dword	(0X43F408E8);
	create_dword	(0X43F408EC);
	create_qword	(0X43F408F0);
	create_dword	(0X43F408F8);
	create_dword	(0X43F408FC);
	create_dword	(0X43F40900);
	create_dword	(0X43F40904);
	create_dword	(0X43F40908);
	create_dword	(0X43F4090C);
	create_dword	(0X43F40910);
	create_dword	(0X43F40914);
	create_dword	(0X43F40918);
	create_dword	(0X43F4091C);
	create_dword	(0X43F40920);
	create_float	(0X43F40924);
	create_dword	(0X43F40928);
	create_dword	(0X43F4092C);
	create_dword	(0X43F40930);
	create_dword	(0X43F40934);
	create_dword	(0X43F40938);
	create_dword	(0X43F4093C);
	create_dword	(0X43F40940);
	create_float	(0X43F40944);
	create_dword	(0X43F40948);
	create_dword	(0X43F4094C);
	create_float	(0X43F40950);
	set_name	(0X43F40950,	"a3");
	create_dword	(0X43F40954);
	create_qword	(0X43F40958);
	create_dword	(0X43F40960);
	create_dword	(0X43F40964);
	create_dword	(0X43F40968);
	make_array	(0X43F4096C,	0X4);
	create_qword	(0X43F40970);
	create_dword	(0X43F40978);
	make_array	(0X43F4097C,	0X4);
	create_qword	(0X43F40980);
	create_dword	(0X43F40988);
	make_array	(0X43F4098C,	0X4);
	create_qword	(0X43F40990);
	create_qword	(0X43F40998);
	create_qword	(0X43F409A0);
	create_qword	(0X43F409A8);
	create_dword	(0X43F409B0);
	create_dword	(0X43F409B4);
	create_double	(0X43F409B8);
	create_dword	(0X43F409C0);
	create_dword	(0X43F409C4);
	create_double	(0X43F409C8);
	create_dword	(0X43F409D0);
	create_dword	(0X43F409D4);
	create_dword	(0X43F409D8);
	create_dword	(0X43F409DC);
	set_name	(0X43F409DC,	"C_SDK::Globals::Math::PI");
	create_qword	(0X43F409E0);
	create_qword	(0X43F409E8);
	create_qword	(0X43F409F0);
	create_dword	(0X43F409F8);
	make_array	(0X43F409FC,	0X4);
	create_qword	(0X43F40A00);
	create_dword	(0X43F40A08);
	create_dword	(0X43F40A0C);
	create_dword	(0X43F40A10);
	create_dword	(0X43F40A14);
	set_name	(0X43F40A14,	"C_SDK::Globals::Math::PI_2");
	create_dword	(0X43F40A18);
	create_dword	(0X43F40A1C);
	create_dword	(0X43F40A20);
	create_dword	(0X43F40A24);
	create_dword	(0X43F40A28);
	create_dword	(0X43F40A2C);
	create_dword	(0X43F40A30);
	create_dword	(0X43F40A34);
	set_name	(0X43F40A34,	"a2");
	create_dword	(0X43F40A38);
	create_dword	(0X43F40A3C);
	create_dword	(0X43F40A40);
	create_dword	(0X43F40A44);
	create_dword	(0X43F40A48);
	create_dword	(0X43F40A4C);
	create_dword	(0X43F40A50);
	create_dword	(0X43F40A54);
	create_dword	(0X43F40A58);
	create_dword	(0X43F40A5C);
	create_float	(0X43F40A60);
	create_dword	(0X43F40A64);
	create_dword	(0X43F40A68);
	create_dword	(0X43F40A6C);
	create_dword	(0X43F40A70);
	create_float	(0X43F40A74);
	create_dword	(0X43F40A78);
	create_float	(0X43F40A7C);
	set_name	(0X43F40A7C,	"C_SDK::Values::Float::46.0");
	create_float	(0X43F40A80);
	create_float	(0X43F40A84);
	create_float	(0X43F40A88);
	create_float	(0X43F40A8C);
	set_name	(0X43F40A8C,	"C_SDK::Values::Float::57.295779513082");
	create_float	(0X43F40A90);
	create_dword	(0X43F40A94);
	create_dword	(0X43F40A98);
	create_float	(0X43F40A9C);
	create_dword	(0X43F40AA0);
	create_dword	(0X43F40AA4);
	create_dword	(0X43F40AA8);
	create_dword	(0X43F40AAC);
	create_dword	(0X43F40AB0);
	create_dword	(0X43F40AB4);
	create_dword	(0X43F40AB8);
	create_float	(0X43F40ABC);
	create_float	(0X43F40AC0);
	create_dword	(0X43F40AC4);
	create_dword	(0X43F40AC8);
	create_float	(0X43F40ACC);
	create_dword	(0X43F40AD0);
	create_dword	(0X43F40AD4);
	create_float	(0X43F40AD8);
	create_float	(0X43F40ADC);
	create_float	(0X43F40AE0);
	create_float	(0X43F40AE4);
	create_float	(0X43F40AE8);
	create_dword	(0X43F40AEC);
	create_dword	(0X43F40AF0);
	create_dword	(0X43F40AF4);
	create_dword	(0X43F40AF8);
	create_dword	(0X43F40AFC);
	create_dword	(0X43F40B00);
	create_dword	(0X43F40B04);
	create_dword	(0X43F40B08);
	create_float	(0X43F40B0C);
	create_float	(0X43F40B10);
	create_float	(0X43F40B14);
	create_float	(0X43F40B18);
	create_dword	(0X43F40B1C);
	create_float	(0X43F40B20);
	create_dword	(0X43F40B24);
	create_dword	(0X43F40B28);
	create_dword	(0X43F40B2C);
	create_dword	(0X43F40B30);
	create_dword	(0X43F40B34);
	create_dword	(0X43F40B38);
	create_float	(0X43F40B3C);
	set_name	(0X43F40B3C,	"C_SDK::Values::Float::260.0");
	create_dword	(0X43F40B40);
	create_dword	(0X43F40B44);
	create_dword	(0X43F40B48);
	create_float	(0X43F40B4C);
	create_dword	(0X43F40B50);
	create_dword	(x=0X43F40B54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40B58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40B5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_float	(0X43F40B60);
	create_dword	(x=0X43F40B64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F40B68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F40B6C);
	create_dword	(0X43F40B70);
	create_dword	(0X43F40B74);
	create_dword	(0X43F40B78);
	create_float	(0X43F40B7C);
	set_name	(0X43F40B7C,	"C_SDK::Values::Float::8192.0::Second");
	create_dword	(0X43F40B80);
	create_dword	(0X43F40B84);
	create_dword	(0X43F40B88);
	create_dword	(0X43F40B8C);
	create_double	(0X43F40B90);
	create_dword	(0X43F40B98);
	create_dword	(0X43F40B9C);
	create_dword	(0X43F40BA0);
	create_dword	(0X43F40BA4);
	create_dword	(0X43F40BA8);
	create_float	(0X43F40BAC);
	create_dword	(0X43F40BB0);
	create_dword	(0X43F40BB4);
	create_float	(0X43F40BB8);
	create_float	(0X43F40BBC);
	create_dword	(0X43F40BC0);
	create_dword	(0X43F40BC4);
	create_float	(0X43F40BC8);
	create_dword	(0X43F40BCC);
	create_float	(0X43F40BD0);
	create_dword	(0X43F40BD4);
	create_dword	(0X43F40BD8);
	create_float	(0X43F40BDC);
	create_dword	(0X43F40BE0);
	make_array	(0X43F40BE4,	0X4);
	create_dword	(0X43F40BE8);
	create_dword	(0X43F40BEC);
	create_dword	(0X43F40BF0);
	create_dword	(0X43F40BF4);
	create_dword	(0X43F40BF8);
	create_dword	(0X43F40BFC);
	create_dword	(0X43F40C00);
	create_dword	(0X43F40C04);
	create_dword	(0X43F40C08);
	create_dword	(0X43F40C0C);
	create_dword	(0X43F40C10);
	create_dword	(0X43F40C14);
	create_dword	(0X43F40C18);
	create_dword	(0X43F40C1C);
	create_dword	(0X43F40C20);
	create_dword	(0X43F40C24);
	make_array	(0X43F40C24,	0X32);
	create_dword	(0X43F40CEC);
	make_array	(0X43F40CEC,	0X2);
	create_byte	(0X43F40CF5);
	make_array	(0X43F40CF5,	0X3);
	create_dword	(0X43F40CF8);
	make_array	(0X43F40CF8,	0X3);
	create_dword	(0X43F40D04);
	make_array	(0X43F40D04,	0X4);
	create_byte	(0X43F40D15);
	make_array	(0X43F40D15,	0X3);
	create_strlit	(0X43F40D18,	0X41);
	set_name	(0X43F40D18,	"aJjjjkrjjjjoljj");
	create_byte	(0X43F40D59);
	make_array	(0X43F40D59,	0X3);
	create_word	(0X43F40D5E);
	create_dword	(0X43F40D60);
	make_array	(0X43F40D60,	0X24);
	create_oword	(0X43F40DF0);
	create_oword	(0X43F40E00);
	create_oword	(0X43F40E10);
	create_oword	(0X43F40E20);
	create_oword	(0X43F40E30);
	create_oword	(0X43F40E40);
	create_oword	(0X43F40E50);
	create_oword	(0X43F40E60);
	create_oword	(0X43F40E70);
	create_oword	(0X43F40E80);
	create_oword	(0X43F40E90);
	create_oword	(0X43F40EA0);
	create_oword	(0X43F40EB0);
	create_oword	(0X43F40EC0);
	create_oword	(0X43F40ED0);
	create_oword	(0X43F40EE0);
	create_oword	(0X43F40EF0);
	create_oword	(0X43F40F00);
	create_oword	(0X43F40F10);
	create_oword	(0X43F40F20);
	create_oword	(0X43F40F30);
	create_oword	(0X43F40F40);
	create_oword	(0X43F40F50);
	create_oword	(0X43F40F60);
	create_oword	(0X43F40F70);
	create_oword	(0X43F40F80);
	create_oword	(0X43F40F90);
	create_oword	(0X43F40FA0);
	create_oword	(0X43F40FB0);
	create_oword	(0X43F40FC0);
	create_oword	(0X43F40FD0);
	create_oword	(0X43F40FE0);
	create_oword	(0X43F40FF0);
	create_oword	(0X43F41000);
	create_oword	(0X43F41010);
	create_oword	(0X43F41020);
	create_oword	(0X43F41030);
	create_oword	(0X43F41040);
	create_oword	(0X43F41050);
	create_oword	(0X43F41060);
	create_oword	(0X43F41070);
	create_oword	(0X43F41080);
	create_oword	(0X43F41090);
	create_oword	(0X43F410A0);
	create_oword	(0X43F410B0);
	create_oword	(0X43F410C0);
	create_oword	(0X43F410D0);
	create_oword	(0X43F410E0);
	create_oword	(0X43F410F0);
	create_oword	(0X43F41100);
	create_oword	(0X43F41110);
	create_oword	(0X43F41120);
	create_oword	(0X43F41130);
	create_oword	(0X43F41140);
	create_oword	(0X43F41150);
	create_oword	(0X43F41160);
	create_oword	(0X43F41170);
	create_oword	(0X43F41180);
	create_oword	(0X43F41190);
	create_oword	(0X43F411A0);
	create_oword	(0X43F411B0);
	create_oword	(0X43F411C0);
	create_oword	(0X43F411D0);
	create_oword	(0X43F411E0);
	create_oword	(0X43F411F0);
	create_oword	(0X43F41200);
	create_oword	(0X43F41210);
	create_oword	(0X43F41220);
	create_oword	(0X43F41230);
	create_oword	(0X43F41240);
	create_oword	(0X43F41250);
	create_oword	(0X43F41260);
	create_oword	(0X43F41270);
	create_oword	(0X43F41280);
	create_oword	(0X43F41290);
	create_oword	(0X43F412A0);
	create_oword	(0X43F412B0);
	create_oword	(0X43F412C0);
	create_oword	(0X43F412D0);
	create_oword	(0X43F412E0);
	create_oword	(0X43F412F0);
	create_oword	(0X43F41300);
	create_oword	(0X43F41310);
	create_oword	(0X43F41320);
	create_oword	(0X43F41330);
	create_oword	(0X43F41340);
	create_oword	(0X43F41350);
	create_oword	(0X43F41360);
	create_oword	(0X43F41370);
	create_oword	(0X43F41380);
	create_oword	(0X43F41390);
	create_oword	(0X43F413A0);
	create_oword	(0X43F413B0);
	create_oword	(0X43F413C0);
	create_oword	(0X43F413D0);
	create_oword	(0X43F413E0);
	create_oword	(0X43F413F0);
	create_oword	(0X43F41400);
	create_oword	(0X43F41410);
	create_oword	(0X43F41420);
	create_oword	(0X43F41430);
	create_oword	(0X43F41440);
	create_oword	(0X43F41450);
	create_oword	(0X43F41460);
	create_oword	(0X43F41470);
	create_oword	(0X43F41480);
	create_oword	(0X43F41490);
	create_oword	(0X43F414A0);
	create_oword	(0X43F414B0);
	create_oword	(0X43F414C0);
	create_oword	(0X43F414D0);
	create_oword	(0X43F414E0);
	create_oword	(0X43F414F0);
	create_oword	(0X43F41500);
	create_oword	(0X43F41510);
	create_oword	(0X43F41520);
	create_oword	(0X43F41530);
	create_oword	(0X43F41540);
	create_oword	(0X43F41550);
	create_oword	(0X43F41560);
	create_oword	(0X43F41570);
	create_oword	(0X43F41580);
	create_oword	(0X43F41590);
	create_oword	(0X43F415A0);
	create_oword	(0X43F415B0);
	create_oword	(0X43F415C0);
	create_oword	(0X43F415D0);
	create_oword	(0X43F415E0);
	create_oword	(0X43F415F0);
	create_oword	(0X43F41600);
	create_oword	(0X43F41610);
	create_oword	(0X43F41620);
	create_oword	(0X43F41630);
	create_oword	(0X43F41640);
	create_oword	(0X43F41650);
	create_oword	(0X43F41660);
	create_oword	(0X43F41670);
	create_oword	(0X43F41680);
	create_oword	(0X43F41690);
	create_oword	(0X43F416A0);
	create_oword	(0X43F416B0);
	create_oword	(0X43F416C0);
	create_oword	(0X43F416D0);
	create_oword	(0X43F416E0);
	create_oword	(0X43F416F0);
	create_oword	(0X43F41700);
	create_oword	(0X43F41710);
	create_oword	(0X43F41720);
	create_oword	(0X43F41730);
	create_oword	(0X43F41740);
	create_oword	(0X43F41750);
	create_oword	(0X43F41760);
	create_oword	(0X43F41770);
	create_oword	(0X43F41780);
	create_oword	(0X43F41790);
	create_oword	(0X43F417A0);
	create_oword	(0X43F417B0);
	create_oword	(0X43F417C0);
	create_oword	(0X43F417D0);
	create_oword	(0X43F417E0);
	create_oword	(0X43F417F0);
	create_oword	(0X43F41800);
	create_oword	(0X43F41810);
	create_oword	(0X43F41820);
	create_oword	(0X43F41830);
	create_oword	(0X43F41840);
	create_oword	(0X43F41850);
	create_oword	(0X43F41860);
	create_oword	(0X43F41870);
	create_oword	(0X43F41880);
	create_oword	(0X43F41890);
	create_oword	(0X43F418A0);
	create_oword	(0X43F418B0);
	create_oword	(0X43F418C0);
	create_oword	(0X43F418D0);
	create_oword	(0X43F418E0);
	create_oword	(0X43F418F0);
	create_oword	(0X43F41900);
	create_oword	(0X43F41910);
	create_oword	(0X43F41920);
	create_oword	(0X43F41930);
	create_oword	(0X43F41940);
	create_oword	(0X43F41950);
	create_oword	(0X43F41960);
	create_oword	(0X43F41970);
	create_oword	(0X43F41980);
	create_oword	(0X43F41990);
	create_oword	(0X43F419A0);
	create_oword	(0X43F419B0);
	create_oword	(0X43F419C0);
	create_oword	(0X43F419D0);
	create_oword	(0X43F419E0);
	create_oword	(0X43F419F0);
	create_oword	(0X43F41A00);
	create_oword	(0X43F41A10);
	create_qword	(0X43F41A20);
	create_dword	(0X43F41A28);
	create_dword	(0X43F41A2C);
	create_oword	(0X43F41A30);
	create_oword	(0X43F41A40);
	create_oword	(0X43F41A50);
	create_oword	(0X43F41A60);
	create_oword	(0X43F41A70);
	create_oword	(0X43F41A80);
	create_oword	(0X43F41A90);
	create_oword	(0X43F41AA0);
	create_oword	(0X43F41AB0);
	create_oword	(0X43F41AC0);
	create_oword	(0X43F41AD0);
	create_oword	(0X43F41AE0);
	create_oword	(0X43F41AF0);
	create_oword	(0X43F41B00);
	create_oword	(0X43F41B10);
	create_oword	(0X43F41B20);
	create_oword	(0X43F41B30);
	create_oword	(0X43F41B40);
	create_oword	(0X43F41B50);
	create_oword	(0X43F41B60);
	create_oword	(0X43F41B70);
	create_oword	(0X43F41B80);
	create_oword	(0X43F41B90);
	create_oword	(0X43F41BA0);
	create_oword	(0X43F41BB0);
	create_oword	(0X43F41BC0);
	create_oword	(0X43F41BD0);
	create_oword	(0X43F41BE0);
	create_oword	(0X43F41BF0);
	create_oword	(0X43F41C00);
	create_oword	(0X43F41C10);
	create_oword	(0X43F41C20);
	create_oword	(0X43F41C30);
	create_oword	(0X43F41C40);
	create_oword	(0X43F41C50);
	create_oword	(0X43F41C60);
	create_oword	(0X43F41C70);
	create_oword	(0X43F41C80);
	create_oword	(0X43F41C90);
	create_oword	(0X43F41CA0);
	create_oword	(0X43F41CB0);
	create_oword	(0X43F41CC0);
	create_oword	(0X43F41CD0);
	create_oword	(0X43F41CE0);
	create_oword	(0X43F41CF0);
	create_oword	(0X43F41D00);
	create_oword	(0X43F41D10);
	create_oword	(0X43F41D20);
	create_oword	(0X43F41D30);
	create_oword	(0X43F41D40);
	create_oword	(0X43F41D50);
	create_oword	(0X43F41D60);
	create_oword	(0X43F41D70);
	create_oword	(0X43F41D80);
	create_oword	(0X43F41D90);
	create_oword	(0X43F41DA0);
	create_oword	(0X43F41DB0);
	create_oword	(0X43F41DC0);
	create_oword	(0X43F41DD0);
	create_oword	(0X43F41DE0);
	create_oword	(0X43F41DF0);
	create_oword	(0X43F41E00);
	create_oword	(0X43F41E10);
	create_oword	(0X43F41E20);
	create_oword	(0X43F41E30);
	create_oword	(0X43F41E40);
	create_oword	(0X43F41E50);
	create_oword	(0X43F41E60);
	create_oword	(0X43F41E70);
	create_oword	(0X43F41E80);
	create_oword	(0X43F41E90);
	create_oword	(0X43F41EA0);
	create_oword	(0X43F41EB0);
	create_oword	(0X43F41EC0);
	create_oword	(0X43F41ED0);
	create_oword	(0X43F41EE0);
	create_oword	(0X43F41EF0);
	create_oword	(0X43F41F00);
	create_oword	(0X43F41F10);
	create_oword	(0X43F41F20);
	create_oword	(0X43F41F30);
	create_oword	(0X43F41F40);
	create_oword	(0X43F41F50);
	create_oword	(0X43F41F60);
	create_oword	(0X43F41F70);
	create_oword	(0X43F41F80);
	create_oword	(0X43F41F90);
	create_oword	(0X43F41FA0);
	create_oword	(0X43F41FB0);
	create_oword	(0X43F41FC0);
	create_oword	(0X43F41FD0);
	create_oword	(0X43F41FE0);
	create_oword	(0X43F41FF0);
	create_oword	(0X43F42000);
	create_oword	(0X43F42010);
	create_oword	(0X43F42020);
	create_oword	(0X43F42030);
	create_oword	(0X43F42040);
	create_oword	(0X43F42050);
	create_oword	(0X43F42060);
	create_oword	(0X43F42070);
	create_oword	(0X43F42080);
	create_oword	(0X43F42090);
	create_oword	(0X43F420A0);
	create_oword	(0X43F420B0);
	create_oword	(0X43F420C0);
	create_oword	(0X43F420D0);
	create_oword	(0X43F420E0);
	create_oword	(0X43F420F0);
	create_oword	(0X43F42100);
	create_oword	(0X43F42110);
	create_oword	(0X43F42120);
	create_oword	(0X43F42130);
	create_oword	(0X43F42140);
	set_name	(0X43F42140,	"C_SDK::Globals::Math::AbsMask");
	create_oword	(0X43F42150);
	create_oword	(0X43F42160);
	create_oword	(0X43F42170);
	create_oword	(0X43F42180);
	set_name	(0X43F42180,	"C_SDK::Globals::Math::Negative");
	create_dword	(0X43F42190);
	create_dword	(0X43F42194);
	create_qword	(0X43F42198);
	create_qword	(0X43F421A0);
	create_dword	(0X43F421A8);
	create_dword	(0X43F421AC);
	create_dword	(0X43F421B0);
	create_dword	(0X43F421B4);
	create_dword	(0X43F421B8);
	create_dword	(0X43F421BC);
	create_dword	(0X43F421C0);
	create_dword	(0X43F421C4);
	create_dword	(0X43F421C8);
	create_dword	(0X43F421CC);
	create_dword	(0X43F421D0);
	create_dword	(0X43F421D4);
	create_dword	(0X43F421D8);
	create_dword	(0X43F421DC);
	create_dword	(0X43F421E0);
	create_dword	(0X43F421E4);
	create_float	(0X43F421E8);
	create_dword	(0X43F421EC);
	create_dword	(x=0X43F42224);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F42228);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F4222C);
	make_array	(0X43F4222C,	0X5);
	create_dword	(0X43F42240);
	make_array	(0X43F42240,	0X13);
	set_cmt	(0X43F4228C,	"signature\nsignature\nsignature\nsignature\nsignature",	0);
	create_dword	(x=0X43F4228C);
	op_dec		(x,	0);
	set_name	(0X43F4228C,	"??_R4type_info@@6B@");
	set_cmt	(0X43F42290,	"offset of this vtable in complete class (from top)\noffset of this vtable in complete class (from top)\noffset of this vtable in complete class (from top)\noffset of this vtable in complete class (from top)\noffset of this vtable in complete class (from top)",	0);
	create_dword	(x=0X43F42290);
	op_dec		(x,	0);
	set_cmt	(0X43F42294,	"offset of constructor displacement\noffset of constructor displacement\noffset of constructor displacement\noffset of constructor displacement\noffset of constructor displacement",	0);
	create_dword	(x=0X43F42294);
	op_dec		(x,	0);
	set_cmt	(0X43F42298,	"reference to type description\nreference to type description\nreference to type description\nreference to type description\nreference to type description",	0);
	create_dword	(x=0X43F42298);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F4229C,	"reference to hierarchy description\nreference to hierarchy description\nreference to hierarchy description\nreference to hierarchy description\nreference to hierarchy description",	0);
	create_dword	(x=0X43F4229C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F422A0,	"signature\nsignature\nsignature\nsignature\nsignature",	0);
	create_dword	(x=0X43F422A0);
	op_dec		(x,	0);
	set_name	(0X43F422A0,	"??_R3type_info@@8");
	set_cmt	(0X43F422A4,	"attributes\nattributes\nattributes\nattributes\nattributes",	0);
	create_dword	(x=0X43F422A4);
	op_hex		(x,	0);
	set_cmt	(0X43F422A8,	"# of items in the array of base classes\n# of items in the array of base classes\n# of items in the array of base classes\n# of items in the array of base classes\n# of items in the array of base classes",	0);
	create_dword	(x=0X43F422A8);
	op_dec		(x,	0);
	set_cmt	(0X43F422AC,	"reference to the array of base classes\nreference to the array of base classes\nreference to the array of base classes\nreference to the array of base classes\nreference to the array of base classes",	0);
	create_dword	(x=0X43F422AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F422B0,	"reference to base class decription 1\nreference to base class decription 1\nreference to base class decription 1\nreference to base class decription 1\nreference to base class decription 1",	0);
	create_dword	(x=0X43F422B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F422B0,	"??_R2type_info@@8");
	make_array	(0X43F422B4,	0X4);
	set_cmt	(0X43F422B8,	"reference to type description\nreference to type description\nreference to type description\nreference to type description\nreference to type description",	0);
	create_dword	(x=0X43F422B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F422B8,	"??_R1A@?0A@EA@type_info@@8");
	set_cmt	(0X43F422BC,	"# of sub elements within base class array\n# of sub elements within base class array\n# of sub elements within base class array\n# of sub elements within base class array\n# of sub elements within base class array",	0);
	create_dword	(x=0X43F422BC);
	op_dec		(x,	0);
	set_cmt	(0X43F422C0,	"member displacement\nmember displacement\nmember displacement\nmember displacement\nmember displacement",	0);
	create_dword	(x=0X43F422C0);
	op_dec		(x,	0);
	set_cmt	(0X43F422C4,	"vftable displacement\nvftable displacement\nvftable displacement\nvftable displacement\nvftable displacement",	0);
	create_dword	(x=0X43F422C4);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	set_cmt	(0X43F422C8,	"displacement within vftable\ndisplacement within vftable\ndisplacement within vftable\ndisplacement within vftable\ndisplacement within vftable",	0);
	create_dword	(x=0X43F422C8);
	op_dec		(x,	0);
	set_cmt	(0X43F422CC,	"base class attributes\nbase class attributes\nbase class attributes\nbase class attributes\nbase class attributes",	0);
	create_dword	(x=0X43F422CC);
	op_hex		(x,	0);
	set_cmt	(0X43F422D0,	"reference to class hierarchy descriptor\nreference to class hierarchy descriptor\nreference to class hierarchy descriptor\nreference to class hierarchy descriptor\nreference to class hierarchy descriptor",	0);
	create_dword	(x=0X43F422D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F422D4,	"signature\nsignature\nsignature",	0);
	create_dword	(x=0X43F422D4);
	op_dec		(x,	0);
	set_name	(0X43F422D4,	"??_R4exception@std@@6B@");
	set_cmt	(0X43F422D8,	"offset of this vtable in complete class (from top)\noffset of this vtable in complete class (from top)\noffset of this vtable in complete class (from top)",	0);
	create_dword	(x=0X43F422D8);
	op_dec		(x,	0);
	set_cmt	(0X43F422DC,	"offset of constructor displacement\noffset of constructor displacement\noffset of constructor displacement",	0);
	create_dword	(x=0X43F422DC);
	op_dec		(x,	0);
	set_cmt	(0X43F422E0,	"reference to type description\nreference to type description\nreference to type description",	0);
	create_dword	(x=0X43F422E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F422E4,	"reference to hierarchy description\nreference to hierarchy description\nreference to hierarchy description",	0);
	create_dword	(x=0X43F422E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F422E8,	"signature\nsignature\nsignature",	0);
	create_dword	(x=0X43F422E8);
	op_dec		(x,	0);
	set_name	(0X43F422E8,	"??_R3exception@std@@8");
	set_cmt	(0X43F422EC,	"attributes\nattributes\nattributes",	0);
	create_dword	(x=0X43F422EC);
	op_hex		(x,	0);
	set_cmt	(0X43F422F0,	"# of items in the array of base classes\n# of items in the array of base classes\n# of items in the array of base classes",	0);
	create_dword	(x=0X43F422F0);
	op_dec		(x,	0);
	set_cmt	(0X43F422F4,	"reference to the array of base classes\nreference to the array of base classes\nreference to the array of base classes",	0);
	create_dword	(x=0X43F422F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F422F8,	"reference to base class decription 1\nreference to base class decription 1\nreference to base class decription 1",	0);
	update_extra_cmt		(0X43F422F8,	E_PREV + 0,	"");
	create_dword	(x=0X43F422F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F422F8,	"??_R2exception@std@@8");
	create_dword	(0X43F422FC);
	set_cmt	(0X43F42300,	"reference to type description\nreference to type description\nreference to type description",	0);
	create_dword	(x=0X43F42300);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F42300,	"??_R1A@?0A@EA@exception@std@@8");
	set_cmt	(0X43F42304,	"# of sub elements within base class array\n# of sub elements within base class array\n# of sub elements within base class array",	0);
	create_dword	(x=0X43F42304);
	op_dec		(x,	0);
	set_cmt	(0X43F42308,	"member displacement\nmember displacement\nmember displacement",	0);
	create_dword	(x=0X43F42308);
	op_dec		(x,	0);
	set_cmt	(0X43F4230C,	"vftable displacement\nvftable displacement\nvftable displacement",	0);
	create_dword	(x=0X43F4230C);
	op_dec		(x,	0);
	set_cmt	(0X43F42310,	"displacement within vftable\ndisplacement within vftable\ndisplacement within vftable",	0);
	create_dword	(x=0X43F42310);
	op_dec		(x,	0);
	set_cmt	(0X43F42314,	"base class attributes\nbase class attributes\nbase class attributes",	0);
	create_dword	(x=0X43F42314);
	op_hex		(x,	0);
	set_cmt	(0X43F42318,	"reference to class hierarchy descriptor\nreference to class hierarchy descriptor\nreference to class hierarchy descriptor",	0);
	create_dword	(x=0X43F42318);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F4231C,	"signature",	0);
	create_dword	(x=0X43F4231C);
	op_dec		(x,	0);
	set_name	(0X43F4231C,	"??_R4bad_alloc@std@@6B@");
	set_cmt	(0X43F42320,	"offset of this vtable in complete class (from top)",	0);
	create_dword	(x=0X43F42320);
	op_dec		(x,	0);
	set_cmt	(0X43F42324,	"offset of constructor displacement",	0);
	create_dword	(x=0X43F42324);
	op_dec		(x,	0);
	set_cmt	(0X43F42328,	"reference to type description",	0);
	create_dword	(x=0X43F42328);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F4232C,	"reference to hierarchy description",	0);
	create_dword	(x=0X43F4232C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F42330,	"signature\nsignature",	0);
	create_dword	(x=0X43F42330);
	op_dec		(x,	0);
	set_name	(0X43F42330,	"??_R3bad_alloc@std@@8");
	set_cmt	(0X43F42334,	"attributes\nattributes",	0);
	create_dword	(x=0X43F42334);
	op_hex		(x,	0);
	set_cmt	(0X43F42338,	"# of items in the array of base classes\n# of items in the array of base classes",	0);
	create_dword	(x=0X43F42338);
	op_dec		(x,	0);
	set_cmt	(0X43F4233C,	"reference to the array of base classes\nreference to the array of base classes",	0);
	create_dword	(x=0X43F4233C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F42340,	"reference to base class decription 1\nreference to base class decription 1",	0);
	update_extra_cmt		(0X43F42340,	E_PREV + 0,	"");
	create_dword	(x=0X43F42340);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F42340,	"??_R2bad_alloc@std@@8");
	set_cmt	(0X43F42344,	"reference to base class decription 2\nreference to base class decription 2",	0);
	create_dword	(x=0X43F42344);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F42348);
	set_cmt	(0X43F4234C,	"reference to type description\nreference to type description",	0);
	create_dword	(x=0X43F4234C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F4234C,	"??_R1A@?0A@EA@bad_alloc@std@@8");
	set_cmt	(0X43F42350,	"# of sub elements within base class array\n# of sub elements within base class array",	0);
	create_dword	(x=0X43F42350);
	op_dec		(x,	0);
	set_cmt	(0X43F42354,	"member displacement\nmember displacement",	0);
	create_dword	(x=0X43F42354);
	op_dec		(x,	0);
	set_cmt	(0X43F42358,	"vftable displacement\nvftable displacement",	0);
	create_dword	(x=0X43F42358);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	set_cmt	(0X43F4235C,	"displacement within vftable\ndisplacement within vftable",	0);
	create_dword	(x=0X43F4235C);
	op_dec		(x,	0);
	set_cmt	(0X43F42360,	"base class attributes\nbase class attributes",	0);
	create_dword	(x=0X43F42360);
	op_hex		(x,	0);
	set_cmt	(0X43F42364,	"reference to class hierarchy descriptor\nreference to class hierarchy descriptor",	0);
	create_dword	(x=0X43F42364);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F42368,	"signature\nsignature",	0);
	create_dword	(x=0X43F42368);
	op_dec		(x,	0);
	set_name	(0X43F42368,	"??_R4bad_array_new_length@std@@6B@");
	set_cmt	(0X43F4236C,	"offset of this vtable in complete class (from top)\noffset of this vtable in complete class (from top)",	0);
	create_dword	(x=0X43F4236C);
	op_dec		(x,	0);
	set_cmt	(0X43F42370,	"offset of constructor displacement\noffset of constructor displacement",	0);
	create_dword	(x=0X43F42370);
	op_dec		(x,	0);
	set_cmt	(0X43F42374,	"reference to type description\nreference to type description",	0);
	create_dword	(x=0X43F42374);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F42378,	"reference to hierarchy description\nreference to hierarchy description",	0);
	create_dword	(x=0X43F42378);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F4237C,	"signature\nsignature",	0);
	create_dword	(x=0X43F4237C);
	op_dec		(x,	0);
	set_name	(0X43F4237C,	"??_R3bad_array_new_length@std@@8");
	set_cmt	(0X43F42380,	"attributes\nattributes",	0);
	create_dword	(x=0X43F42380);
	op_hex		(x,	0);
	set_cmt	(0X43F42384,	"# of items in the array of base classes\n# of items in the array of base classes",	0);
	create_dword	(x=0X43F42384);
	op_dec		(x,	0);
	set_cmt	(0X43F42388,	"reference to the array of base classes\nreference to the array of base classes",	0);
	create_dword	(x=0X43F42388);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F4238C,	"reference to base class decription 1\nreference to base class decription 1",	0);
	create_dword	(x=0X43F4238C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F4238C,	"??_R2bad_array_new_length@std@@8");
	set_cmt	(0X43F42390,	"reference to base class decription 2\nreference to base class decription 2",	0);
	create_dword	(x=0X43F42390);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F42394,	"reference to base class decription 3\nreference to base class decription 3",	0);
	create_dword	(x=0X43F42394);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F42398);
	set_cmt	(0X43F4239C,	"reference to type description\nreference to type description",	0);
	create_dword	(x=0X43F4239C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F4239C,	"??_R1A@?0A@EA@bad_array_new_length@std@@8");
	set_cmt	(0X43F423A0,	"# of sub elements within base class array\n# of sub elements within base class array",	0);
	create_dword	(x=0X43F423A0);
	op_dec		(x,	0);
	set_cmt	(0X43F423A4,	"member displacement\nmember displacement",	0);
	create_dword	(x=0X43F423A4);
	op_dec		(x,	0);
	set_cmt	(0X43F423A8,	"vftable displacement\nvftable displacement",	0);
	create_dword	(x=0X43F423A8);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	set_cmt	(0X43F423AC,	"displacement within vftable\ndisplacement within vftable",	0);
	create_dword	(x=0X43F423AC);
	op_dec		(x,	0);
	set_cmt	(0X43F423B0,	"base class attributes\nbase class attributes",	0);
	create_dword	(x=0X43F423B0);
	op_hex		(x,	0);
	set_cmt	(0X43F423B4,	"reference to class hierarchy descriptor\nreference to class hierarchy descriptor",	0);
	create_dword	(x=0X43F423B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X43F423B8,	0X8);
	create_dword	(0X43F423C0);
	create_dword	(0X43F423C4);
	make_array	(0X43F423C4,	0X30);
	create_byte	(0X43F42485);
	make_array	(0X43F42485,	0X3);
	create_strlit	(0X43F4248C,	0X9);
	set_name	(0X43F4248C,	"aTextMn");
	make_array	(0X43F42495,	0X3);
	create_byte	(0X43F42499);
	make_array	(0X43F42499,	0X3);
	create_dword	(0X43F4249C);
	make_array	(0X43F4249C,	0X8);
	create_dword	(0X43F424BC);
	make_array	(0X43F424BC,	0X5);
	create_byte	(0X43F424D1);
	make_array	(0X43F424D1,	0X3);
	create_dword	(0X43F424D4);
	make_array	(0X43F424D4,	0X8);
	create_dword	(0X43F424F4);
	make_array	(0X43F424F4,	0X5);
	create_byte	(0X43F42509);
	make_array	(0X43F42509,	0X3);
	create_byte	(0X43F4250D);
	make_array	(0X43F4250D,	0X3);
	create_strlit	(0X43F42511,	0X8);
	set_name	(0X43F42511,	"aCrtXcu");
	make_array	(0X43F42519,	0X3);
	create_word	(0X43F4251E);
	create_dword	(0X43F42520);
	make_array	(0X43F42520,	0X4);
	create_word	(0X43F42532);
	create_dword	(0X43F42534);
	make_array	(0X43F42534,	0X4);
	create_word	(0X43F42546);
	create_dword	(0X43F42548);
	make_array	(0X43F42548,	0X4);
	create_word	(0X43F4255A);
	create_dword	(0X43F4255C);
	make_array	(0X43F4255C,	0X4);
	create_word	(0X43F4256E);
	create_dword	(0X43F42570);
	make_array	(0X43F42570,	0X4);
	create_word	(0X43F42582);
	create_dword	(0X43F42584);
	make_array	(0X43F42584,	0X4);
	create_word	(0X43F42596);
	create_dword	(0X43F42598);
	make_array	(0X43F42598,	0X4);
	create_word	(0X43F425AA);
	create_dword	(0X43F425AC);
	make_array	(0X43F425AC,	0X8);
	make_array	(0X43F425D1,	0X3);
	create_strlit	(0X43F425D6,	0XC);
	set_name	(0X43F425D6,	"aDataSxdata");
	make_array	(0X43F425E2,	0X2);
	create_dword	(0X43F425E4);
	make_array	(0X43F425E4,	0XB);
	create_word	(0X43F42612);
	create_dword	(0X43F42614);
	make_array	(0X43F42614,	0X4);
	create_word	(0X43F42626);
	create_dword	(0X43F42628);
	make_array	(0X43F42628,	0X4);
	create_word	(0X43F4263A);
	create_dword	(0X43F4263C);
	make_array	(0X43F4263C,	0X4);
	create_word	(0X43F4264E);
	create_byte	(0X43F42651);
	make_array	(0X43F42651,	0X3);
	create_strlit	(0X43F42656,	0X7);
	set_name	(0X43F42656,	"aDataX");
	make_array	(0X43F4265D,	0X3);
	create_dword	(0X43F42660);
	make_array	(0X43F42660,	0X5);
	create_byte	(0X43F42675);
	make_array	(0X43F42675,	0X3);
	make_array	(0X43F42679,	0X3);
	create_strlit	(0X43F4267C,	0X9);
	set_name	(0X43F4267C,	"aIdata3");
	make_array	(0X43F42685,	0X3);
	create_word	(0X43F4268A);
	make_array	(0X43F4268E,	0X2);
	create_strlit	(0X43F42690,	0X9);
	set_name	(0X43F42690,	"aIdata4");
	make_array	(0X43F42699,	0X3);
	create_byte	(0X43F4269D);
	make_array	(0X43F4269D,	0X3);
	create_byte	(0X43F426A1);
	make_array	(0X43F426A1,	0X3);
	create_strlit	(0X43F426A4,	0X9);
	set_name	(0X43F426A4,	"aIdata6");
	make_array	(0X43F426AD,	0X3);
	create_dword	(0X43F426B0);
	make_array	(0X43F426B0,	0XC);
	create_dword	(0X43F426E0);
	make_array	(0X43F426E0,	0X5);
	create_byte	(0X43F426F5);
	make_array	(0X43F426F5,	0X3);
	create_byte	(0X43F426F9);
	make_array	(0X43F426F9,	0X3);
	create_strlit	(0X43F426FC,	0X9);
	set_name	(0X43F426FC,	"aRsrc02");
	make_array	(0X43F42705,	0X3);
	create_dword	(0X43F42708);
	create_dword	(0X43F4270C);
	make_array	(0X43F4270C,	0X2);
	create_dword	(0X43F42714);
	MakeStruct	(0X43F42718,	"FuncInfo");
	MakeStruct	(0X43F4273C,	"UnwindMapEntry");
	MakeStruct	(0X43F42744,	"UnwindMapEntry");
	MakeStruct	(0X43F4274C,	"TryBlockMapEntry");
	MakeStruct	(0X43F42760,	"HandlerType");
	MakeStruct	(0X43F42770,	"FuncInfo");
	MakeStruct	(0X43F42794,	"UnwindMapEntry");
	MakeStruct	(0X43F4279C,	"UnwindMapEntry");
	MakeStruct	(0X43F427A4,	"TryBlockMapEntry");
	MakeStruct	(0X43F427B8,	"HandlerType");
	MakeStruct	(0X43F427C8,	"FuncInfo");
	MakeStruct	(0X43F427EC,	"UnwindMapEntry");
	MakeStruct	(0X43F427F4,	"UnwindMapEntry");
	MakeStruct	(0X43F427FC,	"TryBlockMapEntry");
	MakeStruct	(0X43F42810,	"HandlerType");
	MakeStruct	(0X43F42820,	"FuncInfo");
	MakeStruct	(0X43F42844,	"UnwindMapEntry");
	MakeStruct	(0X43F4284C,	"UnwindMapEntry");
	MakeStruct	(0X43F42854,	"TryBlockMapEntry");
	MakeStruct	(0X43F42868,	"HandlerType");
	MakeStruct	(0X43F42878,	"FuncInfo");
	MakeStruct	(0X43F4289C,	"UnwindMapEntry");
	MakeStruct	(0X43F428A4,	"UnwindMapEntry");
	MakeStruct	(0X43F428AC,	"TryBlockMapEntry");
	MakeStruct	(0X43F428C0,	"HandlerType");
	MakeStruct	(0X43F428D0,	"FuncInfo");
	MakeStruct	(0X43F428F4,	"UnwindMapEntry");
	MakeStruct	(0X43F428FC,	"UnwindMapEntry");
	MakeStruct	(0X43F42904,	"TryBlockMapEntry");
	MakeStruct	(0X43F42918,	"HandlerType");
	MakeStruct	(0X43F42928,	"FuncInfo");
	MakeStruct	(0X43F4294C,	"UnwindMapEntry");
	MakeStruct	(0X43F42954,	"UnwindMapEntry");
	MakeStruct	(0X43F4295C,	"TryBlockMapEntry");
	MakeStruct	(0X43F42970,	"HandlerType");
	MakeStruct	(0X43F42980,	"FuncInfo");
	MakeStruct	(0X43F429A4,	"UnwindMapEntry");
	MakeStruct	(0X43F429AC,	"UnwindMapEntry");
	MakeStruct	(0X43F429B4,	"TryBlockMapEntry");
	MakeStruct	(0X43F429C8,	"HandlerType");
	MakeStruct	(0X43F429D8,	"FuncInfo");
	MakeStruct	(0X43F429FC,	"UnwindMapEntry");
	MakeStruct	(0X43F42A04,	"UnwindMapEntry");
	MakeStruct	(0X43F42A0C,	"TryBlockMapEntry");
	MakeStruct	(0X43F42A20,	"HandlerType");
	MakeStruct	(0X43F42A30,	"FuncInfo");
	MakeStruct	(0X43F42A54,	"UnwindMapEntry");
	MakeStruct	(0X43F42A5C,	"UnwindMapEntry");
	MakeStruct	(0X43F42A64,	"TryBlockMapEntry");
	MakeStruct	(0X43F42A78,	"HandlerType");
	MakeStruct	(0X43F42A88,	"FuncInfo");
	MakeStruct	(0X43F42AAC,	"UnwindMapEntry");
	MakeStruct	(0X43F42AB4,	"UnwindMapEntry");
	MakeStruct	(0X43F42ABC,	"TryBlockMapEntry");
	MakeStruct	(0X43F42AD0,	"HandlerType");
	MakeStruct	(0X43F42AE0,	"FuncInfo");
	MakeStruct	(0X43F42B04,	"UnwindMapEntry");
	MakeStruct	(0X43F42B0C,	"UnwindMapEntry");
	MakeStruct	(0X43F42B14,	"TryBlockMapEntry");
	MakeStruct	(0X43F42B28,	"HandlerType");
	MakeStruct	(0X43F42B38,	"FuncInfo");
	MakeStruct	(0X43F42B5C,	"UnwindMapEntry");
	MakeStruct	(0X43F42B64,	"UnwindMapEntry");
	MakeStruct	(0X43F42B6C,	"TryBlockMapEntry");
	MakeStruct	(0X43F42B80,	"HandlerType");
	MakeStruct	(0X43F42B90,	"FuncInfo");
	MakeStruct	(0X43F42BB4,	"UnwindMapEntry");
	MakeStruct	(0X43F42BBC,	"UnwindMapEntry");
	MakeStruct	(0X43F42BC4,	"TryBlockMapEntry");
	MakeStruct	(0X43F42BD8,	"HandlerType");
	MakeStruct	(0X43F42BE8,	"FuncInfo");
	MakeStruct	(0X43F42C0C,	"UnwindMapEntry");
	MakeStruct	(0X43F42C14,	"UnwindMapEntry");
	MakeStruct	(0X43F42C1C,	"TryBlockMapEntry");
	MakeStruct	(0X43F42C30,	"HandlerType");
	MakeStruct	(0X43F42C40,	"FuncInfo");
	MakeStruct	(0X43F42C64,	"UnwindMapEntry");
	MakeStruct	(0X43F42C6C,	"UnwindMapEntry");
	MakeStruct	(0X43F42C74,	"TryBlockMapEntry");
	MakeStruct	(0X43F42C88,	"HandlerType");
	MakeStruct	(0X43F42C98,	"FuncInfo");
	MakeStruct	(0X43F42CBC,	"UnwindMapEntry");
	MakeStruct	(0X43F42CC4,	"UnwindMapEntry");
	MakeStruct	(0X43F42CCC,	"TryBlockMapEntry");
	MakeStruct	(0X43F42CE0,	"HandlerType");
	MakeStruct	(0X43F42CF0,	"FuncInfo");
	MakeStruct	(0X43F42D14,	"UnwindMapEntry");
	MakeStruct	(0X43F42D1C,	"UnwindMapEntry");
	MakeStruct	(0X43F42D24,	"TryBlockMapEntry");
	MakeStruct	(0X43F42D38,	"HandlerType");
	MakeStruct	(0X43F42D48,	"FuncInfo");
	MakeStruct	(0X43F42D6C,	"UnwindMapEntry");
	MakeStruct	(0X43F42D74,	"UnwindMapEntry");
	MakeStruct	(0X43F42D7C,	"TryBlockMapEntry");
	MakeStruct	(0X43F42D90,	"HandlerType");
	MakeStruct	(0X43F42DA0,	"FuncInfo");
	MakeStruct	(0X43F42DC4,	"UnwindMapEntry");
	MakeStruct	(0X43F42DCC,	"UnwindMapEntry");
	MakeStruct	(0X43F42DD4,	"TryBlockMapEntry");
	MakeStruct	(0X43F42DE8,	"HandlerType");
	MakeStruct	(0X43F42DF8,	"FuncInfo");
	MakeStruct	(0X43F42E1C,	"UnwindMapEntry");
	MakeStruct	(0X43F42E24,	"UnwindMapEntry");
	MakeStruct	(0X43F42E2C,	"TryBlockMapEntry");
	MakeStruct	(0X43F42E40,	"HandlerType");
	MakeStruct	(0X43F42E50,	"FuncInfo");
	MakeStruct	(0X43F42E74,	"UnwindMapEntry");
	MakeStruct	(0X43F42E7C,	"UnwindMapEntry");
	MakeStruct	(0X43F42E84,	"TryBlockMapEntry");
	MakeStruct	(0X43F42E98,	"HandlerType");
	MakeStruct	(0X43F42EA8,	"FuncInfo");
	MakeStruct	(0X43F42ECC,	"UnwindMapEntry");
	MakeStruct	(0X43F42ED4,	"UnwindMapEntry");
	MakeStruct	(0X43F42EDC,	"TryBlockMapEntry");
	MakeStruct	(0X43F42EF0,	"HandlerType");
	MakeStruct	(0X43F42F00,	"FuncInfo");
	MakeStruct	(0X43F42F24,	"UnwindMapEntry");
	MakeStruct	(0X43F42F2C,	"UnwindMapEntry");
	MakeStruct	(0X43F42F34,	"TryBlockMapEntry");
	MakeStruct	(0X43F42F48,	"HandlerType");
	MakeStruct	(0X43F42F58,	"FuncInfo");
	MakeStruct	(0X43F42F7C,	"UnwindMapEntry");
	MakeStruct	(0X43F42F84,	"UnwindMapEntry");
	MakeStruct	(0X43F42F8C,	"TryBlockMapEntry");
	MakeStruct	(0X43F42FA0,	"HandlerType");
	MakeStruct	(0X43F42FB0,	"FuncInfo");
	MakeStruct	(0X43F42FD4,	"UnwindMapEntry");
	MakeStruct	(0X43F42FDC,	"UnwindMapEntry");
	MakeStruct	(0X43F42FE4,	"TryBlockMapEntry");
	MakeStruct	(0X43F42FF8,	"HandlerType");
	MakeStruct	(0X43F43008,	"FuncInfo");
	MakeStruct	(0X43F4302C,	"UnwindMapEntry");
	MakeStruct	(0X43F43034,	"UnwindMapEntry");
	MakeStruct	(0X43F4303C,	"TryBlockMapEntry");
	MakeStruct	(0X43F43050,	"HandlerType");
	MakeStruct	(0X43F43060,	"FuncInfo");
	MakeStruct	(0X43F43084,	"UnwindMapEntry");
	MakeStruct	(0X43F4308C,	"UnwindMapEntry");
	MakeStruct	(0X43F43094,	"TryBlockMapEntry");
	MakeStruct	(0X43F430A8,	"HandlerType");
	MakeStruct	(0X43F430B8,	"FuncInfo");
	MakeStruct	(0X43F430DC,	"UnwindMapEntry");
	MakeStruct	(0X43F430E4,	"UnwindMapEntry");
	MakeStruct	(0X43F430EC,	"TryBlockMapEntry");
	MakeStruct	(0X43F43100,	"HandlerType");
	MakeStruct	(0X43F43110,	"FuncInfo");
	MakeStruct	(0X43F43134,	"UnwindMapEntry");
	MakeStruct	(0X43F4313C,	"UnwindMapEntry");
	MakeStruct	(0X43F43144,	"TryBlockMapEntry");
	MakeStruct	(0X43F43158,	"HandlerType");
	MakeStruct	(0X43F43168,	"FuncInfo");
	MakeStruct	(0X43F4318C,	"UnwindMapEntry");
	MakeStruct	(0X43F43194,	"UnwindMapEntry");
	MakeStruct	(0X43F4319C,	"TryBlockMapEntry");
	MakeStruct	(0X43F431B0,	"HandlerType");
	MakeStruct	(0X43F431C0,	"FuncInfo");
	MakeStruct	(0X43F431E4,	"UnwindMapEntry");
	MakeStruct	(0X43F431EC,	"UnwindMapEntry");
	MakeStruct	(0X43F431F4,	"TryBlockMapEntry");
	MakeStruct	(0X43F43208,	"HandlerType");
	MakeStruct	(0X43F43218,	"FuncInfo");
	MakeStruct	(0X43F4323C,	"UnwindMapEntry");
	MakeStruct	(0X43F43244,	"UnwindMapEntry");
	MakeStruct	(0X43F4324C,	"TryBlockMapEntry");
	MakeStruct	(0X43F43260,	"HandlerType");
	MakeStruct	(0X43F43270,	"FuncInfo");
	MakeStruct	(0X43F43294,	"UnwindMapEntry");
	MakeStruct	(0X43F4329C,	"UnwindMapEntry");
	MakeStruct	(0X43F432A4,	"TryBlockMapEntry");
	MakeStruct	(0X43F432B8,	"HandlerType");
	MakeStruct	(0X43F432C8,	"FuncInfo");
	MakeStruct	(0X43F432EC,	"UnwindMapEntry");
	MakeStruct	(0X43F432F4,	"UnwindMapEntry");
	MakeStruct	(0X43F432FC,	"TryBlockMapEntry");
	MakeStruct	(0X43F43310,	"HandlerType");
	MakeStruct	(0X43F43320,	"FuncInfo");
	MakeStruct	(0X43F43344,	"UnwindMapEntry");
	MakeStruct	(0X43F4334C,	"UnwindMapEntry");
	MakeStruct	(0X43F43354,	"TryBlockMapEntry");
	MakeStruct	(0X43F43368,	"HandlerType");
	MakeStruct	(0X43F43378,	"FuncInfo");
	MakeStruct	(0X43F4339C,	"UnwindMapEntry");
	MakeStruct	(0X43F433A4,	"UnwindMapEntry");
	MakeStruct	(0X43F433AC,	"TryBlockMapEntry");
	MakeStruct	(0X43F433C0,	"HandlerType");
	MakeStruct	(0X43F433D0,	"FuncInfo");
	MakeStruct	(0X43F433F4,	"UnwindMapEntry");
	MakeStruct	(0X43F433FC,	"UnwindMapEntry");
	MakeStruct	(0X43F43404,	"TryBlockMapEntry");
	MakeStruct	(0X43F43418,	"HandlerType");
	MakeStruct	(0X43F43428,	"FuncInfo");
	MakeStruct	(0X43F4344C,	"UnwindMapEntry");
	MakeStruct	(0X43F43454,	"UnwindMapEntry");
	MakeStruct	(0X43F4345C,	"TryBlockMapEntry");
	MakeStruct	(0X43F43470,	"HandlerType");
	MakeStruct	(0X43F43480,	"FuncInfo");
	MakeStruct	(0X43F434A4,	"UnwindMapEntry");
	MakeStruct	(0X43F434AC,	"UnwindMapEntry");
	MakeStruct	(0X43F434B4,	"TryBlockMapEntry");
	MakeStruct	(0X43F434C8,	"HandlerType");
	MakeStruct	(0X43F434D8,	"FuncInfo");
	MakeStruct	(0X43F434FC,	"UnwindMapEntry");
	MakeStruct	(0X43F43504,	"UnwindMapEntry");
	MakeStruct	(0X43F4350C,	"TryBlockMapEntry");
	MakeStruct	(0X43F43520,	"HandlerType");
	MakeStruct	(0X43F43530,	"FuncInfo");
	MakeStruct	(0X43F43554,	"UnwindMapEntry");
	MakeStruct	(0X43F4355C,	"UnwindMapEntry");
	MakeStruct	(0X43F43564,	"TryBlockMapEntry");
	MakeStruct	(0X43F43578,	"HandlerType");
	create_dword	(0X43F43588);
	make_array	(0X43F43588,	0X2);
	create_byte	(0X43F43591);
	make_array	(0X43F43591,	0X3);
	make_array	(0X43F43594,	0X4);
	create_dword	(0X43F43598);
	make_array	(0X43F43598,	0X4);
	create_dword	(0X43F435A8);
	make_array	(0X43F435A8,	0X2);
	create_byte	(0X43F435B1);
	make_array	(0X43F435B1,	0X3);
	make_array	(0X43F435B4,	0X4);
	create_dword	(0X43F435B8);
	make_array	(0X43F435B8,	0X2);
	create_word	(0X43F435C2);
	make_array	(0X43F435C4,	0X4);
	create_dword	(0X43F435C8);
	make_array	(0X43F435C8,	0X2);
	create_byte	(0X43F435D1);
	make_array	(0X43F435D1,	0X3);
	make_array	(0X43F435D4,	0X4);
	create_dword	(0X43F435D8);
	make_array	(0X43F435D8,	0X2);
	create_word	(0X43F435E2);
	make_array	(0X43F435E4,	0X4);
	create_dword	(0X43F435E8);
	make_array	(0X43F435E8,	0X2);
	create_byte	(0X43F435F1);
	make_array	(0X43F435F1,	0X3);
	make_array	(0X43F435F4,	0X4);
	create_dword	(0X43F435F8);
	make_array	(0X43F435F8,	0X3);
	set_cmt	(0X43F43604,	"attributes\nattributes",	0);
	set_cmt	(0X43F43604,	"throw info for 'class std::bad_alloc'\nthrow info for 'class std::bad_alloc'",	1);
	create_dword	(x=0X43F43604);
	op_enum		(x,	0,	GetEnum("__TI_flags"),0);
	set_name	(0X43F43604,	"__TI2?AVbad_alloc@std@@");
	set_cmt	(0X43F43608,	"destructor of exception object\ndestructor of exception object",	0);
	create_dword	(x=0X43F43608);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F4360C,	"forward compatibility frame handler\nforward compatibility frame handler",	0);
	create_dword	(0X43F4360C);
	set_cmt	(0X43F43610,	"address of catchable types array\naddress of catchable types array",	0);
	create_dword	(x=0X43F43610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F43614,	"count of catchable type addresses following\ncount of catchable type addresses following",	0);
	create_dword	(x=0X43F43614);
	op_dec		(x,	0);
	set_name	(0X43F43614,	"__CTA2?AVbad_alloc@std@@");
	create_dword	(x=0X43F43618);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4361C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F43620,	"attributes\nattributes",	0);
	set_cmt	(0X43F43620,	"catchable type 'class std::bad_alloc'\ncatchable type 'class std::bad_alloc'",	1);
	create_dword	(x=0X43F43620);
	op_enum		(x,	0,	GetEnum("__CT_flags"),0);
	set_name	(0X43F43620,	"__CT??_R0?AVbad_alloc@std@@@8_43E1A194");
	create_dword	(x=0X43F43624);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F43628,	"mdisp\nmdisp",	0);
	create_dword	(x=0X43F43628);
	op_dec		(x,	0);
	set_cmt	(0X43F4362C,	"pdisp\npdisp",	0);
	create_dword	(x=0X43F4362C);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	set_cmt	(0X43F43630,	"vdisp\nvdisp",	0);
	create_dword	(x=0X43F43630);
	op_dec		(x,	0);
	set_cmt	(0X43F43634,	"size of thrown object\nsize of thrown object",	0);
	create_dword	(x=0X43F43634);
	op_dec		(x,	0);
	set_cmt	(0X43F43638,	"reference to optional copy constructor\nreference to optional copy constructor",	0);
	create_dword	(x=0X43F43638);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F4363C,	"attributes\nattributes",	0);
	set_cmt	(0X43F4363C,	"throw info for 'class std::bad_array_new_length'\nthrow info for 'class std::bad_array_new_length'",	1);
	create_dword	(x=0X43F4363C);
	op_enum		(x,	0,	GetEnum("__TI_flags"),0);
	set_name	(0X43F4363C,	"__TI3?AVbad_array_new_length@std@@");
	set_cmt	(0X43F43640,	"destructor of exception object\ndestructor of exception object",	0);
	create_dword	(x=0X43F43640);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F43644,	"forward compatibility frame handler\nforward compatibility frame handler",	0);
	create_dword	(0X43F43644);
	set_cmt	(0X43F43648,	"address of catchable types array\naddress of catchable types array",	0);
	create_dword	(x=0X43F43648);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F4364C,	"count of catchable type addresses following\ncount of catchable type addresses following",	0);
	create_dword	(x=0X43F4364C);
	op_dec		(x,	0);
	set_name	(0X43F4364C,	"__CTA3?AVbad_array_new_length@std@@");
	create_dword	(x=0X43F43650);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F43654);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F43658);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F4365C,	"attributes\nattributes",	0);
	set_cmt	(0X43F4365C,	"catchable type 'class std::bad_array_new_length'\ncatchable type 'class std::bad_array_new_length'",	1);
	create_dword	(x=0X43F4365C);
	op_enum		(x,	0,	GetEnum("__CT_flags"),0);
	set_name	(0X43F4365C,	"__CT??_R0?AVbad_array_new_length@std@@@8_43E1A1C7");
	create_dword	(x=0X43F43660);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F43664,	"mdisp\nmdisp",	0);
	create_dword	(x=0X43F43664);
	op_dec		(x,	0);
	set_cmt	(0X43F43668,	"pdisp\npdisp",	0);
	create_dword	(x=0X43F43668);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	set_cmt	(0X43F4366C,	"vdisp\nvdisp",	0);
	create_dword	(x=0X43F4366C);
	op_dec		(x,	0);
	set_cmt	(0X43F43670,	"size of thrown object\nsize of thrown object",	0);
	create_dword	(x=0X43F43670);
	op_dec		(x,	0);
	set_cmt	(0X43F43674,	"reference to optional copy constructor\nreference to optional copy constructor",	0);
	create_dword	(x=0X43F43674);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F43678,	"attributes\nattributes",	0);
	set_cmt	(0X43F43678,	"catchable type 'class std::bad_cast'\ncatchable type 'class std::bad_cast'",	1);
	create_dword	(x=0X43F43678);
	op_enum		(x,	0,	GetEnum("__CT_flags"),0);
	set_name	(0X43F43678,	"__CT??_R0?AVbad_cast@std@@@8_43DE4E80");
	create_dword	(x=0X43F4367C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F43680,	"mdisp\nmdisp",	0);
	create_dword	(x=0X43F43680);
	op_dec		(x,	0);
	set_cmt	(0X43F43684,	"pdisp\npdisp",	0);
	create_dword	(x=0X43F43684);
	op_dec		(x,	0);
	set_cmt	(0X43F43688,	"vdisp\nvdisp",	0);
	create_dword	(x=0X43F43688);
	op_dec		(x,	0);
	set_cmt	(0X43F4368C,	"size of thrown object\nsize of thrown object",	0);
	create_dword	(x=0X43F4368C);
	op_dec		(x,	0);
	set_cmt	(0X43F43690,	"reference to optional copy constructor\nreference to optional copy constructor",	0);
	create_dword	(x=0X43F43690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F43694,	"count of catchable type addresses following\ncount of catchable type addresses following",	0);
	create_dword	(x=0X43F43694);
	op_dec		(x,	0);
	set_name	(0X43F43694,	"__CTA2?AVbad_cast@std@@");
	create_dword	(x=0X43F43698);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4369C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F436A0,	"attributes\nattributes\nattributes\nattributes",	0);
	set_cmt	(0X43F436A0,	"catchable type 'class std::exception'\ncatchable type 'class std::exception'\ncatchable type 'class std::exception'\ncatchable type 'class std::exception'",	1);
	create_dword	(x=0X43F436A0);
	op_enum		(x,	0,	GetEnum("__CT_flags"),0);
	set_name	(0X43F436A0,	"__CT??_R0?AVexception@std@@@8_43DE4EC0");
	create_dword	(x=0X43F436A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F436A8,	"mdisp\nmdisp\nmdisp\nmdisp",	0);
	create_dword	(x=0X43F436A8);
	op_dec		(x,	0);
	set_cmt	(0X43F436AC,	"pdisp\npdisp\npdisp\npdisp",	0);
	create_dword	(x=0X43F436AC);
	op_dec		(x,	0);
	set_cmt	(0X43F436B0,	"vdisp\nvdisp\nvdisp\nvdisp",	0);
	create_dword	(x=0X43F436B0);
	op_dec		(x,	0);
	set_cmt	(0X43F436B4,	"size of thrown object\nsize of thrown object\nsize of thrown object\nsize of thrown object",	0);
	create_dword	(x=0X43F436B4);
	op_dec		(x,	0);
	set_cmt	(0X43F436B8,	"reference to optional copy constructor\nreference to optional copy constructor\nreference to optional copy constructor\nreference to optional copy constructor",	0);
	create_dword	(x=0X43F436B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F436BC,	"attributes\nattributes",	0);
	set_cmt	(0X43F436BC,	"throw info for 'class std::bad_cast'\nthrow info for 'class std::bad_cast'",	1);
	create_dword	(x=0X43F436BC);
	op_enum		(x,	0,	GetEnum("__TI_flags"),0);
	set_name	(0X43F436BC,	"__TI2?AVbad_cast@std@@");
	set_cmt	(0X43F436C0,	"destructor of exception object\ndestructor of exception object",	0);
	create_dword	(x=0X43F436C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F436C4,	"forward compatibility frame handler\nforward compatibility frame handler",	0);
	create_dword	(0X43F436C4);
	set_cmt	(0X43F436C8,	"address of catchable types array\naddress of catchable types array",	0);
	create_dword	(x=0X43F436C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F436CC,	"attributes\nattributes\nattributes\nattributes",	0);
	set_cmt	(0X43F436CC,	"catchable type 'class std::system_error'\ncatchable type 'class std::system_error'\ncatchable type 'class std::system_error'\ncatchable type 'class std::system_error'",	1);
	create_dword	(x=0X43F436CC);
	op_enum		(x,	0,	GetEnum("__CT_flags"),0);
	set_name	(0X43F436CC,	"__CT??_R0?AVsystem_error@std@@@8_43E18CB0");
	create_dword	(x=0X43F436D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F436D4,	"mdisp\nmdisp\nmdisp\nmdisp",	0);
	create_dword	(x=0X43F436D4);
	op_dec		(x,	0);
	set_cmt	(0X43F436D8,	"pdisp\npdisp\npdisp\npdisp",	0);
	create_dword	(x=0X43F436D8);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	set_cmt	(0X43F436DC,	"vdisp\nvdisp\nvdisp\nvdisp",	0);
	create_dword	(x=0X43F436DC);
	op_dec		(x,	0);
	set_cmt	(0X43F436E0,	"size of thrown object\nsize of thrown object\nsize of thrown object\nsize of thrown object",	0);
	create_dword	(x=0X43F436E0);
	op_dec		(x,	0);
	set_cmt	(0X43F436E4,	"reference to optional copy constructor\nreference to optional copy constructor\nreference to optional copy constructor\nreference to optional copy constructor",	0);
	create_dword	(x=0X43F436E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F436E8,	"attributes\nattributes\nattributes\nattributes",	0);
	set_cmt	(0X43F436E8,	"catchable type 'class std::runtime_error'\ncatchable type 'class std::runtime_error'\ncatchable type 'class std::runtime_error'\ncatchable type 'class std::runtime_error'",	1);
	create_dword	(x=0X43F436E8);
	op_enum		(x,	0,	GetEnum("__CT_flags"),0);
	set_name	(0X43F436E8,	"__CT??_R0?AVruntime_error@std@@@8_43DE4E80");
	create_dword	(x=0X43F436EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F436F0,	"mdisp\nmdisp\nmdisp\nmdisp",	0);
	create_dword	(x=0X43F436F0);
	op_dec		(x,	0);
	set_cmt	(0X43F436F4,	"pdisp\npdisp\npdisp\npdisp",	0);
	create_dword	(x=0X43F436F4);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	set_cmt	(0X43F436F8,	"vdisp\nvdisp\nvdisp\nvdisp",	0);
	create_dword	(x=0X43F436F8);
	op_dec		(x,	0);
	set_cmt	(0X43F436FC,	"size of thrown object\nsize of thrown object\nsize of thrown object\nsize of thrown object",	0);
	create_dword	(x=0X43F436FC);
	op_dec		(x,	0);
	set_cmt	(0X43F43700,	"reference to optional copy constructor\nreference to optional copy constructor\nreference to optional copy constructor\nreference to optional copy constructor",	0);
	create_dword	(x=0X43F43700);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F43704,	"attributes\nattributes\nattributes\nattributes",	0);
	set_cmt	(0X43F43704,	"catchable type 'class std::_System_error'\ncatchable type 'class std::_System_error'\ncatchable type 'class std::_System_error'\ncatchable type 'class std::_System_error'",	1);
	create_dword	(x=0X43F43704);
	op_enum		(x,	0,	GetEnum("__CT_flags"),0);
	set_name	(0X43F43704,	"__CT??_R0?AV_System_error@std@@@8_43E18D00");
	create_dword	(x=0X43F43708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F4370C,	"mdisp\nmdisp\nmdisp\nmdisp",	0);
	create_dword	(x=0X43F4370C);
	op_dec		(x,	0);
	set_cmt	(0X43F43710,	"pdisp\npdisp\npdisp\npdisp",	0);
	create_dword	(x=0X43F43710);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	set_cmt	(0X43F43714,	"vdisp\nvdisp\nvdisp\nvdisp",	0);
	create_dword	(x=0X43F43714);
	op_dec		(x,	0);
	set_cmt	(0X43F43718,	"size of thrown object\nsize of thrown object\nsize of thrown object\nsize of thrown object",	0);
	create_dword	(x=0X43F43718);
	op_dec		(x,	0);
	set_cmt	(0X43F4371C,	"reference to optional copy constructor\nreference to optional copy constructor\nreference to optional copy constructor\nreference to optional copy constructor",	0);
	create_dword	(x=0X43F4371C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F43720,	"attributes\nattributes\nattributes\nattributes",	0);
	set_cmt	(0X43F43720,	"throw info for 'class std::system_error'\nthrow info for 'class std::system_error'\nthrow info for 'class std::system_error'\nthrow info for 'class std::system_error'",	1);
	create_dword	(x=0X43F43720);
	op_enum		(x,	0,	GetEnum("__TI_flags"),0);
	set_name	(0X43F43720,	"__TI4?AVsystem_error@std@@");
	set_cmt	(0X43F43724,	"destructor of exception object\ndestructor of exception object\ndestructor of exception object\ndestructor of exception object",	0);
	create_dword	(x=0X43F43724);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F43728,	"forward compatibility frame handler\nforward compatibility frame handler\nforward compatibility frame handler\nforward compatibility frame handler",	0);
	create_dword	(0X43F43728);
	set_cmt	(0X43F4372C,	"address of catchable types array\naddress of catchable types array\naddress of catchable types array\naddress of catchable types array",	0);
	create_dword	(x=0X43F4372C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X43F43730,	"count of catchable type addresses following\ncount of catchable type addresses following\ncount of catchable type addresses following\ncount of catchable type addresses following",	0);
	create_dword	(x=0X43F43730);
	op_dec		(x,	0);
	set_name	(0X43F43730,	"__CTA4?AVsystem_error@std@@");
	create_dword	(x=0X43F43734);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F43738);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F4373C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X43F43740);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0X43F43745);
	make_array	(0X43F43745,	0X3);
	make_array	(0X43F43748,	0X8);
	create_dword	(0X43F43750);
	make_array	(0X43F43750,	0X5);
	create_byte	(0X43F43765);
	make_array	(0X43F43765,	0X3);
	create_byte	(0X43F43769);
	make_array	(0X43F43769,	0X3);
	create_dword	(0X43F4376C);
	make_array	(0X43F4376C,	0X3);
	create_byte	(0X43F43779);
	make_array	(0X43F43779,	0X3);
	create_dword	(0X43F4377C);
	make_array	(0X43F4377C,	0X4);
	create_byte	(0X43F4378D);
	make_array	(0X43F4378D,	0X3);
	create_byte	(0X43F43791);
	make_array	(0X43F43791,	0X3);
	create_dword	(0X43F43794);
	make_array	(0X43F43794,	0X3);
	create_word	(0X43F437A2);
	create_byte	(0X43F437A5);
	make_array	(0X43F437A5,	0X3);
	create_dword	(0X43F437A8);
	make_array	(0X43F437A8,	0X3);
	create_byte	(0X43F437B5);
	make_array	(0X43F437B5,	0X3);
	create_byte	(0X43F437B9);
	make_array	(0X43F437B9,	0X3);
	create_dword	(0X43F437BC);
	make_array	(0X43F437BC,	0X3);
	create_byte	(0X43F437C9);
	make_array	(0X43F437C9,	0X3);
	create_dword	(0X43F437CC);
	make_array	(0X43F437CC,	0X4);
	create_byte	(0X43F437DD);
	make_array	(0X43F437DD,	0X3);
	create_byte	(0X43F437E1);
	make_array	(0X43F437E1,	0X3);
	create_dword	(0X43F437E4);
	make_array	(0X43F437E4,	0X3);
	create_byte	(0X43F437F1);
	make_array	(0X43F437F1,	0X3);
	create_byte	(0X43F437F5);
	make_array	(0X43F437F5,	0X3);
	create_dword	(0X43F437F8);
	make_array	(0X43F437F8,	0X3);
	create_dword	(0X43F43804);
	make_array	(0X43F43804,	0X5);
	create_word	(0X43F4381A);
	create_byte	(0X43F4381D);
	make_array	(0X43F4381D,	0X3);
	create_dword	(0X43F43824);
	make_array	(0X43F43824,	0X2);
	create_word	(0X43F4382E);
	create_byte	(0X43F43831);
	make_array	(0X43F43831,	0X3);
	create_dword	(0X43F43834);
	make_array	(0X43F43834,	0X3);
	create_dword	(0X43F43840);
	make_array	(0X43F43840,	0X5);
	create_word	(0X43F43856);
	create_byte	(0X43F43859);
	make_array	(0X43F43859,	0X3);
	create_dword	(0X43F4385C);
	make_array	(0X43F4385C,	0X5);
	create_dword	(0X43F43870);
	make_array	(0X43F43870,	0XF);
	create_dword	(0X43F438B0);
	make_array	(0X43F438B0,	0X1A);
	create_byte	(0X43F43919);
	make_array	(0X43F43919,	0X3);
	create_byte	(0X43F4391D);
	make_array	(0X43F4391D,	0X3);
	create_byte	(0X43F43921);
	make_array	(0X43F43921,	0X3);
	create_dword	(0X43F43924);
	make_array	(0X43F43924,	0X3A);
	create_dword	(0X43F43A10);
	make_array	(0X43F43A10,	0X3);
	create_word	(0X43F43A1E);
	create_byte	(0X43F43A21);
	make_array	(0X43F43A21,	0X3);
	create_byte	(0X43F43A25);
	make_array	(0X43F43A25,	0X3);
	create_byte	(0X43F43A29);
	make_array	(0X43F43A29,	0X3);
	create_byte	(0X43F43A2D);
	make_array	(0X43F43A2D,	0X3);
	create_byte	(0X43F43A31);
	make_array	(0X43F43A31,	0X3);
	create_dword	(0X43F43A34);
	make_array	(0X43F43A34,	0X7);
	create_dword	(0X43F43A50);
	make_array	(0X43F43A50,	0X4);
	create_word	(0X43F43A62);
	create_byte	(0X43F43A65);
	make_array	(0X43F43A65,	0X3);
	create_byte	(0X43F43A69);
	make_array	(0X43F43A69,	0X3);
	make_array	(0X43F43A6C,	0X4);
	create_byte	(0X43F43A71);
	make_array	(0X43F43A71,	0X3);
	create_word	(0X43F43A76);
	create_dword	(0X43F43A78);
	make_array	(0X43F43A78,	0X3);
	create_word	(0X43F43A86);
	create_dword	(0X43F43A88);
	make_array	(0X43F43A88,	0X12);
	create_byte	(0X43F43AD1);
	make_array	(0X43F43AD1,	0X3);
	create_byte	(0X43F43AD5);
	make_array	(0X43F43AD5,	0X3);
	create_byte	(0X43F43AD9);
	make_array	(0X43F43AD9,	0X3);
	create_dword	(0X43F43ADC);
	make_array	(0X43F43ADC,	0XD);
	create_byte	(0X43F43B11);
	make_array	(0X43F43B11,	0X3);
	create_byte	(0X43F43B15);
	make_array	(0X43F43B15,	0X3);
	create_byte	(0X43F43B19);
	make_array	(0X43F43B19,	0X3);
	create_dword	(0X43F43B1C);
	make_array	(0X43F43B1C,	0X10);
	create_dword	(0X43F43B5C);
	make_array	(0X43F43B5C,	0XD);
	create_word	(0X43F43B92);
	create_word	(0X43F43B96);
	create_dword	(0X43F43B98);
	make_array	(0X43F43B98,	0X3);
	create_word	(0X43F43BA6);
	create_dword	(0X43F43BA8);
	make_array	(0X43F43BA8,	0X516);
	create_dword	(0X43F45000);
	create_dword	(0X43F45004);
	make_array	(0X43F45008,	0X8);
	create_dword	(0X43F45010);
	create_dword	(0X43F45014);
	set_name	(0X43F45014,	"Segment::Security::Cookie");
	create_dword	(0X43F45018);
	create_byte	(0X43F4501C);
	make_array	(0X43F4501D,	0X3);
	create_dword	(0X43F45020);
	create_dword	(0X43F45024);
	create_byte	(0X43F45028);
	create_byte	(0X43F45029);
	make_array	(0X43F4502A,	0X2);
	create_dword	(0X43F4502C);
	create_byte	(0X43F45030);
	set_name	(0X43F45030,	"OneTap::Configuration::Misc::AutoStrafe::IsStaticNormalize");
	make_array	(0X43F45031,	0XF);
	create_dword	(0X43F45040);
	make_array	(0X43F45044,	0XC);
	make_array	(0X43F45051,	0X3);
	create_byte	(x=0X43F45054);
	make_array	(x,	0X5);
	op_chr		(x,	0);
	create_dword	(0X43F45059);
	create_dword	(x=0X43F4505D);
	op_chr		(x,	0);
	create_dword	(0X43F45061);
	make_array	(0X43F45065,	0X3);
	create_dword	(0X43F45068);
	create_dword	(0X43F4506C);
	create_dword	(0X43F45070);
	create_dword	(0X43F45074);
	create_dword	(0X43F45078);
	create_dword	(0X43F4507C);
	make_array	(0X43F4507C,	0X4);
	create_byte	(0X43F4508C);
	make_array	(0X43F4508D,	0X3);
	create_oword	(0X43F45090);
	create_dword	(0X43F450A0);
	create_dword	(0X43F450A4);
	create_byte	(0X43F450A8);
	make_array	(0X43F450A9,	0X3);
	create_dword	(0X43F450AC);
	create_dword	(0X43F450B0);
	create_dword	(0X43F450B4);
	create_dword	(0X43F450B8);
	create_dword	(0X43F450BC);
	create_word	(0X43F450C0);
	set_name	(0X43F450C0,	"OneTap::Configuration::Ragebot::Exploits::IsAllowed");
	create_byte	(0X43F450C2);
	create_oword	(0X43F450C4);
	set_name	(0X43F450C4,	"C_SDK::Globals::Tickbase::Count");
	create_dword	(0X43F450D4);
	create_word	(0X43F450D8);
	make_array	(0X43F450DA,	0X2);
	create_dword	(0X43F450DC);
	create_dword	(0X43F450E0);
	create_dword	(0X43F450E4);
	MakeStruct	(0X43F450E8,	"OneTap::SharedData::ClientSnapshot");
	set_name	(0X43F450E8,	"C_SDK::Data::ClientSnapshot");
	create_float	(0X43F45208);
	make_array	(0X43F45208,	0X2);
	create_dword	(0X43F45210);
	make_array	(0X43F45210,	0X2);
	create_dword	(0X43F45218);
	create_dword	(0X43F45220);
	make_array	(0X43F45220,	0X2);
	create_dword	(0X43F45230);
	make_array	(0X43F45230,	0X2);
	create_dword	(0X43F45240);
	make_array	(0X43F45240,	0X4);
	create_dword	(0X43F45250);
	make_array	(0X43F45250,	0X2);
	create_dword	(0X43F45260);
	make_array	(0X43F45260,	0X2);
	create_dword	(0X43F45268);
	create_dword	(0X43F45270);
	make_array	(0X43F45270,	0X2);
	create_dword	(0X43F45278);
	create_dword	(0X43F45280);
	make_array	(0X43F45280,	0X2);
	create_dword	(0X43F45288);
	create_dword	(0X43F45290);
	make_array	(0X43F45290,	0X2);
	create_dword	(0X43F45298);
	create_dword	(0X43F452A0);
	make_array	(0X43F452A0,	0X2);
	create_dword	(0X43F452A8);
	create_dword	(0X43F452B0);
	make_array	(0X43F452B0,	0X2);
	create_dword	(0X43F452B8);
	create_dword	(0X43F452C0);
	make_array	(0X43F452C0,	0X2);
	create_dword	(0X43F452C8);
	create_dword	(0X43F452D0);
	make_array	(0X43F452D0,	0X3);
	create_dword	(0X43F452DC);
	create_dword	(0X43F452E0);
	create_dword	(0X43F452E4);
	create_dword	(0X43F452E8);
	create_dword	(0X43F452EC);
	create_dword	(0X43F452F0);
	create_dword	(0X43F452F4);
	create_dword	(0X43F452F8);
	create_dword	(0X43F452FC);
	create_dword	(0X43F45308);
	make_array	(0X43F45308,	0X2);
	create_dword	(0X43F45318);
	make_array	(0X43F45318,	0X2);
	create_dword	(0X43F45328);
	make_array	(0X43F45328,	0X2);
	create_dword	(x=0X43F45330);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X43F45334);
	make_array	(0X43F45334,	0X3);
	create_float	(0X43F45340);
	set_name	(0X43F45340,	"C_SDK::Values::ListLeavesInBox::MIN_COORD");
	create_float	(0X43F4534C);
	set_name	(0X43F4534C,	"C_SDK::Values::ListLeavesInBox::MAX_COORD");
	create_dword	(0X43F45368);
	create_dword	(0X43F4536C);
	create_dword	(0X43F45374);
	create_dword	(0X43F45488);
	create_dword	(0X43F4548C);
	create_dword	(0X43F45490);
	create_dword	(0X43F45494);
	create_dword	(0X43F45498);
	create_dword	(0X43F454A0);
	create_dword	(x=0X43F454A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0X43F454A8);
	create_byte	(0X43F454A9);
	make_array	(0X43F454A9,	0X3);
	create_dword	(0X43F454AC);
	make_array	(0X43F454AC,	0X129);
	create_byte	(0X43F45950);
	create_dword	(0X43F46314);
	create_dword	(0X43F46318);
	create_dword	(0X43F4631C);
	create_dword	(0X43F46320);
	create_float	(0X43F46324);
	make_array	(0X43F46324,	0X3);
	create_dword	(0X43F46330);
	create_byte	(0X43F46334);
	create_strlit	(0X43F46338,	0X10);
	set_name	(0X43F46338,	"aVertigoblueHdr");
	create_dword	(0X43F46348);
	create_dword	(0X43F4634C);
	create_dword	(0X43F46350);
	MakeStruct	(0X43F46360,	"OneTap::Classes::Server");
	set_name	(0X43F46360,	"OneTap::Globals::ServerData");
	set_cmt	(0X43F46398,	"reference to RTTI's vftable\nreference to RTTI's vftable\nreference to RTTI's vftable\nreference to RTTI's vftable\nreference to RTTI's vftable",	0);
	update_extra_cmt		(0X43F46398,	E_PREV + 0,	"; public \x01\b\x01(43F46398class type_info\x02\b /* mdisp:0 */");
	update_extra_cmt		(0X43F46398,	E_PREV + 1,	"; public \x01\b\x01(43F46398class type_info\x02\b /* mdisp:0 */");
	update_extra_cmt		(0X43F46398,	E_PREV + 2,	"; public \x01\b\x01(43F46398class type_info\x02\b /* mdisp:0 */");
	update_extra_cmt		(0X43F46398,	E_PREV + 3,	"; public \x01\b\x01(43F46398class type_info\x02\b /* mdisp:0 */");
	update_extra_cmt		(0X43F46398,	E_PREV + 4,	"; public \x01\b\x01(43F46398class type_info\x02\b /* mdisp:0 */");
	create_dword	(x=0X43F46398);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F46398,	"??_R0?AVtype_info@@@8");
	set_cmt	(0X43F4639C,	"internal runtime reference\ninternal runtime reference\ninternal runtime reference\ninternal runtime reference\ninternal runtime reference",	0);
	create_dword	(0X43F4639C);
	set_cmt	(0X43F463A0,	"type descriptor name\ntype descriptor name\ntype descriptor name\ntype descriptor name\ntype descriptor name",	1);
	create_strlit	(0X43F463A0,	0X10);
	set_name	(0X43F463A0,	"aAvtypeInfo");
	set_cmt	(0X43F463B0,	"reference to RTTI's vftable\nreference to RTTI's vftable",	0);
	update_extra_cmt		(0X43F463B0,	E_PREV + 0,	"; public \x01\b\x01(43F463B0class std::bad_alloc\x02\b /* mdisp:0 */ :");
	update_extra_cmt		(0X43F463B0,	E_PREV + 1,	";   public \x01\b\x01(43F46500class std::exception\x02\b /* mdisp:0 */");
	update_extra_cmt		(0X43F463B0,	E_PREV + 2,	"; public \x01\b\x01(43F463B0class std::bad_alloc\x02\b /* mdisp:0 */ :");
	update_extra_cmt		(0X43F463B0,	E_PREV + 3,	";   public \x01\b\x01(43F46500class std::exception\x02\b /* mdisp:0 */");
	create_dword	(x=0X43F463B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F463B0,	"??_R0?AVbad_alloc@std@@@8");
	set_cmt	(0X43F463B4,	"internal runtime reference\ninternal runtime reference",	0);
	create_dword	(0X43F463B4);
	set_cmt	(0X43F463B8,	"type descriptor name\ntype descriptor name",	1);
	create_strlit	(0X43F463B8,	0X14);
	set_name	(0X43F463B8,	"aAvbadAllocStd");
	set_cmt	(0X43F463CC,	"reference to RTTI's vftable\nreference to RTTI's vftable",	0);
	update_extra_cmt		(0X43F463CC,	E_PREV + 0,	"; public \x01\b\x01(43F463CCclass std::bad_array_new_length\x02\b /* mdisp:0 */ :");
	update_extra_cmt		(0X43F463CC,	E_PREV + 1,	";   public \x01\b\x01(43F463B0class std::bad_alloc\x02\b /* mdisp:0 */ :");
	update_extra_cmt		(0X43F463CC,	E_PREV + 2,	";     public \x01\b\x01(43F46500class std::exception\x02\b /* mdisp:0 */");
	update_extra_cmt		(0X43F463CC,	E_PREV + 3,	"; public \x01\b\x01(43F463CCclass std::bad_array_new_length\x02\b /* mdisp:0 */ :");
	update_extra_cmt		(0X43F463CC,	E_PREV + 4,	";   public \x01\b\x01(43F463B0class std::bad_alloc\x02\b /* mdisp:0 */ :");
	update_extra_cmt		(0X43F463CC,	E_PREV + 5,	";     public \x01\b\x01(43F46500class std::exception\x02\b /* mdisp:0 */");
	create_dword	(x=0X43F463CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F463CC,	"??_R0?AVbad_array_new_length@std@@@8");
	set_cmt	(0X43F463D0,	"internal runtime reference\ninternal runtime reference",	0);
	create_dword	(0X43F463D0);
	set_cmt	(0X43F463D4,	"type descriptor name\ntype descriptor name",	1);
	create_strlit	(0X43F463D4,	0X1F);
	set_name	(0X43F463D4,	"aAvbadArrayNewL");
	create_dword	(x=0X43F463F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X43F463FC,	0X36);
	set_name	(0X43F463FC,	"aAvLambda1ChUpd");
	create_dword	(x=0X43F46434);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X43F4643C,	0X36);
	set_name	(0X43F4643C,	"aAvLambda2ClUpd");
	create_dword	(x=0X43F46474);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X43F4647C,	0X2D);
	set_name	(0X43F4647C,	"aAvLambda1DpUpd");
	create_dword	(x=0X43F464AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X43F464B4,	0X2D);
	set_name	(0X43F464B4,	"aAvLambda2EdUpd");
	set_cmt	(0X43F464E4,	"reference to RTTI's vftable\nreference to RTTI's vftable",	0);
	create_dword	(x=0X43F464E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F464E4,	"??_R0?AVbad_cast@std@@@8");
	set_cmt	(0X43F464E8,	"internal runtime reference\ninternal runtime reference",	0);
	create_dword	(0X43F464E8);
	set_cmt	(0X43F464EC,	"type descriptor name\ntype descriptor name",	1);
	create_strlit	(0X43F464EC,	0X13);
	set_name	(0X43F464EC,	"aAvbadCastStd");
	set_cmt	(0X43F46500,	"reference to RTTI's vftable\nreference to RTTI's vftable\nreference to RTTI's vftable\nreference to RTTI's vftable\nreference to RTTI's vftable",	0);
	update_extra_cmt		(0X43F46500,	E_PREV + 0,	"; public \x01\b\x01(43F46500class std::exception\x02\b /* mdisp:0 */");
	update_extra_cmt		(0X43F46500,	E_PREV + 1,	"; public \x01\b\x01(43F46500class std::exception\x02\b /* mdisp:0 */");
	update_extra_cmt		(0X43F46500,	E_PREV + 2,	"; public \x01\b\x01(43F46500class std::exception\x02\b /* mdisp:0 */");
	create_dword	(x=0X43F46500);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F46500,	"??_R0?AVexception@std@@@8");
	set_cmt	(0X43F46504,	"internal runtime reference\ninternal runtime reference\ninternal runtime reference\ninternal runtime reference\ninternal runtime reference",	0);
	create_dword	(0X43F46504);
	set_cmt	(0X43F46508,	"type descriptor name\ntype descriptor name\ntype descriptor name\ntype descriptor name\ntype descriptor name",	1);
	create_strlit	(0X43F46508,	0X14);
	set_name	(0X43F46508,	"aAvexceptionStd");
	create_dword	(x=0X43F46520);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X43F46528,	0X6B);
	set_name	(0X43F46528,	"aAvLambda2MGetH");
	create_dword	(x=0X43F46598);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X43F465A0,	0X4A);
	set_name	(0X43F465A0,	"aAvLambda1ChFil");
	create_dword	(x=0X43F465F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X43F465F8,	0X4A);
	set_name	(0X43F465F8,	"aAvLambda2CpFil");
	set_cmt	(0X43F46644,	"reference to RTTI's vftable\nreference to RTTI's vftable\nreference to RTTI's vftable\nreference to RTTI's vftable",	0);
	create_dword	(x=0X43F46644);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F46644,	"??_R0?AVsystem_error@std@@@8");
	set_cmt	(0X43F46648,	"internal runtime reference\ninternal runtime reference\ninternal runtime reference\ninternal runtime reference",	0);
	create_dword	(0X43F46648);
	set_cmt	(0X43F4664C,	"type descriptor name\ntype descriptor name\ntype descriptor name\ntype descriptor name",	1);
	create_strlit	(0X43F4664C,	0X17);
	set_name	(0X43F4664C,	"aAvsystemErrorS");
	set_cmt	(0X43F46664,	"reference to RTTI's vftable\nreference to RTTI's vftable\nreference to RTTI's vftable\nreference to RTTI's vftable",	0);
	create_dword	(x=0X43F46664);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F46664,	"??_R0?AV_System_error@std@@@8");
	set_cmt	(0X43F46668,	"internal runtime reference\ninternal runtime reference\ninternal runtime reference\ninternal runtime reference",	0);
	create_dword	(0X43F46668);
	set_cmt	(0X43F4666C,	"type descriptor name\ntype descriptor name\ntype descriptor name\ntype descriptor name",	1);
	create_strlit	(0X43F4666C,	0X18);
	set_name	(0X43F4666C,	"aAvSystemErrorS");
	set_cmt	(0X43F46684,	"reference to RTTI's vftable\nreference to RTTI's vftable\nreference to RTTI's vftable\nreference to RTTI's vftable",	0);
	create_dword	(x=0X43F46684);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X43F46684,	"??_R0?AVruntime_error@std@@@8");
	set_cmt	(0X43F46688,	"internal runtime reference\ninternal runtime reference\ninternal runtime reference\ninternal runtime reference",	0);
	create_dword	(0X43F46688);
	set_cmt	(0X43F4668C,	"type descriptor name\ntype descriptor name\ntype descriptor name\ntype descriptor name",	1);
	create_strlit	(0X43F4668C,	0X18);
	set_name	(0X43F4668C,	"aAvruntimeError");
	create_dword	(0X43F466B4);
	create_dword	(0X43F466B8);
	create_dword	(0X43F466BC);
	create_byte	(0X43F466C0);
	create_byte	(0X43F466C1);
	create_dword	(0X43F466C4);
	create_dword	(0X43F466C8);
	create_dword	(0X43F466CC);
	create_byte	(0X43F466D0);
	create_dword	(0X43F466D1);
	create_dword	(0X43F466D5);
	create_dword	(0X43F466D9);
	create_dword	(0X43F466DD);
	create_dword	(0X43F466E1);
	create_dword	(0X43F466E5);
	create_dword	(0X43F466E9);
	create_dword	(0X43F466ED);
	create_dword	(0X43F466F1);
	create_qword	(0X43F466F8);
	create_dword	(0X43F46701);
	create_qword	(0X43F46708);
	set_cmt	(0X43F46A20,	"Original hooks data storage.\n\n//BEGIN [0].",	0);
	MakeStruct	(0X43F46A20,	"OneTap::SharedData::ClientHooks");
	set_name	(0X43F46A20,	"OneTap::Globals::ClientHooks");
	create_dword	(0X43F46B08);
	make_array	(0X43F46B08,	0X3);
	create_dword	(0X43F46B14);
	make_array	(0X43F46B14,	0X3);
	create_dword	(0X43F46B20);
	make_array	(0X43F46B20,	0X3);
	create_dword	(0X43F46B2C);
	make_array	(0X43F46B2C,	0X3);
	create_dword	(0X43F46B38);
	make_array	(0X43F46B38,	0X3);
	create_dword	(0X43F46B44);
	make_array	(0X43F46B44,	0X3);
	create_dword	(0X43F46B50);
	create_dword	(0X43F46B54);
	create_dword	(0X43F46B58);
	create_dword	(0X43F46B5C);
	create_dword	(0X43F46B60);
	create_dword	(0X43F46B64);
	create_dword	(0X43F46B68);
	create_dword	(0X43F46B6C);
	create_dword	(0X43F46B70);
	create_dword	(0X43F46B74);
	create_dword	(0X43F46B78);
	create_dword	(0X43F46B7C);
	create_dword	(0X43F46B80);
	create_dword	(0X43F46B84);
	make_array	(0X43F46B84,	0X3);
	create_dword	(0X43F46B90);
	make_array	(0X43F46B90,	0X3);
	create_dword	(0X43F46B9C);
	make_array	(0X43F46B9C,	0X3);
	create_dword	(0X43F46BA8);
	create_dword	(0X43F46BAC);
	create_dword	(0X43F46BB0);
	create_dword	(0X43F46BB4);
	make_array	(0X43F46BB4,	0X3);
	create_dword	(0X43F46BC0);
	make_array	(0X43F46BC0,	0X3);
	create_dword	(0X43F46BCC);
	make_array	(0X43F46BCC,	0X3);
	create_dword	(0X43F46BD8);
	make_array	(0X43F46BD8,	0X3);
	create_dword	(0X43F46BE4);
	make_array	(0X43F46BE4,	0X3);
	create_dword	(0X43F46BF0);
	make_array	(0X43F46BF0,	0X3);
	create_byte	(0X43F46BFC);
	create_dword	(0X43F46C00);
	create_dword	(0X43F46C04);
	set_name	(0X43F46C04,	"OneTap::Globals::Entity::Bomb");
	create_byte	(0X43F46C08);
	create_dword	(0X43F46C0C);
	make_array	(0X43F46C0C,	0X61FE);
	set_name	(0X43F46C0C,	"OneTap::Globals::AnimationSystem::Records");
	create_byte	(0X43F60503);
	create_dword	(0X43F60AF0);
	create_dword	(0X43F60B00);
	create_dword	(0X43F60B10);
	create_dword	(0X43F77BFC);
	make_array	(0X43F77BFC,	0X7);
	create_dword	(0X43F77C18);
	make_array	(0X43F77C18,	0X4);
	create_dword	(0X43F77C28);
	make_array	(0X43F77C28,	0X5);
	create_dword	(0X43F77C3C);
	make_array	(0X43F77C3C,	0X7);
	create_byte	(0X43F77C59);
	make_array	(0X43F77C59,	0X3);
	create_dword	(0X43F77C5C);
	make_array	(0X43F77C5C,	0X30DA);
	create_dword	(0X43F83FC4);
	make_array	(0X43F83FC4,	0XD);
	create_dword	(0X43F83FF8);
	make_array	(0X43F83FF8,	0X7);
	create_byte	(0X43F84014);
	make_array	(0X43F84014,	0X5);
	make_array	(0X43F84019,	0X3);
	create_dword	(0X43F8401C);
	make_array	(0X43F8401C,	0X2);
	create_dword	(0X43F84024);
	make_array	(0X43F84024,	0X5);
	create_dword	(0X43F84038);
	make_array	(0X43F84038,	0X7);
	create_word	(0X43F84056);
	create_dword	(0X43F84058);
	make_array	(0X43F84058,	0X30DA);
	create_dword	(0X43F903C0);
	make_array	(0X43F903C0,	0XD);
	create_dword	(0X43F903F4);
	make_array	(0X43F903F4,	0X7);
	make_array	(0X43F90411,	0XF);
	create_dword	(0X43F90420);
	make_array	(0X43F90420,	0X5);
	create_dword	(0X43F90434);
	make_array	(0X43F90434,	0X7);
	create_byte	(0X43F90451);
	make_array	(0X43F90451,	0X3);
	create_dword	(0X43F90454);
	make_array	(0X43F90454,	0X30DA);
	create_dword	(0X43F9C7BC);
	make_array	(0X43F9C7BC,	0XD);
	create_dword	(0X43F9C7F0);
	make_array	(0X43F9C7F0,	0X7);
	make_array	(0X43F9C80D,	0X3);
	create_dword	(0X43F9C810);
	make_array	(0X43F9C810,	0X3);
	create_dword	(0X43F9C81C);
	make_array	(0X43F9C81C,	0X5);
	create_dword	(0X43F9C830);
	make_array	(0X43F9C830,	0X7);
	create_dword	(0X43F9C84C);
	make_array	(0X43F9C84C,	0XDED);
	create_dword	(0X43FA8BB8);
	make_array	(0X43FA8BB8,	0XD);
	create_dword	(0X43FA8BEC);
	make_array	(0X43FA8BEC,	0X7);
	create_dword	(0X43FA8C08);
	make_array	(0X43FA8C08,	0X4);
	create_dword	(0X43FA8C18);
	make_array	(0X43FA8C18,	0X5);
	create_dword	(0X43FA8C2C);
	make_array	(0X43FA8C2C,	0X7);
	create_word	(0X43FA8C4A);
	create_dword	(0X43FA8C4C);
	make_array	(0X43FA8C4C,	0X1994);
	create_byte	(0X43FAF29C);
	create_byte	(0X43FAF29D);
	make_array	(0X43FAF29D,	0X3);
	create_dword	(0X43FAF2A0);
	make_array	(0X43FAF2A0,	0X1745);
	create_dword	(0X43FB4FB4);
	make_array	(0X43FB4FB4,	0XD);
	create_dword	(0X43FB4FE8);
	make_array	(0X43FB4FE8,	0X7);
	create_dword	(0X43FB5004);
	make_array	(0X43FB5004,	0X4);
	create_dword	(0X43FB5014);
	make_array	(0X43FB5014,	0X5);
	create_dword	(0X43FB5028);
	make_array	(0X43FB5028,	0X7);
	create_byte	(0X43FB5045);
	make_array	(0X43FB5045,	0X3);
	create_dword	(0X43FB5048);
	make_array	(0X43FB5048,	0X30DA);
	create_dword	(0X43FC13B0);
	make_array	(0X43FC13B0,	0XD);
	create_dword	(0X43FC13E4);
	make_array	(0X43FC13E4,	0X7);
	make_array	(0X43FC1401,	0XF);
	create_dword	(0X43FC1410);
	make_array	(0X43FC1410,	0X5);
	create_dword	(0X43FC1424);
	make_array	(0X43FC1424,	0X7);
	create_word	(0X43FC1442);
	create_dword	(0X43FC1444);
	make_array	(0X43FC1444,	0X30DA);
	create_dword	(0X43FCD7AC);
	make_array	(0X43FCD7AC,	0XD);
	create_dword	(0X43FCD7E0);
	make_array	(0X43FCD7E0,	0X7);
	make_array	(0X43FCD7FD,	0X3);
	create_dword	(0X43FCD800);
	make_array	(0X43FCD800,	0X3);
	create_dword	(0X43FCD80C);
	make_array	(0X43FCD80C,	0X5);
	create_dword	(0X43FCD820);
	make_array	(0X43FCD820,	0X7);
	create_word	(0X43FCD83E);
	create_dword	(0X43FCD840);
	make_array	(0X43FCD840,	0X30DA);
	create_dword	(0X43FD9BA8);
	make_array	(0X43FD9BA8,	0XD);
	create_dword	(0X43FD9BDC);
	make_array	(0X43FD9BDC,	0X7);
	make_array	(0X43FD9BF9,	0X3);
	create_dword	(0X43FD9BFC);
	make_array	(0X43FD9BFC,	0X3);
	create_dword	(0X43FD9C08);
	make_array	(0X43FD9C08,	0X5);
	create_dword	(0X43FD9C1C);
	make_array	(0X43FD9C1C,	0X7);
	create_word	(0X43FD9C3A);
	create_dword	(0X43FD9C3C);
	make_array	(0X43FD9C3C,	0X30DA);
	create_dword	(0X43FE5FA4);
	make_array	(0X43FE5FA4,	0XD);
	create_dword	(0X43FE5FD8);
	make_array	(0X43FE5FD8,	0X7);
	make_array	(0X43FE5FF5,	0X3);
	create_dword	(0X43FE5FF8);
	make_array	(0X43FE5FF8,	0X3);
	create_dword	(0X43FE6004);
	make_array	(0X43FE6004,	0X5);
	create_dword	(0X43FE6018);
	make_array	(0X43FE6018,	0X7);
	create_byte	(0X43FE6035);
	make_array	(0X43FE6035,	0X3);
	create_dword	(0X43FE6038);
	make_array	(0X43FE6038,	0X27F2);
	create_dword	(0X43FF23A0);
	make_array	(0X43FF23A0,	0XD);
	create_dword	(0X43FF23D4);
	make_array	(0X43FF23D4,	0X7);
	make_array	(0X43FF23F1,	0XF);
	create_dword	(0X43FF2400);
	make_array	(0X43FF2400,	0X5);
	create_dword	(0X43FF2414);
	make_array	(0X43FF2414,	0X7);
	create_word	(0X43FF2432);
	create_dword	(0X43FF2434);
	make_array	(0X43FF2434,	0X30DA);
	create_dword	(0X43FFE79C);
	make_array	(0X43FFE79C,	0XD);
	create_dword	(0X43FFE7D0);
	make_array	(0X43FFE7D0,	0X7);
	create_dword	(0X43FFE7EC);
	make_array	(0X43FFE7EC,	0X4);
	create_dword	(0X43FFE7FC);
	make_array	(0X43FFE7FC,	0X5);
	create_dword	(0X43FFE810);
	make_array	(0X43FFE810,	0X7);
	create_word	(0X43FFE82E);
	create_dword	(0X43FFE830);
	make_array	(0X43FFE830,	0X6B4);
	create_dword	(0X44000300);
	create_dword	(0X4400AB98);
	make_array	(0X4400AB98,	0XD);
	create_dword	(0X4400ABCC);
	make_array	(0X4400ABCC,	0X7);
	create_dword	(0X4400ABE8);
	make_array	(0X4400ABE8,	0X4);
	create_dword	(0X4400ABF8);
	make_array	(0X4400ABF8,	0X5);
	create_dword	(0X4400AC0C);
	make_array	(0X4400AC0C,	0X7);
	create_word	(0X4400AC2A);
	create_dword	(0X4400AC2C);
	make_array	(0X4400AC2C,	0X13BC);
	create_dword	(0X4400FB1C);
	make_array	(0X4400FB1C,	0X1D1E);
	create_dword	(0X44016F94);
	make_array	(0X44016F94,	0XD);
	create_dword	(0X44016FC8);
	make_array	(0X44016FC8,	0X7);
	create_dword	(0X44016FE4);
	make_array	(0X44016FE4,	0X4);
	create_dword	(0X44016FF4);
	make_array	(0X44016FF4,	0X5);
	create_dword	(0X44017008);
	make_array	(0X44017008,	0X7);
	create_dword	(0X44017024);
	make_array	(0X44017024,	0X30DB);
	create_dword	(0X44023390);
	make_array	(0X44023390,	0XD);
	create_dword	(0X440233C4);
	make_array	(0X440233C4,	0X7);
	make_array	(0X440233E1,	0XF);
	create_dword	(0X440233F0);
	make_array	(0X440233F0,	0X5);
	create_dword	(0X44023404);
	make_array	(0X44023404,	0X7);
	create_word	(0X44023422);
	create_dword	(0X44023424);
	make_array	(0X44023424,	0X30DA);
	create_dword	(0X4402F78C);
	make_array	(0X4402F78C,	0XD);
	create_dword	(0X4402F7C0);
	make_array	(0X4402F7C0,	0X7);
	make_array	(0X4402F7DD,	0X3);
	create_dword	(0X4402F7E0);
	make_array	(0X4402F7E0,	0X3);
	create_dword	(0X4402F7EC);
	make_array	(0X4402F7EC,	0X5);
	create_dword	(0X4402F800);
	make_array	(0X4402F800,	0X7);
	create_dword	(0X4402F81C);
	make_array	(0X4402F81C,	0X30DB);
	create_dword	(0X4403BB88);
	make_array	(0X4403BB88,	0XD);
	create_dword	(0X4403BBBC);
	make_array	(0X4403BBBC,	0X7);
	make_array	(0X4403BBD9,	0X3);
	create_dword	(0X4403BBDC);
	make_array	(0X4403BBDC,	0X3);
	create_dword	(0X4403BBE8);
	make_array	(0X4403BBE8,	0X5);
	create_dword	(0X4403BBFC);
	make_array	(0X4403BBFC,	0X7);
	create_byte	(0X4403BC19);
	make_array	(0X4403BC19,	0X3);
	create_dword	(0X4403BC1C);
	make_array	(0X4403BC1C,	0X30DA);
	create_dword	(0X44047F84);
	make_array	(0X44047F84,	0XD);
	create_dword	(0X44047FB8);
	make_array	(0X44047FB8,	0X7);
	make_array	(0X44047FD5,	0X3);
	create_dword	(0X44047FD8);
	make_array	(0X44047FD8,	0X3);
	create_dword	(0X44047FE4);
	make_array	(0X44047FE4,	0X5);
	create_dword	(0X44047FF8);
	make_array	(0X44047FF8,	0X7);
	create_word	(0X44048016);
	create_dword	(0X44048018);
	make_array	(0X44048018,	0X30DA);
	create_dword	(0X44054380);
	make_array	(0X44054380,	0XD);
	create_dword	(0X440543B4);
	make_array	(0X440543B4,	0X7);
	make_array	(0X440543D1,	0XF);
	create_dword	(0X440543E0);
	make_array	(0X440543E0,	0X5);
	create_dword	(0X440543F4);
	make_array	(0X440543F4,	0X7);
	create_byte	(0X44054411);
	make_array	(0X44054411,	0X3);
	create_dword	(0X44054414);
	make_array	(0X44054414,	0X30DA);
	create_dword	(0X4406077C);
	make_array	(0X4406077C,	0XD);
	create_dword	(0X440607B0);
	make_array	(0X440607B0,	0X7);
	make_array	(0X440607CD,	0X3);
	create_dword	(0X440607D0);
	make_array	(0X440607D0,	0X3);
	create_dword	(0X440607DC);
	make_array	(0X440607DC,	0X5);
	create_dword	(0X440607F0);
	make_array	(0X440607F0,	0X7);
	create_dword	(0X4406080C);
	make_array	(0X4406080C,	0X30DB);
	create_dword	(0X4406CB78);
	make_array	(0X4406CB78,	0XD);
	create_dword	(0X4406CBAC);
	make_array	(0X4406CBAC,	0X7);
	make_array	(0X4406CBC9,	0X3);
	create_dword	(0X4406CBCC);
	make_array	(0X4406CBCC,	0X3);
	create_dword	(0X4406CBD8);
	make_array	(0X4406CBD8,	0X5);
	create_dword	(0X4406CBEC);
	make_array	(0X4406CBEC,	0X7);
	create_byte	(0X4406CC09);
	make_array	(0X4406CC09,	0X3);
	create_dword	(0X4406CC0C);
	make_array	(0X4406CC0C,	0XCFD);
	create_dword	(0X44078F74);
	make_array	(0X44078F74,	0XD);
	create_dword	(0X44078FA8);
	make_array	(0X44078FA8,	0X7);
	make_array	(0X44078FC5,	0X3);
	create_dword	(0X44078FC8);
	make_array	(0X44078FC8,	0X3);
	create_dword	(0X44078FD4);
	make_array	(0X44078FD4,	0X5);
	create_dword	(0X44078FE8);
	make_array	(0X44078FE8,	0X7);
	create_word	(0X44079006);
	create_dword	(0X44079008);
	make_array	(0X44079008,	0X30DA);
	create_dword	(0X44085370);
	make_array	(0X44085370,	0XD);
	create_dword	(0X440853A4);
	make_array	(0X440853A4,	0X7);
	make_array	(0X440853C1,	0XF);
	create_dword	(0X440853D0);
	make_array	(0X440853D0,	0X5);
	create_dword	(0X440853E4);
	make_array	(0X440853E4,	0X7);
	create_word	(0X44085402);
	create_dword	(0X44085404);
	make_array	(0X44085404,	0X30DA);
	create_dword	(0X4409176C);
	make_array	(0X4409176C,	0XD);
	create_dword	(0X440917A0);
	make_array	(0X440917A0,	0X7);
	make_array	(0X440917BD,	0X3);
	create_dword	(0X440917C0);
	make_array	(0X440917C0,	0X3);
	create_dword	(0X440917CC);
	make_array	(0X440917CC,	0X5);
	create_dword	(0X440917E0);
	make_array	(0X440917E0,	0X7);
	create_byte	(0X440917FC);
	create_word	(0X440917FE);
	create_dword	(0X44091800);
	make_array	(0X44091800,	0X30DA);
	create_dword	(0X4409DB68);
	make_array	(0X4409DB68,	0XD);
	create_dword	(0X4409DB9C);
	make_array	(0X4409DB9C,	0X7);
	make_array	(0X4409DBB9,	0X3);
	create_dword	(0X4409DBBC);
	make_array	(0X4409DBBC,	0X3);
	create_dword	(0X4409DBC8);
	make_array	(0X4409DBC8,	0X5);
	create_dword	(0X4409DBDC);
	make_array	(0X4409DBDC,	0X7);
	create_word	(0X4409DBFA);
	create_dword	(0X4409DBFC);
	make_array	(0X4409DBFC,	0X23EF);
	create_dword	(0X440A6BB8);
	create_dword	(0X440A9F64);
	make_array	(0X440A9F64,	0XD);
	create_dword	(0X440A9F98);
	make_array	(0X440A9F98,	0X7);
	make_array	(0X440A9FB5,	0X3);
	create_dword	(0X440A9FB8);
	make_array	(0X440A9FB8,	0X3);
	create_dword	(0X440A9FC4);
	make_array	(0X440A9FC4,	0X5);
	create_dword	(0X440A9FD8);
	make_array	(0X440A9FD8,	0X7);
	create_word	(0X440A9FF6);
	create_dword	(0X440A9FF8);
	make_array	(0X440A9FF8,	0X30DA);
	create_dword	(0X440B6360);
	make_array	(0X440B6360,	0XD);
	create_dword	(0X440B6394);
	make_array	(0X440B6394,	0X7);
	make_array	(0X440B63B1,	0XF);
	create_dword	(0X440B63C0);
	make_array	(0X440B63C0,	0X5);
	create_dword	(0X440B63D4);
	make_array	(0X440B63D4,	0X7);
	create_dword	(0X440B63F0);
	make_array	(0X440B63F0,	0X30DB);
	create_dword	(0X440C275C);
	make_array	(0X440C275C,	0XD);
	create_dword	(0X440C2790);
	make_array	(0X440C2790,	0X7);
	make_array	(0X440C27AD,	0X3);
	create_dword	(0X440C27B0);
	make_array	(0X440C27B0,	0X3);
	create_dword	(0X440C27BC);
	make_array	(0X440C27BC,	0X5);
	create_dword	(0X440C27D0);
	make_array	(0X440C27D0,	0X7);
	create_byte	(0X440C27ED);
	make_array	(0X440C27ED,	0X3);
	create_dword	(0X440C27F0);
	make_array	(0X440C27F0,	0X30DA);
	create_dword	(0X440CEB58);
	make_array	(0X440CEB58,	0XD);
	create_dword	(0X440CEB8C);
	make_array	(0X440CEB8C,	0X7);
	create_dword	(0X440CEBA8);
	make_array	(0X440CEBA8,	0X4);
	create_dword	(0X440CEBB8);
	make_array	(0X440CEBB8,	0X5);
	create_dword	(0X440CEBCC);
	make_array	(0X440CEBCC,	0X7);
	create_dword	(0X440CEBE8);
	make_array	(0X440CEBE8,	0X30DB);
	create_dword	(0X440DAF54);
	make_array	(0X440DAF54,	0XD);
	create_dword	(0X440DAF88);
	make_array	(0X440DAF88,	0X7);
	create_dword	(0X440DAFA4);
	make_array	(0X440DAFA4,	0X4);
	create_dword	(0X440DAFB4);
	make_array	(0X440DAFB4,	0X5);
	create_dword	(0X440DAFC8);
	make_array	(0X440DAFC8,	0X7);
	create_word	(0X440DAFE6);
	create_dword	(0X440DAFE8);
	make_array	(0X440DAFE8,	0X30DA);
	create_dword	(0X440E7350);
	make_array	(0X440E7350,	0XD);
	create_dword	(0X440E7384);
	make_array	(0X440E7384,	0X7);
	make_array	(0X440E73A1,	0XF);
	create_dword	(0X440E73B0);
	make_array	(0X440E73B0,	0X5);
	create_dword	(0X440E73C4);
	make_array	(0X440E73C4,	0X7);
	create_byte	(0X440E73E0);
	create_word	(0X440E73E2);
	create_dword	(0X440E73E4);
	make_array	(0X440E73E4,	0X30DA);
	create_dword	(0X440F374C);
	make_array	(0X440F374C,	0XD);
	create_dword	(0X440F3780);
	make_array	(0X440F3780,	0X7);
	make_array	(0X440F379D,	0X3);
	create_dword	(0X440F37A0);
	make_array	(0X440F37A0,	0X3);
	create_dword	(0X440F37AC);
	make_array	(0X440F37AC,	0X5);
	create_dword	(0X440F37C0);
	make_array	(0X440F37C0,	0X7);
	create_word	(0X440F37DE);
	create_dword	(0X440F37E0);
	make_array	(0X440F37E0,	0X30DA);
	create_dword	(0X440FFB48);
	make_array	(0X440FFB48,	0XD);
	create_dword	(0X440FFB7C);
	make_array	(0X440FFB7C,	0X7);
	make_array	(0X440FFB99,	0X3);
	create_dword	(0X440FFB9C);
	make_array	(0X440FFB9C,	0X3);
	create_dword	(0X440FFBA8);
	make_array	(0X440FFBA8,	0X5);
	create_dword	(0X440FFBBC);
	make_array	(0X440FFBBC,	0X7);
	create_word	(0X440FFBDA);
	create_dword	(0X440FFBDC);
	make_array	(0X440FFBDC,	0X30DA);
	create_dword	(0X4410BF44);
	make_array	(0X4410BF44,	0XD);
	create_dword	(0X4410BF78);
	make_array	(0X4410BF78,	0X7);
	make_array	(0X4410BF95,	0X3);
	create_dword	(0X4410BF98);
	make_array	(0X4410BF98,	0X3);
	create_dword	(0X4410BFA4);
	make_array	(0X4410BFA4,	0X5);
	create_dword	(0X4410BFB8);
	make_array	(0X4410BFB8,	0X7);
	create_word	(0X4410BFD6);
	create_dword	(0X4410BFD8);
	make_array	(0X4410BFD8,	0X30DA);
	create_dword	(0X44118340);
	make_array	(0X44118340,	0XD);
	create_dword	(0X44118374);
	make_array	(0X44118374,	0X7);
	create_dword	(0X44118390);
	make_array	(0X44118390,	0X4);
	create_dword	(0X441183A0);
	make_array	(0X441183A0,	0X5);
	create_dword	(0X441183B4);
	make_array	(0X441183B4,	0X7);
	create_word	(0X441183D2);
	create_dword	(0X441183D4);
	make_array	(0X441183D4,	0X30DA);
	create_dword	(0X4412473C);
	make_array	(0X4412473C,	0XD);
	create_dword	(0X44124770);
	make_array	(0X44124770,	0X7);
	make_array	(0X4412478D,	0X3);
	create_dword	(0X44124790);
	make_array	(0X44124790,	0X3);
	create_dword	(0X4412479C);
	make_array	(0X4412479C,	0X5);
	create_dword	(0X441247B0);
	make_array	(0X441247B0,	0X7);
	create_word	(0X441247CE);
	create_dword	(0X441247D0);
	make_array	(0X441247D0,	0X30DA);
	create_dword	(0X44130B38);
	make_array	(0X44130B38,	0XD);
	create_dword	(0X44130B6C);
	make_array	(0X44130B6C,	0X7);
	create_dword	(0X44130B88);
	make_array	(0X44130B88,	0X4);
	create_dword	(0X44130B98);
	make_array	(0X44130B98,	0X5);
	create_dword	(0X44130BAC);
	make_array	(0X44130BAC,	0X7);
	create_strlit	(0X44130BC8,	0X5);
	set_name	(0X44130BC8,	"aIj");
	make_array	(0X44130BCD,	0X3);
	create_dword	(0X44130BD0);
	make_array	(0X44130BD0,	0X30D9);
	create_dword	(0X4413CF34);
	make_array	(0X4413CF34,	0XD);
	create_dword	(0X4413CF68);
	make_array	(0X4413CF68,	0X7);
	create_dword	(0X4413CF84);
	make_array	(0X4413CF84,	0X4);
	create_dword	(0X4413CF94);
	make_array	(0X4413CF94,	0X5);
	create_dword	(0X4413CFA8);
	make_array	(0X4413CFA8,	0X7);
	create_word	(0X4413CFC6);
	create_dword	(0X4413CFC8);
	make_array	(0X4413CFC8,	0X30DA);
	create_dword	(0X44149330);
	make_array	(0X44149330,	0XD);
	create_dword	(0X44149364);
	make_array	(0X44149364,	0X7);
	make_array	(0X44149381,	0XF);
	create_dword	(0X44149390);
	make_array	(0X44149390,	0X5);
	create_dword	(0X441493A4);
	make_array	(0X441493A4,	0X7);
	create_word	(0X441493C2);
	create_dword	(0X441493C4);
	make_array	(0X441493C4,	0X30DA);
	create_dword	(0X4415572C);
	make_array	(0X4415572C,	0XD);
	create_dword	(0X44155760);
	make_array	(0X44155760,	0X7);
	make_array	(0X4415577D,	0X3);
	create_dword	(0X44155780);
	make_array	(0X44155780,	0X3);
	create_dword	(0X4415578C);
	make_array	(0X4415578C,	0X5);
	create_dword	(0X441557A0);
	make_array	(0X441557A0,	0X7);
	create_byte	(0X441557BD);
	make_array	(0X441557BD,	0X3);
	create_dword	(0X441557C0);
	make_array	(0X441557C0,	0X2A10);
	create_byte	(0X44160017);
	create_dword	(0X44160018);
	make_array	(0X44160018,	0X6C4);
	create_dword	(0X44161B28);
	make_array	(0X44161B28,	0XD);
	create_dword	(0X44161B5C);
	make_array	(0X44161B5C,	0X7);
	create_dword	(0X44161B78);
	make_array	(0X44161B78,	0X4);
	create_dword	(0X44161B88);
	make_array	(0X44161B88,	0X5);
	create_dword	(0X44161B9C);
	make_array	(0X44161B9C,	0X7);
	create_word	(0X44161BBA);
	create_dword	(0X44161BBC);
	make_array	(0X44161BBC,	0X30DA);
	create_dword	(0X4416DF24);
	make_array	(0X4416DF24,	0XD);
	create_dword	(0X4416DF58);
	make_array	(0X4416DF58,	0X7);
	create_byte	(0X4416DF74);
	make_array	(0X4416DF74,	0X5);
	make_array	(0X4416DF79,	0X3);
	create_dword	(0X4416DF7C);
	make_array	(0X4416DF7C,	0X2);
	create_dword	(0X4416DF84);
	make_array	(0X4416DF84,	0X5);
	create_dword	(0X4416DF98);
	make_array	(0X4416DF98,	0X7);
	create_word	(0X4416DFB6);
	create_dword	(0X4416DFB8);
	make_array	(0X4416DFB8,	0X30DA);
	create_dword	(0X4417A320);
	make_array	(0X4417A320,	0XD);
	create_dword	(0X4417A354);
	make_array	(0X4417A354,	0X7);
	create_dword	(0X4417A370);
	make_array	(0X4417A370,	0X4);
	create_dword	(0X4417A380);
	make_array	(0X4417A380,	0X5);
	create_dword	(0X4417A394);
	make_array	(0X4417A394,	0X7);
	create_dword	(0X4417A3B0);
	make_array	(0X4417A3B0,	0X30DB);
	create_dword	(0X4418671C);
	make_array	(0X4418671C,	0XD);
	create_dword	(0X44186750);
	make_array	(0X44186750,	0X7);
	make_array	(0X4418676D,	0X3);
	create_dword	(0X44186770);
	make_array	(0X44186770,	0X3);
	create_dword	(0X4418677C);
	make_array	(0X4418677C,	0X5);
	create_dword	(0X44186790);
	make_array	(0X44186790,	0X7);
	create_word	(0X441867AE);
	create_dword	(0X441867B0);
	make_array	(0X441867B0,	0X30DA);
	create_dword	(0X44192B18);
	make_array	(0X44192B18,	0XD);
	create_dword	(0X44192B4C);
	make_array	(0X44192B4C,	0X7);
	create_dword	(0X44192B68);
	make_array	(0X44192B68,	0X4);
	create_dword	(0X44192B78);
	make_array	(0X44192B78,	0X5);
	create_dword	(0X44192B8C);
	make_array	(0X44192B8C,	0X7);
	create_byte	(0X44192BA9);
	make_array	(0X44192BA9,	0X3);
	create_dword	(0X44192BAC);
	make_array	(0X44192BAC,	0X6EA);
	create_byte	(0X44194754);
	make_array	(0X44194754,	0X2);
	create_word	(0X44194756);
	create_dword	(0X44194758);
	make_array	(0X44194758,	0X29EF);
	create_dword	(0X4419EF14);
	make_array	(0X4419EF14,	0XD);
	create_dword	(0X4419EF48);
	make_array	(0X4419EF48,	0X7);
	create_dword	(0X4419EF64);
	make_array	(0X4419EF64,	0X4);
	create_dword	(0X4419EF74);
	make_array	(0X4419EF74,	0X5);
	create_dword	(0X4419EF88);
	make_array	(0X4419EF88,	0X7);
	create_byte	(0X4419EFA5);
	make_array	(0X4419EFA5,	0X3);
	create_dword	(0X4419EFA8);
	make_array	(0X4419EFA8,	0X30DA);
	create_dword	(0X441AB310);
	make_array	(0X441AB310,	0XD);
	create_dword	(0X441AB344);
	make_array	(0X441AB344,	0X7);
	make_array	(0X441AB361,	0XF);
	create_dword	(0X441AB370);
	make_array	(0X441AB370,	0X5);
	create_dword	(0X441AB384);
	make_array	(0X441AB384,	0X7);
	create_word	(0X441AB3A2);
	create_dword	(0X441AB3A4);
	make_array	(0X441AB3A4,	0X30DA);
	create_dword	(0X441B770C);
	make_array	(0X441B770C,	0XD);
	create_dword	(0X441B7740);
	make_array	(0X441B7740,	0X7);
	make_array	(0X441B775D,	0X3);
	create_dword	(0X441B7760);
	make_array	(0X441B7760,	0X3);
	create_dword	(0X441B776C);
	make_array	(0X441B776C,	0X5);
	create_dword	(0X441B7780);
	make_array	(0X441B7780,	0X7);
	create_word	(0X441B779E);
	create_dword	(0X441B77A0);
	make_array	(0X441B77A0,	0X30DA);
	create_dword	(0X441C3B08);
	make_array	(0X441C3B08,	0XD);
	create_dword	(0X441C3B3C);
	make_array	(0X441C3B3C,	0X7);
	create_dword	(0X441C3B58);
	make_array	(0X441C3B58,	0X4);
	create_dword	(0X441C3B68);
	make_array	(0X441C3B68,	0X5);
	create_dword	(0X441C3B7C);
	make_array	(0X441C3B7C,	0X7);
	create_byte	(0X441C3B99);
	make_array	(0X441C3B99,	0X3);
	create_dword	(0X441C3B9C);
	make_array	(0X441C3B9C,	0X30DA);
	create_dword	(0X441CFF04);
	make_array	(0X441CFF04,	0XD);
	create_dword	(0X441CFF38);
	make_array	(0X441CFF38,	0X7);
	create_dword	(0X441CFF54);
	make_array	(0X441CFF54,	0X4);
	create_dword	(0X441CFF64);
	make_array	(0X441CFF64,	0X5);
	create_dword	(0X441CFF78);
	make_array	(0X441CFF78,	0X7);
	create_word	(0X441CFF96);
	create_dword	(0X441CFF98);
	make_array	(0X441CFF98,	0X30DA);
	create_dword	(0X441DC300);
	make_array	(0X441DC300,	0XD);
	create_dword	(0X441DC334);
	make_array	(0X441DC334,	0X7);
	create_dword	(0X441DC350);
	make_array	(0X441DC350,	0X4);
	create_dword	(0X441DC360);
	make_array	(0X441DC360,	0X5);
	create_dword	(0X441DC374);
	make_array	(0X441DC374,	0X7);
	create_word	(0X441DC392);
	create_dword	(0X441DC394);
	make_array	(0X441DC394,	0X30DA);
	create_dword	(0X441E86FC);
	make_array	(0X441E86FC,	0XD);
	create_dword	(0X441E8730);
	make_array	(0X441E8730,	0X7);
	make_array	(0X441E874D,	0X3);
	create_dword	(0X441E8750);
	make_array	(0X441E8750,	0X3);
	create_dword	(0X441E875C);
	make_array	(0X441E875C,	0X5);
	create_dword	(0X441E8770);
	make_array	(0X441E8770,	0X7);
	create_word	(0X441E878E);
	create_dword	(0X441E8790);
	make_array	(0X441E8790,	0X30DA);
	create_dword	(0X441F4AF8);
	make_array	(0X441F4AF8,	0XD);
	create_dword	(0X441F4B2C);
	make_array	(0X441F4B2C,	0X7);
	create_dword	(0X441F4B48);
	make_array	(0X441F4B48,	0X4);
	create_dword	(0X441F4B58);
	make_array	(0X441F4B58,	0X5);
	create_dword	(0X441F4B6C);
	make_array	(0X441F4B6C,	0X7);
	create_dword	(0X441F4B88);
	make_array	(0X441F4B88,	0X30DB);
	create_dword	(0X44200EF4);
	make_array	(0X44200EF4,	0XD);
	create_dword	(0X44200F28);
	make_array	(0X44200F28,	0X7);
	create_dword	(0X44200F44);
	make_array	(0X44200F44,	0X4);
	create_dword	(0X44200F54);
	make_array	(0X44200F54,	0X5);
	create_dword	(0X44200F68);
	make_array	(0X44200F68,	0X7);
	create_byte	(0X44200F85);
	make_array	(0X44200F85,	0X3);
	create_dword	(0X44200F88);
	make_array	(0X44200F88,	0X30DA);
	create_dword	(0X4420D2F0);
	make_array	(0X4420D2F0,	0XD);
	create_dword	(0X4420D324);
	make_array	(0X4420D324,	0X7);
	make_array	(0X4420D341,	0XF);
	create_dword	(0X4420D350);
	make_array	(0X4420D350,	0X5);
	create_dword	(0X4420D364);
	make_array	(0X4420D364,	0X7);
	create_word	(0X4420D382);
	create_dword	(0X4420D384);
	make_array	(0X4420D384,	0X30DA);
	create_dword	(0X442196EC);
	make_array	(0X442196EC,	0XD);
	create_dword	(0X44219720);
	make_array	(0X44219720,	0X7);
	make_array	(0X4421973D,	0X3);
	create_dword	(0X44219740);
	make_array	(0X44219740,	0X3);
	create_dword	(0X4421974C);
	make_array	(0X4421974C,	0X5);
	create_dword	(0X44219760);
	make_array	(0X44219760,	0X7);
	create_dword	(0X4421977C);
	make_array	(0X4421977C,	0X30DB);
	create_dword	(0X44225AE8);
	make_array	(0X44225AE8,	0XD);
	create_dword	(0X44225B1C);
	make_array	(0X44225B1C,	0X7);
	make_array	(0X44225B39,	0X3);
	create_dword	(0X44225B3C);
	make_array	(0X44225B3C,	0X3);
	create_dword	(0X44225B48);
	make_array	(0X44225B48,	0X5);
	create_dword	(0X44225B5C);
	make_array	(0X44225B5C,	0X7);
	create_byte	(0X44225B79);
	make_array	(0X44225B79,	0X3);
	create_dword	(0X44225B7C);
	make_array	(0X44225B7C,	0X30DA);
	create_dword	(0X44231EE4);
	make_array	(0X44231EE4,	0XD);
	create_dword	(0X44231F18);
	make_array	(0X44231F18,	0X7);
	make_array	(0X44231F35,	0X3);
	create_dword	(0X44231F38);
	make_array	(0X44231F38,	0X3);
	create_dword	(0X44231F44);
	make_array	(0X44231F44,	0X5);
	create_dword	(0X44231F58);
	make_array	(0X44231F58,	0X7);
	create_dword	(0X44231F74);
	make_array	(0X44231F74,	0X30DB);
	create_dword	(0X4423E2E0);
	make_array	(0X4423E2E0,	0XD);
	create_dword	(0X4423E314);
	make_array	(0X4423E314,	0X7);
	create_dword	(0X4423E330);
	make_array	(0X4423E330,	0X4);
	create_dword	(0X4423E340);
	make_array	(0X4423E340,	0X5);
	create_dword	(0X4423E354);
	make_array	(0X4423E354,	0X7);
	create_byte	(0X4423E371);
	make_array	(0X4423E371,	0X3);
	create_dword	(0X4423E374);
	make_array	(0X4423E374,	0X30DA);
	create_dword	(0X4424A6DC);
	make_array	(0X4424A6DC,	0XD);
	create_dword	(0X4424A710);
	make_array	(0X4424A710,	0X7);
	make_array	(0X4424A72D,	0X3);
	create_dword	(0X4424A730);
	make_array	(0X4424A730,	0X3);
	create_dword	(0X4424A73C);
	make_array	(0X4424A73C,	0X5);
	create_dword	(0X4424A750);
	make_array	(0X4424A750,	0X7);
	create_word	(0X4424A76E);
	create_dword	(0X4424A770);
	make_array	(0X4424A770,	0X30DA);
	create_dword	(0X44256AD8);
	make_array	(0X44256AD8,	0XE);
	make_array	(0X44256B11,	0X3);
	create_byte	(0X44256B15);
	make_array	(0X44256B15,	0X3);
	create_dword	(0X44256B18);
	make_array	(0X44256B18,	0X8);
	create_dword	(0X44256B38);
	make_array	(0X44256B38,	0X5);
	create_dword	(0X44256B4C);
	make_array	(0X44256B4C,	0X7);
	create_byte	(0X44256B69);
	make_array	(0X44256B69,	0X3);
	create_dword	(0X44256B6C);
	make_array	(0X44256B6C,	0X30DA);
	create_dword	(0X44262ED4);
	make_array	(0X44262ED4,	0XD);
	create_dword	(0X44262F08);
	set_name	(0X44262F08,	"OneTap::Globals::PlayersVectorStart");
	create_dword	(0X44262F0C);
	set_name	(0X44262F0C,	"OneTap::Globals::PlayersVectorEnd");
	create_oword	(0X44262F10);
	create_oword	(0X44262F20);
	create_oword	(0X44262F30);
	create_dword	(0X44262F40);
	create_byte	(0X44262F44);
	create_dword	(0X44262F45);
	create_dword	(0X44262F49);
	create_dword	(0X44262F4D);
	create_dword	(0X44262F51);
	create_dword	(0X44262F55);
	create_dword	(0X44262F59);
	create_dword	(0X44262F5D);
	create_dword	(0X44262F61);
	create_dword	(0X44262F65);
	create_dword	(0X44262F69);
	create_dword	(0X44262F6D);
	create_dword	(0X44262F71);
	create_dword	(0X44262F75);
	create_dword	(0X44262F79);
	create_dword	(0X44262F7D);
	create_dword	(0X44262F81);
	create_dword	(0X44262F85);
	create_dword	(0X44262F89);
	create_dword	(0X44262F8D);
	create_dword	(0X44262F91);
	create_dword	(0X44262F95);
	create_dword	(0X44262F99);
	create_dword	(0X44262F9D);
	create_dword	(0X44262FA1);
	create_dword	(0X44262FA5);
	create_dword	(0X44262FA9);
	create_dword	(0X44262FAD);
	create_dword	(0X44262FB1);
	create_dword	(0X44262FB5);
	create_dword	(0X44262FB9);
	create_dword	(0X44262FBD);
	create_dword	(0X44262FC1);
	create_dword	(0X44262FC5);
	create_dword	(0X44262FC9);
	create_dword	(0X44262FD0);
	create_dword	(0X44263050);
	make_array	(0X44263050,	0X20);
	create_dword	(0X442630D0);
	make_array	(0X442630D0,	0X20);
	create_dword	(0X44263150);
	create_dword	(0X44263154);
	create_dword	(0X44263158);
	create_word	(0X4426315E);
	create_dword	(0X44263160);
	make_array	(0X44263160,	0X2);
	create_dword	(0X44263168);
	make_array	(0X44263168,	0X8);
	create_insn	(x=0X44263188);
	op_hex		(x,	1);
	create_dword	(0X4426318C);
	make_array	(0X4426318C,	0X47);
	create_dword	(0X442632A8);
	make_array	(0X442632A8,	0X12E);
	create_insn	(x=0X44263760);
	op_hex		(x,	1);
	create_dword	(0X44263764);
	make_array	(0X44263764,	0X2A);
	create_insn	(x=0X4426380C);
	op_hex		(x,	1);
	create_dword	(0X44263810);
	make_array	(0X44263810,	0X4864);
	create_insn	(x=0X442759A0);
	op_hex		(x,	1);
	create_dword	(0X442759A4);
	make_array	(0X442759A4,	0X175);
	create_insn	(x=0X44275F78);
	op_hex		(x,	1);
	create_dword	(0X44275F7C);
	make_array	(0X44275F7C,	0X2A);
	create_insn	(x=0X44276024);
	op_hex		(x,	1);
	create_dword	(0X44276028);
	make_array	(0X44276028,	0X4864);
	create_insn	(x=0X442881B8);
	op_hex		(x,	1);
	create_dword	(0X442881BC);
	make_array	(0X442881BC,	0X175);
	create_insn	(x=0X44288790);
	op_hex		(x,	1);
	create_dword	(0X44288794);
	make_array	(0X44288794,	0X2A);
	create_insn	(x=0X4428883C);
	op_hex		(x,	1);
	create_dword	(0X44288840);
	make_array	(0X44288840,	0XDF0);
	create_dword	(0X4429A9D4);
	make_array	(0X4429A9D4,	0X175);
	create_insn	(x=0X4429AFA8);
	op_hex		(x,	1);
	create_dword	(0X4429AFAC);
	make_array	(0X4429AFAC,	0X2A);
	create_insn	(x=0X4429B054);
	op_hex		(x,	1);
	create_dword	(0X4429B058);
	make_array	(0X4429B058,	0X4864);
	create_insn	(x=0X442AD1E8);
	op_hex		(x,	1);
	create_dword	(0X442AD1EC);
	make_array	(0X442AD1EC,	0X175);
	create_insn	(x=0X442AD7C0);
	op_hex		(x,	1);
	create_dword	(0X442AD7C4);
	make_array	(0X442AD7C4,	0X2A);
	create_insn	(x=0X442AD86C);
	op_hex		(x,	1);
	create_dword	(0X442AD870);
	make_array	(0X442AD870,	0X4864);
	create_insn	(x=0X442BFA00);
	op_hex		(x,	1);
	create_dword	(0X442BFA04);
	make_array	(0X442BFA04,	0X175);
	create_insn	(x=0X442BFFD8);
	op_hex		(x,	1);
	create_dword	(0X442BFFDC);
	make_array	(0X442BFFDC,	0X2A);
	create_insn	(x=0X442C0084);
	op_hex		(x,	1);
	create_dword	(0X442C0088);
	make_array	(0X442C0088,	0X4864);
	create_insn	(x=0X442D2218);
	op_hex		(x,	1);
	create_dword	(0X442D221C);
	make_array	(0X442D221C,	0X175);
	create_insn	(x=0X442D27F0);
	op_hex		(x,	1);
	create_dword	(0X442D27F4);
	make_array	(0X442D27F4,	0X2A);
	create_insn	(x=0X442D289C);
	op_hex		(x,	1);
	create_dword	(0X442D28A0);
	make_array	(0X442D28A0,	0X2166);
	create_byte	(0X442DAE38);
	create_byte	(0X442DAE39);
	make_array	(0X442DAE39,	0X3);
	create_dword	(0X442DAE3C);
	make_array	(0X442DAE3C,	0X26FD);
	create_insn	(x=0X442E4A30);
	op_hex		(x,	1);
	create_dword	(0X442E4A34);
	make_array	(0X442E4A34,	0X175);
	create_insn	(x=0X442E5008);
	op_hex		(x,	1);
	create_dword	(0X442E500C);
	make_array	(0X442E500C,	0X2A);
	create_insn	(x=0X442E50B4);
	op_hex		(x,	1);
	create_dword	(0X442E50B8);
	make_array	(0X442E50B8,	0X4864);
	create_insn	(x=0X442F7248);
	op_hex		(x,	1);
	create_dword	(0X442F724C);
	make_array	(0X442F724C,	0X175);
	create_insn	(x=0X442F7820);
	op_hex		(x,	1);
	create_dword	(0X442F7824);
	make_array	(0X442F7824,	0X2A);
	create_insn	(x=0X442F78CC);
	op_hex		(x,	1);
	create_dword	(0X442F78D0);
	make_array	(0X442F78D0,	0X4864);
	create_insn	(x=0X44309A60);
	op_hex		(x,	1);
	create_dword	(0X44309A64);
	make_array	(0X44309A64,	0X175);
	create_insn	(x=0X4430A038);
	op_hex		(x,	1);
	create_dword	(0X4430A03C);
	make_array	(0X4430A03C,	0X2A);
	create_insn	(x=0X4430A0E4);
	op_hex		(x,	1);
	create_dword	(0X4430A0E8);
	make_array	(0X4430A0E8,	0X4864);
	create_insn	(x=0X4431C278);
	op_hex		(x,	1);
	create_dword	(0X4431C27C);
	make_array	(0X4431C27C,	0X175);
	create_insn	(x=0X4431C850);
	op_hex		(x,	1);
	create_dword	(0X4431C854);
	make_array	(0X4431C854,	0X2A);
	create_insn	(x=0X4431C8FC);
	op_hex		(x,	1);
	create_dword	(0X4431C900);
	make_array	(0X4431C900,	0X4864);
	create_insn	(x=0X4432EA90);
	op_hex		(x,	1);
	create_dword	(0X4432EA94);
	make_array	(0X4432EA94,	0X175);
	create_insn	(x=0X4432F068);
	op_hex		(x,	1);
	create_dword	(0X4432F06C);
	make_array	(0X4432F06C,	0X2A);
	create_insn	(x=0X4432F114);
	op_hex		(x,	1);
	create_dword	(0X4432F118);
	make_array	(0X4432F118,	0X4864);
	create_insn	(x=0X443412A8);
	op_hex		(x,	1);
	create_dword	(0X443412AC);
	make_array	(0X443412AC,	0X175);
	create_insn	(x=0X44341880);
	op_hex		(x,	1);
	create_dword	(0X44341884);
	make_array	(0X44341884,	0X2A);
	create_insn	(x=0X4434192C);
	op_hex		(x,	1);
	create_dword	(0X44341930);
	make_array	(0X44341930,	0X142A);
	create_byte	(0X443469D8);
	make_array	(0X443469D8,	0X3);
	create_byte	(0X443469DB);
	create_dword	(0X443469DC);
	make_array	(0X443469DC,	0X3439);
	create_insn	(x=0X44353AC0);
	op_hex		(x,	1);
	create_dword	(0X44353AC4);
	make_array	(0X44353AC4,	0X175);
	create_insn	(x=0X44354098);
	op_hex		(x,	1);
	create_dword	(0X4435409C);
	make_array	(0X4435409C,	0X2A);
	create_insn	(x=0X44354144);
	op_hex		(x,	1);
	create_dword	(0X44354148);
	make_array	(0X44354148,	0X4864);
	create_insn	(x=0X443662D8);
	op_hex		(x,	1);
	create_dword	(0X443662DC);
	make_array	(0X443662DC,	0X175);
	create_insn	(x=0X443668B0);
	op_hex		(x,	1);
	create_dword	(0X443668B4);
	make_array	(0X443668B4,	0X2A);
	create_insn	(x=0X4436695C);
	op_hex		(x,	1);
	create_dword	(0X44366960);
	make_array	(0X44366960,	0X2FB1);
	create_byte	(0X44372824);
	create_byte	(0X44372825);
	make_array	(0X44372825,	0X3);
	create_dword	(0X44372828);
	make_array	(0X44372828,	0X18B2);
	create_insn	(x=0X44378AF0);
	op_hex		(x,	1);
	create_dword	(0X44378AF4);
	make_array	(0X44378AF4,	0X175);
	create_insn	(x=0X443790C8);
	op_hex		(x,	1);
	create_dword	(0X443790CC);
	make_array	(0X443790CC,	0X2A);
	create_insn	(x=0X44379174);
	op_hex		(x,	1);
	create_dword	(0X44379178);
	make_array	(0X44379178,	0X4864);
	create_insn	(x=0X4438B308);
	op_hex		(x,	1);
	create_dword	(0X4438B30C);
	make_array	(0X4438B30C,	0X175);
	create_insn	(x=0X4438B8E0);
	op_hex		(x,	1);
	create_dword	(0X4438B8E4);
	make_array	(0X4438B8E4,	0X2A);
	create_insn	(x=0X4438B98C);
	op_hex		(x,	1);
	create_dword	(0X4438B990);
	make_array	(0X4438B990,	0X3A8A);
	create_byte	(0X4439A3B8);
	make_array	(0X4439A3B8,	0X2);
	create_word	(0X4439A3BA);
	create_dword	(0X4439A3BC);
	make_array	(0X4439A3BC,	0XDD9);
	create_insn	(x=0X4439DB20);
	op_hex		(x,	1);
	create_dword	(0X4439DB24);
	make_array	(0X4439DB24,	0X175);
	create_insn	(x=0X4439E0F8);
	op_hex		(x,	1);
	create_dword	(0X4439E0FC);
	make_array	(0X4439E0FC,	0X2A);
	create_insn	(x=0X4439E1A4);
	op_hex		(x,	1);
	create_dword	(0X4439E1A8);
	make_array	(0X4439E1A8,	0X2E0);
	create_byte	(0X4439ED28);
	create_byte	(0X4439ED29);
	make_array	(0X4439ED29,	0X3);
	create_dword	(0X4439ED2C);
	make_array	(0X4439ED2C,	0X2C7B);
	create_byte	(0X443A9F18);
	make_array	(0X443A9F18,	0X2);
	create_word	(0X443A9F1A);
	create_dword	(0X443A9F1C);
	make_array	(0X443A9F1C,	0X1907);
	create_insn	(x=0X443B0338);
	op_hex		(x,	1);
	create_dword	(0X443B033C);
	make_array	(0X443B033C,	0X175);
	create_insn	(x=0X443B0910);
	op_hex		(x,	1);
	create_dword	(0X443B0914);
	make_array	(0X443B0914,	0X2A);
	create_insn	(x=0X443B09BC);
	op_hex		(x,	1);
	create_dword	(0X443B09C0);
	make_array	(0X443B09C0,	0X6A2);
	create_byte	(0X443B2448);
	make_array	(0X443B2448,	0X2);
	create_word	(0X443B244A);
	create_dword	(0X443B244C);
	make_array	(0X443B244C,	0X48);
	create_byte	(0X443B256C);
	create_byte	(0X443B256D);
	make_array	(0X443B256D,	0X3);
	create_dword	(0X443B2570);
	make_array	(0X443B2570,	0X2589);
	create_byte	(0X443BBB94);
	create_byte	(0X443BBB95);
	make_array	(0X443BBB95,	0X3);
	create_dword	(0X443BBB98);
	make_array	(0X443BBB98,	0X1BEE);
	create_insn	(x=0X443C2B50);
	op_hex		(x,	1);
	create_dword	(0X443C2B54);
	make_array	(0X443C2B54,	0X175);
	create_insn	(x=0X443C3128);
	op_hex		(x,	1);
	create_dword	(0X443C312C);
	make_array	(0X443C312C,	0X2A);
	create_insn	(x=0X443C31D4);
	op_hex		(x,	1);
	create_dword	(0X443C31D8);
	make_array	(0X443C31D8,	0XEF1);
	create_byte	(0X443C6D9C);
	make_array	(0X443C6D9C,	0X2);
	create_word	(0X443C6D9E);
	create_dword	(0X443C6DA0);
	make_array	(0X443C6DA0,	0X649);
	create_byte	(0X443C86C4);
	make_array	(0X443C86C4,	0X3);
	create_byte	(0X443C86C7);
	create_dword	(0X443C86C8);
	make_array	(0X443C86C8,	0X48);
	create_byte	(0X443C87E8);
	make_array	(0X443C87E8,	0X2);
	create_word	(0X443C87EA);
	create_dword	(0X443C87EC);
	make_array	(0X443C87EC,	0XF85);
	create_byte	(0X443CC600);
	create_byte	(0X443CC601);
	make_array	(0X443CC601,	0X3);
	create_dword	(0X443CC604);
	make_array	(0X443CC604,	0X3E2);
	create_byte	(0X443CD58C);
	make_array	(0X443CD58C,	0X2);
	create_word	(0X443CD58E);
	create_dword	(0X443CD590);
	make_array	(0X443CD590,	0X118);
	create_byte	(0X443CD9F0);
	create_byte	(0X443CD9F1);
	make_array	(0X443CD9F1,	0X3);
	create_dword	(0X443CD9F4);
	make_array	(0X443CD9F4,	0X1E5D);
	create_insn	(x=0X443D5368);
	op_hex		(x,	1);
	create_dword	(0X443D536C);
	make_array	(0X443D536C,	0X175);
	create_insn	(x=0X443D5940);
	op_hex		(x,	1);
	create_dword	(0X443D5944);
	make_array	(0X443D5944,	0X2A);
	create_insn	(x=0X443D59EC);
	op_hex		(x,	1);
	create_dword	(0X443D59F0);
	make_array	(0X443D59F0,	0XA8E);
	create_byte	(0X443D8428);
	create_byte	(0X443D8429);
	make_array	(0X443D8429,	0X3);
	create_dword	(0X443D842C);
	make_array	(0X443D842C,	0X48);
	create_dword	(0X443D854C);
	make_array	(0X443D854C,	0X12B);
	create_byte	(0X443D89F8);
	make_array	(0X443D89F8,	0X2);
	create_byte	(0X443D89FA);
	create_dword	(0X443E7570);
	make_array	(0X443E7570,	0X48);
	create_byte	(0X443E7690);
	make_array	(0X443E7690,	0X3);
	create_byte	(0X443E7693);
	create_dword	(0X443E7694);
	make_array	(0X443E7694,	0X13B);
	create_insn	(x=0X443E7B80);
	op_hex		(x,	1);
	create_dword	(0X443E7B84);
	make_array	(0X443E7B84,	0X175);
	create_insn	(x=0X443E8158);
	op_hex		(x,	1);
	create_dword	(0X443E815C);
	make_array	(0X443E815C,	0X2A);
	create_insn	(x=0X443E8204);
	op_hex		(x,	1);
	create_dword	(0X443E8208);
	make_array	(0X443E8208,	0X24B0);
	create_byte	(0X443F2B54);
	create_byte	(0X443F2B55);
	make_array	(0X443F2B55,	0X3);
	create_dword	(0X443F2B58);
	make_array	(0X443F2B58,	0X1E10);
	create_insn	(x=0X443FA398);
	op_hex		(x,	1);
	create_dword	(0X443FA39C);
	make_array	(0X443FA39C,	0X175);
	create_insn	(x=0X443FA970);
	op_hex		(x,	1);
	create_dword	(0X443FA974);
	make_array	(0X443FA974,	0X2A);
	create_insn	(x=0X443FAA1C);
	op_hex		(x,	1);
	create_dword	(0X443FAA20);
	make_array	(0X443FAA20,	0X4864);
	create_insn	(x=0X4440CBB0);
	op_hex		(x,	1);
	create_dword	(0X4440CBB4);
	make_array	(0X4440CBB4,	0X175);
	create_insn	(x=0X4440D188);
	op_hex		(x,	1);
	create_dword	(0X4440D18C);
	make_array	(0X4440D18C,	0X2A);
	create_insn	(x=0X4440D234);
	op_hex		(x,	1);
	create_dword	(0X4440D238);
	make_array	(0X4440D238,	0X4864);
	create_insn	(x=0X4441F3C8);
	op_hex		(x,	1);
	create_dword	(0X4441F3CC);
	make_array	(0X4441F3CC,	0X175);
	create_insn	(x=0X4441F9A0);
	op_hex		(x,	1);
	create_dword	(0X4441F9A4);
	make_array	(0X4441F9A4,	0X2A);
	create_insn	(x=0X4441FA4C);
	op_hex		(x,	1);
	create_dword	(0X4441FA50);
	make_array	(0X4441FA50,	0X4864);
	create_insn	(x=0X44431BE0);
	op_hex		(x,	1);
	create_dword	(0X44431BE4);
	make_array	(0X44431BE4,	0X175);
	create_insn	(x=0X444321B8);
	op_hex		(x,	1);
	create_dword	(0X444321BC);
	make_array	(0X444321BC,	0X2A);
	create_insn	(x=0X44432264);
	op_hex		(x,	1);
	create_dword	(0X44432268);
	make_array	(0X44432268,	0X7F6);
	create_byte	(0X44434240);
	create_word	(0X4443F3FA);
	create_dword	(0X4443F3FC);
	make_array	(0X4443F3FC,	0X13FF);
	create_insn	(x=0X444443F8);
	op_hex		(x,	1);
	create_dword	(0X444443FC);
	make_array	(0X444443FC,	0X175);
	create_insn	(x=0X444449D0);
	op_hex		(x,	1);
	create_dword	(0X444449D4);
	make_array	(0X444449D4,	0X2A);
	create_insn	(x=0X44444A7C);
	op_hex		(x,	1);
	create_dword	(0X44444A80);
	make_array	(0X44444A80,	0X4864);
	create_insn	(x=0X44456C10);
	op_hex		(x,	1);
	create_dword	(0X44456C14);
	make_array	(0X44456C14,	0X175);
	create_insn	(x=0X444571E8);
	op_hex		(x,	1);
	create_dword	(0X444571EC);
	make_array	(0X444571EC,	0X2A);
	create_insn	(x=0X44457294);
	op_hex		(x,	1);
	create_dword	(0X44457298);
	make_array	(0X44457298,	0X4864);
	create_insn	(x=0X44469428);
	op_hex		(x,	1);
	create_dword	(0X4446942C);
	make_array	(0X4446942C,	0X175);
	create_insn	(x=0X44469A00);
	op_hex		(x,	1);
	create_dword	(0X44469A04);
	make_array	(0X44469A04,	0X2A);
	create_insn	(x=0X44469AAC);
	op_hex		(x,	1);
	create_dword	(0X44469AB0);
	make_array	(0X44469AB0,	0X2A66);
	create_dword	(0X44474448);
	make_array	(0X44474448,	0X1DFE);
	create_insn	(x=0X4447BC40);
	op_hex		(x,	1);
	create_dword	(0X4447BC44);
	make_array	(0X4447BC44,	0X175);
	create_insn	(x=0X4447C218);
	op_hex		(x,	1);
	create_dword	(0X4447C21C);
	make_array	(0X4447C21C,	0X2A);
	create_insn	(x=0X4447C2C4);
	op_hex		(x,	1);
	create_dword	(0X4447C2C8);
	make_array	(0X4447C2C8,	0X4864);
	create_insn	(x=0X4448E458);
	op_hex		(x,	1);
	create_dword	(0X4448E45C);
	make_array	(0X4448E45C,	0X175);
	create_insn	(x=0X4448EA30);
	op_hex		(x,	1);
	create_dword	(0X4448EA34);
	make_array	(0X4448EA34,	0X2A);
	create_insn	(x=0X4448EADC);
	op_hex		(x,	1);
	create_dword	(0X4448EAE0);
	make_array	(0X4448EAE0,	0X4864);
	create_insn	(x=0X444A0C70);
	op_hex		(x,	1);
	create_dword	(0X444A0C74);
	make_array	(0X444A0C74,	0X175);
	create_insn	(x=0X444A1248);
	op_hex		(x,	1);
	create_dword	(0X444A124C);
	make_array	(0X444A124C,	0X2A);
	create_insn	(x=0X444A12F4);
	op_hex		(x,	1);
	create_dword	(0X444A12F8);
	make_array	(0X444A12F8,	0X4864);
	create_insn	(x=0X444B3488);
	op_hex		(x,	1);
	create_dword	(0X444B348C);
	make_array	(0X444B348C,	0X175);
	create_insn	(x=0X444B3A60);
	op_hex		(x,	1);
	create_dword	(0X444B3A64);
	make_array	(0X444B3A64,	0X2A);
	create_insn	(x=0X444B3B0C);
	op_hex		(x,	1);
	create_dword	(0X444B3B10);
	make_array	(0X444B3B10,	0X44E);
	create_byte	(0X444B4C48);
	create_byte	(0X444B4C49);
	make_array	(0X444B4C49,	0X3);
	create_dword	(0X444B4C4C);
	make_array	(0X444B4C4C,	0X122D);
	create_dword	(0X444B9500);
	make_array	(0X444B9500,	0X31E8);
	create_insn	(x=0X444C5CA0);
	op_hex		(x,	1);
	create_dword	(0X444C5CA4);
	make_array	(0X444C5CA4,	0X175);
	create_insn	(x=0X444C6278);
	op_hex		(x,	1);
	create_dword	(0X444C627C);
	make_array	(0X444C627C,	0X2A);
	create_insn	(x=0X444C6324);
	op_hex		(x,	1);
	create_dword	(0X444C6328);
	make_array	(0X444C6328,	0X4864);
	create_insn	(x=0X444D84B8);
	op_hex		(x,	1);
	create_dword	(0X444D84BC);
	make_array	(0X444D84BC,	0X15F);
	create_byte	(0X444D8A38);
	make_array	(0X444D8A38,	0X3);
	create_byte	(0X444D8A3B);
	create_dword	(0X444D8A3C);
	make_array	(0X444D8A3C,	0X15);
	create_insn	(x=0X444D8A90);
	op_hex		(x,	1);
	create_dword	(0X444D8A94);
	make_array	(0X444D8A94,	0X11);
	create_byte	(0X444D8AD8);
	make_array	(0X444D8AD8,	0X3);
	create_byte	(0X444D8ADB);
	create_dword	(0X444D8ADC);
	make_array	(0X444D8ADC,	0X18);
	create_insn	(x=0X444D8B3C);
	op_hex		(x,	1);
	create_dword	(0X444D8B40);
	make_array	(0X444D8B40,	0X3385);
	create_dword	(0X444E5954);
	make_array	(0X444E5954,	0X293);
	create_dword	(0X444E63A0);
	make_array	(0X444E63A0,	0X124C);
	create_insn	(x=0X444EACD0);
	op_hex		(x,	1);
	create_dword	(0X444EACD4);
	make_array	(0X444EACD4,	0X175);
	create_insn	(x=0X444EB2A8);
	op_hex		(x,	1);
	create_dword	(0X444EB2AC);
	make_array	(0X444EB2AC,	0X2A);
	create_insn	(x=0X444EB354);
	op_hex		(x,	1);
	create_dword	(0X444EB358);
	make_array	(0X444EB358,	0X4864);
	create_insn	(x=0X444FD4E8);
	op_hex		(x,	1);
	create_dword	(0X444FD4EC);
	make_array	(0X444FD4EC,	0X175);
	create_insn	(x=0X444FDAC0);
	op_hex		(x,	1);
	create_dword	(0X444FDAC4);
	make_array	(0X444FDAC4,	0X2A);
	create_insn	(x=0X444FDB6C);
	op_hex		(x,	1);
	create_dword	(0X444FDB70);
	make_array	(0X444FDB70,	0X929);
	create_byte	(0X44500014);
	make_array	(0X44500014,	0X3);
	create_byte	(0X44500017);
	create_dword	(0X44500018);
	make_array	(0X44500018,	0X3F3A);
	create_insn	(x=0X4450FD00);
	op_hex		(x,	1);
	create_dword	(0X4450FD04);
	make_array	(0X4450FD04,	0X175);
	create_insn	(x=0X445102D8);
	op_hex		(x,	1);
	create_dword	(0X445102DC);
	make_array	(0X445102DC,	0X2A);
	create_insn	(x=0X44510384);
	op_hex		(x,	1);
	create_dword	(0X44510388);
	make_array	(0X44510388,	0X4864);
	create_insn	(x=0X44522518);
	op_hex		(x,	1);
	create_dword	(0X4452251C);
	make_array	(0X4452251C,	0X175);
	create_insn	(x=0X44522AF0);
	op_hex		(x,	1);
	create_dword	(0X44522AF4);
	make_array	(0X44522AF4,	0X2A);
	create_insn	(x=0X44522B9C);
	op_hex		(x,	1);
	create_dword	(0X44522BA0);
	make_array	(0X44522BA0,	0X5EB);
	create_byte	(0X4452434C);
	make_array	(0X4452434C,	0X3);
	create_byte	(0X4452434F);
	create_dword	(0X44524350);
	make_array	(0X44524350,	0X4278);
	create_insn	(x=0X44534D30);
	op_hex		(x,	1);
	create_dword	(0X44534D34);
	make_array	(0X44534D34,	0X175);
	create_insn	(x=0X44535308);
	op_hex		(x,	1);
	create_dword	(0X4453530C);
	make_array	(0X4453530C,	0X2A);
	create_insn	(x=0X445353B4);
	op_hex		(x,	1);
	create_dword	(0X445353B8);
	make_array	(0X445353B8,	0X69);
	create_dword	(0X4453555C);
	make_array	(0X4453555C,	0X47FB);
	create_insn	(x=0X44547548);
	op_hex		(x,	1);
	create_dword	(0X4454754C);
	make_array	(0X4454754C,	0X175);
	create_insn	(x=0X44547B20);
	op_hex		(x,	1);
	create_dword	(0X44547B24);
	make_array	(0X44547B24,	0X2A);
	create_insn	(x=0X44547BCC);
	op_hex		(x,	1);
	create_dword	(0X44547BD0);
	make_array	(0X44547BD0,	0X2431);
	create_byte	(0X44550C94);
	make_array	(0X44550C94,	0X2);
	create_dword	(0X44559D64);
	make_array	(0X44559D64,	0X175);
	create_insn	(x=0X4455A338);
	op_hex		(x,	1);
	create_dword	(0X4455A33C);
	make_array	(0X4455A33C,	0X2A);
	create_insn	(x=0X4455A3E4);
	op_hex		(x,	1);
	create_dword	(0X4455A3E8);
	make_array	(0X4455A3E8,	0X24B);
	create_dword	(0X4455AD14);
	make_array	(0X4455AD14,	0X2B4C);
	create_byte	(0X44565A44);
	create_byte	(0X44565A45);
	make_array	(0X44565A45,	0X3);
	create_dword	(0X44565A48);
	make_array	(0X44565A48,	0X1ACC);
	create_insn	(x=0X4456C578);
	op_hex		(x,	1);
	create_dword	(0X4456C57C);
	make_array	(0X4456C57C,	0XF5);
	create_byte	(0X4456C950);
	make_array	(0X4456C950,	0X2);
	create_word	(0X4456C952);
	create_dword	(0X4456C954);
	make_array	(0X4456C954,	0X7F);
	create_insn	(x=0X4456CB50);
	op_hex		(x,	1);
	create_dword	(0X4456CB54);
	make_array	(0X4456CB54,	0X2A);
	create_insn	(x=0X4456CBFC);
	op_hex		(x,	1);
	create_dword	(0X4456CC00);
	make_array	(0X4456CC00,	0X4864);
	create_insn	(x=0X4457ED90);
	op_hex		(x,	1);
	create_dword	(0X4457ED94);
	make_array	(0X4457ED94,	0X175);
	create_insn	(x=0X4457F368);
	op_hex		(x,	1);
	create_dword	(0X4457F36C);
	make_array	(0X4457F36C,	0X2A);
	create_insn	(x=0X4457F414);
	op_hex		(x,	1);
	create_dword	(0X4457F418);
	make_array	(0X4457F418,	0X4864);
	create_insn	(x=0X445915A8);
	op_hex		(x,	1);
	create_dword	(0X445915AC);
	make_array	(0X445915AC,	0X175);
	create_insn	(x=0X44591B80);
	op_hex		(x,	1);
	create_dword	(0X44591B84);
	make_array	(0X44591B84,	0X2A);
	create_insn	(x=0X44591C2C);
	op_hex		(x,	1);
	create_dword	(0X44591C30);
	make_array	(0X44591C30,	0XA8A);
	create_byte	(0X44594658);
	create_byte	(0X44594659);
	make_array	(0X44594659,	0X3);
	create_dword	(0X4459465C);
	make_array	(0X4459465C,	0X3DD9);
	create_insn	(x=0X445A3DC0);
	op_hex		(x,	1);
	create_dword	(0X445A3DC4);
	make_array	(0X445A3DC4,	0X175);
	create_insn	(x=0X445A4398);
	op_hex		(x,	1);
	create_dword	(0X445A439C);
	make_array	(0X445A439C,	0X2A);
	create_insn	(x=0X445A4444);
	op_hex		(x,	1);
	create_dword	(0X445A4448);
	make_array	(0X445A4448,	0X4181);
	create_byte	(0X445B4A4C);
	make_array	(0X445B4A4C,	0X2);
	create_word	(0X445B4A4E);
	create_dword	(0X445B4A50);
	make_array	(0X445B4A50,	0X6E2);
	create_insn	(x=0X445B65D8);
	op_hex		(x,	1);
	create_dword	(0X445B65DC);
	make_array	(0X445B65DC,	0X175);
	create_insn	(x=0X445B6BB0);
	op_hex		(x,	1);
	create_dword	(0X445B6BB4);
	make_array	(0X445B6BB4,	0X2A);
	create_insn	(x=0X445B6C5C);
	op_hex		(x,	1);
	create_dword	(0X445B6C60);
	make_array	(0X445B6C60,	0X4864);
	create_insn	(x=0X445C8DF0);
	op_hex		(x,	1);
	create_dword	(0X445C8DF4);
	make_array	(0X445C8DF4,	0X175);
	create_insn	(x=0X445C93C8);
	op_hex		(x,	1);
	create_dword	(0X445C93CC);
	make_array	(0X445C93CC,	0X2A);
	create_insn	(x=0X445C9474);
	op_hex		(x,	1);
	create_dword	(0X445C9478);
	make_array	(0X445C9478,	0X4864);
	create_insn	(x=0X445DB608);
	op_hex		(x,	1);
	create_dword	(0X445DB60C);
	make_array	(0X445DB60C,	0X175);
	create_insn	(x=0X445DBBE0);
	op_hex		(x,	1);
	create_dword	(0X445DBBE4);
	make_array	(0X445DBBE4,	0X2A);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_18(void) {
        auto x;
#define id x

	create_insn	(x=0X445DBC8C);
	op_hex		(x,	1);
	create_dword	(0X445DBC90);
	make_array	(0X445DBC90,	0X4864);
	create_insn	(x=0X445EDE20);
	op_hex		(x,	1);
	create_dword	(0X445EDE24);
	make_array	(0X445EDE24,	0X175);
	create_insn	(x=0X445EE3F8);
	op_hex		(x,	1);
	create_dword	(0X445EE3FC);
	make_array	(0X445EE3FC,	0X2A);
	create_insn	(x=0X445EE4A4);
	op_hex		(x,	1);
	create_dword	(0X445EE4A8);
	make_array	(0X445EE4A8,	0X4864);
	create_insn	(x=0X44600638);
	op_hex		(x,	1);
	create_dword	(0X4460063C);
	make_array	(0X4460063C,	0X175);
	create_insn	(x=0X44600C10);
	op_hex		(x,	1);
	create_dword	(0X44600C14);
	make_array	(0X44600C14,	0X2A);
	create_insn	(x=0X44600CBC);
	op_hex		(x,	1);
	create_dword	(0X44600CC0);
	make_array	(0X44600CC0,	0X4864);
	create_insn	(x=0X44612E50);
	op_hex		(x,	1);
	create_dword	(0X44612E54);
	make_array	(0X44612E54,	0X175);
	create_insn	(x=0X44613428);
	op_hex		(x,	1);
	create_dword	(0X4461342C);
	make_array	(0X4461342C,	0X2A);
	create_insn	(x=0X446134D4);
	op_hex		(x,	1);
	create_dword	(0X446134D8);
	make_array	(0X446134D8,	0X4864);
	create_insn	(x=0X44625668);
	op_hex		(x,	1);
	create_dword	(0X4462566C);
	make_array	(0X4462566C,	0X175);
	create_insn	(x=0X44625C40);
	op_hex		(x,	1);
	create_dword	(0X44625C44);
	make_array	(0X44625C44,	0X2A);
	create_insn	(x=0X44625CEC);
	op_hex		(x,	1);
	create_dword	(0X44625CF0);
	make_array	(0X44625CF0,	0X4864);
	create_insn	(x=0X44637E80);
	op_hex		(x,	1);
	create_dword	(0X44637E84);
	make_array	(0X44637E84,	0X175);
	create_insn	(x=0X44638458);
	op_hex		(x,	1);
	create_dword	(0X4463845C);
	make_array	(0X4463845C,	0X2A);
	create_insn	(x=0X44638504);
	op_hex		(x,	1);
	create_dword	(0X44638508);
	make_array	(0X44638508,	0X223A);
	create_byte	(0X44640DF0);
	make_array	(0X44640DF0,	0X2);
	create_word	(0X44640DF2);
	create_dword	(0X44640DF4);
	make_array	(0X44640DF4,	0X2629);
	create_insn	(x=0X4464A698);
	op_hex		(x,	1);
	create_dword	(0X4464A69C);
	make_array	(0X4464A69C,	0X175);
	create_insn	(x=0X4464AC70);
	op_hex		(x,	1);
	create_dword	(0X4464AC74);
	make_array	(0X4464AC74,	0X2A);
	create_insn	(x=0X4464AD1C);
	op_hex		(x,	1);
	create_dword	(0X4464AD20);
	make_array	(0X4464AD20,	0X4864);
	create_insn	(x=0X4465CEB0);
	op_hex		(x,	1);
	create_dword	(0X4465CEB4);
	make_array	(0X4465CEB4,	0X175);
	create_insn	(x=0X4465D488);
	op_hex		(x,	1);
	create_dword	(0X4465D48C);
	make_array	(0X4465D48C,	0X2A);
	create_insn	(x=0X4465D534);
	op_hex		(x,	1);
	create_dword	(0X4465D538);
	make_array	(0X4465D538,	0X4864);
	create_insn	(x=0X4466F6C8);
	op_hex		(x,	1);
	create_dword	(0X4466F6CC);
	make_array	(0X4466F6CC,	0X175);
	create_insn	(x=0X4466FCA0);
	op_hex		(x,	1);
	create_dword	(0X4466FCA4);
	make_array	(0X4466FCA4,	0X2A);
	create_insn	(x=0X4466FD4C);
	op_hex		(x,	1);
	create_dword	(0X4466FD50);
	make_array	(0X4466FD50,	0X4864);
	create_insn	(x=0X44681EE0);
	op_hex		(x,	1);
	create_dword	(0X44681EE4);
	make_array	(0X44681EE4,	0X175);
	create_insn	(x=0X446824B8);
	op_hex		(x,	1);
	create_dword	(0X446824BC);
	make_array	(0X446824BC,	0X2A);
	create_insn	(x=0X44682564);
	op_hex		(x,	1);
	create_dword	(0X44682568);
	make_array	(0X44682568,	0X4864);
	create_insn	(x=0X446946F8);
	op_hex		(x,	1);
	create_dword	(0X446946FC);
	make_array	(0X446946FC,	0X175);
	create_insn	(x=0X44694CD0);
	op_hex		(x,	1);
	create_dword	(0X44694CD4);
	make_array	(0X44694CD4,	0X2A);
	create_insn	(x=0X44694D7C);
	op_hex		(x,	1);
	create_dword	(0X44694D80);
	make_array	(0X44694D80,	0X4864);
	create_insn	(x=0X446A6F10);
	op_hex		(x,	1);
	create_dword	(0X446A6F14);
	make_array	(0X446A6F14,	0X175);
	create_insn	(x=0X446A74E8);
	op_hex		(x,	1);
	create_dword	(0X446A74EC);
	make_array	(0X446A74EC,	0X2A);
	create_insn	(x=0X446A7594);
	op_hex		(x,	1);
	create_dword	(0X446A7598);
	make_array	(0X446A7598,	0X4864);
	create_insn	(x=0X446B9728);
	op_hex		(x,	1);
	create_dword	(0X446B972C);
	make_array	(0X446B972C,	0X175);
	create_insn	(x=0X446B9D00);
	op_hex		(x,	1);
	create_dword	(0X446B9D04);
	make_array	(0X446B9D04,	0X2A);
	create_insn	(x=0X446B9DAC);
	op_hex		(x,	1);
	create_dword	(0X446B9DB0);
	make_array	(0X446B9DB0,	0X4864);
	create_insn	(x=0X446CBF40);
	op_hex		(x,	1);
	create_dword	(0X446CBF44);
	make_array	(0X446CBF44,	0X175);
	create_insn	(x=0X446CC518);
	op_hex		(x,	1);
	create_dword	(0X446CC51C);
	make_array	(0X446CC51C,	0X2A);
	create_insn	(x=0X446CC5C4);
	op_hex		(x,	1);
	create_dword	(0X446CC5C8);
	make_array	(0X446CC5C8,	0X4864);
	create_insn	(x=0X446DE758);
	op_hex		(x,	1);
	create_dword	(0X446DE75C);
	make_array	(0X446DE75C,	0X175);
	create_insn	(x=0X446DED30);
	op_hex		(x,	1);
	create_dword	(0X446DED34);
	make_array	(0X446DED34,	0X2A);
	create_insn	(x=0X446DEDDC);
	op_hex		(x,	1);
	create_dword	(0X446DEDE0);
	make_array	(0X446DEDE0,	0X4864);
	create_insn	(x=0X446F0F70);
	op_hex		(x,	1);
	create_dword	(0X446F0F74);
	make_array	(0X446F0F74,	0X175);
	create_insn	(x=0X446F1548);
	op_hex		(x,	1);
	create_dword	(0X446F154C);
	make_array	(0X446F154C,	0X2A);
	create_insn	(x=0X446F15F4);
	op_hex		(x,	1);
	create_dword	(0X446F15F8);
	make_array	(0X446F15F8,	0X4864);
	create_insn	(x=0X44703788);
	op_hex		(x,	1);
	create_dword	(0X4470378C);
	make_array	(0X4470378C,	0X175);
	create_insn	(x=0X44703D60);
	op_hex		(x,	1);
	create_dword	(0X44703D64);
	make_array	(0X44703D64,	0X2A);
	create_insn	(x=0X44703E0C);
	op_hex		(x,	1);
	create_dword	(0X44703E10);
	make_array	(0X44703E10,	0X485C);
	create_byte	(0X44715F80);
	set_name	(0X44715F80,	"C_SDK::Globals::WndProc::Key::Map");
	create_byte	(0X44715F81);
	set_name	(0X44715F81,	"C_SDK::Globals::WndProc::Mouse::IsLeftPressed");
	create_byte	(0X44715F82);
	set_name	(0X44715F82,	"C_SDK::Globals::WndProc::Mouse::IsRightPressed");
	create_byte	(0X44715F84);
	set_name	(0X44715F84,	"C_SDK::Globals::WndProc::Mouse::IsMiddlePressed");
	create_byte	(0X44715F85);
	make_array	(0X44715F86,	0X2);
	create_dword	(0X44715F88);
	make_array	(0X44715F88,	0X2);
	create_byte	(0X44715F90);
	make_array	(0X44715F90,	0X2);
	create_byte	(0X44715F92);
	set_name	(0X44715F92,	"C_SDK::Globals::WndProc::Key::IsMenuPressed");
	create_dword	(0X44715F94);
	make_array	(0X44715F94,	0X25);
	create_qword	(0X44716028);
	create_dword	(0X44716030);
	set_name	(0X44716030,	"C_SDK::Globals::WndProc::Mouse::Last");
	create_byte	(0X44716034);
	set_name	(0X44716034,	"C_SDK::Globals::WndProc::Key::LastBufferOperation");
	make_array	(0X44716035,	0X3);
	create_byte	(0X44716038);
	make_array	(0X44716039,	0X3);
	create_dword	(0X4471603C);
	create_dword	(0X44716040);
	create_dword	(0X44716044);
	create_dword	(0X44716048);
	create_dword	(0X4471604C);
	create_dword	(0X44716050);
	create_dword	(0X44716054);
	make_array	(0X44716059,	0X3);
	create_byte	(0X4471605D);
	make_array	(0X4471605D,	0X3);
	make_array	(0X44716060,	0X20);
	create_dword	(0X44716080);
	make_array	(0X44716080,	0X2);
	create_dword	(0X44716088);
	make_array	(0X44716088,	0XA);
	create_dword	(x=0X447160B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X447160B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447160B8);
	set_name	(0X447160B8,	"OneTap::Globals::Engine::IsInitialized");
	create_word	(0X447160BC);
	make_array	(0X447160BE,	0X2);
	create_dword	(0X447160C0);
	create_dword	(0X447160C4);
	create_dword	(0X447160C8);
	create_oword	(0X447160CC);
	set_name	(0X447160CC,	"OneTap::Globals::PlayerName");
	create_oword	(0X447160DC);
	create_byte	(0X447160EC);
	create_dword	(0X447160ED);
	set_name	(0X447160ED,	"OneTap::Globals::GUI::IsMenuShowing");
	create_dword	(0X447160F1);
	make_array	(0X447160F5,	0X3);
	create_dword	(0X447160F8);
	create_dword	(0X447160FC);
	create_dword	(0X44716100);
	create_dword	(0X44716104);
	create_dword	(0X44716108);
	create_word	(0X4471610C);
	make_array	(0X4471610E,	0X2);
	create_dword	(0X44716110);
	create_byte	(0X44716114);
	make_array	(0X44716115,	0X3);
	create_dword	(0X44716118);
	create_byte	(0X4471611C);
	make_array	(0X4471611D,	0X3);
	create_dword	(0X44716120);
	set_name	(0X44716120,	"OneTap::Globals::Tickrate");
	create_dword	(0X44716124);
	set_name	(0X44716124,	"OneTap::Globals::Tickcount");
	create_dword	(0X44716128);
	make_array	(0X4471612C,	0X4);
	create_qword	(0X44716130);
	create_dword	(x=0X44716138);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X44716138,	"C_SDK::Globals::SumFrametime");
	create_dword	(0X4471613C);
	create_dword	(0X44716140);
	create_dword	(0X44716144);
	create_byte	(0X44716148);
	make_array	(0X44716149,	0X3);
	create_dword	(0X4471614C);
	create_dword	(0X44716150);
	create_dword	(x=0X44716154);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44716158);
	create_dword	(0X4471615C);
	create_dword	(0X44716160);
	create_dword	(0X44716164);
	create_dword	(0X44716168);
	create_dword	(0X4471616C);
	create_dword	(0X44716170);
	create_dword	(x=0X44716174);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44716178);
	create_dword	(0X4471617C);
	create_dword	(0X44716180);
	create_dword	(0X44716184);
	create_dword	(0X44716188);
	create_dword	(0X4471618C);
	create_dword	(0X44716190);
	create_dword	(0X44716194);
	create_word	(0X44716198);
	make_array	(0X4471619A,	0X2);
	create_dword	(0X4471619C);
	create_dword	(0X447161A0);
	set_name	(0X447161A0,	"OneTap::Globals::CUserCmd");
	create_dword	(0X447161A4);
	create_dword	(0X447161A8);
	set_name	(0X447161A8,	"OneTap::Globals::FakeDuck::IsChoked");
	create_dword	(0X447161AC);
	create_dword	(0X447161B0);
	set_name	(0X447161B0,	"OneTap::Globals::FakeDuck::NextChoke");
	create_dword	(0X447161B4);
	create_byte	(0X447161B8);
	make_array	(0X447161B9,	0X3);
	MakeStruct	(0X447161BC,	"OneTap::Classes::CommandManager");
	set_name	(0X447161BC,	"OneTap::Globals::CommandManager");
	create_dword	(0X44717498);
	set_name	(0X44717498,	"object");
	create_dword	(0X4471749C);
	create_dword	(0X447174A0);
	create_dword	(0X447174A4);
	create_dword	(0X447174A8);
	create_dword	(0X447174AC);
	create_dword	(0X447174B0);
	create_dword	(0X447174B4);
	create_dword	(0X447174B8);
	create_dword	(0X447174BC);
	create_dword	(0X447174C0);
	create_dword	(0X447174C4);
	create_dword	(0X447174C8);
	create_byte	(0X447174CC);
	create_word	(0X447174CD);
	create_dword	(0X447174D0);
	create_dword	(0X447174D4);
	create_byte	(0X44717540);
	create_oword	(0X44717544);
	create_dword	(0X44717554);
	create_dword	(0X44717558);
	create_dword	(0X4471755C);
	create_dword	(0X44717560);
	create_dword	(0X44717564);
	create_dword	(0X44717568);
	create_dword	(0X4471756C);
	create_dword	(0X44717570);
	create_dword	(0X44717574);
	create_dword	(0X44717578);
	create_oword	(0X4471757C);
	create_qword	(0X4471758C);
	create_oword	(0X44717594);
	create_oword	(0X447175A4);
	create_dword	(0X447175C0);
	create_dword	(0X447175C4);
	create_dword	(0X447175C8);
	create_dword	(0X447175CC);
	create_dword	(0X447175D0);
	create_byte	(0X447175D4);
	create_word	(0X447175D5);
	create_byte	(0X447175D7);
	create_dword	(0X447175D8);
	create_dword	(0X447175DC);
	create_dword	(0X447175E0);
	create_dword	(0X447175E4);
	create_dword	(0X447175E8);
	create_dword	(x=0X447175EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X447175F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X447175F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X447175F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447175FC);
	create_dword	(x=0X44717600);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X44717604);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44717608);
	create_dword	(0X4471760C);
	create_dword	(0X44717610);
	create_dword	(x=0X44717614);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X44717618);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4471761C);
	create_dword	(0X44717620);
	create_dword	(0X44717624);
	create_dword	(x=0X44717628);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X4471762C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44717630);
	create_dword	(0X44717634);
	create_dword	(0X44717638);
	create_dword	(x=0X4471763C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44717640);
	create_dword	(0X44717644);
	create_dword	(x=0X44717648);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4471764C);
	create_dword	(0X44717650);
	create_dword	(0X44717654);
	create_dword	(0X44717658);
	create_dword	(0X4471765C);
	create_dword	(0X44717660);
	create_dword	(0X44717664);
	create_dword	(x=0X44717668);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(0X4471766C);
	create_dword	(0X44717674);
	create_dword	(0X44717678);
	create_dword	(0X4471767C);
	create_dword	(x=0X44717680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44717684);
	create_dword	(0X44717688);
	create_dword	(0X4471768C);
	create_dword	(0X44717690);
	create_dword	(0X44717694);
	create_dword	(0X44717698);
	create_dword	(x=0X4471769C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447176A0);
	create_dword	(0X447176A4);
	create_dword	(x=0X447176A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447176AC);
	create_dword	(0X447176B0);
	create_dword	(0X447176B4);
	create_dword	(0X447176B8);
	create_dword	(0X447176BC);
	create_dword	(x=0X447176C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447176C4);
	create_dword	(0X447176C8);
	create_dword	(x=0X447176CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447176D0);
	create_dword	(0X447176D4);
	create_dword	(0X447176D8);
	create_dword	(x=0X447176DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447176E0);
	create_dword	(0X447176E4);
	create_dword	(0X447176E8);
	create_dword	(0X447176EC);
	create_dword	(0X447176F0);
	create_dword	(0X447176F4);
	create_dword	(x=0X447176F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447176FC);
	create_dword	(0X44717700);
	create_dword	(0X44717704);
	create_dword	(0X44717708);
	create_dword	(0X4471770C);
	create_dword	(0X44717710);
	create_dword	(0X44717714);
	create_dword	(0X44717718);
	create_dword	(0X4471771C);
	create_dword	(0X44717720);
	create_dword	(0X44717724);
	create_dword	(0X44717728);
	create_dword	(0X4471772C);
	create_dword	(0X44717730);
	create_dword	(0X44717734);
	create_dword	(0X44717738);
	create_dword	(0X4471773C);
	create_dword	(0X44717740);
	create_dword	(0X44717744);
	create_dword	(0X44717748);
	create_dword	(0X4471774C);
	create_dword	(x=0X44717750);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44717754);
	create_dword	(0X44717758);
	create_dword	(0X4471775C);
	create_dword	(0X44717760);
	create_dword	(0X44717764);
	create_dword	(0X44717768);
	create_dword	(0X4471776C);
	create_dword	(0X44717770);
	create_dword	(0X44717774);
	create_dword	(0X44717778);
	create_dword	(0X4471777C);
	create_dword	(0X44717780);
	create_dword	(0X44717784);
	create_dword	(0X44717788);
	create_dword	(0X4471778C);
	create_dword	(0X44717790);
	create_dword	(0X44717794);
	create_dword	(0X44717798);
	create_dword	(0X4471779C);
	create_dword	(0X447177A0);
	create_dword	(0X447177A4);
	create_dword	(x=0X447177A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447177AC);
	create_dword	(0X447177B0);
	create_dword	(0X447177B4);
	create_dword	(0X447177B8);
	create_dword	(0X447177BC);
	create_dword	(0X447177C0);
	create_dword	(0X447177C4);
	create_dword	(0X447177C8);
	create_dword	(0X447177CC);
	create_dword	(0X447177D0);
	create_dword	(0X447177D4);
	create_dword	(0X447177D8);
	create_dword	(0X447177DC);
	create_dword	(0X447177E0);
	create_dword	(0X447177E4);
	create_dword	(0X447177E8);
	create_dword	(0X447177EC);
	create_dword	(0X447177F0);
	create_dword	(0X447177F4);
	create_dword	(0X447177F8);
	create_dword	(0X447177FC);
	create_dword	(x=0X44717800);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44717804);
	create_dword	(0X44717808);
	create_dword	(0X4471780C);
	create_dword	(0X44717810);
	create_dword	(0X44717814);
	create_dword	(0X44717818);
	create_dword	(0X4471781C);
	create_dword	(0X44717820);
	create_dword	(0X44717824);
	create_dword	(0X44717828);
	create_dword	(0X4471782C);
	create_dword	(0X44717830);
	create_dword	(0X44717834);
	create_dword	(0X44717838);
	create_dword	(0X4471783C);
	create_dword	(0X44717840);
	create_dword	(0X44717844);
	create_dword	(0X44717848);
	create_dword	(0X4471784C);
	create_dword	(0X44717850);
	create_dword	(0X44717854);
	create_dword	(x=0X44717858);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4471785C);
	create_dword	(0X44717860);
	create_dword	(0X44717864);
	create_dword	(0X44717868);
	create_dword	(0X4471786C);
	create_dword	(0X44717870);
	create_dword	(0X44717874);
	create_dword	(0X44717878);
	create_dword	(0X4471787C);
	create_dword	(0X44717880);
	create_dword	(0X44717884);
	create_dword	(0X44717888);
	create_dword	(0X4471788C);
	create_dword	(0X44717890);
	create_dword	(0X44717894);
	create_dword	(0X44717898);
	create_dword	(0X4471789C);
	create_dword	(0X447178A0);
	create_dword	(0X447178A4);
	create_dword	(0X447178A8);
	create_dword	(0X447178AC);
	create_dword	(x=0X447178B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447178B4);
	create_dword	(0X447178B8);
	make_array	(0X447178B8,	0X32);
	create_qword	(0X44717980);
	create_byte	(0X44717998);
	make_array	(0X44717998,	0X1C);
	create_dword	(0X447179B4);
	make_array	(0X447179B4,	0X16);
	create_byte	(0X44717A0C);
	make_array	(0X44717A0C,	0X1C);
	create_dword	(0X44717A28);
	create_dword	(0X44717B34);
	make_array	(0X44717B34,	0X16);
	create_byte	(0X44717B8C);
	make_array	(0X44717B8C,	0X1C);
	create_dword	(0X44717BA8);
	make_array	(0X44717BA8,	0X16);
	create_byte	(0X44717C00);
	make_array	(0X44717C00,	0X1C);
	create_dword	(0X44717C1C);
	make_array	(0X44717C1C,	0X16);
	create_dword	(0X44717C74);
	make_array	(0X44717C74,	0X16);
	create_byte	(0X44717CCC);
	make_array	(0X44717CCC,	0X1C);
	create_dword	(0X44717CE8);
	make_array	(0X44717CE8,	0X16);
	create_dword	(0X44717D40);
	make_array	(0X44717D40,	0X16);
	create_byte	(0X44717D98);
	make_array	(0X44717D98,	0X1C);
	create_byte	(0X44717E0C);
	set_name	(0X44717E0C,	"OneTap::Configuration::Ragebot::IsEnabled");
	create_byte	(0X44717E18);
	create_dword	(0X44717E30);
	create_dword	(0X44717E34);
	make_array	(0X44717E34,	0X5);
	create_byte	(0X44717E48);
	create_dword	(0X44717E58);
	create_byte	(0X44717E74);
	make_array	(0X44717E74,	0X1C);
	create_dword	(0X44717E90);
	create_byte	(0X44717EE8);
	make_array	(0X44717EE8,	0X1C);
	create_byte	(0X44717F04);
	make_array	(0X44717F04,	0X1C);
	create_byte	(0X44717F20);
	make_array	(0X44717F20,	0X38);
	create_byte	(0X44717F58);
	make_array	(0X44717F58,	0X1C);
	create_byte	(0X44717F74);
	make_array	(0X44717F74,	0X1C);
	create_byte	(0X44718040);
	make_array	(0X44718040,	0X1C);
	create_dword	(0X4471805C);
	make_array	(0X4471805C,	0X16);
	create_byte	(0X447180B4);
	make_array	(0X447180B4,	0X1C);
	create_dword	(0X447180D0);
	create_byte	(0X44718128);
	make_array	(0X44718128,	0X1C);
	create_dword	(0X44718144);
	make_array	(0X44718144,	0X16);
	create_byte	(0X4471819C);
	make_array	(0X4471819C,	0X1C);
	create_dword	(0X447181B8);
	make_array	(0X447181B8,	0X1D);
	create_dword	(0X4471822C);
	make_array	(0X4471822C,	0X16);
	create_dword	(0X44718284);
	make_array	(0X44718284,	0X16);
	create_dword	(0X447182DC);
	make_array	(0X447182DC,	0X16);
	create_byte	(0X44718334);
	make_array	(0X44718334,	0X1C);
	create_byte	(0X44718350);
	make_array	(0X44718350,	0X20);
	create_dword	(0X44718370);
	create_dword	(0X44718374);
	make_array	(0X44718374,	0X2A);
	create_dword	(0X44718420);
	create_dword	(0X44718424);
	make_array	(0X44718424,	0X2A);
	create_dword	(0X447184D0);
	make_array	(0X447184D0,	0X2A);
	create_dword	(0X4471857C);
	make_array	(0X4471857C,	0X16);
	create_dword	(0X447185D4);
	create_dword	(0X447185D8);
	create_byte	(0X447185EC);
	make_array	(0X447185EC,	0X1C);
	create_dword	(0X44718608);
	make_array	(0X44718608,	0X16);
	create_byte	(0X44718660);
	create_dword	(0X4471866C);
	create_byte	(0X4471867C);
	create_dword	(0X44718688);
	create_dword	(0X4471868C);
	make_array	(0X4471868C,	0X5);
	create_byte	(0X447186A0);
	create_dword	(0X447186AC);
	create_dword	(0X447186B0);
	make_array	(0X447186B0,	0X5);
	create_dword	(0X447186C4);
	create_dword	(0X447186C8);
	make_array	(0X447186C8,	0X5);
	create_byte	(0X447186DC);
	create_byte	(0X447186E8);
	create_dword	(0X447186F4);
	create_byte	(0X44718734);
	create_dword	(0X44718740);
	create_dword	(0X44718744);
	make_array	(0X44718744,	0X5);
	create_dword	(0X44718758);
	create_dword	(0X4471875C);
	make_array	(0X4471875C,	0X5);
	create_byte	(0X44718770);
	create_dword	(0X4471877C);
	create_dword	(0X44718780);
	make_array	(0X44718780,	0X5);
	create_dword	(0X44718794);
	create_dword	(0X44718798);
	make_array	(0X44718798,	0X5);
	create_dword	(0X447187AC);
	create_dword	(0X447187B0);
	make_array	(0X447187B0,	0X5);
	create_dword	(0X447187C4);
	create_dword	(0X447187C8);
	make_array	(0X447187C8,	0X5);
	create_float	(0X447187DC);
	make_array	(0X447187DC,	0X4);
	create_byte	(0X447187EC);
	create_dword	(0X447187F8);
	create_byte	(0X44718808);
	create_dword	(0X44718814);
	create_dword	(0X44718824);
	create_dword	(0X44718838);
	create_dword	(0X44718858);
	create_dword	(0X44718880);
	set_name	(0X44718880,	"OneTap::Features::AntiAim::Pitch::Mode");
	create_byte	(0X44718890);
	create_dword	(0X4471889C);
	create_dword	(0X447188AC);
	create_dword	(0X447188BC);
	create_dword	(0X447188CC);
	create_byte	(0X447188DC);
	create_dword	(0X447188E8);
	create_dword	(0X447188F8);
	create_dword	(0X44718908);
	create_dword	(0X44718918);
	create_byte	(0X44718928);
	create_dword	(0X44718934);
	create_dword	(0X44718944);
	create_dword	(0X44718954);
	create_dword	(0X44718964);
	create_byte	(0X44718974);
	create_dword	(0X44718980);
	create_dword	(0X44718990);
	create_dword	(0X447189A0);
	create_dword	(0X447189B0);
	create_byte	(0X447189C0);
	create_dword	(0X447189CC);
	create_dword	(0X447189DC);
	create_dword	(0X447189EC);
	create_dword	(0X447189FC);
	create_byte	(0X44718A0C);
	create_dword	(0X44718A18);
	create_dword	(0X44718A28);
	create_dword	(0X44718A38);
	create_dword	(0X44718A48);
	create_byte	(0X44718A58);
	create_dword	(0X44718A64);
	create_dword	(0X44718A68);
	create_dword	(0X44718A7C);
	set_name	(0X44718A7C,	"OneTap::Configuration::Ragebot::Fakeduck::BindKey");
	create_dword	(0X44718A80);
	set_name	(0X44718A80,	"OneTap::Configuration::Ragebot::Fakeduck::Type");
	create_dword	(0X44718A84);
	create_dword	(0X44718A88);
	create_byte	(0X44718A8C);
	create_dword	(0X44718A94);
	create_dword	(0X44718A98);
	make_array	(0X44718A98,	0X5);
	create_byte	(0X44718AAC);
	create_dword	(0X44718AB8);
	create_byte	(0X44718AC8);
	create_dword	(0X44718AD4);
	create_byte	(0X44718AE4);
	create_byte	(0X44718AF0);
	create_dword	(0X44718AFC);
	create_dword	(0X44718B00);
	make_array	(0X44718B00,	0X5);
	create_byte	(0X44718B14);
	create_byte	(0X44718B20);
	create_byte	(0X44718B2C);
	create_dword	(0X44718B38);
	create_dword	(0X44718B48);
	create_dword	(0X44718B58);
	create_dword	(0X44718B68);
	create_byte	(0X44718B78);
	create_dword	(0X44718B84);
	create_byte	(0X44718B94);
	create_dword	(0X44718BA0);
	create_byte	(0X44718BB0);
	create_byte	(0X44718BBC);
	create_dword	(0X44718BC8);
	create_byte	(0X44718BD8);
	create_dword	(0X44718BE4);
	create_byte	(0X44718BF4);
	create_byte	(0X44718C00);
	create_byte	(0X44718C0C);
	create_byte	(0X44718C18);
	make_array	(0X44718C18,	0X10);
	create_byte	(0X44718C28);
	set_name	(0X44718C28,	"OneTap::Configuration::Visuals::Bomb::IsTextPresent");
	create_byte	(0X44718C34);
	set_name	(0X44718C34,	"OneTap::Configuration::Visuals::Bomb::IsDropIcon");
	create_byte	(0X44718C40);
	create_byte	(0X44718C4C);
	create_byte	(0X44718C58);
	make_array	(0X44718C58,	0X10);
	create_byte	(0X44718C68);
	create_byte	(0X44718C74);
	create_dword	(0X44718C80);
	create_byte	(0X44718C90);
	create_dword	(0X44718C9C);
	make_array	(0X44718C9C,	0X4);
	create_dword	(0X44718CAC);
	make_array	(0X44718CAC,	0X5);
	create_dword	(0X44718CC0);
	create_byte	(0X44718CDC);
	create_byte	(0X44718CE8);
	create_byte	(0X44718CF4);
	create_byte	(0X44718D00);
	create_byte	(0X44718D0C);
	create_dword	(0X44718D24);
	create_byte	(0X44718D34);
	create_byte	(0X44718D40);
	create_dword	(0X44718D4C);
	create_byte	(0X44718D5C);
	create_byte	(0X44718D68);
	create_dword	(0X44718D74);
	create_dword	(0X44718D84);
	create_dword	(0X44718D88);
	create_byte	(0X44718D9C);
	create_byte	(0X44718DA8);
	create_dword	(0X44718DB4);
	create_dword	(0X44718DC4);
	make_array	(0X44718DC4,	0X4);
	set_name	(0X44718DC4,	"skyboxId");
	create_strlit	(0X44718DD4,	0X9);
	set_name	(0X44718DD4,	"aRetrosun");
	create_qword	(0X44718EE0);
	create_dword	(0X44718EFC);
	create_dword	(0X44718F00);
	create_dword	(0X44718F14);
	create_byte	(0X44718F24);
	create_byte	(0X44718F30);
	create_byte	(0X44718F3C);
	create_byte	(0X44718F48);
	create_byte	(0X44718F54);
	create_byte	(0X44718F60);
	create_byte	(0X44718F6C);
	create_byte	(0X44718F78);
	create_dword	(0X44718F84);
	create_byte	(0X44718FAC);
	create_dword	(0X44718FD8);
	create_byte	(0X44718FE8);
	create_byte	(0X44718FF4);
	create_byte	(0X44719000);
	create_byte	(0X4471900C);
	create_byte	(0X44719018);
	create_byte	(0X44719024);
	create_byte	(0X44719030);
	create_byte	(0X4471903C);
	create_byte	(0X44719048);
	create_byte	(0X44719064);
	make_array	(0X44719064,	0X10);
	create_word	(0X44719074);
	create_byte	(0X44719076);
	create_byte	(0X44719084);
	create_byte	(0X44719090);
	create_byte	(0X4471909C);
	create_dword	(0X447190A8);
	create_dword	(0X447190B8);
	create_dword	(0X447190C8);
	create_byte	(0X447190D8);
	create_byte	(0X447190E4);
	create_dword	(0X447190F0);
	create_dword	(0X44719100);
	create_byte	(0X44719110);
	create_byte	(0X4471911C);
	create_byte	(0X44719128);
	create_byte	(0X44719134);
	create_dword	(0X44719140);
	create_byte	(0X44719150);
	create_dword	(0X4471915C);
	create_dword	(0X4471916C);
	create_byte	(0X4471917C);
	create_byte	(0X4471917D);
	create_byte	(0X4471917E);
	create_byte	(0X4471917F);
	create_word	(0X447191AC);
	create_byte	(0X447191AE);
	create_word	(0X447191BC);
	create_byte	(0X447191BE);
	create_byte	(0X447191CC);
	create_byte	(0X447191D8);
	create_byte	(0X447191E4);
	create_dword	(0X447191F0);
	create_dword	(0X44719200);
	create_word	(0X44719210);
	create_byte	(0X44719212);
	create_byte	(0X44719220);
	create_byte	(0X4471922C);
	create_byte	(0X44719238);
	create_byte	(0X44719244);
	create_byte	(0X44719250);
	create_byte	(0X4471925C);
	create_dword	(0X44719270);
	create_dword	(0X44719274);
	create_dword	(0X44719290);
	create_dword	(0X44719294);
	create_dword	(0X447192B0);
	create_dword	(0X447192B4);
	create_byte	(0X447192CC);
	create_byte	(0X447192D8);
	create_byte	(0X447192E4);
	create_byte	(0X447192F0);
	create_byte	(0X447192FC);
	create_byte	(0X44719308);
	create_dword	(0X44719338);
	create_dword	(0X4471933C);
	create_dword	(0X44719358);
	create_dword	(0X4471935C);
	create_dword	(0X44719378);
	create_dword	(0X4471937C);
	create_byte	(0X44719394);
	create_byte	(0X447193A0);
	create_dword	(0X447193AC);
	make_array	(0X447193AC,	0X4);
	create_byte	(0X447193BC);
	create_dword	(x=0X447193C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0X447193C8);
	create_dword	(0X447193CC);
	create_byte	(0X447193F8);
	create_dword	(0X447193FC);
	create_dword	(x=0X44719424);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4471942C);
	create_dword	(x=0X44719454);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0X44719458);
	create_dword	(0X4471945C);
	create_byte	(0X44719488);
	create_dword	(0X4471948C);
	create_dword	(x=0X447194B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447194BC);
	create_oword	(0X447194E8);
	create_dword	(0X447194F8);
	create_dword	(x=0X44719514);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4471951C);
	create_dword	(x=0X44719544);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4471954C);
	create_oword	(0X44719578);
	create_dword	(0X44719588);
	create_oword	(0X447195A8);
	create_dword	(0X447195B8);
	create_oword	(0X447195D8);
	create_dword	(0X447195E8);
	create_oword	(0X44719608);
	create_dword	(0X44719618);
	create_dword	(0X44719638);
	create_byte	(0X44719648);
	create_byte	(0X44719654);
	create_dword	(0X44719660);
	create_dword	(0X44719670);
	create_dword	(0X44719680);
	create_byte	(0X44719690);
	create_byte	(0X4471969C);
	create_byte	(0X447196A8);
	create_byte	(0X447196B4);
	create_byte	(0X447196C0);
	create_dword	(0X447196CC);
	create_dword	(0X447196D0);
	make_array	(0X447196D0,	0X5);
	create_byte	(0X447196E4);
	create_qword	(0X447196F0);
	create_byte	(0X44719708);
	create_qword	(0X44719714);
	create_byte	(0X4471972C);
	create_byte	(0X44719738);
	create_byte	(0X44719744);
	set_name	(0X44719744,	"OneTap::Configuration::Misc::AutoStrafe::IsEnabled");
	create_dword	(0X44719750);
	set_name	(0X44719750,	"OneTap::Configuration::Misc::AutoStrafe::Mode");
	create_dword	(0X44719760);
	create_dword	(0X44719770);
	create_dword	(0X44719780);
	create_byte	(0X447197A8);
	create_dword	(0X447197B4);
	create_dword	(0X447197B8);
	make_array	(0X447197B8,	0X5);
	create_dword	(0X447197CC);
	create_byte	(0X447197DC);
	set_name	(0X447197DC,	"OneTap::Configuration::Misc::ClanTag::IsEnabled");
	create_dword	(x=0X447197E8);
	op_enum		(x,	0,	GetEnum("OneTap::Types::ClanTag"),0);
	set_name	(0X447197E8,	"OneTap::Configuration::Misc::ClanTag::Type");
	create_byte	(x=0X447197F8);
	make_array	(x,	0X108);
	op_chr		(x,	0);
	set_name	(0X447197F8,	"OneTap::Configuration::Misc::ClanTag::Buffer");
	create_byte	(0X44719900);
	set_name	(0X44719900,	"OneTap::Configuration::Misc::ClanTag::IsAnimated");
	create_dword	(0X4471990C);
	set_name	(0X4471990C,	"OneTap::Configuration::Misc::ClanTag::Speed");
	create_dword	(0X4471991C);
	make_array	(0X4471991C,	0X4);
	create_dword	(0X4471992C);
	create_dword	(0X4471993C);
	create_dword	(0X4471994C);
	create_dword	(0X4471995C);
	create_dword	(0X44719964);
	create_dword	(x=0X44719968);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0X4471996C);
	create_dword	(0X44719978);
	create_dword	(0X44719988);
	create_dword	(0X44719998);
	create_dword	(0X447199A8);
	create_dword	(0X447199B8);
	create_dword	(0X447199D0);
	create_dword	(0X447199F0);
	create_byte	(0X44719A0C);
	create_byte	(0X44719A18);
	create_byte	(0X44719A24);
	create_byte	(0X44719A30);
	create_byte	(0X44719A3C);
	create_byte	(0X44719A48);
	create_byte	(0X44719A54);
	create_dword	(0X44719A60);
	create_strlit	(0X44719A70,	0X15);
	set_name	(0X44719A70,	"aResourceWarnin_0");
	create_strlit	(0X44719AF0,	0X15);
	set_name	(0X44719AF0,	"aResourceWarnin_1");
	create_dword	(0X44719B78);
	create_byte	(0X44719B88);
	create_dword	(0X44719B94);
	create_strlit	(0X44719BA4,	0X15);
	set_name	(0X44719BA4,	"aResourceWarnin");
	create_dword	(0X44719CAC);
	create_dword	(0X44719CC0);
	create_byte	(0X44719CDC);
	create_byte	(0X44719CE8);
	set_name	(0X44719CE8,	"OneTap::Configuration::Misc::AutoFire::IsEnabled");
	create_dword	(0X44719CF4);
	create_byte	(0X44719D04);
	create_byte	(0X44719D10);
	create_byte	(0X44719D1C);
	create_byte	(0X44719D28);
	create_dword	(0X44719D34);
	create_dword	(0X44719D44);
	make_array	(0X44719D44,	0X4);
	create_dword	(0X44719D54);
	make_array	(0X44719D54,	0X4);
	create_dword	(0X44719D64);
	make_array	(0X44719D64,	0X4);
	create_byte	(0X44719D74);
	create_byte	(0X44719D80);
	create_byte	(0X44719D8C);
	create_byte	(0X44719D8D);
	create_byte	(0X44719D8E);
	create_byte	(0X44719D8F);
	create_byte	(0X44719D9C);
	create_byte	(0X44719DA8);
	create_byte	(0X44719DA9);
	create_byte	(0X44719DAA);
	create_byte	(0X44719DAB);
	create_byte	(0X44719DB8);
	create_dword	(0X44719DC4);
	create_byte	(0X44719DD4);
	create_dword	(0X44719DE0);
	create_dword	(0X44719DF0);
	create_dword	(0X44719E08);
	create_dword	(0X44719E0C);
	create_dword	(0X44719E24);
	create_dword	(0X44719E28);
	create_byte	(0X44719E3C);
	create_dword	(0X44719E48);
	create_dword	(0X44719E58);
	create_dword	(0X44719E68);
	create_dword	(0X44719E80);
	create_dword	(0X44719E84);
	create_dword	(0X44719E9C);
	create_byte	(0X44719EC4);
	create_dword	(0X44719ED8);
	create_dword	(0X44719EF8);
	create_byte	(0X44719F4C);
	create_byte	(0X44719F58);
	create_dword	(0X44719F5C);
	create_dword	(x=0X44719F60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0X44719F64);
	create_word	(0X44719F65);
	create_byte	(0X44719F67);
	create_dword	(0X44719F68);
	create_dword	(x=0X44719F6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44719F70);
	create_dword	(0X44719F74);
	create_dword	(0X44719F78);
	create_dword	(x=0X44719F7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44719F80);
	create_dword	(0X44719F84);
	create_dword	(0X44719F88);
	create_dword	(x=0X44719F8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44719F90);
	create_dword	(0X44719F94);
	create_dword	(0X44719F98);
	create_dword	(x=0X44719F9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44719FA0);
	create_dword	(0X44719FA4);
	create_dword	(0X44719FA8);
	create_dword	(x=0X44719FAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44719FB0);
	create_dword	(0X44719FB4);
	create_dword	(0X44719FB8);
	create_dword	(x=0X44719FBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44719FC0);
	create_dword	(0X44719FC4);
	create_dword	(0X44719FC8);
	create_dword	(x=0X44719FCC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44719FD0);
	create_dword	(0X44719FD4);
	create_dword	(0X44719FD8);
	create_dword	(x=0X44719FDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44719FE0);
	create_dword	(0X44719FE4);
	create_dword	(0X44719FE8);
	create_dword	(x=0X44719FEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44719FF0);
	create_dword	(0X44719FF4);
	create_dword	(0X44719FF8);
	create_dword	(x=0X44719FFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4471A000);
	create_dword	(0X4471A004);
	create_dword	(0X4471A008);
	create_dword	(x=0X4471A00C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4471A010);
	create_dword	(0X4471A014);
	create_dword	(x=0X4471A018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4471A01C);
	create_dword	(0X4471A020);
	create_dword	(0X4471A024);
	create_dword	(x=0X4471A028);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4471A02C);
	create_dword	(0X4471A030);
	create_dword	(x=0X4471A034);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4471A038);
	create_dword	(0X4471A03C);
	create_dword	(0X4471A040);
	create_dword	(0X4471A044);
	create_dword	(0X4471A160);
	create_dword	(x=0X4471A164);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4471A168);
	create_dword	(0X4471A16C);
	create_strlit	(0X4471CD6C,	0X10);
	set_name	(0X4471CD6C,	"aDoppler4421");
	create_dword	(0X4471D938);
	create_byte	(0X4471D948);
	create_dword	(0X4471D958);
	create_dword	(0X4471DAA4);
	set_name	(0X4471DAA4,	"OneTap::Configuration::SkinChanger::Gloves::Id");
	create_dword	(0X4471DAC4);
	create_oword	(0X4471DAD0);
	create_oword	(0X4471DAE0);
	create_dword	(0X4471DAF0);
	create_dword	(0X4471DAF4);
	create_dword	(0X4471DAF8);
	create_dword	(0X4471DAFC);
	create_byte	(0X4471DC02);
	create_byte	(0X4471DC03);
	create_oword	(0X4471DC04);
	create_dword	(0X4471DC14);
	create_dword	(0X4471DC18);
	create_dword	(0X4471DC1C);
	create_dword	(0X4471DC20);
	create_dword	(0X4471DC24);
	create_byte	(0X4471DC28);
	create_word	(0X4471DC29);
	set_name	(0X4471DC29,	"C_SDK::Globals::OverrideVelocityModifier");
	create_byte	(0X4471DC2B);
	create_dword	(0X4471DC2C);
	create_byte	(0X4471DC30);
	create_byte	(0X4471DC31);
	create_strlit	(0X4471DC34,	0X2D);
	set_name	(0X4471DC34,	"aNja4ljc4igh1cn");
	create_strlit	(0X4471E534,	0X2D);
	set_name	(0X4471E534,	"aNzayljg5igh1cn");
	create_strlit	(0X4471F034,	0X2D);
	set_name	(0X4471F034,	"aOde0ljmxigh1cn");
	create_strlit	(0X4471FF34,	0X2D);
	set_name	(0X4471FF34,	"aMzm2ljuzig1pc3");
	create_strlit	(0X44720C34,	0X31);
	set_name	(0X44720C34,	"aNdywljcyigh1cn");
	create_strlit	(0X44721634,	0X2D);
	set_name	(0X44721634,	"aNtuzlju1igh1cn");
	create_dword	(x=0X44721C34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44721C38);
	create_byte	(0X44721C3C);
	create_dword	(0X44721C40);
	create_dword	(0X44721C44);
	create_dword	(0X44721C48);
	create_dword	(0X44721C4C);
	create_dword	(0X44721C50);
	create_dword	(0X44721C54);
	create_dword	(0X44721C58);
	create_dword	(0X44721C5C);
	create_dword	(0X44721C60);
	create_dword	(0X44721C64);
	create_byte	(0X44721C68);
	create_dword	(0X44721C70);
	make_array	(0X44721C70,	0X3);
	create_dword	(0X44721C7C);
	make_array	(0X44721C7C,	0X3);
	create_dword	(0X44721C88);
	create_dword	(0X44721C8C);
	create_dword	(0X44721C90);
	create_dword	(0X44721C94);
	create_dword	(0X44721C98);
	create_dword	(0X44721C9C);
	create_dword	(0X447222A0);
	create_dword	(0X447222A4);
	create_dword	(0X447222A8);
	create_dword	(0X447222AC);
	create_dword	(0X447222B0);
	create_dword	(0X447222B4);
	create_dword	(0X447222B8);
	make_array	(0X447222B8,	0X3);
	create_dword	(0X447222C4);
	make_array	(0X447222C4,	0X3);
	create_dword	(0X447222D0);
	make_array	(0X447222D0,	0X3);
	create_dword	(0X447222DC);
	make_array	(0X447222DC,	0X3);
	create_dword	(0X447222E8);
	make_array	(0X447222E8,	0X3);
	create_dword	(0X447222F4);
	make_array	(0X447222F4,	0X3);
	create_dword	(0X44722300);
	create_dword	(0X44722308);
	create_dword	(0X4472230C);
	create_dword	(0X44722310);
	create_dword	(0X44722314);
	make_array	(0X44722314,	0X180);
	create_dword	(0X44722918);
	create_dword	(0X4472291C);
	create_dword	(0X44722920);
	create_dword	(0X44722924);
	make_array	(0X44722924,	0X3);
	create_dword	(0X44722930);
	make_array	(0X44722930,	0X6);
	create_dword	(0X44722948);
	make_array	(0X44722948,	0X3);
	create_dword	(0X44722954);
	make_array	(0X44722954,	0X3);
	create_dword	(0X44722960);
	make_array	(0X44722960,	0X4);
	create_dword	(x=0X44722970);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44722974);
	create_dword	(0X44722978);
	create_dword	(x=0X4472297C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44722980);
	create_dword	(0X44722984);
	create_dword	(x=0X44722988);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4472298C);
	create_dword	(0X44722990);
	create_dword	(x=0X44722994);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44722998);
	create_dword	(0X4472299C);
	create_dword	(0X447229A0);
	create_dword	(0X447229A4);
	create_dword	(0X447229A8);
	create_dword	(0X447229AC);
	create_dword	(0X447229B0);
	create_dword	(0X447229B4);
	create_dword	(0X447229B8);
	create_dword	(0X447229BC);
	create_dword	(0X447229C0);
	create_dword	(0X447229C4);
	create_dword	(0X447229C8);
	create_dword	(0X447229CC);
	create_dword	(0X447229D0);
	create_dword	(0X447229D4);
	create_dword	(0X447229D8);
	create_dword	(0X447229DC);
	create_dword	(0X447229E0);
	create_dword	(0X447229E4);
	create_dword	(0X447229E8);
	create_byte	(0X447229EC);
	create_dword	(0X447229F0);
	create_dword	(0X447229F4);
	create_dword	(0X447229F8);
	create_dword	(0X447229FC);
	create_dword	(0X44722A00);
	create_dword	(0X44722A04);
	create_dword	(x=0X44722A08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44722A0C);
	create_dword	(0X44723080);
	create_dword	(0X44723084);
	create_word	(0X44723088);
	create_byte	(0X4472308C);
	create_dword	(0X44723090);
	create_dword	(0X44723094);
	create_dword	(0X44723098);
	create_dword	(0X4472309C);
	create_dword	(0X447230A0);
	create_dword	(0X447230A4);
	create_byte	(0X447230A8);
	create_dword	(x=0X447230AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447230B0);
	create_dword	(0X447230B4);
	create_byte	(0X447248B8);
	create_dword	(x=0X447248BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447248C0);
	create_dword	(0X447248C4);
	create_dword	(x=0X447248D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447248E4);
	create_dword	(0X447248F4);
	create_dword	(x=0X44724904);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44724914);
	create_dword	(0X44724924);
	create_dword	(x=0X44724934);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44724944);
	create_dword	(0X44724954);
	create_dword	(x=0X44724964);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44724974);
	create_dword	(0X44724984);
	create_dword	(x=0X44724994);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447249A4);
	create_dword	(0X447249B4);
	create_dword	(x=0X447249C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447249D4);
	create_dword	(0X447249E4);
	create_dword	(x=0X447249F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44724A04);
	create_dword	(0X44724A14);
	create_dword	(x=0X44724A24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44724A34);
	create_dword	(0X44724A44);
	create_byte	(0X447260C8);
	create_dword	(x=0X447260CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447260D0);
	create_dword	(0X447260D4);
	create_dword	(x=0X447260E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447260F4);
	create_dword	(0X44726104);
	create_dword	(x=0X44726114);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44726124);
	create_dword	(0X44726134);
	create_dword	(x=0X44726144);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44726154);
	create_dword	(0X44726164);
	create_dword	(x=0X44726174);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44726184);
	create_dword	(0X44726194);
	create_dword	(x=0X447261A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447261B4);
	create_dword	(0X447261C4);
	create_dword	(x=0X447261D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447261E4);
	create_dword	(0X447261F4);
	create_dword	(x=0X44726204);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44726214);
	create_dword	(0X44726224);
	create_dword	(x=0X44726234);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44726244);
	create_dword	(0X44726254);
	create_dword	(0X447278D8);
	create_dword	(0X447278DC);
	create_dword	(0X447278E0);
	create_dword	(0X447278E4);
	make_array	(0X447278E4,	0XCD);
	create_dword	(0X44727C1B);
	create_dword	(0X44727F5C);
	create_dword	(0X447285D0);
	create_dword	(0X447285D4);
	create_word	(0X447285D8);
	create_dword	(0X447285DC);
	make_array	(0X447285DC,	0X3);
	create_dword	(0X447285E8);
	make_array	(0X447285E8,	0X3);
	create_dword	(0X447285F4);
	make_array	(0X447285F4,	0X3);
	create_dword	(0X44728600);
	create_dword	(0X44728604);
	create_dword	(0X44728608);
	create_dword	(0X4472860C);
	create_dword	(0X44728610);
	make_array	(0X44728610,	0X3);
	create_dword	(0X4472861C);
	create_dword	(0X44728620);
	create_qword	(0X44728628);
	create_dword	(0X44728630);
	create_dword	(0X44728634);
	create_word	(0X44728638);
	create_dword	(0X44728640);
	create_dword	(0X44728644);
	create_dword	(0X44728648);
	create_dword	(0X4472864C);
	create_dword	(0X44728650);
	create_dword	(0X44728654);
	create_dword	(0X44728658);
	create_dword	(0X4472865C);
	create_dword	(0X44728660);
	create_dword	(0X44728664);
	create_dword	(0X44728668);
	create_dword	(0X4472866C);
	make_array	(0X4472866C,	0X3);
	create_dword	(0X44728678);
	make_array	(0X44728678,	0X3);
	create_dword	(0X44728684);
	make_array	(0X44728684,	0X3);
	create_dword	(0X44728690);
	create_dword	(0X44728694);
	create_dword	(0X44728698);
	create_dword	(0X4472869C);
	make_array	(0X4472869C,	0X3);
	create_dword	(0X447286A8);
	make_array	(0X447286A8,	0X3);
	create_float	(0X447286B4);
	create_float	(0X447286B8);
	create_float	(0X447286C0);
	create_float	(0X447286C4);
	create_float	(0X447286CC);
	create_float	(0X447286D0);
	make_array	(0X447286D0,	0X2);
	create_dword	(x=0X447286D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447286E0);
	create_dword	(0X447286E4);
	create_byte	(0X447286E8);
	make_array	(0X447286E8,	0X4);
	create_dword	(0X447286EC);
	create_byte	(0X447286F0);
	make_array	(0X447286F0,	0X4);
	create_dword	(0X447286F4);
	create_dword	(0X447286F8);
	create_byte	(0X447286FC);
	make_array	(0X447286FC,	0X4);
	create_dword	(0X44728700);
	create_byte	(0X44728704);
	make_array	(0X44728704,	0X4);
	create_dword	(0X44728708);
	create_dword	(0X4472920C);
	create_dword	(0X44729210);
	make_array	(0X44729210,	0X3);
	create_dword	(0X44729518);
	make_array	(0X44729518,	0X3);
	create_dword	(0X44729524);
	make_array	(0X44729524,	0X3);
	create_dword	(0X44729530);
	make_array	(0X44729530,	0X3);
	create_dword	(0X4472953C);
	create_dword	(0X44729540);
	create_oword	(0X44729544);
	create_dword	(0X44729554);
	create_dword	(0X4472E558);
	create_dword	(0X4472E55C);
	create_dword	(0X4472E560);
	create_dword	(0X4472E564);
	create_dword	(0X4472E568);
	create_dword	(0X4472E56C);
	create_dword	(0X4472E570);
	set_name	(0X4472E570,	"OneTap::Globals::OffsetsBuffer");
	create_dword	(0X4472E574);
	create_dword	(0X4472E578);
	create_dword	(0X4472E57C);
	create_dword	(0X4472E580);
	create_dword	(0X4472E584);
	create_dword	(0X4472E588);
	create_dword	(0X4472E58C);
	create_dword	(0X4472E590);
	create_dword	(0X4472E594);
	create_dword	(0X4472E598);
	create_dword	(0X4472E59C);
	create_dword	(0X4472E5A0);
	create_dword	(0X4472E5A4);
	create_dword	(0X4472E5A8);
	create_dword	(0X4472E5AC);
	create_dword	(0X4472E5B0);
	create_dword	(0X4472E5B4);
	create_dword	(0X4472E5B8);
	create_dword	(0X4472E5BC);
	create_dword	(0X4472E5C0);
	create_dword	(0X4472E5C4);
	create_dword	(0X4472E5C8);
	create_dword	(0X4472E5CC);
	create_dword	(0X4472E5D0);
	create_dword	(0X4472E5D4);
	create_dword	(0X4472E5D8);
	create_dword	(0X4472E5DC);
	create_dword	(0X4472E5E0);
	create_dword	(0X4472E5E4);
	create_dword	(0X4472E5E8);
	create_dword	(0X4472E5EC);
	create_dword	(0X4472E5F0);
	create_dword	(0X4472E5F4);
	create_dword	(0X4472E5F8);
	create_dword	(0X4472E5FC);
	create_dword	(0X4472E600);
	create_dword	(0X4472E604);
	create_dword	(0X4472E608);
	create_dword	(0X4472E60C);
	create_dword	(0X4472E610);
	create_dword	(0X4472E614);
	create_byte	(0X4472E618);
	make_array	(0X4472E618,	0X4);
	create_dword	(0X4472E61C);
	create_dword	(0X4472E620);
	create_dword	(0X4472E624);
	create_dword	(0X4472E628);
	create_dword	(0X4472E62C);
	create_dword	(0X4472E630);
	create_dword	(0X4472E634);
	create_dword	(0X4472EF34);
	create_dword	(0X4472EF38);
	create_dword	(0X4472EF40);
	create_dword	(0X4472EF44);
	create_dword	(0X4472EF4C);
	create_dword	(0X4472EF50);
	create_dword	(0X4472EF58);
	make_array	(0X4472EF58,	0X3);
	create_dword	(0X4472EF64);
	make_array	(0X4472EF64,	0X3);
	create_strlit	(0X4472EF70,	0XD);
	set_name	(0X4472EF70,	"a0sj8sj8sj");
	create_oword	(0X4472EF80);
	create_dword	(0X4472EF90);
	create_dword	(0X4472EF94);
	create_dword	(0X4472EF98);
	create_dword	(0X4472EF9C);
	create_dword	(0X4472EFA0);
	create_dword	(0X4472EFA4);
	create_dword	(0X4472EFA8);
	create_dword	(0X4472EFAC);
	create_dword	(0X4472EFB0);
	create_dword	(0X4472EFB4);
	create_dword	(0X4472EFB8);
	create_dword	(0X4472EFBC);
	create_dword	(0X4472EFC0);
	create_dword	(x=0X4472EFC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4472EFC8);
	create_dword	(x=0X4472EFCC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4472EFD0);
	create_dword	(0X4472EFD4);
	create_qword	(0X4472EFD8);
	create_dword	(0X4472EFE0);
	create_dword	(0X4472EFE4);
	set_name	(0X4472EFE4,	"OneTap::Globals::SimulationTick");
	create_dword	(0X4472EFE8);
	create_dword	(0X4472EFEC);
	create_word	(0X4472EFF0);
	create_dword	(0X4472EFF4);
	create_dword	(0X4472EFF8);
	create_float	(0X4472EFFC);
	create_dword	(0X4472F000);
	create_dword	(0X4472F004);
	create_qword	(0X4472F008);
	create_word	(0X4472F010);
	create_insn	(0X44730187);
	create_insn	(x=0X44730191);
	op_hex		(x,	1);
	create_insn	(0X447301CF);
	create_insn	(x=0X447301E1);
	op_hex		(x,	1);
	create_insn	(x=0X44730210);
	op_hex		(x,	1);
	create_insn	(x=0X44730215);
	op_hex		(x,	1);
	set_cmt	(0X4473021A,	"Interrupt Controller #2, 8259A",	0);
	create_insn	(x=0X4473021A);
	op_hex		(x,	0);
	create_insn	(0X44730228);
	create_dword	(0X44730904);
	make_array	(0X44730904,	0X18F);
	create_dword	(0X44730F40);
	make_array	(0X44730F40,	0X18F);
	create_dword	(0X4473157C);
	create_dword	(0X44731580);
	create_dword	(0X44731584);
	create_dword	(x=0X44731588);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X4473158C,	0X4);
	create_dword	(0X44731590);
	create_dword	(0X44731594);
	create_dword	(0X44731598);
	make_array	(0X44731598,	0X4);
	create_byte	(0X447315A8);
	make_array	(0X447315A8,	0X4);
	create_dword	(0X447315AC);
	create_dword	(0X447315B0);
	create_dword	(0X447315B4);
	create_dword	(0X447315B8);
	create_dword	(0X447315BC);
	create_byte	(0X447315C3);
	create_dword	(0X447315CC);
	make_array	(0X447315CC,	0X200);
	create_dword	(0X44731DCC);
	make_array	(0X44731DCC,	0X200);
	create_dword	(0X447325CC);
	make_array	(0X447325CC,	0X1EB);
	create_dword	(0X44732D78);
	make_array	(0X44732D78,	0X3);
	create_byte	(0X44732D85);
	make_array	(0X44732D85,	0X3);
	create_byte	(0X44732D8B);
	create_dword	(0X44732D8C);
	create_byte	(0X44732D91);
	make_array	(0X44732D91,	0X3);
	create_dword	(0X44732D94);
	make_array	(0X44732D94,	0X3);
	create_dword	(0X44732DA0);
	make_array	(0X44732DA4,	0X4);
	make_array	(0X44732DAA,	0X2);
	create_dword	(0X44732DAC);
	make_array	(0X44732DAC,	0X3E);
	create_dword	(0X44732EA4);
	create_dword	(0X44732EA8);
	create_dword	(0X44732EAC);
	create_dword	(0X44732EB0);
	create_dword	(0X44732EB4);
	create_dword	(0X44732EB8);
	create_dword	(0X44732EBC);
	create_byte	(0X44732EC0);
	create_dword	(0X44732EC4);
	create_byte	(0X44732EC8);
	create_byte	(0X44732EC9);
	create_byte	(0X44732ECA);
	create_byte	(0X44732ECB);
	create_dword	(0X44732EE4);
	create_byte	(0X44732EE8);
	set_name	(0X44732EE8,	"OneTap::Globals::FakeLag::IsNextChoke");
	make_array	(0X44732EE9,	0X3);
	create_dword	(0X44732EEC);
	set_name	(0X44732EEC,	"OneTap::Globals::FakeLag::NextChoke");
	create_dword	(0X44732EF0);
	make_array	(0X44732EF0,	0X6);
	create_dword	(x=0X44732F08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44732F0C);
	create_dword	(0X44732F10);
	create_dword	(0X44732F14);
	create_dword	(0X44732F18);
	make_array	(0X44732F1C,	0X4);
	create_dword	(0X44732F20);
	create_dword	(0X44732F24);
	create_dword	(0X44732F28);
	create_dword	(0X44732F2C);
	create_dword	(0X44732F30);
	create_dword	(0X44732F34);
	create_dword	(0X44732F38);
	create_byte	(0X44732F3C);
	create_byte	(0X44732F3D);
	make_array	(0X44732F3E,	0X2);
	create_dword	(0X44732F40);
	create_dword	(0X44732F44);
	make_array	(0X44732F44,	0X80);
	create_word	(0X44733144);
	make_array	(0X44733146,	0X2);
	create_dword	(0X44733148);
	create_dword	(0X4473314C);
	create_dword	(0X44733150);
	create_byte	(0X44733154);
	set_name	(0X44733154,	"OneTap::Configuration::Ragebot::Fakeduck::IsEnabled");
	make_array	(0X44733155,	0X3);
	create_dword	(0X44733158);
	make_array	(0X4473315C,	0X4);
	create_byte	(0X44733160);
	make_array	(0X44733161,	0X3);
	create_dword	(0X44733164);
	create_dword	(0X44733168);
	create_dword	(0X4473316C);
	create_dword	(0X44733170);
	create_dword	(0X44733174);
	create_dword	(0X44733178);
	create_dword	(0X4473317C);
	create_dword	(0X44733180);
	create_dword	(0X44733184);
	create_dword	(0X44733188);
	create_byte	(0X4473318C);
	create_byte	(0X4473318D);
	create_byte	(0X4473318E);
	create_byte	(0X4473318F);
	create_dword	(0X44733190);
	create_dword	(0X44733194);
	create_dword	(0X44733198);
	create_dword	(0X4473319C);
	create_dword	(0X447331A0);
	create_dword	(0X447331A4);
	create_dword	(0X447331A8);
	create_dword	(0X447331AC);
	create_dword	(0X447331B0);
	create_dword	(0X447331B4);
	create_dword	(0X447331B8);
	create_dword	(0X447331BC);
	create_dword	(0X447331C0);
	create_dword	(0X447331C4);
	create_dword	(0X447331C8);
	create_dword	(0X447331CC);
	set_name	(0X447331CC,	"a5");
	create_dword	(0X447331D0);
	create_dword	(0X447331D4);
	create_dword	(0X447331D8);
	create_dword	(0X447331DC);
	create_dword	(0X447331E0);
	create_dword	(0X447331E4);
	create_dword	(0X447331E8);
	create_byte	(0X447331EC);
	create_byte	(0X447331ED);
	create_byte	(0X447331EE);
	create_byte	(0X447331EF);
	create_dword	(0X447331F0);
	create_dword	(0X447331F4);
	create_dword	(0X447331F8);
	create_dword	(0X447331FC);
	create_dword	(0X44733200);
	create_byte	(0X44733204);
	make_array	(0X44733205,	0X3);
	create_dword	(0X44733208);
	make_array	(0X44733208,	0X600);
	create_byte	(0X44734A08);
	make_array	(0X44734A09,	0X3);
	create_dword	(0X44734A0C);
	make_array	(0X44734A0C,	0X600);
	create_dword	(0X4473620C);
	make_array	(0X4473620C,	0XCE);
	create_dword	(0X44736544);
	make_array	(0X44736544,	0XB6);
	create_oword	(0X4473681C);
	create_oword	(0X4473682C);
	create_oword	(0X4473683C);
	create_oword	(0X4473684C);
	create_oword	(0X4473685C);
	create_oword	(0X4473686C);
	create_dword	(0X4473687C);
	create_dword	(0X44736880);
	create_word	(0X44736884);
	make_array	(0X44736886,	0X2);
	create_byte	(0X44736888);
	make_array	(0X44736889,	0X3);
	create_dword	(0X4473688C);
	create_dword	(0X44736890);
	create_dword	(0X44736894);
	create_dword	(0X44736898);
	create_dword	(0X4473689C);
	create_dword	(0X447368A0);
	create_dword	(0X447368A4);
	create_dword	(0X447368A8);
	create_dword	(0X447368AC);
	create_dword	(0X447368B0);
	create_dword	(0X447368B4);
	create_dword	(0X447368B8);
	create_dword	(0X447368BC);
	create_dword	(0X447368C0);
	create_dword	(0X447368C4);
	create_dword	(0X447368C8);
	create_dword	(0X447368CC);
	create_dword	(0X447368D0);
	create_dword	(0X447368D4);
	create_dword	(0X447368D8);
	create_dword	(0X447368DC);
	create_dword	(0X447368E0);
	create_dword	(0X447368E4);
	create_dword	(0X447368E8);
	create_dword	(0X447368EC);
	create_dword	(0X447368F0);
	create_dword	(0X447368F4);
	create_dword	(0X447368F8);
	create_dword	(0X447368FC);
	create_dword	(0X44736900);
	create_dword	(0X44736904);
	create_dword	(0X44736908);
	create_dword	(0X4473690C);
	create_dword	(0X44736910);
	create_dword	(0X44736914);
	create_byte	(0X44736918);
	create_byte	(0X44736919);
	create_byte	(0X4473691A);
	create_dword	(0X4473691C);
	create_byte	(0X44736920);
	make_array	(0X44736921,	0XF);
	create_dword	(0X44736930);
	create_dword	(x=0X44736934);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X44736938);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4473693C);
	create_dword	(0X44736940);
	create_dword	(0X44736944);
	create_dword	(0X44736948);
	create_dword	(0X4473694C);
	create_dword	(0X44736950);
	create_dword	(0X44736954);
	set_name	(0X44736954,	"C_SDK::NetVars::m_flLowerBodyYawTarget");
	create_dword	(0X44736958);
	set_name	(0X44736958,	"C_SDK::NetVars::m_flPoseParam");
	create_dword	(0X4473695C);
	set_name	(0X4473695C,	"C_SDK::NetVars::m_angEyeAngles");
	create_dword	(0X44736960);
	create_dword	(0X44736964);
	set_name	(0X44736964,	"C_SDK::NetVars::m_flDuckAmount");
	create_dword	(0X44736968);
	set_name	(0X44736968,	"C_SDK::NetVars::m_fFlags");
	create_dword	(0X4473696C);
	set_name	(0X4473696C,	"C_SDK::NetVars::m_vecOrigin");
	create_dword	(0X44736970);
	create_dword	(0X44736974);
	create_dword	(0X44736978);
	set_name	(0X44736978,	"C_SDK::NetVars::m_bIsScoped");
	create_dword	(0X4473697C);
	create_dword	(0X44736980);
	create_dword	(0X44736984);
	create_dword	(0X44736988);
	create_dword	(0X4473698C);
	create_dword	(0X44736990);
	create_dword	(0X44736994);
	create_dword	(0X44736998);
	create_dword	(0X4473699C);
	create_dword	(0X447369A0);
	create_dword	(0X447369A4);
	create_dword	(0X447369A8);
	create_dword	(0X447369AC);
	create_dword	(0X447369B0);
	create_dword	(0X447369B4);
	create_dword	(0X447369B8);
	create_dword	(0X447369BC);
	create_dword	(0X447369C0);
	create_dword	(0X447369C4);
	create_dword	(0X447369C8);
	create_dword	(0X447369CC);
	create_dword	(0X447369D0);
	create_dword	(0X447369D4);
	create_dword	(0X447369D8);
	create_dword	(0X447369DC);
	create_dword	(0X447369E0);
	create_dword	(0X447369E4);
	create_dword	(0X447369E8);
	create_dword	(0X447369EC);
	create_dword	(0X447369F0);
	create_dword	(0X447369F4);
	create_dword	(0X447369F8);
	create_dword	(0X447369FC);
	create_dword	(0X44736A00);
	create_dword	(0X44736A04);
	create_dword	(0X44736A08);
	create_dword	(0X44736A0C);
	create_dword	(0X44736A10);
	create_dword	(0X44736A14);
	create_dword	(0X44736A18);
	create_dword	(0X44736A1C);
	create_dword	(0X44736A20);
	create_dword	(0X44736A24);
	create_dword	(0X44736A28);
	create_dword	(0X44736A2C);
	create_dword	(0X44736A30);
	create_dword	(0X44736A34);
	create_dword	(0X44736A38);
	create_dword	(0X44736A3C);
	create_dword	(0X44736A40);
	create_dword	(0X44736A44);
	create_dword	(0X44736A48);
	create_dword	(0X44736A4C);
	create_dword	(0X44736A50);
	create_dword	(0X44736A54);
	create_dword	(0X44736A58);
	create_dword	(0X44736A5C);
	create_dword	(0X44736A60);
	create_dword	(0X44736A64);
	create_dword	(0X44736A68);
	create_dword	(0X44736A6C);
	create_dword	(0X44736A70);
	create_dword	(0X44736A74);
	create_dword	(0X44736A78);
	create_dword	(0X44736A7C);
	create_dword	(0X44736A80);
	create_dword	(0X44736A84);
	create_dword	(0X44736A88);
	create_dword	(0X44736A8C);
	create_dword	(0X44736A90);
	create_dword	(0X44736A94);
	create_dword	(0X44736A98);
	create_dword	(0X44736A9C);
	set_name	(0X44736A9C,	"C_SDK::Values::Float::1.95");
	create_dword	(0X44736AA0);
	create_dword	(0X44736AA4);
	set_name	(0X44736AA4,	"C_SDK::Values::Float::2.5");
	create_dword	(0X44736AA8);
	create_dword	(0X44736AAC);
	create_float	(0X44736AB0);
	set_name	(0X44736AB0,	"C_SDK::Values::Float::8192.0");
	create_dword	(0X44736AB4);
	set_name	(0X44736AB4,	"C_SDK::Values::Float::0.99000001");
	create_dword	(0X44736AB8);
	create_dword	(0X44736ABC);
	create_dword	(0X44736AC0);
	create_dword	(0X44736AC4);
	create_dword	(0X44736AC8);
	create_dword	(0X44736ACC);
	create_dword	(0X44736AD0);
	create_dword	(0X44736AD4);
	create_dword	(0X44736AD8);
	create_dword	(0X44736ADC);
	create_dword	(0X44736AE0);
	create_dword	(0X44736AE4);
	create_dword	(0X44736AE8);
	create_dword	(0X44736AEC);
	create_dword	(0X44736AF0);
	create_dword	(0X44736AF4);
	create_dword	(0X44736AF8);
	create_dword	(0X44736AFC);
	create_dword	(0X44736B00);
	create_dword	(0X44736B04);
	create_dword	(0X44736B08);
	create_dword	(0X44736B0C);
	create_dword	(0X44736B10);
	create_dword	(0X44736B14);
	create_dword	(0X44736B18);
	create_dword	(0X44736B1C);
	create_dword	(0X44736B20);
	create_dword	(0X44736B24);
	create_dword	(0X44736B28);
	create_dword	(0X44736B2C);
	create_dword	(0X44736B30);
	create_dword	(0X44736B34);
	create_dword	(0X44736B38);
	create_dword	(0X44736B3C);
	create_dword	(0X44736B40);
	create_dword	(0X44736B44);
	create_dword	(0X44736B48);
	create_dword	(0X44736B4C);
	create_dword	(0X44736B50);
	create_dword	(0X44736B54);
	create_dword	(0X44736B58);
	create_dword	(0X44736B5C);
	create_dword	(0X44736B60);
	create_dword	(0X44736B64);
	create_dword	(0X44736B68);
	create_dword	(0X44736B6C);
	create_dword	(0X44736B70);
	create_dword	(0X44736B74);
	create_dword	(0X44736B78);
	create_dword	(0X44736B7C);
	create_dword	(0X44736B80);
	create_dword	(0X44736B84);
	create_dword	(0X44736B88);
	create_dword	(0X44736B8C);
	create_dword	(0X44736B90);
	create_dword	(0X44736B94);
	create_dword	(0X44736B98);
	create_dword	(0X44736B9C);
	create_dword	(0X44736BA0);
	create_dword	(0X44736BA4);
	create_dword	(0X44736BA8);
	create_dword	(0X44736BAC);
	create_dword	(0X44736BB0);
	create_dword	(0X44736BB4);
	create_dword	(0X44736BB8);
	create_dword	(0X44736BBC);
	create_dword	(0X44736BC0);
	create_dword	(0X44736BC4);
	create_dword	(0X44736BC8);
	create_dword	(0X44736BCC);
	create_dword	(0X44736BD0);
	create_dword	(0X44736BD4);
	create_dword	(0X44736BD8);
	create_dword	(0X44736BDC);
	create_dword	(0X44736BE0);
	create_dword	(0X44736BE4);
	create_dword	(0X44736BE8);
	set_name	(0X44736BE8,	"C_SDK::Globals::CSGameRulesProxy");
	create_dword	(0X44736BEC);
	create_dword	(0X44736BF0);
	set_name	(0X44736BF0,	"C_SDK::NetVars::m_iItemDefinitionIndex");
	create_dword	(0X44736BF4);
	create_dword	(0X44736BF8);
	create_dword	(0X44736BFC);
	create_dword	(0X44736C00);
	create_dword	(0X44736C04);
	create_dword	(0X44736C08);
	set_name	(0X44736C08,	"C_SDK::NetVars::m_bIsScoped_Copy");
	create_dword	(0X44736C0C);
	set_name	(0X44736C0C,	"C_SDK::NetVars::m_vecVelocity");
	create_dword	(0X44736C10);
	set_name	(0X44736C10,	"C_SDK::NetVars::m_vecViewOffset");
	create_dword	(0X44736C14);
	set_name	(0X44736C14,	"C_SDK::NetVars::m_nTickBase");
	create_dword	(0X44736C18);
	set_name	(0X44736C18,	"C_SDK::NetVars::m_lifeState");
	create_dword	(0X44736C1C);
	set_name	(0X44736C1C,	"C_SDK::NetVars::m_iHealth");
	create_dword	(0X44736C20);
	create_dword	(0X44736C24);
	set_name	(0X44736C24,	"C_SDK::NetVars::m_armorValue");
	create_dword	(0X44736C28);
	create_dword	(0X44736C2C);
	create_dword	(0X44736C30);
	create_dword	(0X44736C34);
	create_dword	(0X44736C38);
	create_dword	(0X44736C3C);
	create_dword	(0X44736C40);
	set_name	(0X44736C40,	"C_SDK::NetVars::m_flSimulationTime");
	create_dword	(0X44736C44);
	set_name	(0X44736C44,	"C_SDK::NetVars::m_bGunGameImmunity");
	create_dword	(0X44736C48);
	set_name	(0X44736C48,	"C_SDK::NetVars::m_nForceBone");
	create_dword	(0X44736C4C);
	create_byte	(0X44736C50);
	create_word	(0X44736C51);
	create_byte	(0X44736C53);
	create_dword	(0X44736C54);
	create_dword	(0X44736C58);
	make_array	(0X44736C58,	0X3);
	create_dword	(0X44736C64);
	create_dword	(0X44736C68);
	make_array	(0X44736C68,	0X3);
	create_dword	(0X44736C74);
	create_dword	(0X44736C78);
	make_array	(0X44736C78,	0X3);
	create_dword	(0X44736C84);
	create_dword	(0X44736C88);
	make_array	(0X44736C88,	0X3);
	create_dword	(0X44736C94);
	create_dword	(0X44736C98);
	make_array	(0X44736C98,	0X3);
	create_dword	(0X44736CA4);
	create_dword	(0X44736CA8);
	make_array	(0X44736CA8,	0X3);
	create_dword	(0X44736CB4);
	create_dword	(0X44736CB8);
	make_array	(0X44736CB8,	0X3);
	create_dword	(0X44736CC4);
	create_dword	(0X44736CC8);
	make_array	(0X44736CC8,	0X3);
	create_dword	(0X44736CD4);
	create_dword	(0X44736CD8);
	make_array	(0X44736CD8,	0X3);
	create_dword	(0X44736CE4);
	create_dword	(0X44736CE8);
	make_array	(0X44736CE8,	0X3);
	create_dword	(0X44736CF4);
	create_dword	(0X44736CF8);
	make_array	(0X44736CF8,	0X3);
	create_dword	(0X44736D04);
	create_dword	(0X44736D08);
	make_array	(0X44736D08,	0X3);
	create_dword	(0X44736D14);
	create_dword	(0X44736D18);
	make_array	(0X44736D18,	0X3);
	create_dword	(0X44736D24);
	create_dword	(0X44736D28);
	make_array	(0X44736D28,	0X3);
	create_dword	(0X44736D34);
	create_dword	(0X44736D38);
	make_array	(0X44736D38,	0X3);
	create_dword	(0X44736D44);
	create_dword	(0X44736D48);
	make_array	(0X44736D48,	0X3);
	create_dword	(0X44736D54);
	create_dword	(0X44736D58);
	make_array	(0X44736D58,	0X3);
	create_dword	(0X44736D64);
	create_dword	(0X44736D68);
	make_array	(0X44736D68,	0X3);
	create_dword	(0X44736D74);
	create_dword	(0X44736D78);
	make_array	(0X44736D78,	0X3);
	create_dword	(0X44736D84);
	create_dword	(0X44736D88);
	make_array	(0X44736D88,	0X3);
	create_dword	(0X44736D94);
	create_dword	(0X44736D98);
	make_array	(0X44736D98,	0X3);
	create_dword	(0X44736DA4);
	create_dword	(0X44736DA8);
	make_array	(0X44736DA8,	0X3);
	create_dword	(0X44736DB4);
	create_dword	(0X44736DB8);
	make_array	(0X44736DB8,	0X3);
	create_dword	(0X44736DC4);
	create_dword	(0X44736DC8);
	make_array	(0X44736DC8,	0X3);
	create_dword	(0X44736DD4);
	create_dword	(0X44738458);
	make_array	(0X4473845C,	0X4);
	create_dword	(0X44738460);
	create_dword	(0X44738464);
	create_dword	(0X44738468);
	create_dword	(x=0X4473846C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44738470);
	create_dword	(0X44738474);
	create_dword	(0X44738478);
	create_float	(0X4473847C);
	create_dword	(0X44738480);
	create_dword	(0X44738484);
	create_dword	(0X44738488);
	create_dword	(0X4473848C);
	create_dword	(0X44738490);
	create_dword	(0X44738494);
	create_dword	(0X44738498);
	create_dword	(x=0X4473849C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447384A0);
	create_dword	(0X447384A4);
	create_dword	(0X447384A8);
	create_dword	(0X447384AC);
	create_dword	(0X447384B0);
	make_array	(0X447384B0,	0X2);
	create_dword	(0X447384B8);
	create_dword	(0X447384BC);
	create_dword	(0X447384C0);
	create_dword	(0X447384C4);
	create_dword	(0X447384C8);
	create_dword	(x=0X447384CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447384D0);
	create_dword	(0X447384D4);
	create_dword	(0X447384D8);
	create_dword	(0X447384DC);
	create_dword	(0X447384E0);
	make_array	(0X447384E0,	0X2);
	create_dword	(0X447384E8);
	create_dword	(0X447384EC);
	create_dword	(0X447384F0);
	create_dword	(0X447384F4);
	create_dword	(0X447384F8);
	create_dword	(x=0X447384FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44738500);
	create_dword	(0X44738504);
	create_dword	(0X44738508);
	create_dword	(0X4473850C);
	create_dword	(0X44738510);
	create_dword	(0X44738514);
	create_dword	(0X44738518);
	create_dword	(0X4473851C);
	create_dword	(0X44738520);
	create_dword	(0X44738524);
	create_dword	(0X44738528);
	create_dword	(x=0X4473852C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44738530);
	create_dword	(0X44738534);
	create_dword	(0X44738538);
	create_dword	(0X4473853C);
	create_dword	(0X44738540);
	create_dword	(0X44738544);
	create_dword	(0X44738548);
	create_dword	(0X4473854C);
	create_dword	(0X44738550);
	create_dword	(0X44738554);
	create_dword	(0X44738558);
	create_dword	(x=0X4473855C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44738560);
	create_dword	(0X44738564);
	create_dword	(0X44738568);
	create_dword	(0X4473856C);
	create_dword	(0X44738570);
	create_dword	(0X44738574);
	create_dword	(0X44738578);
	create_dword	(0X4473857C);
	create_dword	(0X44738580);
	create_dword	(0X44738584);
	create_dword	(0X44738588);
	create_dword	(x=0X4473858C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X44738590);
	create_dword	(0X44738594);
	create_dword	(0X44738598);
	create_dword	(0X4473859C);
	create_dword	(0X447385A0);
	create_dword	(0X447385A4);
	create_dword	(0X447385A8);
	create_dword	(0X447385AC);
	create_dword	(0X447385B0);
	create_dword	(0X447385B4);
	create_dword	(0X447385B8);
	create_dword	(x=0X447385BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X447385C0);
	create_dword	(0X447385C4);
	create_dword	(0X447385C8);
	create_dword	(0X447385CC);
	create_word	(0X447385D2);
	create_dword	(0X447385D4);
	create_dword	(0X447385D8);
	create_dword	(0X447385DC);
	create_dword	(0X447385E0);
	make_array	(0X447385E0,	0X200);
	create_dword	(0X44738DE0);
	make_array	(0X44738DE0,	0X1CF);
	create_byte	(0X4473951D);
	make_array	(0X4473951D,	0X3);
	create_dword	(0X44739520);
	make_array	(0X44739520,	0X3);
	create_dword	(0X4473952C);
	make_array	(0X4473952C,	0X4);
	create_dword	(0X4473953C);
	make_array	(0X4473953C,	0X4);
	create_byte	(0X4473954D);
	make_array	(0X4473954D,	0X3);
	create_dword	(0X44739550);
	make_array	(0X44739550,	0X3);
	create_dword	(0X4473955C);
	make_array	(0X4473955C,	0X4);
	create_dword	(0X4473956C);
	make_array	(0X4473956C,	0X4);
	create_byte	(0X4473957D);
	make_array	(0X4473957D,	0X3);
	create_dword	(0X44739580);
	make_array	(0X44739580,	0X3);
	create_dword	(0X4473958C);
	make_array	(0X4473958C,	0X4);
	create_dword	(0X4473959C);
	make_array	(0X4473959C,	0X4);
	create_byte	(0X447395AD);
	make_array	(0X447395AD,	0X3);
	create_dword	(0X447395B0);
	make_array	(0X447395B0,	0X3);
	create_dword	(0X447395BC);
	make_array	(0X447395BC,	0X4);
	create_dword	(0X447395CC);
	make_array	(0X447395CC,	0X4);
	create_byte	(0X447395DD);
	make_array	(0X447395DD,	0X3);
	create_dword	(0X447395E0);
	make_array	(0X447395E0,	0X3);
	create_dword	(0X447395EC);
	make_array	(0X447395EC,	0X4);
	create_dword	(0X447395FC);
	make_array	(0X447395FC,	0X4);
	create_byte	(0X4473960D);
	make_array	(0X4473960D,	0X3);
	create_dword	(0X44739610);
	make_array	(0X44739610,	0X3);
	create_dword	(0X4473961C);
	make_array	(0X4473961C,	0X4);
	create_dword	(0X4473962C);
	make_array	(0X4473962C,	0X4);
	create_byte	(0X4473963D);
	make_array	(0X4473963D,	0X3);
	create_dword	(0X44739640);
	make_array	(0X44739640,	0X3);
	create_dword	(0X4473964C);
	make_array	(0X4473964C,	0X4);
	create_dword	(0X4473965C);
	make_array	(0X4473965C,	0X4);
	create_byte	(0X4473966D);
	make_array	(0X4473966D,	0X3);
	create_dword	(0X44739670);
	make_array	(0X44739670,	0X3);
	create_dword	(0X4473967C);
	make_array	(0X4473967C,	0X4);
	create_dword	(0X4473968C);
	make_array	(0X4473968C,	0X4);
	create_byte	(0X4473969D);
	make_array	(0X4473969D,	0X3);
	create_dword	(0X447396A0);
	make_array	(0X447396A0,	0X3);
	create_dword	(0X447396AC);
	make_array	(0X447396AC,	0X4);
	create_dword	(0X447396BC);
	make_array	(0X447396BC,	0X4);
	create_byte	(0X447396CD);
	make_array	(0X447396CD,	0X3);
	create_dword	(0X447396D0);
	make_array	(0X447396D0,	0X3);
	create_dword	(0X447396DC);
	make_array	(0X447396DC,	0X4);
	create_dword	(0X447396EC);
	make_array	(0X447396EC,	0X4);
	create_byte	(0X447396FD);
	make_array	(0X447396FD,	0X3);
	create_dword	(0X44739700);
	make_array	(0X44739700,	0X3);
	create_dword	(0X4473970C);
	make_array	(0X4473970C,	0X4);
	create_dword	(0X4473971C);
	make_array	(0X4473971C,	0X4);
	create_byte	(0X4473972D);
	make_array	(0X4473972D,	0X3);
	create_dword	(0X44739730);
	make_array	(0X44739730,	0X3);
	create_dword	(0X4473973C);
	make_array	(0X4473973C,	0X4);
	create_dword	(0X4473974C);
	make_array	(0X4473974C,	0X4);
	create_byte	(0X4473975D);
	make_array	(0X4473975D,	0X3);
	create_dword	(0X44739760);
	make_array	(0X44739760,	0X3);
	create_dword	(0X4473976C);
	make_array	(0X4473976C,	0X4);
	create_dword	(0X4473977C);
	make_array	(0X4473977C,	0X4);
	create_byte	(0X4473978D);
	make_array	(0X4473978D,	0X3);
	create_dword	(0X44739790);
	make_array	(0X44739790,	0X3);
	create_dword	(0X4473979C);
	make_array	(0X4473979C,	0X4);
	create_dword	(0X447397AC);
	make_array	(0X447397AC,	0X4);
	create_byte	(0X447397BD);
	make_array	(0X447397BD,	0X3);
	create_dword	(0X447397C0);
	make_array	(0X447397C0,	0X3);
	create_dword	(0X447397CC);
	make_array	(0X447397CC,	0X4);
	create_dword	(0X447397DC);
	make_array	(0X447397DC,	0X4);
	create_byte	(0X447397ED);
	make_array	(0X447397ED,	0X3);
	create_dword	(0X447397F0);
	make_array	(0X447397F0,	0X3);
	create_dword	(0X447397FC);
	make_array	(0X447397FC,	0X4);
	create_dword	(0X4473980C);
	make_array	(0X4473980C,	0X4);
	create_byte	(0X4473981D);
	make_array	(0X4473981D,	0X3);
	create_dword	(0X44739820);
	make_array	(0X44739820,	0X3);
	create_dword	(0X4473982C);
	make_array	(0X4473982C,	0X4);
	create_dword	(0X4473983C);
	make_array	(0X4473983C,	0X4);
	create_byte	(0X4473984D);
	make_array	(0X4473984D,	0X3);
	create_dword	(0X44739850);
	make_array	(0X44739850,	0X3);
	create_dword	(0X4473985C);
	make_array	(0X4473985C,	0X4);
	create_dword	(0X4473986C);
	make_array	(0X4473986C,	0X4);
	create_byte	(0X4473987D);
	make_array	(0X4473987D,	0X3);
	create_dword	(0X44739880);
	make_array	(0X44739880,	0X3);
	create_dword	(0X4473988C);
	make_array	(0X4473988C,	0X4);
	create_dword	(0X4473989C);
	make_array	(0X4473989C,	0X4);
	create_byte	(0X447398AD);
	make_array	(0X447398AD,	0X3);
	create_dword	(0X447398B0);
	make_array	(0X447398B0,	0X3);
	create_dword	(0X447398BC);
	make_array	(0X447398BC,	0X4);
	create_dword	(0X447398CC);
	make_array	(0X447398CC,	0X4);
	create_byte	(0X447398DD);
	make_array	(0X447398DD,	0X3);
	create_dword	(0X447398E0);
	make_array	(0X447398E0,	0X3);
	create_dword	(0X447398EC);
	make_array	(0X447398EC,	0X4);
	create_dword	(0X447398FC);
	make_array	(0X447398FC,	0X4);
	create_byte	(0X4473990D);
	make_array	(0X4473990D,	0X3);
	create_dword	(0X44739910);
	make_array	(0X44739910,	0X3);
	create_dword	(0X4473991C);
	make_array	(0X4473991C,	0X4);
	create_dword	(0X4473992C);
	make_array	(0X4473992C,	0X4);
	create_byte	(0X4473993D);
	make_array	(0X4473993D,	0X3);
	create_dword	(0X44739940);
	make_array	(0X44739940,	0X3);
	create_dword	(0X4473994C);
	make_array	(0X4473994C,	0X4);
	create_dword	(0X4473995C);
	make_array	(0X4473995C,	0X4);
	create_byte	(0X4473996D);
	make_array	(0X4473996D,	0X3);
	create_dword	(0X44739970);
	make_array	(0X44739970,	0X3);
	create_dword	(0X4473997C);
	make_array	(0X4473997C,	0X4);
	create_dword	(0X4473998C);
	make_array	(0X4473998C,	0X4);
	create_byte	(0X4473999D);
	make_array	(0X4473999D,	0X3);
	create_dword	(0X447399A0);
	make_array	(0X447399A0,	0X3);
	create_dword	(0X447399AC);
	make_array	(0X447399AC,	0X4);
	create_dword	(0X447399BC);
	make_array	(0X447399BC,	0X4);
	create_byte	(0X447399CD);
	make_array	(0X447399CD,	0X3);
	create_dword	(0X447399D0);
	make_array	(0X447399D0,	0X3);
	create_dword	(0X447399DC);
	make_array	(0X447399DC,	0X4);
	create_dword	(0X447399EC);
	make_array	(0X447399EC,	0X4);
	create_byte	(0X447399FD);
	make_array	(0X447399FD,	0X3);
	create_dword	(0X44739A00);
	make_array	(0X44739A00,	0X3);
	create_dword	(0X44739A0C);
	make_array	(0X44739A0C,	0X4);
	create_dword	(0X44739A1C);
	make_array	(0X44739A1C,	0X4);
	create_byte	(0X44739A2D);
	make_array	(0X44739A2D,	0X3);
	create_dword	(0X44739A30);
	make_array	(0X44739A30,	0X3);
	create_dword	(0X44739A3C);
	make_array	(0X44739A3C,	0X4);
	create_dword	(0X44739A4C);
	make_array	(0X44739A4C,	0X4);
	create_byte	(0X44739A5D);
	make_array	(0X44739A5D,	0X3);
	create_dword	(0X44739A60);
	make_array	(0X44739A60,	0X3);
	create_dword	(0X44739A6C);
	make_array	(0X44739A6C,	0X4);
	create_dword	(0X44739A7C);
	make_array	(0X44739A7C,	0X4);
	create_byte	(0X44739A8D);
	make_array	(0X44739A8D,	0X3);
	create_dword	(0X44739A90);
	make_array	(0X44739A90,	0X3);
	create_dword	(0X44739A9C);
	make_array	(0X44739A9C,	0X4);
	create_dword	(0X44739AAC);
	make_array	(0X44739AAC,	0X4);
	create_byte	(0X44739ABD);
	make_array	(0X44739ABD,	0X3);
	create_dword	(0X44739AC0);
	make_array	(0X44739AC0,	0X3);
	create_dword	(0X44739ACC);
	make_array	(0X44739ACC,	0X4);
	create_dword	(0X44739ADC);
	make_array	(0X44739ADC,	0X4);
	create_byte	(0X44739AED);
	make_array	(0X44739AED,	0X3);
	create_dword	(0X44739AF0);
	make_array	(0X44739AF0,	0X3);
	create_dword	(0X44739AFC);
	make_array	(0X44739AFC,	0X4);
	create_dword	(0X44739B0C);
	make_array	(0X44739B0C,	0X4);
	create_byte	(0X44739B1D);
	make_array	(0X44739B1D,	0X3);
	create_dword	(0X44739B20);
	make_array	(0X44739B20,	0X3);
	create_dword	(0X44739B2C);
	make_array	(0X44739B2C,	0X4);
	create_dword	(0X44739B3C);
	make_array	(0X44739B3C,	0X4);
	create_byte	(0X44739B4D);
	make_array	(0X44739B4D,	0X3);
	create_dword	(0X44739B50);
	make_array	(0X44739B50,	0X3);
	create_dword	(0X44739B5C);
	make_array	(0X44739B5C,	0X4);
	create_dword	(0X44739B6C);
	make_array	(0X44739B6C,	0X4);
	create_byte	(0X44739B7D);
	make_array	(0X44739B7D,	0X3);
	create_dword	(0X44739B80);
	make_array	(0X44739B80,	0X3);
	create_dword	(0X44739B8C);
	make_array	(0X44739B8C,	0X4);
	create_dword	(0X44739B9C);
	make_array	(0X44739B9C,	0X4);
	create_byte	(0X44739BAD);
	make_array	(0X44739BAD,	0X3);
	create_dword	(0X44739BB0);
	make_array	(0X44739BB0,	0X3);
	create_dword	(0X44739BBC);
	make_array	(0X44739BBC,	0X4);
	create_dword	(0X44739BCC);
	make_array	(0X44739BCC,	0X4);
	create_byte	(0X44739BDD);
	make_array	(0X44739BDD,	0X3);
	create_dword	(0X44739BE0);
	make_array	(0X44739BE0,	0X3);
	create_dword	(0X44739BEC);
	make_array	(0X44739BEC,	0X4);
	create_dword	(0X44739BFC);
	make_array	(0X44739BFC,	0X4);
	create_byte	(0X44739C0D);
	make_array	(0X44739C0D,	0X3);
	create_dword	(0X44739C10);
	make_array	(0X44739C10,	0X3);
	create_dword	(0X44739C1C);
	make_array	(0X44739C1C,	0X4);
	create_dword	(0X44739C2C);
	make_array	(0X44739C2C,	0X4);
	create_byte	(0X44739C3D);
	make_array	(0X44739C3D,	0X3);
	create_dword	(0X44739C40);
	make_array	(0X44739C40,	0X3);
	create_dword	(0X44739C4C);
	make_array	(0X44739C4C,	0X4);
	create_dword	(0X44739C5C);
	create_dword	(0X44739C60);
	create_qword	(0X44739C64);
	create_dword	(0X44739C6C);
	create_dword	(0X44739C70);
	create_dword	(0X44739C74);
	create_dword	(0X44739C78);
	create_dword	(0X44739C7C);
	create_dword	(0X44739C80);
	create_dword	(0X44739C84);
	create_dword	(0X44739C88);
	create_dword	(0X44739C8C);
	create_dword	(0X44739C90);
	create_dword	(0X44739C94);
	create_dword	(0X44739C98);
	create_dword	(0X44739C9C);
	make_array	(0X44739C9C,	0X40);
	create_dword	(0X44739D9C);
	create_dword	(0X44739DA0);
	create_dword	(0X44739DA4);
	create_dword	(0X44739DA8);
	create_dword	(0X44739DAC);
	set_name	(0X44739DAC,	"C_SDK::NetVars::m_iTeamNum");
	create_dword	(0X44739DB0);
	create_byte	(0X44739DB4);
	create_byte	(0X44739DB5);
	make_array	(0X44739DB6,	0X2);
	create_dword	(0X44739DB8);
	create_dword	(0X44739DBC);
	create_dword	(0X44739DC0);
	create_byte	(0X44739DC4);
	create_byte	(0X44739DC5);
	make_array	(0X44739DC6,	0X2);
	create_dword	(0X44739DC8);
	create_dword	(0X44739DCC);
	create_dword	(0X44739DD0);
	create_byte	(0X44739DD4);
	make_array	(0X44739DD5,	0X3);
	create_dword	(0X44739DD8);
	create_dword	(0X44739DDC);
	create_dword	(0X44739DE0);
	set_name	(0X44739DE0,	"C_SDK::NetVars::m_flVelocityModifier");
	create_dword	(0X44739DE4);
	set_name	(0X44739DE4,	"C_SDK::NetVars::m_hViewModel");
	create_dword	(0X44739DE8);
	set_name	(0X44739DE8,	"C_SDK::NetVars::m_viewPunchAngle");
	create_dword	(0X44739DEC);
	set_name	(0X44739DEC,	"C_SDK::NetVars::m_flCycle");
	create_dword	(0X44739DF0);
	set_name	(0X44739DF0,	"C_SDK::NetVars::m_angViewAngles");
	create_dword	(0X44739DF4);
	create_dword	(0X44739DF8);
	create_dword	(0X44739DFC);
	create_dword	(0X44739E00);
	create_dword	(0X44739E04);
	create_dword	(0X44739E08);
	create_dword	(0X44739E0C);
	create_dword	(0X44739E10);
	create_dword	(0X44739E14);
	create_dword	(0X44739E18);
	create_dword	(0X44739E1C);
	create_dword	(0X44739E20);
	create_dword	(0X44739E24);
	create_dword	(0X44739E28);
	create_dword	(0X44739E2C);
	create_dword	(0X44739E30);
	create_dword	(0X44739E34);
	create_dword	(0X44739E38);
	make_array	(0X44739E3C,	0X4);
	make_array	(0X44739E41,	0X7);
	create_dword	(0X44739E48);
	create_dword	(0X44739E4C);
	create_dword	(0X44739E50);
	create_dword	(0X44739E54);
	create_dword	(0X44739E58);
	create_dword	(0X44739E5C);
	set_name	(0X44739E5C,	"C_SDK::NetVars::m_flNextPrimaryAttack");
	create_dword	(0X44739E60);
	create_dword	(0X44739E64);
	set_name	(0X44739E64,	"C_SDK::NetVars::m_iClip1");
	create_dword	(0X44739E68);
	set_name	(0X44739E68,	"C_SDK::NetVars::m_iMyWeapons");
	create_dword	(0X44739E6C);
	create_dword	(0X44739E70);
	create_dword	(0X44739E74);
	create_dword	(0X44739E78);
	set_name	(0X44739E78,	"C_SDK::NetVars::m_CollisionGroup");
	create_dword	(0X44739E7C);
	set_name	(0X44739E7C,	"C_SDK::NetVars::m_flNextAttack");
	create_dword	(0X44739E80);
	create_dword	(0X44739E84);
	create_dword	(0X44739E88);
	create_dword	(0X44739E8C);
	create_dword	(0X44739E90);
	set_name	(0X44739E90,	"C_SDK::NetVars::m_iBlockingUseActionInProgress");
	create_dword	(0X44739E94);
	create_dword	(0X44739E98);
	create_dword	(0X44739E9C);
	create_dword	(0X44739EA0);
	create_dword	(0X44739EA4);
	create_dword	(0X44739EA8);
	set_name	(0X44739EA8,	"C_SDK::NetVars::m_hObserverTarget");
	make_array	(0X44739EAC,	0X4);
	create_byte	(0X44739EB0);
	make_array	(0X44739EB1,	0X3);
	create_dword	(0X44739EB4);
	make_array	(0X44739EB4,	0X7F);
	create_byte	(0X4473A0B0);
	make_array	(0X4473A0B1,	0X3);
	create_dword	(0X4473A0B4);
	make_array	(0X4473A0B4,	0X7F);
	create_byte	(0X4473A2B0);
	create_byte	(0X4473A2B1);
	make_array	(0X4473A2B1,	0X3);
	create_dword	(0X4473A2B4);
	make_array	(0X4473A2B4,	0X7F);
	create_byte	(0X4473A4B0);
	make_array	(0X4473A4B2,	0X2);
	create_dword	(0X4473A4B4);
	make_array	(0X4473A4B4,	0X7F);
	create_byte	(0X4473A6B0);
	make_array	(0X4473A6B1,	0X3);
	create_dword	(0X4473A6B4);
	make_array	(0X4473A6B4,	0X7F);
	create_byte	(0X4473A8B0);
	make_array	(0X4473A8B1,	0X3);
	create_dword	(0X4473A8B4);
	make_array	(0X4473A8B4,	0X7F);
	create_byte	(0X4473AAB0);
	create_byte	(0X4473AAB3);
	create_dword	(0X4473AAB4);
	make_array	(0X4473AAB4,	0X7F);
	create_dword	(0X4473ACB0);
	create_dword	(0X4473ACB4);
	create_dword	(0X4473ACB8);
	create_dword	(0X4473ACBC);
	create_dword	(0X4473ACC0);
	create_dword	(0X4473ACC4);
	create_dword	(0X4473ACC8);
	create_dword	(0X4473ACCC);
	create_dword	(0X4473AEB0);
	create_dword	(0X4473AEB4);
	create_dword	(0X4473AEB8);
	create_float	(0X4473AEBC);
	create_dword	(0X4473AEC0);
	create_dword	(0X4473AEC4);
	create_float	(0X4473AEC8);
	make_array	(0X4473AECC,	0X4);
	create_dword	(0X4473AED0);
	create_dword	(0X4473AED4);
	create_float	(0X4473AED8);
	create_dword	(0X4473AEDC);
	create_dword	(0X4473AEE0);
	create_dword	(0X4473AEE4);
	create_dword	(0X4473AEE8);
	create_dword	(0X4473AEEC);
	create_dword	(0X4473AEF0);
	create_dword	(0X4473AEF4);
	create_dword	(0X4473AEF8);
	create_dword	(0X4473AEFC);
	create_dword	(0X4473AF00);
	create_dword	(0X4473AF04);
	create_dword	(0X4473AF08);
	create_dword	(0X4473AF0C);
	create_dword	(0X4473AF10);
	create_dword	(0X4473AF14);
	create_dword	(0X4473AF18);
	create_dword	(0X4473AF1C);
	create_dword	(0X4473AF20);
	create_dword	(0X4473AF24);
	create_dword	(0X4473AF28);
	create_dword	(0X4473AF2C);
	create_dword	(0X4473AF30);
	create_dword	(0X4473AF34);
	create_dword	(0X4473AF38);
	create_dword	(0X4473AF3C);
	create_dword	(0X4473AF40);
	create_dword	(0X4473AF44);
	create_dword	(0X4473AF48);
	create_dword	(0X4473AF4C);
	create_dword	(0X4473AF50);
	create_dword	(0X4473AF54);
	create_dword	(0X4473AF58);
	create_dword	(0X4473AF5C);
	create_dword	(0X4473AF60);
	create_dword	(0X4473AF64);
	create_dword	(0X4473AF68);
	create_dword	(0X4473AF6C);
	create_dword	(0X4473AF70);
	create_dword	(0X4473AF74);
	create_dword	(0X4473AF78);
	create_dword	(0X4473AF7C);
	create_dword	(0X4473AF80);
	create_dword	(0X4473AF84);
	create_dword	(0X4473AF88);
	create_dword	(0X4473AF8C);
	create_dword	(0X4473AF90);
	create_dword	(0X4473AF94);
	create_dword	(0X4473AF98);
	create_dword	(0X4473AF9C);
	create_dword	(0X4473AFA0);
	create_dword	(0X4473AFA4);
	create_dword	(0X4473AFA8);
	create_dword	(0X4473AFAC);
	create_dword	(0X4473AFB0);
	create_dword	(0X4473AFB4);
	create_dword	(0X4473AFB8);
	create_dword	(0X4473AFBC);
	create_dword	(0X4473AFC0);
	create_dword	(0X4473AFC4);
	create_dword	(0X4473AFC8);
	create_dword	(0X4473AFCC);
	create_dword	(0X4473AFD0);
	create_dword	(0X4473AFD4);
	create_dword	(0X4473AFD8);
	create_dword	(0X4473AFDC);
	create_dword	(0X4473AFE0);
	create_dword	(0X4473AFE4);
	create_dword	(0X4473AFE8);
	create_dword	(0X4473AFEC);
	create_dword	(0X4473AFF0);
	create_dword	(0X4473AFF4);
	create_dword	(0X4473AFF8);
	create_dword	(0X4473AFFC);
	create_dword	(0X4473B000);
	create_dword	(0X4473B004);
	create_dword	(0X4473B008);
	create_dword	(0X4473B00C);
	create_dword	(0X4473B010);
	create_dword	(0X4473B014);
	create_dword	(0X4473B018);
	create_dword	(0X4473B01C);
	create_dword	(0X4473B020);
	create_dword	(0X4473B024);
	create_dword	(0X4473B028);
	create_dword	(0X4473B02C);
	create_dword	(0X4473B030);
	create_dword	(0X4473B034);
	create_dword	(0X4473B038);
	create_dword	(0X4473B03C);
	create_dword	(0X4473B040);
	create_dword	(0X4473B044);
	create_dword	(0X4473B048);
	create_dword	(0X4473B04C);
	create_dword	(0X4473B050);
	create_dword	(0X4473B054);
	create_dword	(0X4473B058);
	create_dword	(0X4473B05C);
	create_dword	(0X4473B060);
	create_dword	(0X4473B064);
	create_dword	(0X4473B068);
	create_dword	(0X4473B06C);
	create_dword	(0X4473B070);
	create_dword	(0X4473B074);
	create_dword	(0X4473B078);
	create_dword	(0X4473B07C);
	create_dword	(0X4473B080);
	create_dword	(0X4473B084);
	create_dword	(0X4473B088);
	create_dword	(0X4473B08C);
	create_dword	(0X4473B090);
	create_dword	(0X4473B094);
	create_dword	(0X4473B098);
	create_dword	(0X4473B09C);
	create_dword	(0X4473B0A0);
	create_dword	(0X4473B0A4);
	create_dword	(0X4473B0A8);
	create_dword	(0X4473B0AC);
	create_dword	(0X4473B0B0);
	create_dword	(0X4473B0B4);
	create_dword	(0X4473B0B8);
	create_dword	(0X4473B0BC);
	create_dword	(0X4473B0C0);
	create_dword	(0X4473B0C4);
	create_dword	(0X4473B0C8);
	create_dword	(0X4473B0CC);
	create_dword	(0X4473B0D0);
	create_dword	(0X4473B0D4);
	create_dword	(0X4473B0D8);
	create_dword	(0X4473B0DC);
	create_dword	(0X4473B0E0);
	create_dword	(0X4473B0E4);
	create_dword	(0X4473B0E8);
	create_dword	(0X4473B0EC);
	create_dword	(0X4473B0F0);
	create_dword	(0X4473B0F4);
	create_dword	(0X4473B0F8);
	create_dword	(0X4473B0FC);
	create_dword	(0X4473B100);
	create_dword	(0X4473B104);
	create_dword	(0X4473B108);
	create_dword	(0X4473B10C);
	create_dword	(0X4473B110);
	create_dword	(0X4473B114);
	create_dword	(0X4473B118);
	create_dword	(0X4473B11C);
	create_dword	(0X4473B120);
	create_dword	(0X4473B124);
	create_dword	(0X4473B128);
	create_dword	(0X4473B12C);
	create_dword	(0X4473B130);
	create_dword	(0X4473B134);
	create_dword	(0X4473B138);
	create_dword	(0X4473B13C);
	create_dword	(0X4473B140);
	create_dword	(0X4473B144);
	create_dword	(0X4473B148);
	create_dword	(0X4473B14C);
	create_dword	(0X4473B150);
	create_dword	(0X4473B154);
	create_dword	(0X4473B158);
	create_dword	(0X4473B15C);
	create_dword	(0X4473B160);
	create_dword	(0X4473B164);
	create_dword	(0X4473B168);
	create_dword	(0X4473B16C);
	create_dword	(0X4473B170);
	create_dword	(0X4473B174);
	create_dword	(0X4473B178);
	create_dword	(0X4473B17C);
	create_dword	(0X4473B180);
	create_dword	(0X4473B184);
	create_dword	(0X4473B188);
	create_dword	(0X4473B18C);
	create_dword	(0X4473B190);
	create_dword	(0X4473B194);
	create_dword	(0X4473B198);
	create_dword	(0X4473B19C);
	create_dword	(0X4473B1A0);
	create_dword	(0X4473B1A4);
	create_dword	(0X4473B1A8);
	create_dword	(0X4473B1AC);
	create_dword	(0X4473B1B0);
	create_dword	(0X4473B1B4);
	create_dword	(0X4473B1B8);
	create_dword	(0X4473B1BC);
	create_dword	(0X4473B1C0);
	create_dword	(0X4473B1C4);
	create_dword	(0X4473B1C8);
	create_dword	(0X4473B1CC);
	create_dword	(0X4473B1D0);
	create_dword	(0X4473B1D4);
	create_dword	(0X4473B1D8);
	create_dword	(0X4473B1DC);
	create_dword	(0X4473B1E0);
	create_dword	(0X4473B1E4);
	create_dword	(0X4473B1E8);
	create_dword	(0X4473B1EC);
	create_dword	(0X4473B1F0);
	create_dword	(0X4473B1F4);
	create_dword	(0X4473B1F8);
	create_dword	(0X4473B1FC);
	create_dword	(0X4473B200);
	create_dword	(0X4473B204);
	create_dword	(0X4473B208);
	create_dword	(0X4473B20C);
	create_dword	(0X4473B210);
	create_dword	(0X4473B214);
	create_dword	(0X4473B218);
	create_dword	(0X4473B21C);
	create_dword	(0X4473B220);
	create_dword	(0X4473B224);
	create_dword	(0X4473B228);
	create_dword	(0X4473B22C);
	create_dword	(0X4473B230);
	create_dword	(0X4473B234);
	create_dword	(0X4473B238);
	create_dword	(0X4473B23C);
	create_dword	(0X4473B240);
	create_dword	(0X4473B244);
	create_dword	(0X4473B248);
	create_dword	(0X4473B24C);
	create_dword	(0X4473B250);
	create_dword	(0X4473B254);
	create_dword	(0X4473B258);
	create_dword	(0X4473B25C);
	create_dword	(0X4473B260);
	create_dword	(0X4473B264);
	create_dword	(0X4473B268);
	create_dword	(0X4473B26C);
	create_dword	(0X4473B270);
	create_dword	(0X4473B274);
	create_dword	(0X4473B278);
	create_dword	(0X4473B27C);
	create_dword	(0X4473B280);
	create_dword	(0X4473B284);
	create_dword	(0X4473B288);
	create_dword	(0X4473B28C);
	create_dword	(0X4473B290);
	create_dword	(0X4473B294);
	create_dword	(0X4473B298);
	create_dword	(0X4473B29C);
	create_dword	(0X4473B2A0);
	create_dword	(0X4473B2A4);
	create_dword	(0X4473B2A8);
	create_dword	(0X4473B2AC);
	create_dword	(0X4473B2B0);
	create_dword	(0X4473B2B4);
	create_dword	(0X4473B2B8);
	create_dword	(0X4473B2BC);
	create_dword	(0X4473B2C0);
	create_dword	(0X4473B2C4);
	create_dword	(0X4473B2C8);
	create_dword	(0X4473B2CC);
	create_dword	(0X4473B2D0);
	create_dword	(0X4473B2D4);
	create_byte	(0X4473B2D8);
	make_array	(0X4473B2D9,	0X3);
	create_dword	(0X4473B2DC);
	create_byte	(0X4473B2E0);
	make_array	(0X4473B2E1,	0X3);
	create_dword	(0X4473B2E4);
	create_dword	(0X4473B2E8);
	set_name	(0X4473B2E8,	"interface");
	create_dword	(0X4473B2EC);
	create_dword	(0X4473B2F0);
	create_dword	(0X4473B2F4);
	create_dword	(0X4473B2F8);
	create_dword	(0X4473B2FC);
	create_dword	(0X4473B300);
	create_dword	(0X4473B304);
	create_byte	(0X4473B308);
	make_array	(0X4473B309,	0X3);
	create_dword	(0X4473B30C);
	create_byte	(0X4473B310);
	make_array	(0X4473B311,	0X3);
	create_dword	(0X4473B314);
	create_dword	(0X4473B318);
	create_dword	(0X4473B31C);
	create_dword	(0X4473B320);
	create_dword	(0X4473B324);
	create_byte	(0X4473B328);
	make_array	(0X4473B329,	0X3);
	create_dword	(0X4473B32C);
	create_dword	(0X4473B330);
	create_dword	(0X4473B334);
	create_dword	(0X4473B338);
	create_dword	(0X4473B33C);
	create_dword	(0X4473B340);
	create_dword	(0X4473B344);
	create_dword	(0X4473B348);
	create_dword	(0X4473B34C);
	create_dword	(0X4473B350);
	create_dword	(0X4473B354);
	create_dword	(0X4473B358);
	create_dword	(0X4473B35C);
	create_dword	(0X4473B360);
	create_dword	(0X4473B364);
	create_dword	(0X4473B368);
	create_dword	(0X4473B36C);
	create_dword	(0X4473B370);
	create_byte	(0X4473B374);
	make_array	(0X4473B375,	0X3);
	create_dword	(0X4473B378);
	create_dword	(0X4473B37C);
	create_dword	(0X4473B380);
	create_dword	(0X4473B384);
	create_dword	(0X4473B388);
	create_dword	(0X4473B38C);
	create_dword	(0X4473B390);
	create_dword	(0X4473B394);
	create_dword	(0X4473B398);
	create_dword	(0X4473B39C);
	create_dword	(0X4473B3A0);
	create_dword	(0X4473B3A4);
	create_dword	(0X4473B3A8);
	create_dword	(0X4473B3AC);
	create_dword	(0X4473B3B0);
	create_dword	(0X4473B3B4);
	create_dword	(0X4473B3B8);
	create_dword	(0X4473B3BC);
	create_dword	(0X4473B3C0);
	create_dword	(0X4473B3C4);
	create_dword	(0X4473B3C8);
	create_dword	(0X4473B3CC);
	create_dword	(0X4473B3D0);
	create_dword	(0X4473B3D4);
	create_dword	(0X4473B3D8);
	create_dword	(0X4473B3DC);
	create_dword	(0X4473B3E0);
	create_dword	(0X4473B3E4);
	create_dword	(0X4473B3E8);
	create_dword	(0X4473B3EC);
	create_dword	(0X4473B3F0);
	create_dword	(0X4473B3F4);
	create_dword	(0X4473B3F8);
	create_dword	(0X4473B3FC);
	create_dword	(0X4473B400);
	create_dword	(0X4473B404);
	create_dword	(0X4473B408);
	create_dword	(0X4473B40C);
	create_dword	(0X4473B410);
	create_dword	(0X4473B414);
	create_dword	(0X4473B418);
	create_dword	(0X4473B41C);
	create_dword	(0X4473B420);
	create_dword	(0X4473B424);
	create_dword	(0X4473B428);
	create_dword	(0X4473B42C);
	create_dword	(0X4473B430);
	create_dword	(0X4473B434);
	create_dword	(0X4473B438);
	create_dword	(0X4473B43C);
	create_dword	(0X4473B440);
	create_dword	(0X4473B444);
	create_dword	(0X4473B448);
	create_dword	(0X4473B44C);
	create_dword	(0X4473B450);
	create_dword	(0X4473B454);
	create_dword	(0X4473B458);
	create_dword	(0X4473B45C);
	create_dword	(0X4473B460);
	create_dword	(0X4473B464);
	create_dword	(0X4473B468);
	create_dword	(0X4473B46C);
	create_dword	(0X4473B470);
	create_dword	(0X4473B474);
	create_dword	(0X4473B478);
	create_dword	(0X4473B47C);
	create_dword	(0X4473B480);
	create_dword	(0X4473B484);
	create_dword	(0X4473B488);
	create_dword	(0X4473B48C);
	create_dword	(0X4473B490);
	create_dword	(0X4473B494);
	create_dword	(0X4473B498);
	create_dword	(0X4473B49C);
	create_dword	(0X4473B4A0);
	create_dword	(0X4473B4A4);
	create_dword	(0X4473B4A8);
	create_dword	(0X4473B4AC);
	create_dword	(0X4473B4B0);
	create_dword	(0X4473B4B4);
	create_dword	(0X4473B4B8);
	create_dword	(0X4473B4BC);
	create_dword	(0X4473B4C0);
	create_dword	(0X4473B4C4);
	create_dword	(0X4473B4C8);
	create_dword	(0X4473B4CC);
	create_dword	(0X4473B4D0);
	create_dword	(0X4473B4D4);
	create_dword	(0X4473B4D8);
	create_dword	(0X4473B4DC);
	create_dword	(0X4473B4E0);
	create_dword	(0X4473B4E4);
	create_dword	(0X4473B4E8);
	create_dword	(0X4473B4EC);
	create_dword	(0X4473B4F0);
	create_dword	(0X4473B4F4);
	create_dword	(0X4473B4F8);
	create_dword	(0X4473B4FC);
	create_dword	(0X4473B500);
	create_dword	(0X4473B504);
	create_dword	(0X4473B508);
	create_dword	(0X4473B50C);
	create_dword	(0X4473B510);
	create_dword	(0X4473B514);
	create_dword	(0X4473B518);
	create_dword	(0X4473B51C);
	create_dword	(0X4473B520);
	create_dword	(0X4473B524);
	create_dword	(0X4473B528);
	create_dword	(0X4473B52C);
	create_dword	(0X4473B530);
	create_dword	(0X4473B534);
	create_dword	(0X4473B538);
	create_dword	(0X4473B53C);
	create_dword	(0X4473B540);
	create_dword	(0X4473B544);
	create_dword	(0X4473B548);
	create_dword	(0X4473B54C);
	create_dword	(0X4473B550);
	create_dword	(0X4473B554);
	create_dword	(0X4473B558);
	create_dword	(0X4473B55C);
	create_dword	(0X4473B560);
	create_dword	(0X4473B564);
	create_dword	(0X4473B568);
	create_dword	(0X4473B56C);
	create_dword	(0X4473B570);
	create_dword	(0X4473B574);
	create_dword	(0X4473B578);
	create_dword	(0X4473B57C);
	create_dword	(0X4473B580);
	create_dword	(0X4473B584);
	make_array	(0X4473B589,	0X3);
	create_dword	(0X4473B58C);
	make_array	(0X4473B58C,	0X7D);
	create_dword	(0X4473B780);
	create_dword	(0X4473B784);
	create_byte	(0X4473B788);
	make_array	(0X4473B789,	0X3);
	create_float	(0X4473B78C);
	create_dword	(0X4473B790);
	create_dword	(0X4473B794);
	create_dword	(0X4473B798);
	create_byte	(0X4473B79C);
	create_byte	(0X4473B79D);
	make_array	(0X4473B79E,	0X2);
	create_dword	(0X4473B7A0);
	create_byte	(0X4473B7A4);
	make_array	(0X4473B7A5,	0X3);
	create_dword	(0X4473B7A8);
	create_dword	(0X4473B7AC);
	create_dword	(0X4473B7B0);
	create_dword	(0X4473B7B4);
	create_dword	(0X4473B7B8);
	set_name	(0X4473B7B8,	"C_SDK::NetVars::m_hActiveWeapon");
	create_dword	(0X4473B7BC);
	create_dword	(0X4473B7C0);
	set_name	(0X4473B7C0,	"C_SDK::Player::GetEffects");
	create_dword	(0X4473B7C4);
	create_dword	(0X4473B7C8);
	create_dword	(0X4473B7CC);
	create_dword	(0X4473B7D0);
	create_dword	(0X4473B7D4);
	create_dword	(0X4473B7D8);
	create_dword	(0X4473B7DC);
	create_dword	(0X4473B7E0);
	create_dword	(0X4473B7E4);
	create_dword	(0X4473B7E8);
	create_dword	(0X4473B7EC);
	create_dword	(0X4473B7F0);
	create_dword	(0X4473B7F4);
	create_dword	(0X4473B7F8);
	create_dword	(0X4473B7FC);
	create_dword	(0X4473B800);
	create_dword	(0X4473B804);
	create_dword	(0X4473B808);
	make_array	(0X4473B80C,	0X4);
	create_byte	(0X4473B810);
	make_array	(0X4473B812,	0X2);
	create_dword	(0X4473B814);
	make_array	(0X4473B814,	0X7F);
	create_byte	(0X4473BA10);
	create_byte	(0X4473BA11);
	make_array	(0X4473BA11,	0X3);
	create_dword	(0X4473BA14);
	make_array	(0X4473BA14,	0X7F);
	create_dword	(0X4473BC10);
	create_dword	(0X4473BC14);
	create_dword	(0X4473BC18);
	create_dword	(0X4473BC1C);
	create_dword	(0X4473BC20);
	create_dword	(0X4473BC24);
	set_name	(0X4473BC24,	"OneTap::Globals::CVar::InBullRush");
	create_dword	(0X4473BC28);
	set_name	(0X4473BC28,	"OneTap::Globals::CVar::TickbaseShift");
	create_dword	(0X4473BC2C);
	set_name	(0X4473BC2C,	"OneTap::Globals::CVar::AnimstateMod");
	create_byte	(0X4473BC30);
	make_array	(0X4473BC31,	0X3);
	create_dword	(0X4473BC34);
	set_name	(0X4473BC34,	"C_SDK::Globals::RunCommand::WeaponCycle");
	create_dword	(0X4473BC38);
	create_dword	(x=0X4473BC3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4473BC40);
	create_dword	(0X4473BC44);
	create_dword	(0X4473BC48);
	create_dword	(0X4473BC4C);
	create_dword	(0X4473BC50);
	create_dword	(0X4473BC54);
	make_array	(0X4473BC54,	0X2);
	create_dword	(0X4473BC5C);
	create_dword	(0X4473BC60);
	create_dword	(0X4473BC64);
	create_dword	(0X4473BC68);
	create_qword	(0X4473BC6C);
	create_dword	(0X4473BC74);
	create_dword	(0X4473BC78);
	create_dword	(0X4473BC7C);
	set_name	(0X4473BC7C,	"distAngle");
	create_dword	(0X4473BC80);
	create_dword	(0X4473BC84);
	create_dword	(0X4473BC88);
	set_name	(0X4473BC88,	"OneTap::Globals::vTable");
	create_dword	(0X4473BC8C);
	create_dword	(0X4473BC90);
	create_dword	(0X4473BC94);
	create_dword	(0X4473BC98);
	create_dword	(0X4473BC9C);
	create_dword	(0X4473BCA0);
	create_dword	(0X4473BCA4);
	create_dword	(0X4473BCA8);
	create_dword	(0X4473BCAC);
	create_dword	(0X4473BCB0);
	create_dword	(0X4473BCB4);
	set_name	(0X4473BCB4,	"C_SDK::Globals::NtDll::AllocateVirtualMemory");
	create_dword	(0X4473BCB8);
	create_dword	(0X4473BCBC);
	create_dword	(0X4473BCC0);
	create_dword	(0X4473BCC4);
	create_dword	(0X4473BCC8);
	create_dword	(0X4473BCCC);
	create_dword	(0X4473BCD0);
	create_dword	(0X4473BCD4);
	create_dword	(0X4473BCD8);
	create_dword	(0X4473BCDC);
	create_dword	(0X4473BCE0);
	create_dword	(0X4473BCE4);
	create_dword	(0X4473BCE8);
	create_dword	(0X4473BCEC);
	create_dword	(0X4473BCF0);
	create_dword	(0X4473BCF4);
	create_dword	(0X4473BCF8);
	create_dword	(0X4473BCFC);
	create_dword	(0X4473BD00);
	create_dword	(0X4473BD04);
	create_dword	(0X4473BD08);
	create_dword	(0X4473BD0C);
	create_dword	(0X4473BD10);
	create_dword	(0X4473BD14);
	create_dword	(0X4473BD18);
	make_array	(0X4473BD1C,	0X4);
	create_dword	(x=0X4473BD20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X4473BD24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4473BD28);
	create_dword	(0X4473BD2C);
	create_dword	(0X4473BD30);
	make_array	(0X4473BD30,	0X2);
	create_dword	(0X4473BD38);
	create_dword	(0X4473BD3C);
	create_dword	(0X4473BD40);
	create_dword	(0X4473BD44);
	create_dword	(0X4473BD48);
	create_dword	(0X4473BD4C);
	create_dword	(0X4473BD50);
	create_dword	(0X4473BD54);
	create_dword	(0X4473BD58);
	create_dword	(0X4473BD5C);
	make_array	(0X4473BD5C,	0X3);
	create_dword	(0X4473BD68);
	create_dword	(0X4473BD6C);
	create_dword	(0X4473BD70);
	create_dword	(0X4473BD74);
	create_dword	(0X4473BD78);
	create_dword	(0X4473BD7C);
	create_dword	(0X4473BD80);
	create_dword	(0X4473BD84);
	create_dword	(0X4473BD88);
	create_dword	(0X4473BD8C);
	create_dword	(0X4473BD90);
	create_dword	(0X4473BD94);
	create_dword	(0X4473BD98);
	create_dword	(0X4473BD9C);
	create_dword	(0X4473BDA0);
	create_dword	(0X4473BDA4);
	create_dword	(0X4473BDA8);
	create_dword	(0X4473BDAC);
	create_dword	(0X4473BDB0);
	create_dword	(0X4473BDB4);
	create_dword	(0X4473BDB8);
	create_dword	(0X4473BDBC);
	create_dword	(0X4473BDC0);
	create_dword	(0X4473BDC4);
	create_dword	(0X4473BDC8);
	create_dword	(0X4473BDCC);
	create_dword	(0X4473BDD0);
	create_dword	(0X4473BDD4);
	create_dword	(0X4473BDD8);
	create_dword	(0X4473BDDC);
	create_dword	(0X4473BDE0);
	create_dword	(0X4473BDE4);
	create_dword	(0X4473BDE8);
	create_dword	(0X4473BDEC);
	create_dword	(0X4473BDF0);
	create_dword	(0X4473BDF4);
	create_dword	(0X4473BDF8);
	create_dword	(0X4473BDFC);
	create_dword	(0X4473BE00);
	create_dword	(0X4473BE04);
	create_dword	(0X4473BE08);
	create_dword	(0X4473BE0C);
	create_dword	(0X4473BE10);
	create_dword	(0X4473BE14);
	create_dword	(0X4473BE18);
	create_dword	(0X4473BE1C);
	create_dword	(0X4473BE20);
	create_dword	(0X4473BE24);
	create_dword	(0X4473BE28);
	create_dword	(0X4473BE2C);
	create_dword	(0X4473BE30);
	create_dword	(0X4473BE34);
	create_dword	(0X4473BE38);
	create_dword	(0X4473BE3C);
	create_dword	(0X4473BE40);
	create_dword	(0X4473BE44);
	create_dword	(0X4473BE48);
	create_dword	(0X4473BE4C);
	create_dword	(0X4473BE50);
	create_dword	(0X4473BE54);
	create_dword	(0X4473BE58);
	create_dword	(0X4473BE5C);
	create_dword	(0X4473BE60);
	create_dword	(0X4473BE64);
	create_dword	(0X4473BE68);
	create_dword	(0X4473BE6C);
	create_dword	(0X4473BE70);
	create_dword	(0X4473BE74);
	create_dword	(0X4473BE78);
	create_dword	(0X4473BE7C);
	create_dword	(0X4473BE80);
	create_dword	(0X4473BE84);
	create_dword	(0X4473BE88);
	create_dword	(0X4473BE8C);
	create_byte	(0X4473BE91);
	make_array	(0X4473BE91,	0X3);
	make_array	(0X4473BE94,	0X4);
	create_dword	(0X4473BE98);
	create_dword	(x=0X4473BE9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X4473BEA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4473BEA4);
	make_array	(0X4473BEA4,	0X3);
	make_array	(0X4473BEB1,	0X3);
	create_byte	(0X4473BEB5);
	make_array	(0X4473BEB5,	0X3);
	create_dword	(0X4473BEB8);
	create_byte	(0X4473BEBC);
	make_array	(0X4473BEBD,	0X3);
	create_byte	(0X4473BEC1);
	make_array	(0X4473BEC1,	0X3);
	create_byte	(0X4473BEC5);
	make_array	(0X4473BEC5,	0X3);
	create_dword	(0X4473BEC8);
	make_array	(0X4473BEC8,	0X2);
	create_dword	(0X4473BED0);
	create_dword	(0X4473BED4);
	create_dword	(0X4473BED8);
	create_dword	(0X4473BEDC);
	create_dword	(0X4473BEE0);
	create_dword	(0X4473BEE4);
	create_dword	(0X4473BEE8);
	create_dword	(0X4473BEEC);
	create_dword	(0X4473BEF0);
	create_dword	(0X4473BEF4);
	create_dword	(0X4473BEF8);
	create_dword	(x=0X4473BEFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X4473BF00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4473BF04);
	create_dword	(0X4473BF08);
	create_dword	(0X4473BF0C);
	create_dword	(0X4473BF10);
	create_dword	(0X4473BF14);
	create_dword	(0X4473BF18);
	create_byte	(0X4473BF1C);
	make_array	(0X4473BF1D,	0X3);
	create_float	(0X4473BF20);
	create_dword	(0X4473BF24);
	create_dword	(0X4473BF28);
	create_dword	(0X4473BF2C);
	create_dword	(0X4473BF30);
	create_dword	(0X4473BF34);
	create_dword	(0X4473BF38);
	create_dword	(0X4473BF3C);
	create_dword	(0X4473BF40);
	create_dword	(0X4473BF44);
	create_dword	(0X4473BF48);
	create_dword	(0X4473BF4C);
	create_dword	(0X4473BF50);
	create_dword	(x=0X4473BF54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X4473BF58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4473BF5C);
	create_dword	(0X4473BF60);
	create_dword	(0X4473BF64);
	create_dword	(0X4473BF68);
	create_dword	(0X4473BF6C);
	create_dword	(0X4473BF70);
	create_byte	(0X4473BF74);
	make_array	(0X4473BF75,	0X3);
	create_dword	(0X4473BF78);
	create_dword	(0X4473BF7C);
	create_dword	(0X4473BF80);
	create_dword	(0X4473BF84);
	create_dword	(0X4473BF88);
	create_dword	(0X4473BF8C);
	create_dword	(0X4473BF90);
	create_dword	(0X4473BF94);
	create_dword	(0X4473BF98);
	create_dword	(0X4473BF9C);
	create_dword	(0X4473BFA0);
	create_dword	(x=0X4473BFA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X4473BFA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4473BFAC);
	create_dword	(0X4473BFB0);
	create_dword	(0X4473BFB4);
	create_dword	(0X4473BFB8);
	create_dword	(0X4473BFBC);
	create_dword	(0X4473BFC0);
	create_dword	(0X4473BFC4);
	create_dword	(0X4473BFC8);
	create_dword	(0X4473BFCC);
	create_dword	(0X4473BFD0);
	create_dword	(0X4473BFD4);
	create_dword	(0X4473BFD8);
	create_dword	(0X4473BFDC);
	create_dword	(0X4473BFE0);
	create_dword	(0X4473BFE4);
	create_dword	(0X4473BFE8);
	create_dword	(0X4473BFEC);
	create_dword	(0X4473BFF0);
	create_dword	(0X4473BFF4);
	create_dword	(0X4473BFF8);
	create_dword	(0X4473BFFC);
	create_dword	(0X4473C000);
	create_dword	(0X4473C004);
	create_dword	(0X4473C008);
	create_dword	(x=0X4473C00C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X4473C010);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4473C014);
	create_dword	(0X4473C018);
	create_dword	(0X4473C01C);
	create_dword	(0X4473C020);
	create_dword	(0X4473C024);
	create_dword	(0X4473C028);
	create_dword	(0X4473C02C);
	create_dword	(0X4473C030);
	create_dword	(0X4473C034);
	create_dword	(0X4473C038);
	create_dword	(0X4473C03C);
	create_dword	(0X4473C040);
	create_dword	(0X4473C044);
	create_dword	(0X4473C048);
	create_dword	(0X4473C04C);
	create_dword	(0X4473C050);
	create_dword	(0X4473C054);
	create_dword	(0X4473C058);
	create_dword	(0X4473C05C);
	create_dword	(0X4473C060);
	create_dword	(0X4473C064);
	create_dword	(0X4473C068);
	create_dword	(0X4473C06C);
	create_dword	(0X4473C070);
	create_dword	(x=0X4473C074);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X4473C078);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4473C07C);
	create_byte	(0X4473C080);
	make_array	(0X4473C080,	0X5);
	make_array	(0X4473C085,	0X3);
	make_array	(0X4473C089,	0X3);
	create_dword	(0X4473C08C);
	create_dword	(0X4473C090);
	create_byte	(0X4473C094);
	make_array	(0X4473C095,	0X3);
	create_byte	(0X4473C099);
	make_array	(0X4473C099,	0X3);
	create_dword	(0X4473C09C);
	create_dword	(0X4473C0A0);
	make_array	(0X4473C0A0,	0X2);
	create_dword	(0X4473C0A8);
	create_dword	(0X4473C0AC);
	create_dword	(0X4473C0B0);
	create_dword	(0X4473C0B4);
	create_dword	(0X4473C0B8);
	create_dword	(0X4473C0BC);
	create_dword	(0X4473C0C0);
	create_dword	(0X4473C0C4);
	create_dword	(0X4473C0C8);
	create_dword	(0X4473C0CC);
	create_dword	(x=0X4473C0D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X4473C0D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4473C0D8);
	create_dword	(0X4473C0DC);
	create_dword	(0X4473C0E0);
	create_byte	(0X4473C0E4);
	make_array	(0X4473C0E5,	0X3);
	make_array	(0X4473C0E9,	0X7);
	create_byte	(0X4473C0F0);
	make_array	(0X4473C0F1,	0X3);
	create_dword	(0X4473C0F4);
	create_float	(0X4473C0F8);
	create_dword	(0X4473C0FC);
	make_array	(0X4473C0FC,	0X2);
	create_dword	(0X4473C104);
	create_dword	(0X4473C108);
	create_dword	(0X4473C10C);
	create_dword	(0X4473C110);
	create_dword	(0X4473C114);
	create_dword	(0X4473C118);
	create_dword	(0X4473C11C);
	create_dword	(0X4473C120);
	make_array	(0X4473C124,	0X4);
	create_byte	(0X4473C128);
	set_name	(0X4473C128,	"OneTap::Configuration::Properties::Buffer");
	make_array	(0X4473C129,	0X3);
	create_dword	(0X4473C12C);
	make_array	(0X4473C12C,	0X1F);
	create_dword	(0X4473C1A8);
	set_name	(0X4473C1A8,	"OneTap::Configuration::Properties::Exists");
	create_dword	(x=0X4473C1AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X4473C1B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4473C1B4);
	make_array	(0X4473C1B8,	0X8);
	create_byte	(0X4473C1C0);
	make_array	(0X4473C1C1,	0X3);
	create_dword	(0X4473C1C4);
	create_dword	(0X4473C1C8);
	create_byte	(0X4473C1CC);
	make_array	(0X4473C1CD,	0X3);
	create_byte	(0X4473C1D1);
	make_array	(0X4473C1D1,	0X3);
	create_dword	(0X4473C1D4);
	create_dword	(0X4473C1D8);
	make_array	(0X4473C1D8,	0X2);
	create_dword	(0X4473C1E0);
	create_dword	(0X4473C1E4);
	create_dword	(0X4473C1E8);
	make_array	(0X4473C1EC,	0X4);
	create_byte	(0X4473C1F0);
	make_array	(0X4473C1F1,	0X3);
	create_dword	(0X4473C1F4);
	make_array	(0X4473C1F4,	0X29);
	create_byte	(0X4473C298);
	make_array	(0X4473C299,	0X3);
	create_dword	(0X4473C29C);
	make_array	(0X4473C29C,	0X14);
	create_dword	(0X4473C2EC);
	make_array	(0X4473C2EC,	0X15);
	create_dword	(0X4473C340);
	create_dword	(0X4473C344);
	create_dword	(0X4473C348);
	create_dword	(0X4473C34C);
	create_dword	(0X4473C350);
	create_dword	(0X4473C354);
	create_dword	(0X4473C358);
	create_dword	(0X4473C35C);
	create_dword	(0X4473C360);
	create_dword	(0X4473C364);
	create_dword	(0X4473C368);
	create_byte	(0X4473C36C);
	make_array	(0X4473C36D,	0X3);
	create_dword	(0X4473C370);
	create_dword	(0X4473C374);
	create_dword	(0X4473C378);
	create_dword	(0X4473C37C);
	create_dword	(0X4473C380);
	create_dword	(0X4473C384);
	create_dword	(0X4473C388);
	create_dword	(0X4473C38C);
	create_dword	(0X4473C390);
	create_dword	(0X4473C394);
	create_dword	(0X4473C398);
	create_dword	(0X4473C39C);
	create_dword	(0X4473C3A0);
	create_dword	(0X4473C3A4);
	create_dword	(0X4473C3A8);
	create_qword	(0X4473C3AC);
	create_dword	(0X4473C3B4);
	create_qword	(0X4473C3B8);
	create_dword	(0X4473C3C0);
	make_array	(0X4473C3C4,	0XC);
	create_dword	(x=0X4473C3D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4473C3D4);
	create_dword	(0X4473C3D8);
	make_array	(0X4473C3D8,	0X8);
	create_dword	(0X4473C3F8);
	make_array	(0X4473C3F8,	0X2);
	create_dword	(0X4473C400);
	make_array	(0X4473C400,	0X6);
	create_dword	(0X4473C418);
	create_dword	(0X4473C41C);
	create_dword	(0X4473C420);
	create_dword	(0X4473C424);
	create_dword	(0X4473C428);
	create_dword	(0X4473C42C);
	create_dword	(0X4473C430);
	make_array	(0X4473C430,	0X7);
	create_dword	(0X4473C44C);
	make_array	(0X4473C44C,	0X3);
	create_dword	(0X4473C458);
	create_dword	(0X4473C45C);
	create_dword	(0X4473C460);
	create_dword	(0X4473C464);
	make_array	(0X4473C464,	0X4);
	create_dword	(0X4473C474);
	create_dword	(x=0X4473C478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4473C47C);
	create_dword	(0X4473C480);
	make_array	(0X4473C480,	0X200);
	create_dword	(0X4473CC80);
	make_array	(0X4473CC80,	0X200);
	create_dword	(0X4473D480);
	make_array	(0X4473D480,	0X33);
	create_dword	(x=0X4473D54C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X4473D550);
	create_dword	(0X4473D554);
	create_dword	(0X4473D558);
	create_dword	(0X4473D55C);
	create_dword	(0X4473D560);
	create_dword	(0X4473D564);
	create_dword	(0X4473D568);
	create_dword	(0X4473D56C);
	create_dword	(0X4473D570);
	create_dword	(0X4473D574);
	create_dword	(0X4473D578);
	make_array	(0X4473D578,	0X2);
	create_dword	(0X4473D580);
	create_dword	(0X4473D584);
	make_array	(0X4473D584,	0X20);
	create_dword	(0X4473D604);
	create_dword	(0X4473D608);
	create_dword	(0X4473D60C);
	create_dword	(0X4473D610);
	create_dword	(0X4473D614);
	create_dword	(0X4473D618);
	set_name	(0X4473D618,	"vTable");
	create_dword	(0X4473D61C);
	create_dword	(0X4473D620);
	MakeStruct	(0X4473D624,	"OneTap::Classes::ClanTag");
	set_name	(0X4473D624,	"OneTap::Global::ClanTag::Data");
	create_dword	(0X4473D69C);
	create_dword	(0X4473D6A0);
	create_dword	(0X4473D6A4);
	create_dword	(0X4473D6A8);
	set_name	(0X4473D6A8,	"srcAngle");
	create_dword	(0X4473D6AC);
	create_dword	(0X4473D6B0);
	create_dword	(0X4473D6B4);
	create_dword	(0X4473D6B8);
	create_dword	(0X4473D6BC);
	create_qword	(0X4473D6C0);
	create_dword	(0X4473D6C8);
	create_dword	(0X4473D6CC);
	create_dword	(0X4473D6D0);
	create_dword	(0X4473D6D4);
	create_qword	(0X4473D6D8);
	create_dword	(0X4473D6E0);
	create_dword	(0X4473D6E4);
	create_dword	(0X4473D6E8);
	create_dword	(0X4473D6EC);
	create_dword	(0X4473D6F0);
	create_dword	(0X4473D6F4);
	create_dword	(0X4473D6F8);
	create_dword	(0X4473D6FC);
	create_dword	(0X4473D700);
	create_dword	(0X4473D704);
	create_dword	(0X4473D708);
	create_dword	(0X4473D70C);
	create_dword	(0X4473D710);
	create_dword	(0X4473D714);
	create_dword	(0X4473D718);
	create_dword	(0X4473D71C);
	create_dword	(0X4473D720);
	create_dword	(0X4473D724);
	create_dword	(0X4473D728);
	create_dword	(0X4473D72C);
	create_dword	(0X4473D730);
	set_name	(0X4473D730,	"C_SDK::Globals::FindVar");
	create_dword	(0X4473D734);
	create_dword	(0X4473D738);
	create_dword	(0X4473D73C);
	create_dword	(0X4473D740);
	set_name	(0X4473D740,	"C_SDK::Globals::Surface::StartDrawing");
	create_dword	(0X4473D744);
	create_dword	(0X4473D748);
	set_name	(0X4473D748,	"C_SDK::Globals::Surface::FinishDrawing");
	create_dword	(0X4473D74C);
	create_dword	(0X4473D750);
	create_dword	(0X4473D754);
	create_dword	(0X4473D758);
	make_array	(0X4473D758,	0X5);
	create_dword	(0X4473D76C);
	create_dword	(0X4473D770);
	make_array	(0X4473D770,	0X8);
	create_dword	(0X4473D790);
	make_array	(0X4473D790,	0X4);
	create_dword	(0X4473D7A0);
	make_array	(0X4473D7A0,	0XA);
	create_dword	(0X4473D7C8);
	make_array	(0X4473D7C8,	0X3F2);
	create_dword	(0X4473E790);
	make_array	(0X4473E790,	0X2);
	create_dword	(0X4473E798);
	create_dword	(0X4473E79C);
	create_dword	(0X4473E7A0);
	create_dword	(0X4473E7A4);
	make_array	(0X4473E7A4,	0X3A17);
}

static Functions_0(void) {

	add_func    (0X43DD1240,0X43DD125D);
	set_func_flags(0X43DD1240,0x5400);
	set_frame_size(0X43DD1240, 0, 0, 0);
	add_func    (0X43DD2DE0,0X43DD2E5D);
	set_func_flags(0X43DD2DE0,0x5400);
	SetType(0X43DD2DE0, "float __usercall C_SDK__Math__AngleDifference@<xmm0>(float srcAngle@<xmm0>, float distAngle@<xmm1>);");
	set_frame_size(0X43DD2DE0, 0, 0, 0);
	add_func    (0X43DD2E60,0X43DD2F0F);
	set_func_flags(0X43DD2E60,0x5410);
	SetType(0X43DD2E60, "void __thiscall OneTap__Features__AnimationSystem__UpdateNetworkLayers(_DWORD layers, int player);");
	set_frame_size(0X43DD2E60, 0X4, 4, 0X4);
	define_local_var(0X43DD2E60, 0X43DD2F0F, "[bp+0X8]", "player");
	add_func    (0X43DD3040,0X43DD309D);
	set_func_flags(0X43DD3040,0x5410);
	set_frame_size(0X43DD3040, 0, 4, 0X4);
	add_func    (0X43DD31E0,0X43DD31EB);
	set_func_flags(0X43DD31E0,0x1401);
	add_func    (0X43DD3280,0X43DD32BD);
	set_func_flags(0X43DD3280,0x5410);
	set_frame_size(0X43DD3280, 0, 4, 0X8);
	add_func    (0X43DD3580,0X43DD3594);
	set_func_flags(0X43DD3580,0x5400);
	SetType(0X43DD3580, "int __thiscall C_SDK__Engine__GetInputSystem(void *instance);");
	set_frame_size(0X43DD3580, 0, 0, 0);
	add_func    (0X43DD35A0,0X43DD35AB);
	set_func_flags(0X43DD35A0,0x1410);
	SetType(0X43DD35A0, "int __thiscall C_SDK__Player__Wrapper__GetInstance(void *instance);");
	set_frame_size(0X43DD35A0, 0, 4, 0);
	add_func    (0X43DD37C0,0X43DD37CB);
	set_func_flags(0X43DD37C0,0x1401);
	add_func    (0X43DD37D0,0X43DD37E4);
	set_func_flags(0X43DD37D0,0x5400);
	SetType(0X43DD37D0, "int __thiscall C_SDK__Player__Wrapper__GetClientByHandle(int *instance);");
	set_frame_size(0X43DD37D0, 0, 0, 0);
	add_func    (0X43DD3B90,0X43DD3BA4);
	set_func_flags(0X43DD3B90,0x5400);
	SetType(0X43DD3B90, "int __fastcall C_SDK__VirtualReflectionHandler__CallVirtualFunction(int **interface, int index);");
	set_frame_size(0X43DD3B90, 0, 0, 0);
	add_func    (0X43DD3BB0,0X43DD3BBC);
	set_func_flags(0X43DD3BB0,0x1400);
	SetType(0X43DD3BB0, "int __thiscall C_SDK__Player__Wrapper__Get(_DWORD *localPlayerInstance);");
	set_frame_size(0X43DD3BB0, 0, 0, 0);
	add_func    (0X43DD3C00,0X43DD3C17);
	set_func_flags(0X43DD3C00,0x5400);
	SetType(0X43DD3C00, "int __thiscall C_SDK__Player__Weapon__UpdateAccuracyPenalty(unsigned int *instance);");
	set_frame_size(0X43DD3C00, 0, 0, 0);
	add_func    (0X43DD3C80,0X43DD3CA2);
	set_func_flags(0X43DD3C80,0x5400);
	SetType(0X43DD3C80, "C_SDK::Classes::CUserCmd **__thiscall C_SDK__CUserCmd__GetLastFromBuffer(int *cmd);");
	set_frame_size(0X43DD3C80, 0X4, 0, 0);
	add_func    (0X43DD3D40,0X43DD3D91);
	set_func_flags(0X43DD3D40,0x5400);
	SetType(0X43DD3D40, "bool __thiscall C_SDK__Player__Controller__IsAlive(unsigned int *player);");
	set_frame_size(0X43DD3D40, 0X4, 0, 0);
	add_func    (0X43DD4150,0X43DD417F);
	set_func_flags(0X43DD4150,0x5400);
	set_frame_size(0X43DD4150, 0, 0, 0);
	add_func    (0X43DD5280,0X43DD528C);
	set_func_flags(0X43DD5280,0x5410);
	set_frame_size(0X43DD5280, 0, 4, 0X4);
	add_func    (0X43DD5480,0X43DD55E9);
	set_func_flags(0X43DD5480,0x5410);
	set_frame_size(0X43DD5480, 0X18, 4, 0X8);
	add_func    (0X43DD55F0,0X43DD56F2);
	set_func_flags(0X43DD55F0,0x5410);
	SetType(0X43DD55F0, "void __usercall C_SDK__Math__ClampAngles(C_SDK::Classes::Math::Vector::Rectangular *angles@<ecx>, double a2@<st1>, double a3@<st0>);");
	set_frame_size(0X43DD55F0, 0X14, 4, 0);
	define_local_var(0X43DD55F0, 0X43DD56F2, "[bp-0X4]", "angleToProcess");
	add_func    (0X43DD5750,0X43DD5764);
	set_func_flags(0X43DD5750,0x5400);
	set_frame_size(0X43DD5750, 0, 0, 0);
	add_func    (0X43DD5770,0X43DD5865);
	set_func_flags(0X43DD5770,0x5400);
	SetType(0X43DD5770, "void __thiscall C_SDK__EngineTrace__Ray__Operator__New__DeltaBased(C_SDK::Classes::EngineTrace::Ray *instance, C_SDK::Classes::Math::Vector::Rectangular *start, C_SDK::Classes::Math::Vector::Rectangular *end);");
	set_frame_size(0X43DD5770, 0XC, 0, 0X8);
	define_local_var(0X43DD5770, 0X43DD5865, "[bp+0X4]", "start");
	define_local_var(0X43DD5770, 0X43DD5865, "[bp+0X8]", "end");
	add_func    (0X43DD5870,0X43DD58D3);
	set_func_flags(0X43DD5870,0x5400);
	SetType(0X43DD5870, "void __thiscall C_SDK__EngineTrace__Ray__Operator__New(C_SDK::Classes::EngineTrace::Ray *this);");
	set_frame_size(0X43DD5870, 0, 0, 0);
	add_func    (0X43DD5990,0X43DD59A4);
	set_func_flags(0X43DD5990,0x5410);
	set_frame_size(0X43DD5990, 0, 4, 0X4);
	add_func    (0X43DD59F0,0X43DD5AA4);
	set_func_flags(0X43DD59F0,0x5410);
	set_frame_size(0X43DD59F0, 0X10, 4, 0);
	add_func    (0X43DD5AD0,0X43DD5ADC);
	set_func_flags(0X43DD5AD0,0x5400);
	set_frame_size(0X43DD5AD0, 0, 0, 0);
	add_func    (0X43DD5B00,0X43DD5B0B);
	set_func_flags(0X43DD5B00,0x1401);
	add_func    (0X43DD5B10,0X43DD5B5B);
	set_func_flags(0X43DD5B10,0x5400);
	set_frame_size(0X43DD5B10, 0X4, 0, 0);
	add_func    (0X43DD5B80,0X43DD5B81);
	set_func_flags(0X43DD5B80,0x5440);
	set_frame_size(0X43DD5B80, 0, 0, 0);
	add_func    (0X43DD5B90,0X43DD5BE2);
	set_func_flags(0X43DD5B90,0x5410);
	set_frame_size(0X43DD5B90, 0, 4, 0X4);
	define_local_var(0X43DD5B90, 0X43DD5BE2, "[bp+0X8]", "Size");
	add_func    (0X43DD5BF0,0X43DD5D5B);
	set_func_flags(0X43DD5BF0,0x5410);
	set_frame_size(0X43DD5BF0, 0X10, 4, 0XC);
	add_func    (0X43DD5D60,0X43DD5EB8);
	set_func_flags(0X43DD5D60,0x5410);
	set_frame_size(0X43DD5D60, 0X10, 4, 0X4);
	add_func    (0X43DD5FB0,0X43DD6011);
	set_func_flags(0X43DD5FB0,0x5410);
	set_frame_size(0X43DD5FB0, 0, 4, 0X4);
	add_func    (0X43DD6170,0X43DD627C);
	set_func_flags(0X43DD6170,0x5410);
	SetType(0X43DD6170, "void __stdcall C_SDK__Util__String__Append(char *);");
	set_frame_size(0X43DD6170, 0X14, 4, 0X4);
	add_func    (0X43DD6280,0X43DD628B);
	set_func_flags(0X43DD6280,0x1401);
	add_func    (0X43DD62F0,0X43DD6343);
	set_func_flags(0X43DD62F0,0x5400);
	set_frame_size(0X43DD62F0, 0X4, 0, 0);
	add_func    (0X43DD6350,0X43DD643B);
	set_func_flags(0X43DD6350,0x5410);
	SetType(0X43DD6350, "int *__thiscall std__basic_string_char_std__char_traits_char__std__allocator_char____assign(const char *this, int a2, unsigned int a3);");
	set_frame_size(0X43DD6350, 0X10, 4, 0X8);
	add_func    (0X43DD6440,0X43DD647A);
	set_func_flags(0X43DD6440,0x5410);
	set_frame_size(0X43DD6440, 0X8, 4, 0X4);
	add_func    (0X43DD6480,0X43DD65DE);
	set_func_flags(0X43DD6480,0x5410);
	SetType(0X43DD6480, "void __userpurge OneTap__Features__AutoWall__ScaleDamage(C_SDK::Classes::Player::HitGroup hitGroup, int player, float *currentDamageOverride);");
	set_frame_size(0X43DD6480, 0, 4, 0XC);
	define_local_var(0X43DD6480, 0X43DD65DE, "[bp+0X8]", "hitGroup");
	define_local_var(0X43DD6480, 0X43DD65DE, "[bp+0XC]", "player");
	define_local_var(0X43DD6480, 0X43DD65DE, "[bp+0X10]", "unk");
	define_local_var(0X43DD6480, 0X43DD65DE, "[bp+0X14]", "currentDamageOverride");
	add_func    (0X43DD66F0,0X43DD67A8);
	set_func_flags(0X43DD66F0,0x5410);
	SetType(0X43DD66F0, "void __thiscall C_SDK__EngineTrace__Trace__Copy(C_SDK::Classes::EngineTrace::Trace *to, C_SDK::Classes::EngineTrace::Trace *from);");
	set_frame_size(0X43DD66F0, 0, 4, 0X4);
	define_local_var(0X43DD66F0, 0X43DD67A8, "[bp+0X8]", "from");
	add_func    (0X43DD6AD0,0X43DD6AF0);
	set_func_flags(0X43DD6AD0,0x5400);
	SetType(0X43DD6AD0, "bool __thiscall C_SDK__EngineTrace__DidHit(C_SDK::Classes::EngineTrace::Trace *trace);");
	set_frame_size(0X43DD6AD0, 0, 0, 0);
	add_func    (0X43DD6B50,0X43DD6B54);
	set_func_flags(0X43DD6B50,0x5400);
	SetType(0X43DD6B50, "int __thiscall C_SDK__CommonUtil__GetValueAtPointer(unsigned __int8 *pointer);");
	set_frame_size(0X43DD6B50, 0, 0, 0);
	add_func    (0X43DD6B70,0X43DD6B76);
	set_func_flags(0X43DD6B70,0x5400);
	set_frame_size(0X43DD6B70, 0, 0, 0);
	add_func    (0X43DD6B80,0X43DD6BB4);
	set_func_flags(0X43DD6B80,0x5c10);
	set_frame_size(0X43DD6B80, 0, 4, 0);
	add_func    (0X43DD7180,0X43DD71C4);
	set_func_flags(0X43DD7180,0x5400);
	SetType(0X43DD7180, "bool __thiscall C_SDK__Player__Controller__IsHaveImmunity(unsigned int *player);");
	set_frame_size(0X43DD7180, 0X4, 0, 0);
	add_func    (0X43DD71D0,0X43DD7276);
	set_func_flags(0X43DD71D0,0x5410);
	set_frame_size(0X43DD71D0, 0X30, 4, 0X8);
	add_func    (0X43DD7280,0X43DD7306);
	set_func_flags(0X43DD7280,0x5410);
	set_frame_size(0X43DD7280, 0XC, 4, 0X18);
	add_func    (0X43DD7310,0X43DD737E);
	set_func_flags(0X43DD7310,0x5410);
	set_frame_size(0X43DD7310, 0XC, 4, 0X4);
	add_func    (0X43DD7380,0X43DD73BB);
	set_func_flags(0X43DD7380,0x5410);
	set_frame_size(0X43DD7380, 0, 4, 0X8);
	add_func    (0X43DD73C0,0X43DD7406);
	set_func_flags(0X43DD73C0,0x5410);
	set_frame_size(0X43DD73C0, 0XC, 4, 0);
	add_func    (0X43DD7410,0X43DD753B);
	set_func_flags(0X43DD7410,0x5410);
	set_frame_size(0X43DD7410, 0X2C, 4, 0X8);
	add_func    (0X43DD7540,0X43DD7673);
	set_func_flags(0X43DD7540,0x5410);
	set_frame_size(0X43DD7540, 0X2C, 4, 0X8);
	add_func    (0X43DD7680,0X43DD76EE);
	set_func_flags(0X43DD7680,0x5410);
	set_frame_size(0X43DD7680, 0X4, 4, 0XC);
	add_func    (0X43DD76F0,0X43DD7721);
	set_func_flags(0X43DD76F0,0x5410);
	set_frame_size(0X43DD76F0, 0X4, 4, 0XC);
	add_func    (0X43DD7730,0X43DD7764);
	set_func_flags(0X43DD7730,0x5410);
	set_frame_size(0X43DD7730, 0X4, 4, 0XC);
	add_func    (0X43DD7770,0X43DD77D4);
	set_func_flags(0X43DD7770,0x5410);
	set_frame_size(0X43DD7770, 0, 4, 0X4);
	add_func    (0X43DD77E0,0X43DD77E6);
	set_func_flags(0X43DD77E0,0x5400);
	set_frame_size(0X43DD77E0, 0, 0, 0);
	add_func    (0X43DD7810,0X43DD7964);
	set_func_flags(0X43DD7810,0x5410);
	set_frame_size(0X43DD7810, 0X1C, 4, 0X8);
	add_func    (0X43DD79A0,0X43DD79A6);
	set_func_flags(0X43DD79A0,0x5400);
	set_frame_size(0X43DD79A0, 0, 0, 0);
	add_func    (0X43DD79B0,0X43DD7A85);
	set_func_flags(0X43DD79B0,0x5410);
	set_frame_size(0X43DD79B0, 0X14, 4, 0);
	add_func    (0X43DD7A90,0X43DD7AF4);
	set_func_flags(0X43DD7A90,0x5410);
	set_frame_size(0X43DD7A90, 0, 4, 0X4);
	add_func    (0X43DD7B00,0X43DD7B37);
	set_func_flags(0X43DD7B00,0x5410);
	set_frame_size(0X43DD7B00, 0, 4, 0);
	add_func    (0X43DD7B40,0X43DD7B9C);
	set_func_flags(0X43DD7B40,0x5410);
	set_frame_size(0X43DD7B40, 0X4, 4, 0);
	add_func    (0X43DD7BA0,0X43DD7C00);
	set_func_flags(0X43DD7BA0,0x5400);
	set_frame_size(0X43DD7BA0, 0X8, 0, 0);
	add_func    (0X43DD7C10,0X43DD7C26);
	set_func_flags(0X43DD7C10,0x5410);
	set_frame_size(0X43DD7C10, 0, 4, 0X8);
	add_func    (0X43DD7C30,0X43DD7CAC);
	set_func_flags(0X43DD7C30,0x5410);
	set_frame_size(0X43DD7C30, 0X4, 4, 0XC);
	add_func    (0X43DD7CB0,0X43DD7DED);
	set_func_flags(0X43DD7CB0,0x5410);
	set_frame_size(0X43DD7CB0, 0X34, 4, 0X8);
	add_func    (0X43DD7EA0,0X43DD7F1C);
	set_func_flags(0X43DD7EA0,0x5410);
	set_frame_size(0X43DD7EA0, 0X108, 4, 0X8);
	add_func    (0X43DD7F20,0X43DD80D7);
	set_func_flags(0X43DD7F20,0x5410);
	set_frame_size(0X43DD7F20, 0X28, 4, 0X8);
	add_func    (0X43DD8120,0X43DD81A1);
	set_func_flags(0X43DD8120,0x5410);
	SetType(0X43DD8120, "int *__thiscall C_SDK__CommonUtil__StrCopy(int this, int a2);");
	set_frame_size(0X43DD8120, 0XC, 4, 0X4);
	add_func    (0X43DD81B0,0X43DD81EE);
	set_func_flags(0X43DD81B0,0x5410);
	set_frame_size(0X43DD81B0, 0, 4, 0X8);
	add_func    (0X43DD8370,0X43DD851A);
	set_func_flags(0X43DD8370,0x5410);
	SetType(0X43DD8370, "void __fastcall C_SDK__Hash__CRC32__ProcessBuffer(unsigned __int8 *pulCrc, unsigned int *bufferPointer, int bufferType);");
	set_frame_size(0X43DD8370, 0XC, 4, 0X4);
	define_local_var(0X43DD8370, 0X43DD851A, "[bp+0X8]", "bufferType");
	add_func    (0X43DD8580,0X43DD871F);
	set_func_flags(0X43DD8580,0x5410);
	set_frame_size(0X43DD8580, 0X30, 4, 0X8);
	add_func    (0X43DD87F0,0X43DD8804);
	set_func_flags(0X43DD87F0,0x5400);
	set_frame_size(0X43DD87F0, 0, 0, 0);
	add_func    (0X43DD89C0,0X43DDB9C3);
	set_func_flags(0X43DD89C0,0x5410);
	set_frame_size(0X43DD89C0, 0XB50, 4, 0);
	add_func    (0X43DDB9D0,0X43DDBE56);
	set_func_flags(0X43DDB9D0,0x5410);
	set_frame_size(0X43DDB9D0, 0X168, 4, 0);
	add_func    (0X43DDBE60,0X43DDBF5A);
	set_func_flags(0X43DDBE60,0x5410);
	SetType(0X43DDBE60, "void __userpurge OneTap__Features__Visuals__AsusWalls(double a1, float a2, int a3, unsigned int a4);");
	set_frame_size(0X43DDBE60, 0X1C, 4, 0X14);
	define_local_var(0X43DDBE60, 0X43DDBF5A, "[bp+0X10]", "a2");
	define_local_var(0X43DDBE60, 0X43DDBF5A, "[bp+0X14]", "a3");
	define_local_var(0X43DDBE60, 0X43DDBF5A, "[bp+0X18]", "a4");
	define_local_var(0X43DDBE60, 0X43DDBF5A, "[bp+0X1C]", "a5");
	define_local_var(0X43DDBE60, 0X43DDBF5A, "[bp+0X20]", "a6");
	define_local_var(0X43DDBE60, 0X43DDBF5A, "[bp+0X24]", "a7");
	add_func    (0X43DDBF60,0X43DDC18C);
	set_func_flags(0X43DDBF60,0x5410);
	set_frame_size(0X43DDBF60, 0X74, 4, 0X10);
	add_func    (0X43DDC190,0X43DDC234);
	set_func_flags(0X43DDC190,0x5410);
	set_frame_size(0X43DDC190, 0X28, 4, 0X4);
	add_func    (0X43DDC240,0X43DDC4AE);
	set_func_flags(0X43DDC240,0x5400);
	set_frame_size(0X43DDC240, 0X4, 0, 0);
	add_func    (0X43DDC4B0,0X43DDC72A);
	set_func_flags(0X43DDC4B0,0x5400);
	set_frame_size(0X43DDC4B0, 0, 0, 0);
	add_func    (0X43DDC730,0X43DDC757);
	set_func_flags(0X43DDC730,0x5410);
	set_frame_size(0X43DDC730, 0, 4, 0X4);
	add_func    (0X43DDC780,0X43DDC7B3);
	set_func_flags(0X43DDC780,0x5c10);
	set_frame_size(0X43DDC780, 0, 4, 0);
	add_func    (0X43DDC7C0,0X43DDC7C6);
	set_func_flags(0X43DDC7C0,0x5400);
	set_frame_size(0X43DDC7C0, 0, 0, 0);
	add_func    (0X43DDC7D0,0X43DDC7D6);
	set_func_flags(0X43DDC7D0,0x5400);
	set_frame_size(0X43DDC7D0, 0, 0, 0);
	add_func    (0X43DDC7E0,0X43DDC7E6);
	set_func_flags(0X43DDC7E0,0x5400);
	set_frame_size(0X43DDC7E0, 0, 0, 0);
	add_func    (0X43DDC7F0,0X43DDC7F6);
	set_func_flags(0X43DDC7F0,0x5400);
	set_frame_size(0X43DDC7F0, 0, 0, 0);
	add_func    (0X43DDC800,0X43DDC806);
	set_func_flags(0X43DDC800,0x5400);
	set_frame_size(0X43DDC800, 0, 0, 0);
	add_func    (0X43DDC810,0X43DDC816);
	set_func_flags(0X43DDC810,0x5400);
	set_frame_size(0X43DDC810, 0, 0, 0);
	add_func    (0X43DDC820,0X43DDC826);
	set_func_flags(0X43DDC820,0x5400);
	set_frame_size(0X43DDC820, 0, 0, 0);
	add_func    (0X43DDC830,0X43DDC836);
	set_func_flags(0X43DDC830,0x5400);
	set_frame_size(0X43DDC830, 0, 0, 0);
	add_func    (0X43DDC840,0X43DDC846);
	set_func_flags(0X43DDC840,0x5400);
	set_frame_size(0X43DDC840, 0, 0, 0);
	add_func    (0X43DDC850,0X43DDC856);
	set_func_flags(0X43DDC850,0x5400);
	set_frame_size(0X43DDC850, 0, 0, 0);
	add_func    (0X43DDC860,0X43DDC866);
	set_func_flags(0X43DDC860,0x5400);
	set_frame_size(0X43DDC860, 0, 0, 0);
	add_func    (0X43DDC870,0X43DDC876);
	set_func_flags(0X43DDC870,0x5400);
	set_frame_size(0X43DDC870, 0, 0, 0);
	add_func    (0X43DDC880,0X43DDC886);
	set_func_flags(0X43DDC880,0x5400);
	set_frame_size(0X43DDC880, 0, 0, 0);
	add_func    (0X43DDC890,0X43DDC896);
	set_func_flags(0X43DDC890,0x5400);
	set_frame_size(0X43DDC890, 0, 0, 0);
	add_func    (0X43DDC8A0,0X43DDC8A6);
	set_func_flags(0X43DDC8A0,0x5400);
	set_frame_size(0X43DDC8A0, 0, 0, 0);
	add_func    (0X43DDC8B0,0X43DDC8B6);
	set_func_flags(0X43DDC8B0,0x5400);
	set_frame_size(0X43DDC8B0, 0, 0, 0);
	add_func    (0X43DDC8C0,0X43DDC8C6);
	set_func_flags(0X43DDC8C0,0x5400);
	set_frame_size(0X43DDC8C0, 0, 0, 0);
	add_func    (0X43DDC8D0,0X43DDC8D6);
	set_func_flags(0X43DDC8D0,0x5400);
	set_frame_size(0X43DDC8D0, 0, 0, 0);
	add_func    (0X43DDC8E0,0X43DDC8E6);
	set_func_flags(0X43DDC8E0,0x5400);
	set_frame_size(0X43DDC8E0, 0, 0, 0);
	add_func    (0X43DDC8F0,0X43DDC8F6);
	set_func_flags(0X43DDC8F0,0x5400);
	set_frame_size(0X43DDC8F0, 0, 0, 0);
	add_func    (0X43DDC900,0X43DDC906);
	set_func_flags(0X43DDC900,0x5400);
	set_frame_size(0X43DDC900, 0, 0, 0);
	add_func    (0X43DDC910,0X43DDC916);
	set_func_flags(0X43DDC910,0x5400);
	set_frame_size(0X43DDC910, 0, 0, 0);
	add_func    (0X43DDC920,0X43DDC926);
	set_func_flags(0X43DDC920,0x5400);
	set_frame_size(0X43DDC920, 0, 0, 0);
	add_func    (0X43DDC930,0X43DDC936);
	set_func_flags(0X43DDC930,0x5400);
	set_frame_size(0X43DDC930, 0, 0, 0);
	add_func    (0X43DDC940,0X43DDC946);
	set_func_flags(0X43DDC940,0x5400);
	set_frame_size(0X43DDC940, 0, 0, 0);
	add_func    (0X43DDC950,0X43DDC956);
	set_func_flags(0X43DDC950,0x5400);
	set_frame_size(0X43DDC950, 0, 0, 0);
	add_func    (0X43DDC960,0X43DDC9B3);
	set_func_flags(0X43DDC960,0x5410);
	set_frame_size(0X43DDC960, 0, 4, 0X4);
	add_func    (0X43DDC9C0,0X43DDC9D7);
	set_func_flags(0X43DDC9C0,0x5400);
	SetType(0X43DDC9C0, "int __thiscall C_SDK__Player__Animation__UpdateCollisionBounds(void *instance);");
	set_frame_size(0X43DDC9C0, 0, 0, 0);
	add_func    (0X43DDCA10,0X43DDCA13);
	set_func_flags(0X43DDCA10,0x5400);
	set_frame_size(0X43DDCA10, 0, 0, 0);
	add_func    (0X43DDCA20,0X43DDCA26);
	set_func_flags(0X43DDCA20,0x5400);
	set_frame_size(0X43DDCA20, 0, 0, 0);
	add_func    (0X43DDCA30,0X43DDCA36);
	set_func_flags(0X43DDCA30,0x5400);
	set_frame_size(0X43DDCA30, 0, 0, 0);
	add_func    (0X43DDCA40,0X43DDCA46);
	set_func_flags(0X43DDCA40,0x5400);
	set_frame_size(0X43DDCA40, 0, 0, 0);
	add_func    (0X43DDCA50,0X43DDCA56);
	set_func_flags(0X43DDCA50,0x5400);
	set_frame_size(0X43DDCA50, 0, 0, 0);
	add_func    (0X43DDCA60,0X43DDCA66);
	set_func_flags(0X43DDCA60,0x5400);
	set_frame_size(0X43DDCA60, 0, 0, 0);
	add_func    (0X43DDD110,0X43DDD161);
	set_func_flags(0X43DDD110,0x5400);
	set_frame_size(0X43DDD110, 0X4, 0, 0);
	add_func    (0X43DDD4C0,0X43DDD4FD);
	set_func_flags(0X43DDD4C0,0x5410);
	set_frame_size(0X43DDD4C0, 0, 4, 0X8);
	add_func    (0X43DDD500,0X43DDD53E);
	set_func_flags(0X43DDD500,0x5410);
	set_frame_size(0X43DDD500, 0, 4, 0X8);
	add_func    (0X43DDD580,0X43DDD58A);
	set_func_flags(0X43DDD580,0x5400);
	SetType(0X43DDD580, "bool __thiscall C_SDK__Player__Weapon__IsWeapon(void *vTable);");
	add_func    (0X43DDDCE0,0X43DDDD44);
	set_func_flags(0X43DDDCE0,0x5410);
	set_frame_size(0X43DDDCE0, 0, 4, 0X4);
	add_func    (0X43DDDED0,0X43DDDEDB);
	set_func_flags(0X43DDDED0,0x1401);
	add_func    (0X43DDDEE0,0X43DDE260);
	set_func_flags(0X43DDDEE0,0x5410);
	set_frame_size(0X43DDDEE0, 0X30, 4, 0);
	add_func    (0X43DDE290,0X43DDE499);
	set_func_flags(0X43DDE290,0x5410);
	set_frame_size(0X43DDE290, 0X264, 4, 0X14);
	add_func    (0X43DDE500,0X43DDE93C);
	set_func_flags(0X43DDE500,0x5410);
	set_frame_size(0X43DDE500, 0X294, 4, 0X4);
	add_func    (0X43DDEAF0,0X43DDEB92);
	set_func_flags(0X43DDEAF0,0x5410);
	set_frame_size(0X43DDEAF0, 0X14, 4, 0X4);
	add_func    (0X43DDEBA0,0X43DDED1F);
	set_func_flags(0X43DDEBA0,0x5410);
	set_frame_size(0X43DDEBA0, 0X1C, 4, 0X8);
	add_func    (0X43DDED20,0X43DDED79);
	set_func_flags(0X43DDED20,0x5410);
	set_frame_size(0X43DDED20, 0X8, 4, 0);
	add_func    (0X43DDED80,0X43DDEDFC);
	set_func_flags(0X43DDED80,0x5410);
	set_frame_size(0X43DDED80, 0XC, 4, 0);
	add_func    (0X43DDEE00,0X43DDEE0A);
	set_func_flags(0X43DDEE00,0x5400);
	SetType(0X43DDEE00, "bool __thiscall C_SDK__Player__Controller__IsPlayer(void *instance);");
	set_frame_size(0X43DDEE00, 0, 0, 0);
	add_func    (0X43DDEE10,0X43DDF005);
	set_func_flags(0X43DDEE10,0x5410);
	set_frame_size(0X43DDEE10, 0X3C, 4, 0X10);
	add_func    (0X43DDF010,0X43DDF069);
	set_func_flags(0X43DDF010,0x5410);
	set_frame_size(0X43DDF010, 0X8, 4, 0);
	add_func    (0X43DDF070,0X43DDF076);
	set_func_flags(0X43DDF070,0x5400);
	set_frame_size(0X43DDF070, 0, 0, 0);
	add_func    (0X43DDF080,0X43DDF086);
	set_func_flags(0X43DDF080,0x5400);
	set_frame_size(0X43DDF080, 0, 0, 0);
	add_func    (0X43DDF090,0X43DDF096);
	set_func_flags(0X43DDF090,0x5400);
	set_frame_size(0X43DDF090, 0, 0, 0);
	add_func    (0X43DDF0A0,0X43DDF0A6);
	set_func_flags(0X43DDF0A0,0x5400);
	set_frame_size(0X43DDF0A0, 0, 0, 0);
	add_func    (0X43DDF0B0,0X43DDF0B6);
	set_func_flags(0X43DDF0B0,0x5400);
	set_frame_size(0X43DDF0B0, 0, 0, 0);
	add_func    (0X43DDF0C0,0X43DDF0C6);
	set_func_flags(0X43DDF0C0,0x5400);
	set_frame_size(0X43DDF0C0, 0, 0, 0);
	add_func    (0X43DDF0D0,0X43DDF0D6);
	set_func_flags(0X43DDF0D0,0x5400);
	set_frame_size(0X43DDF0D0, 0, 0, 0);
	add_func    (0X43DDF0E0,0X43DDF0E6);
	set_func_flags(0X43DDF0E0,0x5400);
	set_frame_size(0X43DDF0E0, 0, 0, 0);
	add_func    (0X43DDF0F0,0X43DDF0F6);
	set_func_flags(0X43DDF0F0,0x5400);
	set_frame_size(0X43DDF0F0, 0, 0, 0);
	add_func    (0X43DDF100,0X43DDF305);
	set_func_flags(0X43DDF100,0x5410);
	set_frame_size(0X43DDF100, 0X8, 4, 0XC);
	add_func    (0X43DDF310,0X43DDF316);
	set_func_flags(0X43DDF310,0x5400);
	set_frame_size(0X43DDF310, 0, 0, 0);
	add_func    (0X43DDF320,0X43DDF326);
	set_func_flags(0X43DDF320,0x5400);
	set_frame_size(0X43DDF320, 0, 0, 0);
	add_func    (0X43DDF330,0X43DDF336);
	set_func_flags(0X43DDF330,0x5400);
	set_frame_size(0X43DDF330, 0, 0, 0);
	add_func    (0X43DDF340,0X43DDF4CB);
	set_func_flags(0X43DDF340,0x5410);
	set_frame_size(0X43DDF340, 0X18, 4, 0XC);
	add_func    (0X43DDF4E0,0X43DDF516);
	set_func_flags(0X43DDF4E0,0x5c10);
	set_frame_size(0X43DDF4E0, 0, 4, 0);
	add_func    (0X43DDF520,0X43DDF54D);
	set_func_flags(0X43DDF520,0x5400);
	set_frame_size(0X43DDF520, 0X8, 0, 0);
	add_func    (0X43DDF550,0X43DDF5A1);
	set_func_flags(0X43DDF550,0x5410);
	set_frame_size(0X43DDF550, 0X1C, 4, 0);
	add_func    (0X43DDF620,0X43DDF634);
	set_func_flags(0X43DDF620,0x5400);
	SetType(0X43DDF620, "int __thiscall sub_43DDF620(C_SDK::Structs::EventInfo *this);");
	set_frame_size(0X43DDF620, 0, 0, 0);
	add_func    (0X43DDF640,0X43DDF65E);
	set_func_flags(0X43DDF640,0x5410);
	SetType(0X43DDF640, "void __thiscall C_SDK__Surface__DrawManager__SetDrawColor(C_SDK::Classes::GuiManager::DrawColor *color, char red, char green, char blue);");
	set_frame_size(0X43DDF640, 0, 4, 0XC);
	define_local_var(0X43DDF640, 0X43DDF65E, "[bp+0X8]", "red");
	define_local_var(0X43DDF640, 0X43DDF65E, "[bp+0XC]", "green");
	define_local_var(0X43DDF640, 0X43DDF65E, "[bp+0X10]", "blue");
	add_func    (0X43DDF660,0X43DDF6FC);
	set_func_flags(0X43DDF660,0x5410);
	SetType(0X43DDF660, "int *__thiscall std__copy_len(const char *to, const char *from, int size);");
	set_func_cmt(0X43DDF660,	"ofc useless :o", 1);
	set_frame_size(0X43DDF660, 0X8, 4, 0X8);
	define_local_var(0X43DDF660, 0X43DDF6FC, "[bp+0X8]", "from");
	define_local_var(0X43DDF660, 0X43DDF6FC, "[bp+0XC]", "size");
	add_func    (0X43DDF840,0X43DDF8A5);
	set_func_flags(0X43DDF840,0x5410);
	set_frame_size(0X43DDF840, 0, 4, 0X4);
	add_func    (0X43DE4E00,0X43DE4E18);
	set_func_flags(0X43DE4E00,0x5400);
	set_frame_size(0X43DE4E00, 0, 0, 0);
	add_func    (0X43DE4F00,0X43DE4F20);
	set_func_flags(0X43DE4F00,0x5410);
	SetType(0X43DE4F00, "void __thiscall C_SDK__Surface__DrawManager__SetDrawColorEx(C_SDK::Classes::GuiManager::DrawColor *color, char red, char green, char blue, char alpha);");
	set_frame_size(0X43DE4F00, 0, 4, 0X10);
	define_local_var(0X43DE4F00, 0X43DE4F20, "[bp+0X8]", "red");
	define_local_var(0X43DE4F00, 0X43DE4F20, "[bp+0XC]", "green");
	define_local_var(0X43DE4F00, 0X43DE4F20, "[bp+0X10]", "blue");
	define_local_var(0X43DE4F00, 0X43DE4F20, "[bp+0X14]", "alpha");
	add_func    (0X43DE53A0,0X43DE5420);
	set_func_flags(0X43DE53A0,0x5410);
	set_frame_size(0X43DE53A0, 0X4, 4, 0XC);
	add_func    (0X43DE5430,0X43DE5468);
	set_func_flags(0X43DE5430,0x5410);
	set_frame_size(0X43DE5430, 0X4, 4, 0XC);
	add_func    (0X43DE54B0,0X43DE551A);
	set_func_flags(0X43DE54B0,0x5410);
	set_frame_size(0X43DE54B0, 0, 4, 0X4);
	add_func    (0X43DE5520,0X43DE5563);
	set_func_flags(0X43DE5520,0x5410);
	set_frame_size(0X43DE5520, 0, 4, 0X8);
	add_func    (0X43DE5F00,0X43DE5F06);
	set_func_flags(0X43DE5F00,0x5400);
	set_frame_size(0X43DE5F00, 0, 0, 0);
	add_func    (0X43DE5F30,0X43DE5F44);
	set_func_flags(0X43DE5F30,0x5400);
	set_frame_size(0X43DE5F30, 0, 0, 0);
	add_func    (0X43DE6010,0X43DE6056);
	set_func_flags(0X43DE6010,0x5410);
	SetType(0X43DE6010, "const char *__thiscall C_SDK__Security__Xor__DecryptArray(const char *fromArray, const char *toArray);");
	set_frame_size(0X43DE6010, 0X8, 4, 0X4);
	define_local_var(0X43DE6010, 0X43DE6056, "[bp+0X8]", "toArray");
	add_func    (0X43DE81A0,0X43DE82B3);
	set_func_flags(0X43DE81A0,0x5410);
	set_frame_size(0X43DE81A0, 0X2C, 4, 0X8);
	add_func    (0X43DE8330,0X43DE8336);
	set_func_flags(0X43DE8330,0x5400);
	set_frame_size(0X43DE8330, 0, 0, 0);
	add_func    (0X43DE8340,0X43DE8346);
	set_func_flags(0X43DE8340,0x5400);
	set_frame_size(0X43DE8340, 0, 0, 0);
	add_func    (0X43DE8350,0X43DE8356);
	set_func_flags(0X43DE8350,0x5400);
	set_frame_size(0X43DE8350, 0, 0, 0);
	add_func    (0X43DE8360,0X43DE83BA);
	set_func_flags(0X43DE8360,0x5410);
	set_frame_size(0X43DE8360, 0X4, 4, 0XC);
	add_func    (0X43DE83C0,0X43DE8523);
	set_func_flags(0X43DE83C0,0x5410);
	SetType(0X43DE83C0, "C_SDK::Classes::GuiManager::DrawColor *__fastcall C_SDK__Surface__DrawManager__GetNextRainbowColor(C_SDK::Classes::GuiManager::DrawColor color);");
	set_frame_size(0X43DE83C0, 0X14, 4, 0X8);
	define_local_var(0X43DE83C0, 0X43DE8523, "[bp+0X8]", "color");
	add_func    (0X43DE8530,0X43DE86ED);
	set_func_flags(0X43DE8530,0x5410);
	set_frame_size(0X43DE8530, 0X18, 4, 0);
	add_func    (0X43DE86F0,0X43DE88C3);
	set_func_flags(0X43DE86F0,0x5410);
	set_frame_size(0X43DE86F0, 0X18, 4, 0);
	add_func    (0X43DE8A60,0X43DE8A79);
	set_func_flags(0X43DE8A60,0x5410);
	set_frame_size(0X43DE8A60, 0X8, 4, 0X104);
	add_func    (0X43DE8A80,0X43DE8A8D);
	set_func_flags(0X43DE8A80,0x5410);
	set_frame_size(0X43DE8A80, 0, 4, 0X4);
	add_func    (0X43DE8AE0,0X43DE8AE3);
	set_func_flags(0X43DE8AE0,0x5440);
	set_frame_size(0X43DE8AE0, 0, 0, 0X8);
	add_func    (0X43DE8B10,0X43DE8B67);
	set_func_flags(0X43DE8B10,0x5410);
	set_frame_size(0X43DE8B10, 0X10, 4, 0X8);
	add_func    (0X43DE8B70,0X43DE8BBF);
	set_func_flags(0X43DE8B70,0x5410);
	set_frame_size(0X43DE8B70, 0XC, 4, 0X4);
	add_func    (0X43DE8BD0,0X43DE8C48);
	set_func_flags(0X43DE8BD0,0x5400);
	set_frame_size(0X43DE8BD0, 0X4, 0, 0);
	add_func    (0X43DE8CD0,0X43DE8D00);
	set_func_flags(0X43DE8CD0,0x5410);
	set_frame_size(0X43DE8CD0, 0, 4, 0X8);
	add_func    (0X43DE8D00,0X43DE8D3B);
	set_func_flags(0X43DE8D00,0x5410);
	set_frame_size(0X43DE8D00, 0, 4, 0X8);
	add_func    (0X43DE8D70,0X43DE8E4B);
	set_func_flags(0X43DE8D70,0x5410);
	set_frame_size(0X43DE8D70, 0X10, 4, 0X8);
	add_func    (0X43DE8F60,0X43DE8FE7);
	set_func_flags(0X43DE8F60,0x5400);
	set_frame_size(0X43DE8F60, 0X4, 0, 0X4);
	add_func    (0X43DE8FF0,0X43DE9058);
	set_func_flags(0X43DE8FF0,0x5400);
	set_frame_size(0X43DE8FF0, 0XC, 0, 0);
	add_func    (0X43DE9060,0X43DE908D);
	set_func_flags(0X43DE9060,0x5400);
	set_frame_size(0X43DE9060, 0X4, 0, 0);
	add_func    (0X43DE9090,0X43DE90D1);
	set_func_flags(0X43DE9090,0x5410);
	set_frame_size(0X43DE9090, 0XC, 4, 0X104);
	add_func    (0X43DE90E0,0X43DE91C7);
	set_func_flags(0X43DE90E0,0x5410);
	set_frame_size(0X43DE90E0, 0XC, 4, 0X118);
	add_func    (0X43DE91D0,0X43DE9235);
	set_func_flags(0X43DE91D0,0x5410);
	set_frame_size(0X43DE91D0, 0XC, 4, 0X4);
	add_func    (0X43DE9240,0X43DE9293);
	set_func_flags(0X43DE9240,0x5410);
	set_frame_size(0X43DE9240, 0, 4, 0X4);
	add_func    (0X43DE92A0,0X43DE92FE);
	set_func_flags(0X43DE92A0,0x5410);
	set_frame_size(0X43DE92A0, 0XC, 4, 0X104);
	add_func    (0X43DE9300,0X43DE9398);
	set_func_flags(0X43DE9300,0x5410);
	set_frame_size(0X43DE9300, 0X10, 4, 0X108);
	add_func    (0X43DE93B0,0X43DE947A);
	set_func_flags(0X43DE93B0,0x5410);
	set_frame_size(0X43DE93B0, 0XC, 4, 0X224);
	add_func    (0X43DE9480,0X43DE9558);
	set_func_flags(0X43DE9480,0x5410);
	set_frame_size(0X43DE9480, 0XC, 4, 0X224);
	add_func    (0X43DE9560,0X43DE95F4);
	set_func_flags(0X43DE9560,0x5410);
	set_frame_size(0X43DE9560, 0XC, 4, 0X110);
	add_func    (0X43DE99D0,0X43DE9A37);
	set_func_flags(0X43DE99D0,0x5410);
	set_frame_size(0X43DE99D0, 0XC, 4, 0X10C);
	add_func    (0X43DE9A40,0X43DE9AAA);
	set_func_flags(0X43DE9A40,0x5410);
	set_frame_size(0X43DE9A40, 0XC, 4, 0X110);
	add_func    (0X43DE9AB0,0X43DE9BA4);
	set_func_flags(0X43DE9AB0,0x5410);
	set_frame_size(0X43DE9AB0, 0XC, 4, 0X128);
	add_func    (0X43DE9BB0,0X43DE9BC0);
	set_func_flags(0X43DE9BB0,0x5410);
	set_frame_size(0X43DE9BB0, 0, 4, 0X4);
	add_func    (0X43DE9BC0,0X43DE9C9E);
	set_func_flags(0X43DE9BC0,0x5410);
	set_frame_size(0X43DE9BC0, 0XC, 4, 0X124);
	add_func    (0X43DE9CA0,0X43DE9E40);
	set_func_flags(0X43DE9CA0,0x5c00);
	set_frame_size(0X43DE9CA0, 0XC, 0, 0X118);
	add_func    (0X43DE9E40,0X43DE9E62);
	set_func_flags(0X43DE9E40,0x5400);
	set_frame_size(0X43DE9E40, 0X4, 0, 0X4);
	add_func    (0X43DE9E90,0X43DEA0DE);
	set_func_flags(0X43DE9E90,0x5410);
	set_frame_size(0X43DE9E90, 0XC, 4, 0X14);
	add_func    (0X43DEA0E0,0X43DEA7DC);
	set_func_flags(0X43DEA0E0,0x5410);
	set_frame_size(0X43DEA0E0, 0X50, 4, 0);
	add_func    (0X43DEA850,0X43DEA8CC);
	set_func_flags(0X43DEA850,0x5410);
	set_frame_size(0X43DEA850, 0XC, 4, 0X4);
	add_func    (0X43DEA8D0,0X43DEA8EB);
	set_func_flags(0X43DEA8D0,0x5400);
	set_frame_size(0X43DEA8D0, 0, 0, 0);
	add_func    (0X43DEAB80,0X43DEABC6);
	set_func_flags(0X43DEAB80,0x5400);
	set_frame_size(0X43DEAB80, 0X4, 0, 0);
	add_func    (0X43DEAC00,0X43DEAC0B);
	set_func_flags(0X43DEAC00,0x5400);
	set_frame_size(0X43DEAC00, 0, 0, 0);
	add_func    (0X43DEAC10,0X43DEAC28);
	set_func_flags(0X43DEAC10,0x5400);
	set_frame_size(0X43DEAC10, 0, 0, 0);
	add_func    (0X43DEBDB0,0X43DEBDEA);
	set_func_flags(0X43DEBDB0,0x5410);
	set_frame_size(0X43DEBDB0, 0, 4, 0X4);
	add_func    (0X43DEC2A0,0X43DECD53);
	set_func_flags(0X43DEC2A0,0x5410);
	set_frame_size(0X43DEC2A0, 0X5C, 4, 0X4);
	define_local_var(0X43DEC2A0, 0X43DECD53, "[bp-0X59]", "selfInstance");
	define_local_var(0X43DEC2A0, 0X43DECD53, "[bp-0X54]", "command");
	define_local_var(0X43DEC2A0, 0X43DECD53, "[bp-0X3C]", "a2");
	add_func    (0X43DECF70,0X43DED9E9);
	set_func_flags(0X43DECF70,0x5c10);
	set_frame_size(0X43DECF70, 0X2E8, 4, 0X4);
	define_local_var(0X43DECF70, 0X43DED9E9, "[bp-0X288]", "to");
	add_func    (0X43DEDA00,0X43DEDD5C);
	set_func_flags(0X43DEDA00,0x5c10);
	set_frame_size(0X43DEDA00, 0XC0, 4, 0X4);
	define_local_var(0X43DEDA00, 0X43DEDD5C, "[bp-0XA0]", "a2");
	define_local_var(0X43DEDA00, 0X43DEDD5C, "[bp-0X18]", "toArray");
	add_func    (0X43DEDD70,0X43DEE29B);
	set_func_flags(0X43DEDD70,0x1c11);
	set_frame_size(0X43DEDD70, 0X174, 4, 0);
	define_local_var(0X43DEDD70, 0X43DEE29B, "[bp-0X150]", "a2");
	define_local_var(0X43DEDD70, 0X43DEE29B, "[bp-0XC8]", "toArray");
	add_func    (0X43DEE2B6,0X43DEE2B7);
	set_func_flags(0X43DEE2B6,0x5440);
	set_frame_size(0X43DEE2B6, 0, 0, 0);
	add_func    (0X43DEEAA0,0X43DEF6F2);
	set_func_flags(0X43DEEAA0,0x5c10);
	set_frame_size(0X43DEEAA0, 0X298, 4, 0X4);
	define_local_var(0X43DEEAA0, 0X43DEF6F2, "[bp-0X1E0]", "a3");
	define_local_var(0X43DEEAA0, 0X43DEF6F2, "[bp-0X1A8]", "a2");
	add_func    (0X43DEF710,0X43DEF786);
	set_func_flags(0X43DEF710,0x1401);
	set_frame_size(0X43DEF710, 0X8, 0, 0);
	add_func    (0X43DEF790,0X43DEF7A4);
	set_func_flags(0X43DEF790,0x5410);
	set_frame_size(0X43DEF790, 0, 4, 0X8);
	add_func    (0X43DEF7B0,0X43DEF83A);
	set_func_flags(0X43DEF7B0,0x5410);
	set_frame_size(0X43DEF7B0, 0XC, 4, 0X4);
	add_func    (0X43DEF840,0X43DEF8D1);
	set_func_flags(0X43DEF840,0x5410);
	set_frame_size(0X43DEF840, 0X14, 4, 0XC);
	add_func    (0X43DEF8E0,0X43DEF8F7);
	set_func_flags(0X43DEF8E0,0x5400);
	set_frame_size(0X43DEF8E0, 0, 0, 0);
	add_func    (0X43DEF900,0X43DEF9B0);
	set_func_flags(0X43DEF900,0x5410);
	set_frame_size(0X43DEF900, 0X14, 4, 0X4);
	add_func    (0X43DEF9E0,0X43DEFA6A);
	set_func_flags(0X43DEF9E0,0x5410);
	set_frame_size(0X43DEF9E0, 0XC, 4, 0X4);
	add_func    (0X43DEFAA0,0X43DEFAFF);
	set_func_flags(0X43DEFAA0,0x5400);
	set_frame_size(0X43DEFAA0, 0X4, 0, 0);
	add_func    (0X43DEFB00,0X43DEFB64);
	set_func_flags(0X43DEFB00,0x5410);
	set_frame_size(0X43DEFB00, 0, 4, 0X4);
	add_func    (0X43DEFB70,0X43DEFD47);
	set_func_flags(0X43DEFB70,0x5410);
	set_frame_size(0X43DEFB70, 0X38, 4, 0XC);
	add_func    (0X43DEFD50,0X43DEFDA8);
	set_func_flags(0X43DEFD50,0x5410);
	set_frame_size(0X43DEFD50, 0X10, 4, 0X8);
	add_func    (0X43DEFDB0,0X43DEFEE0);
	set_func_flags(0X43DEFDB0,0x5410);
	set_frame_size(0X43DEFDB0, 0X30, 4, 0X8);
	add_func    (0X43DF0150,0X43DF0156);
	set_func_flags(0X43DF0150,0x5400);
	SetType(0X43DF0150, "char __fastcall sub_43DF0150(char symbol);");
	set_frame_size(0X43DF0150, 0, 0, 0);
	add_func    (0X43DF0160,0X43DF0166);
	set_func_flags(0X43DF0160,0x5400);
	SetType(0X43DF0160, "char __fastcall sub_43DF0160(char symbol);");
	set_frame_size(0X43DF0160, 0, 0, 0);
	add_func    (0X43DF0170,0X43DF0176);
	set_func_flags(0X43DF0170,0x5400);
	set_frame_size(0X43DF0170, 0, 0, 0);
	add_func    (0X43DF0180,0X43DF0186);
	set_func_flags(0X43DF0180,0x5400);
	set_frame_size(0X43DF0180, 0, 0, 0);
	add_func    (0X43DF0190,0X43DF0196);
	set_func_flags(0X43DF0190,0x5400);
	set_frame_size(0X43DF0190, 0, 0, 0);
	add_func    (0X43DF01A0,0X43DF01A6);
	set_func_flags(0X43DF01A0,0x5400);
	set_frame_size(0X43DF01A0, 0, 0, 0);
	add_func    (0X43DF01B0,0X43DF01B6);
	set_func_flags(0X43DF01B0,0x5400);
	set_frame_size(0X43DF01B0, 0, 0, 0);
	add_func    (0X43DF01C0,0X43DF01C6);
	set_func_flags(0X43DF01C0,0x5400);
	set_frame_size(0X43DF01C0, 0, 0, 0);
	add_func    (0X43DF01D0,0X43DF01D6);
	set_func_flags(0X43DF01D0,0x5400);
	set_frame_size(0X43DF01D0, 0, 0, 0);
	add_func    (0X43DF01E0,0X43DF01E6);
	set_func_flags(0X43DF01E0,0x5400);
	set_frame_size(0X43DF01E0, 0, 0, 0);
	add_func    (0X43DF01F0,0X43DF01F6);
	set_func_flags(0X43DF01F0,0x5400);
	set_frame_size(0X43DF01F0, 0, 0, 0);
	add_func    (0X43DF0200,0X43DF0206);
	set_func_flags(0X43DF0200,0x5400);
	set_frame_size(0X43DF0200, 0, 0, 0);
	add_func    (0X43DF0210,0X43DF0216);
	set_func_flags(0X43DF0210,0x5400);
	set_frame_size(0X43DF0210, 0, 0, 0);
	add_func    (0X43DF0220,0X43DF0226);
	set_func_flags(0X43DF0220,0x5400);
	set_frame_size(0X43DF0220, 0, 0, 0);
	add_func    (0X43DF0230,0X43DF0236);
	set_func_flags(0X43DF0230,0x5400);
	set_frame_size(0X43DF0230, 0, 0, 0);
	add_func    (0X43DF0240,0X43DF0246);
	set_func_flags(0X43DF0240,0x5400);
	set_frame_size(0X43DF0240, 0, 0, 0);
	add_func    (0X43DF0250,0X43DF0256);
	set_func_flags(0X43DF0250,0x5400);
	set_frame_size(0X43DF0250, 0, 0, 0);
	add_func    (0X43DF0260,0X43DF0266);
	set_func_flags(0X43DF0260,0x5400);
	set_frame_size(0X43DF0260, 0, 0, 0);
	add_func    (0X43DF0270,0X43DF0276);
	set_func_flags(0X43DF0270,0x5400);
	set_frame_size(0X43DF0270, 0, 0, 0);
	add_func    (0X43DF0280,0X43DF0286);
	set_func_flags(0X43DF0280,0x5400);
	set_frame_size(0X43DF0280, 0, 0, 0);
	add_func    (0X43DF0290,0X43DF0296);
	set_func_flags(0X43DF0290,0x5400);
	set_frame_size(0X43DF0290, 0, 0, 0);
	add_func    (0X43DF02A0,0X43DF02A6);
	set_func_flags(0X43DF02A0,0x5400);
	set_frame_size(0X43DF02A0, 0, 0, 0);
	add_func    (0X43DF02B0,0X43DF02B6);
	set_func_flags(0X43DF02B0,0x5400);
	set_frame_size(0X43DF02B0, 0, 0, 0);
	add_func    (0X43DF02C0,0X43DF02C6);
	set_func_flags(0X43DF02C0,0x5400);
	set_frame_size(0X43DF02C0, 0, 0, 0);
	add_func    (0X43DF02D0,0X43DF02D6);
	set_func_flags(0X43DF02D0,0x5400);
	set_frame_size(0X43DF02D0, 0, 0, 0);
	add_func    (0X43DF02E0,0X43DF02E6);
	set_func_flags(0X43DF02E0,0x5400);
	set_frame_size(0X43DF02E0, 0, 0, 0);
	add_func    (0X43DF02F0,0X43DF02F6);
	set_func_flags(0X43DF02F0,0x5400);
	set_frame_size(0X43DF02F0, 0, 0, 0);
	add_func    (0X43DF0300,0X43DF0306);
	set_func_flags(0X43DF0300,0x5400);
	set_frame_size(0X43DF0300, 0, 0, 0);
	add_func    (0X43DF0310,0X43DF0316);
	set_func_flags(0X43DF0310,0x5400);
	set_frame_size(0X43DF0310, 0, 0, 0);
	add_func    (0X43DF0320,0X43DF0326);
	set_func_flags(0X43DF0320,0x5400);
	set_frame_size(0X43DF0320, 0, 0, 0);
	add_func    (0X43DF0330,0X43DF0336);
	set_func_flags(0X43DF0330,0x5400);
	set_frame_size(0X43DF0330, 0, 0, 0);
	add_func    (0X43DF0340,0X43DF0346);
	set_func_flags(0X43DF0340,0x5400);
	set_frame_size(0X43DF0340, 0, 0, 0);
	add_func    (0X43DF0350,0X43DF0356);
	set_func_flags(0X43DF0350,0x5400);
	set_frame_size(0X43DF0350, 0, 0, 0);
	add_func    (0X43DF0360,0X43DF0366);
	set_func_flags(0X43DF0360,0x5400);
	set_frame_size(0X43DF0360, 0, 0, 0);
	add_func    (0X43DF0370,0X43DF0376);
	set_func_flags(0X43DF0370,0x5400);
	set_frame_size(0X43DF0370, 0, 0, 0);
	add_func    (0X43DF0380,0X43DF0386);
	set_func_flags(0X43DF0380,0x5400);
	set_frame_size(0X43DF0380, 0, 0, 0);
	add_func    (0X43DF0390,0X43DF0396);
	set_func_flags(0X43DF0390,0x5400);
	set_frame_size(0X43DF0390, 0, 0, 0);
	add_func    (0X43DF03A0,0X43DF03A6);
	set_func_flags(0X43DF03A0,0x5400);
	set_frame_size(0X43DF03A0, 0, 0, 0);
	add_func    (0X43DF03B0,0X43DF03B6);
	set_func_flags(0X43DF03B0,0x5400);
	set_frame_size(0X43DF03B0, 0, 0, 0);
	add_func    (0X43DF03C0,0X43DF03C6);
	set_func_flags(0X43DF03C0,0x5400);
	set_frame_size(0X43DF03C0, 0, 0, 0);
	add_func    (0X43DF03D0,0X43DF03D6);
	set_func_flags(0X43DF03D0,0x5400);
	set_frame_size(0X43DF03D0, 0, 0, 0);
	add_func    (0X43DF03E0,0X43DF03E6);
	set_func_flags(0X43DF03E0,0x5400);
	set_frame_size(0X43DF03E0, 0, 0, 0);
	add_func    (0X43DF03F0,0X43DF03F6);
	set_func_flags(0X43DF03F0,0x5400);
	set_frame_size(0X43DF03F0, 0, 0, 0);
	add_func    (0X43DF0400,0X43DF0406);
	set_func_flags(0X43DF0400,0x5400);
	set_frame_size(0X43DF0400, 0, 0, 0);
	add_func    (0X43DF0410,0X43DF0416);
	set_func_flags(0X43DF0410,0x5400);
	set_frame_size(0X43DF0410, 0, 0, 0);
	add_func    (0X43DF0420,0X43DF0426);
	set_func_flags(0X43DF0420,0x5400);
	set_frame_size(0X43DF0420, 0, 0, 0);
	add_func    (0X43DF0430,0X43DF0436);
	set_func_flags(0X43DF0430,0x5400);
	set_frame_size(0X43DF0430, 0, 0, 0);
	add_func    (0X43DF0440,0X43DF0446);
	set_func_flags(0X43DF0440,0x5400);
	set_frame_size(0X43DF0440, 0, 0, 0);
	add_func    (0X43DF0450,0X43DF0456);
	set_func_flags(0X43DF0450,0x5400);
	set_frame_size(0X43DF0450, 0, 0, 0);
	add_func    (0X43DF0460,0X43DF0466);
	set_func_flags(0X43DF0460,0x5400);
	set_frame_size(0X43DF0460, 0, 0, 0);
	add_func    (0X43DF0470,0X43DF0476);
	set_func_flags(0X43DF0470,0x5400);
	set_frame_size(0X43DF0470, 0, 0, 0);
	add_func    (0X43DF0480,0X43DF0486);
	set_func_flags(0X43DF0480,0x5400);
	set_frame_size(0X43DF0480, 0, 0, 0);
	add_func    (0X43DF0490,0X43DF0496);
	set_func_flags(0X43DF0490,0x5400);
	set_frame_size(0X43DF0490, 0, 0, 0);
	add_func    (0X43DF04A0,0X43DF04A6);
	set_func_flags(0X43DF04A0,0x5400);
	set_frame_size(0X43DF04A0, 0, 0, 0);
	add_func    (0X43DF04B0,0X43DF04B6);
	set_func_flags(0X43DF04B0,0x5400);
	set_frame_size(0X43DF04B0, 0, 0, 0);
	add_func    (0X43DF04C0,0X43DF04C6);
	set_func_flags(0X43DF04C0,0x5400);
	set_frame_size(0X43DF04C0, 0, 0, 0);
	add_func    (0X43DF04D0,0X43DF04D6);
	set_func_flags(0X43DF04D0,0x5400);
	set_frame_size(0X43DF04D0, 0, 0, 0);
	add_func    (0X43DF04E0,0X43DF04E6);
	set_func_flags(0X43DF04E0,0x5400);
	set_frame_size(0X43DF04E0, 0, 0, 0);
	add_func    (0X43DF04F0,0X43DF04F6);
	set_func_flags(0X43DF04F0,0x5400);
	set_frame_size(0X43DF04F0, 0, 0, 0);
	add_func    (0X43DF0500,0X43DF0506);
	set_func_flags(0X43DF0500,0x5400);
	set_frame_size(0X43DF0500, 0, 0, 0);
	add_func    (0X43DF0510,0X43DF0516);
	set_func_flags(0X43DF0510,0x5400);
	set_frame_size(0X43DF0510, 0, 0, 0);
	add_func    (0X43DF0520,0X43DF0526);
	set_func_flags(0X43DF0520,0x5400);
	set_frame_size(0X43DF0520, 0, 0, 0);
	add_func    (0X43DF0530,0X43DF0536);
	set_func_flags(0X43DF0530,0x5400);
	set_frame_size(0X43DF0530, 0, 0, 0);
	add_func    (0X43DF0540,0X43DF0546);
	set_func_flags(0X43DF0540,0x5400);
	set_frame_size(0X43DF0540, 0, 0, 0);
	add_func    (0X43DF0550,0X43DF0556);
	set_func_flags(0X43DF0550,0x5400);
	set_frame_size(0X43DF0550, 0, 0, 0);
	add_func    (0X43DF0560,0X43DF0566);
	set_func_flags(0X43DF0560,0x5400);
	set_frame_size(0X43DF0560, 0, 0, 0);
	add_func    (0X43DF0570,0X43DF0576);
	set_func_flags(0X43DF0570,0x5400);
	set_frame_size(0X43DF0570, 0, 0, 0);
	add_func    (0X43DF0580,0X43DF0586);
	set_func_flags(0X43DF0580,0x5400);
	set_frame_size(0X43DF0580, 0, 0, 0);
	add_func    (0X43DF0590,0X43DF0596);
	set_func_flags(0X43DF0590,0x5400);
	set_frame_size(0X43DF0590, 0, 0, 0);
	add_func    (0X43DF05A0,0X43DF05A6);
	set_func_flags(0X43DF05A0,0x5400);
	set_frame_size(0X43DF05A0, 0, 0, 0);
	add_func    (0X43DF05B0,0X43DF05B6);
	set_func_flags(0X43DF05B0,0x5400);
	set_frame_size(0X43DF05B0, 0, 0, 0);
	add_func    (0X43DF05C0,0X43DF05C6);
	set_func_flags(0X43DF05C0,0x5400);
	set_frame_size(0X43DF05C0, 0, 0, 0);
	add_func    (0X43DF05D0,0X43DF05D6);
	set_func_flags(0X43DF05D0,0x5400);
	set_frame_size(0X43DF05D0, 0, 0, 0);
	add_func    (0X43DF05E0,0X43DF05E6);
	set_func_flags(0X43DF05E0,0x5400);
	set_frame_size(0X43DF05E0, 0, 0, 0);
	add_func    (0X43DF05F0,0X43DF05F6);
	set_func_flags(0X43DF05F0,0x5400);
	set_frame_size(0X43DF05F0, 0, 0, 0);
	add_func    (0X43DF0600,0X43DF0606);
	set_func_flags(0X43DF0600,0x5400);
	set_frame_size(0X43DF0600, 0, 0, 0);
	add_func    (0X43DF0610,0X43DF0616);
	set_func_flags(0X43DF0610,0x5400);
	set_frame_size(0X43DF0610, 0, 0, 0);
	add_func    (0X43DF0F00,0X43DF0FBA);
	set_func_flags(0X43DF0F00,0x5410);
	set_frame_size(0X43DF0F00, 0X20, 4, 0);
	add_func    (0X43DF0FF0,0X43DF1101);
	set_func_flags(0X43DF0FF0,0x5410);
	set_frame_size(0X43DF0FF0, 0X30, 4, 0X4);
	add_func    (0X43DF1110,0X43DF11A3);
	set_func_flags(0X43DF1110,0x5410);
	set_frame_size(0X43DF1110, 0X28, 4, 0);
	add_func    (0X43DF11B0,0X43DF123B);
	set_func_flags(0X43DF11B0,0x5410);
	set_frame_size(0X43DF11B0, 0XC, 4, 0X8);
	add_func    (0X43DF1240,0X43DF12A4);
	set_func_flags(0X43DF1240,0x5400);
	set_frame_size(0X43DF1240, 0X8, 0, 0);
	add_func    (0X43DF12B0,0X43DF1398);
	set_func_flags(0X43DF12B0,0x5410);
	SetType(0X43DF12B0, "void __thiscall OneTap__Features__Misc__BuyBot__RunCmd(int *instance, const char *command, bool *isPlayerPointerNeeded);");
	set_frame_size(0X43DF12B0, 0X28, 4, 0X8);
	define_local_var(0X43DF12B0, 0X43DF1398, "[bp-0X4]", "vtable");
	define_local_var(0X43DF12B0, 0X43DF1398, "[bp+0X8]", "command");
	define_local_var(0X43DF12B0, 0X43DF1398, "[bp+0XC]", "isPlayerPointerNeeded");
	add_func    (0X43DF1530,0X43DF156A);
	set_func_flags(0X43DF1530,0x5400);
	SetType(0X43DF1530, "void __thiscall C_SDK__CBufferedCommand__Operator__New(OneTap::Classes::CBufferedCommand *instance);");
	set_frame_size(0X43DF1530, 0, 0, 0);
	add_func    (0X43E011D0,0X43E011D5);
	set_func_flags(0X43E011D0,0x5480);
	set_frame_size(0X43E011D0, 0, 0, 0);
	add_func    (0X43E03B10,0X43E03B96);
	set_func_flags(0X43E03B10,0x5410);
	set_frame_size(0X43E03B10, 0X10, 4, 0X8);
	add_func    (0X43E03C50,0X43E03C5B);
	set_func_flags(0X43E03C50,0x1401);
	add_func    (0X43E04450,0X43E04480);
	set_func_flags(0X43E04450,0x5410);
	set_frame_size(0X43E04450, 0, 4, 0);
	add_func    (0X43E04480,0X43E04664);
	set_func_flags(0X43E04480,0x5410);
	set_frame_size(0X43E04480, 0X2C, 4, 0X8);
	add_func    (0X43E047B0,0X43E0480E);
	set_func_flags(0X43E047B0,0x5410);
	set_frame_size(0X43E047B0, 0X8, 4, 0XC);
	add_func    (0X43E04810,0X43E04870);
	set_func_flags(0X43E04810,0x5410);
	set_frame_size(0X43E04810, 0X8, 4, 0XC);
	add_func    (0X43E05DB0,0X43E05E5B);
	set_func_flags(0X43E05DB0,0x5410);
	SetType(0X43E05DB0, "int __stdcall OneTap__HooksManager__DynamicSetup__FrameStageNotify();");
	set_frame_size(0X43E05DB0, 0X1C, 4, 0XC);
	define_local_var(0X43E05DB0, 0X43E05E5B, "[bp-0X1C]", "hookData");
	add_func    (0X43E05E60,0X43E05F0A);
	set_func_flags(0X43E05E60,0x5410);
	SetType(0X43E05E60, "void *__stdcall OneTap__HooksManager__DynamicSetup__Custom(void *proxy, void *interface);");
	set_frame_size(0X43E05E60, 0X1C, 4, 0XC);
	define_local_var(0X43E05E60, 0X43E05F0A, "[bp-0X1C]", "hookData");
	define_local_var(0X43E05E60, 0X43E05F0A, "[bp+0X8]", "proxy");
	define_local_var(0X43E05E60, 0X43E05F0A, "[bp+0XC]", "interface");
	add_func    (0X43E05F10,0X43E06002);
	set_func_flags(0X43E05F10,0x5410);
	SetType(0X43E05F10, "void *__stdcall OneTap__HooksManager__DynamicSetup__OnScreenSizeChanged();");
	set_frame_size(0X43E05F10, 0X1C, 4, 0XC);
	define_local_var(0X43E05F10, 0X43E06002, "[bp-0X1C]", "hookData");
	add_func    (0X43E06170,0X43E0621B);
	set_func_flags(0X43E06170,0x5410);
	SetType(0X43E06170, "void *__stdcall OneTap__HooksManager__DynamicSetup__OverrideView();");
	set_frame_size(0X43E06170, 0X1C, 4, 0XC);
	define_local_var(0X43E06170, 0X43E0621B, "[bp-0X1C]", "hookData");
	define_local_var(0X43E06170, 0X43E0621B, "[bp+0X8]", "a1");
	define_local_var(0X43E06170, 0X43E0621B, "[bp+0XC]", "a2");
	add_func    (0X43E06380,0X43E0642B);
	set_func_flags(0X43E06380,0x5410);
	SetType(0X43E06380, "void *__stdcall OneTap__HooksManager__DynamicSetup__GetViewmodelFov();");
	set_frame_size(0X43E06380, 0X1C, 4, 0XC);
	define_local_var(0X43E06380, 0X43E0642B, "[bp-0X1C]", "hookData");
	add_func    (0X43E064E0,0X43E0658B);
	set_func_flags(0X43E064E0,0x5410);
	SetType(0X43E064E0, "void *__stdcall OneTap__HooksManager__DynamicSetup__GetLocalViewAngles();");
	set_frame_size(0X43E064E0, 0X1C, 4, 0XC);
	define_local_var(0X43E064E0, 0X43E0658B, "[bp-0X1C]", "hookData");
	add_func    (0X43E06590,0X43E0663B);
	set_func_flags(0X43E06590,0x5410);
	SetType(0X43E06590, "int __stdcall OneTap__HooksManager__DynamicSetup__RunCommand();");
	set_frame_size(0X43E06590, 0X1C, 4, 0XC);
	define_local_var(0X43E06590, 0X43E0663B, "[bp-0X1C]", "hookData");
	add_func    (0X43E066F0,0X43E06766);
	set_func_flags(0X43E066F0,0x5410);
	SetType(0X43E066F0, "void *__stdcall OneTap__HooksManager__DynamicSetup__CreateMove();");
	set_frame_size(0X43E066F0, 0X1C, 4, 0XC);
	define_local_var(0X43E066F0, 0X43E06766, "[bp+0X8]", "a1");
	define_local_var(0X43E066F0, 0X43E06766, "[bp+0XC]", "a2");
	define_local_var(0X43E066F0, 0X43E06766, "[bp+0X10]", "a3");
	add_func    (0X43E06770,0X43E0681B);
	set_func_flags(0X43E06770,0x5410);
	SetType(0X43E06770, "int __stdcall OneTap__HooksManager__DynamicSetup__WriteUserCmdDeltaToBuffer();");
	set_frame_size(0X43E06770, 0X1C, 4, 0XC);
	define_local_var(0X43E06770, 0X43E0681B, "[bp-0X1C]", "hookData");
	add_func    (0X43E06A30,0X43E06ADB);
	set_func_flags(0X43E06A30,0x5410);
	SetType(0X43E06A30, "_DWORD __stdcall OneTap__HooksManager__DynamicSetup__DrawModelExecute();");
	set_frame_size(0X43E06A30, 0X1C, 4, 0XC);
	define_local_var(0X43E06A30, 0X43E06ADB, "[bp-0X1C]", "hookData");
	add_func    (0X43E06C40,0X43E06CEC);
	set_func_flags(0X43E06C40,0x5410);
	SetType(0X43E06C40, "int __stdcall OneTap__HooksManager__DynamicSetup__BoneSetup();");
	set_frame_size(0X43E06C40, 0X1C, 4, 0XC);
	define_local_var(0X43E06C40, 0X43E06CEC, "[bp-0X1C]", "hookData");
	add_func    (0X43E07480,0X43E0752B);
	set_func_flags(0X43E07480,0x5410);
	SetType(0X43E07480, "int __stdcall OneTap__HooksManager__DynamicSetup__ListLeavesInBox();");
	set_frame_size(0X43E07480, 0X1C, 4, 0XC);
	define_local_var(0X43E07480, 0X43E0752B, "[bp-0X1C]", "hookData");
	define_local_var(0X43E07480, 0X43E0752B, "[bp-0X8]", "v1");
	define_local_var(0X43E07480, 0X43E0752B, "[bp+0X8]", "a1");
	define_local_var(0X43E07480, 0X43E0752B, "[bp+0XC]", "a2");
	add_func    (0X43E07C80,0X43E0871A);
	set_func_flags(0X43E07C80,0x5410);
	SetType(0X43E07C80, "void __thiscall OneTap__Startup__SetupOffsets(_DWORD *buffer);");
	set_frame_size(0X43E07C80, 0X380, 4, 0);
	define_local_var(0X43E07C80, 0X43E0871A, "[bp-0X78]", "signature");
	define_local_var(0X43E07C80, 0X43E0871A, "[bp-0X14]", "engineModule");
	define_local_var(0X43E07C80, 0X43E0871A, "[bp-0X10]", "a5");
	define_local_var(0X43E07C80, 0X43E0871A, "[bp-0XC]", "a4");
	add_func    (0X43E0F590,0X43E0F60B);
	set_func_flags(0X43E0F590,0x5410);
	set_frame_size(0X43E0F590, 0X24, 4, 0X4);
	add_func    (0X43E11780,0X43E1182E);
	set_func_flags(0X43E11780,0x5410);
	SetType(0X43E11780, "void __thiscall C_SDK__CUserCmd__Operator__Copy(C_SDK::Classes::CUserCmd *to, C_SDK::Classes::CUserCmd *from);");
	set_frame_size(0X43E11780, 0, 4, 0X4);
	define_local_var(0X43E11780, 0X43E1182E, "[bp+0X8]", "from");
	add_func    (0X43E190B0,0X43E1912F);
	set_func_flags(0X43E190B0,0x5410);
	SetType(0X43E190B0, "_DWORD *__usercall C_SDK__InputSystem__Get__CVar@<eax>(const int a1@<edx>, int name@<ecx>, int a3, int a4, int a5, int a6, int a7, const float a8);");
	set_frame_size(0X43E190B0, 0X24, 4, 0);
	add_func    (0X43E19A96,0X43E19AC2);
	set_func_flags(0X43E19A96,0x5410);
	set_frame_size(0X43E19A96, 0X4, 4, 0);
	add_func    (0X43E19AC8,0X43E19AD6);
	set_func_flags(0X43E19AC8,0x5410);
	set_frame_size(0X43E19AC8, 0, 4, 0);
	add_func    (0X43E19AD6,0X43E19B06);
	set_func_flags(0X43E19AD6,0x5410);
	SetType(0X43E19AD6, "void *__cdecl operator_new(size_t Size);");
	set_frame_size(0X43E19AD6, 0, 4, 0);
	define_local_var(0X43E19AD6, 0X43E19B06, "[bp+0X8]", "Size");
	add_func    (0X43E19B06,0X43E19B4A);
	set_func_flags(0X43E19B06,0x5414);
	SetType(0X43E19B06, "struct _IMAGE_SECTION_HEADER *__cdecl Segment__Routine__FindPeSection(char *const imageBase, const unsigned int rva);");
	set_frame_size(0X43E19B06, 0X4, 4, 0);
	define_local_var(0X43E19B06, 0X43E19B4A, "[bp+0X8]", "imageBase");
	define_local_var(0X43E19B06, 0X43E19B4A, "[bp+0XC]", "rva");
	add_func    (0X43E19B4A,0X43E19B7C);
	set_func_flags(0X43E19B4A,0x5404);
	SetType(0X43E19B4A, "char Segment__Routine__Scrt__AcquireStartupLock(void);");
	set_frame_size(0X43E19B4A, 0X4, 0, 0);
	add_func    (0X43E19B7C,0X43E19BA7);
	set_func_flags(0X43E19B7C,0x5404);
	set_frame_size(0X43E19B7C, 0, 0, 0);
	add_func    (0X43E19BA7,0X43E19BB5);
	set_func_flags(0X43E19BA7,0x5404);
	set_frame_size(0X43E19BA7, 0, 0, 0);
	add_func    (0X43E19BB5,0X43E19BD4);
	set_func_flags(0X43E19BB5,0x5404);
	set_frame_size(0X43E19BB5, 0, 0, 0);
	add_func    (0X43E19BD4,0X43E19BE1);
	set_func_flags(0X43E19BD4,0x5404);
	set_frame_size(0X43E19BD4, 0, 0, 0);
	add_func    (0X43E19C15,0X43E19C38);
	set_func_flags(0X43E19C15,0x5404);
	SetType(0X43E19C15, "int Segment__Routine__Scrt__DllmainUninitializeC(void);");
	set_frame_size(0X43E19C15, 0, 0, 0);
	add_func    (0X43E19D05,0X43E19D99);
	set_func_flags(0X43E19D05,0x5414);
	SetType(0X43E19D05, "bool __cdecl Segment__Routine__Scrt__IsNonWritableInCurrenImage(int offset);");
	set_frame_size(0X43E19D05, 0X28, 0, 0);
	define_local_var(0X43E19D05, 0X43E19D99, "[bp-0X18]", "ms_exc");
	define_local_var(0X43E19D05, 0X43E19D99, "[bp+0X4]", "offset");
	add_func    (0X43E19DB6,0X43E19DDE);
	set_func_flags(0X43E19DB6,0x5414);
	SetType(0X43E19DB6, "char __cdecl Segment__Routine__Scrt__UninitializeCrt(char, char);");
	set_frame_size(0X43E19DB6, 0, 4, 0);
	add_func    (0X43E19DDE,0X43E19E0B);
	set_func_flags(0X43E19DDE,0x5410);
	set_frame_size(0X43E19DDE, 0, 4, 0);
	add_func    (0X43E19E0B,0X43E19E20);
	set_func_flags(0X43E19E0B,0x5410);
	set_frame_size(0X43E19E0B, 0, 4, 0);
	add_func    (0X43E19E43,0X43E19E4C);
	set_func_flags(0X43E19E43,0x5410);
	SetType(0X43E19E43, "void *__cdecl operator_new__(unsigned int);");
	set_frame_size(0X43E19E43, 0, 4, 0);
	add_func    (0X43E19E51,0X43E19EA4);
	set_func_flags(0X43E19E51,0x5410);
	SetType(0X43E19E51, "int __stdcall Segment__Startup__DllMain__CrtDispatch(HINSTANCE, unsigned int, void *const);");
	set_frame_size(0X43E19E51, 0, 4, 0XC);
	add_func    (0X43E19F87,0X43E19F91);
	set_func_flags(0X43E19F87,0x5404);
	set_frame_size(0X43E19F87, 0, 0, 0);
	add_func    (0X43E19FAB,0X43E1A012);
	set_func_flags(0X43E19FAB,0x5410);
	SetType(0X43E19FAB, "BOOL __cdecl Segment__Startup__DllMain__CrtProcessDetach(bool);");
	set_frame_size(0X43E19FAB, 0X2C, 0, 0);
	define_local_var(0X43E19FAB, 0X43E1A012, "[bp-0X18]", "ms_exc");
	add_func    (0X43E1A012,0X43E1A021);
	set_func_flags(0X43E1A012,0x5404);
	SetType(0X43E1A012, "int Segment__Routine__Scrt__DllmainUninitializeCritical(void);");
	set_frame_size(0X43E1A012, 0, 0, 0);
	add_func    (0X43E1A03B,0X43E1A141);
	set_func_flags(0X43E1A03B,0x5410);
	SetType(0X43E1A03B, "int __cdecl Segment__Startup__DllMain__Dispatch(int hinstDLL, int fdwReason, int lpvReserved);");
	set_frame_size(0X43E1A03B, 0X2C, 0, 0);
	define_local_var(0X43E1A03B, 0X43E1A141, "[bp-0X18]", "ms_exc");
	define_local_var(0X43E1A03B, 0X43E1A141, "[bp+0X4]", "hinstDLL");
	define_local_var(0X43E1A03B, 0X43E1A141, "[bp+0X8]", "fdwReason");
	define_local_var(0X43E1A03B, 0X43E1A141, "[bp+0XC]", "lpvReserved");
	define_local_var(0X43E1A03B, 0X43E1A141, "[bp+0X10]", "callbackRoutine");
	add_func    (0X43E1A16C,0X43E1A18F);
	set_func_flags(0X43E1A16C,0x5410);
	SetType(0X43E1A16C, "BOOL __stdcall Segment__Startup__DllEntryPoint(HINSTANCE hisntDLL, DWORD fdwReason, LPVOID lpReserved);");
	set_frame_size(0X43E1A16C, 0, 4, 0XC);
	define_local_var(0X43E1A16C, 0X43E1A18F, "[bp+0X8]", "hisntDLL");
	define_local_var(0X43E1A16C, 0X43E1A18F, "[bp+0XC]", "fdwReason");
	define_local_var(0X43E1A16C, 0X43E1A18F, "[bp+0X10]", "lpReserved");
	add_func    (0X43E1A18F,0X43E1A194);
	set_func_flags(0X43E1A18F,0x1480);
	add_func    (0X43E1A20B,0X43E1A238);
	set_func_flags(0X43E1A20B,0x5410);
	set_frame_size(0X43E1A20B, 0X4, 4, 0X4);
	add_func    (0X43E1A272,0X43E1A409);
	set_func_flags(0X43E1A272,0x5414);
	set_frame_size(0X43E1A272, 0X28, 4, 0);
	add_func    (0X43E1A40D,0X43E1A419);
	set_func_flags(0X43E1A40D,0x5404);
	SetType(0X43E1A40D, "int Segment__Routine__Scrt__IsUcrtDllInUse(void);");
	set_frame_size(0X43E1A40D, 0, 0, 0);
	add_func    (0X43E1A419,0X43E1A533);
	set_func_flags(0X43E1A419,0x5414);
	SetType(0X43E1A419, "LONG __usercall Segment__Routine__Scrt__FastFail@<eax>(int a1@<ebx>, int a2@<edi>, int a3@<esi>, unsigned int a4);");
	set_frame_size(0X43E1A419, 0X330, 4, 0);
	define_local_var(0X43E1A419, 0X43E1A533, "[bp-0X32C]", "num");
	define_local_var(0X43E1A419, 0X43E1A533, "[bp-0X324]", "pointer");
	define_local_var(0X43E1A419, 0X43E1A533, "[bp+0X8]", "a4");
	add_func    (0X43E1A533,0X43E1A53B);
	set_func_flags(0X43E1A533,0x5404);
	set_frame_size(0X43E1A533, 0, 0, 0);
	add_func    (0X43E1A540,0X43E1A586);
	set_func_flags(0X43E1A540,0x5400);
	set_frame_size(0X43E1A540, 0, 0, 0);
	add_func    (0X43E1A617,0X43E1A662);
	set_func_flags(0X43E1A617,0x5400);
	SetType(0X43E1A617, "signed int __thiscall Segment__Security__InitCookie(void *this);");
	set_frame_size(0X43E1A617, 0X8, 0, 0);
	define_local_var(0X43E1A617, 0X43E1A662, "[bp+0X4]", "this");
	add_func    (0X43E1A67A,0X43E1A697);
	set_func_flags(0X43E1A67A,0x5404);
	set_frame_size(0X43E1A67A, 0, 0, 0);
	add_func    (0X43E1A6F5,0X43E1A706);
	set_func_flags(0X43E1A6F5,0x5400);
	SetType(0X43E1A6F5, "void __cdecl Segment__Security__CheckCookie(char a1);");
	set_frame_size(0X43E1A6F5, 0, 0, 0);
	define_local_var(0X43E1A6F5, 0X43E1A706, "[bp+0X4]", "a1");
	add_func    (0X43E1A72E,0X43E1A827);
	set_func_flags(0X43E1A72E,0x5411);
	SetType(0X43E1A72E, "int __usercall __noreturn Segment__ExceptionManager__ReportGsFailure@<eax>(int a1@<ebx>, int a2@<edi>, int a3@<esi>, char a4);");
	set_frame_size(0X43E1A72E, 0X324, 4, 0);
	define_local_var(0X43E1A72E, 0X43E1A827, "[bp+0X8]", "a4");
	add_func    (0X43E1A833,0X43E1A839);
	set_func_flags(0X43E1A833,0x1480);
	add_func    (0X43E1A839,0X43E1A83F);
	set_func_flags(0X43E1A839,0x1480);
	SetType(0X43E1A839, "void __cdecl C_SDK__MemoryManagment__MemSet(void *pointer, int value, size_t num);");
	set_frame_size(0X43E1A839, 0, 0, 0);
	add_func    (0X43E1A845,0X43E1A84B);
	set_func_flags(0X43E1A845,0x5480);
	SetType(0X43E1A845, "int __cdecl _std_type_info_destroy_list();");
	add_func    (0X43E1A84B,0X43E1A851);
	set_func_flags(0X43E1A84B,0x1480);
	add_func    (0X43E1A851,0X43E1A857);
	set_func_flags(0X43E1A851,0x5480);
	SetType(0X43E1A851, "int __cdecl callnewh(_DWORD);");
	add_func    (0X43E1A857,0X43E1A85D);
	set_func_flags(0X43E1A857,0x1480);
	add_func    (0X43E1A875,0X43E1A87B);
	set_func_flags(0X43E1A875,0x1480);
	add_func    (0X43E1A87B,0X43E1A881);
	set_func_flags(0X43E1A87B,0x1484);
	SetType(0X43E1A87B, "int __cdecl Segment__Routine__ExecuteOnExitTable(_DWORD);");
	set_frame_size(0X43E1A87B, 0, 0, 0);
	add_func    (0X43E1A881,0X43E1A887);
	set_func_flags(0X43E1A881,0x1480);
	add_func    (0X43E1A88D,0X43E1A893);
	set_func_flags(0X43E1A88D,0x1484);
	set_frame_size(0X43E1A88D, 0, 0, 0);
	add_func    (0X43E1A893,0X43E1A899);
	set_func_flags(0X43E1A893,0x1484);
	set_frame_size(0X43E1A893, 0, 0, 0);
	add_func    (0X43E1A89F,0X43E1A8A2);
	set_func_flags(0X43E1A89F,0x5404);
	SetType(0X43E1A89F, "int __cdecl Segment__Routine__ShouldInitializeEnvironment2(_DWORD);");
	set_frame_size(0X43E1A89F, 0, 0, 0);
	add_func    (0X43E1ABC0,0X43E1ACCF);
	set_func_flags(0X43E1ABC0,0x5400);
	SetType(0X43E1ABC0, "void __thiscall OneTap__Features__AnimationSystem__TriggerBalanceAdjust(int player);");
	set_frame_size(0X43E1ABC0, 0X8, 0, 0);
	add_func    (0X43E1B300,0X43E1CB3C);
	set_func_flags(0X43E1B300,0x5400);
	SetType(0X43E1B300, "void __usercall OneTap__Features__AnimationSystem__Instance();");
	set_frame_size(0X43E1B300, 0XC, 0, 0);
	define_local_var(0X43E1B300, 0X43E1CB3C, "[bp+0X4]", "this");
	add_func    (0X43E1DB60,0X43E1DD32);
	set_func_flags(0X43E1DB60,0x5c10);
	SetType(0X43E1DB60, "void __thiscall OneTap__Features__RageBot__Resolver(OneTap::Classes::Animation::Record *record, OneTap::Classes::Animation::LagData *lagData, OneTap::Classes::Animation::LagData *prevLagData);");
	set_frame_size(0X43E1DB60, 0X10, 4, 0X8);
	define_local_var(0X43E1DB60, 0X43E1DD32, "[bp+0X8]", "lagData");
	define_local_var(0X43E1DB60, 0X43E1DD32, "[bp+0XC]", "prevLagData");
	add_func    (0X43E1DD40,0X43E1E2C2);
	set_func_flags(0X43E1DD40,0x5410);
	SetType(0X43E1DD40, "void __stdcall OneTap__Features__AnimationSystem__SetAngles(int player, OneTap::Classes::Animation::Record *animationRecord, OneTap::Classes::Animation::LagData *lagData, OneTap::Classes::Animation::LagData *prevLagData, int side);");
	set_frame_size(0X43E1DD40, 0X6C, 4, 0X14);
	define_local_var(0X43E1DD40, 0X43E1E2C2, "[bp-0X5C]", "data");
	define_local_var(0X43E1DD40, 0X43E1E2C2, "[bp-0X20]", "playerOrigin");
	define_local_var(0X43E1DD40, 0X43E1E2C2, "[bp-0X4]", "recordIndex");
	define_local_var(0X43E1DD40, 0X43E1E2C2, "[bp+0X8]", "player");
	define_local_var(0X43E1DD40, 0X43E1E2C2, "[bp+0X10]", "lagData");
	define_local_var(0X43E1DD40, 0X43E1E2C2, "[bp+0X14]", "prevLagData");
	add_func    (0X43E1E4D0,0X43E1E601);
	set_func_flags(0X43E1E4D0,0x5410);
	SetType(0X43E1E4D0, "void __thiscall OneTap__Features__AnimationSystem__Storage__Apply(OneTap::Classes::AnimationSystem::Data *animData, int player);");
	set_frame_size(0X43E1E4D0, 0XC, 4, 0X4);
	define_local_var(0X43E1E4D0, 0X43E1E601, "[bp+0X8]", "player");
	add_func    (0X43E1E610,0X43E1E731);
	set_func_flags(0X43E1E610,0x5410);
	SetType(0X43E1E610, "void __thiscall OneTap__Features__AnimationSystem__Storage__Save(OneTap::Classes::AnimationSystem::Data *data, int player);");
	set_frame_size(0X43E1E610, 0XC, 4, 0X4);
	define_local_var(0X43E1E610, 0X43E1E731, "[bp+0X8]", "player");
	add_func    (0X43E1E740,0X43E1E790);
	set_func_flags(0X43E1E740,0x5400);
	SetType(0X43E1E740, "void __thiscall C_SDK__GlobalVars__UpdateGlobal(C_SDK::Classes::CGlobalVarsBase *instance);");
	set_frame_size(0X43E1E740, 0X4, 0, 0);
	add_func    (0X43E1E790,0X43E1E7DC);
	set_func_flags(0X43E1E790,0x5400);
	SetType(0X43E1E790, "void __thiscall C_SDK__GlobalVars__Operator__New(C_SDK::Classes::CGlobalVarsBase::MiniState *instance);");
	set_frame_size(0X43E1E790, 0, 0, 0);
	add_func    (0X43E1E830,0X43E1F675);
	set_func_flags(0X43E1E830,0x5410);
	set_frame_size(0X43E1E830, 0X3C, 4, 0);
	add_func    (0X43E1F780,0X43E1FC56);
	set_func_flags(0X43E1F780,0x5410);
	set_frame_size(0X43E1F780, 0X44, 4, 0);
	add_func    (0X43E22AD0,0X43E22B32);
	set_func_flags(0X43E22AD0,0x5410);
	set_frame_size(0X43E22AD0, 0X8, 4, 0);
	add_func    (0X43E22BF0,0X43E23080);
	set_func_flags(0X43E22BF0,0x5410);
	SetType(0X43E22BF0, "int *__fastcall C_SDK__Security__FNV1A__GetFunctionPointer(IMAGE_NT_HEADERS *moduleHeader, int functionHash);");
	set_frame_size(0X43E22BF0, 0X88, 4, 0);
	add_func    (0X43E23080,0X43E232BB);
	set_func_flags(0X43E23080,0x5410);
	SetType(0X43E23080, "int *__thiscall C_SDK__Security__FNV1A__GetModulePointer(C_SDK::Security::FNV1A::Modules hash);");
	set_frame_size(0X43E23080, 0X50, 4, 0);
	add_func    (0X43E232C0,0X43E238D6);
	set_func_flags(0X43E232C0,0x5c00);
	SetType(0X43E232C0, "bool __stdcall OneTap__Features__AutoWall__TraceToExit(float start.x, float start.y, float start.z, float dir.x, float dir.y, float dir.z, C_SDK::Classes::Math::Vector::Aligned *end, C_SDK::Classes::EngineTrace::Trace *enterTrace, C_SDK::Classes::EngineTrace::Trace *exitTrace);");
	set_frame_size(0X43E232C0, 0XC, 0, 0X24);
	add_func    (0X43E238E0,0X43E23BB7);
	set_func_flags(0X43E238E0,0x5c10);
	SetType(0X43E238E0, "char __stdcall OneTap__Features__AutoWall__HandleBulletPenetration(_DWORD data);");
	set_frame_size(0X43E238E0, 0X86, 4, 0X4);
	define_local_var(0X43E238E0, 0X43E23BB7, "[bp-0X70]", "combinedPenetrationModifier");
	define_local_var(0X43E238E0, 0X43E23BB7, "[bp-0X6C]", "exitSurfaceData");
	define_local_var(0X43E238E0, 0X43E23BB7, "[bp-0X64]", "dummy");
	define_local_var(0X43E238E0, 0X43E23BB7, "[bp-0X58]", "a10");
	define_local_var(0X43E238E0, 0X43E23BB7, "[bp-0X4C]", "traceExit.endPos.x");
	define_local_var(0X43E238E0, 0X43E23BB7, "[bp-0X48]", "traceExit.endPos.y");
	define_local_var(0X43E238E0, 0X43E23BB7, "[bp-0X44]", "traceExit.endPos.z");
	define_local_var(0X43E238E0, 0X43E23BB7, "[bp+0X8]", "data");
	add_func    (0X43E23BC0,0X43E24191);
	set_func_flags(0X43E23BC0,0x5c10);
	set_frame_size(0X43E23BC0, 0XF0, 4, 0X4);
	define_local_var(0X43E23BC0, 0X43E24191, "[bp-0XB8]", "a1");
	define_local_var(0X43E23BC0, 0X43E24191, "[bp-0XA8]", "hitGroup");
	add_func    (0X43E25390,0X43E25527);
	set_func_flags(0X43E25390,0x5410);
	SetType(0X43E25390, "void __cdecl C_SDK__Security__Base64__EncodeGlobalBuffer(int len);");
	set_frame_size(0X43E25390, 0X1C, 4, 0);
	define_local_var(0X43E25390, 0X43E25527, "[bp-0XC]", "buf");
	define_local_var(0X43E25390, 0X43E25527, "[bp-0X8]", "tmp");
	define_local_var(0X43E25390, 0X43E25527, "[bp+0X8]", "len");
	add_func    (0X43E26B80,0X43E26C10);
	set_func_flags(0X43E26B80,0x5410);
	set_frame_size(0X43E26B80, 0X10, 4, 0);
	add_func    (0X43E27930,0X43E279BD);
	set_func_flags(0X43E27930,0x5410);
	SetType(0X43E27930, "void __usercall OneTap__Startup__Engine(__int16 *a1@<edx>, int *a2@<ecx>, int a3@<edi>);");
	set_frame_size(0X43E27930, 0X2E0, 4, 0);
	define_local_var(0X43E27930, 0X43E279BD, "[bp-0X220]", "a3");
	add_func    (0X43E279C0,0X43E285AD);
	set_func_flags(0X43E279C0,0x5c00);
	set_frame_size(0X43E279C0, 0XC, 0, 0);
	add_func    (0X43E287D0,0X43E289DC);
	set_func_flags(0X43E287D0,0x5410);
	set_frame_size(0X43E287D0, 0X2E8, 4, 0);
	add_func    (0X43E28B10,0X43E28B27);
	set_func_flags(0X43E28B10,0x5400);
	SetType(0X43E28B10, "bool __userpurge OneTap__Features__Hooks__Wrapper__CreateMove@<al>(float inputSampleTime, C_SDK::Classes::CUserCmd *cmd);");
	set_frame_size(0X43E28B10, 0X4, 0, 0XC);
	define_local_var(0X43E28B10, 0X43E28B27, "[bp+0X4]", "a3");
	define_local_var(0X43E28B10, 0X43E28B27, "[bp+0X8]", "a4");
	add_func    (0X43E28B30,0X43E29CF2);
	set_func_flags(0X43E28B30,0x5410);
	SetType(0X43E28B30, "bool __userpurge OneTap__Features__Hooks__CreateMove@<al>(float inputSampleTime, C_SDK::Classes::CUserCmd *cmd);");
	set_frame_size(0X43E28B30, 0X98, 4, 0X10);
	define_local_var(0X43E28B30, 0X43E29CF2, "[bp+0X8]", "a2");
	add_func    (0X43E2B050,0X43E2B3C2);
	set_func_flags(0X43E2B050,0x5410);
	SetType(0X43E2B050, "bool __thiscall OneTap__Features__HooksManager__Install(OneTap::Classes::HookManager::Data *hookData);");
	set_frame_size(0X43E2B050, 0X58, 4, 0);
	define_local_var(0X43E2B050, 0X43E2B3C2, "[bp-0X46]", "opCode");
	define_local_var(0X43E2B050, 0X43E2B3C2, "[bp-0X14]", "allocationSize");
	add_func    (0X43E2B410,0X43E2B413);
	set_func_flags(0X43E2B410,0x5440);
	set_frame_size(0X43E2B410, 0, 0, 0X18);
	add_func    (0X43E2B980,0X43E2C097);
	set_func_flags(0X43E2B980,0x5410);
	set_frame_size(0X43E2B980, 0X5C, 4, 0X10);
	add_func    (0X43E2C0A0,0X43E2C591);
	set_func_flags(0X43E2C0A0,0x5c10);
	set_frame_size(0X43E2C0A0, 0X8C, 4, 0);
	add_func    (0X43E2EDE0,0X43E2F6F6);
	set_func_flags(0X43E2EDE0,0x5410);
	SetType(0X43E2EDE0, "void __fastcall C_SDK__EventProcessor__Handle__BombPlanted(unsigned int a1, int a2, int a3, C_SDK::Structs::EventInfo *a4);");
	set_frame_size(0X43E2EDE0, 0X128, 4, 0X8);
	define_local_var(0X43E2EDE0, 0X43E2F6F6, "[bp-0XC0]", "a2");
	define_local_var(0X43E2EDE0, 0X43E2F6F6, "[bp-0XB0]", "a3");
	define_local_var(0X43E2EDE0, 0X43E2F6F6, "[bp-0XA0]", "esi0");
	define_local_var(0X43E2EDE0, 0X43E2F6F6, "[bp-0X90]", "esi0");
	add_func    (0X43E2F700,0X43E2FA2D);
	set_func_flags(0X43E2F700,0x5410);
	set_frame_size(0X43E2F700, 0X80, 4, 0X8);
	add_func    (0X43E2FC00,0X43E2FC60);
	set_func_flags(0X43E2FC00,0x5400);
	set_frame_size(0X43E2FC00, 0, 0, 0X8);
	add_func    (0X43E2FD60,0X43E30630);
	set_func_flags(0X43E2FD60,0x5c00);
	set_frame_size(0X43E2FD60, 0XC, 0, 0X8);
	add_func    (0X43E30690,0X43E318DC);
	set_func_flags(0X43E30690,0x5c00);
	set_frame_size(0X43E30690, 0XC, 0, 0X8);
	add_func    (0X43E318F0,0X43E323C5);
	set_func_flags(0X43E318F0,0x5c00);
	set_frame_size(0X43E318F0, 0XC, 0, 0X8);
	add_func    (0X43E323E0,0X43E329FE);
	set_func_flags(0X43E323E0,0x5410);
	SetType(0X43E323E0, "void __userpurge C_SDK__EventProcessor__Handle__BulletImpact(double a1@<st0>, int a2, C_SDK::Structs::EventInfo *a3);");
	set_frame_size(0X43E323E0, 0XB4, 4, 0X8);
	define_local_var(0X43E323E0, 0X43E329FE, "[bp-0X58]", "a2");
	define_local_var(0X43E323E0, 0X43E329FE, "[bp-0XC]", "a1");
	add_func    (0X43E32A00,0X43E32C0B);
	set_func_flags(0X43E32A00,0x5400);
	SetType(0X43E32A00, "void __cdecl C_SDK__EventProcessor__Handle__WeaponFire(int instance, const char *name, bool dontBroadcast);");
	set_frame_size(0X43E32A00, 0XC, 0, 0);
	define_local_var(0X43E32A00, 0X43E32C0B, "[bp+0X4]", "instance");
	define_local_var(0X43E32A00, 0X43E32C0B, "[bp+0X8]", "name");
	define_local_var(0X43E32A00, 0X43E32C0B, "[bp+0XC]", "dontBroadcast");
	add_func    (0X43E32C70,0X43E32FEF);
	set_func_flags(0X43E32C70,0x5410);
	set_frame_size(0X43E32C70, 0X5A8, 4, 0);
	add_func    (0X43E32FF0,0X43E33764);
	set_func_flags(0X43E32FF0,0x5410);
	SetType(0X43E32FF0, "void __stdcall C_SDK__EventProcessor__Instance(C_SDK::Structs::EventInfo *eventInfo);");
	set_frame_size(0X43E32FF0, 0X60, 4, 0X4);
	define_local_var(0X43E32FF0, 0X43E33764, "[bp-0X38]", "instance");
	define_local_var(0X43E32FF0, 0X43E33764, "[bp-0X28]", "a3");
	define_local_var(0X43E32FF0, 0X43E33764, "[bp+0X8]", "eventInfo");
	add_func    (0X43E35780,0X43E359CD);
	set_func_flags(0X43E35780,0x5410);
	set_frame_size(0X43E35780, 0X68, 4, 0);
	add_func    (0X43E36120,0X43E36307);
	set_func_flags(0X43E36120,0x5c10);
	set_frame_size(0X43E36120, 0X58, 4, 0X8);
	add_func    (0X43E36810,0X43E3695C);
	set_func_flags(0X43E36810,0x5410);
	SetType(0X43E36810, "void __fastcall OneTap__Features__Hooks__FrameStageNotify(void *ecx, void *edx, C_SDK::Engine::IClientMode::FSN stage);");
	set_frame_size(0X43E36810, 0X14, 4, 0X4);
	define_local_var(0X43E36810, 0X43E3695C, "[bp+0X8]", "fsnStage");
	add_func    (0X43E369E0,0X43E36BDD);
	set_func_flags(0X43E369E0,0x5410);
	set_frame_size(0X43E369E0, 0X24, 4, 0);
	define_local_var(0X43E369E0, 0X43E36BDD, "[bp-0X1C]", "a2");
	add_func    (0X43E36BE0,0X43E37548);
	set_func_flags(0X43E36BE0,0x5410);
	SetType(0X43E36BE0, "void __usercall OneTap__Features__Hooks__FrameStageNofity__Pre(int stage);");
	set_frame_size(0X43E36BE0, 0X5C, 4, 0);
	define_local_var(0X43E36BE0, 0X43E37548, "[bp-0X30]", "nextCmdTime");
	define_local_var(0X43E36BE0, 0X43E37548, "[bp+0X8]", "stage");
	add_func    (0X43E38E80,0X43E3901F);
	set_func_flags(0X43E38E80,0x5410);
	SetType(0X43E38E80, "int __fastcall OneTap__Features__Hooks__GetLocalViewAngles(C_SDK::Classes::Math::Vector::Rectangular *angles);");
	set_frame_size(0X43E38E80, 0X24, 4, 0X4);
	add_func    (0X43E39020,0X43E391BB);
	set_func_flags(0X43E39020,0x5410);
	set_frame_size(0X43E39020, 0X4, 4, 0);
	add_func    (0X43E5AB50,0X43E60392);
	set_func_flags(0X43E5AB50,0x4a00);
	set_frame_size(0X43E5AB50, 0XC, 0, 0X4);
	add_func    (0X43E603A0,0X43E75A82);
	set_func_flags(0X43E603A0,0x5c00);
	set_frame_size(0X43E603A0, 0XC, 0, 0X4);
	add_func    (0X43E75A90,0X43E97FBD);
	set_func_flags(0X43E75A90,0x5c00);
	set_frame_size(0X43E75A90, 0XC, 0, 0X4);
	add_func    (0X43E97FC0,0X43EA6709);
	set_func_flags(0X43E97FC0,0x5c00);
	set_frame_size(0X43E97FC0, 0XC, 0, 0X4);
	add_func    (0X43EA6710,0X43EB4BA2);
	set_func_flags(0X43EA6710,0x5c00);
	set_frame_size(0X43EA6710, 0XC, 0, 0X4);
	add_func    (0X43EB4BB0,0X43EBCD90);
	set_func_flags(0X43EB4BB0,0x5c00);
	set_frame_size(0X43EB4BB0, 0X12C, 0, 0X4);
	add_func    (0X43EBD1A0,0X43EBD25B);
	set_func_flags(0X43EBD1A0,0x5c10);
	set_frame_size(0X43EBD1A0, 0X18, 4, 0);
	add_func    (0X43EBD260,0X43EBDBF2);
	set_func_flags(0X43EBD260,0x5000);
	set_frame_size(0X43EBD260, 0XC, 0, 0X4);
	add_func    (0X43EBE9D0,0X43EBE9E0);
	set_func_flags(0X43EBE9D0,0x5410);
	SetType(0X43EBE9D0, "BOOL __stdcall OneTap__Startup__DllMain(HMODULE module, int reason, LPVOID callbackRoutine);");
	set_func_cmt(0X43EBE9D0,	"\n > OneTap start-up: OneTap#Startup#Engine. \n > Note: It's BeginScene hook.\n \n", 1);
	set_frame_size(0X43EBE9D0, 0, 4, 0XC);
	define_local_var(0X43EBE9D0, 0X43EBE9E0, "[bp+0XC]", "reason");
	add_func    (0X43EBE9E0,0X43EBE9E1);
	set_func_flags(0X43EBE9E0,0x5440);
	set_frame_size(0X43EBE9E0, 0, 0, 0);
	add_func    (0X43EC1B30,0X43EC45EA);
	set_func_flags(0X43EC1B30,0x5000);
	set_frame_size(0X43EC1B30, 0X128, 0, 0);
	add_func    (0X43EC7CA0,0X43EC7EB2);
	set_func_flags(0X43EC7CA0,0x4010);
	set_frame_size(0X43EC7CA0, 0X270, 4, 0X14);
	add_func    (0X43EC8760,0X43EC897E);
	set_func_flags(0X43EC8760,0x5410);
	SetType(0X43EC8760, "unsigned int __fastcall C_SDK__Security__FNV1A__SearchSignature(int *module, const char *signature, int a3, unsigned int *a4, int *a5);");
	set_frame_size(0X43EC8760, 0X7C, 4, 0);
	add_func    (0X43EC8980,0X43EC8BA0);
	set_func_flags(0X43EC8980,0x5410);
	SetType(0X43EC8980, "int __fastcall C_SDK__Security__FNV1A__SearchSignature__Engine(int *module, const char *signature, int a3, unsigned int *a4, int *a5);");
	set_frame_size(0X43EC8980, 0X7C, 4, 0);
	add_func    (0X43EC8BA0,0X43EC8DC0);
	set_func_flags(0X43EC8BA0,0x4210);
	set_frame_size(0X43EC8BA0, 0X7C, 4, 0);
	add_func    (0X43EC9080,0X43EC9100);
	set_func_flags(0X43EC9080,0x5010);
	SetType(0X43EC9080, "void __usercall OneTap__Startup__Engine__ScanGameTask(int currentModule@<ebx>, int a2@<edi>, int a3@<esi>, int a4@<ecx>);");
	set_frame_size(0X43EC9080, 0X1338, 4, 0);
	add_func    (0X43EC9100,0X43ECCCE5);
	set_func_flags(0X43EC9100,0x5000);
	set_frame_size(0X43EC9100, 0X24, 0, 0);
	add_func    (0X43ECD100,0X43ECD16C);
	set_func_flags(0X43ECD100,0x5410);
	SetType(0X43ECD100, "bool __thiscall OneTap__Features__Hooks__InPrediction(void *this);");
	set_frame_size(0X43ECD100, 0X8, 4, 0);
	add_func    (0X43ECEB40,0X43ECEB4B);
	set_func_flags(0X43ECEB40,0x5400);
	SetType(0X43ECEB40, "float __usercall C_SDK__Server__GetGlobalTickInterval@<xmm0>();");
	set_frame_size(0X43ECEB40, 0, 0, 0);
	add_func    (0X43ED1BA0,0X43ED2205);
	set_func_flags(0X43ED1BA0,0x5410);
	SetType(0X43ED1BA0, "C_SDK::Classes::Math::Vector::Rectangular *__userpurge OneTap__Features__LegitBot__GetBestTarget@<eax>(int a1@<edi>, int localPlayer@<esi>, double v15@<st0>, double st4_0@<st3>, double a5@<st1>, double a6@<st2>, C_SDK::Classes::Math::Vector::Rectangular *a3);");
	set_frame_size(0X43ED1BA0, 0X780, 4, 0X4);
	define_local_var(0X43ED1BA0, 0X43ED2205, "[bp-0X75C]", "a4");
	define_local_var(0X43ED1BA0, 0X43ED2205, "[bp-0X744]", "player_vec_start");
	define_local_var(0X43ED1BA0, 0X43ED2205, "[bp-0X740]", "player_vec_end");
	define_local_var(0X43ED1BA0, 0X43ED2205, "[bp-0X720]", "a2");
	define_local_var(0X43ED1BA0, 0X43ED2205, "[bp-0X704]", "a3");
	define_local_var(0X43ED1BA0, 0X43ED2205, "[bp-0X6F8]", "start");
	define_local_var(0X43ED1BA0, 0X43ED2205, "[bp-0X694]", "m_pPlayer_Copy");
	add_func    (0X43ED3090,0X43ED3632);
	set_func_flags(0X43ED3090,0x5400);
	set_frame_size(0X43ED3090, 0XC, 0, 0);
	add_func    (0X43ED5570,0X43ED557B);
	set_func_flags(0X43ED5570,0x5400);
	SetType(0X43ED5570, "float __usercall C_SDK__Server__GetGlobalTickIntervalSecond@<xmm0>();");
	set_frame_size(0X43ED5570, 0, 0, 0);
	add_func    (0X43ED5800,0X43ED5B2C);
	set_func_flags(0X43ED5800,0x5410);
	SetType(0X43ED5800, "double __usercall OneTap__Features__LegitBot__Instance@<st0>(float a1@<xmm0>, int a2@<edi>, double player@<st0>);");
	set_frame_size(0X43ED5800, 0X28, 4, 0);
	define_local_var(0X43ED5800, 0X43ED5B2C, "[bp-0XC]", "a3");
	add_func    (0X43ED5C10,0X43ED5CF5);
	set_func_flags(0X43ED5C10,0x5410);
	SetType(0X43ED5C10, "int __fastcall OneTap__Features__Hooks__ListLeavesInBox(void *bsp, void *edx, C_SDK::Classes::Math::Vector::Rectangular *mins, C_SDK::Classes::Math::Vector::Rectangular *maxs, unsigned __int16 *list, int listMax);");
	set_frame_size(0X43ED5C10, 0X8, 4, 0X10);
	define_local_var(0X43ED5C10, 0X43ED5CF5, "[bp+0X8]", "mins");
	define_local_var(0X43ED5C10, 0X43ED5CF5, "[bp+0XC]", "maxs");
	define_local_var(0X43ED5C10, 0X43ED5CF5, "[bp+0X10]", "list");
	define_local_var(0X43ED5C10, 0X43ED5CF5, "[bp+0X14]", "listMax");
	add_func    (0X43EDC170,0X43EDC8EC);
	set_func_flags(0X43EDC170,0x5010);
	set_frame_size(0X43EDC170, 0X50, 4, 0X8);
	add_func    (0X43EDC930,0X43EE0527);
	set_func_flags(0X43EDC930,0x5010);
	set_frame_size(0X43EDC930, 0X48, 4, 0X4);
	add_func    (0X43EED4A0,0X43EED879);
	set_func_flags(0X43EED4A0,0x5010);
	set_frame_size(0X43EED4A0, 0X74, 4, 0X4);
	add_func    (0X43EEE030,0X43EEE07F);
	set_func_flags(0X43EEE030,0x4010);
	set_frame_size(0X43EEE030, 0X4, 4, 0X4);
	add_func    (0X43EEE520,0X43EEE5C4);
	set_func_flags(0X43EEE520,0x4200);
	set_frame_size(0X43EEE520, 0XC, 0, 0);
	add_func    (0X43EEE5D0,0X43EEEA69);
	set_func_flags(0X43EEE5D0,0x4210);
	set_frame_size(0X43EEE5D0, 0X18, 4, 0);
	add_func    (0X43EEEAC0,0X43EEEB72);
	set_func_flags(0X43EEEAC0,0x4010);
	set_frame_size(0X43EEEAC0, 0X34, 4, 0X14);
	add_func    (0X43EF1350,0X43EF185C);
	set_func_flags(0X43EF1350,0x5010);
	SetType(0X43EF1350, "_DWORD *__thiscall OneTap__Features__Visuals__DamageMarkers(void *this, _DWORD *a2, int killCount);");
	set_frame_size(0X43EF1350, 0X30, 4, 0X8);
	define_local_var(0X43EF1350, 0X43EF185C, "[bp+0XC]", "killCount");
	add_func    (0X43EF1AE0,0X43EF1B07);
	set_func_flags(0X43EF1AE0,0x5400);
	SetType(0X43EF1AE0, "int __thiscall C_SDK__Surface__SoundSystem__PlaySound(const char *soundName);");
	set_frame_size(0X43EF1AE0, 0X4, 0, 0);
	add_func    (0X43EFA180,0X43EFA19F);
	set_func_flags(0X43EFA180,0x1400);
	set_frame_size(0X43EFA180, 0, 0, 0);
	add_func    (0X43EFA4D0,0X43EFA894);
	set_func_flags(0X43EFA4D0,0x5010);
	SetType(0X43EFA4D0, "void __usercall OneTap__Logger__ToEvent(C_SDK::Classes::ICVar **esi0@<esi>, int a1, int a2, int a3, ...);");
	set_frame_size(0X43EFA4D0, 0X58C, 4, 0);
	define_local_var(0X43EFA4D0, 0X43EFA894, "[bp-0X500]", "pointer");
	define_local_var(0X43EFA4D0, 0X43EFA894, "[bp-0X400]", "a2");
	add_func    (0X43EFA8A0,0X43EFAABC);
	set_func_flags(0X43EFA8A0,0x5410);
	set_frame_size(0X43EFA8A0, 0X7C, 4, 0);
	add_func    (0X43EFB700,0X43EFBAE4);
	set_func_flags(0X43EFB700,0x5410);
	set_frame_size(0X43EFB700, 0X38, 4, 0);
	define_local_var(0X43EFB700, 0X43EFBAE4, "[bp-0XC]", "a1");
	add_func    (0X43EFC4A0,0X43EFCC99);
	set_func_flags(0X43EFC4A0,0x5000);
	set_func_cmt(0X43EFC4A0,	"\n > Yes, my eyes hurts too.\n > Seems like first self-coded function in OT. :D\n ", 1);
	set_frame_size(0X43EFC4A0, 0XC, 0, 0);
	add_func    (0X43EFCD40,0X43EFCFCE);
	set_func_flags(0X43EFCD40,0x5010);
	set_frame_size(0X43EFCD40, 0X64, 4, 0);
	define_local_var(0X43EFCD40, 0X43EFCFCE, "[bp-0X30]", "a2");
	add_func    (0X43EFCFD0,0X43EFF9EF);
	set_func_flags(0X43EFCFD0,0x5010);
	set_frame_size(0X43EFCFD0, 0XE2, 4, 0);
	define_local_var(0X43EFCFD0, 0X43EFF9EF, "[bp-0XCC]", "selfInstance");
	define_local_var(0X43EFCFD0, 0X43EFF9EF, "[bp-0X18]", "cmdArr");
	add_func    (0X43F00110,0X43F005E1);
	set_func_flags(0X43F00110,0x5410);
	SetType(0X43F00110, "void __cdecl OneTap__Features__FakeDuck__Instance();");
	set_frame_size(0X43F00110, 0X10, 4, 0);
	define_local_var(0X43F00110, 0X43F005E1, "[bp-0XC]", "maxChoke");
	define_local_var(0X43F00110, 0X43F005E1, "[bp-0X1]", "isFakeDuckEnabled");
	add_func    (0X43F005F0,0X43F0075A);
	set_func_flags(0X43F005F0,0x5400);
	set_frame_size(0X43F005F0, 0, 0, 0);
	add_func    (0X43F01940,0X43F02168);
	set_func_flags(0X43F01940,0x5410);
	SetType(0X43F01940, "void __cdecl OneTap__Features__Misc__AutoStrafe__Rage();");
	set_frame_size(0X43F01940, 0X40, 4, 0);
	define_local_var(0X43F01940, 0X43F02168, "[bp-0X24]", "velocity.m_y.rad2deg");
	define_local_var(0X43F01940, 0X43F02168, "[bp-0X1C]", "velocity.m_square");
	define_local_var(0X43F01940, 0X43F02168, "[bp-0X18]", "velocity.m_y.atan");
	define_local_var(0X43F01940, 0X43F02168, "[bp-0X4]", "velocity.m_y.square");
	add_func    (0X43F02170,0X43F02615);
	set_func_flags(0X43F02170,0x5410);
	set_frame_size(0X43F02170, 0X28, 4, 0);
	add_func    (0X43F02620,0X43F02B4E);
	set_func_flags(0X43F02620,0x5410);
	set_frame_size(0X43F02620, 0X20, 4, 0);
	define_local_var(0X43F02620, 0X43F02B4E, "[bp-0XC]", "velocity.m_y.square");
	add_func    (0X43F02B50,0X43F02CFA);
	set_func_flags(0X43F02B50,0x5410);
	set_frame_size(0X43F02B50, 0X10, 4, 0);
	define_local_var(0X43F02B50, 0X43F02CFA, "[bp-0X4]", "velocity.m_x");
	add_func    (0X43F05740,0X43F05801);
	set_func_flags(0X43F05740,0x5410);
	set_frame_size(0X43F05740, 0X18, 4, 0X8);
	add_func    (0X43F05810,0X43F05885);
	set_func_flags(0X43F05810,0x5410);
	SetType(0X43F05810, "unsigned int __stdcall C_SDK__Security__FNV1A__GetClassPointer(int targetHash);");
	set_frame_size(0X43F05810, 0XC, 4, 0X4);
	define_local_var(0X43F05810, 0X43F05885, "[bp+0X8]", "targetHash");
	add_func    (0X43F05B70,0X43F05C67);
	set_func_flags(0X43F05B70,0x5410);
	SetType(0X43F05B70, "int __stdcall C_SDK__Security__FNV1A__GetOffsetToVariable(int classHash, int propHash);");
	set_frame_size(0X43F05B70, 0X58, 4, 0X8);
	define_local_var(0X43F05B70, 0X43F05C67, "[bp-0X4]", "klass");
	define_local_var(0X43F05B70, 0X43F05C67, "[bp+0X8]", "classHash");
	define_local_var(0X43F05B70, 0X43F05C67, "[bp+0XC]", "propHash");
	add_func    (0X43F05C70,0X43F05C81);
	set_func_flags(0X43F05C70,0x1410);
	set_frame_size(0X43F05C70, 0, 4, 0);
	add_func    (0X43F05F50,0X43F06C63);
	set_func_flags(0X43F05F50,0x5410);
	set_frame_size(0X43F05F50, 0X14C, 4, 0X4);
	add_func    (0X43F07AA0,0X43F07AFE);
	set_func_flags(0X43F07AA0,0x5410);
	SetType(0X43F07AA0, "int __thiscall C_SDK__Player__Animation__InvalidateBoneCache(int player, int modelBoneCounter);");
	set_frame_size(0X43F07AA0, 0X4, 4, 0X4);
	define_local_var(0X43F07AA0, 0X43F07AFE, "[bp+0X8]", "modelBoneCounter");
	add_func    (0X43F07C70,0X43F07D1A);
	set_func_flags(0X43F07C70,0x5410);
	SetType(0X43F07C70, "bool __thiscall OneTap__Features__AnimationSystem__SetupBones(int player, int matrixPointer, int a3, int a4, float currentTime);");
	set_frame_size(0X43F07C70, 0X10, 4, 0X10);
	define_local_var(0X43F07C70, 0X43F07D1A, "[bp-0X10]", "currentTime");
	define_local_var(0X43F07C70, 0X43F07D1A, "[bp+0X8]", "matrixPointer");
	define_local_var(0X43F07C70, 0X43F07D1A, "[bp+0X14]", "isSetup");
	add_func    (0X43F07D20,0X43F07D87);
	set_func_flags(0X43F07D20,0x5400);
	SetType(0X43F07D20, "int *__thiscall C_SDK__Player__Weapon__GetActiveWeapon(unsigned int *player);");
	set_frame_size(0X43F07D20, 0X8, 0, 0);
	add_func    (0X43F080C0,0X43F08198);
	set_func_flags(0X43F080C0,0x5400);
	SetType(0X43F080C0, "bool __thiscall C_SDK__Player__Controller__IsInTeam(unsigned int *player);");
	set_frame_size(0X43F080C0, 0X8, 0, 0);
	add_func    (0X43F087B0,0X43F0886F);
	set_func_flags(0X43F087B0,0x5410);
	set_frame_size(0X43F087B0, 0X4, 4, 0);
	add_func    (0X43F08BF0,0X43F090EA);
	set_func_flags(0X43F08BF0,0x5410);
	set_frame_size(0X43F08BF0, 0X1C, 4, 0X4);
	define_local_var(0X43F08BF0, 0X43F090EA, "[bp-0X10]", "predictionRandomSeed");
	define_local_var(0X43F08BF0, 0X43F090EA, "[bp-0XC]", "predictionPlayer");
	add_func    (0X43F09160,0X43F0936C);
	set_func_flags(0X43F09160,0x5000);
	set_frame_size(0X43F09160, 0XC, 0, 0);
	add_func    (0X43F09370,0X43F09D96);
	set_func_flags(0X43F09370,0x5000);
	set_frame_size(0X43F09370, 0X16C, 0, 0);
	define_local_var(0X43F09370, 0X43F09D96, "[bp-0X154]", "a4");
	define_local_var(0X43F09370, 0X43F09D96, "[bp-0X150]", "a5");
	define_local_var(0X43F09370, 0X43F09D96, "[bp-0X8C]", "m_time64");
	define_local_var(0X43F09370, 0X43F09D96, "[bp-0X28]", "textBuffer");
	add_func    (0X43F09DB0,0X43F09FB4);
	set_func_flags(0X43F09DB0,0x5410);
	set_frame_size(0X43F09DB0, 0X1A, 4, 0X14);
	define_local_var(0X43F09DB0, 0X43F09FB4, "[bp-0X8]", "a1");
	add_func    (0X43F0D0D0,0X43F0D9C7);
	set_func_flags(0X43F0D0D0,0x5010);
	set_frame_size(0X43F0D0D0, 0X88, 4, 0);
	add_func    (0X43F0DEA0,0X43F0E1D6);
	set_func_flags(0X43F0DEA0,0x5410);
	SetType(0X43F0DEA0, "char __userpurge OneTap__Features__Hooks__RunCommand@<al>(int player, C_SDK::Classes::CUserCmd *cmd, int a5, void *a4, void *m_moveHelper);");
	set_frame_size(0X43F0DEA0, 0X1C, 4, 0XC);
	define_local_var(0X43F0DEA0, 0X43F0E1D6, "[bp-0X10]", "playerVelocity");
	define_local_var(0X43F0DEA0, 0X43F0E1D6, "[bp-0XC]", "recordCurrentTime");
	define_local_var(0X43F0DEA0, 0X43F0E1D6, "[bp+0X8]", "player");
	define_local_var(0X43F0DEA0, 0X43F0E1D6, "[bp+0XC]", "cmd");
	define_local_var(0X43F0DEA0, 0X43F0E1D6, "[bp+0X10]", "a5");
	define_local_var(0X43F0DEA0, 0X43F0E1D6, "[bp+0X14]", "a4");
	add_func    (0X43F0E1E0,0X43F0E1E6);
	set_func_flags(0X43F0E1E0,0x1480);
	set_frame_size(0X43F0E1E0, 0, 0, 0);
	add_func    (0X43F0E650,0X43F0E81C);
	set_func_flags(0X43F0E650,0x5400);
	SetType(0X43F0E650, "C_SDK::Types::WeaponType __cdecl C_SDK__Player__Weapon__GetWeaponType();");
	set_frame_size(0X43F0E650, 0X8, 0, 0);
	add_func    (0X43F0E8B0,0X43F0EA3E);
	set_func_flags(0X43F0E8B0,0x5410);
	SetType(0X43F0E8B0, "char __fastcall OneTap__Features__Hooks__SetupBones(int ecx_, int edx_, int matrixPointer, signed int maxBones, int boneMask, float currentTime);");
	set_frame_size(0X43F0E8B0, 0X10, 4, 0X10);
	define_local_var(0X43F0E8B0, 0X43F0EA3E, "[bp+0X8]", "matrixPointer");
	define_local_var(0X43F0E8B0, 0X43F0EA3E, "[bp+0XC]", "maxBones");
	define_local_var(0X43F0E8B0, 0X43F0EA3E, "[bp+0X10]", "boneMask");
	define_local_var(0X43F0E8B0, 0X43F0EA3E, "[bp+0X14]", "currentTime");
	add_func    (0X43F0EDC0,0X43F0F45B);
	set_func_flags(0X43F0EDC0,0x5810);
	SetType(0X43F0EDC0, "int __userpurge OneTap__Features__RageBot__GetMissedReason__Default@<eax>(double st7_0@<st0>, _DWORD a1, char a2);");
	set_frame_size(0X43F0EDC0, 0X58, 4, 0X8);
	define_local_var(0X43F0EDC0, 0X43F0F45B, "[bp-0X38]", "a3");
	define_local_var(0X43F0EDC0, 0X43F0F45B, "[bp+0X8]", "esi0");
	add_func    (0X43F0F460,0X43F0F9D5);
	set_func_flags(0X43F0F460,0x5810);
	SetType(0X43F0F460, "int __stdcall OneTap__Features__RageBot__GetMissedReason__Legacy(int a1, char a2);");
	set_frame_size(0X43F0F460, 0X58, 4, 0X8);
	define_local_var(0X43F0F460, 0X43F0F9D5, "[bp-0X38]", "a3");
	define_local_var(0X43F0F460, 0X43F0F9D5, "[bp+0X8]", "esi0");
	define_local_var(0X43F0F460, 0X43F0F9D5, "[bp+0XC]", "a2");
	add_func    (0X43F11400,0X43F12869);
	set_func_flags(0X43F11400,0x5010);
	SetType(0X43F11400, "void __stdcall OneTap__Features__DoubleTap__Instance(int a1, int a2, int a3, __int64 cmd, float a5);");
	set_frame_size(0X43F11400, 0X290, 4, 0X18);
	define_local_var(0X43F11400, 0X43F12869, "[bp-0X1F0]", "a2");
	define_local_var(0X43F11400, 0X43F12869, "[bp-0X184]", "a1");
	define_local_var(0X43F11400, 0X43F12869, "[bp+0X10]", "a3");
	define_local_var(0X43F11400, 0X43F12869, "[bp+0X14]", "cmd");
	define_local_var(0X43F11400, 0X43F12869, "[bp+0X1C]", "a5");
	add_func    (0X43F12F00,0X43F13443);
	set_func_flags(0X43F12F00,0x5010);
	SetType(0X43F12F00, "_DWORD *__thiscall OneTap__Features__Visuals__GetSkyNameById(void *this, _DWORD *a2, int skyboxId);");
	set_frame_size(0X43F12F00, 0X38, 4, 0X8);
	define_local_var(0X43F12F00, 0X43F13443, "[bp+0XC]", "skyboxId");
	add_func    (0X43F13480,0X43F136DD);
	set_func_flags(0X43F13480,0x5400);
	set_frame_size(0X43F13480, 0XC, 0, 0);
	add_func    (0X43F15320,0X43F1553C);
	set_func_flags(0X43F15320,0x5410);
	set_frame_size(0X43F15320, 0X7C, 4, 0);
	add_func    (0X43F15600,0X43F160A4);
	set_func_flags(0X43F15600,0x5010);
	set_frame_size(0X43F15600, 0X1E8, 4, 0X4);
	add_func    (0X43F160E0,0X43F161D1);
	set_func_flags(0X43F160E0,0x5010);
	SetType(0X43F160E0, "int __thiscall C_SDK__Surface__DrawManager__StartDrawing(void *surface);");
	set_frame_size(0X43F160E0, 0X40, 4, 0);
	add_func    (0X43F161E0,0X43F162C3);
	set_func_flags(0X43F161E0,0x5010);
	set_frame_size(0X43F161E0, 0X40, 4, 0);
	add_func    (0X43F16990,0X43F16A37);
	set_func_flags(0X43F16990,0x5410);
	SetType(0X43F16990, "int OneTap__GUI__Render__Icon(int a1, int a2, int a3, int a4, int a5, int a6, const char *message, ...);");
	set_frame_size(0X43F16990, 0X328, 4, 0);
	define_local_var(0X43F16990, 0X43F16A37, "[bp-0X310]", "a4");
	define_local_var(0X43F16990, 0X43F16A37, "[bp-0X200]", "pointer");
	define_local_var(0X43F16990, 0X43F16A37, "[bp+0X8]", "a1");
	define_local_var(0X43F16990, 0X43F16A37, "[bp+0XC]", "a2");
	define_local_var(0X43F16990, 0X43F16A37, "[bp+0X10]", "a3");
	define_local_var(0X43F16990, 0X43F16A37, "[bp+0X18]", "a5");
	define_local_var(0X43F16990, 0X43F16A37, "[bp+0X1C]", "a6");
	define_local_var(0X43F16990, 0X43F16A37, "[bp+0X20]", "message");
	add_func    (0X43F16A40,0X43F16A87);
	set_func_flags(0X43F16A40,0x5410);
	SetType(0X43F16A40, "int __userpurge C_SDK__Surface__DrawManager__DrawLine@<eax>(float x0@<xmm2>, float y0@<xmm3>, C_SDK::Classes::GuiManager::DrawColor *drawColor, float x1, float y1);");
	set_frame_size(0X43F16A40, 0X8, 4, 0XC);
	define_local_var(0X43F16A40, 0X43F16A87, "[bp+0X8]", "drawColor");
	define_local_var(0X43F16A40, 0X43F16A87, "[bp+0XC]", "x1");
	define_local_var(0X43F16A40, 0X43F16A87, "[bp+0X10]", "y1");
	add_func    (0X43F1A790,0X43F1A966);
	set_func_flags(0X43F1A790,0x5410);
	SetType(0X43F1A790, "bool __cdecl C_SDK__Server__Valve__IsAimStep();");
	set_frame_size(0X43F1A790, 0X8, 4, 0);
	add_func    (0X43F1A970,0X43F1AEB4);
	set_func_flags(0X43F1A970,0x5010);
	SetType(0X43F1A970, "void __cdecl OneTap__Features__Server__UpdateData();");
	set_frame_size(0X43F1A970, 0X60, 4, 0);
	define_local_var(0X43F1A970, 0X43F1AEB4, "[bp-0X60]", "a6");
	define_local_var(0X43F1A970, 0X43F1AEB4, "[bp-0X58]", "a8");
	define_local_var(0X43F1A970, 0X43F1AEB4, "[bp-0X3E]", "isTickbaseNotShifted");
	define_local_var(0X43F1A970, 0X43F1AEB4, "[bp-0X3D]", "isServerChanged");
	define_local_var(0X43F1A970, 0X43F1AEB4, "[bp-0X38]", "previoslyServerType");
	define_local_var(0X43F1A970, 0X43F1AEB4, "[bp-0X18]", "stringBuffer");
	add_func    (0X43F1AED0,0X43F1B049);
	set_func_flags(0X43F1AED0,0x5410);
	SetType(0X43F1AED0, "void __cdecl OneTap__Utils__FixupAttackNetvars(int a1, C_SDK::Classes::CUserCmd *userCmd, char isPreFix);");
	set_frame_size(0X43F1AED0, 0X4, 4, 0);
	define_local_var(0X43F1AED0, 0X43F1B049, "[bp+0X8]", "userCmd");
	define_local_var(0X43F1AED0, 0X43F1B049, "[bp+0XC]", "isPreFix");
	add_func    (0X43F1B3C0,0X43F1B688);
	set_func_flags(0X43F1B3C0,0x5400);
	SetType(0X43F1B3C0, "int __userpurge OneTap__Features__Hooks__WndProc@<eax>(int a1@<ebp>, int a2@<edi>, float xmm0_4_0@<xmm0>, int a3, signed int vkNotification, signed int virtualKey, unsigned int a6);");
	set_func_cmt(0X43F1B3C0,	"https://docs.microsoft.com/en-us/windows/win32/inputdev/user-input", 1);
	set_frame_size(0X43F1B3C0, 0XC, 0, 0X10);
	define_local_var(0X43F1B3C0, 0X43F1B688, "[bp+0XC]", "virtualKey");
	add_func    (0X43F1C5C0,0X43F1C82F);
	set_func_flags(0X43F1C5C0,0x5410);
	SetType(0X43F1C5C0, "bool __fastcall OneTap__Features__Hooks__WriteUserCmdDeltaToBuffer(C_SDK::Classes::IBaseClientDll *ecx, int edx, int slot, int bufferWrite, int from, int to, bool isNewCmd);");
	set_frame_size(0X43F1C5C0, 0XD4, 4, 0X14);
	define_local_var(0X43F1C5C0, 0X43F1C82F, "[bp-0XCC]", "fromCmd");
	define_local_var(0X43F1C5C0, 0X43F1C82F, "[bp-0X68]", "toCmd");
	define_local_var(0X43F1C5C0, 0X43F1C82F, "[bp-0X64]", "toCmd.commandNumber");
	define_local_var(0X43F1C5C0, 0X43F1C82F, "[bp-0X60]", "toCmd.tickCount");
	define_local_var(0X43F1C5C0, 0X43F1C82F, "[bp+0X8]", "slot");
	define_local_var(0X43F1C5C0, 0X43F1C82F, "[bp+0XC]", "bufferWrite");
	define_local_var(0X43F1C5C0, 0X43F1C82F, "[bp+0X10]", "from");
	define_local_var(0X43F1C5C0, 0X43F1C82F, "[bp+0X14]", "to");
	define_local_var(0X43F1C5C0, 0X43F1C82F, "[bp+0X18]", "isNewCmd");
	add_func    (0X43F1C9C0,0X43F1C9F4);
	set_func_flags(0X43F1C9C0,0x5404);
	set_frame_size(0X43F1C9C0, 0, 0, 0X10);
	add_func    (0X43F1CA00,0X43F1CA2D);
	set_func_flags(0X43F1CA00,0x5400);
	SetType(0X43F1CA00, "void *__fastcall C_SDK__MemoryManagment__AllocaProbe(int size);");
	set_frame_size(0X43F1CA00, 0, 0, 0);
	define_local_var(0X43F1CA00, 0X43F1CA2D, "[bp+0]", "allocation");
	define_local_var(0X43F1CA00, 0X43F1CA2D, "[bp+0X4]", "size");
	add_func    (0X43F1CA30,0X43F1CA46);
	set_func_flags(0X43F1CA30,0x5440);
	SetType(0X43F1CA30, "void *__thiscall C_SDK__MemoryManagment__AllocaProbe16(int size);");
	set_frame_size(0X43F1CA30, 0, 0, 0);
	add_func    (0X43F1CA46,0X43F1CA5C);
	set_func_flags(0X43F1CA46,0x5440);
	SetType(0X43F1CA46, "void *__thiscall C_SDK__MemoryManagment__AllocaProbe8(int size);");
	set_frame_size(0X43F1CA46, 0, 0, 0);
	add_func    (0X43F1CAA0,0X43F1CAD6);
	set_func_flags(0X43F1CAA0,0x5400);
	SetType(0X43F1CAA0, "float __usercall C_SDK__Server__CalculateTickrate@<eax>(__m128i a1@<xmm0>);");
	set_frame_size(0X43F1CAA0, 0, 0, 0);
	add_func    (0X43F1CD30,0X43F1CD57);
	set_func_flags(0X43F1CD30,0x5404);
	set_frame_size(0X43F1CD30, 0, 0, 0);
	add_func    (0X43F1CD5D,0X43F1CD63);
	set_func_flags(0X43F1CD5D,0x80);
	add_func    (0X43F1CD63,0X43F1CD69);
	set_func_flags(0X43F1CD63,0x1480);
	add_func    (0X43F1CD69,0X43F1CD6F);
	set_func_flags(0X43F1CD69,0x1480);
	add_func    (0X43F1CD6F,0X43F1CD75);
	set_func_flags(0X43F1CD6F,0x5480);
	SetType(0X43F1CD6F, "double __usercall C_SDK__Math__Atan@<st0>(double@<st0>);");
	set_frame_size(0X43F1CD6F, 0, 0, 0);
	add_func    (0X43F1CD81,0X43F1CD87);
	set_func_flags(0X43F1CD81,0x1480);
	add_func    (0X43F1CDB1,0X43F1CDB7);
	set_func_flags(0X43F1CDB1,0x80);
	add_func    (0X43F1CDBD,0X43F1CDC3);
	set_func_flags(0X43F1CDBD,0x80);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	split_sreg_range(0X43DD0000,"es",0,3);
	split_sreg_range(0X447301DA,"es",0,3);
	split_sreg_range(0X43DD0000,"ss",0,3);
	split_sreg_range(0X43DD0000,"ds",0,3);
	split_sreg_range(0X43DD0000,"fs",0,3);
	split_sreg_range(0X43DD0000,"gs",0,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
	Bytes_2();
	Bytes_3();
	Bytes_4();
	Bytes_5();
	Bytes_6();
	Bytes_7();
	Bytes_8();
	Bytes_9();
	Bytes_10();
	Bytes_11();
	Bytes_12();
	Bytes_13();
	Bytes_14();
	Bytes_15();
	Bytes_16();
	Bytes_17();
	Bytes_18();
        end_type_updating(UTP_STRUCT);
}

// End of file.
